{"text": " Hello Jeroen. Hello Dillon. Well it's just you and me today, no Martins. Just you and me. So it's an Elm Radio classic. What are we talking about today? Today we're talking about Rap Early and Rap Late, something that you've mentioned quite often and in which I would attribute to you as far as I know. Yeah I think so. But it did attribute like all the tiny steps ideas to you and that turned out to be not you. Oh yeah that is very much ideas that I borrowed from, generously borrowed from Kent Beck and other thinkers on that subject. Yeah so Rap Early, Unrap Late. So I have a lot of thoughts on this topic Jeroen but I'm kind of curious if I could put you on the spot a little bit. What do you think of when you think of Rap Early, Unrap Late? Can I just cheat and say opaque types? It's always a safe bet. It's always a safe bet here. I think of decoding and I think of wrapping values into new types so that we don't pass them in the wrong locations. Stuff like that, just to add more guarantees. So that's for the Rap Early part and the Unrap Late is more for manipulating data the way that you would like to until you send them over to a server request for instance. But I'm not trying to make a nice definition here so we should, I think you should provide your definition after you say what you think of my thoughts here. Yeah I mean I think those are some good thoughts. I think we'll get into a lot of subtleties of it. So yeah, rapping like you say, it has a lot to do with constraints and I think semantics. I think we touched on this subject in our primitive obsession episode which I definitely recommend people go back and listen to if they haven't heard it. There's definitely a connection between these two topics of primitive obsession and Rap Early, Unrap Late. But you know as you say, the rapping, it's about getting your constraints in order. You know one of the things that I think is a defining feature of the Elm way of coding in my eyes is rapping things at the gate or dealing with constraints at the gate like decoding. Like if you decode JSON or flags, you don't lazily find out that there's an error. You sort of like find out about problems right away. It makes me think that it's funny because when you say, when you talk about gates, I'm like okay yeah you talk about ports, you talk about HTTP requests and stuff like that. But if you talk to a JavaScript developer and you talk about well you want to rap things at the gates and you're like what gates? Exactly right and so there are challenges with TypeScript because TypeScript can describe what a type is. But it has a lot more trouble giving you certain constraints that relate to like how you can create that type because it's sort of a casting oriented system where I mean you know you can just do JSON.parse and it has any type and then you can cast something that has an any type or you can cast something to any. You can say this value as any and then you can cast that to some value right? There are some validation packages out there that pretty much do what Elm decoders do but you don't have to and you're not forced to, you're not required to. Exactly right. That's right you can do those things but at the end of the day TypeScript is a system that is designed to allow you to cast things if you want to and Elm is a system that has no concept of casting and that is an essential difference because it means you can really trust where something came from. So to me a big part of this rap early piece of rap early unwrap late is where something came from and kind of having a stamp of something that says this is the code path which as you hinted at has a lot to do with opaque types too because if you expose a way to construct a type outside of the module it's defined in then anybody can create it. Just like in TypeScript you can cast something into a type anywhere you want and so you don't really know where did this value come from, what does it represent, what constraints does it give me. It's harder to enforce those things. So you also have a harder time figuring out has this been validated somewhere along the way. Exactly. Yeah I think of it like you know if you go into a beer garden and you get a little wristband that shows that you're of drinking age and then you can go buy beers. Is that how things work in the US? Sometimes yeah. We're very strict about making sure that people are of drinking age. I just recently saw someone who was like clearly in their 60s or 70s getting ID'd at a store when they were buying some liquor and you're like really? Really? Okay. I know that in the Netherlands they have something that says if you're above 25 you don't need to show your ID which I just don't understand. Like how can we know you're above 25 if you don't show the ID? I have never understood this one. Well it's a slippery slope right? Then you say how can you know if they're above 60? Yeah. Yep. But yeah you get that thing around your wrist and then you can trust where that came from because the only person that has those wristbands is the official place that's handing them out and you know that they're checking your ID and you know that if you take it off it will break so you can tell if you've tried to give it to somebody else. So you're sort of like getting this stamp of approval that you can trust and that's important and that's the wrapping part. So that's wrapping but the early part is important too right? And we talked about primitive obsession right? And that kind of gets into what's the ideal representation of a type and what constraints do you want to model about a type. But the early part is really important here right? Because why early? Well if there's a constraint or if there's semantic meaning to something you want to find out as soon as possible. There are a few reasons for that. One is you don't want to keep checking that. If you keep checking then it would be a little bit like every time you go to get a beer you check your ID and that's kind of annoying because maybe you want to get a few beers. So it would be nice if you could just check it once and you don't want to make people waiting in line to get their beer wait for that person. So you know it's a matter of convenience to not have to keep rechecking it constantly. Hey could I get five beers? Yes could I see your ID five times? Yeah. Yeah it's inconvenient. So that's one reason for the early part. But another reason for the early part is that it has to do more with safety. Like you want to know that the thing represents what you're checking for and the sooner you check for that the safer it is. The fewer opportunities there are for that thing to start to diverge and you to start to lose track of what the thing meant. So if you have a if something comes in as a string and you're like I think this represents a social security number or I think this represents a username. Well the farther it drifts into your code base number one the more opportunities there are to use it in a way that you that is incorrect or unsafe or undesirable. So for instance passing the email as a username and the username as the email for instance. Exactly and passing a social security number to be sent to a place where it's going to be displayed without being masked or so it's harder to. So there are more potential places where you can use the type in an unsafe way. Either that the type has a certain way of being used that you want to honor like a social security number not being displayed in certain contexts or a password and you want to make sure it is the thing that you said it was. So that's number two right is like the closer you are to the point where you receive the thing the less likely you are to mess things up. Yes because so if you do like decode field username username decoder so decode field string username username decoder you're saying I'm getting this thing this JSON value that represents the username it's called username so I'm pretty sure I'm doing that right I'm not mixing it up and then I'm doing username decoder it directly wraps it into a username at that moment so it never exists in the code base as a string if it did if you did decode that field username decode that string now you're decoding it in as a string and a little bit later in the pipeline you're going to say oh let me wrap this into a username value to say that this represents a username and to to validate that it is a correct username well again like it could drift it could you could mistakenly mix it up with something else you could pass it to a place that you're expecting to have an ID but you gave it a username you could give a place that was expecting a username an ID and also again just like you know giving your ID to to every vendor that you're buying a beer from you you're having to recheck that validation over and over again more places than you need to so so that's the you know the wrap part again it's about what are the constraints that we want for this type what does it represent how can it be used what what do we know about it and then the early part is you want to do it as soon as possible so that it is not incorrectly used and so that it is we're more confident that it is what we say it is because we don't have it floating around as a sort of primitive type that we're piecing together where we've lost context so so that piece about the the later you go the more opportunities there are for losing context and that's why i think the early part is really important and then there's the unwrapped part and in between the moment you wrap things and that you unwrap things you have all the guarantees that you have with opaque types with non primitive types so you can yeah you can do whatever you want with it yeah and and you know again that i feel like we need that you know that meme of there's a meme about opaque types pretty much it's like this doobie do where they're pulling off the mask and they're like aha it was this person all along and then they they write what it was it's just like elm radio episode pulling off the mask is like aha it was opaque types all along but yeah it does have a strong relationship with opaque types because opaque types is just this fundamental tool in elm for defining constraints right and this is a place where we want to define constraints and we where we want to understand what code paths are possible with a certain type that's opaque types that's like this very very important very powerful tool for that that again like if you expose the constructor then you lose that you lose that guarantee you can't track the code pass that some that a type might go through it's just far less constrained but um but yeah the unwrap late part is again important because you don't want to incorrectly use the type and if you unwrap it and have a string floating around again you could have this social security number or password floating around as a string and you know what what you see sometimes is you know you'll have like a user badge view function that it needs a username it needs this type of data it needs an id and if you're sort of wrapping a string to pass those functions into the user badge view that's a red flag right that you're you're not wrapping uh you're not wrapping early or you're or you're unwrapping early you're unwrapping too early or you're wrapping too late right if you're passing the primitive values you're passing the primitive values and you're wrapping them just in time to send it to a function that says it needs a username this needs a username value and you use the username constructor with your username string value that you happen to have or a hard coded string value that you happen to have that's a red flag that you are either wrapping too late or unwrapping too early and ending up which unwrapping early you know ends up being similar to wrapping late right that you're you end up with this sort of primitive value floating around that has lost the constraints the safety about how you're supposed to use it and the semantic meaning unwrapping is always when you need to use the value not for logic but to send it to some external system to elm so that would be showing it as html sending it to the virtual dom sending it on a cdp request graphql request or sending it over to a port you should not need to use you should not need to unwrap in other cases right i think your list there was pretty exhaustive as far as i can think of those would be the those sort of boundaries those terminal points so it basically you yeah how do you know that you're doing unwrap late late enough well it happens at a terminal point and as you said like that that's a very good sign that you're doing it at a terminal point because you send something through to a port and you're like well now i have to get some primitive value because i can't send this custom type through this port or you're sending an html request and hey like unfortunately i can't send this html request over the wire unless you know it's something like lame darren you do send to back end then you can you can actually unwrap even later even though technically there is something happening under the hood this is actually a very important feature of lame darren is you can trust the code the code path of like the data that that thing represents for even longer and unwrap it even later yeah because you don't you don't have that intermediate data that's it's sent over the htp or web sockets or there is but you don't see it you don't have control over it so you can't mess it up right although there is maybe um something worth noting i i actually haven't really thought about this so much or or heard this talked about but with lime dira you still i think do have to assume a potentially antagonistic client right like you can't you you can't trust the client no matter what that's just um not possible right so if you say well if i have a username then it means that it ran this check that it validates and it doesn't have these symbols right and in in lame dara if you say okay send to back end username and then that gives you this confidence that this thing has gone through this check it's passed through this gate it has this band that says somebody checked your id and you're of drinking age right well you know you you you can trust that on your client side code insofar as that matters as if if the client wants to break those guarantees by hacking some client side code then there's nothing you can do about that but you want to make sure you have a bug free experience for the code you wrote right so you can trust it in that regard but as far as trusting when you do lamb dara dot send to back end you can no longer trust the code that it went through and what you receive because it says well it a username cannot have an at symbol and it cannot have an exclamation point and if i do the only way to get a username is if it's passed through that validation because i conditionally return the username type after it's run through that check you actually can't trust that i don't i don't think uh it's possible to trust in lamb dara because somebody could hack the low level protocol and get lame dara to receive that data so you i think you would need to reperform those checks yeah i'm thinking maybe if you can sign the message somehow but i feel like the client could hack that way resign things themselves anyway too so i like that idea i wonder if there is you know theoretically a way to to sign it that that would give you that guarantee but yeah you're right that that would be the only way if it's not signed in some in some way then you have to um you cannot treat those guarantees as going across boundaries because when you receive something from the back end that type may no longer represent the constraints it promised to because it's possible to to bypass that i wonder if in all cases on the back end you could re verify the constraints like checking whether an email is indeed an email well actually email is pretty hard but uh checking whether a security number uh social security number is uh is valid then that could work out but if you need to figure out whether a list of users will that refer to one another that they're all valid that that can be a bit more tricky yeah i mean as a general concept being able to trust that something went through the exact code paths that that it's that its type would imply or the you know that that wasn't bypassed in some way by creating that low level type i just don't know if there's a way to do that across boundaries and it's pretty interesting i mean even with um mts interrupt you you're not able to do that right i feel like lambdari would be slightly safer but still not entirely safe yeah i mean it's more about like because i think people people think about the term type safety i get the sense often in the sort of javascript community there's a lot of thinking about type safety as like this is a string this is a number i can trust those things but to me that's just like scratching the surface of type safety and and to me type safety is much more about you know yes i want to know that a string is actually a string and an int is actually an int but i want to go beyond that and i want to know that a username actually went through this check it passed through this gate i can trust it and not have to do shotgun surgery like we talked about in the parse don't validate episode this parse don't validate concept i want to parse a type have it represent these constraints and be able to trust those and not have to recheck those constraints and types constantly so yeah i mean lmts interrupt is i mean it's getting data from it's kind of bridging the gap between these typescript types and elm types but again inherently like typescript types in a type system based on casting where casting is just a a tool that's given to you it severely undermines what you can trust in terms of constraints for what code paths something went through if it has a given type you just lose that ability to to depend on that 100 whereas in elm you have that and that's that's an important difference now like somebody might say well that's fine but in practice i use some linting rules that say that you don't cast yes but have you seen the disable comments right right and somebody might say like that's fine but i can depend on it enough in practice that it's going to prevent enough bugs and i'm okay with it and that's that's a reasonable opinion that's just not my opinion of how i want to maintain code i love having the hundred percent guarantees and and and that's why i love wrap early you know i'm curious about something uh related to unwrapping so it's something that every time i encounter it i'm slightly annoyed uh it's when i want to send the data over uh an htp request or if i want to uh display it so let's say i want to display the social security number and i want i mean that should be hidden probably right basically my question is should there be a two string function if the underlying data is two string so because because if you send it over to over an htp request then you need to convert it to a string so that it can be converted to a json uh encode value so that you've been sent over htp or if it's displayed as html then it needs to be converted to a string and then it gets displayed by calling html text or appending it or modifying it but but if you have that two string function then there's a slight portion of your code which has access to the raw data and they they can mess it up and now because you have this function the rest of your code base can do whatever with it so they could if they wanted to display the social social security number or the password or whatever so like i know that you can instead of having a two string function you could have a two htp encode value which would work but then potentially ties you to some to some data structure like if if it's a complex thing then you can say oh well uh i'm going to encode it as an object where this field is encoded as under this field and this field is encoded in this field in this format and that would work in one case but not in another and so yeah you're either tying yourself up to a specific format a specific use case or you're allowing the entire code base to to misuse your previously opaque type or you get what i mean right yeah no that's a very good point so i um i actually wrote a post to my mailing list a while back on this but i um and i didn't publish it on my incremental blog but i will um before we release this episode i will publish this post there and i'll include a link in the show notes but it's about so i i have a blog post about entry gatekeepers and i have a blog post about exit gatekeepers and the exit gatekeepers one is sort of these like exactly what you're describing of like how do you make sure that you're using this this opaque type in the desired way and how do you wrap late you know and and basically unwrap late oh thank you yeah unwrap late and so there are two sides of this coin the wrap early part there are techniques like conditionally returning a type when you validate it and things like that right those are some tools you use to to wrap early and also you can define you can define ways of of retrieving the thing if you're um you know you could even uh define a um a command to get your you know your access token or something like that if if you can do that if you can like package it up so that there's this thing that goes and gets this value and you don't have to deal with primitive low level details like json decoding and things like that you can move all of that into your module where you have that opaque type that's ideal but so basically what i try to do is i try to move the logic for both wrapping and unwrapping into that opaque type module so so like in the example of a social security number like you were saying like if you give a two string you sort of are making it very tempting to unwrap early and to just then go and lose those guarantees and you know similarly if you have a from string that sort of casting thing that we are sort of talking about like you know like i was saying with typescript you can just cast a value to this type if you have from string it's kind of similar to doing that you mean a from string that doesn't return a maybe opaque type or that doesn't do any validation good point it depends so it depends on what the validation is if the validation is a username then you're right having a from string for a username is totally fine because if you're saying username represents that this is a valid username i don't care where it came from i just care that it's valid then you're right from string it's totally fine as long as it conditionally returns the thing where it matters is if you have from string for a place that represents what the thing is so like an email address that actually is a valid email address or you know an authentication token that actually is a work working authentication token represents that it's not just like the right number of characters but it actually is one it came from this place yeah you you know that it came from the server or something like that right from string doesn't tell you where a thing came from so ideally if the if the type is supposed to represent not just that this is a valid that this is run through a validation if it's run through validation from string is great if it's trying to represent where a thing came from then you ideally want to have the logic for going and getting that thing in the opaque types module because then the only way you can get that thing is by using that code that's exposed from the opaque type yeah so for one example of that or the actually the only example i have for that is using decoders and that's makes sure that you that it comes from either an HTTP request or a port or that you encoded a value by manually creating some json and then decoding it directly again so you don't have a full guarantee but yeah almost yeah i mean the more of a guarantee you can get the better you know if you if you say like if you have a check that says that an email address is is valid and the only way you can check that is by going to some server and you know sending an email and seeing that it gets approved or or getting in from the database and which has its own checks whatever yeah exactly but it makes a request that goes and gets that from the server and it checks that then you can have your verified email type and you can say how do i get a verified email well the only way to construct a verified email type that it's an opaque type meaning the constructor for verified email is not exposed outside the verified email module so the only way to create one is not from string there's no from string because you can't validate that it is a verified email just by giving it a string there is a you know verified email dot HTTP request that takes a string of an email address it sends it to the server and the server sends back and it and it decodes it decodes into a verified email if it is one so it decodes into a maybe verified email or whatever right yeah so yeah basically the you need a decoder for this to work and if you actually have the htcp request itself including hitting a certain endpoint right then you like if you really trust that I the only way I can get a verified email type is if I am going through this check on the back end so what you mean is that this module should also be the one to create the HTTP request to get the okay yeah sorry I'm exactly I miss that then you can really trust it and again this is like you know if if a malicious client wants to lose those guarantees then it's a client right but this is for bugs right we're talking if we're talking about front end code then we're talking about presentational bugs we're talking about airtight logic that if somebody's not trying to circumvent these things they're not going to see these bugs right yeah I mean I mean to the problem is when you send malicious things to the server anyway and you might as well just do a curl instead of manipulating the front end so right right totally sure people could do it but there are simple way simpler ways around it okay yeah so you do the the request from inside this module and you decode from inside the module so if you want to check something you only have to check whatever is in the module gotcha exactly and then for unwrapping yep right so it's you know it's the same basic concept it's like you know sometimes I think of it like a one stop shop I don't know if you know that phrase but it's let's define it just for those who don't know that I heard of it but I'm not entirely sure it's just sort of like a hokey phrase it's like a cheesy way of saying like come on down to Bill's Boot Barn you can get all your it's your one stop shop for all your rodeo needs you need a lasso and a hat and boots and everything related to going to the rodeo it's your one stop shop right so like that's what you want these opaque types to be if you want to unwrap early and wrap wrap early unwrap late it's just called a supermarket didn't yeah yeah yeah a supermarket is your one stop shop for everything so pretty much although the supermarket you want it to be more of like a boutique shop because the supermarket is responsible for everything but if it's responsible for everything then you're not shielding these different concerns from each other and you're exposing their internals to each other so you want a boutique one stop shop that is a market I also don't want that boutique to be a crook but yeah that too yeah so so basically you know I have a social security number and you have your opaque type how do you make it a one stop shop well how do I get a social security number and how do I use a social security number so so like you were talking about these terminal points where you're forced to unwrap that's where you want to unwrap but then what part of the code is responsible for unwrapping well if you really want to make sure that it's only used in the desired way right so there's like make impossible states impossible but then what about like use data in the desired ways right and that's what the one stop shop is for so when you get to those terminal points sure you could say social security number dot two string but what what that means is that you then have to very carefully ensure that every place in your code base that you call social security number dot two string is done honoring those constraints and responsibly yes exactly exactly right so but if you put that responsibility in the one stop shop you have the social security number module which contains an opaque type it doesn't expose a way to construct one arbitrarily and you say social security number dot view right and so and you can say like social security number dot you could have a masked view if the only way you want to present it in the UI you know maybe you have some input box that if it's focused it's unmasked and if it's not focused it's masked right you could you you could honor that logic in the social security number module right so if you define that that kind of view logic in that module now you only need to look in your one stop shop and that's responsible for it and no other code needs to take on that responsibility yeah but it does tie you to a specific implementation like if you want to have that masked input masked input then it needs to look a specific way and if you want to use it in a different place where it looks slightly different then you're going to need to put that in the same module as well and I can imagine that this could get tricky if you need information from another opaque type as well which uses the same techniques like you need to show both the social security number and some other secret id or number and like both neither of them can show the other so yeah so you necessarily need to put it to give one more control through there or just give control to another module so you definitely have to be careful about where you draw those dividing lines of those boundaries for your opaque types and yeah you you know you you want to decouple these things as much as you can but I think it's a pretty pretty powerful technique especially when you want to be like again for something like a social security number like I I think you have to think about what constraints do you want to to enforce and you know if it's like valid username then you can you can have a from string that's fine right like yeah like how important is it for you to to get the thing right how how costful for you is it to get things wrong social security number pretty important so let's add more security around it let's make it a bit more tricky let's maybe give it a bit more responsibility but for a username for an email address like add a to string add a from string it's fine as long as we can remove most of these errors of related to primitive obsession for instance you should be fine right I mean that's that's about some being pragmatic to some extent right it's like do how much security do we need how likely is it to that you get an error and that it stays there for a while and or that it even gets to production yes I think it's as you say it's pragmatic and it's also just what unique things do you need to do with the type if there's unique logic for how you present a social security number or serializes social security number then in addition to being sensitive and and wanting to be sure that you're carefully managing it and and safely managing it there's also specific logic for how to present it and serialize it right maybe you if you're whatever you know encrypting it before you serialize it to send it to the server or something like that then it's nice to have that logic live alongside it so you can be sure that it's being managed correctly it is a valid username right you have a username type you say username dot from string again the username doesn't tell you where it came from it just tells you that it went through this validation that said this doesn't have any at symbols or exclamation points or it has one at the beginning right depending on the platform right right right yeah whatever checks it has it it's checking those and then how do you display it well just give me the string i just want to put it i want to put it somewhere and i just need the string and that's that that can be fine right so like my point is um it's not only about being pragmatic and saying like how bad would it be if this was used incorrectly how how carefully do i need to manage this to be sure i'm sensitively managing this data but it's also about is there any special logic and if it's like a username it's like no i just want to show this username here there's nothing special about how i show a username i just need the string now because i'd like to put it on the screen you know or i want to get you know i want to compare these two usernames and just give me the strings so i can compare them you know there's no special logic for how i compare two usernames so i don't need to define a username dot is equal function because there's nothing special about that so why would i right so in that case you just don't get any value from defining any distinct functions you just want to get that primitive value when you when you unwrap it and you want to try to unwrap late but it's fine to just then get the primitive and use that so those are the things that i'm thinking about when i'm deciding which which path to go down so there's one area that i've been sort of thinking about in relation to this wrap early unwrap late technique which is deriving this concept of deriving from a source of truth so i think one one important distinction about deriving about wrapping is you don't necessarily need you don't need to parse things into highly structured data in order to wrap yeah you can just add a custom type constructor for username for instance right exactly and it's just wrapping a string and you know so often you want to parse don't validate so you don't want to keep repeatedly checking for an error state over and over but but it can be okay to just wrap something and say hey this thing represents this type of thing and just put a wrapper around a low level type it doesn't so you know sometimes we can like i've been thinking about this with um with managing forms for example like client side form validation i've been sort of questioning this like kind of classic elm way of dealing with forms where we have like a record with first name last name which are strings and we have this like highly structured type you mean to say that not all forms need to contain the first name and the last name well that was just saying i mean more like why do we care what particular fields there could be why don't like why don't we just have key value pairs and say hey these are just at the end of the day the low level representation is just a string and anytime the user types a character i need to validate that to tell them if there are errors and why do we go to the trouble of having this highly structured data so sometimes like prematurely parsing data into something more structured doesn't provide value because we want to sort of have the low level representation keep our options open about how to use it and then derive that for example you can submit form data to a server because you have this nice key value pair right so if you want to unwrap to send something to a server and you need some low level representation you have one if you have form data you have these key value pairs but if you eagerly parse it into this more structured data of a record with with string values then now you've made it structured and you need to sort of make it less structured to serialize it to the server and send it send those as json or whatever where you actually kind of had that already so why go to the trouble of creating that structure prematurely well the nice thing if you do a proper record proper data structure is that it is easy to see what is in the form right like i don't have to look at the view function or the update function probably the view function in your use case to see what fields i'm interested in i see first name okay well i know that i don't care about the first name in this example and then it is somewhat easy to know which fields to to make required and which fields to wait until we have them to send them over to htp to to know that we have that we are done if you put all of that in the view you don't have a nice data structure or some other mechanism that i haven't thought about yet then it can be pretty hard to to know what's happening in your form right i think so what i'm sort of exploring is more i mean there are apis for sort of um decoding forms right that sort of thing and i'm i'm exploring more an idea of taking that low level like i i think of it as the lowest common denominator meaning that it's not highly structured it can be used many different places and those key value pairs are the most basic low level thing that you can derive many things from including running a form decoder or form parser or whatever you want to call it to say hey i expect a first name i expect it to be non empty i expect it to start with an uppercase letter or whatever you know whatever validation logic you have you expect the check in date to be before the checkout date you expect this day to be no longer than this number of days and at least this number of days whatever you have those client side checks to me the source of truth would be that sort of form decoder not and and the form decoder not the values in the form themselves well the source of truth about what fields it expects to be present oh yeah yeah so well you could still have inputs that are not being decoded like you you could mess that up you could have an input for h and then you don't decode that in your decoder but then you could say you know you could have something where you you get the you get some html attributes to put into the into your view for the form inputs from that form decoder right so but but if that's your source of truth then you don't need to decode into this structured intermediary representation like to me there's something distasteful about that idea of having an overly structured intermediary representation like i want to have if i can immediately parse something into a well structured representation right away and i don't need to do anything else with it that's great or otherwise if something you know with with form data it's something that's changing on every keystroke and it's going it can go from invalid to valid to invalid to valid then having a highly structured intermediary representation doesn't give me anything and in fact it like adds all this wiring if you want to have logic that says you know i want to track the state for each one you need to wire up messages for each of those you need to make sure you're wiring them up correctly you need to manage this form state carefully that's saying whether a field has been blurred or focused before and so i like the idea of being able to have like a low level representation where you have logic that can deal with those basic building blocks rather than like having it coupled to this specific intermediary representation that that feels off to me yeah there's also something that is very disappointing with the intermediate representation is that it's still quite low level code or low level low level data right because for instance if you if you request the age and age should be a number and you have an input for that which where you can type in whatever number maybe even a string but there is some yes there there is some input fields that only accept the numbers but they still accept the letter e i think for exponentiation right if someone removes the last character then you end up with a empty string and that is not decodable to a number and that usually creates some problems like the cursor moving stuff like that so what we generally recommend people to do is to store the string anyway in the model and then to whenever you want to do something with it save it validate it send it over to the hdp request then you parse it then you validate it you decode it into a proper age which is an integer and if you fail then you don't do any of those things so yeah even if you have a nice record a nice model you still need to store lower level data than you would like to and that has been that is annoying yeah yeah and you you have to you know have a lot of logic that's highly coupled to your implementation and as your implementation changes as you add new fields and change fields you need to keep writing code to manage those new pieces which just doesn't feel right it's like you should just be able to write a form decoder and have the the logic for maintaining that low level state because it is low level state not be coupled to your specific you know implementation and so so yeah so i think that's i'm exploring some of those things for for an api i'm working on in on pages three but it it's made me think a little bit about you know this you know it's somewhat related but it's this concept of deriving from from a source of truth and what should the representation of the source of truth be but ideally you wrap that at least to to have it represent the the types of interactions you can have with it and again this this like wrapping it's not that you can never use like a low level representation like a dictionary or something like that but you should think about what kinds like what do these types allow you to do with with them and if they allow you to do undesirable things with them then you should wrap it and prevent those and define the interface you want for it so if you um if you shouldn't be able to insert something into it except through a form field getting changed then if you have a dictionary you're inviting that type of interaction so you don't get to control the interface of how you want something to be used so you know the the wrapping comes down to um defining what a type represents what validations does it represent does it represent anything about where a place came from and does it what what constraints do you want to capture for how the thing can be used where the thing can be used and how to present it and how to use it well maybe we should uh maybe we should wrap early on this one or are we unwrapping late no no that doesn't no that doesn't make any sense so do you have any tips on how to get started with wrap early and unwrap late other than the ones that we've mentioned so far and using opaque types and avoiding primitive obsession uh yeah definitely uh if you if you haven't give those episodes a listen because there's a lot of relevant stuff in in our intro to opaque types episode and in i mean honestly it's required listening we should if if we could have a check at the gate before somebody listens to to elm radio they must listen to our intro to opaque types then we would but we don't know how to do that yet we're working on it yeah definitely give those listen i'll drop some links to my blog posts about entry and exit gatekeepers and yeah i also i've mentioned it on a previous episode but i have a there's a youtube video where i presented some ideas walking through some of this stuff about the social security number example so i'll drop a link to that and yeah otherwise you know again i mean experiment with it and pay attention to what are the constraints you know we talked about like the pragmatic concerns and also just like saying what what constraints do you want it's at the end of the day you've got to think about the problems you're solving there's no no way around it there's no one size fits all solution because it completely depends on the constraints you're trying to model so really think about your constraints and think about how your types support those constraints or or not and and think about are you are you managing those constraints in one centralized place in an opaque types module or are you managing those constraints everywhere you use the type all around your code base to me that's the that's the big question i'm asking when i'm um how how much can i trust a type by using the interface it exposes for me to use it versus how much do i have to carefully manage those constraints outside of that so that it's a question of like where does the responsibility belong and it it just kind of feels off if i'm really worried about hmm i want to make sure i don't mess up how i'm using the social security number and i'm not working in the social security number module that feels off that feels like wait that shouldn't be my responsibility i should be able to trust this module to use it safely so i should delegate some more of that responsibility there and constrain what i can do with uh you know how i can create it should be more constrained and how i can use it from within that module should be more constrained instead of just exposing two string well you're in until next time until next time", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.040000000000001, "text": " Hello Jeroen. Hello Dillon. Well it's just you and me today, no Martins. Just you and", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 1042, 309, 311, 445, 291, 293, 385, 965, 11, 572, 5807, 1292, 13, 1449, 291, 293, 50866, 50866, 385, 13, 407, 309, 311, 364, 2699, 76, 17296, 7230, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 321, 434, 1417, 51227, 51227, 466, 16184, 18344, 293, 16184, 31220, 11, 746, 300, 291, 600, 2835, 1596, 2049, 293, 294, 597, 51470, 51470, 286, 576, 19667, 281, 291, 382, 1400, 382, 286, 458, 13, 865, 286, 519, 370, 13, 583, 309, 630, 19667, 411, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.19272806289348196, "compression_ratio": 1.5779816513761469, "no_caption_prob": 0.17509019374847412}, {"id": 1, "seek": 0, "start": 10.040000000000001, "end": 17.26, "text": " me. So it's an Elm Radio classic. What are we talking about today? Today we're talking", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 1042, 309, 311, 445, 291, 293, 385, 965, 11, 572, 5807, 1292, 13, 1449, 291, 293, 50866, 50866, 385, 13, 407, 309, 311, 364, 2699, 76, 17296, 7230, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 321, 434, 1417, 51227, 51227, 466, 16184, 18344, 293, 16184, 31220, 11, 746, 300, 291, 600, 2835, 1596, 2049, 293, 294, 597, 51470, 51470, 286, 576, 19667, 281, 291, 382, 1400, 382, 286, 458, 13, 865, 286, 519, 370, 13, 583, 309, 630, 19667, 411, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.19272806289348196, "compression_ratio": 1.5779816513761469, "no_caption_prob": 0.17509019374847412}, {"id": 2, "seek": 0, "start": 17.26, "end": 22.12, "text": " about Rap Early and Rap Late, something that you've mentioned quite often and in which", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 1042, 309, 311, 445, 291, 293, 385, 965, 11, 572, 5807, 1292, 13, 1449, 291, 293, 50866, 50866, 385, 13, 407, 309, 311, 364, 2699, 76, 17296, 7230, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 321, 434, 1417, 51227, 51227, 466, 16184, 18344, 293, 16184, 31220, 11, 746, 300, 291, 600, 2835, 1596, 2049, 293, 294, 597, 51470, 51470, 286, 576, 19667, 281, 291, 382, 1400, 382, 286, 458, 13, 865, 286, 519, 370, 13, 583, 309, 630, 19667, 411, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.19272806289348196, "compression_ratio": 1.5779816513761469, "no_caption_prob": 0.17509019374847412}, {"id": 3, "seek": 0, "start": 22.12, "end": 29.28, "text": " I would attribute to you as far as I know. Yeah I think so. But it did attribute like", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 1042, 309, 311, 445, 291, 293, 385, 965, 11, 572, 5807, 1292, 13, 1449, 291, 293, 50866, 50866, 385, 13, 407, 309, 311, 364, 2699, 76, 17296, 7230, 13, 708, 366, 321, 1417, 466, 965, 30, 2692, 321, 434, 1417, 51227, 51227, 466, 16184, 18344, 293, 16184, 31220, 11, 746, 300, 291, 600, 2835, 1596, 2049, 293, 294, 597, 51470, 51470, 286, 576, 19667, 281, 291, 382, 1400, 382, 286, 458, 13, 865, 286, 519, 370, 13, 583, 309, 630, 19667, 411, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.19272806289348196, "compression_ratio": 1.5779816513761469, "no_caption_prob": 0.17509019374847412}, {"id": 4, "seek": 2928, "start": 29.28, "end": 36.44, "text": " all the tiny steps ideas to you and that turned out to be not you. Oh yeah that is very much", "tokens": [50364, 439, 264, 5870, 4439, 3487, 281, 291, 293, 300, 3574, 484, 281, 312, 406, 291, 13, 876, 1338, 300, 307, 588, 709, 50722, 50722, 3487, 300, 286, 26805, 490, 11, 48983, 26805, 490, 15843, 19184, 293, 661, 37895, 322, 300, 51066, 51066, 3983, 13, 865, 370, 16184, 18344, 11, 1156, 4007, 31220, 13, 407, 286, 362, 257, 688, 295, 4598, 322, 341, 4829, 508, 2032, 268, 51539, 51539, 457, 286, 478, 733, 295, 6369, 498, 286, 727, 829, 291, 322, 264, 4008, 257, 707, 857, 13, 708, 360, 291, 519, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1315787599441853, "compression_ratio": 1.536480686695279, "no_caption_prob": 0.00010717881377786398}, {"id": 5, "seek": 2928, "start": 36.44, "end": 43.32, "text": " ideas that I borrowed from, generously borrowed from Kent Beck and other thinkers on that", "tokens": [50364, 439, 264, 5870, 4439, 3487, 281, 291, 293, 300, 3574, 484, 281, 312, 406, 291, 13, 876, 1338, 300, 307, 588, 709, 50722, 50722, 3487, 300, 286, 26805, 490, 11, 48983, 26805, 490, 15843, 19184, 293, 661, 37895, 322, 300, 51066, 51066, 3983, 13, 865, 370, 16184, 18344, 11, 1156, 4007, 31220, 13, 407, 286, 362, 257, 688, 295, 4598, 322, 341, 4829, 508, 2032, 268, 51539, 51539, 457, 286, 478, 733, 295, 6369, 498, 286, 727, 829, 291, 322, 264, 4008, 257, 707, 857, 13, 708, 360, 291, 519, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1315787599441853, "compression_ratio": 1.536480686695279, "no_caption_prob": 0.00010717881377786398}, {"id": 6, "seek": 2928, "start": 43.32, "end": 52.78, "text": " subject. Yeah so Rap Early, Unrap Late. So I have a lot of thoughts on this topic Jeroen", "tokens": [50364, 439, 264, 5870, 4439, 3487, 281, 291, 293, 300, 3574, 484, 281, 312, 406, 291, 13, 876, 1338, 300, 307, 588, 709, 50722, 50722, 3487, 300, 286, 26805, 490, 11, 48983, 26805, 490, 15843, 19184, 293, 661, 37895, 322, 300, 51066, 51066, 3983, 13, 865, 370, 16184, 18344, 11, 1156, 4007, 31220, 13, 407, 286, 362, 257, 688, 295, 4598, 322, 341, 4829, 508, 2032, 268, 51539, 51539, 457, 286, 478, 733, 295, 6369, 498, 286, 727, 829, 291, 322, 264, 4008, 257, 707, 857, 13, 708, 360, 291, 519, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1315787599441853, "compression_ratio": 1.536480686695279, "no_caption_prob": 0.00010717881377786398}, {"id": 7, "seek": 2928, "start": 52.78, "end": 57.66, "text": " but I'm kind of curious if I could put you on the spot a little bit. What do you think", "tokens": [50364, 439, 264, 5870, 4439, 3487, 281, 291, 293, 300, 3574, 484, 281, 312, 406, 291, 13, 876, 1338, 300, 307, 588, 709, 50722, 50722, 3487, 300, 286, 26805, 490, 11, 48983, 26805, 490, 15843, 19184, 293, 661, 37895, 322, 300, 51066, 51066, 3983, 13, 865, 370, 16184, 18344, 11, 1156, 4007, 31220, 13, 407, 286, 362, 257, 688, 295, 4598, 322, 341, 4829, 508, 2032, 268, 51539, 51539, 457, 286, 478, 733, 295, 6369, 498, 286, 727, 829, 291, 322, 264, 4008, 257, 707, 857, 13, 708, 360, 291, 519, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.1315787599441853, "compression_ratio": 1.536480686695279, "no_caption_prob": 0.00010717881377786398}, {"id": 8, "seek": 5766, "start": 57.66, "end": 65.11999999999999, "text": " of when you think of Rap Early, Unrap Late? Can I just cheat and say opaque types? It's", "tokens": [50364, 295, 562, 291, 519, 295, 16184, 18344, 11, 1156, 4007, 31220, 30, 1664, 286, 445, 17470, 293, 584, 42687, 3467, 30, 467, 311, 50737, 50737, 1009, 257, 3273, 778, 13, 467, 311, 1009, 257, 3273, 778, 510, 13, 286, 519, 295, 979, 8616, 293, 286, 519, 295, 21993, 51213, 51213, 4190, 666, 777, 3467, 370, 300, 321, 500, 380, 1320, 552, 294, 264, 2085, 9253, 13, 31347, 411, 300, 11, 51551, 51551, 445, 281, 909, 544, 32567, 13, 407, 300, 311, 337, 264, 16184, 18344, 644, 293, 264, 1156, 4007, 31220, 307, 544, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.07969408428546079, "compression_ratio": 1.6651162790697673, "no_caption_prob": 4.331224045017734e-05}, {"id": 9, "seek": 5766, "start": 65.11999999999999, "end": 74.64, "text": " always a safe bet. It's always a safe bet here. I think of decoding and I think of wrapping", "tokens": [50364, 295, 562, 291, 519, 295, 16184, 18344, 11, 1156, 4007, 31220, 30, 1664, 286, 445, 17470, 293, 584, 42687, 3467, 30, 467, 311, 50737, 50737, 1009, 257, 3273, 778, 13, 467, 311, 1009, 257, 3273, 778, 510, 13, 286, 519, 295, 979, 8616, 293, 286, 519, 295, 21993, 51213, 51213, 4190, 666, 777, 3467, 370, 300, 321, 500, 380, 1320, 552, 294, 264, 2085, 9253, 13, 31347, 411, 300, 11, 51551, 51551, 445, 281, 909, 544, 32567, 13, 407, 300, 311, 337, 264, 16184, 18344, 644, 293, 264, 1156, 4007, 31220, 307, 544, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.07969408428546079, "compression_ratio": 1.6651162790697673, "no_caption_prob": 4.331224045017734e-05}, {"id": 10, "seek": 5766, "start": 74.64, "end": 81.4, "text": " values into new types so that we don't pass them in the wrong locations. Stuff like that,", "tokens": [50364, 295, 562, 291, 519, 295, 16184, 18344, 11, 1156, 4007, 31220, 30, 1664, 286, 445, 17470, 293, 584, 42687, 3467, 30, 467, 311, 50737, 50737, 1009, 257, 3273, 778, 13, 467, 311, 1009, 257, 3273, 778, 510, 13, 286, 519, 295, 979, 8616, 293, 286, 519, 295, 21993, 51213, 51213, 4190, 666, 777, 3467, 370, 300, 321, 500, 380, 1320, 552, 294, 264, 2085, 9253, 13, 31347, 411, 300, 11, 51551, 51551, 445, 281, 909, 544, 32567, 13, 407, 300, 311, 337, 264, 16184, 18344, 644, 293, 264, 1156, 4007, 31220, 307, 544, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.07969408428546079, "compression_ratio": 1.6651162790697673, "no_caption_prob": 4.331224045017734e-05}, {"id": 11, "seek": 5766, "start": 81.4, "end": 86.4, "text": " just to add more guarantees. So that's for the Rap Early part and the Unrap Late is more", "tokens": [50364, 295, 562, 291, 519, 295, 16184, 18344, 11, 1156, 4007, 31220, 30, 1664, 286, 445, 17470, 293, 584, 42687, 3467, 30, 467, 311, 50737, 50737, 1009, 257, 3273, 778, 13, 467, 311, 1009, 257, 3273, 778, 510, 13, 286, 519, 295, 979, 8616, 293, 286, 519, 295, 21993, 51213, 51213, 4190, 666, 777, 3467, 370, 300, 321, 500, 380, 1320, 552, 294, 264, 2085, 9253, 13, 31347, 411, 300, 11, 51551, 51551, 445, 281, 909, 544, 32567, 13, 407, 300, 311, 337, 264, 16184, 18344, 644, 293, 264, 1156, 4007, 31220, 307, 544, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.07969408428546079, "compression_ratio": 1.6651162790697673, "no_caption_prob": 4.331224045017734e-05}, {"id": 12, "seek": 8640, "start": 86.4, "end": 94.84, "text": " for manipulating data the way that you would like to until you send them over to a server", "tokens": [50364, 337, 40805, 1412, 264, 636, 300, 291, 576, 411, 281, 1826, 291, 2845, 552, 670, 281, 257, 7154, 50786, 50786, 5308, 337, 5197, 13, 583, 286, 478, 406, 1382, 281, 652, 257, 1481, 7123, 510, 370, 321, 820, 11, 51056, 51056, 286, 519, 291, 820, 2893, 428, 7123, 934, 291, 584, 437, 291, 519, 295, 452, 4598, 51346, 51346, 510, 13, 865, 286, 914, 286, 519, 729, 366, 512, 665, 4598, 13, 286, 519, 321, 603, 483, 666, 257, 688, 295, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.14516309850356157, "compression_ratio": 1.6587677725118484, "no_caption_prob": 4.757456190418452e-05}, {"id": 13, "seek": 8640, "start": 94.84, "end": 100.24000000000001, "text": " request for instance. But I'm not trying to make a nice definition here so we should,", "tokens": [50364, 337, 40805, 1412, 264, 636, 300, 291, 576, 411, 281, 1826, 291, 2845, 552, 670, 281, 257, 7154, 50786, 50786, 5308, 337, 5197, 13, 583, 286, 478, 406, 1382, 281, 652, 257, 1481, 7123, 510, 370, 321, 820, 11, 51056, 51056, 286, 519, 291, 820, 2893, 428, 7123, 934, 291, 584, 437, 291, 519, 295, 452, 4598, 51346, 51346, 510, 13, 865, 286, 914, 286, 519, 729, 366, 512, 665, 4598, 13, 286, 519, 321, 603, 483, 666, 257, 688, 295, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.14516309850356157, "compression_ratio": 1.6587677725118484, "no_caption_prob": 4.757456190418452e-05}, {"id": 14, "seek": 8640, "start": 100.24000000000001, "end": 106.04, "text": " I think you should provide your definition after you say what you think of my thoughts", "tokens": [50364, 337, 40805, 1412, 264, 636, 300, 291, 576, 411, 281, 1826, 291, 2845, 552, 670, 281, 257, 7154, 50786, 50786, 5308, 337, 5197, 13, 583, 286, 478, 406, 1382, 281, 652, 257, 1481, 7123, 510, 370, 321, 820, 11, 51056, 51056, 286, 519, 291, 820, 2893, 428, 7123, 934, 291, 584, 437, 291, 519, 295, 452, 4598, 51346, 51346, 510, 13, 865, 286, 914, 286, 519, 729, 366, 512, 665, 4598, 13, 286, 519, 321, 603, 483, 666, 257, 688, 295, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.14516309850356157, "compression_ratio": 1.6587677725118484, "no_caption_prob": 4.757456190418452e-05}, {"id": 15, "seek": 8640, "start": 106.04, "end": 112.14000000000001, "text": " here. Yeah I mean I think those are some good thoughts. I think we'll get into a lot of", "tokens": [50364, 337, 40805, 1412, 264, 636, 300, 291, 576, 411, 281, 1826, 291, 2845, 552, 670, 281, 257, 7154, 50786, 50786, 5308, 337, 5197, 13, 583, 286, 478, 406, 1382, 281, 652, 257, 1481, 7123, 510, 370, 321, 820, 11, 51056, 51056, 286, 519, 291, 820, 2893, 428, 7123, 934, 291, 584, 437, 291, 519, 295, 452, 4598, 51346, 51346, 510, 13, 865, 286, 914, 286, 519, 729, 366, 512, 665, 4598, 13, 286, 519, 321, 603, 483, 666, 257, 688, 295, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.14516309850356157, "compression_ratio": 1.6587677725118484, "no_caption_prob": 4.757456190418452e-05}, {"id": 16, "seek": 11214, "start": 112.14, "end": 118.8, "text": " subtleties of it. So yeah, rapping like you say, it has a lot to do with constraints and", "tokens": [50364, 7257, 2631, 530, 295, 309, 13, 407, 1338, 11, 44333, 411, 291, 584, 11, 309, 575, 257, 688, 281, 360, 365, 18491, 293, 50697, 50697, 286, 519, 4361, 45298, 13, 286, 519, 321, 9828, 322, 341, 3983, 294, 527, 28540, 30521, 3500, 51057, 51057, 597, 286, 2138, 2748, 561, 352, 646, 293, 2140, 281, 498, 436, 2378, 380, 2198, 309, 13, 821, 311, 51248, 51248, 2138, 257, 4984, 1296, 613, 732, 8378, 295, 28540, 30521, 293, 16184, 18344, 11, 51521, 51521, 1156, 4007, 31220, 13, 583, 291, 458, 382, 291, 584, 11, 264, 44333, 11, 309, 311, 466, 1242, 428, 18491, 294, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.14599332269632592, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4063531125430018e-05}, {"id": 17, "seek": 11214, "start": 118.8, "end": 126.0, "text": " I think semantics. I think we touched on this subject in our primitive obsession episode", "tokens": [50364, 7257, 2631, 530, 295, 309, 13, 407, 1338, 11, 44333, 411, 291, 584, 11, 309, 575, 257, 688, 281, 360, 365, 18491, 293, 50697, 50697, 286, 519, 4361, 45298, 13, 286, 519, 321, 9828, 322, 341, 3983, 294, 527, 28540, 30521, 3500, 51057, 51057, 597, 286, 2138, 2748, 561, 352, 646, 293, 2140, 281, 498, 436, 2378, 380, 2198, 309, 13, 821, 311, 51248, 51248, 2138, 257, 4984, 1296, 613, 732, 8378, 295, 28540, 30521, 293, 16184, 18344, 11, 51521, 51521, 1156, 4007, 31220, 13, 583, 291, 458, 382, 291, 584, 11, 264, 44333, 11, 309, 311, 466, 1242, 428, 18491, 294, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.14599332269632592, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4063531125430018e-05}, {"id": 18, "seek": 11214, "start": 126.0, "end": 129.82, "text": " which I definitely recommend people go back and listen to if they haven't heard it. There's", "tokens": [50364, 7257, 2631, 530, 295, 309, 13, 407, 1338, 11, 44333, 411, 291, 584, 11, 309, 575, 257, 688, 281, 360, 365, 18491, 293, 50697, 50697, 286, 519, 4361, 45298, 13, 286, 519, 321, 9828, 322, 341, 3983, 294, 527, 28540, 30521, 3500, 51057, 51057, 597, 286, 2138, 2748, 561, 352, 646, 293, 2140, 281, 498, 436, 2378, 380, 2198, 309, 13, 821, 311, 51248, 51248, 2138, 257, 4984, 1296, 613, 732, 8378, 295, 28540, 30521, 293, 16184, 18344, 11, 51521, 51521, 1156, 4007, 31220, 13, 583, 291, 458, 382, 291, 584, 11, 264, 44333, 11, 309, 311, 466, 1242, 428, 18491, 294, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.14599332269632592, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4063531125430018e-05}, {"id": 19, "seek": 11214, "start": 129.82, "end": 135.28, "text": " definitely a connection between these two topics of primitive obsession and Rap Early,", "tokens": [50364, 7257, 2631, 530, 295, 309, 13, 407, 1338, 11, 44333, 411, 291, 584, 11, 309, 575, 257, 688, 281, 360, 365, 18491, 293, 50697, 50697, 286, 519, 4361, 45298, 13, 286, 519, 321, 9828, 322, 341, 3983, 294, 527, 28540, 30521, 3500, 51057, 51057, 597, 286, 2138, 2748, 561, 352, 646, 293, 2140, 281, 498, 436, 2378, 380, 2198, 309, 13, 821, 311, 51248, 51248, 2138, 257, 4984, 1296, 613, 732, 8378, 295, 28540, 30521, 293, 16184, 18344, 11, 51521, 51521, 1156, 4007, 31220, 13, 583, 291, 458, 382, 291, 584, 11, 264, 44333, 11, 309, 311, 466, 1242, 428, 18491, 294, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.14599332269632592, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4063531125430018e-05}, {"id": 20, "seek": 11214, "start": 135.28, "end": 142.04, "text": " Unrap Late. But you know as you say, the rapping, it's about getting your constraints in", "tokens": [50364, 7257, 2631, 530, 295, 309, 13, 407, 1338, 11, 44333, 411, 291, 584, 11, 309, 575, 257, 688, 281, 360, 365, 18491, 293, 50697, 50697, 286, 519, 4361, 45298, 13, 286, 519, 321, 9828, 322, 341, 3983, 294, 527, 28540, 30521, 3500, 51057, 51057, 597, 286, 2138, 2748, 561, 352, 646, 293, 2140, 281, 498, 436, 2378, 380, 2198, 309, 13, 821, 311, 51248, 51248, 2138, 257, 4984, 1296, 613, 732, 8378, 295, 28540, 30521, 293, 16184, 18344, 11, 51521, 51521, 1156, 4007, 31220, 13, 583, 291, 458, 382, 291, 584, 11, 264, 44333, 11, 309, 311, 466, 1242, 428, 18491, 294, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.14599332269632592, "compression_ratio": 1.654275092936803, "no_caption_prob": 1.4063531125430018e-05}, {"id": 21, "seek": 14204, "start": 142.04, "end": 148.92, "text": " order. You know one of the things that I think is a defining feature of the Elm way of coding", "tokens": [50364, 1668, 13, 509, 458, 472, 295, 264, 721, 300, 286, 519, 307, 257, 17827, 4111, 295, 264, 2699, 76, 636, 295, 17720, 50708, 50708, 294, 452, 2575, 307, 44333, 721, 412, 264, 8539, 420, 6260, 365, 18491, 412, 264, 8539, 411, 51034, 51034, 979, 8616, 13, 1743, 498, 291, 979, 1429, 31828, 420, 23265, 11, 291, 500, 380, 19320, 953, 915, 484, 300, 456, 311, 364, 51372, 51372, 6713, 13, 509, 1333, 295, 411, 915, 484, 466, 2740, 558, 1314, 13, 467, 1669, 385, 519, 300, 309, 311, 4074, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13182450366276566, "compression_ratio": 1.6318181818181818, "no_caption_prob": 4.936835466651246e-06}, {"id": 22, "seek": 14204, "start": 148.92, "end": 155.44, "text": " in my eyes is rapping things at the gate or dealing with constraints at the gate like", "tokens": [50364, 1668, 13, 509, 458, 472, 295, 264, 721, 300, 286, 519, 307, 257, 17827, 4111, 295, 264, 2699, 76, 636, 295, 17720, 50708, 50708, 294, 452, 2575, 307, 44333, 721, 412, 264, 8539, 420, 6260, 365, 18491, 412, 264, 8539, 411, 51034, 51034, 979, 8616, 13, 1743, 498, 291, 979, 1429, 31828, 420, 23265, 11, 291, 500, 380, 19320, 953, 915, 484, 300, 456, 311, 364, 51372, 51372, 6713, 13, 509, 1333, 295, 411, 915, 484, 466, 2740, 558, 1314, 13, 467, 1669, 385, 519, 300, 309, 311, 4074, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13182450366276566, "compression_ratio": 1.6318181818181818, "no_caption_prob": 4.936835466651246e-06}, {"id": 23, "seek": 14204, "start": 155.44, "end": 162.2, "text": " decoding. Like if you decode JSON or flags, you don't lazily find out that there's an", "tokens": [50364, 1668, 13, 509, 458, 472, 295, 264, 721, 300, 286, 519, 307, 257, 17827, 4111, 295, 264, 2699, 76, 636, 295, 17720, 50708, 50708, 294, 452, 2575, 307, 44333, 721, 412, 264, 8539, 420, 6260, 365, 18491, 412, 264, 8539, 411, 51034, 51034, 979, 8616, 13, 1743, 498, 291, 979, 1429, 31828, 420, 23265, 11, 291, 500, 380, 19320, 953, 915, 484, 300, 456, 311, 364, 51372, 51372, 6713, 13, 509, 1333, 295, 411, 915, 484, 466, 2740, 558, 1314, 13, 467, 1669, 385, 519, 300, 309, 311, 4074, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13182450366276566, "compression_ratio": 1.6318181818181818, "no_caption_prob": 4.936835466651246e-06}, {"id": 24, "seek": 14204, "start": 162.2, "end": 169.72, "text": " error. You sort of like find out about problems right away. It makes me think that it's funny", "tokens": [50364, 1668, 13, 509, 458, 472, 295, 264, 721, 300, 286, 519, 307, 257, 17827, 4111, 295, 264, 2699, 76, 636, 295, 17720, 50708, 50708, 294, 452, 2575, 307, 44333, 721, 412, 264, 8539, 420, 6260, 365, 18491, 412, 264, 8539, 411, 51034, 51034, 979, 8616, 13, 1743, 498, 291, 979, 1429, 31828, 420, 23265, 11, 291, 500, 380, 19320, 953, 915, 484, 300, 456, 311, 364, 51372, 51372, 6713, 13, 509, 1333, 295, 411, 915, 484, 466, 2740, 558, 1314, 13, 467, 1669, 385, 519, 300, 309, 311, 4074, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.13182450366276566, "compression_ratio": 1.6318181818181818, "no_caption_prob": 4.936835466651246e-06}, {"id": 25, "seek": 16972, "start": 169.72, "end": 174.72, "text": " because when you say, when you talk about gates, I'm like okay yeah you talk about ports,", "tokens": [50364, 570, 562, 291, 584, 11, 562, 291, 751, 466, 19792, 11, 286, 478, 411, 1392, 1338, 291, 751, 466, 18160, 11, 50614, 50614, 291, 751, 466, 33283, 12475, 293, 1507, 411, 300, 13, 583, 498, 291, 751, 281, 257, 15778, 10754, 50904, 50904, 293, 291, 751, 466, 731, 291, 528, 281, 5099, 721, 412, 264, 19792, 293, 291, 434, 411, 437, 19792, 30, 7587, 51230, 51230, 558, 293, 370, 456, 366, 4759, 365, 15576, 14237, 570, 15576, 14237, 393, 6786, 437, 257, 2010, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.18666596248232084, "compression_ratio": 1.7582938388625593, "no_caption_prob": 1.8342676412430592e-05}, {"id": 26, "seek": 16972, "start": 174.72, "end": 180.52, "text": " you talk about HTTP requests and stuff like that. But if you talk to a JavaScript developer", "tokens": [50364, 570, 562, 291, 584, 11, 562, 291, 751, 466, 19792, 11, 286, 478, 411, 1392, 1338, 291, 751, 466, 18160, 11, 50614, 50614, 291, 751, 466, 33283, 12475, 293, 1507, 411, 300, 13, 583, 498, 291, 751, 281, 257, 15778, 10754, 50904, 50904, 293, 291, 751, 466, 731, 291, 528, 281, 5099, 721, 412, 264, 19792, 293, 291, 434, 411, 437, 19792, 30, 7587, 51230, 51230, 558, 293, 370, 456, 366, 4759, 365, 15576, 14237, 570, 15576, 14237, 393, 6786, 437, 257, 2010, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.18666596248232084, "compression_ratio": 1.7582938388625593, "no_caption_prob": 1.8342676412430592e-05}, {"id": 27, "seek": 16972, "start": 180.52, "end": 187.04, "text": " and you talk about well you want to rap things at the gates and you're like what gates? Exactly", "tokens": [50364, 570, 562, 291, 584, 11, 562, 291, 751, 466, 19792, 11, 286, 478, 411, 1392, 1338, 291, 751, 466, 18160, 11, 50614, 50614, 291, 751, 466, 33283, 12475, 293, 1507, 411, 300, 13, 583, 498, 291, 751, 281, 257, 15778, 10754, 50904, 50904, 293, 291, 751, 466, 731, 291, 528, 281, 5099, 721, 412, 264, 19792, 293, 291, 434, 411, 437, 19792, 30, 7587, 51230, 51230, 558, 293, 370, 456, 366, 4759, 365, 15576, 14237, 570, 15576, 14237, 393, 6786, 437, 257, 2010, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.18666596248232084, "compression_ratio": 1.7582938388625593, "no_caption_prob": 1.8342676412430592e-05}, {"id": 28, "seek": 16972, "start": 187.04, "end": 195.64, "text": " right and so there are challenges with TypeScript because TypeScript can describe what a type", "tokens": [50364, 570, 562, 291, 584, 11, 562, 291, 751, 466, 19792, 11, 286, 478, 411, 1392, 1338, 291, 751, 466, 18160, 11, 50614, 50614, 291, 751, 466, 33283, 12475, 293, 1507, 411, 300, 13, 583, 498, 291, 751, 281, 257, 15778, 10754, 50904, 50904, 293, 291, 751, 466, 731, 291, 528, 281, 5099, 721, 412, 264, 19792, 293, 291, 434, 411, 437, 19792, 30, 7587, 51230, 51230, 558, 293, 370, 456, 366, 4759, 365, 15576, 14237, 570, 15576, 14237, 393, 6786, 437, 257, 2010, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.18666596248232084, "compression_ratio": 1.7582938388625593, "no_caption_prob": 1.8342676412430592e-05}, {"id": 29, "seek": 19564, "start": 195.64, "end": 202.95999999999998, "text": " is. But it has a lot more trouble giving you certain constraints that relate to like how", "tokens": [50364, 307, 13, 583, 309, 575, 257, 688, 544, 5253, 2902, 291, 1629, 18491, 300, 10961, 281, 411, 577, 50730, 50730, 291, 393, 1884, 300, 2010, 570, 309, 311, 1333, 295, 257, 17301, 21841, 1185, 689, 286, 914, 51116, 51116, 291, 458, 291, 393, 445, 360, 31828, 13, 2181, 405, 293, 309, 575, 604, 2010, 293, 550, 291, 393, 4193, 746, 51390, 51390, 300, 575, 364, 604, 2010, 420, 291, 393, 4193, 746, 281, 604, 13, 509, 393, 584, 341, 2158, 382, 604, 293, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11118798968435704, "compression_ratio": 1.7326732673267327, "no_caption_prob": 4.425464339874452e-06}, {"id": 30, "seek": 19564, "start": 202.95999999999998, "end": 210.67999999999998, "text": " you can create that type because it's sort of a casting oriented system where I mean", "tokens": [50364, 307, 13, 583, 309, 575, 257, 688, 544, 5253, 2902, 291, 1629, 18491, 300, 10961, 281, 411, 577, 50730, 50730, 291, 393, 1884, 300, 2010, 570, 309, 311, 1333, 295, 257, 17301, 21841, 1185, 689, 286, 914, 51116, 51116, 291, 458, 291, 393, 445, 360, 31828, 13, 2181, 405, 293, 309, 575, 604, 2010, 293, 550, 291, 393, 4193, 746, 51390, 51390, 300, 575, 364, 604, 2010, 420, 291, 393, 4193, 746, 281, 604, 13, 509, 393, 584, 341, 2158, 382, 604, 293, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11118798968435704, "compression_ratio": 1.7326732673267327, "no_caption_prob": 4.425464339874452e-06}, {"id": 31, "seek": 19564, "start": 210.67999999999998, "end": 216.16, "text": " you know you can just do JSON.parse and it has any type and then you can cast something", "tokens": [50364, 307, 13, 583, 309, 575, 257, 688, 544, 5253, 2902, 291, 1629, 18491, 300, 10961, 281, 411, 577, 50730, 50730, 291, 393, 1884, 300, 2010, 570, 309, 311, 1333, 295, 257, 17301, 21841, 1185, 689, 286, 914, 51116, 51116, 291, 458, 291, 393, 445, 360, 31828, 13, 2181, 405, 293, 309, 575, 604, 2010, 293, 550, 291, 393, 4193, 746, 51390, 51390, 300, 575, 364, 604, 2010, 420, 291, 393, 4193, 746, 281, 604, 13, 509, 393, 584, 341, 2158, 382, 604, 293, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11118798968435704, "compression_ratio": 1.7326732673267327, "no_caption_prob": 4.425464339874452e-06}, {"id": 32, "seek": 19564, "start": 216.16, "end": 222.92, "text": " that has an any type or you can cast something to any. You can say this value as any and", "tokens": [50364, 307, 13, 583, 309, 575, 257, 688, 544, 5253, 2902, 291, 1629, 18491, 300, 10961, 281, 411, 577, 50730, 50730, 291, 393, 1884, 300, 2010, 570, 309, 311, 1333, 295, 257, 17301, 21841, 1185, 689, 286, 914, 51116, 51116, 291, 458, 291, 393, 445, 360, 31828, 13, 2181, 405, 293, 309, 575, 604, 2010, 293, 550, 291, 393, 4193, 746, 51390, 51390, 300, 575, 364, 604, 2010, 420, 291, 393, 4193, 746, 281, 604, 13, 509, 393, 584, 341, 2158, 382, 604, 293, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.11118798968435704, "compression_ratio": 1.7326732673267327, "no_caption_prob": 4.425464339874452e-06}, {"id": 33, "seek": 22292, "start": 222.92, "end": 230.48, "text": " then you can cast that to some value right? There are some validation packages out there", "tokens": [50364, 550, 291, 393, 4193, 300, 281, 512, 2158, 558, 30, 821, 366, 512, 24071, 17401, 484, 456, 50742, 50742, 300, 1238, 709, 360, 437, 2699, 76, 979, 378, 433, 360, 457, 291, 500, 380, 362, 281, 293, 291, 434, 406, 7579, 281, 11, 51042, 51042, 291, 434, 406, 4739, 281, 13, 7587, 558, 13, 663, 311, 558, 291, 393, 360, 729, 721, 457, 412, 264, 917, 51357, 51357, 295, 264, 786, 15576, 14237, 307, 257, 1185, 300, 307, 4761, 281, 2089, 291, 281, 4193, 721, 498, 291, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.142511357317914, "compression_ratio": 1.6388888888888888, "no_caption_prob": 7.296327567019034e-06}, {"id": 34, "seek": 22292, "start": 230.48, "end": 236.48, "text": " that pretty much do what Elm decoders do but you don't have to and you're not forced to,", "tokens": [50364, 550, 291, 393, 4193, 300, 281, 512, 2158, 558, 30, 821, 366, 512, 24071, 17401, 484, 456, 50742, 50742, 300, 1238, 709, 360, 437, 2699, 76, 979, 378, 433, 360, 457, 291, 500, 380, 362, 281, 293, 291, 434, 406, 7579, 281, 11, 51042, 51042, 291, 434, 406, 4739, 281, 13, 7587, 558, 13, 663, 311, 558, 291, 393, 360, 729, 721, 457, 412, 264, 917, 51357, 51357, 295, 264, 786, 15576, 14237, 307, 257, 1185, 300, 307, 4761, 281, 2089, 291, 281, 4193, 721, 498, 291, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.142511357317914, "compression_ratio": 1.6388888888888888, "no_caption_prob": 7.296327567019034e-06}, {"id": 35, "seek": 22292, "start": 236.48, "end": 242.77999999999997, "text": " you're not required to. Exactly right. That's right you can do those things but at the end", "tokens": [50364, 550, 291, 393, 4193, 300, 281, 512, 2158, 558, 30, 821, 366, 512, 24071, 17401, 484, 456, 50742, 50742, 300, 1238, 709, 360, 437, 2699, 76, 979, 378, 433, 360, 457, 291, 500, 380, 362, 281, 293, 291, 434, 406, 7579, 281, 11, 51042, 51042, 291, 434, 406, 4739, 281, 13, 7587, 558, 13, 663, 311, 558, 291, 393, 360, 729, 721, 457, 412, 264, 917, 51357, 51357, 295, 264, 786, 15576, 14237, 307, 257, 1185, 300, 307, 4761, 281, 2089, 291, 281, 4193, 721, 498, 291, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.142511357317914, "compression_ratio": 1.6388888888888888, "no_caption_prob": 7.296327567019034e-06}, {"id": 36, "seek": 22292, "start": 242.77999999999997, "end": 248.11999999999998, "text": " of the day TypeScript is a system that is designed to allow you to cast things if you", "tokens": [50364, 550, 291, 393, 4193, 300, 281, 512, 2158, 558, 30, 821, 366, 512, 24071, 17401, 484, 456, 50742, 50742, 300, 1238, 709, 360, 437, 2699, 76, 979, 378, 433, 360, 457, 291, 500, 380, 362, 281, 293, 291, 434, 406, 7579, 281, 11, 51042, 51042, 291, 434, 406, 4739, 281, 13, 7587, 558, 13, 663, 311, 558, 291, 393, 360, 729, 721, 457, 412, 264, 917, 51357, 51357, 295, 264, 786, 15576, 14237, 307, 257, 1185, 300, 307, 4761, 281, 2089, 291, 281, 4193, 721, 498, 291, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.142511357317914, "compression_ratio": 1.6388888888888888, "no_caption_prob": 7.296327567019034e-06}, {"id": 37, "seek": 24812, "start": 248.12, "end": 255.84, "text": " want to and Elm is a system that has no concept of casting and that is an essential difference", "tokens": [50364, 528, 281, 293, 2699, 76, 307, 257, 1185, 300, 575, 572, 3410, 295, 17301, 293, 300, 307, 364, 7115, 2649, 50750, 50750, 570, 309, 1355, 291, 393, 534, 3361, 689, 746, 1361, 490, 13, 407, 281, 385, 257, 955, 644, 295, 51086, 51086, 341, 5099, 2440, 2522, 295, 5099, 2440, 14853, 4007, 3469, 307, 689, 746, 1361, 490, 293, 733, 295, 1419, 51439, 51439, 257, 9921, 295, 746, 300, 1619, 341, 307, 264, 3089, 3100, 597, 382, 291, 12075, 292, 412, 575, 257, 688, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09464183720675381, "compression_ratio": 1.7572815533980584, "no_caption_prob": 2.546583527873736e-05}, {"id": 38, "seek": 24812, "start": 255.84, "end": 262.56, "text": " because it means you can really trust where something came from. So to me a big part of", "tokens": [50364, 528, 281, 293, 2699, 76, 307, 257, 1185, 300, 575, 572, 3410, 295, 17301, 293, 300, 307, 364, 7115, 2649, 50750, 50750, 570, 309, 1355, 291, 393, 534, 3361, 689, 746, 1361, 490, 13, 407, 281, 385, 257, 955, 644, 295, 51086, 51086, 341, 5099, 2440, 2522, 295, 5099, 2440, 14853, 4007, 3469, 307, 689, 746, 1361, 490, 293, 733, 295, 1419, 51439, 51439, 257, 9921, 295, 746, 300, 1619, 341, 307, 264, 3089, 3100, 597, 382, 291, 12075, 292, 412, 575, 257, 688, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09464183720675381, "compression_ratio": 1.7572815533980584, "no_caption_prob": 2.546583527873736e-05}, {"id": 39, "seek": 24812, "start": 262.56, "end": 269.62, "text": " this rap early piece of rap early unwrap late is where something came from and kind of having", "tokens": [50364, 528, 281, 293, 2699, 76, 307, 257, 1185, 300, 575, 572, 3410, 295, 17301, 293, 300, 307, 364, 7115, 2649, 50750, 50750, 570, 309, 1355, 291, 393, 534, 3361, 689, 746, 1361, 490, 13, 407, 281, 385, 257, 955, 644, 295, 51086, 51086, 341, 5099, 2440, 2522, 295, 5099, 2440, 14853, 4007, 3469, 307, 689, 746, 1361, 490, 293, 733, 295, 1419, 51439, 51439, 257, 9921, 295, 746, 300, 1619, 341, 307, 264, 3089, 3100, 597, 382, 291, 12075, 292, 412, 575, 257, 688, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09464183720675381, "compression_ratio": 1.7572815533980584, "no_caption_prob": 2.546583527873736e-05}, {"id": 40, "seek": 24812, "start": 269.62, "end": 275.56, "text": " a stamp of something that says this is the code path which as you hinted at has a lot", "tokens": [50364, 528, 281, 293, 2699, 76, 307, 257, 1185, 300, 575, 572, 3410, 295, 17301, 293, 300, 307, 364, 7115, 2649, 50750, 50750, 570, 309, 1355, 291, 393, 534, 3361, 689, 746, 1361, 490, 13, 407, 281, 385, 257, 955, 644, 295, 51086, 51086, 341, 5099, 2440, 2522, 295, 5099, 2440, 14853, 4007, 3469, 307, 689, 746, 1361, 490, 293, 733, 295, 1419, 51439, 51439, 257, 9921, 295, 746, 300, 1619, 341, 307, 264, 3089, 3100, 597, 382, 291, 12075, 292, 412, 575, 257, 688, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09464183720675381, "compression_ratio": 1.7572815533980584, "no_caption_prob": 2.546583527873736e-05}, {"id": 41, "seek": 27556, "start": 275.56, "end": 281.56, "text": " to do with opaque types too because if you expose a way to construct a type outside of", "tokens": [50364, 281, 360, 365, 42687, 3467, 886, 570, 498, 291, 19219, 257, 636, 281, 7690, 257, 2010, 2380, 295, 50664, 50664, 264, 10088, 309, 311, 7642, 294, 550, 4472, 393, 1884, 309, 13, 1449, 411, 294, 15576, 14237, 291, 393, 50914, 50914, 4193, 746, 666, 257, 2010, 4992, 291, 528, 293, 370, 291, 500, 380, 534, 458, 689, 630, 341, 51246, 51246, 2158, 808, 490, 11, 437, 775, 309, 2906, 11, 437, 18491, 775, 309, 976, 385, 13, 467, 311, 6081, 281, 51498, 51498, 24825, 729, 721, 13, 407, 291, 611, 362, 257, 6081, 565, 15213, 484, 575, 341, 668, 40693, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.09905072358938363, "compression_ratio": 1.6616541353383458, "no_caption_prob": 1.7231208403245546e-05}, {"id": 42, "seek": 27556, "start": 281.56, "end": 286.56, "text": " the module it's defined in then anybody can create it. Just like in TypeScript you can", "tokens": [50364, 281, 360, 365, 42687, 3467, 886, 570, 498, 291, 19219, 257, 636, 281, 7690, 257, 2010, 2380, 295, 50664, 50664, 264, 10088, 309, 311, 7642, 294, 550, 4472, 393, 1884, 309, 13, 1449, 411, 294, 15576, 14237, 291, 393, 50914, 50914, 4193, 746, 666, 257, 2010, 4992, 291, 528, 293, 370, 291, 500, 380, 534, 458, 689, 630, 341, 51246, 51246, 2158, 808, 490, 11, 437, 775, 309, 2906, 11, 437, 18491, 775, 309, 976, 385, 13, 467, 311, 6081, 281, 51498, 51498, 24825, 729, 721, 13, 407, 291, 611, 362, 257, 6081, 565, 15213, 484, 575, 341, 668, 40693, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.09905072358938363, "compression_ratio": 1.6616541353383458, "no_caption_prob": 1.7231208403245546e-05}, {"id": 43, "seek": 27556, "start": 286.56, "end": 293.2, "text": " cast something into a type anywhere you want and so you don't really know where did this", "tokens": [50364, 281, 360, 365, 42687, 3467, 886, 570, 498, 291, 19219, 257, 636, 281, 7690, 257, 2010, 2380, 295, 50664, 50664, 264, 10088, 309, 311, 7642, 294, 550, 4472, 393, 1884, 309, 13, 1449, 411, 294, 15576, 14237, 291, 393, 50914, 50914, 4193, 746, 666, 257, 2010, 4992, 291, 528, 293, 370, 291, 500, 380, 534, 458, 689, 630, 341, 51246, 51246, 2158, 808, 490, 11, 437, 775, 309, 2906, 11, 437, 18491, 775, 309, 976, 385, 13, 467, 311, 6081, 281, 51498, 51498, 24825, 729, 721, 13, 407, 291, 611, 362, 257, 6081, 565, 15213, 484, 575, 341, 668, 40693, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.09905072358938363, "compression_ratio": 1.6616541353383458, "no_caption_prob": 1.7231208403245546e-05}, {"id": 44, "seek": 27556, "start": 293.2, "end": 298.24, "text": " value come from, what does it represent, what constraints does it give me. It's harder to", "tokens": [50364, 281, 360, 365, 42687, 3467, 886, 570, 498, 291, 19219, 257, 636, 281, 7690, 257, 2010, 2380, 295, 50664, 50664, 264, 10088, 309, 311, 7642, 294, 550, 4472, 393, 1884, 309, 13, 1449, 411, 294, 15576, 14237, 291, 393, 50914, 50914, 4193, 746, 666, 257, 2010, 4992, 291, 528, 293, 370, 291, 500, 380, 534, 458, 689, 630, 341, 51246, 51246, 2158, 808, 490, 11, 437, 775, 309, 2906, 11, 437, 18491, 775, 309, 976, 385, 13, 467, 311, 6081, 281, 51498, 51498, 24825, 729, 721, 13, 407, 291, 611, 362, 257, 6081, 565, 15213, 484, 575, 341, 668, 40693, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.09905072358938363, "compression_ratio": 1.6616541353383458, "no_caption_prob": 1.7231208403245546e-05}, {"id": 45, "seek": 27556, "start": 298.24, "end": 305.32, "text": " enforce those things. So you also have a harder time figuring out has this been validated", "tokens": [50364, 281, 360, 365, 42687, 3467, 886, 570, 498, 291, 19219, 257, 636, 281, 7690, 257, 2010, 2380, 295, 50664, 50664, 264, 10088, 309, 311, 7642, 294, 550, 4472, 393, 1884, 309, 13, 1449, 411, 294, 15576, 14237, 291, 393, 50914, 50914, 4193, 746, 666, 257, 2010, 4992, 291, 528, 293, 370, 291, 500, 380, 534, 458, 689, 630, 341, 51246, 51246, 2158, 808, 490, 11, 437, 775, 309, 2906, 11, 437, 18491, 775, 309, 976, 385, 13, 467, 311, 6081, 281, 51498, 51498, 24825, 729, 721, 13, 407, 291, 611, 362, 257, 6081, 565, 15213, 484, 575, 341, 668, 40693, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.09905072358938363, "compression_ratio": 1.6616541353383458, "no_caption_prob": 1.7231208403245546e-05}, {"id": 46, "seek": 30532, "start": 305.32, "end": 307.15999999999997, "text": " somewhere along the way.", "tokens": [50364, 4079, 2051, 264, 636, 13, 50456, 50456, 7587, 13, 865, 286, 519, 295, 309, 411, 291, 458, 498, 291, 352, 666, 257, 8795, 7431, 293, 291, 483, 257, 50786, 50786, 707, 15043, 4235, 300, 3110, 300, 291, 434, 295, 7583, 3205, 293, 550, 291, 393, 352, 2256, 34159, 13, 51036, 51036, 1119, 300, 577, 721, 589, 294, 264, 2546, 30, 51278, 51278, 4803, 1338, 13, 492, 434, 588, 10910, 466, 1455, 988, 300, 561, 366, 295, 7583, 3205, 13, 286, 445, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1913756202248966, "compression_ratio": 1.575609756097561, "no_caption_prob": 8.480775431962684e-05}, {"id": 47, "seek": 30532, "start": 307.15999999999997, "end": 313.76, "text": " Exactly. Yeah I think of it like you know if you go into a beer garden and you get a", "tokens": [50364, 4079, 2051, 264, 636, 13, 50456, 50456, 7587, 13, 865, 286, 519, 295, 309, 411, 291, 458, 498, 291, 352, 666, 257, 8795, 7431, 293, 291, 483, 257, 50786, 50786, 707, 15043, 4235, 300, 3110, 300, 291, 434, 295, 7583, 3205, 293, 550, 291, 393, 352, 2256, 34159, 13, 51036, 51036, 1119, 300, 577, 721, 589, 294, 264, 2546, 30, 51278, 51278, 4803, 1338, 13, 492, 434, 588, 10910, 466, 1455, 988, 300, 561, 366, 295, 7583, 3205, 13, 286, 445, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1913756202248966, "compression_ratio": 1.575609756097561, "no_caption_prob": 8.480775431962684e-05}, {"id": 48, "seek": 30532, "start": 313.76, "end": 318.76, "text": " little wristband that shows that you're of drinking age and then you can go buy beers.", "tokens": [50364, 4079, 2051, 264, 636, 13, 50456, 50456, 7587, 13, 865, 286, 519, 295, 309, 411, 291, 458, 498, 291, 352, 666, 257, 8795, 7431, 293, 291, 483, 257, 50786, 50786, 707, 15043, 4235, 300, 3110, 300, 291, 434, 295, 7583, 3205, 293, 550, 291, 393, 352, 2256, 34159, 13, 51036, 51036, 1119, 300, 577, 721, 589, 294, 264, 2546, 30, 51278, 51278, 4803, 1338, 13, 492, 434, 588, 10910, 466, 1455, 988, 300, 561, 366, 295, 7583, 3205, 13, 286, 445, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1913756202248966, "compression_ratio": 1.575609756097561, "no_caption_prob": 8.480775431962684e-05}, {"id": 49, "seek": 30532, "start": 318.76, "end": 323.6, "text": " Is that how things work in the US?", "tokens": [50364, 4079, 2051, 264, 636, 13, 50456, 50456, 7587, 13, 865, 286, 519, 295, 309, 411, 291, 458, 498, 291, 352, 666, 257, 8795, 7431, 293, 291, 483, 257, 50786, 50786, 707, 15043, 4235, 300, 3110, 300, 291, 434, 295, 7583, 3205, 293, 550, 291, 393, 352, 2256, 34159, 13, 51036, 51036, 1119, 300, 577, 721, 589, 294, 264, 2546, 30, 51278, 51278, 4803, 1338, 13, 492, 434, 588, 10910, 466, 1455, 988, 300, 561, 366, 295, 7583, 3205, 13, 286, 445, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1913756202248966, "compression_ratio": 1.575609756097561, "no_caption_prob": 8.480775431962684e-05}, {"id": 50, "seek": 30532, "start": 323.6, "end": 331.03999999999996, "text": " Sometimes yeah. We're very strict about making sure that people are of drinking age. I just", "tokens": [50364, 4079, 2051, 264, 636, 13, 50456, 50456, 7587, 13, 865, 286, 519, 295, 309, 411, 291, 458, 498, 291, 352, 666, 257, 8795, 7431, 293, 291, 483, 257, 50786, 50786, 707, 15043, 4235, 300, 3110, 300, 291, 434, 295, 7583, 3205, 293, 550, 291, 393, 352, 2256, 34159, 13, 51036, 51036, 1119, 300, 577, 721, 589, 294, 264, 2546, 30, 51278, 51278, 4803, 1338, 13, 492, 434, 588, 10910, 466, 1455, 988, 300, 561, 366, 295, 7583, 3205, 13, 286, 445, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.1913756202248966, "compression_ratio": 1.575609756097561, "no_caption_prob": 8.480775431962684e-05}, {"id": 51, "seek": 33104, "start": 331.04, "end": 336.64000000000004, "text": " recently saw someone who was like clearly in their 60s or 70s getting ID'd at a store", "tokens": [50364, 3938, 1866, 1580, 567, 390, 411, 4448, 294, 641, 4060, 82, 420, 5285, 82, 1242, 7348, 1116, 412, 257, 3531, 50644, 50644, 562, 436, 645, 6382, 512, 29162, 293, 291, 434, 411, 534, 30, 4083, 30, 1033, 13, 50860, 50860, 286, 458, 300, 294, 264, 20873, 436, 362, 746, 300, 1619, 498, 291, 434, 3673, 3552, 291, 500, 380, 643, 51218, 51218, 281, 855, 428, 7348, 597, 286, 445, 500, 380, 1223, 13, 1743, 577, 393, 321, 458, 291, 434, 3673, 3552, 498, 291, 51668, 51668, 500, 380, 855, 264, 7348, 30, 286, 362, 1128, 7320, 341, 472, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14710521697998047, "compression_ratio": 1.6431535269709543, "no_caption_prob": 0.00013764579489361495}, {"id": 52, "seek": 33104, "start": 336.64000000000004, "end": 340.96000000000004, "text": " when they were buying some liquor and you're like really? Really? Okay.", "tokens": [50364, 3938, 1866, 1580, 567, 390, 411, 4448, 294, 641, 4060, 82, 420, 5285, 82, 1242, 7348, 1116, 412, 257, 3531, 50644, 50644, 562, 436, 645, 6382, 512, 29162, 293, 291, 434, 411, 534, 30, 4083, 30, 1033, 13, 50860, 50860, 286, 458, 300, 294, 264, 20873, 436, 362, 746, 300, 1619, 498, 291, 434, 3673, 3552, 291, 500, 380, 643, 51218, 51218, 281, 855, 428, 7348, 597, 286, 445, 500, 380, 1223, 13, 1743, 577, 393, 321, 458, 291, 434, 3673, 3552, 498, 291, 51668, 51668, 500, 380, 855, 264, 7348, 30, 286, 362, 1128, 7320, 341, 472, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14710521697998047, "compression_ratio": 1.6431535269709543, "no_caption_prob": 0.00013764579489361495}, {"id": 53, "seek": 33104, "start": 340.96000000000004, "end": 348.12, "text": " I know that in the Netherlands they have something that says if you're above 25 you don't need", "tokens": [50364, 3938, 1866, 1580, 567, 390, 411, 4448, 294, 641, 4060, 82, 420, 5285, 82, 1242, 7348, 1116, 412, 257, 3531, 50644, 50644, 562, 436, 645, 6382, 512, 29162, 293, 291, 434, 411, 534, 30, 4083, 30, 1033, 13, 50860, 50860, 286, 458, 300, 294, 264, 20873, 436, 362, 746, 300, 1619, 498, 291, 434, 3673, 3552, 291, 500, 380, 643, 51218, 51218, 281, 855, 428, 7348, 597, 286, 445, 500, 380, 1223, 13, 1743, 577, 393, 321, 458, 291, 434, 3673, 3552, 498, 291, 51668, 51668, 500, 380, 855, 264, 7348, 30, 286, 362, 1128, 7320, 341, 472, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14710521697998047, "compression_ratio": 1.6431535269709543, "no_caption_prob": 0.00013764579489361495}, {"id": 54, "seek": 33104, "start": 348.12, "end": 357.12, "text": " to show your ID which I just don't understand. Like how can we know you're above 25 if you", "tokens": [50364, 3938, 1866, 1580, 567, 390, 411, 4448, 294, 641, 4060, 82, 420, 5285, 82, 1242, 7348, 1116, 412, 257, 3531, 50644, 50644, 562, 436, 645, 6382, 512, 29162, 293, 291, 434, 411, 534, 30, 4083, 30, 1033, 13, 50860, 50860, 286, 458, 300, 294, 264, 20873, 436, 362, 746, 300, 1619, 498, 291, 434, 3673, 3552, 291, 500, 380, 643, 51218, 51218, 281, 855, 428, 7348, 597, 286, 445, 500, 380, 1223, 13, 1743, 577, 393, 321, 458, 291, 434, 3673, 3552, 498, 291, 51668, 51668, 500, 380, 855, 264, 7348, 30, 286, 362, 1128, 7320, 341, 472, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14710521697998047, "compression_ratio": 1.6431535269709543, "no_caption_prob": 0.00013764579489361495}, {"id": 55, "seek": 33104, "start": 357.12, "end": 360.64000000000004, "text": " don't show the ID? I have never understood this one.", "tokens": [50364, 3938, 1866, 1580, 567, 390, 411, 4448, 294, 641, 4060, 82, 420, 5285, 82, 1242, 7348, 1116, 412, 257, 3531, 50644, 50644, 562, 436, 645, 6382, 512, 29162, 293, 291, 434, 411, 534, 30, 4083, 30, 1033, 13, 50860, 50860, 286, 458, 300, 294, 264, 20873, 436, 362, 746, 300, 1619, 498, 291, 434, 3673, 3552, 291, 500, 380, 643, 51218, 51218, 281, 855, 428, 7348, 597, 286, 445, 500, 380, 1223, 13, 1743, 577, 393, 321, 458, 291, 434, 3673, 3552, 498, 291, 51668, 51668, 500, 380, 855, 264, 7348, 30, 286, 362, 1128, 7320, 341, 472, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.14710521697998047, "compression_ratio": 1.6431535269709543, "no_caption_prob": 0.00013764579489361495}, {"id": 56, "seek": 36064, "start": 360.64, "end": 368.68, "text": " Well it's a slippery slope right? Then you say how can you know if they're above 60?", "tokens": [50364, 1042, 309, 311, 257, 28100, 13525, 558, 30, 1396, 291, 584, 577, 393, 291, 458, 498, 436, 434, 3673, 4060, 30, 50766, 50766, 865, 13, 50816, 50816, 7010, 13, 583, 1338, 291, 483, 300, 551, 926, 428, 15043, 293, 550, 291, 393, 3361, 689, 300, 1361, 51174, 51174, 490, 570, 264, 787, 954, 300, 575, 729, 15043, 30014, 307, 264, 4783, 1081, 300, 311, 34774, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.22733127206995868, "compression_ratio": 1.4863387978142077, "no_caption_prob": 4.0693827031645924e-05}, {"id": 57, "seek": 36064, "start": 368.68, "end": 369.68, "text": " Yeah.", "tokens": [50364, 1042, 309, 311, 257, 28100, 13525, 558, 30, 1396, 291, 584, 577, 393, 291, 458, 498, 436, 434, 3673, 4060, 30, 50766, 50766, 865, 13, 50816, 50816, 7010, 13, 583, 1338, 291, 483, 300, 551, 926, 428, 15043, 293, 550, 291, 393, 3361, 689, 300, 1361, 51174, 51174, 490, 570, 264, 787, 954, 300, 575, 729, 15043, 30014, 307, 264, 4783, 1081, 300, 311, 34774, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.22733127206995868, "compression_ratio": 1.4863387978142077, "no_caption_prob": 4.0693827031645924e-05}, {"id": 58, "seek": 36064, "start": 369.68, "end": 376.84, "text": " Yep. But yeah you get that thing around your wrist and then you can trust where that came", "tokens": [50364, 1042, 309, 311, 257, 28100, 13525, 558, 30, 1396, 291, 584, 577, 393, 291, 458, 498, 436, 434, 3673, 4060, 30, 50766, 50766, 865, 13, 50816, 50816, 7010, 13, 583, 1338, 291, 483, 300, 551, 926, 428, 15043, 293, 550, 291, 393, 3361, 689, 300, 1361, 51174, 51174, 490, 570, 264, 787, 954, 300, 575, 729, 15043, 30014, 307, 264, 4783, 1081, 300, 311, 34774, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.22733127206995868, "compression_ratio": 1.4863387978142077, "no_caption_prob": 4.0693827031645924e-05}, {"id": 59, "seek": 36064, "start": 376.84, "end": 385.59999999999997, "text": " from because the only person that has those wristbands is the official place that's handing", "tokens": [50364, 1042, 309, 311, 257, 28100, 13525, 558, 30, 1396, 291, 584, 577, 393, 291, 458, 498, 436, 434, 3673, 4060, 30, 50766, 50766, 865, 13, 50816, 50816, 7010, 13, 583, 1338, 291, 483, 300, 551, 926, 428, 15043, 293, 550, 291, 393, 3361, 689, 300, 1361, 51174, 51174, 490, 570, 264, 787, 954, 300, 575, 729, 15043, 30014, 307, 264, 4783, 1081, 300, 311, 34774, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.22733127206995868, "compression_ratio": 1.4863387978142077, "no_caption_prob": 4.0693827031645924e-05}, {"id": 60, "seek": 38560, "start": 385.6, "end": 390.88, "text": " them out and you know that they're checking your ID and you know that if you take it off", "tokens": [50364, 552, 484, 293, 291, 458, 300, 436, 434, 8568, 428, 7348, 293, 291, 458, 300, 498, 291, 747, 309, 766, 50628, 50628, 309, 486, 1821, 370, 291, 393, 980, 498, 291, 600, 3031, 281, 976, 309, 281, 2618, 1646, 13, 50934, 50934, 407, 291, 434, 1333, 295, 411, 1242, 341, 9921, 295, 13317, 300, 291, 393, 3361, 293, 300, 311, 51256, 51256, 1021, 293, 300, 311, 264, 21993, 644, 13, 407, 300, 311, 21993, 457, 264, 2440, 644, 307, 1021, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.11324094590686616, "compression_ratio": 1.7604166666666667, "no_caption_prob": 5.9206220612395555e-05}, {"id": 61, "seek": 38560, "start": 390.88, "end": 397.0, "text": " it will break so you can tell if you've tried to give it to somebody else.", "tokens": [50364, 552, 484, 293, 291, 458, 300, 436, 434, 8568, 428, 7348, 293, 291, 458, 300, 498, 291, 747, 309, 766, 50628, 50628, 309, 486, 1821, 370, 291, 393, 980, 498, 291, 600, 3031, 281, 976, 309, 281, 2618, 1646, 13, 50934, 50934, 407, 291, 434, 1333, 295, 411, 1242, 341, 9921, 295, 13317, 300, 291, 393, 3361, 293, 300, 311, 51256, 51256, 1021, 293, 300, 311, 264, 21993, 644, 13, 407, 300, 311, 21993, 457, 264, 2440, 644, 307, 1021, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.11324094590686616, "compression_ratio": 1.7604166666666667, "no_caption_prob": 5.9206220612395555e-05}, {"id": 62, "seek": 38560, "start": 397.0, "end": 403.44, "text": " So you're sort of like getting this stamp of approval that you can trust and that's", "tokens": [50364, 552, 484, 293, 291, 458, 300, 436, 434, 8568, 428, 7348, 293, 291, 458, 300, 498, 291, 747, 309, 766, 50628, 50628, 309, 486, 1821, 370, 291, 393, 980, 498, 291, 600, 3031, 281, 976, 309, 281, 2618, 1646, 13, 50934, 50934, 407, 291, 434, 1333, 295, 411, 1242, 341, 9921, 295, 13317, 300, 291, 393, 3361, 293, 300, 311, 51256, 51256, 1021, 293, 300, 311, 264, 21993, 644, 13, 407, 300, 311, 21993, 457, 264, 2440, 644, 307, 1021, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.11324094590686616, "compression_ratio": 1.7604166666666667, "no_caption_prob": 5.9206220612395555e-05}, {"id": 63, "seek": 38560, "start": 403.44, "end": 411.22, "text": " important and that's the wrapping part. So that's wrapping but the early part is important", "tokens": [50364, 552, 484, 293, 291, 458, 300, 436, 434, 8568, 428, 7348, 293, 291, 458, 300, 498, 291, 747, 309, 766, 50628, 50628, 309, 486, 1821, 370, 291, 393, 980, 498, 291, 600, 3031, 281, 976, 309, 281, 2618, 1646, 13, 50934, 50934, 407, 291, 434, 1333, 295, 411, 1242, 341, 9921, 295, 13317, 300, 291, 393, 3361, 293, 300, 311, 51256, 51256, 1021, 293, 300, 311, 264, 21993, 644, 13, 407, 300, 311, 21993, 457, 264, 2440, 644, 307, 1021, 51645, 51645], "temperature": 0.0, "avg_logprob": -0.11324094590686616, "compression_ratio": 1.7604166666666667, "no_caption_prob": 5.9206220612395555e-05}, {"id": 64, "seek": 41122, "start": 411.22, "end": 417.16, "text": " too right? And we talked about primitive obsession right? And that kind of gets into what's the", "tokens": [50364, 886, 558, 30, 400, 321, 2825, 466, 28540, 30521, 558, 30, 400, 300, 733, 295, 2170, 666, 437, 311, 264, 50661, 50661, 7157, 10290, 295, 257, 2010, 293, 437, 18491, 360, 291, 528, 281, 2316, 466, 257, 2010, 13, 583, 264, 50983, 50983, 2440, 644, 307, 534, 1021, 510, 558, 30, 1436, 983, 2440, 30, 1042, 498, 456, 311, 257, 25534, 51271, 51271, 420, 498, 456, 311, 47982, 3620, 281, 746, 291, 528, 281, 915, 484, 382, 2321, 382, 1944, 13, 51515, 51515, 821, 366, 257, 1326, 4112, 337, 300, 13, 1485, 307, 291, 500, 380, 528, 281, 1066, 8568, 300, 13, 759, 291, 1066, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.1040509687651188, "compression_ratio": 1.741444866920152, "no_caption_prob": 2.840865454345476e-05}, {"id": 65, "seek": 41122, "start": 417.16, "end": 423.6, "text": " ideal representation of a type and what constraints do you want to model about a type. But the", "tokens": [50364, 886, 558, 30, 400, 321, 2825, 466, 28540, 30521, 558, 30, 400, 300, 733, 295, 2170, 666, 437, 311, 264, 50661, 50661, 7157, 10290, 295, 257, 2010, 293, 437, 18491, 360, 291, 528, 281, 2316, 466, 257, 2010, 13, 583, 264, 50983, 50983, 2440, 644, 307, 534, 1021, 510, 558, 30, 1436, 983, 2440, 30, 1042, 498, 456, 311, 257, 25534, 51271, 51271, 420, 498, 456, 311, 47982, 3620, 281, 746, 291, 528, 281, 915, 484, 382, 2321, 382, 1944, 13, 51515, 51515, 821, 366, 257, 1326, 4112, 337, 300, 13, 1485, 307, 291, 500, 380, 528, 281, 1066, 8568, 300, 13, 759, 291, 1066, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.1040509687651188, "compression_ratio": 1.741444866920152, "no_caption_prob": 2.840865454345476e-05}, {"id": 66, "seek": 41122, "start": 423.6, "end": 429.36, "text": " early part is really important here right? Because why early? Well if there's a constraint", "tokens": [50364, 886, 558, 30, 400, 321, 2825, 466, 28540, 30521, 558, 30, 400, 300, 733, 295, 2170, 666, 437, 311, 264, 50661, 50661, 7157, 10290, 295, 257, 2010, 293, 437, 18491, 360, 291, 528, 281, 2316, 466, 257, 2010, 13, 583, 264, 50983, 50983, 2440, 644, 307, 534, 1021, 510, 558, 30, 1436, 983, 2440, 30, 1042, 498, 456, 311, 257, 25534, 51271, 51271, 420, 498, 456, 311, 47982, 3620, 281, 746, 291, 528, 281, 915, 484, 382, 2321, 382, 1944, 13, 51515, 51515, 821, 366, 257, 1326, 4112, 337, 300, 13, 1485, 307, 291, 500, 380, 528, 281, 1066, 8568, 300, 13, 759, 291, 1066, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.1040509687651188, "compression_ratio": 1.741444866920152, "no_caption_prob": 2.840865454345476e-05}, {"id": 67, "seek": 41122, "start": 429.36, "end": 434.24, "text": " or if there's semantic meaning to something you want to find out as soon as possible.", "tokens": [50364, 886, 558, 30, 400, 321, 2825, 466, 28540, 30521, 558, 30, 400, 300, 733, 295, 2170, 666, 437, 311, 264, 50661, 50661, 7157, 10290, 295, 257, 2010, 293, 437, 18491, 360, 291, 528, 281, 2316, 466, 257, 2010, 13, 583, 264, 50983, 50983, 2440, 644, 307, 534, 1021, 510, 558, 30, 1436, 983, 2440, 30, 1042, 498, 456, 311, 257, 25534, 51271, 51271, 420, 498, 456, 311, 47982, 3620, 281, 746, 291, 528, 281, 915, 484, 382, 2321, 382, 1944, 13, 51515, 51515, 821, 366, 257, 1326, 4112, 337, 300, 13, 1485, 307, 291, 500, 380, 528, 281, 1066, 8568, 300, 13, 759, 291, 1066, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.1040509687651188, "compression_ratio": 1.741444866920152, "no_caption_prob": 2.840865454345476e-05}, {"id": 68, "seek": 41122, "start": 434.24, "end": 438.56, "text": " There are a few reasons for that. One is you don't want to keep checking that. If you keep", "tokens": [50364, 886, 558, 30, 400, 321, 2825, 466, 28540, 30521, 558, 30, 400, 300, 733, 295, 2170, 666, 437, 311, 264, 50661, 50661, 7157, 10290, 295, 257, 2010, 293, 437, 18491, 360, 291, 528, 281, 2316, 466, 257, 2010, 13, 583, 264, 50983, 50983, 2440, 644, 307, 534, 1021, 510, 558, 30, 1436, 983, 2440, 30, 1042, 498, 456, 311, 257, 25534, 51271, 51271, 420, 498, 456, 311, 47982, 3620, 281, 746, 291, 528, 281, 915, 484, 382, 2321, 382, 1944, 13, 51515, 51515, 821, 366, 257, 1326, 4112, 337, 300, 13, 1485, 307, 291, 500, 380, 528, 281, 1066, 8568, 300, 13, 759, 291, 1066, 51731, 51731], "temperature": 0.0, "avg_logprob": -0.1040509687651188, "compression_ratio": 1.741444866920152, "no_caption_prob": 2.840865454345476e-05}, {"id": 69, "seek": 43856, "start": 438.56, "end": 444.8, "text": " checking then it would be a little bit like every time you go to get a beer you check", "tokens": [50364, 8568, 550, 309, 576, 312, 257, 707, 857, 411, 633, 565, 291, 352, 281, 483, 257, 8795, 291, 1520, 50676, 50676, 428, 7348, 293, 300, 311, 733, 295, 11304, 570, 1310, 291, 528, 281, 483, 257, 1326, 34159, 13, 407, 309, 576, 50900, 50900, 312, 1481, 498, 291, 727, 445, 1520, 309, 1564, 293, 291, 500, 380, 528, 281, 652, 561, 3806, 294, 1622, 51152, 51152, 281, 483, 641, 8795, 1699, 337, 300, 954, 13, 407, 291, 458, 309, 311, 257, 1871, 295, 19283, 281, 406, 51432, 51432, 362, 281, 1066, 319, 15723, 278, 309, 6460, 13, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.11108616555091178, "compression_ratio": 1.7161572052401746, "no_caption_prob": 1.8056225599138997e-05}, {"id": 70, "seek": 43856, "start": 444.8, "end": 449.28000000000003, "text": " your ID and that's kind of annoying because maybe you want to get a few beers. So it would", "tokens": [50364, 8568, 550, 309, 576, 312, 257, 707, 857, 411, 633, 565, 291, 352, 281, 483, 257, 8795, 291, 1520, 50676, 50676, 428, 7348, 293, 300, 311, 733, 295, 11304, 570, 1310, 291, 528, 281, 483, 257, 1326, 34159, 13, 407, 309, 576, 50900, 50900, 312, 1481, 498, 291, 727, 445, 1520, 309, 1564, 293, 291, 500, 380, 528, 281, 652, 561, 3806, 294, 1622, 51152, 51152, 281, 483, 641, 8795, 1699, 337, 300, 954, 13, 407, 291, 458, 309, 311, 257, 1871, 295, 19283, 281, 406, 51432, 51432, 362, 281, 1066, 319, 15723, 278, 309, 6460, 13, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.11108616555091178, "compression_ratio": 1.7161572052401746, "no_caption_prob": 1.8056225599138997e-05}, {"id": 71, "seek": 43856, "start": 449.28000000000003, "end": 454.32, "text": " be nice if you could just check it once and you don't want to make people waiting in line", "tokens": [50364, 8568, 550, 309, 576, 312, 257, 707, 857, 411, 633, 565, 291, 352, 281, 483, 257, 8795, 291, 1520, 50676, 50676, 428, 7348, 293, 300, 311, 733, 295, 11304, 570, 1310, 291, 528, 281, 483, 257, 1326, 34159, 13, 407, 309, 576, 50900, 50900, 312, 1481, 498, 291, 727, 445, 1520, 309, 1564, 293, 291, 500, 380, 528, 281, 652, 561, 3806, 294, 1622, 51152, 51152, 281, 483, 641, 8795, 1699, 337, 300, 954, 13, 407, 291, 458, 309, 311, 257, 1871, 295, 19283, 281, 406, 51432, 51432, 362, 281, 1066, 319, 15723, 278, 309, 6460, 13, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.11108616555091178, "compression_ratio": 1.7161572052401746, "no_caption_prob": 1.8056225599138997e-05}, {"id": 72, "seek": 43856, "start": 454.32, "end": 459.92, "text": " to get their beer wait for that person. So you know it's a matter of convenience to not", "tokens": [50364, 8568, 550, 309, 576, 312, 257, 707, 857, 411, 633, 565, 291, 352, 281, 483, 257, 8795, 291, 1520, 50676, 50676, 428, 7348, 293, 300, 311, 733, 295, 11304, 570, 1310, 291, 528, 281, 483, 257, 1326, 34159, 13, 407, 309, 576, 50900, 50900, 312, 1481, 498, 291, 727, 445, 1520, 309, 1564, 293, 291, 500, 380, 528, 281, 652, 561, 3806, 294, 1622, 51152, 51152, 281, 483, 641, 8795, 1699, 337, 300, 954, 13, 407, 291, 458, 309, 311, 257, 1871, 295, 19283, 281, 406, 51432, 51432, 362, 281, 1066, 319, 15723, 278, 309, 6460, 13, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.11108616555091178, "compression_ratio": 1.7161572052401746, "no_caption_prob": 1.8056225599138997e-05}, {"id": 73, "seek": 43856, "start": 459.92, "end": 462.24, "text": " have to keep rechecking it constantly.", "tokens": [50364, 8568, 550, 309, 576, 312, 257, 707, 857, 411, 633, 565, 291, 352, 281, 483, 257, 8795, 291, 1520, 50676, 50676, 428, 7348, 293, 300, 311, 733, 295, 11304, 570, 1310, 291, 528, 281, 483, 257, 1326, 34159, 13, 407, 309, 576, 50900, 50900, 312, 1481, 498, 291, 727, 445, 1520, 309, 1564, 293, 291, 500, 380, 528, 281, 652, 561, 3806, 294, 1622, 51152, 51152, 281, 483, 641, 8795, 1699, 337, 300, 954, 13, 407, 291, 458, 309, 311, 257, 1871, 295, 19283, 281, 406, 51432, 51432, 362, 281, 1066, 319, 15723, 278, 309, 6460, 13, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.11108616555091178, "compression_ratio": 1.7161572052401746, "no_caption_prob": 1.8056225599138997e-05}, {"id": 74, "seek": 46224, "start": 462.24, "end": 469.24, "text": " Hey could I get five beers? Yes could I see your ID five times?", "tokens": [50364, 1911, 727, 286, 483, 1732, 34159, 30, 1079, 727, 286, 536, 428, 7348, 1732, 1413, 30, 50714, 50714, 865, 13, 50818, 50818, 865, 309, 311, 46196, 13, 407, 300, 311, 472, 1778, 337, 264, 2440, 644, 13, 583, 1071, 1778, 337, 51076, 51076, 264, 2440, 644, 307, 300, 309, 575, 281, 360, 544, 365, 4514, 13, 1743, 291, 528, 281, 458, 300, 264, 551, 51422, 51422, 8855, 437, 291, 434, 8568, 337, 293, 264, 15324, 291, 1520, 337, 300, 264, 15856, 309, 307, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18125597997145218, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.4686876208288595e-05}, {"id": 75, "seek": 46224, "start": 469.24, "end": 471.32, "text": " Yeah.", "tokens": [50364, 1911, 727, 286, 483, 1732, 34159, 30, 1079, 727, 286, 536, 428, 7348, 1732, 1413, 30, 50714, 50714, 865, 13, 50818, 50818, 865, 309, 311, 46196, 13, 407, 300, 311, 472, 1778, 337, 264, 2440, 644, 13, 583, 1071, 1778, 337, 51076, 51076, 264, 2440, 644, 307, 300, 309, 575, 281, 360, 544, 365, 4514, 13, 1743, 291, 528, 281, 458, 300, 264, 551, 51422, 51422, 8855, 437, 291, 434, 8568, 337, 293, 264, 15324, 291, 1520, 337, 300, 264, 15856, 309, 307, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18125597997145218, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.4686876208288595e-05}, {"id": 76, "seek": 46224, "start": 471.32, "end": 476.48, "text": " Yeah it's inconvenient. So that's one reason for the early part. But another reason for", "tokens": [50364, 1911, 727, 286, 483, 1732, 34159, 30, 1079, 727, 286, 536, 428, 7348, 1732, 1413, 30, 50714, 50714, 865, 13, 50818, 50818, 865, 309, 311, 46196, 13, 407, 300, 311, 472, 1778, 337, 264, 2440, 644, 13, 583, 1071, 1778, 337, 51076, 51076, 264, 2440, 644, 307, 300, 309, 575, 281, 360, 544, 365, 4514, 13, 1743, 291, 528, 281, 458, 300, 264, 551, 51422, 51422, 8855, 437, 291, 434, 8568, 337, 293, 264, 15324, 291, 1520, 337, 300, 264, 15856, 309, 307, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18125597997145218, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.4686876208288595e-05}, {"id": 77, "seek": 46224, "start": 476.48, "end": 483.40000000000003, "text": " the early part is that it has to do more with safety. Like you want to know that the thing", "tokens": [50364, 1911, 727, 286, 483, 1732, 34159, 30, 1079, 727, 286, 536, 428, 7348, 1732, 1413, 30, 50714, 50714, 865, 13, 50818, 50818, 865, 309, 311, 46196, 13, 407, 300, 311, 472, 1778, 337, 264, 2440, 644, 13, 583, 1071, 1778, 337, 51076, 51076, 264, 2440, 644, 307, 300, 309, 575, 281, 360, 544, 365, 4514, 13, 1743, 291, 528, 281, 458, 300, 264, 551, 51422, 51422, 8855, 437, 291, 434, 8568, 337, 293, 264, 15324, 291, 1520, 337, 300, 264, 15856, 309, 307, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18125597997145218, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.4686876208288595e-05}, {"id": 78, "seek": 46224, "start": 483.40000000000003, "end": 490.0, "text": " represents what you're checking for and the sooner you check for that the safer it is.", "tokens": [50364, 1911, 727, 286, 483, 1732, 34159, 30, 1079, 727, 286, 536, 428, 7348, 1732, 1413, 30, 50714, 50714, 865, 13, 50818, 50818, 865, 309, 311, 46196, 13, 407, 300, 311, 472, 1778, 337, 264, 2440, 644, 13, 583, 1071, 1778, 337, 51076, 51076, 264, 2440, 644, 307, 300, 309, 575, 281, 360, 544, 365, 4514, 13, 1743, 291, 528, 281, 458, 300, 264, 551, 51422, 51422, 8855, 437, 291, 434, 8568, 337, 293, 264, 15324, 291, 1520, 337, 300, 264, 15856, 309, 307, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.18125597997145218, "compression_ratio": 1.6666666666666667, "no_caption_prob": 4.4686876208288595e-05}, {"id": 79, "seek": 49000, "start": 490.0, "end": 495.32, "text": " The fewer opportunities there are for that thing to start to diverge and you to start", "tokens": [50364, 440, 13366, 4786, 456, 366, 337, 300, 551, 281, 722, 281, 18558, 432, 293, 291, 281, 722, 50630, 50630, 281, 3624, 2837, 295, 437, 264, 551, 4140, 13, 407, 498, 291, 362, 257, 498, 746, 1487, 294, 382, 257, 6798, 50992, 50992, 293, 291, 434, 411, 286, 519, 341, 8855, 257, 2093, 3825, 1230, 420, 286, 519, 341, 8855, 51290, 51290, 257, 30351, 13, 1042, 264, 20344, 309, 1224, 8065, 666, 428, 3089, 3096, 1230, 472, 264, 544, 4786, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10492500626897237, "compression_ratio": 1.7647058823529411, "no_caption_prob": 1.2218893061799463e-05}, {"id": 80, "seek": 49000, "start": 495.32, "end": 502.56, "text": " to lose track of what the thing meant. So if you have a if something comes in as a string", "tokens": [50364, 440, 13366, 4786, 456, 366, 337, 300, 551, 281, 722, 281, 18558, 432, 293, 291, 281, 722, 50630, 50630, 281, 3624, 2837, 295, 437, 264, 551, 4140, 13, 407, 498, 291, 362, 257, 498, 746, 1487, 294, 382, 257, 6798, 50992, 50992, 293, 291, 434, 411, 286, 519, 341, 8855, 257, 2093, 3825, 1230, 420, 286, 519, 341, 8855, 51290, 51290, 257, 30351, 13, 1042, 264, 20344, 309, 1224, 8065, 666, 428, 3089, 3096, 1230, 472, 264, 544, 4786, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10492500626897237, "compression_ratio": 1.7647058823529411, "no_caption_prob": 1.2218893061799463e-05}, {"id": 81, "seek": 49000, "start": 502.56, "end": 508.52, "text": " and you're like I think this represents a social security number or I think this represents", "tokens": [50364, 440, 13366, 4786, 456, 366, 337, 300, 551, 281, 722, 281, 18558, 432, 293, 291, 281, 722, 50630, 50630, 281, 3624, 2837, 295, 437, 264, 551, 4140, 13, 407, 498, 291, 362, 257, 498, 746, 1487, 294, 382, 257, 6798, 50992, 50992, 293, 291, 434, 411, 286, 519, 341, 8855, 257, 2093, 3825, 1230, 420, 286, 519, 341, 8855, 51290, 51290, 257, 30351, 13, 1042, 264, 20344, 309, 1224, 8065, 666, 428, 3089, 3096, 1230, 472, 264, 544, 4786, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10492500626897237, "compression_ratio": 1.7647058823529411, "no_caption_prob": 1.2218893061799463e-05}, {"id": 82, "seek": 49000, "start": 508.52, "end": 515.04, "text": " a username. Well the farther it drifts into your code base number one the more opportunities", "tokens": [50364, 440, 13366, 4786, 456, 366, 337, 300, 551, 281, 722, 281, 18558, 432, 293, 291, 281, 722, 50630, 50630, 281, 3624, 2837, 295, 437, 264, 551, 4140, 13, 407, 498, 291, 362, 257, 498, 746, 1487, 294, 382, 257, 6798, 50992, 50992, 293, 291, 434, 411, 286, 519, 341, 8855, 257, 2093, 3825, 1230, 420, 286, 519, 341, 8855, 51290, 51290, 257, 30351, 13, 1042, 264, 20344, 309, 1224, 8065, 666, 428, 3089, 3096, 1230, 472, 264, 544, 4786, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10492500626897237, "compression_ratio": 1.7647058823529411, "no_caption_prob": 1.2218893061799463e-05}, {"id": 83, "seek": 51504, "start": 515.04, "end": 522.62, "text": " there are to use it in a way that you that is incorrect or unsafe or undesirable.", "tokens": [50364, 456, 366, 281, 764, 309, 294, 257, 636, 300, 291, 300, 307, 18424, 420, 35948, 420, 45667, 21493, 13, 50743, 50743, 407, 337, 5197, 8437, 264, 3796, 382, 257, 30351, 293, 264, 30351, 382, 264, 3796, 337, 5197, 13, 51048, 51048, 7587, 293, 8437, 257, 2093, 3825, 1230, 281, 312, 2279, 281, 257, 1081, 689, 309, 311, 516, 281, 51394, 51394, 312, 16372, 1553, 885, 45249, 420, 370, 309, 311, 6081, 281, 13, 407, 456, 366, 544, 3995, 3190, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11230549180364034, "compression_ratio": 1.729064039408867, "no_caption_prob": 4.539627843769267e-05}, {"id": 84, "seek": 51504, "start": 522.62, "end": 528.7199999999999, "text": " So for instance passing the email as a username and the username as the email for instance.", "tokens": [50364, 456, 366, 281, 764, 309, 294, 257, 636, 300, 291, 300, 307, 18424, 420, 35948, 420, 45667, 21493, 13, 50743, 50743, 407, 337, 5197, 8437, 264, 3796, 382, 257, 30351, 293, 264, 30351, 382, 264, 3796, 337, 5197, 13, 51048, 51048, 7587, 293, 8437, 257, 2093, 3825, 1230, 281, 312, 2279, 281, 257, 1081, 689, 309, 311, 516, 281, 51394, 51394, 312, 16372, 1553, 885, 45249, 420, 370, 309, 311, 6081, 281, 13, 407, 456, 366, 544, 3995, 3190, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11230549180364034, "compression_ratio": 1.729064039408867, "no_caption_prob": 4.539627843769267e-05}, {"id": 85, "seek": 51504, "start": 528.7199999999999, "end": 535.64, "text": " Exactly and passing a social security number to be sent to a place where it's going to", "tokens": [50364, 456, 366, 281, 764, 309, 294, 257, 636, 300, 291, 300, 307, 18424, 420, 35948, 420, 45667, 21493, 13, 50743, 50743, 407, 337, 5197, 8437, 264, 3796, 382, 257, 30351, 293, 264, 30351, 382, 264, 3796, 337, 5197, 13, 51048, 51048, 7587, 293, 8437, 257, 2093, 3825, 1230, 281, 312, 2279, 281, 257, 1081, 689, 309, 311, 516, 281, 51394, 51394, 312, 16372, 1553, 885, 45249, 420, 370, 309, 311, 6081, 281, 13, 407, 456, 366, 544, 3995, 3190, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11230549180364034, "compression_ratio": 1.729064039408867, "no_caption_prob": 4.539627843769267e-05}, {"id": 86, "seek": 51504, "start": 535.64, "end": 542.7199999999999, "text": " be displayed without being masked or so it's harder to. So there are more potential places", "tokens": [50364, 456, 366, 281, 764, 309, 294, 257, 636, 300, 291, 300, 307, 18424, 420, 35948, 420, 45667, 21493, 13, 50743, 50743, 407, 337, 5197, 8437, 264, 3796, 382, 257, 30351, 293, 264, 30351, 382, 264, 3796, 337, 5197, 13, 51048, 51048, 7587, 293, 8437, 257, 2093, 3825, 1230, 281, 312, 2279, 281, 257, 1081, 689, 309, 311, 516, 281, 51394, 51394, 312, 16372, 1553, 885, 45249, 420, 370, 309, 311, 6081, 281, 13, 407, 456, 366, 544, 3995, 3190, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.11230549180364034, "compression_ratio": 1.729064039408867, "no_caption_prob": 4.539627843769267e-05}, {"id": 87, "seek": 54272, "start": 542.72, "end": 551.0400000000001, "text": " where you can use the type in an unsafe way. Either that the type has a certain way of", "tokens": [50364, 689, 291, 393, 764, 264, 2010, 294, 364, 35948, 636, 13, 13746, 300, 264, 2010, 575, 257, 1629, 636, 295, 50780, 50780, 885, 1143, 300, 291, 528, 281, 5968, 411, 257, 2093, 3825, 1230, 406, 885, 16372, 294, 1629, 50990, 50990, 30628, 420, 257, 11524, 293, 291, 528, 281, 652, 988, 309, 307, 264, 551, 300, 291, 848, 309, 390, 13, 51293, 51293, 407, 300, 311, 1230, 732, 558, 307, 411, 264, 4966, 291, 366, 281, 264, 935, 689, 291, 4774, 264, 51552, 51552, 551, 264, 1570, 3700, 291, 366, 281, 2082, 721, 493, 13, 1079, 570, 370, 498, 291, 360, 411, 979, 1429, 2519, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.1045346916268725, "compression_ratio": 1.8326530612244898, "no_caption_prob": 1.130045984609751e-05}, {"id": 88, "seek": 54272, "start": 551.0400000000001, "end": 555.24, "text": " being used that you want to honor like a social security number not being displayed in certain", "tokens": [50364, 689, 291, 393, 764, 264, 2010, 294, 364, 35948, 636, 13, 13746, 300, 264, 2010, 575, 257, 1629, 636, 295, 50780, 50780, 885, 1143, 300, 291, 528, 281, 5968, 411, 257, 2093, 3825, 1230, 406, 885, 16372, 294, 1629, 50990, 50990, 30628, 420, 257, 11524, 293, 291, 528, 281, 652, 988, 309, 307, 264, 551, 300, 291, 848, 309, 390, 13, 51293, 51293, 407, 300, 311, 1230, 732, 558, 307, 411, 264, 4966, 291, 366, 281, 264, 935, 689, 291, 4774, 264, 51552, 51552, 551, 264, 1570, 3700, 291, 366, 281, 2082, 721, 493, 13, 1079, 570, 370, 498, 291, 360, 411, 979, 1429, 2519, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.1045346916268725, "compression_ratio": 1.8326530612244898, "no_caption_prob": 1.130045984609751e-05}, {"id": 89, "seek": 54272, "start": 555.24, "end": 561.3000000000001, "text": " contexts or a password and you want to make sure it is the thing that you said it was.", "tokens": [50364, 689, 291, 393, 764, 264, 2010, 294, 364, 35948, 636, 13, 13746, 300, 264, 2010, 575, 257, 1629, 636, 295, 50780, 50780, 885, 1143, 300, 291, 528, 281, 5968, 411, 257, 2093, 3825, 1230, 406, 885, 16372, 294, 1629, 50990, 50990, 30628, 420, 257, 11524, 293, 291, 528, 281, 652, 988, 309, 307, 264, 551, 300, 291, 848, 309, 390, 13, 51293, 51293, 407, 300, 311, 1230, 732, 558, 307, 411, 264, 4966, 291, 366, 281, 264, 935, 689, 291, 4774, 264, 51552, 51552, 551, 264, 1570, 3700, 291, 366, 281, 2082, 721, 493, 13, 1079, 570, 370, 498, 291, 360, 411, 979, 1429, 2519, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.1045346916268725, "compression_ratio": 1.8326530612244898, "no_caption_prob": 1.130045984609751e-05}, {"id": 90, "seek": 54272, "start": 561.3000000000001, "end": 566.48, "text": " So that's number two right is like the closer you are to the point where you receive the", "tokens": [50364, 689, 291, 393, 764, 264, 2010, 294, 364, 35948, 636, 13, 13746, 300, 264, 2010, 575, 257, 1629, 636, 295, 50780, 50780, 885, 1143, 300, 291, 528, 281, 5968, 411, 257, 2093, 3825, 1230, 406, 885, 16372, 294, 1629, 50990, 50990, 30628, 420, 257, 11524, 293, 291, 528, 281, 652, 988, 309, 307, 264, 551, 300, 291, 848, 309, 390, 13, 51293, 51293, 407, 300, 311, 1230, 732, 558, 307, 411, 264, 4966, 291, 366, 281, 264, 935, 689, 291, 4774, 264, 51552, 51552, 551, 264, 1570, 3700, 291, 366, 281, 2082, 721, 493, 13, 1079, 570, 370, 498, 291, 360, 411, 979, 1429, 2519, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.1045346916268725, "compression_ratio": 1.8326530612244898, "no_caption_prob": 1.130045984609751e-05}, {"id": 91, "seek": 54272, "start": 566.48, "end": 572.62, "text": " thing the less likely you are to mess things up. Yes because so if you do like decode field", "tokens": [50364, 689, 291, 393, 764, 264, 2010, 294, 364, 35948, 636, 13, 13746, 300, 264, 2010, 575, 257, 1629, 636, 295, 50780, 50780, 885, 1143, 300, 291, 528, 281, 5968, 411, 257, 2093, 3825, 1230, 406, 885, 16372, 294, 1629, 50990, 50990, 30628, 420, 257, 11524, 293, 291, 528, 281, 652, 988, 309, 307, 264, 551, 300, 291, 848, 309, 390, 13, 51293, 51293, 407, 300, 311, 1230, 732, 558, 307, 411, 264, 4966, 291, 366, 281, 264, 935, 689, 291, 4774, 264, 51552, 51552, 551, 264, 1570, 3700, 291, 366, 281, 2082, 721, 493, 13, 1079, 570, 370, 498, 291, 360, 411, 979, 1429, 2519, 51859, 51859], "temperature": 0.0, "avg_logprob": -0.1045346916268725, "compression_ratio": 1.8326530612244898, "no_caption_prob": 1.130045984609751e-05}, {"id": 92, "seek": 57262, "start": 572.62, "end": 580.68, "text": " username username decoder so decode field string username username decoder you're saying", "tokens": [50364, 30351, 30351, 979, 19866, 370, 979, 1429, 2519, 6798, 30351, 30351, 979, 19866, 291, 434, 1566, 50767, 50767, 286, 478, 1242, 341, 551, 341, 31828, 2158, 300, 8855, 264, 30351, 309, 311, 1219, 30351, 51027, 51027, 370, 286, 478, 1238, 988, 286, 478, 884, 300, 558, 286, 478, 406, 11983, 309, 493, 293, 550, 286, 478, 884, 30351, 51283, 51283, 979, 19866, 309, 3838, 25831, 309, 666, 257, 30351, 412, 300, 1623, 370, 309, 1128, 8198, 294, 264, 3089, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.1278742250189724, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.8409498554538004e-05}, {"id": 93, "seek": 57262, "start": 580.68, "end": 585.88, "text": " I'm getting this thing this JSON value that represents the username it's called username", "tokens": [50364, 30351, 30351, 979, 19866, 370, 979, 1429, 2519, 6798, 30351, 30351, 979, 19866, 291, 434, 1566, 50767, 50767, 286, 478, 1242, 341, 551, 341, 31828, 2158, 300, 8855, 264, 30351, 309, 311, 1219, 30351, 51027, 51027, 370, 286, 478, 1238, 988, 286, 478, 884, 300, 558, 286, 478, 406, 11983, 309, 493, 293, 550, 286, 478, 884, 30351, 51283, 51283, 979, 19866, 309, 3838, 25831, 309, 666, 257, 30351, 412, 300, 1623, 370, 309, 1128, 8198, 294, 264, 3089, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.1278742250189724, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.8409498554538004e-05}, {"id": 94, "seek": 57262, "start": 585.88, "end": 591.0, "text": " so I'm pretty sure I'm doing that right I'm not mixing it up and then I'm doing username", "tokens": [50364, 30351, 30351, 979, 19866, 370, 979, 1429, 2519, 6798, 30351, 30351, 979, 19866, 291, 434, 1566, 50767, 50767, 286, 478, 1242, 341, 551, 341, 31828, 2158, 300, 8855, 264, 30351, 309, 311, 1219, 30351, 51027, 51027, 370, 286, 478, 1238, 988, 286, 478, 884, 300, 558, 286, 478, 406, 11983, 309, 493, 293, 550, 286, 478, 884, 30351, 51283, 51283, 979, 19866, 309, 3838, 25831, 309, 666, 257, 30351, 412, 300, 1623, 370, 309, 1128, 8198, 294, 264, 3089, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.1278742250189724, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.8409498554538004e-05}, {"id": 95, "seek": 57262, "start": 591.0, "end": 597.92, "text": " decoder it directly wraps it into a username at that moment so it never exists in the code", "tokens": [50364, 30351, 30351, 979, 19866, 370, 979, 1429, 2519, 6798, 30351, 30351, 979, 19866, 291, 434, 1566, 50767, 50767, 286, 478, 1242, 341, 551, 341, 31828, 2158, 300, 8855, 264, 30351, 309, 311, 1219, 30351, 51027, 51027, 370, 286, 478, 1238, 988, 286, 478, 884, 300, 558, 286, 478, 406, 11983, 309, 493, 293, 550, 286, 478, 884, 30351, 51283, 51283, 979, 19866, 309, 3838, 25831, 309, 666, 257, 30351, 412, 300, 1623, 370, 309, 1128, 8198, 294, 264, 3089, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.1278742250189724, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.8409498554538004e-05}, {"id": 96, "seek": 59792, "start": 597.92, "end": 604.3199999999999, "text": " base as a string if it did if you did decode that field username decode that string now", "tokens": [50364, 3096, 382, 257, 6798, 498, 309, 630, 498, 291, 630, 979, 1429, 300, 2519, 30351, 979, 1429, 300, 6798, 586, 50684, 50684, 291, 434, 979, 8616, 309, 294, 382, 257, 6798, 293, 257, 707, 857, 1780, 294, 264, 15517, 291, 434, 516, 281, 50964, 50964, 584, 1954, 718, 385, 7019, 341, 666, 257, 30351, 2158, 281, 584, 300, 341, 8855, 257, 30351, 293, 51254, 51254, 281, 281, 29562, 300, 309, 307, 257, 3006, 30351, 731, 797, 411, 309, 727, 19699, 309, 727, 291, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12012596788077519, "compression_ratio": 1.903225806451613, "no_caption_prob": 4.611128315445967e-05}, {"id": 97, "seek": 59792, "start": 604.3199999999999, "end": 609.92, "text": " you're decoding it in as a string and a little bit later in the pipeline you're going to", "tokens": [50364, 3096, 382, 257, 6798, 498, 309, 630, 498, 291, 630, 979, 1429, 300, 2519, 30351, 979, 1429, 300, 6798, 586, 50684, 50684, 291, 434, 979, 8616, 309, 294, 382, 257, 6798, 293, 257, 707, 857, 1780, 294, 264, 15517, 291, 434, 516, 281, 50964, 50964, 584, 1954, 718, 385, 7019, 341, 666, 257, 30351, 2158, 281, 584, 300, 341, 8855, 257, 30351, 293, 51254, 51254, 281, 281, 29562, 300, 309, 307, 257, 3006, 30351, 731, 797, 411, 309, 727, 19699, 309, 727, 291, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12012596788077519, "compression_ratio": 1.903225806451613, "no_caption_prob": 4.611128315445967e-05}, {"id": 98, "seek": 59792, "start": 609.92, "end": 615.7199999999999, "text": " say oh let me wrap this into a username value to say that this represents a username and", "tokens": [50364, 3096, 382, 257, 6798, 498, 309, 630, 498, 291, 630, 979, 1429, 300, 2519, 30351, 979, 1429, 300, 6798, 586, 50684, 50684, 291, 434, 979, 8616, 309, 294, 382, 257, 6798, 293, 257, 707, 857, 1780, 294, 264, 15517, 291, 434, 516, 281, 50964, 50964, 584, 1954, 718, 385, 7019, 341, 666, 257, 30351, 2158, 281, 584, 300, 341, 8855, 257, 30351, 293, 51254, 51254, 281, 281, 29562, 300, 309, 307, 257, 3006, 30351, 731, 797, 411, 309, 727, 19699, 309, 727, 291, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12012596788077519, "compression_ratio": 1.903225806451613, "no_caption_prob": 4.611128315445967e-05}, {"id": 99, "seek": 59792, "start": 615.7199999999999, "end": 623.9599999999999, "text": " to to validate that it is a correct username well again like it could drift it could you", "tokens": [50364, 3096, 382, 257, 6798, 498, 309, 630, 498, 291, 630, 979, 1429, 300, 2519, 30351, 979, 1429, 300, 6798, 586, 50684, 50684, 291, 434, 979, 8616, 309, 294, 382, 257, 6798, 293, 257, 707, 857, 1780, 294, 264, 15517, 291, 434, 516, 281, 50964, 50964, 584, 1954, 718, 385, 7019, 341, 666, 257, 30351, 2158, 281, 584, 300, 341, 8855, 257, 30351, 293, 51254, 51254, 281, 281, 29562, 300, 309, 307, 257, 3006, 30351, 731, 797, 411, 309, 727, 19699, 309, 727, 291, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.12012596788077519, "compression_ratio": 1.903225806451613, "no_caption_prob": 4.611128315445967e-05}, {"id": 100, "seek": 62396, "start": 623.96, "end": 628.88, "text": " could mistakenly mix it up with something else you could pass it to a place that you're", "tokens": [50364, 727, 21333, 356, 2890, 309, 493, 365, 746, 1646, 291, 727, 1320, 309, 281, 257, 1081, 300, 291, 434, 50610, 50610, 9650, 281, 362, 364, 7348, 457, 291, 2729, 309, 257, 30351, 291, 727, 976, 257, 1081, 300, 390, 9650, 50800, 50800, 257, 30351, 364, 7348, 293, 611, 797, 445, 411, 291, 458, 2902, 428, 7348, 281, 281, 633, 24321, 51234, 51234, 300, 291, 434, 6382, 257, 8795, 490, 291, 291, 434, 1419, 281, 319, 15723, 300, 24071, 670, 293, 51544, 51544, 670, 797, 544, 3190, 813, 291, 643, 281, 370, 370, 300, 311, 264, 291, 458, 264, 7019, 644, 797, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.08592774527413505, "compression_ratio": 1.9039301310043668, "no_caption_prob": 3.2697942515369505e-05}, {"id": 101, "seek": 62396, "start": 628.88, "end": 632.6800000000001, "text": " expecting to have an ID but you gave it a username you could give a place that was expecting", "tokens": [50364, 727, 21333, 356, 2890, 309, 493, 365, 746, 1646, 291, 727, 1320, 309, 281, 257, 1081, 300, 291, 434, 50610, 50610, 9650, 281, 362, 364, 7348, 457, 291, 2729, 309, 257, 30351, 291, 727, 976, 257, 1081, 300, 390, 9650, 50800, 50800, 257, 30351, 364, 7348, 293, 611, 797, 445, 411, 291, 458, 2902, 428, 7348, 281, 281, 633, 24321, 51234, 51234, 300, 291, 434, 6382, 257, 8795, 490, 291, 291, 434, 1419, 281, 319, 15723, 300, 24071, 670, 293, 51544, 51544, 670, 797, 544, 3190, 813, 291, 643, 281, 370, 370, 300, 311, 264, 291, 458, 264, 7019, 644, 797, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.08592774527413505, "compression_ratio": 1.9039301310043668, "no_caption_prob": 3.2697942515369505e-05}, {"id": 102, "seek": 62396, "start": 632.6800000000001, "end": 641.36, "text": " a username an ID and also again just like you know giving your ID to to every vendor", "tokens": [50364, 727, 21333, 356, 2890, 309, 493, 365, 746, 1646, 291, 727, 1320, 309, 281, 257, 1081, 300, 291, 434, 50610, 50610, 9650, 281, 362, 364, 7348, 457, 291, 2729, 309, 257, 30351, 291, 727, 976, 257, 1081, 300, 390, 9650, 50800, 50800, 257, 30351, 364, 7348, 293, 611, 797, 445, 411, 291, 458, 2902, 428, 7348, 281, 281, 633, 24321, 51234, 51234, 300, 291, 434, 6382, 257, 8795, 490, 291, 291, 434, 1419, 281, 319, 15723, 300, 24071, 670, 293, 51544, 51544, 670, 797, 544, 3190, 813, 291, 643, 281, 370, 370, 300, 311, 264, 291, 458, 264, 7019, 644, 797, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.08592774527413505, "compression_ratio": 1.9039301310043668, "no_caption_prob": 3.2697942515369505e-05}, {"id": 103, "seek": 62396, "start": 641.36, "end": 647.5600000000001, "text": " that you're buying a beer from you you're having to recheck that validation over and", "tokens": [50364, 727, 21333, 356, 2890, 309, 493, 365, 746, 1646, 291, 727, 1320, 309, 281, 257, 1081, 300, 291, 434, 50610, 50610, 9650, 281, 362, 364, 7348, 457, 291, 2729, 309, 257, 30351, 291, 727, 976, 257, 1081, 300, 390, 9650, 50800, 50800, 257, 30351, 364, 7348, 293, 611, 797, 445, 411, 291, 458, 2902, 428, 7348, 281, 281, 633, 24321, 51234, 51234, 300, 291, 434, 6382, 257, 8795, 490, 291, 291, 434, 1419, 281, 319, 15723, 300, 24071, 670, 293, 51544, 51544, 670, 797, 544, 3190, 813, 291, 643, 281, 370, 370, 300, 311, 264, 291, 458, 264, 7019, 644, 797, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.08592774527413505, "compression_ratio": 1.9039301310043668, "no_caption_prob": 3.2697942515369505e-05}, {"id": 104, "seek": 62396, "start": 647.5600000000001, "end": 653.7, "text": " over again more places than you need to so so that's the you know the wrap part again", "tokens": [50364, 727, 21333, 356, 2890, 309, 493, 365, 746, 1646, 291, 727, 1320, 309, 281, 257, 1081, 300, 291, 434, 50610, 50610, 9650, 281, 362, 364, 7348, 457, 291, 2729, 309, 257, 30351, 291, 727, 976, 257, 1081, 300, 390, 9650, 50800, 50800, 257, 30351, 364, 7348, 293, 611, 797, 445, 411, 291, 458, 2902, 428, 7348, 281, 281, 633, 24321, 51234, 51234, 300, 291, 434, 6382, 257, 8795, 490, 291, 291, 434, 1419, 281, 319, 15723, 300, 24071, 670, 293, 51544, 51544, 670, 797, 544, 3190, 813, 291, 643, 281, 370, 370, 300, 311, 264, 291, 458, 264, 7019, 644, 797, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.08592774527413505, "compression_ratio": 1.9039301310043668, "no_caption_prob": 3.2697942515369505e-05}, {"id": 105, "seek": 65370, "start": 653.7, "end": 659.48, "text": " it's about what are the constraints that we want for this type what does it represent", "tokens": [50364, 309, 311, 466, 437, 366, 264, 18491, 300, 321, 528, 337, 341, 2010, 437, 775, 309, 2906, 50653, 50653, 577, 393, 309, 312, 1143, 437, 437, 360, 321, 458, 466, 309, 293, 550, 264, 2440, 644, 307, 291, 528, 281, 51053, 51053, 360, 309, 382, 2321, 382, 1944, 370, 300, 309, 307, 406, 42892, 1143, 293, 370, 300, 309, 307, 321, 434, 544, 51396, 51396, 6679, 300, 309, 307, 437, 321, 584, 309, 307, 570, 321, 500, 380, 362, 309, 12607, 926, 382, 257, 1333, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.05163702804051089, "compression_ratio": 1.8195876288659794, "no_caption_prob": 4.222784809826408e-06}, {"id": 106, "seek": 65370, "start": 659.48, "end": 667.48, "text": " how can it be used what what do we know about it and then the early part is you want to", "tokens": [50364, 309, 311, 466, 437, 366, 264, 18491, 300, 321, 528, 337, 341, 2010, 437, 775, 309, 2906, 50653, 50653, 577, 393, 309, 312, 1143, 437, 437, 360, 321, 458, 466, 309, 293, 550, 264, 2440, 644, 307, 291, 528, 281, 51053, 51053, 360, 309, 382, 2321, 382, 1944, 370, 300, 309, 307, 406, 42892, 1143, 293, 370, 300, 309, 307, 321, 434, 544, 51396, 51396, 6679, 300, 309, 307, 437, 321, 584, 309, 307, 570, 321, 500, 380, 362, 309, 12607, 926, 382, 257, 1333, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.05163702804051089, "compression_ratio": 1.8195876288659794, "no_caption_prob": 4.222784809826408e-06}, {"id": 107, "seek": 65370, "start": 667.48, "end": 674.34, "text": " do it as soon as possible so that it is not incorrectly used and so that it is we're more", "tokens": [50364, 309, 311, 466, 437, 366, 264, 18491, 300, 321, 528, 337, 341, 2010, 437, 775, 309, 2906, 50653, 50653, 577, 393, 309, 312, 1143, 437, 437, 360, 321, 458, 466, 309, 293, 550, 264, 2440, 644, 307, 291, 528, 281, 51053, 51053, 360, 309, 382, 2321, 382, 1944, 370, 300, 309, 307, 406, 42892, 1143, 293, 370, 300, 309, 307, 321, 434, 544, 51396, 51396, 6679, 300, 309, 307, 437, 321, 584, 309, 307, 570, 321, 500, 380, 362, 309, 12607, 926, 382, 257, 1333, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.05163702804051089, "compression_ratio": 1.8195876288659794, "no_caption_prob": 4.222784809826408e-06}, {"id": 108, "seek": 65370, "start": 674.34, "end": 680.1400000000001, "text": " confident that it is what we say it is because we don't have it floating around as a sort", "tokens": [50364, 309, 311, 466, 437, 366, 264, 18491, 300, 321, 528, 337, 341, 2010, 437, 775, 309, 2906, 50653, 50653, 577, 393, 309, 312, 1143, 437, 437, 360, 321, 458, 466, 309, 293, 550, 264, 2440, 644, 307, 291, 528, 281, 51053, 51053, 360, 309, 382, 2321, 382, 1944, 370, 300, 309, 307, 406, 42892, 1143, 293, 370, 300, 309, 307, 321, 434, 544, 51396, 51396, 6679, 300, 309, 307, 437, 321, 584, 309, 307, 570, 321, 500, 380, 362, 309, 12607, 926, 382, 257, 1333, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.05163702804051089, "compression_ratio": 1.8195876288659794, "no_caption_prob": 4.222784809826408e-06}, {"id": 109, "seek": 68014, "start": 680.14, "end": 685.76, "text": " of primitive type that we're piecing together where we've lost context so so that piece", "tokens": [50364, 295, 28540, 2010, 300, 321, 434, 1730, 2175, 1214, 689, 321, 600, 2731, 4319, 370, 370, 300, 2522, 50645, 50645, 466, 264, 264, 1780, 291, 352, 264, 544, 4786, 456, 366, 337, 7027, 4319, 293, 300, 311, 983, 50919, 50919, 741, 519, 264, 2440, 644, 307, 534, 1021, 293, 550, 456, 311, 264, 14853, 424, 3320, 644, 293, 294, 51149, 51149, 1296, 264, 1623, 291, 7019, 721, 293, 300, 291, 14853, 4007, 721, 291, 362, 439, 264, 32567, 51445, 51445, 300, 291, 362, 365, 42687, 3467, 365, 2107, 28540, 3467, 370, 291, 393, 1338, 291, 393, 360, 2035, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.05366828394871132, "compression_ratio": 1.9067796610169492, "no_caption_prob": 7.071815616654931e-06}, {"id": 110, "seek": 68014, "start": 685.76, "end": 691.24, "text": " about the the later you go the more opportunities there are for losing context and that's why", "tokens": [50364, 295, 28540, 2010, 300, 321, 434, 1730, 2175, 1214, 689, 321, 600, 2731, 4319, 370, 370, 300, 2522, 50645, 50645, 466, 264, 264, 1780, 291, 352, 264, 544, 4786, 456, 366, 337, 7027, 4319, 293, 300, 311, 983, 50919, 50919, 741, 519, 264, 2440, 644, 307, 534, 1021, 293, 550, 456, 311, 264, 14853, 424, 3320, 644, 293, 294, 51149, 51149, 1296, 264, 1623, 291, 7019, 721, 293, 300, 291, 14853, 4007, 721, 291, 362, 439, 264, 32567, 51445, 51445, 300, 291, 362, 365, 42687, 3467, 365, 2107, 28540, 3467, 370, 291, 393, 1338, 291, 393, 360, 2035, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.05366828394871132, "compression_ratio": 1.9067796610169492, "no_caption_prob": 7.071815616654931e-06}, {"id": 111, "seek": 68014, "start": 691.24, "end": 695.84, "text": " i think the early part is really important and then there's the unwrapped part and in", "tokens": [50364, 295, 28540, 2010, 300, 321, 434, 1730, 2175, 1214, 689, 321, 600, 2731, 4319, 370, 370, 300, 2522, 50645, 50645, 466, 264, 264, 1780, 291, 352, 264, 544, 4786, 456, 366, 337, 7027, 4319, 293, 300, 311, 983, 50919, 50919, 741, 519, 264, 2440, 644, 307, 534, 1021, 293, 550, 456, 311, 264, 14853, 424, 3320, 644, 293, 294, 51149, 51149, 1296, 264, 1623, 291, 7019, 721, 293, 300, 291, 14853, 4007, 721, 291, 362, 439, 264, 32567, 51445, 51445, 300, 291, 362, 365, 42687, 3467, 365, 2107, 28540, 3467, 370, 291, 393, 1338, 291, 393, 360, 2035, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.05366828394871132, "compression_ratio": 1.9067796610169492, "no_caption_prob": 7.071815616654931e-06}, {"id": 112, "seek": 68014, "start": 695.84, "end": 701.76, "text": " between the moment you wrap things and that you unwrap things you have all the guarantees", "tokens": [50364, 295, 28540, 2010, 300, 321, 434, 1730, 2175, 1214, 689, 321, 600, 2731, 4319, 370, 370, 300, 2522, 50645, 50645, 466, 264, 264, 1780, 291, 352, 264, 544, 4786, 456, 366, 337, 7027, 4319, 293, 300, 311, 983, 50919, 50919, 741, 519, 264, 2440, 644, 307, 534, 1021, 293, 550, 456, 311, 264, 14853, 424, 3320, 644, 293, 294, 51149, 51149, 1296, 264, 1623, 291, 7019, 721, 293, 300, 291, 14853, 4007, 721, 291, 362, 439, 264, 32567, 51445, 51445, 300, 291, 362, 365, 42687, 3467, 365, 2107, 28540, 3467, 370, 291, 393, 1338, 291, 393, 360, 2035, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.05366828394871132, "compression_ratio": 1.9067796610169492, "no_caption_prob": 7.071815616654931e-06}, {"id": 113, "seek": 68014, "start": 701.76, "end": 707.54, "text": " that you have with opaque types with non primitive types so you can yeah you can do whatever", "tokens": [50364, 295, 28540, 2010, 300, 321, 434, 1730, 2175, 1214, 689, 321, 600, 2731, 4319, 370, 370, 300, 2522, 50645, 50645, 466, 264, 264, 1780, 291, 352, 264, 544, 4786, 456, 366, 337, 7027, 4319, 293, 300, 311, 983, 50919, 50919, 741, 519, 264, 2440, 644, 307, 534, 1021, 293, 550, 456, 311, 264, 14853, 424, 3320, 644, 293, 294, 51149, 51149, 1296, 264, 1623, 291, 7019, 721, 293, 300, 291, 14853, 4007, 721, 291, 362, 439, 264, 32567, 51445, 51445, 300, 291, 362, 365, 42687, 3467, 365, 2107, 28540, 3467, 370, 291, 393, 1338, 291, 393, 360, 2035, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.05366828394871132, "compression_ratio": 1.9067796610169492, "no_caption_prob": 7.071815616654931e-06}, {"id": 114, "seek": 70754, "start": 707.54, "end": 714.2199999999999, "text": " you want with it yeah and and you know again that i feel like we need that you know that", "tokens": [50364, 291, 528, 365, 309, 1338, 293, 293, 291, 458, 797, 300, 741, 841, 411, 321, 643, 300, 291, 458, 300, 50698, 50698, 21701, 295, 456, 311, 257, 21701, 466, 42687, 3467, 1238, 709, 309, 311, 411, 341, 360, 996, 414, 360, 689, 50958, 50958, 436, 434, 8407, 766, 264, 6094, 293, 436, 434, 411, 47340, 309, 390, 341, 954, 439, 2051, 293, 550, 51167, 51167, 436, 436, 2464, 437, 309, 390, 309, 311, 445, 411, 806, 76, 6477, 3500, 8407, 766, 264, 6094, 307, 51389, 51389, 411, 47340, 309, 390, 42687, 3467, 439, 2051, 457, 1338, 309, 775, 362, 257, 2068, 2480, 365, 51715, 51715], "temperature": 0.0, "avg_logprob": -0.0981162597085828, "compression_ratio": 1.954954954954955, "no_caption_prob": 2.17820743273478e-05}, {"id": 115, "seek": 70754, "start": 714.2199999999999, "end": 719.42, "text": " meme of there's a meme about opaque types pretty much it's like this doobie do where", "tokens": [50364, 291, 528, 365, 309, 1338, 293, 293, 291, 458, 797, 300, 741, 841, 411, 321, 643, 300, 291, 458, 300, 50698, 50698, 21701, 295, 456, 311, 257, 21701, 466, 42687, 3467, 1238, 709, 309, 311, 411, 341, 360, 996, 414, 360, 689, 50958, 50958, 436, 434, 8407, 766, 264, 6094, 293, 436, 434, 411, 47340, 309, 390, 341, 954, 439, 2051, 293, 550, 51167, 51167, 436, 436, 2464, 437, 309, 390, 309, 311, 445, 411, 806, 76, 6477, 3500, 8407, 766, 264, 6094, 307, 51389, 51389, 411, 47340, 309, 390, 42687, 3467, 439, 2051, 457, 1338, 309, 775, 362, 257, 2068, 2480, 365, 51715, 51715], "temperature": 0.0, "avg_logprob": -0.0981162597085828, "compression_ratio": 1.954954954954955, "no_caption_prob": 2.17820743273478e-05}, {"id": 116, "seek": 70754, "start": 719.42, "end": 723.5999999999999, "text": " they're pulling off the mask and they're like aha it was this person all along and then", "tokens": [50364, 291, 528, 365, 309, 1338, 293, 293, 291, 458, 797, 300, 741, 841, 411, 321, 643, 300, 291, 458, 300, 50698, 50698, 21701, 295, 456, 311, 257, 21701, 466, 42687, 3467, 1238, 709, 309, 311, 411, 341, 360, 996, 414, 360, 689, 50958, 50958, 436, 434, 8407, 766, 264, 6094, 293, 436, 434, 411, 47340, 309, 390, 341, 954, 439, 2051, 293, 550, 51167, 51167, 436, 436, 2464, 437, 309, 390, 309, 311, 445, 411, 806, 76, 6477, 3500, 8407, 766, 264, 6094, 307, 51389, 51389, 411, 47340, 309, 390, 42687, 3467, 439, 2051, 457, 1338, 309, 775, 362, 257, 2068, 2480, 365, 51715, 51715], "temperature": 0.0, "avg_logprob": -0.0981162597085828, "compression_ratio": 1.954954954954955, "no_caption_prob": 2.17820743273478e-05}, {"id": 117, "seek": 70754, "start": 723.5999999999999, "end": 728.04, "text": " they they write what it was it's just like elm radio episode pulling off the mask is", "tokens": [50364, 291, 528, 365, 309, 1338, 293, 293, 291, 458, 797, 300, 741, 841, 411, 321, 643, 300, 291, 458, 300, 50698, 50698, 21701, 295, 456, 311, 257, 21701, 466, 42687, 3467, 1238, 709, 309, 311, 411, 341, 360, 996, 414, 360, 689, 50958, 50958, 436, 434, 8407, 766, 264, 6094, 293, 436, 434, 411, 47340, 309, 390, 341, 954, 439, 2051, 293, 550, 51167, 51167, 436, 436, 2464, 437, 309, 390, 309, 311, 445, 411, 806, 76, 6477, 3500, 8407, 766, 264, 6094, 307, 51389, 51389, 411, 47340, 309, 390, 42687, 3467, 439, 2051, 457, 1338, 309, 775, 362, 257, 2068, 2480, 365, 51715, 51715], "temperature": 0.0, "avg_logprob": -0.0981162597085828, "compression_ratio": 1.954954954954955, "no_caption_prob": 2.17820743273478e-05}, {"id": 118, "seek": 70754, "start": 728.04, "end": 734.56, "text": " like aha it was opaque types all along but yeah it does have a strong relationship with", "tokens": [50364, 291, 528, 365, 309, 1338, 293, 293, 291, 458, 797, 300, 741, 841, 411, 321, 643, 300, 291, 458, 300, 50698, 50698, 21701, 295, 456, 311, 257, 21701, 466, 42687, 3467, 1238, 709, 309, 311, 411, 341, 360, 996, 414, 360, 689, 50958, 50958, 436, 434, 8407, 766, 264, 6094, 293, 436, 434, 411, 47340, 309, 390, 341, 954, 439, 2051, 293, 550, 51167, 51167, 436, 436, 2464, 437, 309, 390, 309, 311, 445, 411, 806, 76, 6477, 3500, 8407, 766, 264, 6094, 307, 51389, 51389, 411, 47340, 309, 390, 42687, 3467, 439, 2051, 457, 1338, 309, 775, 362, 257, 2068, 2480, 365, 51715, 51715], "temperature": 0.0, "avg_logprob": -0.0981162597085828, "compression_ratio": 1.954954954954955, "no_caption_prob": 2.17820743273478e-05}, {"id": 119, "seek": 73456, "start": 734.56, "end": 742.4399999999999, "text": " opaque types because opaque types is just this fundamental tool in elm for defining", "tokens": [50364, 42687, 3467, 570, 42687, 3467, 307, 445, 341, 8088, 2290, 294, 806, 76, 337, 17827, 50758, 50758, 18491, 558, 293, 341, 307, 257, 1081, 689, 321, 528, 281, 6964, 18491, 293, 321, 689, 50980, 50980, 321, 528, 281, 1223, 437, 3089, 14518, 366, 1944, 365, 257, 1629, 2010, 300, 311, 42687, 51286, 51286, 3467, 300, 311, 411, 341, 588, 588, 1021, 588, 4005, 2290, 337, 300, 300, 797, 411, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.056560503293390144, "compression_ratio": 1.8486486486486486, "no_caption_prob": 7.183143225120148e-06}, {"id": 120, "seek": 73456, "start": 742.4399999999999, "end": 746.88, "text": " constraints right and this is a place where we want to define constraints and we where", "tokens": [50364, 42687, 3467, 570, 42687, 3467, 307, 445, 341, 8088, 2290, 294, 806, 76, 337, 17827, 50758, 50758, 18491, 558, 293, 341, 307, 257, 1081, 689, 321, 528, 281, 6964, 18491, 293, 321, 689, 50980, 50980, 321, 528, 281, 1223, 437, 3089, 14518, 366, 1944, 365, 257, 1629, 2010, 300, 311, 42687, 51286, 51286, 3467, 300, 311, 411, 341, 588, 588, 1021, 588, 4005, 2290, 337, 300, 300, 797, 411, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.056560503293390144, "compression_ratio": 1.8486486486486486, "no_caption_prob": 7.183143225120148e-06}, {"id": 121, "seek": 73456, "start": 746.88, "end": 753.0, "text": " we want to understand what code paths are possible with a certain type that's opaque", "tokens": [50364, 42687, 3467, 570, 42687, 3467, 307, 445, 341, 8088, 2290, 294, 806, 76, 337, 17827, 50758, 50758, 18491, 558, 293, 341, 307, 257, 1081, 689, 321, 528, 281, 6964, 18491, 293, 321, 689, 50980, 50980, 321, 528, 281, 1223, 437, 3089, 14518, 366, 1944, 365, 257, 1629, 2010, 300, 311, 42687, 51286, 51286, 3467, 300, 311, 411, 341, 588, 588, 1021, 588, 4005, 2290, 337, 300, 300, 797, 411, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.056560503293390144, "compression_ratio": 1.8486486486486486, "no_caption_prob": 7.183143225120148e-06}, {"id": 122, "seek": 73456, "start": 753.0, "end": 759.16, "text": " types that's like this very very important very powerful tool for that that again like", "tokens": [50364, 42687, 3467, 570, 42687, 3467, 307, 445, 341, 8088, 2290, 294, 806, 76, 337, 17827, 50758, 50758, 18491, 558, 293, 341, 307, 257, 1081, 689, 321, 528, 281, 6964, 18491, 293, 321, 689, 50980, 50980, 321, 528, 281, 1223, 437, 3089, 14518, 366, 1944, 365, 257, 1629, 2010, 300, 311, 42687, 51286, 51286, 3467, 300, 311, 411, 341, 588, 588, 1021, 588, 4005, 2290, 337, 300, 300, 797, 411, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.056560503293390144, "compression_ratio": 1.8486486486486486, "no_caption_prob": 7.183143225120148e-06}, {"id": 123, "seek": 75916, "start": 759.16, "end": 766.16, "text": " if you expose the constructor then you lose that you lose that guarantee you can't track", "tokens": [50364, 498, 291, 19219, 264, 47479, 550, 291, 3624, 300, 291, 3624, 300, 10815, 291, 393, 380, 2837, 50714, 50714, 264, 3089, 1320, 300, 512, 300, 257, 2010, 1062, 352, 807, 309, 311, 445, 1400, 1570, 38901, 50932, 50932, 457, 1105, 457, 1338, 264, 14853, 4007, 3469, 644, 307, 797, 1021, 570, 291, 500, 380, 528, 281, 42892, 51264, 51264, 764, 264, 2010, 293, 498, 291, 14853, 4007, 309, 293, 362, 257, 6798, 12607, 926, 797, 291, 727, 362, 51538, 51538, 341, 2093, 3825, 1230, 420, 11524, 12607, 926, 382, 257, 6798, 293, 291, 458, 437, 437, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1088760757446289, "compression_ratio": 1.8739495798319328, "no_caption_prob": 2.0784389562322758e-05}, {"id": 124, "seek": 75916, "start": 766.16, "end": 770.52, "text": " the code pass that some that a type might go through it's just far less constrained", "tokens": [50364, 498, 291, 19219, 264, 47479, 550, 291, 3624, 300, 291, 3624, 300, 10815, 291, 393, 380, 2837, 50714, 50714, 264, 3089, 1320, 300, 512, 300, 257, 2010, 1062, 352, 807, 309, 311, 445, 1400, 1570, 38901, 50932, 50932, 457, 1105, 457, 1338, 264, 14853, 4007, 3469, 644, 307, 797, 1021, 570, 291, 500, 380, 528, 281, 42892, 51264, 51264, 764, 264, 2010, 293, 498, 291, 14853, 4007, 309, 293, 362, 257, 6798, 12607, 926, 797, 291, 727, 362, 51538, 51538, 341, 2093, 3825, 1230, 420, 11524, 12607, 926, 382, 257, 6798, 293, 291, 458, 437, 437, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1088760757446289, "compression_ratio": 1.8739495798319328, "no_caption_prob": 2.0784389562322758e-05}, {"id": 125, "seek": 75916, "start": 770.52, "end": 777.16, "text": " but um but yeah the unwrap late part is again important because you don't want to incorrectly", "tokens": [50364, 498, 291, 19219, 264, 47479, 550, 291, 3624, 300, 291, 3624, 300, 10815, 291, 393, 380, 2837, 50714, 50714, 264, 3089, 1320, 300, 512, 300, 257, 2010, 1062, 352, 807, 309, 311, 445, 1400, 1570, 38901, 50932, 50932, 457, 1105, 457, 1338, 264, 14853, 4007, 3469, 644, 307, 797, 1021, 570, 291, 500, 380, 528, 281, 42892, 51264, 51264, 764, 264, 2010, 293, 498, 291, 14853, 4007, 309, 293, 362, 257, 6798, 12607, 926, 797, 291, 727, 362, 51538, 51538, 341, 2093, 3825, 1230, 420, 11524, 12607, 926, 382, 257, 6798, 293, 291, 458, 437, 437, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1088760757446289, "compression_ratio": 1.8739495798319328, "no_caption_prob": 2.0784389562322758e-05}, {"id": 126, "seek": 75916, "start": 777.16, "end": 782.64, "text": " use the type and if you unwrap it and have a string floating around again you could have", "tokens": [50364, 498, 291, 19219, 264, 47479, 550, 291, 3624, 300, 291, 3624, 300, 10815, 291, 393, 380, 2837, 50714, 50714, 264, 3089, 1320, 300, 512, 300, 257, 2010, 1062, 352, 807, 309, 311, 445, 1400, 1570, 38901, 50932, 50932, 457, 1105, 457, 1338, 264, 14853, 4007, 3469, 644, 307, 797, 1021, 570, 291, 500, 380, 528, 281, 42892, 51264, 51264, 764, 264, 2010, 293, 498, 291, 14853, 4007, 309, 293, 362, 257, 6798, 12607, 926, 797, 291, 727, 362, 51538, 51538, 341, 2093, 3825, 1230, 420, 11524, 12607, 926, 382, 257, 6798, 293, 291, 458, 437, 437, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1088760757446289, "compression_ratio": 1.8739495798319328, "no_caption_prob": 2.0784389562322758e-05}, {"id": 127, "seek": 75916, "start": 782.64, "end": 787.88, "text": " this social security number or password floating around as a string and you know what what", "tokens": [50364, 498, 291, 19219, 264, 47479, 550, 291, 3624, 300, 291, 3624, 300, 10815, 291, 393, 380, 2837, 50714, 50714, 264, 3089, 1320, 300, 512, 300, 257, 2010, 1062, 352, 807, 309, 311, 445, 1400, 1570, 38901, 50932, 50932, 457, 1105, 457, 1338, 264, 14853, 4007, 3469, 644, 307, 797, 1021, 570, 291, 500, 380, 528, 281, 42892, 51264, 51264, 764, 264, 2010, 293, 498, 291, 14853, 4007, 309, 293, 362, 257, 6798, 12607, 926, 797, 291, 727, 362, 51538, 51538, 341, 2093, 3825, 1230, 420, 11524, 12607, 926, 382, 257, 6798, 293, 291, 458, 437, 437, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1088760757446289, "compression_ratio": 1.8739495798319328, "no_caption_prob": 2.0784389562322758e-05}, {"id": 128, "seek": 78788, "start": 787.88, "end": 794.68, "text": " you see sometimes is you know you'll have like a user badge view function that it needs", "tokens": [50364, 291, 536, 2171, 307, 291, 458, 291, 603, 362, 411, 257, 4195, 25797, 1910, 2445, 300, 309, 2203, 50704, 50704, 257, 30351, 309, 2203, 341, 2010, 295, 1412, 309, 2203, 364, 4496, 293, 498, 291, 434, 1333, 295, 21993, 257, 6798, 51036, 51036, 281, 1320, 729, 6828, 666, 264, 4195, 25797, 1910, 300, 311, 257, 2182, 7166, 558, 300, 291, 434, 291, 434, 51276, 51276, 406, 21993, 2232, 291, 434, 406, 21993, 2440, 420, 291, 434, 420, 291, 434, 14853, 424, 3759, 2440, 291, 434, 51568, 51568, 14853, 424, 3759, 886, 2440, 420, 291, 434, 21993, 886, 3469, 558, 498, 291, 434, 8437, 264, 28540, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05374172630660031, "compression_ratio": 2.202970297029703, "no_caption_prob": 1.9525350580806844e-05}, {"id": 129, "seek": 78788, "start": 794.68, "end": 801.32, "text": " a username it needs this type of data it needs an id and if you're sort of wrapping a string", "tokens": [50364, 291, 536, 2171, 307, 291, 458, 291, 603, 362, 411, 257, 4195, 25797, 1910, 2445, 300, 309, 2203, 50704, 50704, 257, 30351, 309, 2203, 341, 2010, 295, 1412, 309, 2203, 364, 4496, 293, 498, 291, 434, 1333, 295, 21993, 257, 6798, 51036, 51036, 281, 1320, 729, 6828, 666, 264, 4195, 25797, 1910, 300, 311, 257, 2182, 7166, 558, 300, 291, 434, 291, 434, 51276, 51276, 406, 21993, 2232, 291, 434, 406, 21993, 2440, 420, 291, 434, 420, 291, 434, 14853, 424, 3759, 2440, 291, 434, 51568, 51568, 14853, 424, 3759, 886, 2440, 420, 291, 434, 21993, 886, 3469, 558, 498, 291, 434, 8437, 264, 28540, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05374172630660031, "compression_ratio": 2.202970297029703, "no_caption_prob": 1.9525350580806844e-05}, {"id": 130, "seek": 78788, "start": 801.32, "end": 806.12, "text": " to pass those functions into the user badge view that's a red flag right that you're you're", "tokens": [50364, 291, 536, 2171, 307, 291, 458, 291, 603, 362, 411, 257, 4195, 25797, 1910, 2445, 300, 309, 2203, 50704, 50704, 257, 30351, 309, 2203, 341, 2010, 295, 1412, 309, 2203, 364, 4496, 293, 498, 291, 434, 1333, 295, 21993, 257, 6798, 51036, 51036, 281, 1320, 729, 6828, 666, 264, 4195, 25797, 1910, 300, 311, 257, 2182, 7166, 558, 300, 291, 434, 291, 434, 51276, 51276, 406, 21993, 2232, 291, 434, 406, 21993, 2440, 420, 291, 434, 420, 291, 434, 14853, 424, 3759, 2440, 291, 434, 51568, 51568, 14853, 424, 3759, 886, 2440, 420, 291, 434, 21993, 886, 3469, 558, 498, 291, 434, 8437, 264, 28540, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05374172630660031, "compression_ratio": 2.202970297029703, "no_caption_prob": 1.9525350580806844e-05}, {"id": 131, "seek": 78788, "start": 806.12, "end": 811.96, "text": " not wrapping uh you're not wrapping early or you're or you're unwrapping early you're", "tokens": [50364, 291, 536, 2171, 307, 291, 458, 291, 603, 362, 411, 257, 4195, 25797, 1910, 2445, 300, 309, 2203, 50704, 50704, 257, 30351, 309, 2203, 341, 2010, 295, 1412, 309, 2203, 364, 4496, 293, 498, 291, 434, 1333, 295, 21993, 257, 6798, 51036, 51036, 281, 1320, 729, 6828, 666, 264, 4195, 25797, 1910, 300, 311, 257, 2182, 7166, 558, 300, 291, 434, 291, 434, 51276, 51276, 406, 21993, 2232, 291, 434, 406, 21993, 2440, 420, 291, 434, 420, 291, 434, 14853, 424, 3759, 2440, 291, 434, 51568, 51568, 14853, 424, 3759, 886, 2440, 420, 291, 434, 21993, 886, 3469, 558, 498, 291, 434, 8437, 264, 28540, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05374172630660031, "compression_ratio": 2.202970297029703, "no_caption_prob": 1.9525350580806844e-05}, {"id": 132, "seek": 78788, "start": 811.96, "end": 816.88, "text": " unwrapping too early or you're wrapping too late right if you're passing the primitive", "tokens": [50364, 291, 536, 2171, 307, 291, 458, 291, 603, 362, 411, 257, 4195, 25797, 1910, 2445, 300, 309, 2203, 50704, 50704, 257, 30351, 309, 2203, 341, 2010, 295, 1412, 309, 2203, 364, 4496, 293, 498, 291, 434, 1333, 295, 21993, 257, 6798, 51036, 51036, 281, 1320, 729, 6828, 666, 264, 4195, 25797, 1910, 300, 311, 257, 2182, 7166, 558, 300, 291, 434, 291, 434, 51276, 51276, 406, 21993, 2232, 291, 434, 406, 21993, 2440, 420, 291, 434, 420, 291, 434, 14853, 424, 3759, 2440, 291, 434, 51568, 51568, 14853, 424, 3759, 886, 2440, 420, 291, 434, 21993, 886, 3469, 558, 498, 291, 434, 8437, 264, 28540, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05374172630660031, "compression_ratio": 2.202970297029703, "no_caption_prob": 1.9525350580806844e-05}, {"id": 133, "seek": 81688, "start": 816.88, "end": 822.96, "text": " values you're passing the primitive values and you're wrapping them just in time to send", "tokens": [50364, 4190, 291, 434, 8437, 264, 28540, 4190, 293, 291, 434, 21993, 552, 445, 294, 565, 281, 2845, 50668, 50668, 309, 281, 257, 2445, 300, 1619, 309, 2203, 257, 30351, 341, 2203, 257, 30351, 2158, 293, 291, 764, 264, 50896, 50896, 30351, 47479, 365, 428, 30351, 6798, 2158, 300, 291, 1051, 281, 362, 420, 257, 1152, 34874, 51150, 51150, 6798, 2158, 300, 291, 1051, 281, 362, 300, 311, 257, 2182, 7166, 300, 291, 366, 2139, 21993, 886, 51426, 51426, 3469, 420, 14853, 424, 3759, 886, 2440, 293, 8121, 493, 597, 14853, 424, 3759, 2440, 291, 458, 5314, 493, 885, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.07257417604035023, "compression_ratio": 2.1179245283018866, "no_caption_prob": 3.269762601121329e-05}, {"id": 134, "seek": 81688, "start": 822.96, "end": 827.52, "text": " it to a function that says it needs a username this needs a username value and you use the", "tokens": [50364, 4190, 291, 434, 8437, 264, 28540, 4190, 293, 291, 434, 21993, 552, 445, 294, 565, 281, 2845, 50668, 50668, 309, 281, 257, 2445, 300, 1619, 309, 2203, 257, 30351, 341, 2203, 257, 30351, 2158, 293, 291, 764, 264, 50896, 50896, 30351, 47479, 365, 428, 30351, 6798, 2158, 300, 291, 1051, 281, 362, 420, 257, 1152, 34874, 51150, 51150, 6798, 2158, 300, 291, 1051, 281, 362, 300, 311, 257, 2182, 7166, 300, 291, 366, 2139, 21993, 886, 51426, 51426, 3469, 420, 14853, 424, 3759, 886, 2440, 293, 8121, 493, 597, 14853, 424, 3759, 2440, 291, 458, 5314, 493, 885, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.07257417604035023, "compression_ratio": 2.1179245283018866, "no_caption_prob": 3.269762601121329e-05}, {"id": 135, "seek": 81688, "start": 827.52, "end": 832.6, "text": " username constructor with your username string value that you happen to have or a hard coded", "tokens": [50364, 4190, 291, 434, 8437, 264, 28540, 4190, 293, 291, 434, 21993, 552, 445, 294, 565, 281, 2845, 50668, 50668, 309, 281, 257, 2445, 300, 1619, 309, 2203, 257, 30351, 341, 2203, 257, 30351, 2158, 293, 291, 764, 264, 50896, 50896, 30351, 47479, 365, 428, 30351, 6798, 2158, 300, 291, 1051, 281, 362, 420, 257, 1152, 34874, 51150, 51150, 6798, 2158, 300, 291, 1051, 281, 362, 300, 311, 257, 2182, 7166, 300, 291, 366, 2139, 21993, 886, 51426, 51426, 3469, 420, 14853, 424, 3759, 886, 2440, 293, 8121, 493, 597, 14853, 424, 3759, 2440, 291, 458, 5314, 493, 885, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.07257417604035023, "compression_ratio": 2.1179245283018866, "no_caption_prob": 3.269762601121329e-05}, {"id": 136, "seek": 81688, "start": 832.6, "end": 838.12, "text": " string value that you happen to have that's a red flag that you are either wrapping too", "tokens": [50364, 4190, 291, 434, 8437, 264, 28540, 4190, 293, 291, 434, 21993, 552, 445, 294, 565, 281, 2845, 50668, 50668, 309, 281, 257, 2445, 300, 1619, 309, 2203, 257, 30351, 341, 2203, 257, 30351, 2158, 293, 291, 764, 264, 50896, 50896, 30351, 47479, 365, 428, 30351, 6798, 2158, 300, 291, 1051, 281, 362, 420, 257, 1152, 34874, 51150, 51150, 6798, 2158, 300, 291, 1051, 281, 362, 300, 311, 257, 2182, 7166, 300, 291, 366, 2139, 21993, 886, 51426, 51426, 3469, 420, 14853, 424, 3759, 886, 2440, 293, 8121, 493, 597, 14853, 424, 3759, 2440, 291, 458, 5314, 493, 885, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.07257417604035023, "compression_ratio": 2.1179245283018866, "no_caption_prob": 3.269762601121329e-05}, {"id": 137, "seek": 81688, "start": 838.12, "end": 846.84, "text": " late or unwrapping too early and ending up which unwrapping early you know ends up being", "tokens": [50364, 4190, 291, 434, 8437, 264, 28540, 4190, 293, 291, 434, 21993, 552, 445, 294, 565, 281, 2845, 50668, 50668, 309, 281, 257, 2445, 300, 1619, 309, 2203, 257, 30351, 341, 2203, 257, 30351, 2158, 293, 291, 764, 264, 50896, 50896, 30351, 47479, 365, 428, 30351, 6798, 2158, 300, 291, 1051, 281, 362, 420, 257, 1152, 34874, 51150, 51150, 6798, 2158, 300, 291, 1051, 281, 362, 300, 311, 257, 2182, 7166, 300, 291, 366, 2139, 21993, 886, 51426, 51426, 3469, 420, 14853, 424, 3759, 886, 2440, 293, 8121, 493, 597, 14853, 424, 3759, 2440, 291, 458, 5314, 493, 885, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.07257417604035023, "compression_ratio": 2.1179245283018866, "no_caption_prob": 3.269762601121329e-05}, {"id": 138, "seek": 84684, "start": 846.84, "end": 852.76, "text": " similar to wrapping late right that you're you end up with this sort of primitive value", "tokens": [50364, 2531, 281, 21993, 3469, 558, 300, 291, 434, 291, 917, 493, 365, 341, 1333, 295, 28540, 2158, 50660, 50660, 12607, 926, 300, 575, 2731, 264, 18491, 264, 4514, 466, 577, 291, 434, 3442, 281, 764, 50942, 50942, 309, 293, 264, 47982, 3620, 14853, 424, 3759, 307, 1009, 562, 291, 643, 281, 764, 264, 2158, 406, 51310, 51310, 337, 9952, 457, 281, 2845, 309, 281, 512, 8320, 1185, 281, 806, 76, 370, 300, 576, 312, 4099, 309, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.03691355288028717, "compression_ratio": 1.6995073891625616, "no_caption_prob": 1.8342545445193537e-05}, {"id": 139, "seek": 84684, "start": 852.76, "end": 858.4, "text": " floating around that has lost the constraints the safety about how you're supposed to use", "tokens": [50364, 2531, 281, 21993, 3469, 558, 300, 291, 434, 291, 917, 493, 365, 341, 1333, 295, 28540, 2158, 50660, 50660, 12607, 926, 300, 575, 2731, 264, 18491, 264, 4514, 466, 577, 291, 434, 3442, 281, 764, 50942, 50942, 309, 293, 264, 47982, 3620, 14853, 424, 3759, 307, 1009, 562, 291, 643, 281, 764, 264, 2158, 406, 51310, 51310, 337, 9952, 457, 281, 2845, 309, 281, 512, 8320, 1185, 281, 806, 76, 370, 300, 576, 312, 4099, 309, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.03691355288028717, "compression_ratio": 1.6995073891625616, "no_caption_prob": 1.8342545445193537e-05}, {"id": 140, "seek": 84684, "start": 858.4, "end": 865.76, "text": " it and the semantic meaning unwrapping is always when you need to use the value not", "tokens": [50364, 2531, 281, 21993, 3469, 558, 300, 291, 434, 291, 917, 493, 365, 341, 1333, 295, 28540, 2158, 50660, 50660, 12607, 926, 300, 575, 2731, 264, 18491, 264, 4514, 466, 577, 291, 434, 3442, 281, 764, 50942, 50942, 309, 293, 264, 47982, 3620, 14853, 424, 3759, 307, 1009, 562, 291, 643, 281, 764, 264, 2158, 406, 51310, 51310, 337, 9952, 457, 281, 2845, 309, 281, 512, 8320, 1185, 281, 806, 76, 370, 300, 576, 312, 4099, 309, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.03691355288028717, "compression_ratio": 1.6995073891625616, "no_caption_prob": 1.8342545445193537e-05}, {"id": 141, "seek": 84684, "start": 865.76, "end": 872.64, "text": " for logic but to send it to some external system to elm so that would be showing it", "tokens": [50364, 2531, 281, 21993, 3469, 558, 300, 291, 434, 291, 917, 493, 365, 341, 1333, 295, 28540, 2158, 50660, 50660, 12607, 926, 300, 575, 2731, 264, 18491, 264, 4514, 466, 577, 291, 434, 3442, 281, 764, 50942, 50942, 309, 293, 264, 47982, 3620, 14853, 424, 3759, 307, 1009, 562, 291, 643, 281, 764, 264, 2158, 406, 51310, 51310, 337, 9952, 457, 281, 2845, 309, 281, 512, 8320, 1185, 281, 806, 76, 370, 300, 576, 312, 4099, 309, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.03691355288028717, "compression_ratio": 1.6995073891625616, "no_caption_prob": 1.8342545445193537e-05}, {"id": 142, "seek": 87264, "start": 872.64, "end": 878.84, "text": " as html sending it to the virtual dom sending it on a cdp request graphql request or sending", "tokens": [50364, 382, 276, 83, 15480, 7750, 309, 281, 264, 6374, 3285, 7750, 309, 322, 257, 269, 67, 79, 5308, 4295, 80, 75, 5308, 420, 7750, 50674, 50674, 309, 670, 281, 257, 2436, 291, 820, 406, 643, 281, 764, 291, 820, 406, 643, 281, 14853, 4007, 294, 661, 3331, 51046, 51046, 558, 741, 519, 428, 1329, 456, 390, 1238, 14687, 488, 382, 1400, 382, 741, 393, 519, 295, 729, 576, 312, 264, 51456, 51456, 729, 1333, 295, 13180, 729, 14709, 2793, 370, 309, 1936, 291, 1338, 577, 360, 291, 458, 300, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1335023449313256, "compression_ratio": 1.8097560975609757, "no_caption_prob": 3.611923602875322e-06}, {"id": 143, "seek": 87264, "start": 878.84, "end": 886.28, "text": " it over to a port you should not need to use you should not need to unwrap in other cases", "tokens": [50364, 382, 276, 83, 15480, 7750, 309, 281, 264, 6374, 3285, 7750, 309, 322, 257, 269, 67, 79, 5308, 4295, 80, 75, 5308, 420, 7750, 50674, 50674, 309, 670, 281, 257, 2436, 291, 820, 406, 643, 281, 764, 291, 820, 406, 643, 281, 14853, 4007, 294, 661, 3331, 51046, 51046, 558, 741, 519, 428, 1329, 456, 390, 1238, 14687, 488, 382, 1400, 382, 741, 393, 519, 295, 729, 576, 312, 264, 51456, 51456, 729, 1333, 295, 13180, 729, 14709, 2793, 370, 309, 1936, 291, 1338, 577, 360, 291, 458, 300, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1335023449313256, "compression_ratio": 1.8097560975609757, "no_caption_prob": 3.611923602875322e-06}, {"id": 144, "seek": 87264, "start": 886.28, "end": 894.48, "text": " right i think your list there was pretty exhaustive as far as i can think of those would be the", "tokens": [50364, 382, 276, 83, 15480, 7750, 309, 281, 264, 6374, 3285, 7750, 309, 322, 257, 269, 67, 79, 5308, 4295, 80, 75, 5308, 420, 7750, 50674, 50674, 309, 670, 281, 257, 2436, 291, 820, 406, 643, 281, 764, 291, 820, 406, 643, 281, 14853, 4007, 294, 661, 3331, 51046, 51046, 558, 741, 519, 428, 1329, 456, 390, 1238, 14687, 488, 382, 1400, 382, 741, 393, 519, 295, 729, 576, 312, 264, 51456, 51456, 729, 1333, 295, 13180, 729, 14709, 2793, 370, 309, 1936, 291, 1338, 577, 360, 291, 458, 300, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1335023449313256, "compression_ratio": 1.8097560975609757, "no_caption_prob": 3.611923602875322e-06}, {"id": 145, "seek": 87264, "start": 894.48, "end": 899.8, "text": " those sort of boundaries those terminal points so it basically you yeah how do you know that", "tokens": [50364, 382, 276, 83, 15480, 7750, 309, 281, 264, 6374, 3285, 7750, 309, 322, 257, 269, 67, 79, 5308, 4295, 80, 75, 5308, 420, 7750, 50674, 50674, 309, 670, 281, 257, 2436, 291, 820, 406, 643, 281, 764, 291, 820, 406, 643, 281, 14853, 4007, 294, 661, 3331, 51046, 51046, 558, 741, 519, 428, 1329, 456, 390, 1238, 14687, 488, 382, 1400, 382, 741, 393, 519, 295, 729, 576, 312, 264, 51456, 51456, 729, 1333, 295, 13180, 729, 14709, 2793, 370, 309, 1936, 291, 1338, 577, 360, 291, 458, 300, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.1335023449313256, "compression_ratio": 1.8097560975609757, "no_caption_prob": 3.611923602875322e-06}, {"id": 146, "seek": 89980, "start": 899.8, "end": 906.64, "text": " you're doing unwrap late late enough well it happens at a terminal point and as you", "tokens": [50364, 291, 434, 884, 14853, 4007, 3469, 3469, 1547, 731, 309, 2314, 412, 257, 14709, 935, 293, 382, 291, 50706, 50706, 848, 411, 300, 300, 311, 257, 588, 665, 1465, 300, 291, 434, 884, 309, 412, 257, 14709, 935, 570, 50880, 50880, 291, 2845, 746, 807, 281, 257, 2436, 293, 291, 434, 411, 731, 586, 741, 362, 281, 483, 512, 28540, 51170, 51170, 2158, 570, 741, 393, 380, 2845, 341, 2375, 2010, 807, 341, 2436, 420, 291, 434, 7750, 364, 276, 83, 15480, 51488, 51488, 5308, 293, 4177, 411, 7015, 741, 393, 380, 2845, 341, 276, 83, 15480, 5308, 670, 264, 6234, 5969, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07273771627893988, "compression_ratio": 1.9508928571428572, "no_caption_prob": 4.469182749744505e-05}, {"id": 147, "seek": 89980, "start": 906.64, "end": 910.12, "text": " said like that that's a very good sign that you're doing it at a terminal point because", "tokens": [50364, 291, 434, 884, 14853, 4007, 3469, 3469, 1547, 731, 309, 2314, 412, 257, 14709, 935, 293, 382, 291, 50706, 50706, 848, 411, 300, 300, 311, 257, 588, 665, 1465, 300, 291, 434, 884, 309, 412, 257, 14709, 935, 570, 50880, 50880, 291, 2845, 746, 807, 281, 257, 2436, 293, 291, 434, 411, 731, 586, 741, 362, 281, 483, 512, 28540, 51170, 51170, 2158, 570, 741, 393, 380, 2845, 341, 2375, 2010, 807, 341, 2436, 420, 291, 434, 7750, 364, 276, 83, 15480, 51488, 51488, 5308, 293, 4177, 411, 7015, 741, 393, 380, 2845, 341, 276, 83, 15480, 5308, 670, 264, 6234, 5969, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07273771627893988, "compression_ratio": 1.9508928571428572, "no_caption_prob": 4.469182749744505e-05}, {"id": 148, "seek": 89980, "start": 910.12, "end": 915.92, "text": " you send something through to a port and you're like well now i have to get some primitive", "tokens": [50364, 291, 434, 884, 14853, 4007, 3469, 3469, 1547, 731, 309, 2314, 412, 257, 14709, 935, 293, 382, 291, 50706, 50706, 848, 411, 300, 300, 311, 257, 588, 665, 1465, 300, 291, 434, 884, 309, 412, 257, 14709, 935, 570, 50880, 50880, 291, 2845, 746, 807, 281, 257, 2436, 293, 291, 434, 411, 731, 586, 741, 362, 281, 483, 512, 28540, 51170, 51170, 2158, 570, 741, 393, 380, 2845, 341, 2375, 2010, 807, 341, 2436, 420, 291, 434, 7750, 364, 276, 83, 15480, 51488, 51488, 5308, 293, 4177, 411, 7015, 741, 393, 380, 2845, 341, 276, 83, 15480, 5308, 670, 264, 6234, 5969, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07273771627893988, "compression_ratio": 1.9508928571428572, "no_caption_prob": 4.469182749744505e-05}, {"id": 149, "seek": 89980, "start": 915.92, "end": 922.28, "text": " value because i can't send this custom type through this port or you're sending an html", "tokens": [50364, 291, 434, 884, 14853, 4007, 3469, 3469, 1547, 731, 309, 2314, 412, 257, 14709, 935, 293, 382, 291, 50706, 50706, 848, 411, 300, 300, 311, 257, 588, 665, 1465, 300, 291, 434, 884, 309, 412, 257, 14709, 935, 570, 50880, 50880, 291, 2845, 746, 807, 281, 257, 2436, 293, 291, 434, 411, 731, 586, 741, 362, 281, 483, 512, 28540, 51170, 51170, 2158, 570, 741, 393, 380, 2845, 341, 2375, 2010, 807, 341, 2436, 420, 291, 434, 7750, 364, 276, 83, 15480, 51488, 51488, 5308, 293, 4177, 411, 7015, 741, 393, 380, 2845, 341, 276, 83, 15480, 5308, 670, 264, 6234, 5969, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07273771627893988, "compression_ratio": 1.9508928571428572, "no_caption_prob": 4.469182749744505e-05}, {"id": 150, "seek": 89980, "start": 922.28, "end": 927.76, "text": " request and hey like unfortunately i can't send this html request over the wire unless", "tokens": [50364, 291, 434, 884, 14853, 4007, 3469, 3469, 1547, 731, 309, 2314, 412, 257, 14709, 935, 293, 382, 291, 50706, 50706, 848, 411, 300, 300, 311, 257, 588, 665, 1465, 300, 291, 434, 884, 309, 412, 257, 14709, 935, 570, 50880, 50880, 291, 2845, 746, 807, 281, 257, 2436, 293, 291, 434, 411, 731, 586, 741, 362, 281, 483, 512, 28540, 51170, 51170, 2158, 570, 741, 393, 380, 2845, 341, 2375, 2010, 807, 341, 2436, 420, 291, 434, 7750, 364, 276, 83, 15480, 51488, 51488, 5308, 293, 4177, 411, 7015, 741, 393, 380, 2845, 341, 276, 83, 15480, 5308, 670, 264, 6234, 5969, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.07273771627893988, "compression_ratio": 1.9508928571428572, "no_caption_prob": 4.469182749744505e-05}, {"id": 151, "seek": 92776, "start": 927.76, "end": 933.16, "text": " you know it's something like lame darren you do send to back end then you can you can actually", "tokens": [50364, 291, 458, 309, 311, 746, 411, 27635, 4072, 1095, 291, 360, 2845, 281, 646, 917, 550, 291, 393, 291, 393, 767, 50634, 50634, 14853, 4007, 754, 1780, 754, 1673, 12120, 456, 307, 746, 2737, 833, 264, 13376, 50868, 50868, 341, 307, 767, 257, 588, 1021, 4111, 295, 27635, 4072, 1095, 307, 291, 393, 3361, 264, 3089, 264, 51250, 51250, 3089, 3100, 295, 411, 264, 1412, 300, 300, 551, 8855, 337, 754, 2854, 293, 14853, 4007, 309, 754, 51546, 51546, 1780, 1338, 570, 291, 500, 380, 291, 500, 380, 362, 300, 19376, 1412, 300, 311, 309, 311, 2279, 670, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12363137450872683, "compression_ratio": 1.943231441048035, "no_caption_prob": 1.4063685739529319e-05}, {"id": 152, "seek": 92776, "start": 933.16, "end": 937.84, "text": " unwrap even later even though technically there is something happening under the hood", "tokens": [50364, 291, 458, 309, 311, 746, 411, 27635, 4072, 1095, 291, 360, 2845, 281, 646, 917, 550, 291, 393, 291, 393, 767, 50634, 50634, 14853, 4007, 754, 1780, 754, 1673, 12120, 456, 307, 746, 2737, 833, 264, 13376, 50868, 50868, 341, 307, 767, 257, 588, 1021, 4111, 295, 27635, 4072, 1095, 307, 291, 393, 3361, 264, 3089, 264, 51250, 51250, 3089, 3100, 295, 411, 264, 1412, 300, 300, 551, 8855, 337, 754, 2854, 293, 14853, 4007, 309, 754, 51546, 51546, 1780, 1338, 570, 291, 500, 380, 291, 500, 380, 362, 300, 19376, 1412, 300, 311, 309, 311, 2279, 670, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12363137450872683, "compression_ratio": 1.943231441048035, "no_caption_prob": 1.4063685739529319e-05}, {"id": 153, "seek": 92776, "start": 937.84, "end": 945.48, "text": " this is actually a very important feature of lame darren is you can trust the code the", "tokens": [50364, 291, 458, 309, 311, 746, 411, 27635, 4072, 1095, 291, 360, 2845, 281, 646, 917, 550, 291, 393, 291, 393, 767, 50634, 50634, 14853, 4007, 754, 1780, 754, 1673, 12120, 456, 307, 746, 2737, 833, 264, 13376, 50868, 50868, 341, 307, 767, 257, 588, 1021, 4111, 295, 27635, 4072, 1095, 307, 291, 393, 3361, 264, 3089, 264, 51250, 51250, 3089, 3100, 295, 411, 264, 1412, 300, 300, 551, 8855, 337, 754, 2854, 293, 14853, 4007, 309, 754, 51546, 51546, 1780, 1338, 570, 291, 500, 380, 291, 500, 380, 362, 300, 19376, 1412, 300, 311, 309, 311, 2279, 670, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12363137450872683, "compression_ratio": 1.943231441048035, "no_caption_prob": 1.4063685739529319e-05}, {"id": 154, "seek": 92776, "start": 945.48, "end": 951.4, "text": " code path of like the data that that thing represents for even longer and unwrap it even", "tokens": [50364, 291, 458, 309, 311, 746, 411, 27635, 4072, 1095, 291, 360, 2845, 281, 646, 917, 550, 291, 393, 291, 393, 767, 50634, 50634, 14853, 4007, 754, 1780, 754, 1673, 12120, 456, 307, 746, 2737, 833, 264, 13376, 50868, 50868, 341, 307, 767, 257, 588, 1021, 4111, 295, 27635, 4072, 1095, 307, 291, 393, 3361, 264, 3089, 264, 51250, 51250, 3089, 3100, 295, 411, 264, 1412, 300, 300, 551, 8855, 337, 754, 2854, 293, 14853, 4007, 309, 754, 51546, 51546, 1780, 1338, 570, 291, 500, 380, 291, 500, 380, 362, 300, 19376, 1412, 300, 311, 309, 311, 2279, 670, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12363137450872683, "compression_ratio": 1.943231441048035, "no_caption_prob": 1.4063685739529319e-05}, {"id": 155, "seek": 92776, "start": 951.4, "end": 956.96, "text": " later yeah because you don't you don't have that intermediate data that's it's sent over", "tokens": [50364, 291, 458, 309, 311, 746, 411, 27635, 4072, 1095, 291, 360, 2845, 281, 646, 917, 550, 291, 393, 291, 393, 767, 50634, 50634, 14853, 4007, 754, 1780, 754, 1673, 12120, 456, 307, 746, 2737, 833, 264, 13376, 50868, 50868, 341, 307, 767, 257, 588, 1021, 4111, 295, 27635, 4072, 1095, 307, 291, 393, 3361, 264, 3089, 264, 51250, 51250, 3089, 3100, 295, 411, 264, 1412, 300, 300, 551, 8855, 337, 754, 2854, 293, 14853, 4007, 309, 754, 51546, 51546, 1780, 1338, 570, 291, 500, 380, 291, 500, 380, 362, 300, 19376, 1412, 300, 311, 309, 311, 2279, 670, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.12363137450872683, "compression_ratio": 1.943231441048035, "no_caption_prob": 1.4063685739529319e-05}, {"id": 156, "seek": 95696, "start": 956.96, "end": 963.0400000000001, "text": " the htp or web sockets or there is but you don't see it you don't have control over it", "tokens": [50364, 264, 276, 83, 79, 420, 3670, 370, 11984, 420, 456, 307, 457, 291, 500, 380, 536, 309, 291, 500, 380, 362, 1969, 670, 309, 50668, 50668, 370, 291, 393, 380, 2082, 309, 493, 558, 4878, 456, 307, 1310, 1105, 746, 3163, 26801, 741, 741, 767, 51074, 51074, 2378, 380, 534, 1194, 466, 341, 370, 709, 420, 420, 2198, 341, 2825, 466, 457, 365, 22035, 51316, 51316, 274, 4271, 291, 920, 741, 519, 360, 362, 281, 6552, 257, 7263, 32590, 3142, 6423, 558, 411, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1378441953110969, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.8409169317455962e-05}, {"id": 157, "seek": 95696, "start": 963.0400000000001, "end": 971.1600000000001, "text": " so you can't mess it up right although there is maybe um something worth noting i i actually", "tokens": [50364, 264, 276, 83, 79, 420, 3670, 370, 11984, 420, 456, 307, 457, 291, 500, 380, 536, 309, 291, 500, 380, 362, 1969, 670, 309, 50668, 50668, 370, 291, 393, 380, 2082, 309, 493, 558, 4878, 456, 307, 1310, 1105, 746, 3163, 26801, 741, 741, 767, 51074, 51074, 2378, 380, 534, 1194, 466, 341, 370, 709, 420, 420, 2198, 341, 2825, 466, 457, 365, 22035, 51316, 51316, 274, 4271, 291, 920, 741, 519, 360, 362, 281, 6552, 257, 7263, 32590, 3142, 6423, 558, 411, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1378441953110969, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.8409169317455962e-05}, {"id": 158, "seek": 95696, "start": 971.1600000000001, "end": 976.0, "text": " haven't really thought about this so much or or heard this talked about but with lime", "tokens": [50364, 264, 276, 83, 79, 420, 3670, 370, 11984, 420, 456, 307, 457, 291, 500, 380, 536, 309, 291, 500, 380, 362, 1969, 670, 309, 50668, 50668, 370, 291, 393, 380, 2082, 309, 493, 558, 4878, 456, 307, 1310, 1105, 746, 3163, 26801, 741, 741, 767, 51074, 51074, 2378, 380, 534, 1194, 466, 341, 370, 709, 420, 420, 2198, 341, 2825, 466, 457, 365, 22035, 51316, 51316, 274, 4271, 291, 920, 741, 519, 360, 362, 281, 6552, 257, 7263, 32590, 3142, 6423, 558, 411, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1378441953110969, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.8409169317455962e-05}, {"id": 159, "seek": 95696, "start": 976.0, "end": 983.84, "text": " dira you still i think do have to assume a potentially antagonistic client right like", "tokens": [50364, 264, 276, 83, 79, 420, 3670, 370, 11984, 420, 456, 307, 457, 291, 500, 380, 536, 309, 291, 500, 380, 362, 1969, 670, 309, 50668, 50668, 370, 291, 393, 380, 2082, 309, 493, 558, 4878, 456, 307, 1310, 1105, 746, 3163, 26801, 741, 741, 767, 51074, 51074, 2378, 380, 534, 1194, 466, 341, 370, 709, 420, 420, 2198, 341, 2825, 466, 457, 365, 22035, 51316, 51316, 274, 4271, 291, 920, 741, 519, 360, 362, 281, 6552, 257, 7263, 32590, 3142, 6423, 558, 411, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1378441953110969, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.8409169317455962e-05}, {"id": 160, "seek": 98384, "start": 983.84, "end": 989.08, "text": " you can't you you can't trust the client no matter what that's just um not possible right", "tokens": [50364, 291, 393, 380, 291, 291, 393, 380, 3361, 264, 6423, 572, 1871, 437, 300, 311, 445, 1105, 406, 1944, 558, 50626, 50626, 370, 498, 291, 584, 731, 498, 741, 362, 257, 30351, 550, 309, 1355, 300, 309, 5872, 341, 1520, 300, 309, 7363, 1024, 51030, 51030, 293, 309, 1177, 380, 362, 613, 16944, 558, 293, 294, 294, 27635, 274, 2419, 498, 291, 584, 1392, 2845, 281, 646, 51322, 51322, 917, 30351, 293, 550, 300, 2709, 291, 341, 6687, 300, 341, 551, 575, 2780, 807, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.057930420745502816, "compression_ratio": 1.795, "no_caption_prob": 1.9832677935482934e-05}, {"id": 161, "seek": 98384, "start": 989.08, "end": 997.1600000000001, "text": " so if you say well if i have a username then it means that it ran this check that it validates", "tokens": [50364, 291, 393, 380, 291, 291, 393, 380, 3361, 264, 6423, 572, 1871, 437, 300, 311, 445, 1105, 406, 1944, 558, 50626, 50626, 370, 498, 291, 584, 731, 498, 741, 362, 257, 30351, 550, 309, 1355, 300, 309, 5872, 341, 1520, 300, 309, 7363, 1024, 51030, 51030, 293, 309, 1177, 380, 362, 613, 16944, 558, 293, 294, 294, 27635, 274, 2419, 498, 291, 584, 1392, 2845, 281, 646, 51322, 51322, 917, 30351, 293, 550, 300, 2709, 291, 341, 6687, 300, 341, 551, 575, 2780, 807, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.057930420745502816, "compression_ratio": 1.795, "no_caption_prob": 1.9832677935482934e-05}, {"id": 162, "seek": 98384, "start": 997.1600000000001, "end": 1003.0, "text": " and it doesn't have these symbols right and in in lame dara if you say okay send to back", "tokens": [50364, 291, 393, 380, 291, 291, 393, 380, 3361, 264, 6423, 572, 1871, 437, 300, 311, 445, 1105, 406, 1944, 558, 50626, 50626, 370, 498, 291, 584, 731, 498, 741, 362, 257, 30351, 550, 309, 1355, 300, 309, 5872, 341, 1520, 300, 309, 7363, 1024, 51030, 51030, 293, 309, 1177, 380, 362, 613, 16944, 558, 293, 294, 294, 27635, 274, 2419, 498, 291, 584, 1392, 2845, 281, 646, 51322, 51322, 917, 30351, 293, 550, 300, 2709, 291, 341, 6687, 300, 341, 551, 575, 2780, 807, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.057930420745502816, "compression_ratio": 1.795, "no_caption_prob": 1.9832677935482934e-05}, {"id": 163, "seek": 98384, "start": 1003.0, "end": 1009.08, "text": " end username and then that gives you this confidence that this thing has gone through", "tokens": [50364, 291, 393, 380, 291, 291, 393, 380, 3361, 264, 6423, 572, 1871, 437, 300, 311, 445, 1105, 406, 1944, 558, 50626, 50626, 370, 498, 291, 584, 731, 498, 741, 362, 257, 30351, 550, 309, 1355, 300, 309, 5872, 341, 1520, 300, 309, 7363, 1024, 51030, 51030, 293, 309, 1177, 380, 362, 613, 16944, 558, 293, 294, 294, 27635, 274, 2419, 498, 291, 584, 1392, 2845, 281, 646, 51322, 51322, 917, 30351, 293, 550, 300, 2709, 291, 341, 6687, 300, 341, 551, 575, 2780, 807, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.057930420745502816, "compression_ratio": 1.795, "no_caption_prob": 1.9832677935482934e-05}, {"id": 164, "seek": 100908, "start": 1009.08, "end": 1014.4000000000001, "text": " this check it's passed through this gate it has this band that says somebody checked your", "tokens": [50364, 341, 1520, 309, 311, 4678, 807, 341, 8539, 309, 575, 341, 4116, 300, 1619, 2618, 10033, 428, 50630, 50630, 4496, 293, 291, 434, 295, 7583, 3205, 558, 731, 291, 458, 291, 291, 291, 393, 3361, 300, 322, 428, 6423, 51030, 51030, 1252, 3089, 294, 539, 21196, 382, 300, 7001, 382, 498, 498, 264, 6423, 2738, 281, 1821, 729, 32567, 51340, 51340, 538, 31422, 512, 6423, 1252, 3089, 550, 456, 311, 1825, 291, 393, 360, 466, 300, 457, 291, 528, 51602, 51602, 281, 652, 988, 291, 362, 257, 7426, 1737, 1752, 337, 264, 3089, 291, 4114, 558, 370, 291, 393, 3361, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.060211461323958174, "compression_ratio": 1.8583333333333334, "no_caption_prob": 4.399874887894839e-05}, {"id": 165, "seek": 100908, "start": 1014.4000000000001, "end": 1022.4000000000001, "text": " id and you're of drinking age right well you know you you you can trust that on your client", "tokens": [50364, 341, 1520, 309, 311, 4678, 807, 341, 8539, 309, 575, 341, 4116, 300, 1619, 2618, 10033, 428, 50630, 50630, 4496, 293, 291, 434, 295, 7583, 3205, 558, 731, 291, 458, 291, 291, 291, 393, 3361, 300, 322, 428, 6423, 51030, 51030, 1252, 3089, 294, 539, 21196, 382, 300, 7001, 382, 498, 498, 264, 6423, 2738, 281, 1821, 729, 32567, 51340, 51340, 538, 31422, 512, 6423, 1252, 3089, 550, 456, 311, 1825, 291, 393, 360, 466, 300, 457, 291, 528, 51602, 51602, 281, 652, 988, 291, 362, 257, 7426, 1737, 1752, 337, 264, 3089, 291, 4114, 558, 370, 291, 393, 3361, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.060211461323958174, "compression_ratio": 1.8583333333333334, "no_caption_prob": 4.399874887894839e-05}, {"id": 166, "seek": 100908, "start": 1022.4000000000001, "end": 1028.6000000000001, "text": " side code insofar as that matters as if if the client wants to break those guarantees", "tokens": [50364, 341, 1520, 309, 311, 4678, 807, 341, 8539, 309, 575, 341, 4116, 300, 1619, 2618, 10033, 428, 50630, 50630, 4496, 293, 291, 434, 295, 7583, 3205, 558, 731, 291, 458, 291, 291, 291, 393, 3361, 300, 322, 428, 6423, 51030, 51030, 1252, 3089, 294, 539, 21196, 382, 300, 7001, 382, 498, 498, 264, 6423, 2738, 281, 1821, 729, 32567, 51340, 51340, 538, 31422, 512, 6423, 1252, 3089, 550, 456, 311, 1825, 291, 393, 360, 466, 300, 457, 291, 528, 51602, 51602, 281, 652, 988, 291, 362, 257, 7426, 1737, 1752, 337, 264, 3089, 291, 4114, 558, 370, 291, 393, 3361, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.060211461323958174, "compression_ratio": 1.8583333333333334, "no_caption_prob": 4.399874887894839e-05}, {"id": 167, "seek": 100908, "start": 1028.6000000000001, "end": 1033.8400000000001, "text": " by hacking some client side code then there's nothing you can do about that but you want", "tokens": [50364, 341, 1520, 309, 311, 4678, 807, 341, 8539, 309, 575, 341, 4116, 300, 1619, 2618, 10033, 428, 50630, 50630, 4496, 293, 291, 434, 295, 7583, 3205, 558, 731, 291, 458, 291, 291, 291, 393, 3361, 300, 322, 428, 6423, 51030, 51030, 1252, 3089, 294, 539, 21196, 382, 300, 7001, 382, 498, 498, 264, 6423, 2738, 281, 1821, 729, 32567, 51340, 51340, 538, 31422, 512, 6423, 1252, 3089, 550, 456, 311, 1825, 291, 393, 360, 466, 300, 457, 291, 528, 51602, 51602, 281, 652, 988, 291, 362, 257, 7426, 1737, 1752, 337, 264, 3089, 291, 4114, 558, 370, 291, 393, 3361, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.060211461323958174, "compression_ratio": 1.8583333333333334, "no_caption_prob": 4.399874887894839e-05}, {"id": 168, "seek": 100908, "start": 1033.8400000000001, "end": 1037.46, "text": " to make sure you have a bug free experience for the code you wrote right so you can trust", "tokens": [50364, 341, 1520, 309, 311, 4678, 807, 341, 8539, 309, 575, 341, 4116, 300, 1619, 2618, 10033, 428, 50630, 50630, 4496, 293, 291, 434, 295, 7583, 3205, 558, 731, 291, 458, 291, 291, 291, 393, 3361, 300, 322, 428, 6423, 51030, 51030, 1252, 3089, 294, 539, 21196, 382, 300, 7001, 382, 498, 498, 264, 6423, 2738, 281, 1821, 729, 32567, 51340, 51340, 538, 31422, 512, 6423, 1252, 3089, 550, 456, 311, 1825, 291, 393, 360, 466, 300, 457, 291, 528, 51602, 51602, 281, 652, 988, 291, 362, 257, 7426, 1737, 1752, 337, 264, 3089, 291, 4114, 558, 370, 291, 393, 3361, 51783, 51783], "temperature": 0.0, "avg_logprob": -0.060211461323958174, "compression_ratio": 1.8583333333333334, "no_caption_prob": 4.399874887894839e-05}, {"id": 169, "seek": 103746, "start": 1037.46, "end": 1045.88, "text": " it in that regard but as far as trusting when you do lamb dara dot send to back end you", "tokens": [50364, 309, 294, 300, 3843, 457, 382, 1400, 382, 28235, 562, 291, 360, 10097, 274, 2419, 5893, 2845, 281, 646, 917, 291, 50785, 50785, 393, 572, 2854, 3361, 264, 3089, 300, 309, 1437, 807, 293, 437, 291, 4774, 570, 309, 1619, 51023, 51023, 731, 309, 257, 30351, 2644, 362, 364, 412, 5986, 293, 309, 2644, 362, 364, 1624, 43233, 935, 293, 51397, 51397, 498, 741, 360, 264, 787, 636, 281, 483, 257, 30351, 307, 498, 309, 311, 4678, 807, 300, 24071, 570, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.10068763284122242, "compression_ratio": 1.755, "no_caption_prob": 2.2473219360108487e-05}, {"id": 170, "seek": 103746, "start": 1045.88, "end": 1050.64, "text": " can no longer trust the code that it went through and what you receive because it says", "tokens": [50364, 309, 294, 300, 3843, 457, 382, 1400, 382, 28235, 562, 291, 360, 10097, 274, 2419, 5893, 2845, 281, 646, 917, 291, 50785, 50785, 393, 572, 2854, 3361, 264, 3089, 300, 309, 1437, 807, 293, 437, 291, 4774, 570, 309, 1619, 51023, 51023, 731, 309, 257, 30351, 2644, 362, 364, 412, 5986, 293, 309, 2644, 362, 364, 1624, 43233, 935, 293, 51397, 51397, 498, 741, 360, 264, 787, 636, 281, 483, 257, 30351, 307, 498, 309, 311, 4678, 807, 300, 24071, 570, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.10068763284122242, "compression_ratio": 1.755, "no_caption_prob": 2.2473219360108487e-05}, {"id": 171, "seek": 103746, "start": 1050.64, "end": 1058.1200000000001, "text": " well it a username cannot have an at symbol and it cannot have an exclamation point and", "tokens": [50364, 309, 294, 300, 3843, 457, 382, 1400, 382, 28235, 562, 291, 360, 10097, 274, 2419, 5893, 2845, 281, 646, 917, 291, 50785, 50785, 393, 572, 2854, 3361, 264, 3089, 300, 309, 1437, 807, 293, 437, 291, 4774, 570, 309, 1619, 51023, 51023, 731, 309, 257, 30351, 2644, 362, 364, 412, 5986, 293, 309, 2644, 362, 364, 1624, 43233, 935, 293, 51397, 51397, 498, 741, 360, 264, 787, 636, 281, 483, 257, 30351, 307, 498, 309, 311, 4678, 807, 300, 24071, 570, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.10068763284122242, "compression_ratio": 1.755, "no_caption_prob": 2.2473219360108487e-05}, {"id": 172, "seek": 103746, "start": 1058.1200000000001, "end": 1062.88, "text": " if i do the only way to get a username is if it's passed through that validation because", "tokens": [50364, 309, 294, 300, 3843, 457, 382, 1400, 382, 28235, 562, 291, 360, 10097, 274, 2419, 5893, 2845, 281, 646, 917, 291, 50785, 50785, 393, 572, 2854, 3361, 264, 3089, 300, 309, 1437, 807, 293, 437, 291, 4774, 570, 309, 1619, 51023, 51023, 731, 309, 257, 30351, 2644, 362, 364, 412, 5986, 293, 309, 2644, 362, 364, 1624, 43233, 935, 293, 51397, 51397, 498, 741, 360, 264, 787, 636, 281, 483, 257, 30351, 307, 498, 309, 311, 4678, 807, 300, 24071, 570, 51635, 51635], "temperature": 0.0, "avg_logprob": -0.10068763284122242, "compression_ratio": 1.755, "no_caption_prob": 2.2473219360108487e-05}, {"id": 173, "seek": 106288, "start": 1062.88, "end": 1068.5600000000002, "text": " i conditionally return the username type after it's run through that check you actually can't", "tokens": [50364, 741, 4188, 379, 2736, 264, 30351, 2010, 934, 309, 311, 1190, 807, 300, 1520, 291, 767, 393, 380, 50648, 50648, 3361, 300, 741, 500, 380, 741, 500, 380, 519, 2232, 309, 311, 1944, 281, 3361, 294, 10097, 274, 2419, 570, 2618, 727, 50918, 50918, 10339, 264, 2295, 1496, 10336, 293, 483, 27635, 274, 2419, 281, 4774, 300, 1412, 370, 291, 741, 519, 291, 576, 51270, 51270, 643, 281, 319, 26765, 729, 13834, 1338, 741, 478, 1953, 1310, 498, 291, 393, 1465, 264, 3636, 6063, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.09467168287797408, "compression_ratio": 1.7255813953488373, "no_caption_prob": 3.647713310783729e-05}, {"id": 174, "seek": 106288, "start": 1068.5600000000002, "end": 1073.96, "text": " trust that i don't i don't think uh it's possible to trust in lamb dara because somebody could", "tokens": [50364, 741, 4188, 379, 2736, 264, 30351, 2010, 934, 309, 311, 1190, 807, 300, 1520, 291, 767, 393, 380, 50648, 50648, 3361, 300, 741, 500, 380, 741, 500, 380, 519, 2232, 309, 311, 1944, 281, 3361, 294, 10097, 274, 2419, 570, 2618, 727, 50918, 50918, 10339, 264, 2295, 1496, 10336, 293, 483, 27635, 274, 2419, 281, 4774, 300, 1412, 370, 291, 741, 519, 291, 576, 51270, 51270, 643, 281, 319, 26765, 729, 13834, 1338, 741, 478, 1953, 1310, 498, 291, 393, 1465, 264, 3636, 6063, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.09467168287797408, "compression_ratio": 1.7255813953488373, "no_caption_prob": 3.647713310783729e-05}, {"id": 175, "seek": 106288, "start": 1073.96, "end": 1081.0, "text": " hack the low level protocol and get lame dara to receive that data so you i think you would", "tokens": [50364, 741, 4188, 379, 2736, 264, 30351, 2010, 934, 309, 311, 1190, 807, 300, 1520, 291, 767, 393, 380, 50648, 50648, 3361, 300, 741, 500, 380, 741, 500, 380, 519, 2232, 309, 311, 1944, 281, 3361, 294, 10097, 274, 2419, 570, 2618, 727, 50918, 50918, 10339, 264, 2295, 1496, 10336, 293, 483, 27635, 274, 2419, 281, 4774, 300, 1412, 370, 291, 741, 519, 291, 576, 51270, 51270, 643, 281, 319, 26765, 729, 13834, 1338, 741, 478, 1953, 1310, 498, 291, 393, 1465, 264, 3636, 6063, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.09467168287797408, "compression_ratio": 1.7255813953488373, "no_caption_prob": 3.647713310783729e-05}, {"id": 176, "seek": 106288, "start": 1081.0, "end": 1086.94, "text": " need to reperform those checks yeah i'm thinking maybe if you can sign the message somehow", "tokens": [50364, 741, 4188, 379, 2736, 264, 30351, 2010, 934, 309, 311, 1190, 807, 300, 1520, 291, 767, 393, 380, 50648, 50648, 3361, 300, 741, 500, 380, 741, 500, 380, 519, 2232, 309, 311, 1944, 281, 3361, 294, 10097, 274, 2419, 570, 2618, 727, 50918, 50918, 10339, 264, 2295, 1496, 10336, 293, 483, 27635, 274, 2419, 281, 4774, 300, 1412, 370, 291, 741, 519, 291, 576, 51270, 51270, 643, 281, 319, 26765, 729, 13834, 1338, 741, 478, 1953, 1310, 498, 291, 393, 1465, 264, 3636, 6063, 51567, 51567], "temperature": 0.0, "avg_logprob": -0.09467168287797408, "compression_ratio": 1.7255813953488373, "no_caption_prob": 3.647713310783729e-05}, {"id": 177, "seek": 108694, "start": 1086.94, "end": 1094.54, "text": " but i feel like the client could hack that way resign things themselves anyway too so", "tokens": [50364, 457, 741, 841, 411, 264, 6423, 727, 10339, 300, 636, 27471, 721, 2969, 4033, 886, 370, 50744, 50744, 741, 411, 300, 1558, 741, 2441, 498, 456, 307, 291, 458, 29400, 257, 636, 281, 281, 1465, 309, 300, 51055, 51055, 300, 576, 976, 291, 300, 10815, 457, 1338, 291, 434, 558, 300, 300, 576, 312, 264, 787, 636, 51251, 51251, 498, 309, 311, 406, 8175, 294, 512, 294, 512, 636, 550, 291, 362, 281, 1105, 291, 2644, 2387, 729, 32567, 51727, 51727], "temperature": 0.0, "avg_logprob": -0.08549409314810512, "compression_ratio": 1.8010204081632653, "no_caption_prob": 9.368281098431908e-06}, {"id": 178, "seek": 108694, "start": 1094.54, "end": 1100.76, "text": " i like that idea i wonder if there is you know theoretically a way to to sign it that", "tokens": [50364, 457, 741, 841, 411, 264, 6423, 727, 10339, 300, 636, 27471, 721, 2969, 4033, 886, 370, 50744, 50744, 741, 411, 300, 1558, 741, 2441, 498, 456, 307, 291, 458, 29400, 257, 636, 281, 281, 1465, 309, 300, 51055, 51055, 300, 576, 976, 291, 300, 10815, 457, 1338, 291, 434, 558, 300, 300, 576, 312, 264, 787, 636, 51251, 51251, 498, 309, 311, 406, 8175, 294, 512, 294, 512, 636, 550, 291, 362, 281, 1105, 291, 2644, 2387, 729, 32567, 51727, 51727], "temperature": 0.0, "avg_logprob": -0.08549409314810512, "compression_ratio": 1.8010204081632653, "no_caption_prob": 9.368281098431908e-06}, {"id": 179, "seek": 108694, "start": 1100.76, "end": 1104.68, "text": " that would give you that guarantee but yeah you're right that that would be the only way", "tokens": [50364, 457, 741, 841, 411, 264, 6423, 727, 10339, 300, 636, 27471, 721, 2969, 4033, 886, 370, 50744, 50744, 741, 411, 300, 1558, 741, 2441, 498, 456, 307, 291, 458, 29400, 257, 636, 281, 281, 1465, 309, 300, 51055, 51055, 300, 576, 976, 291, 300, 10815, 457, 1338, 291, 434, 558, 300, 300, 576, 312, 264, 787, 636, 51251, 51251, 498, 309, 311, 406, 8175, 294, 512, 294, 512, 636, 550, 291, 362, 281, 1105, 291, 2644, 2387, 729, 32567, 51727, 51727], "temperature": 0.0, "avg_logprob": -0.08549409314810512, "compression_ratio": 1.8010204081632653, "no_caption_prob": 9.368281098431908e-06}, {"id": 180, "seek": 108694, "start": 1104.68, "end": 1114.2, "text": " if it's not signed in some in some way then you have to um you cannot treat those guarantees", "tokens": [50364, 457, 741, 841, 411, 264, 6423, 727, 10339, 300, 636, 27471, 721, 2969, 4033, 886, 370, 50744, 50744, 741, 411, 300, 1558, 741, 2441, 498, 456, 307, 291, 458, 29400, 257, 636, 281, 281, 1465, 309, 300, 51055, 51055, 300, 576, 976, 291, 300, 10815, 457, 1338, 291, 434, 558, 300, 300, 576, 312, 264, 787, 636, 51251, 51251, 498, 309, 311, 406, 8175, 294, 512, 294, 512, 636, 550, 291, 362, 281, 1105, 291, 2644, 2387, 729, 32567, 51727, 51727], "temperature": 0.0, "avg_logprob": -0.08549409314810512, "compression_ratio": 1.8010204081632653, "no_caption_prob": 9.368281098431908e-06}, {"id": 181, "seek": 111420, "start": 1114.2, "end": 1119.6200000000001, "text": " as going across boundaries because when you receive something from the back end that type", "tokens": [50364, 382, 516, 2108, 13180, 570, 562, 291, 4774, 746, 490, 264, 646, 917, 300, 2010, 50635, 50635, 815, 572, 2854, 2906, 264, 18491, 309, 10768, 281, 570, 309, 311, 1944, 281, 281, 24996, 50924, 50924, 300, 741, 2441, 498, 294, 439, 3331, 322, 264, 646, 917, 291, 727, 319, 16888, 264, 18491, 411, 51297, 51297, 8568, 1968, 364, 3796, 307, 6451, 364, 3796, 731, 767, 3796, 307, 1238, 1152, 457, 2232, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10333489100138346, "compression_ratio": 1.721951219512195, "no_caption_prob": 2.7968168069492094e-05}, {"id": 182, "seek": 111420, "start": 1119.6200000000001, "end": 1125.4, "text": " may no longer represent the constraints it promised to because it's possible to to bypass", "tokens": [50364, 382, 516, 2108, 13180, 570, 562, 291, 4774, 746, 490, 264, 646, 917, 300, 2010, 50635, 50635, 815, 572, 2854, 2906, 264, 18491, 309, 10768, 281, 570, 309, 311, 1944, 281, 281, 24996, 50924, 50924, 300, 741, 2441, 498, 294, 439, 3331, 322, 264, 646, 917, 291, 727, 319, 16888, 264, 18491, 411, 51297, 51297, 8568, 1968, 364, 3796, 307, 6451, 364, 3796, 731, 767, 3796, 307, 1238, 1152, 457, 2232, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10333489100138346, "compression_ratio": 1.721951219512195, "no_caption_prob": 2.7968168069492094e-05}, {"id": 183, "seek": 111420, "start": 1125.4, "end": 1132.8600000000001, "text": " that i wonder if in all cases on the back end you could re verify the constraints like", "tokens": [50364, 382, 516, 2108, 13180, 570, 562, 291, 4774, 746, 490, 264, 646, 917, 300, 2010, 50635, 50635, 815, 572, 2854, 2906, 264, 18491, 309, 10768, 281, 570, 309, 311, 1944, 281, 281, 24996, 50924, 50924, 300, 741, 2441, 498, 294, 439, 3331, 322, 264, 646, 917, 291, 727, 319, 16888, 264, 18491, 411, 51297, 51297, 8568, 1968, 364, 3796, 307, 6451, 364, 3796, 731, 767, 3796, 307, 1238, 1152, 457, 2232, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10333489100138346, "compression_ratio": 1.721951219512195, "no_caption_prob": 2.7968168069492094e-05}, {"id": 184, "seek": 111420, "start": 1132.8600000000001, "end": 1139.24, "text": " checking whether an email is indeed an email well actually email is pretty hard but uh", "tokens": [50364, 382, 516, 2108, 13180, 570, 562, 291, 4774, 746, 490, 264, 646, 917, 300, 2010, 50635, 50635, 815, 572, 2854, 2906, 264, 18491, 309, 10768, 281, 570, 309, 311, 1944, 281, 281, 24996, 50924, 50924, 300, 741, 2441, 498, 294, 439, 3331, 322, 264, 646, 917, 291, 727, 319, 16888, 264, 18491, 411, 51297, 51297, 8568, 1968, 364, 3796, 307, 6451, 364, 3796, 731, 767, 3796, 307, 1238, 1152, 457, 2232, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.10333489100138346, "compression_ratio": 1.721951219512195, "no_caption_prob": 2.7968168069492094e-05}, {"id": 185, "seek": 113924, "start": 1139.24, "end": 1145.42, "text": " checking whether a security number uh social security number is uh is valid then that could", "tokens": [50364, 8568, 1968, 257, 3825, 1230, 2232, 2093, 3825, 1230, 307, 2232, 307, 7363, 550, 300, 727, 50673, 50673, 589, 484, 457, 498, 291, 643, 281, 2573, 484, 1968, 257, 1329, 295, 5022, 486, 300, 2864, 281, 472, 1071, 51068, 51068, 300, 436, 434, 439, 7363, 300, 300, 393, 312, 257, 857, 544, 12414, 1338, 741, 914, 382, 257, 2674, 3410, 51405, 51405, 885, 1075, 281, 3361, 300, 746, 1437, 807, 264, 1900, 3089, 14518, 300, 300, 309, 311, 300, 1080, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.10724597885495141, "compression_ratio": 1.7488151658767772, "no_caption_prob": 3.704936898429878e-05}, {"id": 186, "seek": 113924, "start": 1145.42, "end": 1153.32, "text": " work out but if you need to figure out whether a list of users will that refer to one another", "tokens": [50364, 8568, 1968, 257, 3825, 1230, 2232, 2093, 3825, 1230, 307, 2232, 307, 7363, 550, 300, 727, 50673, 50673, 589, 484, 457, 498, 291, 643, 281, 2573, 484, 1968, 257, 1329, 295, 5022, 486, 300, 2864, 281, 472, 1071, 51068, 51068, 300, 436, 434, 439, 7363, 300, 300, 393, 312, 257, 857, 544, 12414, 1338, 741, 914, 382, 257, 2674, 3410, 51405, 51405, 885, 1075, 281, 3361, 300, 746, 1437, 807, 264, 1900, 3089, 14518, 300, 300, 309, 311, 300, 1080, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.10724597885495141, "compression_ratio": 1.7488151658767772, "no_caption_prob": 3.704936898429878e-05}, {"id": 187, "seek": 113924, "start": 1153.32, "end": 1160.06, "text": " that they're all valid that that can be a bit more tricky yeah i mean as a general concept", "tokens": [50364, 8568, 1968, 257, 3825, 1230, 2232, 2093, 3825, 1230, 307, 2232, 307, 7363, 550, 300, 727, 50673, 50673, 589, 484, 457, 498, 291, 643, 281, 2573, 484, 1968, 257, 1329, 295, 5022, 486, 300, 2864, 281, 472, 1071, 51068, 51068, 300, 436, 434, 439, 7363, 300, 300, 393, 312, 257, 857, 544, 12414, 1338, 741, 914, 382, 257, 2674, 3410, 51405, 51405, 885, 1075, 281, 3361, 300, 746, 1437, 807, 264, 1900, 3089, 14518, 300, 300, 309, 311, 300, 1080, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.10724597885495141, "compression_ratio": 1.7488151658767772, "no_caption_prob": 3.704936898429878e-05}, {"id": 188, "seek": 113924, "start": 1160.06, "end": 1168.0, "text": " being able to trust that something went through the exact code paths that that it's that its", "tokens": [50364, 8568, 1968, 257, 3825, 1230, 2232, 2093, 3825, 1230, 307, 2232, 307, 7363, 550, 300, 727, 50673, 50673, 589, 484, 457, 498, 291, 643, 281, 2573, 484, 1968, 257, 1329, 295, 5022, 486, 300, 2864, 281, 472, 1071, 51068, 51068, 300, 436, 434, 439, 7363, 300, 300, 393, 312, 257, 857, 544, 12414, 1338, 741, 914, 382, 257, 2674, 3410, 51405, 51405, 885, 1075, 281, 3361, 300, 746, 1437, 807, 264, 1900, 3089, 14518, 300, 300, 309, 311, 300, 1080, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.10724597885495141, "compression_ratio": 1.7488151658767772, "no_caption_prob": 3.704936898429878e-05}, {"id": 189, "seek": 116800, "start": 1168.0, "end": 1174.76, "text": " type would imply or the you know that that wasn't bypassed in some way by creating that", "tokens": [50364, 2010, 576, 33616, 420, 264, 291, 458, 300, 300, 2067, 380, 24996, 292, 294, 512, 636, 538, 4084, 300, 50702, 50702, 2295, 1496, 2010, 741, 445, 500, 380, 458, 498, 456, 311, 257, 636, 281, 360, 300, 2108, 13180, 293, 309, 311, 51000, 51000, 1238, 1880, 741, 914, 754, 365, 1105, 275, 1373, 12729, 291, 291, 434, 406, 1075, 281, 360, 300, 558, 51328, 51328, 741, 841, 411, 10097, 67, 3504, 576, 312, 4748, 15856, 457, 920, 406, 7696, 3273, 1338, 741, 914, 309, 311, 51641, 51641], "temperature": 0.0, "avg_logprob": -0.1251852164107762, "compression_ratio": 1.7067307692307692, "no_caption_prob": 3.071501851081848e-05}, {"id": 190, "seek": 116800, "start": 1174.76, "end": 1180.72, "text": " low level type i just don't know if there's a way to do that across boundaries and it's", "tokens": [50364, 2010, 576, 33616, 420, 264, 291, 458, 300, 300, 2067, 380, 24996, 292, 294, 512, 636, 538, 4084, 300, 50702, 50702, 2295, 1496, 2010, 741, 445, 500, 380, 458, 498, 456, 311, 257, 636, 281, 360, 300, 2108, 13180, 293, 309, 311, 51000, 51000, 1238, 1880, 741, 914, 754, 365, 1105, 275, 1373, 12729, 291, 291, 434, 406, 1075, 281, 360, 300, 558, 51328, 51328, 741, 841, 411, 10097, 67, 3504, 576, 312, 4748, 15856, 457, 920, 406, 7696, 3273, 1338, 741, 914, 309, 311, 51641, 51641], "temperature": 0.0, "avg_logprob": -0.1251852164107762, "compression_ratio": 1.7067307692307692, "no_caption_prob": 3.071501851081848e-05}, {"id": 191, "seek": 116800, "start": 1180.72, "end": 1187.28, "text": " pretty interesting i mean even with um mts interrupt you you're not able to do that right", "tokens": [50364, 2010, 576, 33616, 420, 264, 291, 458, 300, 300, 2067, 380, 24996, 292, 294, 512, 636, 538, 4084, 300, 50702, 50702, 2295, 1496, 2010, 741, 445, 500, 380, 458, 498, 456, 311, 257, 636, 281, 360, 300, 2108, 13180, 293, 309, 311, 51000, 51000, 1238, 1880, 741, 914, 754, 365, 1105, 275, 1373, 12729, 291, 291, 434, 406, 1075, 281, 360, 300, 558, 51328, 51328, 741, 841, 411, 10097, 67, 3504, 576, 312, 4748, 15856, 457, 920, 406, 7696, 3273, 1338, 741, 914, 309, 311, 51641, 51641], "temperature": 0.0, "avg_logprob": -0.1251852164107762, "compression_ratio": 1.7067307692307692, "no_caption_prob": 3.071501851081848e-05}, {"id": 192, "seek": 116800, "start": 1187.28, "end": 1193.54, "text": " i feel like lambdari would be slightly safer but still not entirely safe yeah i mean it's", "tokens": [50364, 2010, 576, 33616, 420, 264, 291, 458, 300, 300, 2067, 380, 24996, 292, 294, 512, 636, 538, 4084, 300, 50702, 50702, 2295, 1496, 2010, 741, 445, 500, 380, 458, 498, 456, 311, 257, 636, 281, 360, 300, 2108, 13180, 293, 309, 311, 51000, 51000, 1238, 1880, 741, 914, 754, 365, 1105, 275, 1373, 12729, 291, 291, 434, 406, 1075, 281, 360, 300, 558, 51328, 51328, 741, 841, 411, 10097, 67, 3504, 576, 312, 4748, 15856, 457, 920, 406, 7696, 3273, 1338, 741, 914, 309, 311, 51641, 51641], "temperature": 0.0, "avg_logprob": -0.1251852164107762, "compression_ratio": 1.7067307692307692, "no_caption_prob": 3.071501851081848e-05}, {"id": 193, "seek": 119354, "start": 1193.54, "end": 1200.96, "text": " more about like because i think people people think about the term type safety i get the", "tokens": [50364, 544, 466, 411, 570, 741, 519, 561, 561, 519, 466, 264, 1433, 2010, 4514, 741, 483, 264, 50735, 50735, 2020, 2049, 294, 264, 1333, 295, 361, 37331, 5944, 1768, 456, 311, 257, 688, 295, 1953, 466, 2010, 4514, 51031, 51031, 382, 411, 341, 307, 257, 6798, 341, 307, 257, 1230, 741, 393, 3361, 729, 721, 457, 281, 385, 300, 311, 51309, 51309, 445, 411, 29699, 264, 3753, 295, 2010, 4514, 293, 293, 281, 385, 2010, 4514, 307, 709, 544, 466, 51647, 51647], "temperature": 0.0, "avg_logprob": -0.04431322075071789, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.4680579372216016e-05}, {"id": 194, "seek": 119354, "start": 1200.96, "end": 1206.8799999999999, "text": " sense often in the sort of javascript community there's a lot of thinking about type safety", "tokens": [50364, 544, 466, 411, 570, 741, 519, 561, 561, 519, 466, 264, 1433, 2010, 4514, 741, 483, 264, 50735, 50735, 2020, 2049, 294, 264, 1333, 295, 361, 37331, 5944, 1768, 456, 311, 257, 688, 295, 1953, 466, 2010, 4514, 51031, 51031, 382, 411, 341, 307, 257, 6798, 341, 307, 257, 1230, 741, 393, 3361, 729, 721, 457, 281, 385, 300, 311, 51309, 51309, 445, 411, 29699, 264, 3753, 295, 2010, 4514, 293, 293, 281, 385, 2010, 4514, 307, 709, 544, 466, 51647, 51647], "temperature": 0.0, "avg_logprob": -0.04431322075071789, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.4680579372216016e-05}, {"id": 195, "seek": 119354, "start": 1206.8799999999999, "end": 1212.44, "text": " as like this is a string this is a number i can trust those things but to me that's", "tokens": [50364, 544, 466, 411, 570, 741, 519, 561, 561, 519, 466, 264, 1433, 2010, 4514, 741, 483, 264, 50735, 50735, 2020, 2049, 294, 264, 1333, 295, 361, 37331, 5944, 1768, 456, 311, 257, 688, 295, 1953, 466, 2010, 4514, 51031, 51031, 382, 411, 341, 307, 257, 6798, 341, 307, 257, 1230, 741, 393, 3361, 729, 721, 457, 281, 385, 300, 311, 51309, 51309, 445, 411, 29699, 264, 3753, 295, 2010, 4514, 293, 293, 281, 385, 2010, 4514, 307, 709, 544, 466, 51647, 51647], "temperature": 0.0, "avg_logprob": -0.04431322075071789, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.4680579372216016e-05}, {"id": 196, "seek": 119354, "start": 1212.44, "end": 1219.2, "text": " just like scratching the surface of type safety and and to me type safety is much more about", "tokens": [50364, 544, 466, 411, 570, 741, 519, 561, 561, 519, 466, 264, 1433, 2010, 4514, 741, 483, 264, 50735, 50735, 2020, 2049, 294, 264, 1333, 295, 361, 37331, 5944, 1768, 456, 311, 257, 688, 295, 1953, 466, 2010, 4514, 51031, 51031, 382, 411, 341, 307, 257, 6798, 341, 307, 257, 1230, 741, 393, 3361, 729, 721, 457, 281, 385, 300, 311, 51309, 51309, 445, 411, 29699, 264, 3753, 295, 2010, 4514, 293, 293, 281, 385, 2010, 4514, 307, 709, 544, 466, 51647, 51647], "temperature": 0.0, "avg_logprob": -0.04431322075071789, "compression_ratio": 1.9090909090909092, "no_caption_prob": 2.4680579372216016e-05}, {"id": 197, "seek": 121920, "start": 1219.2, "end": 1223.6000000000001, "text": " you know yes i want to know that a string is actually a string and an int is actually", "tokens": [50364, 291, 458, 2086, 741, 528, 281, 458, 300, 257, 6798, 307, 767, 257, 6798, 293, 364, 560, 307, 767, 50584, 50584, 364, 560, 457, 741, 528, 281, 352, 4399, 300, 293, 741, 528, 281, 458, 300, 257, 30351, 767, 1437, 50866, 50866, 807, 341, 1520, 309, 4678, 807, 341, 8539, 741, 393, 3361, 309, 293, 406, 362, 281, 360, 24734, 51134, 51134, 7930, 411, 321, 2825, 466, 294, 264, 48377, 500, 380, 29562, 3500, 341, 48377, 500, 380, 29562, 51360, 51360, 3410, 741, 528, 281, 48377, 257, 2010, 362, 309, 2906, 613, 18491, 293, 312, 1075, 281, 3361, 729, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.07394406864944014, "compression_ratio": 2.046082949308756, "no_caption_prob": 6.708262662868947e-05}, {"id": 198, "seek": 121920, "start": 1223.6000000000001, "end": 1229.24, "text": " an int but i want to go beyond that and i want to know that a username actually went", "tokens": [50364, 291, 458, 2086, 741, 528, 281, 458, 300, 257, 6798, 307, 767, 257, 6798, 293, 364, 560, 307, 767, 50584, 50584, 364, 560, 457, 741, 528, 281, 352, 4399, 300, 293, 741, 528, 281, 458, 300, 257, 30351, 767, 1437, 50866, 50866, 807, 341, 1520, 309, 4678, 807, 341, 8539, 741, 393, 3361, 309, 293, 406, 362, 281, 360, 24734, 51134, 51134, 7930, 411, 321, 2825, 466, 294, 264, 48377, 500, 380, 29562, 3500, 341, 48377, 500, 380, 29562, 51360, 51360, 3410, 741, 528, 281, 48377, 257, 2010, 362, 309, 2906, 613, 18491, 293, 312, 1075, 281, 3361, 729, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.07394406864944014, "compression_ratio": 2.046082949308756, "no_caption_prob": 6.708262662868947e-05}, {"id": 199, "seek": 121920, "start": 1229.24, "end": 1234.6000000000001, "text": " through this check it passed through this gate i can trust it and not have to do shotgun", "tokens": [50364, 291, 458, 2086, 741, 528, 281, 458, 300, 257, 6798, 307, 767, 257, 6798, 293, 364, 560, 307, 767, 50584, 50584, 364, 560, 457, 741, 528, 281, 352, 4399, 300, 293, 741, 528, 281, 458, 300, 257, 30351, 767, 1437, 50866, 50866, 807, 341, 1520, 309, 4678, 807, 341, 8539, 741, 393, 3361, 309, 293, 406, 362, 281, 360, 24734, 51134, 51134, 7930, 411, 321, 2825, 466, 294, 264, 48377, 500, 380, 29562, 3500, 341, 48377, 500, 380, 29562, 51360, 51360, 3410, 741, 528, 281, 48377, 257, 2010, 362, 309, 2906, 613, 18491, 293, 312, 1075, 281, 3361, 729, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.07394406864944014, "compression_ratio": 2.046082949308756, "no_caption_prob": 6.708262662868947e-05}, {"id": 200, "seek": 121920, "start": 1234.6000000000001, "end": 1239.1200000000001, "text": " surgery like we talked about in the parse don't validate episode this parse don't validate", "tokens": [50364, 291, 458, 2086, 741, 528, 281, 458, 300, 257, 6798, 307, 767, 257, 6798, 293, 364, 560, 307, 767, 50584, 50584, 364, 560, 457, 741, 528, 281, 352, 4399, 300, 293, 741, 528, 281, 458, 300, 257, 30351, 767, 1437, 50866, 50866, 807, 341, 1520, 309, 4678, 807, 341, 8539, 741, 393, 3361, 309, 293, 406, 362, 281, 360, 24734, 51134, 51134, 7930, 411, 321, 2825, 466, 294, 264, 48377, 500, 380, 29562, 3500, 341, 48377, 500, 380, 29562, 51360, 51360, 3410, 741, 528, 281, 48377, 257, 2010, 362, 309, 2906, 613, 18491, 293, 312, 1075, 281, 3361, 729, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.07394406864944014, "compression_ratio": 2.046082949308756, "no_caption_prob": 6.708262662868947e-05}, {"id": 201, "seek": 121920, "start": 1239.1200000000001, "end": 1245.32, "text": " concept i want to parse a type have it represent these constraints and be able to trust those", "tokens": [50364, 291, 458, 2086, 741, 528, 281, 458, 300, 257, 6798, 307, 767, 257, 6798, 293, 364, 560, 307, 767, 50584, 50584, 364, 560, 457, 741, 528, 281, 352, 4399, 300, 293, 741, 528, 281, 458, 300, 257, 30351, 767, 1437, 50866, 50866, 807, 341, 1520, 309, 4678, 807, 341, 8539, 741, 393, 3361, 309, 293, 406, 362, 281, 360, 24734, 51134, 51134, 7930, 411, 321, 2825, 466, 294, 264, 48377, 500, 380, 29562, 3500, 341, 48377, 500, 380, 29562, 51360, 51360, 3410, 741, 528, 281, 48377, 257, 2010, 362, 309, 2906, 613, 18491, 293, 312, 1075, 281, 3361, 729, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.07394406864944014, "compression_ratio": 2.046082949308756, "no_caption_prob": 6.708262662868947e-05}, {"id": 202, "seek": 124532, "start": 1245.32, "end": 1253.08, "text": " and not have to recheck those constraints and types constantly so yeah i mean lmts interrupt", "tokens": [50364, 293, 406, 362, 281, 319, 15723, 729, 18491, 293, 3467, 6460, 370, 1338, 741, 914, 287, 76, 1373, 12729, 50752, 50752, 307, 741, 914, 309, 311, 1242, 1412, 490, 309, 311, 733, 295, 16362, 3249, 264, 7417, 1296, 613, 3467, 5944, 51044, 51044, 3467, 293, 806, 76, 3467, 457, 797, 27993, 411, 3467, 5944, 3467, 294, 257, 2010, 1185, 2361, 322, 51342, 51342, 17301, 689, 17301, 307, 445, 257, 257, 2290, 300, 311, 2212, 281, 291, 309, 26271, 24188, 1652, 437, 291, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.10353984389194222, "compression_ratio": 1.7391304347826086, "no_caption_prob": 1.3211388250056189e-05}, {"id": 203, "seek": 124532, "start": 1253.08, "end": 1258.9199999999998, "text": " is i mean it's getting data from it's kind of bridging the gap between these typescript", "tokens": [50364, 293, 406, 362, 281, 319, 15723, 729, 18491, 293, 3467, 6460, 370, 1338, 741, 914, 287, 76, 1373, 12729, 50752, 50752, 307, 741, 914, 309, 311, 1242, 1412, 490, 309, 311, 733, 295, 16362, 3249, 264, 7417, 1296, 613, 3467, 5944, 51044, 51044, 3467, 293, 806, 76, 3467, 457, 797, 27993, 411, 3467, 5944, 3467, 294, 257, 2010, 1185, 2361, 322, 51342, 51342, 17301, 689, 17301, 307, 445, 257, 257, 2290, 300, 311, 2212, 281, 291, 309, 26271, 24188, 1652, 437, 291, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.10353984389194222, "compression_ratio": 1.7391304347826086, "no_caption_prob": 1.3211388250056189e-05}, {"id": 204, "seek": 124532, "start": 1258.9199999999998, "end": 1264.8799999999999, "text": " types and elm types but again inherently like typescript types in a type system based on", "tokens": [50364, 293, 406, 362, 281, 319, 15723, 729, 18491, 293, 3467, 6460, 370, 1338, 741, 914, 287, 76, 1373, 12729, 50752, 50752, 307, 741, 914, 309, 311, 1242, 1412, 490, 309, 311, 733, 295, 16362, 3249, 264, 7417, 1296, 613, 3467, 5944, 51044, 51044, 3467, 293, 806, 76, 3467, 457, 797, 27993, 411, 3467, 5944, 3467, 294, 257, 2010, 1185, 2361, 322, 51342, 51342, 17301, 689, 17301, 307, 445, 257, 257, 2290, 300, 311, 2212, 281, 291, 309, 26271, 24188, 1652, 437, 291, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.10353984389194222, "compression_ratio": 1.7391304347826086, "no_caption_prob": 1.3211388250056189e-05}, {"id": 205, "seek": 124532, "start": 1264.8799999999999, "end": 1273.54, "text": " casting where casting is just a a tool that's given to you it severely undermines what you", "tokens": [50364, 293, 406, 362, 281, 319, 15723, 729, 18491, 293, 3467, 6460, 370, 1338, 741, 914, 287, 76, 1373, 12729, 50752, 50752, 307, 741, 914, 309, 311, 1242, 1412, 490, 309, 311, 733, 295, 16362, 3249, 264, 7417, 1296, 613, 3467, 5944, 51044, 51044, 3467, 293, 806, 76, 3467, 457, 797, 27993, 411, 3467, 5944, 3467, 294, 257, 2010, 1185, 2361, 322, 51342, 51342, 17301, 689, 17301, 307, 445, 257, 257, 2290, 300, 311, 2212, 281, 291, 309, 26271, 24188, 1652, 437, 291, 51775, 51775], "temperature": 0.0, "avg_logprob": -0.10353984389194222, "compression_ratio": 1.7391304347826086, "no_caption_prob": 1.3211388250056189e-05}, {"id": 206, "seek": 127354, "start": 1273.54, "end": 1279.1599999999999, "text": " can trust in terms of constraints for what code paths something went through if it has", "tokens": [50364, 393, 3361, 294, 2115, 295, 18491, 337, 437, 3089, 14518, 746, 1437, 807, 498, 309, 575, 50645, 50645, 257, 2212, 2010, 291, 445, 3624, 300, 3485, 281, 281, 5672, 322, 300, 2319, 9735, 294, 806, 76, 291, 362, 51045, 51045, 300, 293, 300, 311, 300, 311, 364, 1021, 2649, 586, 411, 2618, 1062, 584, 731, 300, 311, 2489, 51385, 51385, 457, 294, 3124, 741, 764, 512, 287, 686, 278, 4474, 300, 584, 300, 291, 500, 380, 4193, 2086, 457, 362, 291, 1612, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.07562140531318132, "compression_ratio": 1.6543778801843319, "no_caption_prob": 2.2124195311334915e-05}, {"id": 207, "seek": 127354, "start": 1279.1599999999999, "end": 1287.1599999999999, "text": " a given type you just lose that ability to to depend on that 100 whereas in elm you have", "tokens": [50364, 393, 3361, 294, 2115, 295, 18491, 337, 437, 3089, 14518, 746, 1437, 807, 498, 309, 575, 50645, 50645, 257, 2212, 2010, 291, 445, 3624, 300, 3485, 281, 281, 5672, 322, 300, 2319, 9735, 294, 806, 76, 291, 362, 51045, 51045, 300, 293, 300, 311, 300, 311, 364, 1021, 2649, 586, 411, 2618, 1062, 584, 731, 300, 311, 2489, 51385, 51385, 457, 294, 3124, 741, 764, 512, 287, 686, 278, 4474, 300, 584, 300, 291, 500, 380, 4193, 2086, 457, 362, 291, 1612, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.07562140531318132, "compression_ratio": 1.6543778801843319, "no_caption_prob": 2.2124195311334915e-05}, {"id": 208, "seek": 127354, "start": 1287.1599999999999, "end": 1293.96, "text": " that and that's that's an important difference now like somebody might say well that's fine", "tokens": [50364, 393, 3361, 294, 2115, 295, 18491, 337, 437, 3089, 14518, 746, 1437, 807, 498, 309, 575, 50645, 50645, 257, 2212, 2010, 291, 445, 3624, 300, 3485, 281, 281, 5672, 322, 300, 2319, 9735, 294, 806, 76, 291, 362, 51045, 51045, 300, 293, 300, 311, 300, 311, 364, 1021, 2649, 586, 411, 2618, 1062, 584, 731, 300, 311, 2489, 51385, 51385, 457, 294, 3124, 741, 764, 512, 287, 686, 278, 4474, 300, 584, 300, 291, 500, 380, 4193, 2086, 457, 362, 291, 1612, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.07562140531318132, "compression_ratio": 1.6543778801843319, "no_caption_prob": 2.2124195311334915e-05}, {"id": 209, "seek": 127354, "start": 1293.96, "end": 1302.96, "text": " but in practice i use some linting rules that say that you don't cast yes but have you seen", "tokens": [50364, 393, 3361, 294, 2115, 295, 18491, 337, 437, 3089, 14518, 746, 1437, 807, 498, 309, 575, 50645, 50645, 257, 2212, 2010, 291, 445, 3624, 300, 3485, 281, 281, 5672, 322, 300, 2319, 9735, 294, 806, 76, 291, 362, 51045, 51045, 300, 293, 300, 311, 300, 311, 364, 1021, 2649, 586, 411, 2618, 1062, 584, 731, 300, 311, 2489, 51385, 51385, 457, 294, 3124, 741, 764, 512, 287, 686, 278, 4474, 300, 584, 300, 291, 500, 380, 4193, 2086, 457, 362, 291, 1612, 51835, 51835], "temperature": 0.0, "avg_logprob": -0.07562140531318132, "compression_ratio": 1.6543778801843319, "no_caption_prob": 2.2124195311334915e-05}, {"id": 210, "seek": 130296, "start": 1302.96, "end": 1310.1200000000001, "text": " the disable comments right right and somebody might say like that's fine but i can depend", "tokens": [50364, 264, 28362, 3053, 558, 558, 293, 2618, 1062, 584, 411, 300, 311, 2489, 457, 741, 393, 5672, 50722, 50722, 322, 309, 1547, 294, 3124, 300, 309, 311, 516, 281, 4871, 1547, 15120, 293, 741, 478, 1392, 365, 309, 293, 51058, 51058, 300, 311, 300, 311, 257, 10585, 4800, 300, 311, 445, 406, 452, 4800, 295, 577, 741, 528, 281, 6909, 51378, 51378, 3089, 741, 959, 1419, 264, 3262, 3043, 32567, 293, 293, 293, 300, 311, 983, 741, 959, 7019, 2440, 291, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.12435556299546185, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.3211531950219069e-05}, {"id": 211, "seek": 130296, "start": 1310.1200000000001, "end": 1316.8400000000001, "text": " on it enough in practice that it's going to prevent enough bugs and i'm okay with it and", "tokens": [50364, 264, 28362, 3053, 558, 558, 293, 2618, 1062, 584, 411, 300, 311, 2489, 457, 741, 393, 5672, 50722, 50722, 322, 309, 1547, 294, 3124, 300, 309, 311, 516, 281, 4871, 1547, 15120, 293, 741, 478, 1392, 365, 309, 293, 51058, 51058, 300, 311, 300, 311, 257, 10585, 4800, 300, 311, 445, 406, 452, 4800, 295, 577, 741, 528, 281, 6909, 51378, 51378, 3089, 741, 959, 1419, 264, 3262, 3043, 32567, 293, 293, 293, 300, 311, 983, 741, 959, 7019, 2440, 291, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.12435556299546185, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.3211531950219069e-05}, {"id": 212, "seek": 130296, "start": 1316.8400000000001, "end": 1323.24, "text": " that's that's a reasonable opinion that's just not my opinion of how i want to maintain", "tokens": [50364, 264, 28362, 3053, 558, 558, 293, 2618, 1062, 584, 411, 300, 311, 2489, 457, 741, 393, 5672, 50722, 50722, 322, 309, 1547, 294, 3124, 300, 309, 311, 516, 281, 4871, 1547, 15120, 293, 741, 478, 1392, 365, 309, 293, 51058, 51058, 300, 311, 300, 311, 257, 10585, 4800, 300, 311, 445, 406, 452, 4800, 295, 577, 741, 528, 281, 6909, 51378, 51378, 3089, 741, 959, 1419, 264, 3262, 3043, 32567, 293, 293, 293, 300, 311, 983, 741, 959, 7019, 2440, 291, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.12435556299546185, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.3211531950219069e-05}, {"id": 213, "seek": 130296, "start": 1323.24, "end": 1329.24, "text": " code i love having the hundred percent guarantees and and and that's why i love wrap early you", "tokens": [50364, 264, 28362, 3053, 558, 558, 293, 2618, 1062, 584, 411, 300, 311, 2489, 457, 741, 393, 5672, 50722, 50722, 322, 309, 1547, 294, 3124, 300, 309, 311, 516, 281, 4871, 1547, 15120, 293, 741, 478, 1392, 365, 309, 293, 51058, 51058, 300, 311, 300, 311, 257, 10585, 4800, 300, 311, 445, 406, 452, 4800, 295, 577, 741, 528, 281, 6909, 51378, 51378, 3089, 741, 959, 1419, 264, 3262, 3043, 32567, 293, 293, 293, 300, 311, 983, 741, 959, 7019, 2440, 291, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.12435556299546185, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.3211531950219069e-05}, {"id": 214, "seek": 132924, "start": 1329.24, "end": 1336.88, "text": " know i'm curious about something uh related to unwrapping so it's something that every", "tokens": [50364, 458, 741, 478, 6369, 466, 746, 2232, 4077, 281, 14853, 424, 3759, 370, 309, 311, 746, 300, 633, 50746, 50746, 565, 741, 8593, 309, 741, 478, 4748, 25921, 2232, 309, 311, 562, 741, 528, 281, 2845, 264, 1412, 670, 2232, 51096, 51096, 364, 276, 83, 79, 5308, 420, 498, 741, 528, 281, 2232, 4674, 309, 370, 718, 311, 584, 741, 528, 281, 4674, 264, 2093, 51389, 51389, 3825, 1230, 293, 741, 528, 741, 914, 300, 820, 312, 7633, 1391, 558, 1936, 452, 1168, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.09692042997513695, "compression_ratio": 1.7087378640776698, "no_caption_prob": 3.023996396223083e-05}, {"id": 215, "seek": 132924, "start": 1336.88, "end": 1343.88, "text": " time i encounter it i'm slightly annoyed uh it's when i want to send the data over uh", "tokens": [50364, 458, 741, 478, 6369, 466, 746, 2232, 4077, 281, 14853, 424, 3759, 370, 309, 311, 746, 300, 633, 50746, 50746, 565, 741, 8593, 309, 741, 478, 4748, 25921, 2232, 309, 311, 562, 741, 528, 281, 2845, 264, 1412, 670, 2232, 51096, 51096, 364, 276, 83, 79, 5308, 420, 498, 741, 528, 281, 2232, 4674, 309, 370, 718, 311, 584, 741, 528, 281, 4674, 264, 2093, 51389, 51389, 3825, 1230, 293, 741, 528, 741, 914, 300, 820, 312, 7633, 1391, 558, 1936, 452, 1168, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.09692042997513695, "compression_ratio": 1.7087378640776698, "no_caption_prob": 3.023996396223083e-05}, {"id": 216, "seek": 132924, "start": 1343.88, "end": 1349.74, "text": " an htp request or if i want to uh display it so let's say i want to display the social", "tokens": [50364, 458, 741, 478, 6369, 466, 746, 2232, 4077, 281, 14853, 424, 3759, 370, 309, 311, 746, 300, 633, 50746, 50746, 565, 741, 8593, 309, 741, 478, 4748, 25921, 2232, 309, 311, 562, 741, 528, 281, 2845, 264, 1412, 670, 2232, 51096, 51096, 364, 276, 83, 79, 5308, 420, 498, 741, 528, 281, 2232, 4674, 309, 370, 718, 311, 584, 741, 528, 281, 4674, 264, 2093, 51389, 51389, 3825, 1230, 293, 741, 528, 741, 914, 300, 820, 312, 7633, 1391, 558, 1936, 452, 1168, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.09692042997513695, "compression_ratio": 1.7087378640776698, "no_caption_prob": 3.023996396223083e-05}, {"id": 217, "seek": 132924, "start": 1349.74, "end": 1355.72, "text": " security number and i want i mean that should be hidden probably right basically my question", "tokens": [50364, 458, 741, 478, 6369, 466, 746, 2232, 4077, 281, 14853, 424, 3759, 370, 309, 311, 746, 300, 633, 50746, 50746, 565, 741, 8593, 309, 741, 478, 4748, 25921, 2232, 309, 311, 562, 741, 528, 281, 2845, 264, 1412, 670, 2232, 51096, 51096, 364, 276, 83, 79, 5308, 420, 498, 741, 528, 281, 2232, 4674, 309, 370, 718, 311, 584, 741, 528, 281, 4674, 264, 2093, 51389, 51389, 3825, 1230, 293, 741, 528, 741, 914, 300, 820, 312, 7633, 1391, 558, 1936, 452, 1168, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.09692042997513695, "compression_ratio": 1.7087378640776698, "no_caption_prob": 3.023996396223083e-05}, {"id": 218, "seek": 135572, "start": 1355.72, "end": 1362.96, "text": " is should there be a two string function if the underlying data is two string so because", "tokens": [50364, 307, 820, 456, 312, 257, 732, 6798, 2445, 498, 264, 14217, 1412, 307, 732, 6798, 370, 570, 50726, 50726, 570, 498, 291, 2845, 309, 670, 281, 670, 364, 276, 83, 79, 5308, 550, 291, 643, 281, 7620, 309, 281, 257, 6798, 51105, 51105, 370, 300, 309, 393, 312, 16424, 281, 257, 361, 3015, 2232, 2058, 1429, 2158, 370, 300, 291, 600, 668, 2279, 670, 276, 83, 79, 420, 51464, 51464, 498, 309, 311, 16372, 382, 276, 83, 15480, 550, 309, 2203, 281, 312, 16424, 281, 257, 6798, 293, 550, 309, 2170, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.10660354212710732, "compression_ratio": 1.8983957219251337, "no_caption_prob": 3.4265507565578446e-05}, {"id": 219, "seek": 135572, "start": 1362.96, "end": 1370.54, "text": " because if you send it over to over an htp request then you need to convert it to a string", "tokens": [50364, 307, 820, 456, 312, 257, 732, 6798, 2445, 498, 264, 14217, 1412, 307, 732, 6798, 370, 570, 50726, 50726, 570, 498, 291, 2845, 309, 670, 281, 670, 364, 276, 83, 79, 5308, 550, 291, 643, 281, 7620, 309, 281, 257, 6798, 51105, 51105, 370, 300, 309, 393, 312, 16424, 281, 257, 361, 3015, 2232, 2058, 1429, 2158, 370, 300, 291, 600, 668, 2279, 670, 276, 83, 79, 420, 51464, 51464, 498, 309, 311, 16372, 382, 276, 83, 15480, 550, 309, 2203, 281, 312, 16424, 281, 257, 6798, 293, 550, 309, 2170, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.10660354212710732, "compression_ratio": 1.8983957219251337, "no_caption_prob": 3.4265507565578446e-05}, {"id": 220, "seek": 135572, "start": 1370.54, "end": 1377.72, "text": " so that it can be converted to a json uh encode value so that you've been sent over htp or", "tokens": [50364, 307, 820, 456, 312, 257, 732, 6798, 2445, 498, 264, 14217, 1412, 307, 732, 6798, 370, 570, 50726, 50726, 570, 498, 291, 2845, 309, 670, 281, 670, 364, 276, 83, 79, 5308, 550, 291, 643, 281, 7620, 309, 281, 257, 6798, 51105, 51105, 370, 300, 309, 393, 312, 16424, 281, 257, 361, 3015, 2232, 2058, 1429, 2158, 370, 300, 291, 600, 668, 2279, 670, 276, 83, 79, 420, 51464, 51464, 498, 309, 311, 16372, 382, 276, 83, 15480, 550, 309, 2203, 281, 312, 16424, 281, 257, 6798, 293, 550, 309, 2170, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.10660354212710732, "compression_ratio": 1.8983957219251337, "no_caption_prob": 3.4265507565578446e-05}, {"id": 221, "seek": 135572, "start": 1377.72, "end": 1382.44, "text": " if it's displayed as html then it needs to be converted to a string and then it gets", "tokens": [50364, 307, 820, 456, 312, 257, 732, 6798, 2445, 498, 264, 14217, 1412, 307, 732, 6798, 370, 570, 50726, 50726, 570, 498, 291, 2845, 309, 670, 281, 670, 364, 276, 83, 79, 5308, 550, 291, 643, 281, 7620, 309, 281, 257, 6798, 51105, 51105, 370, 300, 309, 393, 312, 16424, 281, 257, 361, 3015, 2232, 2058, 1429, 2158, 370, 300, 291, 600, 668, 2279, 670, 276, 83, 79, 420, 51464, 51464, 498, 309, 311, 16372, 382, 276, 83, 15480, 550, 309, 2203, 281, 312, 16424, 281, 257, 6798, 293, 550, 309, 2170, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.10660354212710732, "compression_ratio": 1.8983957219251337, "no_caption_prob": 3.4265507565578446e-05}, {"id": 222, "seek": 138244, "start": 1382.44, "end": 1388.96, "text": " displayed by calling html text or appending it or modifying it but but if you have that", "tokens": [50364, 16372, 538, 5141, 276, 83, 15480, 2487, 420, 724, 2029, 309, 420, 42626, 309, 457, 457, 498, 291, 362, 300, 50690, 50690, 732, 6798, 2445, 550, 456, 311, 257, 4036, 8044, 295, 428, 3089, 597, 575, 2105, 281, 264, 51012, 51012, 8936, 1412, 293, 436, 436, 393, 2082, 309, 493, 293, 586, 570, 291, 362, 341, 2445, 264, 1472, 51304, 51304, 295, 428, 3089, 3096, 393, 360, 2035, 365, 309, 370, 436, 727, 498, 436, 1415, 281, 4674, 264, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07072950845741365, "compression_ratio": 1.7835051546391754, "no_caption_prob": 1.1125455785077065e-05}, {"id": 223, "seek": 138244, "start": 1388.96, "end": 1395.4, "text": " two string function then there's a slight portion of your code which has access to the", "tokens": [50364, 16372, 538, 5141, 276, 83, 15480, 2487, 420, 724, 2029, 309, 420, 42626, 309, 457, 457, 498, 291, 362, 300, 50690, 50690, 732, 6798, 2445, 550, 456, 311, 257, 4036, 8044, 295, 428, 3089, 597, 575, 2105, 281, 264, 51012, 51012, 8936, 1412, 293, 436, 436, 393, 2082, 309, 493, 293, 586, 570, 291, 362, 341, 2445, 264, 1472, 51304, 51304, 295, 428, 3089, 3096, 393, 360, 2035, 365, 309, 370, 436, 727, 498, 436, 1415, 281, 4674, 264, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07072950845741365, "compression_ratio": 1.7835051546391754, "no_caption_prob": 1.1125455785077065e-05}, {"id": 224, "seek": 138244, "start": 1395.4, "end": 1401.24, "text": " raw data and they they can mess it up and now because you have this function the rest", "tokens": [50364, 16372, 538, 5141, 276, 83, 15480, 2487, 420, 724, 2029, 309, 420, 42626, 309, 457, 457, 498, 291, 362, 300, 50690, 50690, 732, 6798, 2445, 550, 456, 311, 257, 4036, 8044, 295, 428, 3089, 597, 575, 2105, 281, 264, 51012, 51012, 8936, 1412, 293, 436, 436, 393, 2082, 309, 493, 293, 586, 570, 291, 362, 341, 2445, 264, 1472, 51304, 51304, 295, 428, 3089, 3096, 393, 360, 2035, 365, 309, 370, 436, 727, 498, 436, 1415, 281, 4674, 264, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07072950845741365, "compression_ratio": 1.7835051546391754, "no_caption_prob": 1.1125455785077065e-05}, {"id": 225, "seek": 138244, "start": 1401.24, "end": 1406.44, "text": " of your code base can do whatever with it so they could if they wanted to display the", "tokens": [50364, 16372, 538, 5141, 276, 83, 15480, 2487, 420, 724, 2029, 309, 420, 42626, 309, 457, 457, 498, 291, 362, 300, 50690, 50690, 732, 6798, 2445, 550, 456, 311, 257, 4036, 8044, 295, 428, 3089, 597, 575, 2105, 281, 264, 51012, 51012, 8936, 1412, 293, 436, 436, 393, 2082, 309, 493, 293, 586, 570, 291, 362, 341, 2445, 264, 1472, 51304, 51304, 295, 428, 3089, 3096, 393, 360, 2035, 365, 309, 370, 436, 727, 498, 436, 1415, 281, 4674, 264, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07072950845741365, "compression_ratio": 1.7835051546391754, "no_caption_prob": 1.1125455785077065e-05}, {"id": 226, "seek": 140644, "start": 1406.44, "end": 1413.8, "text": " social social security number or the password or whatever so like i know that you can instead", "tokens": [50364, 2093, 2093, 3825, 1230, 420, 264, 11524, 420, 2035, 370, 411, 741, 458, 300, 291, 393, 2602, 50732, 50732, 295, 1419, 257, 732, 6798, 2445, 291, 727, 362, 257, 732, 276, 83, 79, 2058, 1429, 2158, 597, 576, 589, 51094, 51094, 457, 550, 7263, 14039, 291, 281, 512, 281, 512, 1412, 3877, 411, 498, 498, 309, 311, 257, 3997, 551, 51442, 51442, 550, 291, 393, 584, 1954, 731, 2232, 741, 478, 516, 281, 2058, 1429, 309, 382, 364, 2657, 689, 341, 2519, 307, 2058, 12340, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.04906584707538733, "compression_ratio": 1.7136150234741785, "no_caption_prob": 1.7777061657398008e-05}, {"id": 227, "seek": 140644, "start": 1413.8, "end": 1421.04, "text": " of having a two string function you could have a two htp encode value which would work", "tokens": [50364, 2093, 2093, 3825, 1230, 420, 264, 11524, 420, 2035, 370, 411, 741, 458, 300, 291, 393, 2602, 50732, 50732, 295, 1419, 257, 732, 6798, 2445, 291, 727, 362, 257, 732, 276, 83, 79, 2058, 1429, 2158, 597, 576, 589, 51094, 51094, 457, 550, 7263, 14039, 291, 281, 512, 281, 512, 1412, 3877, 411, 498, 498, 309, 311, 257, 3997, 551, 51442, 51442, 550, 291, 393, 584, 1954, 731, 2232, 741, 478, 516, 281, 2058, 1429, 309, 382, 364, 2657, 689, 341, 2519, 307, 2058, 12340, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.04906584707538733, "compression_ratio": 1.7136150234741785, "no_caption_prob": 1.7777061657398008e-05}, {"id": 228, "seek": 140644, "start": 1421.04, "end": 1428.0, "text": " but then potentially ties you to some to some data structure like if if it's a complex thing", "tokens": [50364, 2093, 2093, 3825, 1230, 420, 264, 11524, 420, 2035, 370, 411, 741, 458, 300, 291, 393, 2602, 50732, 50732, 295, 1419, 257, 732, 6798, 2445, 291, 727, 362, 257, 732, 276, 83, 79, 2058, 1429, 2158, 597, 576, 589, 51094, 51094, 457, 550, 7263, 14039, 291, 281, 512, 281, 512, 1412, 3877, 411, 498, 498, 309, 311, 257, 3997, 551, 51442, 51442, 550, 291, 393, 584, 1954, 731, 2232, 741, 478, 516, 281, 2058, 1429, 309, 382, 364, 2657, 689, 341, 2519, 307, 2058, 12340, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.04906584707538733, "compression_ratio": 1.7136150234741785, "no_caption_prob": 1.7777061657398008e-05}, {"id": 229, "seek": 140644, "start": 1428.0, "end": 1434.8, "text": " then you can say oh well uh i'm going to encode it as an object where this field is encoded", "tokens": [50364, 2093, 2093, 3825, 1230, 420, 264, 11524, 420, 2035, 370, 411, 741, 458, 300, 291, 393, 2602, 50732, 50732, 295, 1419, 257, 732, 6798, 2445, 291, 727, 362, 257, 732, 276, 83, 79, 2058, 1429, 2158, 597, 576, 589, 51094, 51094, 457, 550, 7263, 14039, 291, 281, 512, 281, 512, 1412, 3877, 411, 498, 498, 309, 311, 257, 3997, 551, 51442, 51442, 550, 291, 393, 584, 1954, 731, 2232, 741, 478, 516, 281, 2058, 1429, 309, 382, 364, 2657, 689, 341, 2519, 307, 2058, 12340, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.04906584707538733, "compression_ratio": 1.7136150234741785, "no_caption_prob": 1.7777061657398008e-05}, {"id": 230, "seek": 143480, "start": 1434.8, "end": 1440.3999999999999, "text": " as under this field and this field is encoded in this field in this format and that would", "tokens": [50364, 382, 833, 341, 2519, 293, 341, 2519, 307, 2058, 12340, 294, 341, 2519, 294, 341, 7877, 293, 300, 576, 50644, 50644, 589, 294, 472, 1389, 457, 406, 294, 1071, 293, 370, 1338, 291, 434, 2139, 32405, 1803, 493, 281, 257, 50960, 50960, 2685, 7877, 257, 2685, 764, 1389, 420, 291, 434, 8293, 264, 2302, 3089, 3096, 281, 281, 3346, 438, 51394, 51394, 428, 8046, 42687, 2010, 420, 291, 483, 437, 741, 914, 558, 1338, 572, 300, 311, 257, 588, 665, 935, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.06700698067160214, "compression_ratio": 1.8102564102564103, "no_caption_prob": 1.983284528250806e-05}, {"id": 231, "seek": 143480, "start": 1440.3999999999999, "end": 1446.72, "text": " work in one case but not in another and so yeah you're either tying yourself up to a", "tokens": [50364, 382, 833, 341, 2519, 293, 341, 2519, 307, 2058, 12340, 294, 341, 2519, 294, 341, 7877, 293, 300, 576, 50644, 50644, 589, 294, 472, 1389, 457, 406, 294, 1071, 293, 370, 1338, 291, 434, 2139, 32405, 1803, 493, 281, 257, 50960, 50960, 2685, 7877, 257, 2685, 764, 1389, 420, 291, 434, 8293, 264, 2302, 3089, 3096, 281, 281, 3346, 438, 51394, 51394, 428, 8046, 42687, 2010, 420, 291, 483, 437, 741, 914, 558, 1338, 572, 300, 311, 257, 588, 665, 935, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.06700698067160214, "compression_ratio": 1.8102564102564103, "no_caption_prob": 1.983284528250806e-05}, {"id": 232, "seek": 143480, "start": 1446.72, "end": 1455.3999999999999, "text": " specific format a specific use case or you're allowing the entire code base to to misuse", "tokens": [50364, 382, 833, 341, 2519, 293, 341, 2519, 307, 2058, 12340, 294, 341, 2519, 294, 341, 7877, 293, 300, 576, 50644, 50644, 589, 294, 472, 1389, 457, 406, 294, 1071, 293, 370, 1338, 291, 434, 2139, 32405, 1803, 493, 281, 257, 50960, 50960, 2685, 7877, 257, 2685, 764, 1389, 420, 291, 434, 8293, 264, 2302, 3089, 3096, 281, 281, 3346, 438, 51394, 51394, 428, 8046, 42687, 2010, 420, 291, 483, 437, 741, 914, 558, 1338, 572, 300, 311, 257, 588, 665, 935, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.06700698067160214, "compression_ratio": 1.8102564102564103, "no_caption_prob": 1.983284528250806e-05}, {"id": 233, "seek": 143480, "start": 1455.3999999999999, "end": 1461.98, "text": " your previously opaque type or you get what i mean right yeah no that's a very good point", "tokens": [50364, 382, 833, 341, 2519, 293, 341, 2519, 307, 2058, 12340, 294, 341, 2519, 294, 341, 7877, 293, 300, 576, 50644, 50644, 589, 294, 472, 1389, 457, 406, 294, 1071, 293, 370, 1338, 291, 434, 2139, 32405, 1803, 493, 281, 257, 50960, 50960, 2685, 7877, 257, 2685, 764, 1389, 420, 291, 434, 8293, 264, 2302, 3089, 3096, 281, 281, 3346, 438, 51394, 51394, 428, 8046, 42687, 2010, 420, 291, 483, 437, 741, 914, 558, 1338, 572, 300, 311, 257, 588, 665, 935, 51723, 51723], "temperature": 0.0, "avg_logprob": -0.06700698067160214, "compression_ratio": 1.8102564102564103, "no_caption_prob": 1.983284528250806e-05}, {"id": 234, "seek": 146198, "start": 1461.98, "end": 1469.92, "text": " so i um i actually wrote a post to my mailing list a while back on this but i um and i didn't", "tokens": [50364, 370, 741, 1105, 741, 767, 4114, 257, 2183, 281, 452, 41612, 1329, 257, 1339, 646, 322, 341, 457, 741, 1105, 293, 741, 994, 380, 50761, 50761, 11374, 309, 322, 452, 35759, 6968, 457, 741, 486, 1105, 949, 321, 4374, 341, 3500, 741, 486, 11374, 51104, 51104, 341, 2183, 456, 293, 741, 603, 4090, 257, 2113, 294, 264, 855, 5570, 457, 309, 311, 466, 370, 741, 741, 362, 51363, 51363, 257, 6968, 2183, 466, 8729, 8539, 43153, 293, 741, 362, 257, 6968, 2183, 466, 11043, 8539, 43153, 293, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.08426838654738206, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.2124671886558644e-05}, {"id": 235, "seek": 146198, "start": 1469.92, "end": 1476.78, "text": " publish it on my incremental blog but i will um before we release this episode i will publish", "tokens": [50364, 370, 741, 1105, 741, 767, 4114, 257, 2183, 281, 452, 41612, 1329, 257, 1339, 646, 322, 341, 457, 741, 1105, 293, 741, 994, 380, 50761, 50761, 11374, 309, 322, 452, 35759, 6968, 457, 741, 486, 1105, 949, 321, 4374, 341, 3500, 741, 486, 11374, 51104, 51104, 341, 2183, 456, 293, 741, 603, 4090, 257, 2113, 294, 264, 855, 5570, 457, 309, 311, 466, 370, 741, 741, 362, 51363, 51363, 257, 6968, 2183, 466, 8729, 8539, 43153, 293, 741, 362, 257, 6968, 2183, 466, 11043, 8539, 43153, 293, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.08426838654738206, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.2124671886558644e-05}, {"id": 236, "seek": 146198, "start": 1476.78, "end": 1481.96, "text": " this post there and i'll include a link in the show notes but it's about so i i have", "tokens": [50364, 370, 741, 1105, 741, 767, 4114, 257, 2183, 281, 452, 41612, 1329, 257, 1339, 646, 322, 341, 457, 741, 1105, 293, 741, 994, 380, 50761, 50761, 11374, 309, 322, 452, 35759, 6968, 457, 741, 486, 1105, 949, 321, 4374, 341, 3500, 741, 486, 11374, 51104, 51104, 341, 2183, 456, 293, 741, 603, 4090, 257, 2113, 294, 264, 855, 5570, 457, 309, 311, 466, 370, 741, 741, 362, 51363, 51363, 257, 6968, 2183, 466, 8729, 8539, 43153, 293, 741, 362, 257, 6968, 2183, 466, 11043, 8539, 43153, 293, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.08426838654738206, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.2124671886558644e-05}, {"id": 237, "seek": 146198, "start": 1481.96, "end": 1488.76, "text": " a blog post about entry gatekeepers and i have a blog post about exit gatekeepers and", "tokens": [50364, 370, 741, 1105, 741, 767, 4114, 257, 2183, 281, 452, 41612, 1329, 257, 1339, 646, 322, 341, 457, 741, 1105, 293, 741, 994, 380, 50761, 50761, 11374, 309, 322, 452, 35759, 6968, 457, 741, 486, 1105, 949, 321, 4374, 341, 3500, 741, 486, 11374, 51104, 51104, 341, 2183, 456, 293, 741, 603, 4090, 257, 2113, 294, 264, 855, 5570, 457, 309, 311, 466, 370, 741, 741, 362, 51363, 51363, 257, 6968, 2183, 466, 8729, 8539, 43153, 293, 741, 362, 257, 6968, 2183, 466, 11043, 8539, 43153, 293, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.08426838654738206, "compression_ratio": 1.8358974358974358, "no_caption_prob": 2.2124671886558644e-05}, {"id": 238, "seek": 148876, "start": 1488.76, "end": 1494.56, "text": " the exit gatekeepers one is sort of these like exactly what you're describing of like", "tokens": [50364, 264, 11043, 8539, 43153, 472, 307, 1333, 295, 613, 411, 2293, 437, 291, 434, 16141, 295, 411, 50654, 50654, 577, 360, 291, 652, 988, 300, 291, 434, 1228, 341, 341, 42687, 2010, 294, 264, 14721, 636, 293, 577, 51032, 51032, 360, 291, 7019, 3469, 291, 458, 293, 293, 1936, 14853, 4007, 3469, 1954, 1309, 291, 1338, 14853, 4007, 3469, 51336, 51336, 293, 370, 456, 366, 732, 4881, 295, 341, 11464, 264, 7019, 2440, 644, 456, 366, 7512, 411, 51600, 51600, 4188, 379, 12678, 257, 2010, 562, 291, 29562, 309, 293, 721, 411, 300, 558, 729, 366, 512, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.0607845948474242, "compression_ratio": 1.876068376068376, "no_caption_prob": 9.368432984047104e-06}, {"id": 239, "seek": 148876, "start": 1494.56, "end": 1502.12, "text": " how do you make sure that you're using this this opaque type in the desired way and how", "tokens": [50364, 264, 11043, 8539, 43153, 472, 307, 1333, 295, 613, 411, 2293, 437, 291, 434, 16141, 295, 411, 50654, 50654, 577, 360, 291, 652, 988, 300, 291, 434, 1228, 341, 341, 42687, 2010, 294, 264, 14721, 636, 293, 577, 51032, 51032, 360, 291, 7019, 3469, 291, 458, 293, 293, 1936, 14853, 4007, 3469, 1954, 1309, 291, 1338, 14853, 4007, 3469, 51336, 51336, 293, 370, 456, 366, 732, 4881, 295, 341, 11464, 264, 7019, 2440, 644, 456, 366, 7512, 411, 51600, 51600, 4188, 379, 12678, 257, 2010, 562, 291, 29562, 309, 293, 721, 411, 300, 558, 729, 366, 512, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.0607845948474242, "compression_ratio": 1.876068376068376, "no_caption_prob": 9.368432984047104e-06}, {"id": 240, "seek": 148876, "start": 1502.12, "end": 1508.2, "text": " do you wrap late you know and and basically unwrap late oh thank you yeah unwrap late", "tokens": [50364, 264, 11043, 8539, 43153, 472, 307, 1333, 295, 613, 411, 2293, 437, 291, 434, 16141, 295, 411, 50654, 50654, 577, 360, 291, 652, 988, 300, 291, 434, 1228, 341, 341, 42687, 2010, 294, 264, 14721, 636, 293, 577, 51032, 51032, 360, 291, 7019, 3469, 291, 458, 293, 293, 1936, 14853, 4007, 3469, 1954, 1309, 291, 1338, 14853, 4007, 3469, 51336, 51336, 293, 370, 456, 366, 732, 4881, 295, 341, 11464, 264, 7019, 2440, 644, 456, 366, 7512, 411, 51600, 51600, 4188, 379, 12678, 257, 2010, 562, 291, 29562, 309, 293, 721, 411, 300, 558, 729, 366, 512, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.0607845948474242, "compression_ratio": 1.876068376068376, "no_caption_prob": 9.368432984047104e-06}, {"id": 241, "seek": 148876, "start": 1508.2, "end": 1513.48, "text": " and so there are two sides of this coin the wrap early part there are techniques like", "tokens": [50364, 264, 11043, 8539, 43153, 472, 307, 1333, 295, 613, 411, 2293, 437, 291, 434, 16141, 295, 411, 50654, 50654, 577, 360, 291, 652, 988, 300, 291, 434, 1228, 341, 341, 42687, 2010, 294, 264, 14721, 636, 293, 577, 51032, 51032, 360, 291, 7019, 3469, 291, 458, 293, 293, 1936, 14853, 4007, 3469, 1954, 1309, 291, 1338, 14853, 4007, 3469, 51336, 51336, 293, 370, 456, 366, 732, 4881, 295, 341, 11464, 264, 7019, 2440, 644, 456, 366, 7512, 411, 51600, 51600, 4188, 379, 12678, 257, 2010, 562, 291, 29562, 309, 293, 721, 411, 300, 558, 729, 366, 512, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.0607845948474242, "compression_ratio": 1.876068376068376, "no_caption_prob": 9.368432984047104e-06}, {"id": 242, "seek": 148876, "start": 1513.48, "end": 1518.2, "text": " conditionally returning a type when you validate it and things like that right those are some", "tokens": [50364, 264, 11043, 8539, 43153, 472, 307, 1333, 295, 613, 411, 2293, 437, 291, 434, 16141, 295, 411, 50654, 50654, 577, 360, 291, 652, 988, 300, 291, 434, 1228, 341, 341, 42687, 2010, 294, 264, 14721, 636, 293, 577, 51032, 51032, 360, 291, 7019, 3469, 291, 458, 293, 293, 1936, 14853, 4007, 3469, 1954, 1309, 291, 1338, 14853, 4007, 3469, 51336, 51336, 293, 370, 456, 366, 732, 4881, 295, 341, 11464, 264, 7019, 2440, 644, 456, 366, 7512, 411, 51600, 51600, 4188, 379, 12678, 257, 2010, 562, 291, 29562, 309, 293, 721, 411, 300, 558, 729, 366, 512, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.0607845948474242, "compression_ratio": 1.876068376068376, "no_caption_prob": 9.368432984047104e-06}, {"id": 243, "seek": 151820, "start": 1518.2, "end": 1526.3600000000001, "text": " tools you use to to wrap early and also you can define you can define ways of of retrieving", "tokens": [50364, 3873, 291, 764, 281, 281, 7019, 2440, 293, 611, 291, 393, 6964, 291, 393, 6964, 2098, 295, 295, 19817, 798, 50772, 50772, 264, 551, 498, 291, 434, 1105, 291, 458, 291, 727, 754, 2232, 6964, 257, 1105, 257, 5622, 281, 483, 428, 51168, 51168, 291, 458, 428, 2105, 14862, 420, 746, 411, 300, 498, 498, 291, 393, 360, 300, 498, 291, 393, 411, 51441, 51441, 7372, 309, 493, 370, 300, 456, 311, 341, 551, 300, 1709, 293, 2170, 341, 2158, 293, 291, 500, 380, 362, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.060616573590910834, "compression_ratio": 1.877659574468085, "no_caption_prob": 1.095286279451102e-05}, {"id": 244, "seek": 151820, "start": 1526.3600000000001, "end": 1534.28, "text": " the thing if you're um you know you could even uh define a um a command to get your", "tokens": [50364, 3873, 291, 764, 281, 281, 7019, 2440, 293, 611, 291, 393, 6964, 291, 393, 6964, 2098, 295, 295, 19817, 798, 50772, 50772, 264, 551, 498, 291, 434, 1105, 291, 458, 291, 727, 754, 2232, 6964, 257, 1105, 257, 5622, 281, 483, 428, 51168, 51168, 291, 458, 428, 2105, 14862, 420, 746, 411, 300, 498, 498, 291, 393, 360, 300, 498, 291, 393, 411, 51441, 51441, 7372, 309, 493, 370, 300, 456, 311, 341, 551, 300, 1709, 293, 2170, 341, 2158, 293, 291, 500, 380, 362, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.060616573590910834, "compression_ratio": 1.877659574468085, "no_caption_prob": 1.095286279451102e-05}, {"id": 245, "seek": 151820, "start": 1534.28, "end": 1539.74, "text": " you know your access token or something like that if if you can do that if you can like", "tokens": [50364, 3873, 291, 764, 281, 281, 7019, 2440, 293, 611, 291, 393, 6964, 291, 393, 6964, 2098, 295, 295, 19817, 798, 50772, 50772, 264, 551, 498, 291, 434, 1105, 291, 458, 291, 727, 754, 2232, 6964, 257, 1105, 257, 5622, 281, 483, 428, 51168, 51168, 291, 458, 428, 2105, 14862, 420, 746, 411, 300, 498, 498, 291, 393, 360, 300, 498, 291, 393, 411, 51441, 51441, 7372, 309, 493, 370, 300, 456, 311, 341, 551, 300, 1709, 293, 2170, 341, 2158, 293, 291, 500, 380, 362, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.060616573590910834, "compression_ratio": 1.877659574468085, "no_caption_prob": 1.095286279451102e-05}, {"id": 246, "seek": 151820, "start": 1539.74, "end": 1544.94, "text": " package it up so that there's this thing that goes and gets this value and you don't have", "tokens": [50364, 3873, 291, 764, 281, 281, 7019, 2440, 293, 611, 291, 393, 6964, 291, 393, 6964, 2098, 295, 295, 19817, 798, 50772, 50772, 264, 551, 498, 291, 434, 1105, 291, 458, 291, 727, 754, 2232, 6964, 257, 1105, 257, 5622, 281, 483, 428, 51168, 51168, 291, 458, 428, 2105, 14862, 420, 746, 411, 300, 498, 498, 291, 393, 360, 300, 498, 291, 393, 411, 51441, 51441, 7372, 309, 493, 370, 300, 456, 311, 341, 551, 300, 1709, 293, 2170, 341, 2158, 293, 291, 500, 380, 362, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.060616573590910834, "compression_ratio": 1.877659574468085, "no_caption_prob": 1.095286279451102e-05}, {"id": 247, "seek": 154494, "start": 1544.94, "end": 1549.68, "text": " to deal with primitive low level details like json decoding and things like that you can", "tokens": [50364, 281, 2028, 365, 28540, 2295, 1496, 4365, 411, 361, 3015, 979, 8616, 293, 721, 411, 300, 291, 393, 50601, 50601, 1286, 439, 295, 300, 666, 428, 10088, 689, 291, 362, 300, 42687, 2010, 300, 311, 7157, 457, 370, 50865, 50865, 1936, 437, 741, 853, 281, 360, 307, 741, 853, 281, 1286, 264, 9952, 337, 1293, 21993, 293, 14853, 424, 3759, 51159, 51159, 666, 300, 42687, 2010, 10088, 370, 370, 411, 294, 264, 1365, 295, 257, 2093, 3825, 1230, 411, 51487, 51487, 291, 645, 1566, 411, 498, 291, 976, 257, 732, 6798, 291, 1333, 295, 366, 1455, 309, 588, 37900, 281, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05109548568725586, "compression_ratio": 1.8403361344537814, "no_caption_prob": 1.3211571058491245e-05}, {"id": 248, "seek": 154494, "start": 1549.68, "end": 1554.96, "text": " move all of that into your module where you have that opaque type that's ideal but so", "tokens": [50364, 281, 2028, 365, 28540, 2295, 1496, 4365, 411, 361, 3015, 979, 8616, 293, 721, 411, 300, 291, 393, 50601, 50601, 1286, 439, 295, 300, 666, 428, 10088, 689, 291, 362, 300, 42687, 2010, 300, 311, 7157, 457, 370, 50865, 50865, 1936, 437, 741, 853, 281, 360, 307, 741, 853, 281, 1286, 264, 9952, 337, 1293, 21993, 293, 14853, 424, 3759, 51159, 51159, 666, 300, 42687, 2010, 10088, 370, 370, 411, 294, 264, 1365, 295, 257, 2093, 3825, 1230, 411, 51487, 51487, 291, 645, 1566, 411, 498, 291, 976, 257, 732, 6798, 291, 1333, 295, 366, 1455, 309, 588, 37900, 281, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05109548568725586, "compression_ratio": 1.8403361344537814, "no_caption_prob": 1.3211571058491245e-05}, {"id": 249, "seek": 154494, "start": 1554.96, "end": 1560.8400000000001, "text": " basically what i try to do is i try to move the logic for both wrapping and unwrapping", "tokens": [50364, 281, 2028, 365, 28540, 2295, 1496, 4365, 411, 361, 3015, 979, 8616, 293, 721, 411, 300, 291, 393, 50601, 50601, 1286, 439, 295, 300, 666, 428, 10088, 689, 291, 362, 300, 42687, 2010, 300, 311, 7157, 457, 370, 50865, 50865, 1936, 437, 741, 853, 281, 360, 307, 741, 853, 281, 1286, 264, 9952, 337, 1293, 21993, 293, 14853, 424, 3759, 51159, 51159, 666, 300, 42687, 2010, 10088, 370, 370, 411, 294, 264, 1365, 295, 257, 2093, 3825, 1230, 411, 51487, 51487, 291, 645, 1566, 411, 498, 291, 976, 257, 732, 6798, 291, 1333, 295, 366, 1455, 309, 588, 37900, 281, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05109548568725586, "compression_ratio": 1.8403361344537814, "no_caption_prob": 1.3211571058491245e-05}, {"id": 250, "seek": 154494, "start": 1560.8400000000001, "end": 1567.4, "text": " into that opaque type module so so like in the example of a social security number like", "tokens": [50364, 281, 2028, 365, 28540, 2295, 1496, 4365, 411, 361, 3015, 979, 8616, 293, 721, 411, 300, 291, 393, 50601, 50601, 1286, 439, 295, 300, 666, 428, 10088, 689, 291, 362, 300, 42687, 2010, 300, 311, 7157, 457, 370, 50865, 50865, 1936, 437, 741, 853, 281, 360, 307, 741, 853, 281, 1286, 264, 9952, 337, 1293, 21993, 293, 14853, 424, 3759, 51159, 51159, 666, 300, 42687, 2010, 10088, 370, 370, 411, 294, 264, 1365, 295, 257, 2093, 3825, 1230, 411, 51487, 51487, 291, 645, 1566, 411, 498, 291, 976, 257, 732, 6798, 291, 1333, 295, 366, 1455, 309, 588, 37900, 281, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05109548568725586, "compression_ratio": 1.8403361344537814, "no_caption_prob": 1.3211571058491245e-05}, {"id": 251, "seek": 154494, "start": 1567.4, "end": 1573.74, "text": " you were saying like if you give a two string you sort of are making it very tempting to", "tokens": [50364, 281, 2028, 365, 28540, 2295, 1496, 4365, 411, 361, 3015, 979, 8616, 293, 721, 411, 300, 291, 393, 50601, 50601, 1286, 439, 295, 300, 666, 428, 10088, 689, 291, 362, 300, 42687, 2010, 300, 311, 7157, 457, 370, 50865, 50865, 1936, 437, 741, 853, 281, 360, 307, 741, 853, 281, 1286, 264, 9952, 337, 1293, 21993, 293, 14853, 424, 3759, 51159, 51159, 666, 300, 42687, 2010, 10088, 370, 370, 411, 294, 264, 1365, 295, 257, 2093, 3825, 1230, 411, 51487, 51487, 291, 645, 1566, 411, 498, 291, 976, 257, 732, 6798, 291, 1333, 295, 366, 1455, 309, 588, 37900, 281, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05109548568725586, "compression_ratio": 1.8403361344537814, "no_caption_prob": 1.3211571058491245e-05}, {"id": 252, "seek": 157374, "start": 1573.74, "end": 1581.2, "text": " unwrap early and to just then go and lose those guarantees and you know similarly if", "tokens": [50364, 14853, 4007, 2440, 293, 281, 445, 550, 352, 293, 3624, 729, 32567, 293, 291, 458, 14138, 498, 50737, 50737, 291, 362, 257, 490, 6798, 300, 1333, 295, 17301, 551, 300, 321, 366, 1333, 295, 1417, 466, 411, 51062, 51062, 291, 458, 411, 741, 390, 1566, 365, 3467, 5944, 291, 393, 445, 4193, 257, 2158, 281, 341, 2010, 498, 51331, 51331, 291, 362, 490, 6798, 309, 311, 733, 295, 2531, 281, 884, 300, 291, 914, 257, 490, 6798, 300, 51547, 51547], "temperature": 0.0, "avg_logprob": -0.07710779003980683, "compression_ratio": 1.910614525139665, "no_caption_prob": 5.682370556314709e-06}, {"id": 253, "seek": 157374, "start": 1581.2, "end": 1587.7, "text": " you have a from string that sort of casting thing that we are sort of talking about like", "tokens": [50364, 14853, 4007, 2440, 293, 281, 445, 550, 352, 293, 3624, 729, 32567, 293, 291, 458, 14138, 498, 50737, 50737, 291, 362, 257, 490, 6798, 300, 1333, 295, 17301, 551, 300, 321, 366, 1333, 295, 1417, 466, 411, 51062, 51062, 291, 458, 411, 741, 390, 1566, 365, 3467, 5944, 291, 393, 445, 4193, 257, 2158, 281, 341, 2010, 498, 51331, 51331, 291, 362, 490, 6798, 309, 311, 733, 295, 2531, 281, 884, 300, 291, 914, 257, 490, 6798, 300, 51547, 51547], "temperature": 0.0, "avg_logprob": -0.07710779003980683, "compression_ratio": 1.910614525139665, "no_caption_prob": 5.682370556314709e-06}, {"id": 254, "seek": 157374, "start": 1587.7, "end": 1593.08, "text": " you know like i was saying with typescript you can just cast a value to this type if", "tokens": [50364, 14853, 4007, 2440, 293, 281, 445, 550, 352, 293, 3624, 729, 32567, 293, 291, 458, 14138, 498, 50737, 50737, 291, 362, 257, 490, 6798, 300, 1333, 295, 17301, 551, 300, 321, 366, 1333, 295, 1417, 466, 411, 51062, 51062, 291, 458, 411, 741, 390, 1566, 365, 3467, 5944, 291, 393, 445, 4193, 257, 2158, 281, 341, 2010, 498, 51331, 51331, 291, 362, 490, 6798, 309, 311, 733, 295, 2531, 281, 884, 300, 291, 914, 257, 490, 6798, 300, 51547, 51547], "temperature": 0.0, "avg_logprob": -0.07710779003980683, "compression_ratio": 1.910614525139665, "no_caption_prob": 5.682370556314709e-06}, {"id": 255, "seek": 157374, "start": 1593.08, "end": 1597.4, "text": " you have from string it's kind of similar to doing that you mean a from string that", "tokens": [50364, 14853, 4007, 2440, 293, 281, 445, 550, 352, 293, 3624, 729, 32567, 293, 291, 458, 14138, 498, 50737, 50737, 291, 362, 257, 490, 6798, 300, 1333, 295, 17301, 551, 300, 321, 366, 1333, 295, 1417, 466, 411, 51062, 51062, 291, 458, 411, 741, 390, 1566, 365, 3467, 5944, 291, 393, 445, 4193, 257, 2158, 281, 341, 2010, 498, 51331, 51331, 291, 362, 490, 6798, 309, 311, 733, 295, 2531, 281, 884, 300, 291, 914, 257, 490, 6798, 300, 51547, 51547], "temperature": 0.0, "avg_logprob": -0.07710779003980683, "compression_ratio": 1.910614525139665, "no_caption_prob": 5.682370556314709e-06}, {"id": 256, "seek": 159740, "start": 1597.4, "end": 1604.88, "text": " doesn't return a maybe opaque type or that doesn't do any validation good point it depends", "tokens": [50364, 1177, 380, 2736, 257, 1310, 42687, 2010, 420, 300, 1177, 380, 360, 604, 24071, 665, 935, 309, 5946, 50738, 50738, 370, 309, 5946, 322, 437, 264, 24071, 307, 498, 264, 24071, 307, 257, 30351, 550, 291, 434, 558, 50987, 50987, 1419, 257, 490, 6798, 337, 257, 30351, 307, 3879, 2489, 570, 498, 291, 434, 1566, 30351, 8855, 51314, 51314, 300, 341, 307, 257, 7363, 30351, 741, 500, 380, 1127, 689, 309, 1361, 490, 741, 445, 1127, 300, 309, 311, 7363, 51530, 51530, 550, 291, 434, 558, 490, 6798, 309, 311, 3879, 2489, 382, 938, 382, 309, 4188, 379, 11247, 264, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.0743746436559237, "compression_ratio": 2.0495495495495497, "no_caption_prob": 4.26457918365486e-05}, {"id": 257, "seek": 159740, "start": 1604.88, "end": 1609.8600000000001, "text": " so it depends on what the validation is if the validation is a username then you're right", "tokens": [50364, 1177, 380, 2736, 257, 1310, 42687, 2010, 420, 300, 1177, 380, 360, 604, 24071, 665, 935, 309, 5946, 50738, 50738, 370, 309, 5946, 322, 437, 264, 24071, 307, 498, 264, 24071, 307, 257, 30351, 550, 291, 434, 558, 50987, 50987, 1419, 257, 490, 6798, 337, 257, 30351, 307, 3879, 2489, 570, 498, 291, 434, 1566, 30351, 8855, 51314, 51314, 300, 341, 307, 257, 7363, 30351, 741, 500, 380, 1127, 689, 309, 1361, 490, 741, 445, 1127, 300, 309, 311, 7363, 51530, 51530, 550, 291, 434, 558, 490, 6798, 309, 311, 3879, 2489, 382, 938, 382, 309, 4188, 379, 11247, 264, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.0743746436559237, "compression_ratio": 2.0495495495495497, "no_caption_prob": 4.26457918365486e-05}, {"id": 258, "seek": 159740, "start": 1609.8600000000001, "end": 1616.4, "text": " having a from string for a username is totally fine because if you're saying username represents", "tokens": [50364, 1177, 380, 2736, 257, 1310, 42687, 2010, 420, 300, 1177, 380, 360, 604, 24071, 665, 935, 309, 5946, 50738, 50738, 370, 309, 5946, 322, 437, 264, 24071, 307, 498, 264, 24071, 307, 257, 30351, 550, 291, 434, 558, 50987, 50987, 1419, 257, 490, 6798, 337, 257, 30351, 307, 3879, 2489, 570, 498, 291, 434, 1566, 30351, 8855, 51314, 51314, 300, 341, 307, 257, 7363, 30351, 741, 500, 380, 1127, 689, 309, 1361, 490, 741, 445, 1127, 300, 309, 311, 7363, 51530, 51530, 550, 291, 434, 558, 490, 6798, 309, 311, 3879, 2489, 382, 938, 382, 309, 4188, 379, 11247, 264, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.0743746436559237, "compression_ratio": 2.0495495495495497, "no_caption_prob": 4.26457918365486e-05}, {"id": 259, "seek": 159740, "start": 1616.4, "end": 1620.72, "text": " that this is a valid username i don't care where it came from i just care that it's valid", "tokens": [50364, 1177, 380, 2736, 257, 1310, 42687, 2010, 420, 300, 1177, 380, 360, 604, 24071, 665, 935, 309, 5946, 50738, 50738, 370, 309, 5946, 322, 437, 264, 24071, 307, 498, 264, 24071, 307, 257, 30351, 550, 291, 434, 558, 50987, 50987, 1419, 257, 490, 6798, 337, 257, 30351, 307, 3879, 2489, 570, 498, 291, 434, 1566, 30351, 8855, 51314, 51314, 300, 341, 307, 257, 7363, 30351, 741, 500, 380, 1127, 689, 309, 1361, 490, 741, 445, 1127, 300, 309, 311, 7363, 51530, 51530, 550, 291, 434, 558, 490, 6798, 309, 311, 3879, 2489, 382, 938, 382, 309, 4188, 379, 11247, 264, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.0743746436559237, "compression_ratio": 2.0495495495495497, "no_caption_prob": 4.26457918365486e-05}, {"id": 260, "seek": 159740, "start": 1620.72, "end": 1624.3400000000001, "text": " then you're right from string it's totally fine as long as it conditionally returns the", "tokens": [50364, 1177, 380, 2736, 257, 1310, 42687, 2010, 420, 300, 1177, 380, 360, 604, 24071, 665, 935, 309, 5946, 50738, 50738, 370, 309, 5946, 322, 437, 264, 24071, 307, 498, 264, 24071, 307, 257, 30351, 550, 291, 434, 558, 50987, 50987, 1419, 257, 490, 6798, 337, 257, 30351, 307, 3879, 2489, 570, 498, 291, 434, 1566, 30351, 8855, 51314, 51314, 300, 341, 307, 257, 7363, 30351, 741, 500, 380, 1127, 689, 309, 1361, 490, 741, 445, 1127, 300, 309, 311, 7363, 51530, 51530, 550, 291, 434, 558, 490, 6798, 309, 311, 3879, 2489, 382, 938, 382, 309, 4188, 379, 11247, 264, 51711, 51711], "temperature": 0.0, "avg_logprob": -0.0743746436559237, "compression_ratio": 2.0495495495495497, "no_caption_prob": 4.26457918365486e-05}, {"id": 261, "seek": 162434, "start": 1624.34, "end": 1631.3999999999999, "text": " thing where it matters is if you have from string for a place that represents what the", "tokens": [50364, 551, 689, 309, 7001, 307, 498, 291, 362, 490, 6798, 337, 257, 1081, 300, 8855, 437, 264, 50717, 50717, 551, 307, 370, 411, 364, 3796, 2985, 300, 767, 307, 257, 7363, 3796, 2985, 420, 291, 458, 364, 26643, 51177, 51177, 14862, 300, 767, 307, 257, 589, 1364, 26643, 14862, 8855, 300, 309, 311, 406, 445, 411, 264, 51485, 51485, 558, 1230, 295, 4342, 457, 309, 767, 307, 472, 309, 1361, 490, 341, 1081, 1338, 291, 291, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.09162134528160096, "compression_ratio": 1.898477157360406, "no_caption_prob": 1.7502608898212202e-05}, {"id": 262, "seek": 162434, "start": 1631.3999999999999, "end": 1640.6, "text": " thing is so like an email address that actually is a valid email address or you know an authentication", "tokens": [50364, 551, 689, 309, 7001, 307, 498, 291, 362, 490, 6798, 337, 257, 1081, 300, 8855, 437, 264, 50717, 50717, 551, 307, 370, 411, 364, 3796, 2985, 300, 767, 307, 257, 7363, 3796, 2985, 420, 291, 458, 364, 26643, 51177, 51177, 14862, 300, 767, 307, 257, 589, 1364, 26643, 14862, 8855, 300, 309, 311, 406, 445, 411, 264, 51485, 51485, 558, 1230, 295, 4342, 457, 309, 767, 307, 472, 309, 1361, 490, 341, 1081, 1338, 291, 291, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.09162134528160096, "compression_ratio": 1.898477157360406, "no_caption_prob": 1.7502608898212202e-05}, {"id": 263, "seek": 162434, "start": 1640.6, "end": 1646.76, "text": " token that actually is a work working authentication token represents that it's not just like the", "tokens": [50364, 551, 689, 309, 7001, 307, 498, 291, 362, 490, 6798, 337, 257, 1081, 300, 8855, 437, 264, 50717, 50717, 551, 307, 370, 411, 364, 3796, 2985, 300, 767, 307, 257, 7363, 3796, 2985, 420, 291, 458, 364, 26643, 51177, 51177, 14862, 300, 767, 307, 257, 589, 1364, 26643, 14862, 8855, 300, 309, 311, 406, 445, 411, 264, 51485, 51485, 558, 1230, 295, 4342, 457, 309, 767, 307, 472, 309, 1361, 490, 341, 1081, 1338, 291, 291, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.09162134528160096, "compression_ratio": 1.898477157360406, "no_caption_prob": 1.7502608898212202e-05}, {"id": 264, "seek": 162434, "start": 1646.76, "end": 1652.0, "text": " right number of characters but it actually is one it came from this place yeah you you", "tokens": [50364, 551, 689, 309, 7001, 307, 498, 291, 362, 490, 6798, 337, 257, 1081, 300, 8855, 437, 264, 50717, 50717, 551, 307, 370, 411, 364, 3796, 2985, 300, 767, 307, 257, 7363, 3796, 2985, 420, 291, 458, 364, 26643, 51177, 51177, 14862, 300, 767, 307, 257, 589, 1364, 26643, 14862, 8855, 300, 309, 311, 406, 445, 411, 264, 51485, 51485, 558, 1230, 295, 4342, 457, 309, 767, 307, 472, 309, 1361, 490, 341, 1081, 1338, 291, 291, 51747, 51747], "temperature": 0.0, "avg_logprob": -0.09162134528160096, "compression_ratio": 1.898477157360406, "no_caption_prob": 1.7502608898212202e-05}, {"id": 265, "seek": 165200, "start": 1652.0, "end": 1658.16, "text": " know that it came from the server or something like that right from string doesn't tell you", "tokens": [50364, 458, 300, 309, 1361, 490, 264, 7154, 420, 746, 411, 300, 558, 490, 6798, 1177, 380, 980, 291, 50672, 50672, 689, 257, 551, 1361, 490, 370, 22915, 498, 264, 498, 264, 2010, 307, 3442, 281, 2906, 406, 445, 51018, 51018, 300, 341, 307, 257, 7363, 300, 341, 307, 1190, 807, 257, 24071, 498, 309, 311, 1190, 807, 24071, 51261, 51261, 490, 6798, 307, 869, 498, 309, 311, 1382, 281, 2906, 689, 257, 551, 1361, 490, 550, 291, 22915, 528, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.058655664145228374, "compression_ratio": 2.0335195530726256, "no_caption_prob": 4.936958248435985e-06}, {"id": 266, "seek": 165200, "start": 1658.16, "end": 1665.08, "text": " where a thing came from so ideally if the if the type is supposed to represent not just", "tokens": [50364, 458, 300, 309, 1361, 490, 264, 7154, 420, 746, 411, 300, 558, 490, 6798, 1177, 380, 980, 291, 50672, 50672, 689, 257, 551, 1361, 490, 370, 22915, 498, 264, 498, 264, 2010, 307, 3442, 281, 2906, 406, 445, 51018, 51018, 300, 341, 307, 257, 7363, 300, 341, 307, 1190, 807, 257, 24071, 498, 309, 311, 1190, 807, 24071, 51261, 51261, 490, 6798, 307, 869, 498, 309, 311, 1382, 281, 2906, 689, 257, 551, 1361, 490, 550, 291, 22915, 528, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.058655664145228374, "compression_ratio": 2.0335195530726256, "no_caption_prob": 4.936958248435985e-06}, {"id": 267, "seek": 165200, "start": 1665.08, "end": 1669.94, "text": " that this is a valid that this is run through a validation if it's run through validation", "tokens": [50364, 458, 300, 309, 1361, 490, 264, 7154, 420, 746, 411, 300, 558, 490, 6798, 1177, 380, 980, 291, 50672, 50672, 689, 257, 551, 1361, 490, 370, 22915, 498, 264, 498, 264, 2010, 307, 3442, 281, 2906, 406, 445, 51018, 51018, 300, 341, 307, 257, 7363, 300, 341, 307, 1190, 807, 257, 24071, 498, 309, 311, 1190, 807, 24071, 51261, 51261, 490, 6798, 307, 869, 498, 309, 311, 1382, 281, 2906, 689, 257, 551, 1361, 490, 550, 291, 22915, 528, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.058655664145228374, "compression_ratio": 2.0335195530726256, "no_caption_prob": 4.936958248435985e-06}, {"id": 268, "seek": 165200, "start": 1669.94, "end": 1677.0, "text": " from string is great if it's trying to represent where a thing came from then you ideally want", "tokens": [50364, 458, 300, 309, 1361, 490, 264, 7154, 420, 746, 411, 300, 558, 490, 6798, 1177, 380, 980, 291, 50672, 50672, 689, 257, 551, 1361, 490, 370, 22915, 498, 264, 498, 264, 2010, 307, 3442, 281, 2906, 406, 445, 51018, 51018, 300, 341, 307, 257, 7363, 300, 341, 307, 1190, 807, 257, 24071, 498, 309, 311, 1190, 807, 24071, 51261, 51261, 490, 6798, 307, 869, 498, 309, 311, 1382, 281, 2906, 689, 257, 551, 1361, 490, 550, 291, 22915, 528, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.058655664145228374, "compression_ratio": 2.0335195530726256, "no_caption_prob": 4.936958248435985e-06}, {"id": 269, "seek": 167700, "start": 1677.0, "end": 1683.68, "text": " to have the logic for going and getting that thing in the opaque types module because then", "tokens": [50364, 281, 362, 264, 9952, 337, 516, 293, 1242, 300, 551, 294, 264, 42687, 3467, 10088, 570, 550, 50698, 50698, 264, 787, 636, 291, 393, 483, 300, 551, 307, 538, 1228, 300, 3089, 300, 311, 9495, 490, 264, 42687, 50971, 50971, 2010, 1338, 370, 337, 472, 1365, 295, 300, 420, 264, 767, 264, 787, 1365, 741, 362, 337, 300, 51258, 51258, 307, 1228, 979, 378, 433, 293, 300, 311, 1669, 988, 300, 291, 300, 309, 1487, 490, 2139, 364, 33283, 5308, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.10642982664562407, "compression_ratio": 1.797979797979798, "no_caption_prob": 1.2805323422071524e-05}, {"id": 270, "seek": 167700, "start": 1683.68, "end": 1689.14, "text": " the only way you can get that thing is by using that code that's exposed from the opaque", "tokens": [50364, 281, 362, 264, 9952, 337, 516, 293, 1242, 300, 551, 294, 264, 42687, 3467, 10088, 570, 550, 50698, 50698, 264, 787, 636, 291, 393, 483, 300, 551, 307, 538, 1228, 300, 3089, 300, 311, 9495, 490, 264, 42687, 50971, 50971, 2010, 1338, 370, 337, 472, 1365, 295, 300, 420, 264, 767, 264, 787, 1365, 741, 362, 337, 300, 51258, 51258, 307, 1228, 979, 378, 433, 293, 300, 311, 1669, 988, 300, 291, 300, 309, 1487, 490, 2139, 364, 33283, 5308, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.10642982664562407, "compression_ratio": 1.797979797979798, "no_caption_prob": 1.2805323422071524e-05}, {"id": 271, "seek": 167700, "start": 1689.14, "end": 1694.88, "text": " type yeah so for one example of that or the actually the only example i have for that", "tokens": [50364, 281, 362, 264, 9952, 337, 516, 293, 1242, 300, 551, 294, 264, 42687, 3467, 10088, 570, 550, 50698, 50698, 264, 787, 636, 291, 393, 483, 300, 551, 307, 538, 1228, 300, 3089, 300, 311, 9495, 490, 264, 42687, 50971, 50971, 2010, 1338, 370, 337, 472, 1365, 295, 300, 420, 264, 767, 264, 787, 1365, 741, 362, 337, 300, 51258, 51258, 307, 1228, 979, 378, 433, 293, 300, 311, 1669, 988, 300, 291, 300, 309, 1487, 490, 2139, 364, 33283, 5308, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.10642982664562407, "compression_ratio": 1.797979797979798, "no_caption_prob": 1.2805323422071524e-05}, {"id": 272, "seek": 167700, "start": 1694.88, "end": 1702.52, "text": " is using decoders and that's makes sure that you that it comes from either an HTTP request", "tokens": [50364, 281, 362, 264, 9952, 337, 516, 293, 1242, 300, 551, 294, 264, 42687, 3467, 10088, 570, 550, 50698, 50698, 264, 787, 636, 291, 393, 483, 300, 551, 307, 538, 1228, 300, 3089, 300, 311, 9495, 490, 264, 42687, 50971, 50971, 2010, 1338, 370, 337, 472, 1365, 295, 300, 420, 264, 767, 264, 787, 1365, 741, 362, 337, 300, 51258, 51258, 307, 1228, 979, 378, 433, 293, 300, 311, 1669, 988, 300, 291, 300, 309, 1487, 490, 2139, 364, 33283, 5308, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.10642982664562407, "compression_ratio": 1.797979797979798, "no_caption_prob": 1.2805323422071524e-05}, {"id": 273, "seek": 170252, "start": 1702.52, "end": 1709.8, "text": " or a port or that you encoded a value by manually creating some json and then decoding it directly", "tokens": [50364, 420, 257, 2436, 420, 300, 291, 2058, 12340, 257, 2158, 538, 16945, 4084, 512, 361, 3015, 293, 550, 979, 8616, 309, 3838, 50728, 50728, 797, 370, 291, 500, 380, 362, 257, 1577, 10815, 457, 1338, 1920, 1338, 741, 914, 264, 544, 295, 257, 10815, 51040, 51040, 291, 393, 483, 264, 1101, 291, 458, 498, 291, 498, 291, 584, 411, 498, 291, 362, 257, 1520, 300, 1619, 51278, 51278, 300, 364, 3796, 2985, 307, 307, 7363, 293, 264, 787, 636, 291, 393, 1520, 300, 307, 538, 516, 281, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.06656788731669332, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.5355355066712946e-05}, {"id": 274, "seek": 170252, "start": 1709.8, "end": 1716.04, "text": " again so you don't have a full guarantee but yeah almost yeah i mean the more of a guarantee", "tokens": [50364, 420, 257, 2436, 420, 300, 291, 2058, 12340, 257, 2158, 538, 16945, 4084, 512, 361, 3015, 293, 550, 979, 8616, 309, 3838, 50728, 50728, 797, 370, 291, 500, 380, 362, 257, 1577, 10815, 457, 1338, 1920, 1338, 741, 914, 264, 544, 295, 257, 10815, 51040, 51040, 291, 393, 483, 264, 1101, 291, 458, 498, 291, 498, 291, 584, 411, 498, 291, 362, 257, 1520, 300, 1619, 51278, 51278, 300, 364, 3796, 2985, 307, 307, 7363, 293, 264, 787, 636, 291, 393, 1520, 300, 307, 538, 516, 281, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.06656788731669332, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.5355355066712946e-05}, {"id": 275, "seek": 170252, "start": 1716.04, "end": 1720.8, "text": " you can get the better you know if you if you say like if you have a check that says", "tokens": [50364, 420, 257, 2436, 420, 300, 291, 2058, 12340, 257, 2158, 538, 16945, 4084, 512, 361, 3015, 293, 550, 979, 8616, 309, 3838, 50728, 50728, 797, 370, 291, 500, 380, 362, 257, 1577, 10815, 457, 1338, 1920, 1338, 741, 914, 264, 544, 295, 257, 10815, 51040, 51040, 291, 393, 483, 264, 1101, 291, 458, 498, 291, 498, 291, 584, 411, 498, 291, 362, 257, 1520, 300, 1619, 51278, 51278, 300, 364, 3796, 2985, 307, 307, 7363, 293, 264, 787, 636, 291, 393, 1520, 300, 307, 538, 516, 281, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.06656788731669332, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.5355355066712946e-05}, {"id": 276, "seek": 170252, "start": 1720.8, "end": 1727.32, "text": " that an email address is is valid and the only way you can check that is by going to", "tokens": [50364, 420, 257, 2436, 420, 300, 291, 2058, 12340, 257, 2158, 538, 16945, 4084, 512, 361, 3015, 293, 550, 979, 8616, 309, 3838, 50728, 50728, 797, 370, 291, 500, 380, 362, 257, 1577, 10815, 457, 1338, 1920, 1338, 741, 914, 264, 544, 295, 257, 10815, 51040, 51040, 291, 393, 483, 264, 1101, 291, 458, 498, 291, 498, 291, 584, 411, 498, 291, 362, 257, 1520, 300, 1619, 51278, 51278, 300, 364, 3796, 2985, 307, 307, 7363, 293, 264, 787, 636, 291, 393, 1520, 300, 307, 538, 516, 281, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.06656788731669332, "compression_ratio": 1.7609756097560976, "no_caption_prob": 3.5355355066712946e-05}, {"id": 277, "seek": 172732, "start": 1727.32, "end": 1734.36, "text": " some server and you know sending an email and seeing that it gets approved or or getting", "tokens": [50364, 512, 7154, 293, 291, 458, 7750, 364, 3796, 293, 2577, 300, 309, 2170, 10826, 420, 420, 1242, 50716, 50716, 294, 490, 264, 8149, 293, 597, 575, 1080, 1065, 13834, 2035, 1338, 2293, 457, 309, 1669, 51040, 51040, 257, 5308, 300, 1709, 293, 2170, 300, 490, 264, 7154, 293, 309, 13834, 300, 550, 291, 393, 362, 51332, 51332, 428, 31197, 3796, 2010, 293, 291, 393, 584, 577, 360, 741, 483, 257, 31197, 3796, 731, 264, 787, 636, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13960533142089843, "compression_ratio": 1.780612244897959, "no_caption_prob": 3.321324766147882e-05}, {"id": 278, "seek": 172732, "start": 1734.36, "end": 1740.84, "text": " in from the database and which has its own checks whatever yeah exactly but it makes", "tokens": [50364, 512, 7154, 293, 291, 458, 7750, 364, 3796, 293, 2577, 300, 309, 2170, 10826, 420, 420, 1242, 50716, 50716, 294, 490, 264, 8149, 293, 597, 575, 1080, 1065, 13834, 2035, 1338, 2293, 457, 309, 1669, 51040, 51040, 257, 5308, 300, 1709, 293, 2170, 300, 490, 264, 7154, 293, 309, 13834, 300, 550, 291, 393, 362, 51332, 51332, 428, 31197, 3796, 2010, 293, 291, 393, 584, 577, 360, 741, 483, 257, 31197, 3796, 731, 264, 787, 636, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13960533142089843, "compression_ratio": 1.780612244897959, "no_caption_prob": 3.321324766147882e-05}, {"id": 279, "seek": 172732, "start": 1740.84, "end": 1746.6799999999998, "text": " a request that goes and gets that from the server and it checks that then you can have", "tokens": [50364, 512, 7154, 293, 291, 458, 7750, 364, 3796, 293, 2577, 300, 309, 2170, 10826, 420, 420, 1242, 50716, 50716, 294, 490, 264, 8149, 293, 597, 575, 1080, 1065, 13834, 2035, 1338, 2293, 457, 309, 1669, 51040, 51040, 257, 5308, 300, 1709, 293, 2170, 300, 490, 264, 7154, 293, 309, 13834, 300, 550, 291, 393, 362, 51332, 51332, 428, 31197, 3796, 2010, 293, 291, 393, 584, 577, 360, 741, 483, 257, 31197, 3796, 731, 264, 787, 636, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13960533142089843, "compression_ratio": 1.780612244897959, "no_caption_prob": 3.321324766147882e-05}, {"id": 280, "seek": 172732, "start": 1746.6799999999998, "end": 1752.36, "text": " your verified email type and you can say how do i get a verified email well the only way", "tokens": [50364, 512, 7154, 293, 291, 458, 7750, 364, 3796, 293, 2577, 300, 309, 2170, 10826, 420, 420, 1242, 50716, 50716, 294, 490, 264, 8149, 293, 597, 575, 1080, 1065, 13834, 2035, 1338, 2293, 457, 309, 1669, 51040, 51040, 257, 5308, 300, 1709, 293, 2170, 300, 490, 264, 7154, 293, 309, 13834, 300, 550, 291, 393, 362, 51332, 51332, 428, 31197, 3796, 2010, 293, 291, 393, 584, 577, 360, 741, 483, 257, 31197, 3796, 731, 264, 787, 636, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13960533142089843, "compression_ratio": 1.780612244897959, "no_caption_prob": 3.321324766147882e-05}, {"id": 281, "seek": 175236, "start": 1752.36, "end": 1758.1599999999999, "text": " to construct a verified email type that it's an opaque type meaning the constructor for", "tokens": [50364, 281, 7690, 257, 31197, 3796, 2010, 300, 309, 311, 364, 42687, 2010, 3620, 264, 47479, 337, 50654, 50654, 31197, 3796, 307, 406, 9495, 2380, 264, 31197, 3796, 10088, 370, 264, 787, 636, 281, 1884, 50916, 50916, 472, 307, 406, 490, 6798, 456, 311, 572, 490, 6798, 570, 291, 393, 380, 29562, 300, 309, 307, 257, 31197, 51274, 51274, 3796, 445, 538, 2902, 309, 257, 6798, 456, 307, 257, 291, 458, 31197, 3796, 5893, 33283, 5308, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05420950394642504, "compression_ratio": 1.9090909090909092, "no_caption_prob": 7.141539390431717e-05}, {"id": 282, "seek": 175236, "start": 1758.1599999999999, "end": 1763.3999999999999, "text": " verified email is not exposed outside the verified email module so the only way to create", "tokens": [50364, 281, 7690, 257, 31197, 3796, 2010, 300, 309, 311, 364, 42687, 2010, 3620, 264, 47479, 337, 50654, 50654, 31197, 3796, 307, 406, 9495, 2380, 264, 31197, 3796, 10088, 370, 264, 787, 636, 281, 1884, 50916, 50916, 472, 307, 406, 490, 6798, 456, 311, 572, 490, 6798, 570, 291, 393, 380, 29562, 300, 309, 307, 257, 31197, 51274, 51274, 3796, 445, 538, 2902, 309, 257, 6798, 456, 307, 257, 291, 458, 31197, 3796, 5893, 33283, 5308, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05420950394642504, "compression_ratio": 1.9090909090909092, "no_caption_prob": 7.141539390431717e-05}, {"id": 283, "seek": 175236, "start": 1763.3999999999999, "end": 1770.56, "text": " one is not from string there's no from string because you can't validate that it is a verified", "tokens": [50364, 281, 7690, 257, 31197, 3796, 2010, 300, 309, 311, 364, 42687, 2010, 3620, 264, 47479, 337, 50654, 50654, 31197, 3796, 307, 406, 9495, 2380, 264, 31197, 3796, 10088, 370, 264, 787, 636, 281, 1884, 50916, 50916, 472, 307, 406, 490, 6798, 456, 311, 572, 490, 6798, 570, 291, 393, 380, 29562, 300, 309, 307, 257, 31197, 51274, 51274, 3796, 445, 538, 2902, 309, 257, 6798, 456, 307, 257, 291, 458, 31197, 3796, 5893, 33283, 5308, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05420950394642504, "compression_ratio": 1.9090909090909092, "no_caption_prob": 7.141539390431717e-05}, {"id": 284, "seek": 175236, "start": 1770.56, "end": 1777.9599999999998, "text": " email just by giving it a string there is a you know verified email dot HTTP request", "tokens": [50364, 281, 7690, 257, 31197, 3796, 2010, 300, 309, 311, 364, 42687, 2010, 3620, 264, 47479, 337, 50654, 50654, 31197, 3796, 307, 406, 9495, 2380, 264, 31197, 3796, 10088, 370, 264, 787, 636, 281, 1884, 50916, 50916, 472, 307, 406, 490, 6798, 456, 311, 572, 490, 6798, 570, 291, 393, 380, 29562, 300, 309, 307, 257, 31197, 51274, 51274, 3796, 445, 538, 2902, 309, 257, 6798, 456, 307, 257, 291, 458, 31197, 3796, 5893, 33283, 5308, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05420950394642504, "compression_ratio": 1.9090909090909092, "no_caption_prob": 7.141539390431717e-05}, {"id": 285, "seek": 177796, "start": 1777.96, "end": 1783.4, "text": " that takes a string of an email address it sends it to the server and the server sends", "tokens": [50364, 300, 2516, 257, 6798, 295, 364, 3796, 2985, 309, 14790, 309, 281, 264, 7154, 293, 264, 7154, 14790, 50636, 50636, 646, 293, 309, 293, 309, 979, 4789, 309, 979, 4789, 666, 257, 31197, 3796, 498, 309, 307, 472, 370, 309, 979, 4789, 50982, 50982, 666, 257, 1310, 31197, 3796, 420, 2035, 558, 1338, 370, 1338, 1936, 264, 291, 643, 257, 979, 19866, 51314, 51314, 337, 341, 281, 589, 293, 498, 291, 767, 362, 264, 276, 83, 66, 79, 5308, 2564, 3009, 8850, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07892139013423476, "compression_ratio": 1.9175824175824177, "no_caption_prob": 9.81819994194666e-06}, {"id": 286, "seek": 177796, "start": 1783.4, "end": 1790.32, "text": " back and it and it decodes it decodes into a verified email if it is one so it decodes", "tokens": [50364, 300, 2516, 257, 6798, 295, 364, 3796, 2985, 309, 14790, 309, 281, 264, 7154, 293, 264, 7154, 14790, 50636, 50636, 646, 293, 309, 293, 309, 979, 4789, 309, 979, 4789, 666, 257, 31197, 3796, 498, 309, 307, 472, 370, 309, 979, 4789, 50982, 50982, 666, 257, 1310, 31197, 3796, 420, 2035, 558, 1338, 370, 1338, 1936, 264, 291, 643, 257, 979, 19866, 51314, 51314, 337, 341, 281, 589, 293, 498, 291, 767, 362, 264, 276, 83, 66, 79, 5308, 2564, 3009, 8850, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07892139013423476, "compression_ratio": 1.9175824175824177, "no_caption_prob": 9.81819994194666e-06}, {"id": 287, "seek": 177796, "start": 1790.32, "end": 1796.96, "text": " into a maybe verified email or whatever right yeah so yeah basically the you need a decoder", "tokens": [50364, 300, 2516, 257, 6798, 295, 364, 3796, 2985, 309, 14790, 309, 281, 264, 7154, 293, 264, 7154, 14790, 50636, 50636, 646, 293, 309, 293, 309, 979, 4789, 309, 979, 4789, 666, 257, 31197, 3796, 498, 309, 307, 472, 370, 309, 979, 4789, 50982, 50982, 666, 257, 1310, 31197, 3796, 420, 2035, 558, 1338, 370, 1338, 1936, 264, 291, 643, 257, 979, 19866, 51314, 51314, 337, 341, 281, 589, 293, 498, 291, 767, 362, 264, 276, 83, 66, 79, 5308, 2564, 3009, 8850, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07892139013423476, "compression_ratio": 1.9175824175824177, "no_caption_prob": 9.81819994194666e-06}, {"id": 288, "seek": 177796, "start": 1796.96, "end": 1803.92, "text": " for this to work and if you actually have the htcp request itself including hitting", "tokens": [50364, 300, 2516, 257, 6798, 295, 364, 3796, 2985, 309, 14790, 309, 281, 264, 7154, 293, 264, 7154, 14790, 50636, 50636, 646, 293, 309, 293, 309, 979, 4789, 309, 979, 4789, 666, 257, 31197, 3796, 498, 309, 307, 472, 370, 309, 979, 4789, 50982, 50982, 666, 257, 1310, 31197, 3796, 420, 2035, 558, 1338, 370, 1338, 1936, 264, 291, 643, 257, 979, 19866, 51314, 51314, 337, 341, 281, 589, 293, 498, 291, 767, 362, 264, 276, 83, 66, 79, 5308, 2564, 3009, 8850, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.07892139013423476, "compression_ratio": 1.9175824175824177, "no_caption_prob": 9.81819994194666e-06}, {"id": 289, "seek": 180392, "start": 1803.92, "end": 1812.8000000000002, "text": " a certain endpoint right then you like if you really trust that I the only way I can", "tokens": [50364, 257, 1629, 35795, 558, 550, 291, 411, 498, 291, 534, 3361, 300, 286, 264, 787, 636, 286, 393, 50808, 50808, 483, 257, 31197, 3796, 2010, 307, 498, 286, 669, 516, 807, 341, 1520, 322, 264, 646, 917, 370, 437, 51116, 51116, 291, 914, 307, 300, 341, 10088, 820, 611, 312, 264, 472, 281, 1884, 264, 33283, 5308, 281, 483, 51428, 51428, 264, 1392, 1338, 2597, 286, 478, 2293, 286, 1713, 300, 550, 291, 393, 534, 3361, 309, 293, 797, 341, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.17852665129162015, "compression_ratio": 1.638095238095238, "no_caption_prob": 7.030866254353896e-05}, {"id": 290, "seek": 180392, "start": 1812.8000000000002, "end": 1818.96, "text": " get a verified email type is if I am going through this check on the back end so what", "tokens": [50364, 257, 1629, 35795, 558, 550, 291, 411, 498, 291, 534, 3361, 300, 286, 264, 787, 636, 286, 393, 50808, 50808, 483, 257, 31197, 3796, 2010, 307, 498, 286, 669, 516, 807, 341, 1520, 322, 264, 646, 917, 370, 437, 51116, 51116, 291, 914, 307, 300, 341, 10088, 820, 611, 312, 264, 472, 281, 1884, 264, 33283, 5308, 281, 483, 51428, 51428, 264, 1392, 1338, 2597, 286, 478, 2293, 286, 1713, 300, 550, 291, 393, 534, 3361, 309, 293, 797, 341, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.17852665129162015, "compression_ratio": 1.638095238095238, "no_caption_prob": 7.030866254353896e-05}, {"id": 291, "seek": 180392, "start": 1818.96, "end": 1825.2, "text": " you mean is that this module should also be the one to create the HTTP request to get", "tokens": [50364, 257, 1629, 35795, 558, 550, 291, 411, 498, 291, 534, 3361, 300, 286, 264, 787, 636, 286, 393, 50808, 50808, 483, 257, 31197, 3796, 2010, 307, 498, 286, 669, 516, 807, 341, 1520, 322, 264, 646, 917, 370, 437, 51116, 51116, 291, 914, 307, 300, 341, 10088, 820, 611, 312, 264, 472, 281, 1884, 264, 33283, 5308, 281, 483, 51428, 51428, 264, 1392, 1338, 2597, 286, 478, 2293, 286, 1713, 300, 550, 291, 393, 534, 3361, 309, 293, 797, 341, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.17852665129162015, "compression_ratio": 1.638095238095238, "no_caption_prob": 7.030866254353896e-05}, {"id": 292, "seek": 180392, "start": 1825.2, "end": 1830.5600000000002, "text": " the okay yeah sorry I'm exactly I miss that then you can really trust it and again this", "tokens": [50364, 257, 1629, 35795, 558, 550, 291, 411, 498, 291, 534, 3361, 300, 286, 264, 787, 636, 286, 393, 50808, 50808, 483, 257, 31197, 3796, 2010, 307, 498, 286, 669, 516, 807, 341, 1520, 322, 264, 646, 917, 370, 437, 51116, 51116, 291, 914, 307, 300, 341, 10088, 820, 611, 312, 264, 472, 281, 1884, 264, 33283, 5308, 281, 483, 51428, 51428, 264, 1392, 1338, 2597, 286, 478, 2293, 286, 1713, 300, 550, 291, 393, 534, 3361, 309, 293, 797, 341, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.17852665129162015, "compression_ratio": 1.638095238095238, "no_caption_prob": 7.030866254353896e-05}, {"id": 293, "seek": 183056, "start": 1830.56, "end": 1838.76, "text": " is like you know if if a malicious client wants to lose those guarantees then it's", "tokens": [50364, 307, 411, 291, 458, 498, 498, 257, 33496, 6423, 2738, 281, 3624, 729, 32567, 550, 309, 311, 50774, 50774, 257, 6423, 558, 457, 341, 307, 337, 15120, 558, 321, 434, 1417, 498, 321, 434, 1417, 466, 1868, 50960, 50960, 917, 3089, 550, 321, 434, 1417, 466, 1974, 1478, 15120, 321, 434, 1417, 466, 1988, 41738, 9952, 300, 51272, 51272, 498, 2618, 311, 406, 1382, 281, 7125, 2475, 613, 721, 436, 434, 406, 516, 281, 536, 613, 15120, 51492, 51492, 558, 1338, 286, 914, 286, 914, 281, 264, 1154, 307, 562, 291, 2845, 33496, 721, 281, 264, 7154, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08018047974841429, "compression_ratio": 1.9422222222222223, "no_caption_prob": 1.8631470084073953e-05}, {"id": 294, "seek": 183056, "start": 1838.76, "end": 1842.48, "text": " a client right but this is for bugs right we're talking if we're talking about front", "tokens": [50364, 307, 411, 291, 458, 498, 498, 257, 33496, 6423, 2738, 281, 3624, 729, 32567, 550, 309, 311, 50774, 50774, 257, 6423, 558, 457, 341, 307, 337, 15120, 558, 321, 434, 1417, 498, 321, 434, 1417, 466, 1868, 50960, 50960, 917, 3089, 550, 321, 434, 1417, 466, 1974, 1478, 15120, 321, 434, 1417, 466, 1988, 41738, 9952, 300, 51272, 51272, 498, 2618, 311, 406, 1382, 281, 7125, 2475, 613, 721, 436, 434, 406, 516, 281, 536, 613, 15120, 51492, 51492, 558, 1338, 286, 914, 286, 914, 281, 264, 1154, 307, 562, 291, 2845, 33496, 721, 281, 264, 7154, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08018047974841429, "compression_ratio": 1.9422222222222223, "no_caption_prob": 1.8631470084073953e-05}, {"id": 295, "seek": 183056, "start": 1842.48, "end": 1848.72, "text": " end code then we're talking about presentational bugs we're talking about airtight logic that", "tokens": [50364, 307, 411, 291, 458, 498, 498, 257, 33496, 6423, 2738, 281, 3624, 729, 32567, 550, 309, 311, 50774, 50774, 257, 6423, 558, 457, 341, 307, 337, 15120, 558, 321, 434, 1417, 498, 321, 434, 1417, 466, 1868, 50960, 50960, 917, 3089, 550, 321, 434, 1417, 466, 1974, 1478, 15120, 321, 434, 1417, 466, 1988, 41738, 9952, 300, 51272, 51272, 498, 2618, 311, 406, 1382, 281, 7125, 2475, 613, 721, 436, 434, 406, 516, 281, 536, 613, 15120, 51492, 51492, 558, 1338, 286, 914, 286, 914, 281, 264, 1154, 307, 562, 291, 2845, 33496, 721, 281, 264, 7154, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08018047974841429, "compression_ratio": 1.9422222222222223, "no_caption_prob": 1.8631470084073953e-05}, {"id": 296, "seek": 183056, "start": 1848.72, "end": 1853.12, "text": " if somebody's not trying to circumvent these things they're not going to see these bugs", "tokens": [50364, 307, 411, 291, 458, 498, 498, 257, 33496, 6423, 2738, 281, 3624, 729, 32567, 550, 309, 311, 50774, 50774, 257, 6423, 558, 457, 341, 307, 337, 15120, 558, 321, 434, 1417, 498, 321, 434, 1417, 466, 1868, 50960, 50960, 917, 3089, 550, 321, 434, 1417, 466, 1974, 1478, 15120, 321, 434, 1417, 466, 1988, 41738, 9952, 300, 51272, 51272, 498, 2618, 311, 406, 1382, 281, 7125, 2475, 613, 721, 436, 434, 406, 516, 281, 536, 613, 15120, 51492, 51492, 558, 1338, 286, 914, 286, 914, 281, 264, 1154, 307, 562, 291, 2845, 33496, 721, 281, 264, 7154, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08018047974841429, "compression_ratio": 1.9422222222222223, "no_caption_prob": 1.8631470084073953e-05}, {"id": 297, "seek": 183056, "start": 1853.12, "end": 1859.2, "text": " right yeah I mean I mean to the problem is when you send malicious things to the server", "tokens": [50364, 307, 411, 291, 458, 498, 498, 257, 33496, 6423, 2738, 281, 3624, 729, 32567, 550, 309, 311, 50774, 50774, 257, 6423, 558, 457, 341, 307, 337, 15120, 558, 321, 434, 1417, 498, 321, 434, 1417, 466, 1868, 50960, 50960, 917, 3089, 550, 321, 434, 1417, 466, 1974, 1478, 15120, 321, 434, 1417, 466, 1988, 41738, 9952, 300, 51272, 51272, 498, 2618, 311, 406, 1382, 281, 7125, 2475, 613, 721, 436, 434, 406, 516, 281, 536, 613, 15120, 51492, 51492, 558, 1338, 286, 914, 286, 914, 281, 264, 1154, 307, 562, 291, 2845, 33496, 721, 281, 264, 7154, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.08018047974841429, "compression_ratio": 1.9422222222222223, "no_caption_prob": 1.8631470084073953e-05}, {"id": 298, "seek": 185920, "start": 1859.2, "end": 1865.52, "text": " anyway and you might as well just do a curl instead of manipulating the front end so right", "tokens": [50364, 4033, 293, 291, 1062, 382, 731, 445, 360, 257, 22591, 2602, 295, 40805, 264, 1868, 917, 370, 558, 50680, 50680, 558, 3879, 988, 561, 727, 360, 309, 457, 456, 366, 2199, 636, 18587, 2098, 926, 309, 50944, 50944, 1392, 1338, 370, 291, 360, 264, 264, 5308, 490, 1854, 341, 10088, 293, 291, 979, 1429, 490, 1854, 264, 51256, 51256, 10088, 370, 498, 291, 528, 281, 1520, 746, 291, 787, 362, 281, 1520, 2035, 307, 294, 264, 10088, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.11417709162205826, "compression_ratio": 1.7761194029850746, "no_caption_prob": 6.302489782683551e-05}, {"id": 299, "seek": 185920, "start": 1865.52, "end": 1870.8, "text": " right totally sure people could do it but there are simple way simpler ways around it", "tokens": [50364, 4033, 293, 291, 1062, 382, 731, 445, 360, 257, 22591, 2602, 295, 40805, 264, 1868, 917, 370, 558, 50680, 50680, 558, 3879, 988, 561, 727, 360, 309, 457, 456, 366, 2199, 636, 18587, 2098, 926, 309, 50944, 50944, 1392, 1338, 370, 291, 360, 264, 264, 5308, 490, 1854, 341, 10088, 293, 291, 979, 1429, 490, 1854, 264, 51256, 51256, 10088, 370, 498, 291, 528, 281, 1520, 746, 291, 787, 362, 281, 1520, 2035, 307, 294, 264, 10088, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.11417709162205826, "compression_ratio": 1.7761194029850746, "no_caption_prob": 6.302489782683551e-05}, {"id": 300, "seek": 185920, "start": 1870.8, "end": 1877.04, "text": " okay yeah so you do the the request from inside this module and you decode from inside the", "tokens": [50364, 4033, 293, 291, 1062, 382, 731, 445, 360, 257, 22591, 2602, 295, 40805, 264, 1868, 917, 370, 558, 50680, 50680, 558, 3879, 988, 561, 727, 360, 309, 457, 456, 366, 2199, 636, 18587, 2098, 926, 309, 50944, 50944, 1392, 1338, 370, 291, 360, 264, 264, 5308, 490, 1854, 341, 10088, 293, 291, 979, 1429, 490, 1854, 264, 51256, 51256, 10088, 370, 498, 291, 528, 281, 1520, 746, 291, 787, 362, 281, 1520, 2035, 307, 294, 264, 10088, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.11417709162205826, "compression_ratio": 1.7761194029850746, "no_caption_prob": 6.302489782683551e-05}, {"id": 301, "seek": 185920, "start": 1877.04, "end": 1881.8400000000001, "text": " module so if you want to check something you only have to check whatever is in the module", "tokens": [50364, 4033, 293, 291, 1062, 382, 731, 445, 360, 257, 22591, 2602, 295, 40805, 264, 1868, 917, 370, 558, 50680, 50680, 558, 3879, 988, 561, 727, 360, 309, 457, 456, 366, 2199, 636, 18587, 2098, 926, 309, 50944, 50944, 1392, 1338, 370, 291, 360, 264, 264, 5308, 490, 1854, 341, 10088, 293, 291, 979, 1429, 490, 1854, 264, 51256, 51256, 10088, 370, 498, 291, 528, 281, 1520, 746, 291, 787, 362, 281, 1520, 2035, 307, 294, 264, 10088, 51496, 51496], "temperature": 0.0, "avg_logprob": -0.11417709162205826, "compression_ratio": 1.7761194029850746, "no_caption_prob": 6.302489782683551e-05}, {"id": 302, "seek": 188184, "start": 1881.84, "end": 1890.24, "text": " gotcha exactly and then for unwrapping yep right so it's you know it's the same basic", "tokens": [50364, 658, 4413, 2293, 293, 550, 337, 14853, 424, 3759, 18633, 558, 370, 309, 311, 291, 458, 309, 311, 264, 912, 3875, 50784, 50784, 3410, 309, 311, 411, 291, 458, 2171, 286, 519, 295, 309, 411, 257, 472, 1590, 3945, 286, 500, 380, 458, 498, 51062, 51062, 291, 458, 300, 9535, 457, 309, 311, 718, 311, 6964, 309, 445, 337, 729, 567, 500, 380, 458, 300, 286, 2198, 51326, 51326, 295, 309, 457, 286, 478, 406, 7696, 988, 309, 311, 445, 1333, 295, 411, 257, 1106, 4119, 9535, 309, 311, 411, 257, 32549, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.0854158600171407, "compression_ratio": 1.7727272727272727, "no_caption_prob": 1.670100391493179e-05}, {"id": 303, "seek": 188184, "start": 1890.24, "end": 1895.8, "text": " concept it's like you know sometimes I think of it like a one stop shop I don't know if", "tokens": [50364, 658, 4413, 2293, 293, 550, 337, 14853, 424, 3759, 18633, 558, 370, 309, 311, 291, 458, 309, 311, 264, 912, 3875, 50784, 50784, 3410, 309, 311, 411, 291, 458, 2171, 286, 519, 295, 309, 411, 257, 472, 1590, 3945, 286, 500, 380, 458, 498, 51062, 51062, 291, 458, 300, 9535, 457, 309, 311, 718, 311, 6964, 309, 445, 337, 729, 567, 500, 380, 458, 300, 286, 2198, 51326, 51326, 295, 309, 457, 286, 478, 406, 7696, 988, 309, 311, 445, 1333, 295, 411, 257, 1106, 4119, 9535, 309, 311, 411, 257, 32549, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.0854158600171407, "compression_ratio": 1.7727272727272727, "no_caption_prob": 1.670100391493179e-05}, {"id": 304, "seek": 188184, "start": 1895.8, "end": 1901.08, "text": " you know that phrase but it's let's define it just for those who don't know that I heard", "tokens": [50364, 658, 4413, 2293, 293, 550, 337, 14853, 424, 3759, 18633, 558, 370, 309, 311, 291, 458, 309, 311, 264, 912, 3875, 50784, 50784, 3410, 309, 311, 411, 291, 458, 2171, 286, 519, 295, 309, 411, 257, 472, 1590, 3945, 286, 500, 380, 458, 498, 51062, 51062, 291, 458, 300, 9535, 457, 309, 311, 718, 311, 6964, 309, 445, 337, 729, 567, 500, 380, 458, 300, 286, 2198, 51326, 51326, 295, 309, 457, 286, 478, 406, 7696, 988, 309, 311, 445, 1333, 295, 411, 257, 1106, 4119, 9535, 309, 311, 411, 257, 32549, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.0854158600171407, "compression_ratio": 1.7727272727272727, "no_caption_prob": 1.670100391493179e-05}, {"id": 305, "seek": 188184, "start": 1901.08, "end": 1907.24, "text": " of it but I'm not entirely sure it's just sort of like a hokey phrase it's like a cheesy", "tokens": [50364, 658, 4413, 2293, 293, 550, 337, 14853, 424, 3759, 18633, 558, 370, 309, 311, 291, 458, 309, 311, 264, 912, 3875, 50784, 50784, 3410, 309, 311, 411, 291, 458, 2171, 286, 519, 295, 309, 411, 257, 472, 1590, 3945, 286, 500, 380, 458, 498, 51062, 51062, 291, 458, 300, 9535, 457, 309, 311, 718, 311, 6964, 309, 445, 337, 729, 567, 500, 380, 458, 300, 286, 2198, 51326, 51326, 295, 309, 457, 286, 478, 406, 7696, 988, 309, 311, 445, 1333, 295, 411, 257, 1106, 4119, 9535, 309, 311, 411, 257, 32549, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.0854158600171407, "compression_ratio": 1.7727272727272727, "no_caption_prob": 1.670100391493179e-05}, {"id": 306, "seek": 190724, "start": 1907.24, "end": 1913.4, "text": " way of saying like come on down to Bill's Boot Barn you can get all your it's your one", "tokens": [50364, 636, 295, 1566, 411, 808, 322, 760, 281, 5477, 311, 37263, 21605, 291, 393, 483, 439, 428, 309, 311, 428, 472, 50672, 50672, 1590, 3945, 337, 439, 428, 21602, 78, 2203, 291, 643, 257, 2439, 539, 293, 257, 2385, 293, 15194, 293, 1203, 51030, 51030, 4077, 281, 516, 281, 264, 21602, 78, 309, 311, 428, 472, 1590, 3945, 558, 370, 411, 300, 311, 437, 291, 528, 51280, 51280, 613, 42687, 3467, 281, 312, 498, 291, 528, 281, 14853, 4007, 2440, 293, 7019, 7019, 2440, 14853, 4007, 3469, 309, 311, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11329968770345052, "compression_ratio": 1.8429319371727748, "no_caption_prob": 3.591156200855039e-05}, {"id": 307, "seek": 190724, "start": 1913.4, "end": 1920.56, "text": " stop shop for all your rodeo needs you need a lasso and a hat and boots and everything", "tokens": [50364, 636, 295, 1566, 411, 808, 322, 760, 281, 5477, 311, 37263, 21605, 291, 393, 483, 439, 428, 309, 311, 428, 472, 50672, 50672, 1590, 3945, 337, 439, 428, 21602, 78, 2203, 291, 643, 257, 2439, 539, 293, 257, 2385, 293, 15194, 293, 1203, 51030, 51030, 4077, 281, 516, 281, 264, 21602, 78, 309, 311, 428, 472, 1590, 3945, 558, 370, 411, 300, 311, 437, 291, 528, 51280, 51280, 613, 42687, 3467, 281, 312, 498, 291, 528, 281, 14853, 4007, 2440, 293, 7019, 7019, 2440, 14853, 4007, 3469, 309, 311, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11329968770345052, "compression_ratio": 1.8429319371727748, "no_caption_prob": 3.591156200855039e-05}, {"id": 308, "seek": 190724, "start": 1920.56, "end": 1925.56, "text": " related to going to the rodeo it's your one stop shop right so like that's what you want", "tokens": [50364, 636, 295, 1566, 411, 808, 322, 760, 281, 5477, 311, 37263, 21605, 291, 393, 483, 439, 428, 309, 311, 428, 472, 50672, 50672, 1590, 3945, 337, 439, 428, 21602, 78, 2203, 291, 643, 257, 2439, 539, 293, 257, 2385, 293, 15194, 293, 1203, 51030, 51030, 4077, 281, 516, 281, 264, 21602, 78, 309, 311, 428, 472, 1590, 3945, 558, 370, 411, 300, 311, 437, 291, 528, 51280, 51280, 613, 42687, 3467, 281, 312, 498, 291, 528, 281, 14853, 4007, 2440, 293, 7019, 7019, 2440, 14853, 4007, 3469, 309, 311, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11329968770345052, "compression_ratio": 1.8429319371727748, "no_caption_prob": 3.591156200855039e-05}, {"id": 309, "seek": 190724, "start": 1925.56, "end": 1933.6, "text": " these opaque types to be if you want to unwrap early and wrap wrap early unwrap late it's", "tokens": [50364, 636, 295, 1566, 411, 808, 322, 760, 281, 5477, 311, 37263, 21605, 291, 393, 483, 439, 428, 309, 311, 428, 472, 50672, 50672, 1590, 3945, 337, 439, 428, 21602, 78, 2203, 291, 643, 257, 2439, 539, 293, 257, 2385, 293, 15194, 293, 1203, 51030, 51030, 4077, 281, 516, 281, 264, 21602, 78, 309, 311, 428, 472, 1590, 3945, 558, 370, 411, 300, 311, 437, 291, 528, 51280, 51280, 613, 42687, 3467, 281, 312, 498, 291, 528, 281, 14853, 4007, 2440, 293, 7019, 7019, 2440, 14853, 4007, 3469, 309, 311, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11329968770345052, "compression_ratio": 1.8429319371727748, "no_caption_prob": 3.591156200855039e-05}, {"id": 310, "seek": 193360, "start": 1933.6, "end": 1939.6799999999998, "text": " just called a supermarket didn't yeah yeah yeah a supermarket is your one stop shop for", "tokens": [50364, 445, 1219, 257, 25180, 994, 380, 1338, 1338, 1338, 257, 25180, 307, 428, 472, 1590, 3945, 337, 50668, 50668, 1203, 370, 1238, 709, 4878, 264, 25180, 291, 528, 309, 281, 312, 544, 295, 411, 257, 15738, 1925, 50916, 50916, 3945, 570, 264, 25180, 307, 6250, 337, 1203, 457, 498, 309, 311, 6250, 337, 51194, 51194, 1203, 550, 291, 434, 406, 10257, 278, 613, 819, 7389, 490, 1184, 661, 293, 291, 434, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.09686862309773762, "compression_ratio": 1.9037433155080214, "no_caption_prob": 1.370952304569073e-06}, {"id": 311, "seek": 193360, "start": 1939.6799999999998, "end": 1944.6399999999999, "text": " everything so pretty much although the supermarket you want it to be more of like a boutique", "tokens": [50364, 445, 1219, 257, 25180, 994, 380, 1338, 1338, 1338, 257, 25180, 307, 428, 472, 1590, 3945, 337, 50668, 50668, 1203, 370, 1238, 709, 4878, 264, 25180, 291, 528, 309, 281, 312, 544, 295, 411, 257, 15738, 1925, 50916, 50916, 3945, 570, 264, 25180, 307, 6250, 337, 1203, 457, 498, 309, 311, 6250, 337, 51194, 51194, 1203, 550, 291, 434, 406, 10257, 278, 613, 819, 7389, 490, 1184, 661, 293, 291, 434, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.09686862309773762, "compression_ratio": 1.9037433155080214, "no_caption_prob": 1.370952304569073e-06}, {"id": 312, "seek": 193360, "start": 1944.6399999999999, "end": 1950.1999999999998, "text": " shop because the supermarket is responsible for everything but if it's responsible for", "tokens": [50364, 445, 1219, 257, 25180, 994, 380, 1338, 1338, 1338, 257, 25180, 307, 428, 472, 1590, 3945, 337, 50668, 50668, 1203, 370, 1238, 709, 4878, 264, 25180, 291, 528, 309, 281, 312, 544, 295, 411, 257, 15738, 1925, 50916, 50916, 3945, 570, 264, 25180, 307, 6250, 337, 1203, 457, 498, 309, 311, 6250, 337, 51194, 51194, 1203, 550, 291, 434, 406, 10257, 278, 613, 819, 7389, 490, 1184, 661, 293, 291, 434, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.09686862309773762, "compression_ratio": 1.9037433155080214, "no_caption_prob": 1.370952304569073e-06}, {"id": 313, "seek": 193360, "start": 1950.1999999999998, "end": 1956.76, "text": " everything then you're not shielding these different concerns from each other and you're", "tokens": [50364, 445, 1219, 257, 25180, 994, 380, 1338, 1338, 1338, 257, 25180, 307, 428, 472, 1590, 3945, 337, 50668, 50668, 1203, 370, 1238, 709, 4878, 264, 25180, 291, 528, 309, 281, 312, 544, 295, 411, 257, 15738, 1925, 50916, 50916, 3945, 570, 264, 25180, 307, 6250, 337, 1203, 457, 498, 309, 311, 6250, 337, 51194, 51194, 1203, 550, 291, 434, 406, 10257, 278, 613, 819, 7389, 490, 1184, 661, 293, 291, 434, 51522, 51522], "temperature": 0.0, "avg_logprob": -0.09686862309773762, "compression_ratio": 1.9037433155080214, "no_caption_prob": 1.370952304569073e-06}, {"id": 314, "seek": 195676, "start": 1956.76, "end": 1963.76, "text": " exposing their internals to each other so you want a boutique one stop shop that is", "tokens": [50364, 33178, 641, 2154, 1124, 281, 1184, 661, 370, 291, 528, 257, 15738, 1925, 472, 1590, 3945, 300, 307, 50714, 50714, 257, 2142, 286, 611, 500, 380, 528, 300, 15738, 1925, 281, 312, 257, 4848, 453, 457, 1338, 300, 886, 1338, 370, 370, 1936, 51260, 51260, 291, 458, 286, 362, 257, 2093, 3825, 1230, 293, 291, 362, 428, 42687, 2010, 577, 360, 291, 652, 51522, 51522, 309, 257, 472, 1590, 3945, 731, 577, 360, 286, 483, 257, 2093, 3825, 1230, 293, 577, 360, 286, 764, 257, 2093, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12265301810370552, "compression_ratio": 1.8429319371727748, "no_caption_prob": 2.796817534544971e-05}, {"id": 315, "seek": 195676, "start": 1963.76, "end": 1974.68, "text": " a market I also don't want that boutique to be a crook but yeah that too yeah so so basically", "tokens": [50364, 33178, 641, 2154, 1124, 281, 1184, 661, 370, 291, 528, 257, 15738, 1925, 472, 1590, 3945, 300, 307, 50714, 50714, 257, 2142, 286, 611, 500, 380, 528, 300, 15738, 1925, 281, 312, 257, 4848, 453, 457, 1338, 300, 886, 1338, 370, 370, 1936, 51260, 51260, 291, 458, 286, 362, 257, 2093, 3825, 1230, 293, 291, 362, 428, 42687, 2010, 577, 360, 291, 652, 51522, 51522, 309, 257, 472, 1590, 3945, 731, 577, 360, 286, 483, 257, 2093, 3825, 1230, 293, 577, 360, 286, 764, 257, 2093, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12265301810370552, "compression_ratio": 1.8429319371727748, "no_caption_prob": 2.796817534544971e-05}, {"id": 316, "seek": 195676, "start": 1974.68, "end": 1979.92, "text": " you know I have a social security number and you have your opaque type how do you make", "tokens": [50364, 33178, 641, 2154, 1124, 281, 1184, 661, 370, 291, 528, 257, 15738, 1925, 472, 1590, 3945, 300, 307, 50714, 50714, 257, 2142, 286, 611, 500, 380, 528, 300, 15738, 1925, 281, 312, 257, 4848, 453, 457, 1338, 300, 886, 1338, 370, 370, 1936, 51260, 51260, 291, 458, 286, 362, 257, 2093, 3825, 1230, 293, 291, 362, 428, 42687, 2010, 577, 360, 291, 652, 51522, 51522, 309, 257, 472, 1590, 3945, 731, 577, 360, 286, 483, 257, 2093, 3825, 1230, 293, 577, 360, 286, 764, 257, 2093, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12265301810370552, "compression_ratio": 1.8429319371727748, "no_caption_prob": 2.796817534544971e-05}, {"id": 317, "seek": 195676, "start": 1979.92, "end": 1985.72, "text": " it a one stop shop well how do I get a social security number and how do I use a social", "tokens": [50364, 33178, 641, 2154, 1124, 281, 1184, 661, 370, 291, 528, 257, 15738, 1925, 472, 1590, 3945, 300, 307, 50714, 50714, 257, 2142, 286, 611, 500, 380, 528, 300, 15738, 1925, 281, 312, 257, 4848, 453, 457, 1338, 300, 886, 1338, 370, 370, 1936, 51260, 51260, 291, 458, 286, 362, 257, 2093, 3825, 1230, 293, 291, 362, 428, 42687, 2010, 577, 360, 291, 652, 51522, 51522, 309, 257, 472, 1590, 3945, 731, 577, 360, 286, 483, 257, 2093, 3825, 1230, 293, 577, 360, 286, 764, 257, 2093, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.12265301810370552, "compression_ratio": 1.8429319371727748, "no_caption_prob": 2.796817534544971e-05}, {"id": 318, "seek": 198572, "start": 1985.72, "end": 1991.4, "text": " security number so so like you were talking about these terminal points where you're forced", "tokens": [50364, 3825, 1230, 370, 370, 411, 291, 645, 1417, 466, 613, 14709, 2793, 689, 291, 434, 7579, 50648, 50648, 281, 14853, 4007, 300, 311, 689, 291, 528, 281, 14853, 4007, 457, 550, 437, 644, 295, 264, 3089, 307, 6250, 50922, 50922, 337, 14853, 424, 3759, 731, 498, 291, 534, 528, 281, 652, 988, 300, 309, 311, 787, 1143, 294, 264, 14721, 51228, 51228, 636, 558, 370, 456, 311, 411, 652, 6243, 4368, 6243, 457, 550, 437, 466, 411, 51452, 51452, 764, 1412, 294, 264, 14721, 2098, 558, 293, 300, 311, 437, 264, 472, 1590, 3945, 307, 337, 370, 562, 291, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.05872283398526386, "compression_ratio": 1.9424778761061947, "no_caption_prob": 1.1659356459858827e-05}, {"id": 319, "seek": 198572, "start": 1991.4, "end": 1996.88, "text": " to unwrap that's where you want to unwrap but then what part of the code is responsible", "tokens": [50364, 3825, 1230, 370, 370, 411, 291, 645, 1417, 466, 613, 14709, 2793, 689, 291, 434, 7579, 50648, 50648, 281, 14853, 4007, 300, 311, 689, 291, 528, 281, 14853, 4007, 457, 550, 437, 644, 295, 264, 3089, 307, 6250, 50922, 50922, 337, 14853, 424, 3759, 731, 498, 291, 534, 528, 281, 652, 988, 300, 309, 311, 787, 1143, 294, 264, 14721, 51228, 51228, 636, 558, 370, 456, 311, 411, 652, 6243, 4368, 6243, 457, 550, 437, 466, 411, 51452, 51452, 764, 1412, 294, 264, 14721, 2098, 558, 293, 300, 311, 437, 264, 472, 1590, 3945, 307, 337, 370, 562, 291, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.05872283398526386, "compression_ratio": 1.9424778761061947, "no_caption_prob": 1.1659356459858827e-05}, {"id": 320, "seek": 198572, "start": 1996.88, "end": 2003.0, "text": " for unwrapping well if you really want to make sure that it's only used in the desired", "tokens": [50364, 3825, 1230, 370, 370, 411, 291, 645, 1417, 466, 613, 14709, 2793, 689, 291, 434, 7579, 50648, 50648, 281, 14853, 4007, 300, 311, 689, 291, 528, 281, 14853, 4007, 457, 550, 437, 644, 295, 264, 3089, 307, 6250, 50922, 50922, 337, 14853, 424, 3759, 731, 498, 291, 534, 528, 281, 652, 988, 300, 309, 311, 787, 1143, 294, 264, 14721, 51228, 51228, 636, 558, 370, 456, 311, 411, 652, 6243, 4368, 6243, 457, 550, 437, 466, 411, 51452, 51452, 764, 1412, 294, 264, 14721, 2098, 558, 293, 300, 311, 437, 264, 472, 1590, 3945, 307, 337, 370, 562, 291, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.05872283398526386, "compression_ratio": 1.9424778761061947, "no_caption_prob": 1.1659356459858827e-05}, {"id": 321, "seek": 198572, "start": 2003.0, "end": 2007.48, "text": " way right so there's like make impossible states impossible but then what about like", "tokens": [50364, 3825, 1230, 370, 370, 411, 291, 645, 1417, 466, 613, 14709, 2793, 689, 291, 434, 7579, 50648, 50648, 281, 14853, 4007, 300, 311, 689, 291, 528, 281, 14853, 4007, 457, 550, 437, 644, 295, 264, 3089, 307, 6250, 50922, 50922, 337, 14853, 424, 3759, 731, 498, 291, 534, 528, 281, 652, 988, 300, 309, 311, 787, 1143, 294, 264, 14721, 51228, 51228, 636, 558, 370, 456, 311, 411, 652, 6243, 4368, 6243, 457, 550, 437, 466, 411, 51452, 51452, 764, 1412, 294, 264, 14721, 2098, 558, 293, 300, 311, 437, 264, 472, 1590, 3945, 307, 337, 370, 562, 291, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.05872283398526386, "compression_ratio": 1.9424778761061947, "no_caption_prob": 1.1659356459858827e-05}, {"id": 322, "seek": 198572, "start": 2007.48, "end": 2015.2, "text": " use data in the desired ways right and that's what the one stop shop is for so when you", "tokens": [50364, 3825, 1230, 370, 370, 411, 291, 645, 1417, 466, 613, 14709, 2793, 689, 291, 434, 7579, 50648, 50648, 281, 14853, 4007, 300, 311, 689, 291, 528, 281, 14853, 4007, 457, 550, 437, 644, 295, 264, 3089, 307, 6250, 50922, 50922, 337, 14853, 424, 3759, 731, 498, 291, 534, 528, 281, 652, 988, 300, 309, 311, 787, 1143, 294, 264, 14721, 51228, 51228, 636, 558, 370, 456, 311, 411, 652, 6243, 4368, 6243, 457, 550, 437, 466, 411, 51452, 51452, 764, 1412, 294, 264, 14721, 2098, 558, 293, 300, 311, 437, 264, 472, 1590, 3945, 307, 337, 370, 562, 291, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.05872283398526386, "compression_ratio": 1.9424778761061947, "no_caption_prob": 1.1659356459858827e-05}, {"id": 323, "seek": 201520, "start": 2015.2, "end": 2020.88, "text": " get to those terminal points sure you could say social security number dot two string", "tokens": [50364, 483, 281, 729, 14709, 2793, 988, 291, 727, 584, 2093, 3825, 1230, 5893, 732, 6798, 50648, 50648, 457, 437, 437, 300, 1355, 307, 300, 291, 550, 362, 281, 588, 7500, 5586, 300, 633, 1081, 50986, 50986, 294, 428, 3089, 3096, 300, 291, 818, 2093, 3825, 1230, 5893, 732, 6798, 307, 1096, 38254, 729, 51324, 51324, 18491, 293, 2914, 3545, 2086, 2293, 2293, 558, 370, 457, 498, 291, 829, 300, 6357, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.0737548067763045, "compression_ratio": 1.8894736842105264, "no_caption_prob": 2.6687523131840862e-05}, {"id": 324, "seek": 201520, "start": 2020.88, "end": 2027.64, "text": " but what what that means is that you then have to very carefully ensure that every place", "tokens": [50364, 483, 281, 729, 14709, 2793, 988, 291, 727, 584, 2093, 3825, 1230, 5893, 732, 6798, 50648, 50648, 457, 437, 437, 300, 1355, 307, 300, 291, 550, 362, 281, 588, 7500, 5586, 300, 633, 1081, 50986, 50986, 294, 428, 3089, 3096, 300, 291, 818, 2093, 3825, 1230, 5893, 732, 6798, 307, 1096, 38254, 729, 51324, 51324, 18491, 293, 2914, 3545, 2086, 2293, 2293, 558, 370, 457, 498, 291, 829, 300, 6357, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.0737548067763045, "compression_ratio": 1.8894736842105264, "no_caption_prob": 2.6687523131840862e-05}, {"id": 325, "seek": 201520, "start": 2027.64, "end": 2034.4, "text": " in your code base that you call social security number dot two string is done honoring those", "tokens": [50364, 483, 281, 729, 14709, 2793, 988, 291, 727, 584, 2093, 3825, 1230, 5893, 732, 6798, 50648, 50648, 457, 437, 437, 300, 1355, 307, 300, 291, 550, 362, 281, 588, 7500, 5586, 300, 633, 1081, 50986, 50986, 294, 428, 3089, 3096, 300, 291, 818, 2093, 3825, 1230, 5893, 732, 6798, 307, 1096, 38254, 729, 51324, 51324, 18491, 293, 2914, 3545, 2086, 2293, 2293, 558, 370, 457, 498, 291, 829, 300, 6357, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.0737548067763045, "compression_ratio": 1.8894736842105264, "no_caption_prob": 2.6687523131840862e-05}, {"id": 326, "seek": 201520, "start": 2034.4, "end": 2045.1200000000001, "text": " constraints and responsibly yes exactly exactly right so but if you put that responsibility", "tokens": [50364, 483, 281, 729, 14709, 2793, 988, 291, 727, 584, 2093, 3825, 1230, 5893, 732, 6798, 50648, 50648, 457, 437, 437, 300, 1355, 307, 300, 291, 550, 362, 281, 588, 7500, 5586, 300, 633, 1081, 50986, 50986, 294, 428, 3089, 3096, 300, 291, 818, 2093, 3825, 1230, 5893, 732, 6798, 307, 1096, 38254, 729, 51324, 51324, 18491, 293, 2914, 3545, 2086, 2293, 2293, 558, 370, 457, 498, 291, 829, 300, 6357, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.0737548067763045, "compression_ratio": 1.8894736842105264, "no_caption_prob": 2.6687523131840862e-05}, {"id": 327, "seek": 204512, "start": 2045.12, "end": 2050.4, "text": " in the one stop shop you have the social security number module which contains an opaque type", "tokens": [50364, 294, 264, 472, 1590, 3945, 291, 362, 264, 2093, 3825, 1230, 10088, 597, 8306, 364, 42687, 2010, 50628, 50628, 309, 1177, 380, 19219, 257, 636, 281, 7690, 472, 19071, 3289, 293, 291, 584, 2093, 3825, 1230, 5893, 1910, 51126, 51126, 558, 293, 370, 293, 291, 393, 584, 411, 2093, 3825, 1230, 5893, 291, 727, 362, 257, 45249, 1910, 498, 51424, 51424, 264, 787, 636, 291, 528, 281, 1974, 309, 294, 264, 15682, 291, 458, 1310, 291, 362, 512, 4846, 2424, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05776011376153855, "compression_ratio": 1.7864077669902914, "no_caption_prob": 5.649576269206591e-05}, {"id": 328, "seek": 204512, "start": 2050.4, "end": 2060.3599999999997, "text": " it doesn't expose a way to construct one arbitrarily and you say social security number dot view", "tokens": [50364, 294, 264, 472, 1590, 3945, 291, 362, 264, 2093, 3825, 1230, 10088, 597, 8306, 364, 42687, 2010, 50628, 50628, 309, 1177, 380, 19219, 257, 636, 281, 7690, 472, 19071, 3289, 293, 291, 584, 2093, 3825, 1230, 5893, 1910, 51126, 51126, 558, 293, 370, 293, 291, 393, 584, 411, 2093, 3825, 1230, 5893, 291, 727, 362, 257, 45249, 1910, 498, 51424, 51424, 264, 787, 636, 291, 528, 281, 1974, 309, 294, 264, 15682, 291, 458, 1310, 291, 362, 512, 4846, 2424, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05776011376153855, "compression_ratio": 1.7864077669902914, "no_caption_prob": 5.649576269206591e-05}, {"id": 329, "seek": 204512, "start": 2060.3599999999997, "end": 2066.3199999999997, "text": " right and so and you can say like social security number dot you could have a masked view if", "tokens": [50364, 294, 264, 472, 1590, 3945, 291, 362, 264, 2093, 3825, 1230, 10088, 597, 8306, 364, 42687, 2010, 50628, 50628, 309, 1177, 380, 19219, 257, 636, 281, 7690, 472, 19071, 3289, 293, 291, 584, 2093, 3825, 1230, 5893, 1910, 51126, 51126, 558, 293, 370, 293, 291, 393, 584, 411, 2093, 3825, 1230, 5893, 291, 727, 362, 257, 45249, 1910, 498, 51424, 51424, 264, 787, 636, 291, 528, 281, 1974, 309, 294, 264, 15682, 291, 458, 1310, 291, 362, 512, 4846, 2424, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05776011376153855, "compression_ratio": 1.7864077669902914, "no_caption_prob": 5.649576269206591e-05}, {"id": 330, "seek": 204512, "start": 2066.3199999999997, "end": 2070.72, "text": " the only way you want to present it in the UI you know maybe you have some input box", "tokens": [50364, 294, 264, 472, 1590, 3945, 291, 362, 264, 2093, 3825, 1230, 10088, 597, 8306, 364, 42687, 2010, 50628, 50628, 309, 1177, 380, 19219, 257, 636, 281, 7690, 472, 19071, 3289, 293, 291, 584, 2093, 3825, 1230, 5893, 1910, 51126, 51126, 558, 293, 370, 293, 291, 393, 584, 411, 2093, 3825, 1230, 5893, 291, 727, 362, 257, 45249, 1910, 498, 51424, 51424, 264, 787, 636, 291, 528, 281, 1974, 309, 294, 264, 15682, 291, 458, 1310, 291, 362, 512, 4846, 2424, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.05776011376153855, "compression_ratio": 1.7864077669902914, "no_caption_prob": 5.649576269206591e-05}, {"id": 331, "seek": 207072, "start": 2070.72, "end": 2078.48, "text": " that if it's focused it's unmasked and if it's not focused it's masked right you could", "tokens": [50364, 300, 498, 309, 311, 5178, 309, 311, 517, 3799, 34601, 293, 498, 309, 311, 406, 5178, 309, 311, 45249, 558, 291, 727, 50752, 50752, 291, 291, 727, 5968, 300, 9952, 294, 264, 2093, 3825, 1230, 10088, 558, 370, 498, 291, 6964, 51004, 51004, 300, 300, 733, 295, 1910, 9952, 294, 300, 10088, 586, 291, 787, 643, 281, 574, 294, 428, 472, 1590, 51262, 51262, 3945, 293, 300, 311, 6250, 337, 309, 293, 572, 661, 3089, 2203, 281, 747, 322, 300, 6357, 51488, 51488, 1338, 457, 309, 775, 7582, 291, 281, 257, 2685, 11420, 411, 498, 291, 528, 281, 362, 300, 45249, 4846, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10801453860300891, "compression_ratio": 1.9029535864978904, "no_caption_prob": 3.089467099925969e-06}, {"id": 332, "seek": 207072, "start": 2078.48, "end": 2083.52, "text": " you you could honor that logic in the social security number module right so if you define", "tokens": [50364, 300, 498, 309, 311, 5178, 309, 311, 517, 3799, 34601, 293, 498, 309, 311, 406, 5178, 309, 311, 45249, 558, 291, 727, 50752, 50752, 291, 291, 727, 5968, 300, 9952, 294, 264, 2093, 3825, 1230, 10088, 558, 370, 498, 291, 6964, 51004, 51004, 300, 300, 733, 295, 1910, 9952, 294, 300, 10088, 586, 291, 787, 643, 281, 574, 294, 428, 472, 1590, 51262, 51262, 3945, 293, 300, 311, 6250, 337, 309, 293, 572, 661, 3089, 2203, 281, 747, 322, 300, 6357, 51488, 51488, 1338, 457, 309, 775, 7582, 291, 281, 257, 2685, 11420, 411, 498, 291, 528, 281, 362, 300, 45249, 4846, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10801453860300891, "compression_ratio": 1.9029535864978904, "no_caption_prob": 3.089467099925969e-06}, {"id": 333, "seek": 207072, "start": 2083.52, "end": 2088.68, "text": " that that kind of view logic in that module now you only need to look in your one stop", "tokens": [50364, 300, 498, 309, 311, 5178, 309, 311, 517, 3799, 34601, 293, 498, 309, 311, 406, 5178, 309, 311, 45249, 558, 291, 727, 50752, 50752, 291, 291, 727, 5968, 300, 9952, 294, 264, 2093, 3825, 1230, 10088, 558, 370, 498, 291, 6964, 51004, 51004, 300, 300, 733, 295, 1910, 9952, 294, 300, 10088, 586, 291, 787, 643, 281, 574, 294, 428, 472, 1590, 51262, 51262, 3945, 293, 300, 311, 6250, 337, 309, 293, 572, 661, 3089, 2203, 281, 747, 322, 300, 6357, 51488, 51488, 1338, 457, 309, 775, 7582, 291, 281, 257, 2685, 11420, 411, 498, 291, 528, 281, 362, 300, 45249, 4846, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10801453860300891, "compression_ratio": 1.9029535864978904, "no_caption_prob": 3.089467099925969e-06}, {"id": 334, "seek": 207072, "start": 2088.68, "end": 2093.2, "text": " shop and that's responsible for it and no other code needs to take on that responsibility", "tokens": [50364, 300, 498, 309, 311, 5178, 309, 311, 517, 3799, 34601, 293, 498, 309, 311, 406, 5178, 309, 311, 45249, 558, 291, 727, 50752, 50752, 291, 291, 727, 5968, 300, 9952, 294, 264, 2093, 3825, 1230, 10088, 558, 370, 498, 291, 6964, 51004, 51004, 300, 300, 733, 295, 1910, 9952, 294, 300, 10088, 586, 291, 787, 643, 281, 574, 294, 428, 472, 1590, 51262, 51262, 3945, 293, 300, 311, 6250, 337, 309, 293, 572, 661, 3089, 2203, 281, 747, 322, 300, 6357, 51488, 51488, 1338, 457, 309, 775, 7582, 291, 281, 257, 2685, 11420, 411, 498, 291, 528, 281, 362, 300, 45249, 4846, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10801453860300891, "compression_ratio": 1.9029535864978904, "no_caption_prob": 3.089467099925969e-06}, {"id": 335, "seek": 207072, "start": 2093.2, "end": 2100.04, "text": " yeah but it does tie you to a specific implementation like if you want to have that masked input", "tokens": [50364, 300, 498, 309, 311, 5178, 309, 311, 517, 3799, 34601, 293, 498, 309, 311, 406, 5178, 309, 311, 45249, 558, 291, 727, 50752, 50752, 291, 291, 727, 5968, 300, 9952, 294, 264, 2093, 3825, 1230, 10088, 558, 370, 498, 291, 6964, 51004, 51004, 300, 300, 733, 295, 1910, 9952, 294, 300, 10088, 586, 291, 787, 643, 281, 574, 294, 428, 472, 1590, 51262, 51262, 3945, 293, 300, 311, 6250, 337, 309, 293, 572, 661, 3089, 2203, 281, 747, 322, 300, 6357, 51488, 51488, 1338, 457, 309, 775, 7582, 291, 281, 257, 2685, 11420, 411, 498, 291, 528, 281, 362, 300, 45249, 4846, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10801453860300891, "compression_ratio": 1.9029535864978904, "no_caption_prob": 3.089467099925969e-06}, {"id": 336, "seek": 210004, "start": 2100.04, "end": 2108.12, "text": " masked input then it needs to look a specific way and if you want to use it in a different", "tokens": [50364, 45249, 4846, 550, 309, 2203, 281, 574, 257, 2685, 636, 293, 498, 291, 528, 281, 764, 309, 294, 257, 819, 50768, 50768, 1081, 689, 309, 1542, 4748, 819, 550, 291, 434, 516, 281, 643, 281, 829, 300, 294, 264, 912, 50978, 50978, 10088, 382, 731, 293, 286, 393, 3811, 300, 341, 727, 483, 12414, 498, 291, 643, 1589, 490, 51274, 51274, 1071, 42687, 2010, 382, 731, 597, 4960, 264, 912, 7512, 411, 291, 643, 281, 855, 1293, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.07079231003184377, "compression_ratio": 1.7233009708737863, "no_caption_prob": 3.8223108276724815e-05}, {"id": 337, "seek": 210004, "start": 2108.12, "end": 2112.32, "text": " place where it looks slightly different then you're going to need to put that in the same", "tokens": [50364, 45249, 4846, 550, 309, 2203, 281, 574, 257, 2685, 636, 293, 498, 291, 528, 281, 764, 309, 294, 257, 819, 50768, 50768, 1081, 689, 309, 1542, 4748, 819, 550, 291, 434, 516, 281, 643, 281, 829, 300, 294, 264, 912, 50978, 50978, 10088, 382, 731, 293, 286, 393, 3811, 300, 341, 727, 483, 12414, 498, 291, 643, 1589, 490, 51274, 51274, 1071, 42687, 2010, 382, 731, 597, 4960, 264, 912, 7512, 411, 291, 643, 281, 855, 1293, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.07079231003184377, "compression_ratio": 1.7233009708737863, "no_caption_prob": 3.8223108276724815e-05}, {"id": 338, "seek": 210004, "start": 2112.32, "end": 2118.24, "text": " module as well and I can imagine that this could get tricky if you need information from", "tokens": [50364, 45249, 4846, 550, 309, 2203, 281, 574, 257, 2685, 636, 293, 498, 291, 528, 281, 764, 309, 294, 257, 819, 50768, 50768, 1081, 689, 309, 1542, 4748, 819, 550, 291, 434, 516, 281, 643, 281, 829, 300, 294, 264, 912, 50978, 50978, 10088, 382, 731, 293, 286, 393, 3811, 300, 341, 727, 483, 12414, 498, 291, 643, 1589, 490, 51274, 51274, 1071, 42687, 2010, 382, 731, 597, 4960, 264, 912, 7512, 411, 291, 643, 281, 855, 1293, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.07079231003184377, "compression_ratio": 1.7233009708737863, "no_caption_prob": 3.8223108276724815e-05}, {"id": 339, "seek": 210004, "start": 2118.24, "end": 2124.6, "text": " another opaque type as well which uses the same techniques like you need to show both", "tokens": [50364, 45249, 4846, 550, 309, 2203, 281, 574, 257, 2685, 636, 293, 498, 291, 528, 281, 764, 309, 294, 257, 819, 50768, 50768, 1081, 689, 309, 1542, 4748, 819, 550, 291, 434, 516, 281, 643, 281, 829, 300, 294, 264, 912, 50978, 50978, 10088, 382, 731, 293, 286, 393, 3811, 300, 341, 727, 483, 12414, 498, 291, 643, 1589, 490, 51274, 51274, 1071, 42687, 2010, 382, 731, 597, 4960, 264, 912, 7512, 411, 291, 643, 281, 855, 1293, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.07079231003184377, "compression_ratio": 1.7233009708737863, "no_caption_prob": 3.8223108276724815e-05}, {"id": 340, "seek": 212460, "start": 2124.6, "end": 2134.0, "text": " the social security number and some other secret id or number and like both neither", "tokens": [50364, 264, 2093, 3825, 1230, 293, 512, 661, 4054, 4496, 420, 1230, 293, 411, 1293, 9662, 50834, 50834, 295, 552, 393, 855, 264, 661, 370, 1338, 370, 291, 4725, 643, 281, 829, 309, 281, 976, 472, 544, 51162, 51162, 1969, 807, 456, 420, 445, 976, 1969, 281, 1071, 10088, 370, 291, 2138, 362, 281, 51484, 51484, 312, 5026, 466, 689, 291, 2642, 729, 26764, 3876, 295, 729, 13180, 337, 428, 42687, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09874418619516734, "compression_ratio": 1.751269035532995, "no_caption_prob": 3.0239087209338322e-05}, {"id": 341, "seek": 212460, "start": 2134.0, "end": 2140.56, "text": " of them can show the other so yeah so you necessarily need to put it to give one more", "tokens": [50364, 264, 2093, 3825, 1230, 293, 512, 661, 4054, 4496, 420, 1230, 293, 411, 1293, 9662, 50834, 50834, 295, 552, 393, 855, 264, 661, 370, 1338, 370, 291, 4725, 643, 281, 829, 309, 281, 976, 472, 544, 51162, 51162, 1969, 807, 456, 420, 445, 976, 1969, 281, 1071, 10088, 370, 291, 2138, 362, 281, 51484, 51484, 312, 5026, 466, 689, 291, 2642, 729, 26764, 3876, 295, 729, 13180, 337, 428, 42687, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09874418619516734, "compression_ratio": 1.751269035532995, "no_caption_prob": 3.0239087209338322e-05}, {"id": 342, "seek": 212460, "start": 2140.56, "end": 2147.0, "text": " control through there or just give control to another module so you definitely have to", "tokens": [50364, 264, 2093, 3825, 1230, 293, 512, 661, 4054, 4496, 420, 1230, 293, 411, 1293, 9662, 50834, 50834, 295, 552, 393, 855, 264, 661, 370, 1338, 370, 291, 4725, 643, 281, 829, 309, 281, 976, 472, 544, 51162, 51162, 1969, 807, 456, 420, 445, 976, 1969, 281, 1071, 10088, 370, 291, 2138, 362, 281, 51484, 51484, 312, 5026, 466, 689, 291, 2642, 729, 26764, 3876, 295, 729, 13180, 337, 428, 42687, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09874418619516734, "compression_ratio": 1.751269035532995, "no_caption_prob": 3.0239087209338322e-05}, {"id": 343, "seek": 212460, "start": 2147.0, "end": 2152.04, "text": " be careful about where you draw those dividing lines of those boundaries for your opaque", "tokens": [50364, 264, 2093, 3825, 1230, 293, 512, 661, 4054, 4496, 420, 1230, 293, 411, 1293, 9662, 50834, 50834, 295, 552, 393, 855, 264, 661, 370, 1338, 370, 291, 4725, 643, 281, 829, 309, 281, 976, 472, 544, 51162, 51162, 1969, 807, 456, 420, 445, 976, 1969, 281, 1071, 10088, 370, 291, 2138, 362, 281, 51484, 51484, 312, 5026, 466, 689, 291, 2642, 729, 26764, 3876, 295, 729, 13180, 337, 428, 42687, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.09874418619516734, "compression_ratio": 1.751269035532995, "no_caption_prob": 3.0239087209338322e-05}, {"id": 344, "seek": 215204, "start": 2152.04, "end": 2159.08, "text": " types and yeah you you know you you want to decouple these things as much as you can but", "tokens": [50364, 3467, 293, 1338, 291, 291, 458, 291, 291, 528, 281, 979, 263, 781, 613, 721, 382, 709, 382, 291, 393, 457, 50716, 50716, 286, 519, 309, 311, 257, 1238, 1238, 4005, 6532, 2318, 562, 291, 528, 281, 312, 411, 797, 50992, 50992, 337, 746, 411, 257, 2093, 3825, 1230, 411, 286, 286, 519, 291, 362, 281, 519, 466, 437, 51220, 51220, 18491, 360, 291, 528, 281, 281, 24825, 293, 291, 458, 498, 309, 311, 411, 7363, 30351, 550, 51622, 51622, 291, 393, 291, 393, 362, 257, 490, 6798, 300, 311, 2489, 558, 411, 1338, 411, 577, 1021, 307, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.093414166394402, "compression_ratio": 1.858974358974359, "no_caption_prob": 5.224933920544572e-05}, {"id": 345, "seek": 215204, "start": 2159.08, "end": 2164.6, "text": " I think it's a pretty pretty powerful technique especially when you want to be like again", "tokens": [50364, 3467, 293, 1338, 291, 291, 458, 291, 291, 528, 281, 979, 263, 781, 613, 721, 382, 709, 382, 291, 393, 457, 50716, 50716, 286, 519, 309, 311, 257, 1238, 1238, 4005, 6532, 2318, 562, 291, 528, 281, 312, 411, 797, 50992, 50992, 337, 746, 411, 257, 2093, 3825, 1230, 411, 286, 286, 519, 291, 362, 281, 519, 466, 437, 51220, 51220, 18491, 360, 291, 528, 281, 281, 24825, 293, 291, 458, 498, 309, 311, 411, 7363, 30351, 550, 51622, 51622, 291, 393, 291, 393, 362, 257, 490, 6798, 300, 311, 2489, 558, 411, 1338, 411, 577, 1021, 307, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.093414166394402, "compression_ratio": 1.858974358974359, "no_caption_prob": 5.224933920544572e-05}, {"id": 346, "seek": 215204, "start": 2164.6, "end": 2169.16, "text": " for something like a social security number like I I think you have to think about what", "tokens": [50364, 3467, 293, 1338, 291, 291, 458, 291, 291, 528, 281, 979, 263, 781, 613, 721, 382, 709, 382, 291, 393, 457, 50716, 50716, 286, 519, 309, 311, 257, 1238, 1238, 4005, 6532, 2318, 562, 291, 528, 281, 312, 411, 797, 50992, 50992, 337, 746, 411, 257, 2093, 3825, 1230, 411, 286, 286, 519, 291, 362, 281, 519, 466, 437, 51220, 51220, 18491, 360, 291, 528, 281, 281, 24825, 293, 291, 458, 498, 309, 311, 411, 7363, 30351, 550, 51622, 51622, 291, 393, 291, 393, 362, 257, 490, 6798, 300, 311, 2489, 558, 411, 1338, 411, 577, 1021, 307, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.093414166394402, "compression_ratio": 1.858974358974359, "no_caption_prob": 5.224933920544572e-05}, {"id": 347, "seek": 215204, "start": 2169.16, "end": 2177.2, "text": " constraints do you want to to enforce and you know if it's like valid username then", "tokens": [50364, 3467, 293, 1338, 291, 291, 458, 291, 291, 528, 281, 979, 263, 781, 613, 721, 382, 709, 382, 291, 393, 457, 50716, 50716, 286, 519, 309, 311, 257, 1238, 1238, 4005, 6532, 2318, 562, 291, 528, 281, 312, 411, 797, 50992, 50992, 337, 746, 411, 257, 2093, 3825, 1230, 411, 286, 286, 519, 291, 362, 281, 519, 466, 437, 51220, 51220, 18491, 360, 291, 528, 281, 281, 24825, 293, 291, 458, 498, 309, 311, 411, 7363, 30351, 550, 51622, 51622, 291, 393, 291, 393, 362, 257, 490, 6798, 300, 311, 2489, 558, 411, 1338, 411, 577, 1021, 307, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.093414166394402, "compression_ratio": 1.858974358974359, "no_caption_prob": 5.224933920544572e-05}, {"id": 348, "seek": 215204, "start": 2177.2, "end": 2181.8, "text": " you can you can have a from string that's fine right like yeah like how important is", "tokens": [50364, 3467, 293, 1338, 291, 291, 458, 291, 291, 528, 281, 979, 263, 781, 613, 721, 382, 709, 382, 291, 393, 457, 50716, 50716, 286, 519, 309, 311, 257, 1238, 1238, 4005, 6532, 2318, 562, 291, 528, 281, 312, 411, 797, 50992, 50992, 337, 746, 411, 257, 2093, 3825, 1230, 411, 286, 286, 519, 291, 362, 281, 519, 466, 437, 51220, 51220, 18491, 360, 291, 528, 281, 281, 24825, 293, 291, 458, 498, 309, 311, 411, 7363, 30351, 550, 51622, 51622, 291, 393, 291, 393, 362, 257, 490, 6798, 300, 311, 2489, 558, 411, 1338, 411, 577, 1021, 307, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.093414166394402, "compression_ratio": 1.858974358974359, "no_caption_prob": 5.224933920544572e-05}, {"id": 349, "seek": 218180, "start": 2181.8, "end": 2189.8, "text": " it for you to to get the thing right how how costful for you is it to get things wrong", "tokens": [50364, 309, 337, 291, 281, 281, 483, 264, 551, 558, 577, 577, 2063, 906, 337, 291, 307, 309, 281, 483, 721, 2085, 50764, 50764, 2093, 3825, 1230, 1238, 1021, 370, 718, 311, 909, 544, 3825, 926, 309, 718, 311, 652, 51043, 51043, 309, 257, 857, 544, 12414, 718, 311, 1310, 976, 309, 257, 857, 544, 6357, 457, 337, 257, 30351, 51308, 51308, 337, 364, 3796, 2985, 411, 909, 257, 281, 6798, 909, 257, 490, 6798, 309, 311, 2489, 382, 938, 382, 321, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.08922493317547966, "compression_ratio": 1.801047120418848, "no_caption_prob": 1.3845602552464698e-05}, {"id": 350, "seek": 218180, "start": 2189.8, "end": 2195.38, "text": " social security number pretty important so let's add more security around it let's make", "tokens": [50364, 309, 337, 291, 281, 281, 483, 264, 551, 558, 577, 577, 2063, 906, 337, 291, 307, 309, 281, 483, 721, 2085, 50764, 50764, 2093, 3825, 1230, 1238, 1021, 370, 718, 311, 909, 544, 3825, 926, 309, 718, 311, 652, 51043, 51043, 309, 257, 857, 544, 12414, 718, 311, 1310, 976, 309, 257, 857, 544, 6357, 457, 337, 257, 30351, 51308, 51308, 337, 364, 3796, 2985, 411, 909, 257, 281, 6798, 909, 257, 490, 6798, 309, 311, 2489, 382, 938, 382, 321, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.08922493317547966, "compression_ratio": 1.801047120418848, "no_caption_prob": 1.3845602552464698e-05}, {"id": 351, "seek": 218180, "start": 2195.38, "end": 2200.6800000000003, "text": " it a bit more tricky let's maybe give it a bit more responsibility but for a username", "tokens": [50364, 309, 337, 291, 281, 281, 483, 264, 551, 558, 577, 577, 2063, 906, 337, 291, 307, 309, 281, 483, 721, 2085, 50764, 50764, 2093, 3825, 1230, 1238, 1021, 370, 718, 311, 909, 544, 3825, 926, 309, 718, 311, 652, 51043, 51043, 309, 257, 857, 544, 12414, 718, 311, 1310, 976, 309, 257, 857, 544, 6357, 457, 337, 257, 30351, 51308, 51308, 337, 364, 3796, 2985, 411, 909, 257, 281, 6798, 909, 257, 490, 6798, 309, 311, 2489, 382, 938, 382, 321, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.08922493317547966, "compression_ratio": 1.801047120418848, "no_caption_prob": 1.3845602552464698e-05}, {"id": 352, "seek": 218180, "start": 2200.6800000000003, "end": 2206.5600000000004, "text": " for an email address like add a to string add a from string it's fine as long as we", "tokens": [50364, 309, 337, 291, 281, 281, 483, 264, 551, 558, 577, 577, 2063, 906, 337, 291, 307, 309, 281, 483, 721, 2085, 50764, 50764, 2093, 3825, 1230, 1238, 1021, 370, 718, 311, 909, 544, 3825, 926, 309, 718, 311, 652, 51043, 51043, 309, 257, 857, 544, 12414, 718, 311, 1310, 976, 309, 257, 857, 544, 6357, 457, 337, 257, 30351, 51308, 51308, 337, 364, 3796, 2985, 411, 909, 257, 281, 6798, 909, 257, 490, 6798, 309, 311, 2489, 382, 938, 382, 321, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.08922493317547966, "compression_ratio": 1.801047120418848, "no_caption_prob": 1.3845602552464698e-05}, {"id": 353, "seek": 220656, "start": 2206.56, "end": 2213.16, "text": " can remove most of these errors of related to primitive obsession for instance you should", "tokens": [50364, 393, 4159, 881, 295, 613, 13603, 295, 4077, 281, 28540, 30521, 337, 5197, 291, 820, 50694, 50694, 312, 2489, 558, 286, 914, 300, 311, 300, 311, 466, 512, 885, 46904, 281, 512, 8396, 558, 309, 311, 50990, 50990, 411, 360, 577, 709, 3825, 360, 321, 643, 577, 3700, 307, 309, 281, 300, 291, 483, 364, 6713, 293, 300, 309, 51286, 51286, 10834, 456, 337, 257, 1339, 293, 420, 300, 309, 754, 2170, 281, 4265, 2086, 286, 519, 309, 311, 382, 291, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.10665940677418428, "compression_ratio": 1.6904761904761905, "no_caption_prob": 4.683679071604274e-05}, {"id": 354, "seek": 220656, "start": 2213.16, "end": 2219.08, "text": " be fine right I mean that's that's about some being pragmatic to some extent right it's", "tokens": [50364, 393, 4159, 881, 295, 613, 13603, 295, 4077, 281, 28540, 30521, 337, 5197, 291, 820, 50694, 50694, 312, 2489, 558, 286, 914, 300, 311, 300, 311, 466, 512, 885, 46904, 281, 512, 8396, 558, 309, 311, 50990, 50990, 411, 360, 577, 709, 3825, 360, 321, 643, 577, 3700, 307, 309, 281, 300, 291, 483, 364, 6713, 293, 300, 309, 51286, 51286, 10834, 456, 337, 257, 1339, 293, 420, 300, 309, 754, 2170, 281, 4265, 2086, 286, 519, 309, 311, 382, 291, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.10665940677418428, "compression_ratio": 1.6904761904761905, "no_caption_prob": 4.683679071604274e-05}, {"id": 355, "seek": 220656, "start": 2219.08, "end": 2225.0, "text": " like do how much security do we need how likely is it to that you get an error and that it", "tokens": [50364, 393, 4159, 881, 295, 613, 13603, 295, 4077, 281, 28540, 30521, 337, 5197, 291, 820, 50694, 50694, 312, 2489, 558, 286, 914, 300, 311, 300, 311, 466, 512, 885, 46904, 281, 512, 8396, 558, 309, 311, 50990, 50990, 411, 360, 577, 709, 3825, 360, 321, 643, 577, 3700, 307, 309, 281, 300, 291, 483, 364, 6713, 293, 300, 309, 51286, 51286, 10834, 456, 337, 257, 1339, 293, 420, 300, 309, 754, 2170, 281, 4265, 2086, 286, 519, 309, 311, 382, 291, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.10665940677418428, "compression_ratio": 1.6904761904761905, "no_caption_prob": 4.683679071604274e-05}, {"id": 356, "seek": 220656, "start": 2225.0, "end": 2230.6, "text": " stays there for a while and or that it even gets to production yes I think it's as you", "tokens": [50364, 393, 4159, 881, 295, 613, 13603, 295, 4077, 281, 28540, 30521, 337, 5197, 291, 820, 50694, 50694, 312, 2489, 558, 286, 914, 300, 311, 300, 311, 466, 512, 885, 46904, 281, 512, 8396, 558, 309, 311, 50990, 50990, 411, 360, 577, 709, 3825, 360, 321, 643, 577, 3700, 307, 309, 281, 300, 291, 483, 364, 6713, 293, 300, 309, 51286, 51286, 10834, 456, 337, 257, 1339, 293, 420, 300, 309, 754, 2170, 281, 4265, 2086, 286, 519, 309, 311, 382, 291, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.10665940677418428, "compression_ratio": 1.6904761904761905, "no_caption_prob": 4.683679071604274e-05}, {"id": 357, "seek": 223060, "start": 2230.6, "end": 2236.92, "text": " say it's pragmatic and it's also just what unique things do you need to do with the type", "tokens": [50364, 584, 309, 311, 46904, 293, 309, 311, 611, 445, 437, 3845, 721, 360, 291, 643, 281, 360, 365, 264, 2010, 50680, 50680, 498, 456, 311, 3845, 9952, 337, 577, 291, 1974, 257, 2093, 3825, 1230, 420, 17436, 5660, 2093, 50984, 50984, 3825, 1230, 550, 294, 4500, 281, 885, 9477, 293, 293, 7935, 281, 312, 988, 300, 51248, 51248, 291, 434, 7500, 11642, 309, 293, 293, 11750, 11642, 309, 456, 311, 611, 2685, 9952, 337, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.07162040319198217, "compression_ratio": 1.7766497461928934, "no_caption_prob": 7.966507837409154e-05}, {"id": 358, "seek": 223060, "start": 2236.92, "end": 2243.0, "text": " if there's unique logic for how you present a social security number or serializes social", "tokens": [50364, 584, 309, 311, 46904, 293, 309, 311, 611, 445, 437, 3845, 721, 360, 291, 643, 281, 360, 365, 264, 2010, 50680, 50680, 498, 456, 311, 3845, 9952, 337, 577, 291, 1974, 257, 2093, 3825, 1230, 420, 17436, 5660, 2093, 50984, 50984, 3825, 1230, 550, 294, 4500, 281, 885, 9477, 293, 293, 7935, 281, 312, 988, 300, 51248, 51248, 291, 434, 7500, 11642, 309, 293, 293, 11750, 11642, 309, 456, 311, 611, 2685, 9952, 337, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.07162040319198217, "compression_ratio": 1.7766497461928934, "no_caption_prob": 7.966507837409154e-05}, {"id": 359, "seek": 223060, "start": 2243.0, "end": 2248.2799999999997, "text": " security number then in addition to being sensitive and and wanting to be sure that", "tokens": [50364, 584, 309, 311, 46904, 293, 309, 311, 611, 445, 437, 3845, 721, 360, 291, 643, 281, 360, 365, 264, 2010, 50680, 50680, 498, 456, 311, 3845, 9952, 337, 577, 291, 1974, 257, 2093, 3825, 1230, 420, 17436, 5660, 2093, 50984, 50984, 3825, 1230, 550, 294, 4500, 281, 885, 9477, 293, 293, 7935, 281, 312, 988, 300, 51248, 51248, 291, 434, 7500, 11642, 309, 293, 293, 11750, 11642, 309, 456, 311, 611, 2685, 9952, 337, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.07162040319198217, "compression_ratio": 1.7766497461928934, "no_caption_prob": 7.966507837409154e-05}, {"id": 360, "seek": 223060, "start": 2248.2799999999997, "end": 2254.2, "text": " you're carefully managing it and and safely managing it there's also specific logic for", "tokens": [50364, 584, 309, 311, 46904, 293, 309, 311, 611, 445, 437, 3845, 721, 360, 291, 643, 281, 360, 365, 264, 2010, 50680, 50680, 498, 456, 311, 3845, 9952, 337, 577, 291, 1974, 257, 2093, 3825, 1230, 420, 17436, 5660, 2093, 50984, 50984, 3825, 1230, 550, 294, 4500, 281, 885, 9477, 293, 293, 7935, 281, 312, 988, 300, 51248, 51248, 291, 434, 7500, 11642, 309, 293, 293, 11750, 11642, 309, 456, 311, 611, 2685, 9952, 337, 51544, 51544], "temperature": 0.0, "avg_logprob": -0.07162040319198217, "compression_ratio": 1.7766497461928934, "no_caption_prob": 7.966507837409154e-05}, {"id": 361, "seek": 225420, "start": 2254.2, "end": 2261.48, "text": " how to present it and serialize it right maybe you if you're whatever you know encrypting", "tokens": [50364, 577, 281, 1974, 309, 293, 17436, 1125, 309, 558, 1310, 291, 498, 291, 434, 2035, 291, 458, 17972, 662, 278, 50728, 50728, 309, 949, 291, 17436, 1125, 309, 281, 2845, 309, 281, 264, 7154, 420, 746, 411, 300, 550, 309, 311, 1481, 51004, 51004, 281, 362, 300, 9952, 1621, 12385, 309, 370, 291, 393, 312, 988, 300, 309, 311, 885, 6453, 8944, 51308, 51308, 309, 307, 257, 7363, 30351, 558, 291, 362, 257, 30351, 2010, 291, 584, 30351, 5893, 490, 6798, 797, 51644, 51644, 264, 30351, 1177, 380, 980, 291, 689, 309, 1361, 490, 309, 445, 5112, 291, 300, 309, 1437, 807, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0578333521788975, "compression_ratio": 1.8907563025210083, "no_caption_prob": 1.6187133951461874e-05}, {"id": 362, "seek": 225420, "start": 2261.48, "end": 2267.0, "text": " it before you serialize it to send it to the server or something like that then it's nice", "tokens": [50364, 577, 281, 1974, 309, 293, 17436, 1125, 309, 558, 1310, 291, 498, 291, 434, 2035, 291, 458, 17972, 662, 278, 50728, 50728, 309, 949, 291, 17436, 1125, 309, 281, 2845, 309, 281, 264, 7154, 420, 746, 411, 300, 550, 309, 311, 1481, 51004, 51004, 281, 362, 300, 9952, 1621, 12385, 309, 370, 291, 393, 312, 988, 300, 309, 311, 885, 6453, 8944, 51308, 51308, 309, 307, 257, 7363, 30351, 558, 291, 362, 257, 30351, 2010, 291, 584, 30351, 5893, 490, 6798, 797, 51644, 51644, 264, 30351, 1177, 380, 980, 291, 689, 309, 1361, 490, 309, 445, 5112, 291, 300, 309, 1437, 807, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0578333521788975, "compression_ratio": 1.8907563025210083, "no_caption_prob": 1.6187133951461874e-05}, {"id": 363, "seek": 225420, "start": 2267.0, "end": 2273.08, "text": " to have that logic live alongside it so you can be sure that it's being managed correctly", "tokens": [50364, 577, 281, 1974, 309, 293, 17436, 1125, 309, 558, 1310, 291, 498, 291, 434, 2035, 291, 458, 17972, 662, 278, 50728, 50728, 309, 949, 291, 17436, 1125, 309, 281, 2845, 309, 281, 264, 7154, 420, 746, 411, 300, 550, 309, 311, 1481, 51004, 51004, 281, 362, 300, 9952, 1621, 12385, 309, 370, 291, 393, 312, 988, 300, 309, 311, 885, 6453, 8944, 51308, 51308, 309, 307, 257, 7363, 30351, 558, 291, 362, 257, 30351, 2010, 291, 584, 30351, 5893, 490, 6798, 797, 51644, 51644, 264, 30351, 1177, 380, 980, 291, 689, 309, 1361, 490, 309, 445, 5112, 291, 300, 309, 1437, 807, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0578333521788975, "compression_ratio": 1.8907563025210083, "no_caption_prob": 1.6187133951461874e-05}, {"id": 364, "seek": 225420, "start": 2273.08, "end": 2279.7999999999997, "text": " it is a valid username right you have a username type you say username dot from string again", "tokens": [50364, 577, 281, 1974, 309, 293, 17436, 1125, 309, 558, 1310, 291, 498, 291, 434, 2035, 291, 458, 17972, 662, 278, 50728, 50728, 309, 949, 291, 17436, 1125, 309, 281, 2845, 309, 281, 264, 7154, 420, 746, 411, 300, 550, 309, 311, 1481, 51004, 51004, 281, 362, 300, 9952, 1621, 12385, 309, 370, 291, 393, 312, 988, 300, 309, 311, 885, 6453, 8944, 51308, 51308, 309, 307, 257, 7363, 30351, 558, 291, 362, 257, 30351, 2010, 291, 584, 30351, 5893, 490, 6798, 797, 51644, 51644, 264, 30351, 1177, 380, 980, 291, 689, 309, 1361, 490, 309, 445, 5112, 291, 300, 309, 1437, 807, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0578333521788975, "compression_ratio": 1.8907563025210083, "no_caption_prob": 1.6187133951461874e-05}, {"id": 365, "seek": 225420, "start": 2279.7999999999997, "end": 2283.0, "text": " the username doesn't tell you where it came from it just tells you that it went through", "tokens": [50364, 577, 281, 1974, 309, 293, 17436, 1125, 309, 558, 1310, 291, 498, 291, 434, 2035, 291, 458, 17972, 662, 278, 50728, 50728, 309, 949, 291, 17436, 1125, 309, 281, 2845, 309, 281, 264, 7154, 420, 746, 411, 300, 550, 309, 311, 1481, 51004, 51004, 281, 362, 300, 9952, 1621, 12385, 309, 370, 291, 393, 312, 988, 300, 309, 311, 885, 6453, 8944, 51308, 51308, 309, 307, 257, 7363, 30351, 558, 291, 362, 257, 30351, 2010, 291, 584, 30351, 5893, 490, 6798, 797, 51644, 51644, 264, 30351, 1177, 380, 980, 291, 689, 309, 1361, 490, 309, 445, 5112, 291, 300, 309, 1437, 807, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.0578333521788975, "compression_ratio": 1.8907563025210083, "no_caption_prob": 1.6187133951461874e-05}, {"id": 366, "seek": 228300, "start": 2283.0, "end": 2288.44, "text": " this validation that said this doesn't have any at symbols or exclamation points or it", "tokens": [50364, 341, 24071, 300, 848, 341, 1177, 380, 362, 604, 412, 16944, 420, 1624, 43233, 2793, 420, 309, 50636, 50636, 575, 472, 412, 264, 2863, 558, 5413, 322, 264, 3663, 558, 558, 558, 1338, 2035, 50896, 50896, 13834, 309, 575, 309, 309, 311, 8568, 729, 293, 550, 577, 360, 291, 4674, 309, 731, 445, 976, 385, 264, 51190, 51190, 6798, 741, 445, 528, 281, 829, 309, 741, 528, 281, 829, 309, 4079, 293, 741, 445, 643, 264, 6798, 293, 51402, 51402, 300, 311, 300, 300, 393, 312, 2489, 558, 370, 411, 452, 935, 307, 1105, 309, 311, 406, 787, 466, 885, 46904, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08192035130092076, "compression_ratio": 1.8506224066390042, "no_caption_prob": 4.86041744807153e-06}, {"id": 367, "seek": 228300, "start": 2288.44, "end": 2293.64, "text": " has one at the beginning right depending on the platform right right right yeah whatever", "tokens": [50364, 341, 24071, 300, 848, 341, 1177, 380, 362, 604, 412, 16944, 420, 1624, 43233, 2793, 420, 309, 50636, 50636, 575, 472, 412, 264, 2863, 558, 5413, 322, 264, 3663, 558, 558, 558, 1338, 2035, 50896, 50896, 13834, 309, 575, 309, 309, 311, 8568, 729, 293, 550, 577, 360, 291, 4674, 309, 731, 445, 976, 385, 264, 51190, 51190, 6798, 741, 445, 528, 281, 829, 309, 741, 528, 281, 829, 309, 4079, 293, 741, 445, 643, 264, 6798, 293, 51402, 51402, 300, 311, 300, 300, 393, 312, 2489, 558, 370, 411, 452, 935, 307, 1105, 309, 311, 406, 787, 466, 885, 46904, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08192035130092076, "compression_ratio": 1.8506224066390042, "no_caption_prob": 4.86041744807153e-06}, {"id": 368, "seek": 228300, "start": 2293.64, "end": 2299.52, "text": " checks it has it it's checking those and then how do you display it well just give me the", "tokens": [50364, 341, 24071, 300, 848, 341, 1177, 380, 362, 604, 412, 16944, 420, 1624, 43233, 2793, 420, 309, 50636, 50636, 575, 472, 412, 264, 2863, 558, 5413, 322, 264, 3663, 558, 558, 558, 1338, 2035, 50896, 50896, 13834, 309, 575, 309, 309, 311, 8568, 729, 293, 550, 577, 360, 291, 4674, 309, 731, 445, 976, 385, 264, 51190, 51190, 6798, 741, 445, 528, 281, 829, 309, 741, 528, 281, 829, 309, 4079, 293, 741, 445, 643, 264, 6798, 293, 51402, 51402, 300, 311, 300, 300, 393, 312, 2489, 558, 370, 411, 452, 935, 307, 1105, 309, 311, 406, 787, 466, 885, 46904, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08192035130092076, "compression_ratio": 1.8506224066390042, "no_caption_prob": 4.86041744807153e-06}, {"id": 369, "seek": 228300, "start": 2299.52, "end": 2303.76, "text": " string i just want to put it i want to put it somewhere and i just need the string and", "tokens": [50364, 341, 24071, 300, 848, 341, 1177, 380, 362, 604, 412, 16944, 420, 1624, 43233, 2793, 420, 309, 50636, 50636, 575, 472, 412, 264, 2863, 558, 5413, 322, 264, 3663, 558, 558, 558, 1338, 2035, 50896, 50896, 13834, 309, 575, 309, 309, 311, 8568, 729, 293, 550, 577, 360, 291, 4674, 309, 731, 445, 976, 385, 264, 51190, 51190, 6798, 741, 445, 528, 281, 829, 309, 741, 528, 281, 829, 309, 4079, 293, 741, 445, 643, 264, 6798, 293, 51402, 51402, 300, 311, 300, 300, 393, 312, 2489, 558, 370, 411, 452, 935, 307, 1105, 309, 311, 406, 787, 466, 885, 46904, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08192035130092076, "compression_ratio": 1.8506224066390042, "no_caption_prob": 4.86041744807153e-06}, {"id": 370, "seek": 228300, "start": 2303.76, "end": 2310.24, "text": " that's that that can be fine right so like my point is um it's not only about being pragmatic", "tokens": [50364, 341, 24071, 300, 848, 341, 1177, 380, 362, 604, 412, 16944, 420, 1624, 43233, 2793, 420, 309, 50636, 50636, 575, 472, 412, 264, 2863, 558, 5413, 322, 264, 3663, 558, 558, 558, 1338, 2035, 50896, 50896, 13834, 309, 575, 309, 309, 311, 8568, 729, 293, 550, 577, 360, 291, 4674, 309, 731, 445, 976, 385, 264, 51190, 51190, 6798, 741, 445, 528, 281, 829, 309, 741, 528, 281, 829, 309, 4079, 293, 741, 445, 643, 264, 6798, 293, 51402, 51402, 300, 311, 300, 300, 393, 312, 2489, 558, 370, 411, 452, 935, 307, 1105, 309, 311, 406, 787, 466, 885, 46904, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08192035130092076, "compression_ratio": 1.8506224066390042, "no_caption_prob": 4.86041744807153e-06}, {"id": 371, "seek": 231024, "start": 2310.24, "end": 2316.08, "text": " and saying like how bad would it be if this was used incorrectly how how carefully do", "tokens": [50364, 293, 1566, 411, 577, 1578, 576, 309, 312, 498, 341, 390, 1143, 42892, 577, 577, 7500, 360, 50656, 50656, 741, 643, 281, 3067, 341, 281, 312, 988, 741, 478, 9477, 356, 11642, 341, 1412, 457, 309, 311, 611, 466, 307, 50976, 50976, 456, 604, 2121, 9952, 293, 498, 309, 311, 411, 257, 30351, 309, 311, 411, 572, 741, 445, 528, 281, 855, 51240, 51240, 341, 30351, 510, 456, 311, 1825, 2121, 466, 577, 741, 855, 257, 30351, 741, 445, 643, 264, 51426, 51426, 6798, 586, 570, 741, 1116, 411, 281, 829, 309, 322, 264, 2568, 291, 458, 420, 741, 528, 281, 483, 291, 458, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.05200285823256881, "compression_ratio": 1.891304347826087, "no_caption_prob": 4.133349284529686e-05}, {"id": 372, "seek": 231024, "start": 2316.08, "end": 2322.4799999999996, "text": " i need to manage this to be sure i'm sensitively managing this data but it's also about is", "tokens": [50364, 293, 1566, 411, 577, 1578, 576, 309, 312, 498, 341, 390, 1143, 42892, 577, 577, 7500, 360, 50656, 50656, 741, 643, 281, 3067, 341, 281, 312, 988, 741, 478, 9477, 356, 11642, 341, 1412, 457, 309, 311, 611, 466, 307, 50976, 50976, 456, 604, 2121, 9952, 293, 498, 309, 311, 411, 257, 30351, 309, 311, 411, 572, 741, 445, 528, 281, 855, 51240, 51240, 341, 30351, 510, 456, 311, 1825, 2121, 466, 577, 741, 855, 257, 30351, 741, 445, 643, 264, 51426, 51426, 6798, 586, 570, 741, 1116, 411, 281, 829, 309, 322, 264, 2568, 291, 458, 420, 741, 528, 281, 483, 291, 458, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.05200285823256881, "compression_ratio": 1.891304347826087, "no_caption_prob": 4.133349284529686e-05}, {"id": 373, "seek": 231024, "start": 2322.4799999999996, "end": 2327.7599999999998, "text": " there any special logic and if it's like a username it's like no i just want to show", "tokens": [50364, 293, 1566, 411, 577, 1578, 576, 309, 312, 498, 341, 390, 1143, 42892, 577, 577, 7500, 360, 50656, 50656, 741, 643, 281, 3067, 341, 281, 312, 988, 741, 478, 9477, 356, 11642, 341, 1412, 457, 309, 311, 611, 466, 307, 50976, 50976, 456, 604, 2121, 9952, 293, 498, 309, 311, 411, 257, 30351, 309, 311, 411, 572, 741, 445, 528, 281, 855, 51240, 51240, 341, 30351, 510, 456, 311, 1825, 2121, 466, 577, 741, 855, 257, 30351, 741, 445, 643, 264, 51426, 51426, 6798, 586, 570, 741, 1116, 411, 281, 829, 309, 322, 264, 2568, 291, 458, 420, 741, 528, 281, 483, 291, 458, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.05200285823256881, "compression_ratio": 1.891304347826087, "no_caption_prob": 4.133349284529686e-05}, {"id": 374, "seek": 231024, "start": 2327.7599999999998, "end": 2331.4799999999996, "text": " this username here there's nothing special about how i show a username i just need the", "tokens": [50364, 293, 1566, 411, 577, 1578, 576, 309, 312, 498, 341, 390, 1143, 42892, 577, 577, 7500, 360, 50656, 50656, 741, 643, 281, 3067, 341, 281, 312, 988, 741, 478, 9477, 356, 11642, 341, 1412, 457, 309, 311, 611, 466, 307, 50976, 50976, 456, 604, 2121, 9952, 293, 498, 309, 311, 411, 257, 30351, 309, 311, 411, 572, 741, 445, 528, 281, 855, 51240, 51240, 341, 30351, 510, 456, 311, 1825, 2121, 466, 577, 741, 855, 257, 30351, 741, 445, 643, 264, 51426, 51426, 6798, 586, 570, 741, 1116, 411, 281, 829, 309, 322, 264, 2568, 291, 458, 420, 741, 528, 281, 483, 291, 458, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.05200285823256881, "compression_ratio": 1.891304347826087, "no_caption_prob": 4.133349284529686e-05}, {"id": 375, "seek": 231024, "start": 2331.4799999999996, "end": 2336.64, "text": " string now because i'd like to put it on the screen you know or i want to get you know", "tokens": [50364, 293, 1566, 411, 577, 1578, 576, 309, 312, 498, 341, 390, 1143, 42892, 577, 577, 7500, 360, 50656, 50656, 741, 643, 281, 3067, 341, 281, 312, 988, 741, 478, 9477, 356, 11642, 341, 1412, 457, 309, 311, 611, 466, 307, 50976, 50976, 456, 604, 2121, 9952, 293, 498, 309, 311, 411, 257, 30351, 309, 311, 411, 572, 741, 445, 528, 281, 855, 51240, 51240, 341, 30351, 510, 456, 311, 1825, 2121, 466, 577, 741, 855, 257, 30351, 741, 445, 643, 264, 51426, 51426, 6798, 586, 570, 741, 1116, 411, 281, 829, 309, 322, 264, 2568, 291, 458, 420, 741, 528, 281, 483, 291, 458, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.05200285823256881, "compression_ratio": 1.891304347826087, "no_caption_prob": 4.133349284529686e-05}, {"id": 376, "seek": 233664, "start": 2336.64, "end": 2341.2, "text": " i want to compare these two usernames and just give me the strings so i can compare", "tokens": [50364, 741, 528, 281, 6794, 613, 732, 505, 1248, 1632, 293, 445, 976, 385, 264, 13985, 370, 741, 393, 6794, 50592, 50592, 552, 291, 458, 456, 311, 572, 2121, 9952, 337, 577, 741, 6794, 732, 505, 1248, 1632, 370, 741, 500, 380, 643, 50796, 50796, 281, 6964, 257, 30351, 5893, 307, 2681, 2445, 570, 456, 311, 1825, 2121, 466, 300, 51080, 51080, 370, 983, 576, 741, 558, 370, 294, 300, 1389, 291, 445, 500, 380, 483, 604, 2158, 490, 17827, 604, 10644, 51414, 51414, 6828, 291, 445, 528, 281, 483, 300, 28540, 2158, 562, 291, 562, 291, 14853, 4007, 309, 293, 291, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.051195921216692246, "compression_ratio": 1.9, "no_caption_prob": 1.2805230653611943e-05}, {"id": 377, "seek": 233664, "start": 2341.2, "end": 2345.2799999999997, "text": " them you know there's no special logic for how i compare two usernames so i don't need", "tokens": [50364, 741, 528, 281, 6794, 613, 732, 505, 1248, 1632, 293, 445, 976, 385, 264, 13985, 370, 741, 393, 6794, 50592, 50592, 552, 291, 458, 456, 311, 572, 2121, 9952, 337, 577, 741, 6794, 732, 505, 1248, 1632, 370, 741, 500, 380, 643, 50796, 50796, 281, 6964, 257, 30351, 5893, 307, 2681, 2445, 570, 456, 311, 1825, 2121, 466, 300, 51080, 51080, 370, 983, 576, 741, 558, 370, 294, 300, 1389, 291, 445, 500, 380, 483, 604, 2158, 490, 17827, 604, 10644, 51414, 51414, 6828, 291, 445, 528, 281, 483, 300, 28540, 2158, 562, 291, 562, 291, 14853, 4007, 309, 293, 291, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.051195921216692246, "compression_ratio": 1.9, "no_caption_prob": 1.2805230653611943e-05}, {"id": 378, "seek": 233664, "start": 2345.2799999999997, "end": 2350.96, "text": " to define a username dot is equal function because there's nothing special about that", "tokens": [50364, 741, 528, 281, 6794, 613, 732, 505, 1248, 1632, 293, 445, 976, 385, 264, 13985, 370, 741, 393, 6794, 50592, 50592, 552, 291, 458, 456, 311, 572, 2121, 9952, 337, 577, 741, 6794, 732, 505, 1248, 1632, 370, 741, 500, 380, 643, 50796, 50796, 281, 6964, 257, 30351, 5893, 307, 2681, 2445, 570, 456, 311, 1825, 2121, 466, 300, 51080, 51080, 370, 983, 576, 741, 558, 370, 294, 300, 1389, 291, 445, 500, 380, 483, 604, 2158, 490, 17827, 604, 10644, 51414, 51414, 6828, 291, 445, 528, 281, 483, 300, 28540, 2158, 562, 291, 562, 291, 14853, 4007, 309, 293, 291, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.051195921216692246, "compression_ratio": 1.9, "no_caption_prob": 1.2805230653611943e-05}, {"id": 379, "seek": 233664, "start": 2350.96, "end": 2357.64, "text": " so why would i right so in that case you just don't get any value from defining any distinct", "tokens": [50364, 741, 528, 281, 6794, 613, 732, 505, 1248, 1632, 293, 445, 976, 385, 264, 13985, 370, 741, 393, 6794, 50592, 50592, 552, 291, 458, 456, 311, 572, 2121, 9952, 337, 577, 741, 6794, 732, 505, 1248, 1632, 370, 741, 500, 380, 643, 50796, 50796, 281, 6964, 257, 30351, 5893, 307, 2681, 2445, 570, 456, 311, 1825, 2121, 466, 300, 51080, 51080, 370, 983, 576, 741, 558, 370, 294, 300, 1389, 291, 445, 500, 380, 483, 604, 2158, 490, 17827, 604, 10644, 51414, 51414, 6828, 291, 445, 528, 281, 483, 300, 28540, 2158, 562, 291, 562, 291, 14853, 4007, 309, 293, 291, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.051195921216692246, "compression_ratio": 1.9, "no_caption_prob": 1.2805230653611943e-05}, {"id": 380, "seek": 233664, "start": 2357.64, "end": 2362.3199999999997, "text": " functions you just want to get that primitive value when you when you unwrap it and you", "tokens": [50364, 741, 528, 281, 6794, 613, 732, 505, 1248, 1632, 293, 445, 976, 385, 264, 13985, 370, 741, 393, 6794, 50592, 50592, 552, 291, 458, 456, 311, 572, 2121, 9952, 337, 577, 741, 6794, 732, 505, 1248, 1632, 370, 741, 500, 380, 643, 50796, 50796, 281, 6964, 257, 30351, 5893, 307, 2681, 2445, 570, 456, 311, 1825, 2121, 466, 300, 51080, 51080, 370, 983, 576, 741, 558, 370, 294, 300, 1389, 291, 445, 500, 380, 483, 604, 2158, 490, 17827, 604, 10644, 51414, 51414, 6828, 291, 445, 528, 281, 483, 300, 28540, 2158, 562, 291, 562, 291, 14853, 4007, 309, 293, 291, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.051195921216692246, "compression_ratio": 1.9, "no_caption_prob": 1.2805230653611943e-05}, {"id": 381, "seek": 236232, "start": 2362.32, "end": 2368.0, "text": " want to try to unwrap late but it's fine to just then get the primitive and use that so", "tokens": [50364, 528, 281, 853, 281, 14853, 4007, 3469, 457, 309, 311, 2489, 281, 445, 550, 483, 264, 28540, 293, 764, 300, 370, 50648, 50648, 729, 366, 264, 721, 300, 741, 478, 1953, 466, 562, 741, 478, 17990, 597, 597, 3100, 281, 352, 760, 50910, 50910, 370, 456, 311, 472, 1859, 300, 741, 600, 668, 1333, 295, 1953, 466, 294, 9721, 281, 341, 7019, 2440, 51174, 51174, 14853, 4007, 3469, 6532, 597, 307, 1163, 2123, 341, 3410, 295, 1163, 2123, 490, 257, 4009, 295, 3494, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.05833238842843593, "compression_ratio": 1.8020304568527918, "no_caption_prob": 5.1438299124129117e-05}, {"id": 382, "seek": 236232, "start": 2368.0, "end": 2373.2400000000002, "text": " those are the things that i'm thinking about when i'm deciding which which path to go down", "tokens": [50364, 528, 281, 853, 281, 14853, 4007, 3469, 457, 309, 311, 2489, 281, 445, 550, 483, 264, 28540, 293, 764, 300, 370, 50648, 50648, 729, 366, 264, 721, 300, 741, 478, 1953, 466, 562, 741, 478, 17990, 597, 597, 3100, 281, 352, 760, 50910, 50910, 370, 456, 311, 472, 1859, 300, 741, 600, 668, 1333, 295, 1953, 466, 294, 9721, 281, 341, 7019, 2440, 51174, 51174, 14853, 4007, 3469, 6532, 597, 307, 1163, 2123, 341, 3410, 295, 1163, 2123, 490, 257, 4009, 295, 3494, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.05833238842843593, "compression_ratio": 1.8020304568527918, "no_caption_prob": 5.1438299124129117e-05}, {"id": 383, "seek": 236232, "start": 2373.2400000000002, "end": 2378.52, "text": " so there's one area that i've been sort of thinking about in relation to this wrap early", "tokens": [50364, 528, 281, 853, 281, 14853, 4007, 3469, 457, 309, 311, 2489, 281, 445, 550, 483, 264, 28540, 293, 764, 300, 370, 50648, 50648, 729, 366, 264, 721, 300, 741, 478, 1953, 466, 562, 741, 478, 17990, 597, 597, 3100, 281, 352, 760, 50910, 50910, 370, 456, 311, 472, 1859, 300, 741, 600, 668, 1333, 295, 1953, 466, 294, 9721, 281, 341, 7019, 2440, 51174, 51174, 14853, 4007, 3469, 6532, 597, 307, 1163, 2123, 341, 3410, 295, 1163, 2123, 490, 257, 4009, 295, 3494, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.05833238842843593, "compression_ratio": 1.8020304568527918, "no_caption_prob": 5.1438299124129117e-05}, {"id": 384, "seek": 236232, "start": 2378.52, "end": 2385.1000000000004, "text": " unwrap late technique which is deriving this concept of deriving from a source of truth", "tokens": [50364, 528, 281, 853, 281, 14853, 4007, 3469, 457, 309, 311, 2489, 281, 445, 550, 483, 264, 28540, 293, 764, 300, 370, 50648, 50648, 729, 366, 264, 721, 300, 741, 478, 1953, 466, 562, 741, 478, 17990, 597, 597, 3100, 281, 352, 760, 50910, 50910, 370, 456, 311, 472, 1859, 300, 741, 600, 668, 1333, 295, 1953, 466, 294, 9721, 281, 341, 7019, 2440, 51174, 51174, 14853, 4007, 3469, 6532, 597, 307, 1163, 2123, 341, 3410, 295, 1163, 2123, 490, 257, 4009, 295, 3494, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.05833238842843593, "compression_ratio": 1.8020304568527918, "no_caption_prob": 5.1438299124129117e-05}, {"id": 385, "seek": 238510, "start": 2385.1, "end": 2393.68, "text": " so i think one one important distinction about deriving about wrapping is you don't necessarily", "tokens": [50364, 370, 741, 519, 472, 472, 1021, 16844, 466, 1163, 2123, 466, 21993, 307, 291, 500, 380, 4725, 50793, 50793, 643, 291, 500, 380, 643, 281, 48377, 721, 666, 5405, 18519, 1412, 294, 1668, 281, 7019, 1338, 291, 51091, 51091, 393, 445, 909, 257, 2375, 2010, 47479, 337, 30351, 337, 5197, 558, 2293, 293, 309, 311, 51401, 51401, 445, 21993, 257, 6798, 293, 291, 458, 370, 2049, 291, 528, 281, 48377, 500, 380, 29562, 370, 291, 500, 380, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.077162907447344, "compression_ratio": 1.7843137254901962, "no_caption_prob": 1.0615820428938605e-05}, {"id": 386, "seek": 238510, "start": 2393.68, "end": 2399.64, "text": " need you don't need to parse things into highly structured data in order to wrap yeah you", "tokens": [50364, 370, 741, 519, 472, 472, 1021, 16844, 466, 1163, 2123, 466, 21993, 307, 291, 500, 380, 4725, 50793, 50793, 643, 291, 500, 380, 643, 281, 48377, 721, 666, 5405, 18519, 1412, 294, 1668, 281, 7019, 1338, 291, 51091, 51091, 393, 445, 909, 257, 2375, 2010, 47479, 337, 30351, 337, 5197, 558, 2293, 293, 309, 311, 51401, 51401, 445, 21993, 257, 6798, 293, 291, 458, 370, 2049, 291, 528, 281, 48377, 500, 380, 29562, 370, 291, 500, 380, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.077162907447344, "compression_ratio": 1.7843137254901962, "no_caption_prob": 1.0615820428938605e-05}, {"id": 387, "seek": 238510, "start": 2399.64, "end": 2405.8399999999997, "text": " can just add a custom type constructor for username for instance right exactly and it's", "tokens": [50364, 370, 741, 519, 472, 472, 1021, 16844, 466, 1163, 2123, 466, 21993, 307, 291, 500, 380, 4725, 50793, 50793, 643, 291, 500, 380, 643, 281, 48377, 721, 666, 5405, 18519, 1412, 294, 1668, 281, 7019, 1338, 291, 51091, 51091, 393, 445, 909, 257, 2375, 2010, 47479, 337, 30351, 337, 5197, 558, 2293, 293, 309, 311, 51401, 51401, 445, 21993, 257, 6798, 293, 291, 458, 370, 2049, 291, 528, 281, 48377, 500, 380, 29562, 370, 291, 500, 380, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.077162907447344, "compression_ratio": 1.7843137254901962, "no_caption_prob": 1.0615820428938605e-05}, {"id": 388, "seek": 238510, "start": 2405.8399999999997, "end": 2410.8399999999997, "text": " just wrapping a string and you know so often you want to parse don't validate so you don't", "tokens": [50364, 370, 741, 519, 472, 472, 1021, 16844, 466, 1163, 2123, 466, 21993, 307, 291, 500, 380, 4725, 50793, 50793, 643, 291, 500, 380, 643, 281, 48377, 721, 666, 5405, 18519, 1412, 294, 1668, 281, 7019, 1338, 291, 51091, 51091, 393, 445, 909, 257, 2375, 2010, 47479, 337, 30351, 337, 5197, 558, 2293, 293, 309, 311, 51401, 51401, 445, 21993, 257, 6798, 293, 291, 458, 370, 2049, 291, 528, 281, 48377, 500, 380, 29562, 370, 291, 500, 380, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.077162907447344, "compression_ratio": 1.7843137254901962, "no_caption_prob": 1.0615820428938605e-05}, {"id": 389, "seek": 241084, "start": 2410.84, "end": 2417.36, "text": " want to keep repeatedly checking for an error state over and over but but it can be okay", "tokens": [50364, 528, 281, 1066, 18227, 8568, 337, 364, 6713, 1785, 670, 293, 670, 457, 457, 309, 393, 312, 1392, 50690, 50690, 281, 445, 7019, 746, 293, 584, 4177, 341, 551, 8855, 341, 2010, 295, 551, 293, 445, 829, 50962, 50962, 257, 46906, 926, 257, 2295, 1496, 2010, 309, 1177, 380, 370, 291, 458, 2171, 321, 393, 411, 741, 600, 668, 51314, 51314, 1953, 466, 341, 365, 1105, 365, 11642, 6422, 337, 1365, 411, 6423, 1252, 1254, 24071, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.05423914194107056, "compression_ratio": 1.7177033492822966, "no_caption_prob": 3.3931103189388523e-06}, {"id": 390, "seek": 241084, "start": 2417.36, "end": 2422.8, "text": " to just wrap something and say hey this thing represents this type of thing and just put", "tokens": [50364, 528, 281, 1066, 18227, 8568, 337, 364, 6713, 1785, 670, 293, 670, 457, 457, 309, 393, 312, 1392, 50690, 50690, 281, 445, 7019, 746, 293, 584, 4177, 341, 551, 8855, 341, 2010, 295, 551, 293, 445, 829, 50962, 50962, 257, 46906, 926, 257, 2295, 1496, 2010, 309, 1177, 380, 370, 291, 458, 2171, 321, 393, 411, 741, 600, 668, 51314, 51314, 1953, 466, 341, 365, 1105, 365, 11642, 6422, 337, 1365, 411, 6423, 1252, 1254, 24071, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.05423914194107056, "compression_ratio": 1.7177033492822966, "no_caption_prob": 3.3931103189388523e-06}, {"id": 391, "seek": 241084, "start": 2422.8, "end": 2429.84, "text": " a wrapper around a low level type it doesn't so you know sometimes we can like i've been", "tokens": [50364, 528, 281, 1066, 18227, 8568, 337, 364, 6713, 1785, 670, 293, 670, 457, 457, 309, 393, 312, 1392, 50690, 50690, 281, 445, 7019, 746, 293, 584, 4177, 341, 551, 8855, 341, 2010, 295, 551, 293, 445, 829, 50962, 50962, 257, 46906, 926, 257, 2295, 1496, 2010, 309, 1177, 380, 370, 291, 458, 2171, 321, 393, 411, 741, 600, 668, 51314, 51314, 1953, 466, 341, 365, 1105, 365, 11642, 6422, 337, 1365, 411, 6423, 1252, 1254, 24071, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.05423914194107056, "compression_ratio": 1.7177033492822966, "no_caption_prob": 3.3931103189388523e-06}, {"id": 392, "seek": 241084, "start": 2429.84, "end": 2435.56, "text": " thinking about this with um with managing forms for example like client side form validation", "tokens": [50364, 528, 281, 1066, 18227, 8568, 337, 364, 6713, 1785, 670, 293, 670, 457, 457, 309, 393, 312, 1392, 50690, 50690, 281, 445, 7019, 746, 293, 584, 4177, 341, 551, 8855, 341, 2010, 295, 551, 293, 445, 829, 50962, 50962, 257, 46906, 926, 257, 2295, 1496, 2010, 309, 1177, 380, 370, 291, 458, 2171, 321, 393, 411, 741, 600, 668, 51314, 51314, 1953, 466, 341, 365, 1105, 365, 11642, 6422, 337, 1365, 411, 6423, 1252, 1254, 24071, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.05423914194107056, "compression_ratio": 1.7177033492822966, "no_caption_prob": 3.3931103189388523e-06}, {"id": 393, "seek": 243556, "start": 2435.56, "end": 2442.56, "text": " i've been sort of questioning this like kind of classic elm way of dealing with forms where", "tokens": [50364, 741, 600, 668, 1333, 295, 21257, 341, 411, 733, 295, 7230, 806, 76, 636, 295, 6260, 365, 6422, 689, 50714, 50714, 321, 362, 411, 257, 2136, 365, 700, 1315, 1036, 1315, 597, 366, 13985, 293, 321, 362, 341, 411, 51152, 51152, 5405, 18519, 2010, 291, 914, 281, 584, 300, 406, 439, 6422, 643, 281, 5304, 264, 700, 1315, 51378, 51378, 293, 264, 1036, 1315, 731, 300, 390, 445, 1566, 741, 914, 544, 411, 983, 360, 321, 1127, 437, 1729, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09244989487062018, "compression_ratio": 1.7733990147783252, "no_caption_prob": 1.221852744492935e-05}, {"id": 394, "seek": 243556, "start": 2442.56, "end": 2451.32, "text": " we have like a record with first name last name which are strings and we have this like", "tokens": [50364, 741, 600, 668, 1333, 295, 21257, 341, 411, 733, 295, 7230, 806, 76, 636, 295, 6260, 365, 6422, 689, 50714, 50714, 321, 362, 411, 257, 2136, 365, 700, 1315, 1036, 1315, 597, 366, 13985, 293, 321, 362, 341, 411, 51152, 51152, 5405, 18519, 2010, 291, 914, 281, 584, 300, 406, 439, 6422, 643, 281, 5304, 264, 700, 1315, 51378, 51378, 293, 264, 1036, 1315, 731, 300, 390, 445, 1566, 741, 914, 544, 411, 983, 360, 321, 1127, 437, 1729, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09244989487062018, "compression_ratio": 1.7733990147783252, "no_caption_prob": 1.221852744492935e-05}, {"id": 395, "seek": 243556, "start": 2451.32, "end": 2455.84, "text": " highly structured type you mean to say that not all forms need to contain the first name", "tokens": [50364, 741, 600, 668, 1333, 295, 21257, 341, 411, 733, 295, 7230, 806, 76, 636, 295, 6260, 365, 6422, 689, 50714, 50714, 321, 362, 411, 257, 2136, 365, 700, 1315, 1036, 1315, 597, 366, 13985, 293, 321, 362, 341, 411, 51152, 51152, 5405, 18519, 2010, 291, 914, 281, 584, 300, 406, 439, 6422, 643, 281, 5304, 264, 700, 1315, 51378, 51378, 293, 264, 1036, 1315, 731, 300, 390, 445, 1566, 741, 914, 544, 411, 983, 360, 321, 1127, 437, 1729, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09244989487062018, "compression_ratio": 1.7733990147783252, "no_caption_prob": 1.221852744492935e-05}, {"id": 396, "seek": 243556, "start": 2455.84, "end": 2464.32, "text": " and the last name well that was just saying i mean more like why do we care what particular", "tokens": [50364, 741, 600, 668, 1333, 295, 21257, 341, 411, 733, 295, 7230, 806, 76, 636, 295, 6260, 365, 6422, 689, 50714, 50714, 321, 362, 411, 257, 2136, 365, 700, 1315, 1036, 1315, 597, 366, 13985, 293, 321, 362, 341, 411, 51152, 51152, 5405, 18519, 2010, 291, 914, 281, 584, 300, 406, 439, 6422, 643, 281, 5304, 264, 700, 1315, 51378, 51378, 293, 264, 1036, 1315, 731, 300, 390, 445, 1566, 741, 914, 544, 411, 983, 360, 321, 1127, 437, 1729, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.09244989487062018, "compression_ratio": 1.7733990147783252, "no_caption_prob": 1.221852744492935e-05}, {"id": 397, "seek": 246432, "start": 2464.32, "end": 2469.8, "text": " fields there could be why don't like why don't we just have key value pairs and say hey these", "tokens": [50364, 7909, 456, 727, 312, 983, 500, 380, 411, 983, 500, 380, 321, 445, 362, 2141, 2158, 15494, 293, 584, 4177, 613, 50638, 50638, 366, 445, 412, 264, 917, 295, 264, 786, 264, 2295, 1496, 10290, 307, 445, 257, 6798, 293, 13038, 50911, 50911, 264, 4195, 3467, 257, 2517, 741, 643, 281, 29562, 300, 281, 980, 552, 498, 456, 366, 13603, 293, 51208, 51208, 983, 360, 321, 352, 281, 264, 5253, 295, 1419, 341, 5405, 18519, 1412, 370, 2171, 411, 34877, 356, 51475, 51475, 21156, 278, 1412, 666, 746, 544, 18519, 1177, 380, 2893, 2158, 570, 321, 528, 281, 1333, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.06059466056453371, "compression_ratio": 1.824, "no_caption_prob": 9.818182661547326e-06}, {"id": 398, "seek": 246432, "start": 2469.8, "end": 2475.26, "text": " are just at the end of the day the low level representation is just a string and anytime", "tokens": [50364, 7909, 456, 727, 312, 983, 500, 380, 411, 983, 500, 380, 321, 445, 362, 2141, 2158, 15494, 293, 584, 4177, 613, 50638, 50638, 366, 445, 412, 264, 917, 295, 264, 786, 264, 2295, 1496, 10290, 307, 445, 257, 6798, 293, 13038, 50911, 50911, 264, 4195, 3467, 257, 2517, 741, 643, 281, 29562, 300, 281, 980, 552, 498, 456, 366, 13603, 293, 51208, 51208, 983, 360, 321, 352, 281, 264, 5253, 295, 1419, 341, 5405, 18519, 1412, 370, 2171, 411, 34877, 356, 51475, 51475, 21156, 278, 1412, 666, 746, 544, 18519, 1177, 380, 2893, 2158, 570, 321, 528, 281, 1333, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.06059466056453371, "compression_ratio": 1.824, "no_caption_prob": 9.818182661547326e-06}, {"id": 399, "seek": 246432, "start": 2475.26, "end": 2481.2000000000003, "text": " the user types a character i need to validate that to tell them if there are errors and", "tokens": [50364, 7909, 456, 727, 312, 983, 500, 380, 411, 983, 500, 380, 321, 445, 362, 2141, 2158, 15494, 293, 584, 4177, 613, 50638, 50638, 366, 445, 412, 264, 917, 295, 264, 786, 264, 2295, 1496, 10290, 307, 445, 257, 6798, 293, 13038, 50911, 50911, 264, 4195, 3467, 257, 2517, 741, 643, 281, 29562, 300, 281, 980, 552, 498, 456, 366, 13603, 293, 51208, 51208, 983, 360, 321, 352, 281, 264, 5253, 295, 1419, 341, 5405, 18519, 1412, 370, 2171, 411, 34877, 356, 51475, 51475, 21156, 278, 1412, 666, 746, 544, 18519, 1177, 380, 2893, 2158, 570, 321, 528, 281, 1333, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.06059466056453371, "compression_ratio": 1.824, "no_caption_prob": 9.818182661547326e-06}, {"id": 400, "seek": 246432, "start": 2481.2000000000003, "end": 2486.54, "text": " why do we go to the trouble of having this highly structured data so sometimes like prematurely", "tokens": [50364, 7909, 456, 727, 312, 983, 500, 380, 411, 983, 500, 380, 321, 445, 362, 2141, 2158, 15494, 293, 584, 4177, 613, 50638, 50638, 366, 445, 412, 264, 917, 295, 264, 786, 264, 2295, 1496, 10290, 307, 445, 257, 6798, 293, 13038, 50911, 50911, 264, 4195, 3467, 257, 2517, 741, 643, 281, 29562, 300, 281, 980, 552, 498, 456, 366, 13603, 293, 51208, 51208, 983, 360, 321, 352, 281, 264, 5253, 295, 1419, 341, 5405, 18519, 1412, 370, 2171, 411, 34877, 356, 51475, 51475, 21156, 278, 1412, 666, 746, 544, 18519, 1177, 380, 2893, 2158, 570, 321, 528, 281, 1333, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.06059466056453371, "compression_ratio": 1.824, "no_caption_prob": 9.818182661547326e-06}, {"id": 401, "seek": 246432, "start": 2486.54, "end": 2493.04, "text": " parsing data into something more structured doesn't provide value because we want to sort", "tokens": [50364, 7909, 456, 727, 312, 983, 500, 380, 411, 983, 500, 380, 321, 445, 362, 2141, 2158, 15494, 293, 584, 4177, 613, 50638, 50638, 366, 445, 412, 264, 917, 295, 264, 786, 264, 2295, 1496, 10290, 307, 445, 257, 6798, 293, 13038, 50911, 50911, 264, 4195, 3467, 257, 2517, 741, 643, 281, 29562, 300, 281, 980, 552, 498, 456, 366, 13603, 293, 51208, 51208, 983, 360, 321, 352, 281, 264, 5253, 295, 1419, 341, 5405, 18519, 1412, 370, 2171, 411, 34877, 356, 51475, 51475, 21156, 278, 1412, 666, 746, 544, 18519, 1177, 380, 2893, 2158, 570, 321, 528, 281, 1333, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.06059466056453371, "compression_ratio": 1.824, "no_caption_prob": 9.818182661547326e-06}, {"id": 402, "seek": 249304, "start": 2493.04, "end": 2498.2, "text": " of have the low level representation keep our options open about how to use it and then", "tokens": [50364, 295, 362, 264, 2295, 1496, 10290, 1066, 527, 3956, 1269, 466, 577, 281, 764, 309, 293, 550, 50622, 50622, 28446, 300, 337, 1365, 291, 393, 10315, 1254, 1412, 281, 257, 7154, 570, 291, 362, 341, 1481, 50846, 50846, 2141, 2158, 6119, 558, 370, 498, 291, 528, 281, 14853, 4007, 281, 2845, 746, 281, 257, 7154, 293, 291, 643, 51096, 51096, 512, 2295, 1496, 10290, 291, 362, 472, 498, 291, 362, 1254, 1412, 291, 362, 613, 2141, 2158, 51322, 51322, 15494, 457, 498, 291, 18259, 356, 48377, 309, 666, 341, 544, 18519, 1412, 295, 257, 2136, 365, 365, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.053773431494684505, "compression_ratio": 1.9513274336283186, "no_caption_prob": 2.3552083803224377e-05}, {"id": 403, "seek": 249304, "start": 2498.2, "end": 2502.68, "text": " derive that for example you can submit form data to a server because you have this nice", "tokens": [50364, 295, 362, 264, 2295, 1496, 10290, 1066, 527, 3956, 1269, 466, 577, 281, 764, 309, 293, 550, 50622, 50622, 28446, 300, 337, 1365, 291, 393, 10315, 1254, 1412, 281, 257, 7154, 570, 291, 362, 341, 1481, 50846, 50846, 2141, 2158, 6119, 558, 370, 498, 291, 528, 281, 14853, 4007, 281, 2845, 746, 281, 257, 7154, 293, 291, 643, 51096, 51096, 512, 2295, 1496, 10290, 291, 362, 472, 498, 291, 362, 1254, 1412, 291, 362, 613, 2141, 2158, 51322, 51322, 15494, 457, 498, 291, 18259, 356, 48377, 309, 666, 341, 544, 18519, 1412, 295, 257, 2136, 365, 365, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.053773431494684505, "compression_ratio": 1.9513274336283186, "no_caption_prob": 2.3552083803224377e-05}, {"id": 404, "seek": 249304, "start": 2502.68, "end": 2507.68, "text": " key value pair right so if you want to unwrap to send something to a server and you need", "tokens": [50364, 295, 362, 264, 2295, 1496, 10290, 1066, 527, 3956, 1269, 466, 577, 281, 764, 309, 293, 550, 50622, 50622, 28446, 300, 337, 1365, 291, 393, 10315, 1254, 1412, 281, 257, 7154, 570, 291, 362, 341, 1481, 50846, 50846, 2141, 2158, 6119, 558, 370, 498, 291, 528, 281, 14853, 4007, 281, 2845, 746, 281, 257, 7154, 293, 291, 643, 51096, 51096, 512, 2295, 1496, 10290, 291, 362, 472, 498, 291, 362, 1254, 1412, 291, 362, 613, 2141, 2158, 51322, 51322, 15494, 457, 498, 291, 18259, 356, 48377, 309, 666, 341, 544, 18519, 1412, 295, 257, 2136, 365, 365, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.053773431494684505, "compression_ratio": 1.9513274336283186, "no_caption_prob": 2.3552083803224377e-05}, {"id": 405, "seek": 249304, "start": 2507.68, "end": 2512.2, "text": " some low level representation you have one if you have form data you have these key value", "tokens": [50364, 295, 362, 264, 2295, 1496, 10290, 1066, 527, 3956, 1269, 466, 577, 281, 764, 309, 293, 550, 50622, 50622, 28446, 300, 337, 1365, 291, 393, 10315, 1254, 1412, 281, 257, 7154, 570, 291, 362, 341, 1481, 50846, 50846, 2141, 2158, 6119, 558, 370, 498, 291, 528, 281, 14853, 4007, 281, 2845, 746, 281, 257, 7154, 293, 291, 643, 51096, 51096, 512, 2295, 1496, 10290, 291, 362, 472, 498, 291, 362, 1254, 1412, 291, 362, 613, 2141, 2158, 51322, 51322, 15494, 457, 498, 291, 18259, 356, 48377, 309, 666, 341, 544, 18519, 1412, 295, 257, 2136, 365, 365, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.053773431494684505, "compression_ratio": 1.9513274336283186, "no_caption_prob": 2.3552083803224377e-05}, {"id": 406, "seek": 249304, "start": 2512.2, "end": 2519.48, "text": " pairs but if you eagerly parse it into this more structured data of a record with with", "tokens": [50364, 295, 362, 264, 2295, 1496, 10290, 1066, 527, 3956, 1269, 466, 577, 281, 764, 309, 293, 550, 50622, 50622, 28446, 300, 337, 1365, 291, 393, 10315, 1254, 1412, 281, 257, 7154, 570, 291, 362, 341, 1481, 50846, 50846, 2141, 2158, 6119, 558, 370, 498, 291, 528, 281, 14853, 4007, 281, 2845, 746, 281, 257, 7154, 293, 291, 643, 51096, 51096, 512, 2295, 1496, 10290, 291, 362, 472, 498, 291, 362, 1254, 1412, 291, 362, 613, 2141, 2158, 51322, 51322, 15494, 457, 498, 291, 18259, 356, 48377, 309, 666, 341, 544, 18519, 1412, 295, 257, 2136, 365, 365, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.053773431494684505, "compression_ratio": 1.9513274336283186, "no_caption_prob": 2.3552083803224377e-05}, {"id": 407, "seek": 251948, "start": 2519.48, "end": 2526.36, "text": " string values then now you've made it structured and you need to sort of make it less structured", "tokens": [50364, 6798, 4190, 550, 586, 291, 600, 1027, 309, 18519, 293, 291, 643, 281, 1333, 295, 652, 309, 1570, 18519, 50708, 50708, 281, 17436, 1125, 309, 281, 264, 7154, 293, 2845, 309, 2845, 729, 382, 361, 3015, 420, 2035, 689, 291, 767, 51030, 51030, 733, 295, 632, 300, 1217, 370, 983, 352, 281, 264, 5253, 295, 4084, 300, 3877, 34877, 356, 51318, 51318, 731, 264, 1481, 551, 498, 291, 360, 257, 2296, 2136, 2296, 1412, 3877, 307, 300, 309, 307, 1858, 281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07604365629308364, "compression_ratio": 1.7902439024390244, "no_caption_prob": 8.267768862424418e-06}, {"id": 408, "seek": 251948, "start": 2526.36, "end": 2532.8, "text": " to serialize it to the server and send it send those as json or whatever where you actually", "tokens": [50364, 6798, 4190, 550, 586, 291, 600, 1027, 309, 18519, 293, 291, 643, 281, 1333, 295, 652, 309, 1570, 18519, 50708, 50708, 281, 17436, 1125, 309, 281, 264, 7154, 293, 2845, 309, 2845, 729, 382, 361, 3015, 420, 2035, 689, 291, 767, 51030, 51030, 733, 295, 632, 300, 1217, 370, 983, 352, 281, 264, 5253, 295, 4084, 300, 3877, 34877, 356, 51318, 51318, 731, 264, 1481, 551, 498, 291, 360, 257, 2296, 2136, 2296, 1412, 3877, 307, 300, 309, 307, 1858, 281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07604365629308364, "compression_ratio": 1.7902439024390244, "no_caption_prob": 8.267768862424418e-06}, {"id": 409, "seek": 251948, "start": 2532.8, "end": 2538.56, "text": " kind of had that already so why go to the trouble of creating that structure prematurely", "tokens": [50364, 6798, 4190, 550, 586, 291, 600, 1027, 309, 18519, 293, 291, 643, 281, 1333, 295, 652, 309, 1570, 18519, 50708, 50708, 281, 17436, 1125, 309, 281, 264, 7154, 293, 2845, 309, 2845, 729, 382, 361, 3015, 420, 2035, 689, 291, 767, 51030, 51030, 733, 295, 632, 300, 1217, 370, 983, 352, 281, 264, 5253, 295, 4084, 300, 3877, 34877, 356, 51318, 51318, 731, 264, 1481, 551, 498, 291, 360, 257, 2296, 2136, 2296, 1412, 3877, 307, 300, 309, 307, 1858, 281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07604365629308364, "compression_ratio": 1.7902439024390244, "no_caption_prob": 8.267768862424418e-06}, {"id": 410, "seek": 251948, "start": 2538.56, "end": 2544.72, "text": " well the nice thing if you do a proper record proper data structure is that it is easy to", "tokens": [50364, 6798, 4190, 550, 586, 291, 600, 1027, 309, 18519, 293, 291, 643, 281, 1333, 295, 652, 309, 1570, 18519, 50708, 50708, 281, 17436, 1125, 309, 281, 264, 7154, 293, 2845, 309, 2845, 729, 382, 361, 3015, 420, 2035, 689, 291, 767, 51030, 51030, 733, 295, 632, 300, 1217, 370, 983, 352, 281, 264, 5253, 295, 4084, 300, 3877, 34877, 356, 51318, 51318, 731, 264, 1481, 551, 498, 291, 360, 257, 2296, 2136, 2296, 1412, 3877, 307, 300, 309, 307, 1858, 281, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.07604365629308364, "compression_ratio": 1.7902439024390244, "no_caption_prob": 8.267768862424418e-06}, {"id": 411, "seek": 254472, "start": 2544.72, "end": 2550.8399999999997, "text": " see what is in the form right like i don't have to look at the view function or the update", "tokens": [50364, 536, 437, 307, 294, 264, 1254, 558, 411, 741, 500, 380, 362, 281, 574, 412, 264, 1910, 2445, 420, 264, 5623, 50670, 50670, 2445, 1391, 264, 1910, 2445, 294, 428, 764, 1389, 281, 536, 437, 7909, 741, 478, 3102, 50938, 50938, 294, 741, 536, 700, 1315, 1392, 731, 741, 458, 300, 741, 500, 380, 1127, 466, 264, 700, 1315, 294, 341, 51184, 51184, 1365, 293, 550, 309, 307, 8344, 1858, 281, 458, 597, 7909, 281, 281, 652, 4739, 293, 597, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.07850513571784609, "compression_ratio": 1.7626262626262625, "no_caption_prob": 2.078329816868063e-05}, {"id": 412, "seek": 254472, "start": 2550.8399999999997, "end": 2556.2, "text": " function probably the view function in your use case to see what fields i'm interested", "tokens": [50364, 536, 437, 307, 294, 264, 1254, 558, 411, 741, 500, 380, 362, 281, 574, 412, 264, 1910, 2445, 420, 264, 5623, 50670, 50670, 2445, 1391, 264, 1910, 2445, 294, 428, 764, 1389, 281, 536, 437, 7909, 741, 478, 3102, 50938, 50938, 294, 741, 536, 700, 1315, 1392, 731, 741, 458, 300, 741, 500, 380, 1127, 466, 264, 700, 1315, 294, 341, 51184, 51184, 1365, 293, 550, 309, 307, 8344, 1858, 281, 458, 597, 7909, 281, 281, 652, 4739, 293, 597, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.07850513571784609, "compression_ratio": 1.7626262626262625, "no_caption_prob": 2.078329816868063e-05}, {"id": 413, "seek": 254472, "start": 2556.2, "end": 2561.12, "text": " in i see first name okay well i know that i don't care about the first name in this", "tokens": [50364, 536, 437, 307, 294, 264, 1254, 558, 411, 741, 500, 380, 362, 281, 574, 412, 264, 1910, 2445, 420, 264, 5623, 50670, 50670, 2445, 1391, 264, 1910, 2445, 294, 428, 764, 1389, 281, 536, 437, 7909, 741, 478, 3102, 50938, 50938, 294, 741, 536, 700, 1315, 1392, 731, 741, 458, 300, 741, 500, 380, 1127, 466, 264, 700, 1315, 294, 341, 51184, 51184, 1365, 293, 550, 309, 307, 8344, 1858, 281, 458, 597, 7909, 281, 281, 652, 4739, 293, 597, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.07850513571784609, "compression_ratio": 1.7626262626262625, "no_caption_prob": 2.078329816868063e-05}, {"id": 414, "seek": 254472, "start": 2561.12, "end": 2569.8799999999997, "text": " example and then it is somewhat easy to know which fields to to make required and which", "tokens": [50364, 536, 437, 307, 294, 264, 1254, 558, 411, 741, 500, 380, 362, 281, 574, 412, 264, 1910, 2445, 420, 264, 5623, 50670, 50670, 2445, 1391, 264, 1910, 2445, 294, 428, 764, 1389, 281, 536, 437, 7909, 741, 478, 3102, 50938, 50938, 294, 741, 536, 700, 1315, 1392, 731, 741, 458, 300, 741, 500, 380, 1127, 466, 264, 700, 1315, 294, 341, 51184, 51184, 1365, 293, 550, 309, 307, 8344, 1858, 281, 458, 597, 7909, 281, 281, 652, 4739, 293, 597, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.07850513571784609, "compression_ratio": 1.7626262626262625, "no_caption_prob": 2.078329816868063e-05}, {"id": 415, "seek": 256988, "start": 2569.88, "end": 2576.4, "text": " fields to wait until we have them to send them over to htp to to know that we have that", "tokens": [50364, 7909, 281, 1699, 1826, 321, 362, 552, 281, 2845, 552, 670, 281, 276, 83, 79, 281, 281, 458, 300, 321, 362, 300, 50690, 50690, 321, 366, 1096, 498, 291, 829, 439, 295, 300, 294, 264, 1910, 291, 500, 380, 362, 257, 1481, 1412, 3877, 50984, 50984, 420, 512, 661, 7513, 300, 741, 2378, 380, 1194, 466, 1939, 550, 309, 393, 312, 1238, 1152, 281, 281, 51328, 51328, 458, 437, 311, 2737, 294, 428, 1254, 558, 741, 519, 370, 437, 741, 478, 1333, 295, 12736, 307, 544, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.11465874777899848, "compression_ratio": 1.7227722772277227, "no_caption_prob": 9.665837751526851e-06}, {"id": 416, "seek": 256988, "start": 2576.4, "end": 2582.28, "text": " we are done if you put all of that in the view you don't have a nice data structure", "tokens": [50364, 7909, 281, 1699, 1826, 321, 362, 552, 281, 2845, 552, 670, 281, 276, 83, 79, 281, 281, 458, 300, 321, 362, 300, 50690, 50690, 321, 366, 1096, 498, 291, 829, 439, 295, 300, 294, 264, 1910, 291, 500, 380, 362, 257, 1481, 1412, 3877, 50984, 50984, 420, 512, 661, 7513, 300, 741, 2378, 380, 1194, 466, 1939, 550, 309, 393, 312, 1238, 1152, 281, 281, 51328, 51328, 458, 437, 311, 2737, 294, 428, 1254, 558, 741, 519, 370, 437, 741, 478, 1333, 295, 12736, 307, 544, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.11465874777899848, "compression_ratio": 1.7227722772277227, "no_caption_prob": 9.665837751526851e-06}, {"id": 417, "seek": 256988, "start": 2582.28, "end": 2589.1600000000003, "text": " or some other mechanism that i haven't thought about yet then it can be pretty hard to to", "tokens": [50364, 7909, 281, 1699, 1826, 321, 362, 552, 281, 2845, 552, 670, 281, 276, 83, 79, 281, 281, 458, 300, 321, 362, 300, 50690, 50690, 321, 366, 1096, 498, 291, 829, 439, 295, 300, 294, 264, 1910, 291, 500, 380, 362, 257, 1481, 1412, 3877, 50984, 50984, 420, 512, 661, 7513, 300, 741, 2378, 380, 1194, 466, 1939, 550, 309, 393, 312, 1238, 1152, 281, 281, 51328, 51328, 458, 437, 311, 2737, 294, 428, 1254, 558, 741, 519, 370, 437, 741, 478, 1333, 295, 12736, 307, 544, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.11465874777899848, "compression_ratio": 1.7227722772277227, "no_caption_prob": 9.665837751526851e-06}, {"id": 418, "seek": 256988, "start": 2589.1600000000003, "end": 2595.96, "text": " know what's happening in your form right i think so what i'm sort of exploring is more", "tokens": [50364, 7909, 281, 1699, 1826, 321, 362, 552, 281, 2845, 552, 670, 281, 276, 83, 79, 281, 281, 458, 300, 321, 362, 300, 50690, 50690, 321, 366, 1096, 498, 291, 829, 439, 295, 300, 294, 264, 1910, 291, 500, 380, 362, 257, 1481, 1412, 3877, 50984, 50984, 420, 512, 661, 7513, 300, 741, 2378, 380, 1194, 466, 1939, 550, 309, 393, 312, 1238, 1152, 281, 281, 51328, 51328, 458, 437, 311, 2737, 294, 428, 1254, 558, 741, 519, 370, 437, 741, 478, 1333, 295, 12736, 307, 544, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.11465874777899848, "compression_ratio": 1.7227722772277227, "no_caption_prob": 9.665837751526851e-06}, {"id": 419, "seek": 259596, "start": 2595.96, "end": 2602.16, "text": " i mean there are apis for sort of um decoding forms right that sort of thing and i'm i'm", "tokens": [50364, 741, 914, 456, 366, 1882, 271, 337, 1333, 295, 1105, 979, 8616, 6422, 558, 300, 1333, 295, 551, 293, 741, 478, 741, 478, 50674, 50674, 12736, 544, 364, 1558, 295, 1940, 300, 2295, 1496, 411, 741, 741, 519, 295, 309, 382, 264, 12437, 2689, 50976, 50976, 20687, 3620, 300, 309, 311, 406, 5405, 18519, 309, 393, 312, 1143, 867, 819, 3190, 293, 729, 51310, 51310, 2141, 2158, 15494, 366, 264, 881, 3875, 2295, 1496, 551, 300, 291, 393, 28446, 867, 721, 490, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08028617016104765, "compression_ratio": 1.7298578199052133, "no_caption_prob": 1.0952920092677232e-05}, {"id": 420, "seek": 259596, "start": 2602.16, "end": 2608.2, "text": " exploring more an idea of taking that low level like i i think of it as the lowest common", "tokens": [50364, 741, 914, 456, 366, 1882, 271, 337, 1333, 295, 1105, 979, 8616, 6422, 558, 300, 1333, 295, 551, 293, 741, 478, 741, 478, 50674, 50674, 12736, 544, 364, 1558, 295, 1940, 300, 2295, 1496, 411, 741, 741, 519, 295, 309, 382, 264, 12437, 2689, 50976, 50976, 20687, 3620, 300, 309, 311, 406, 5405, 18519, 309, 393, 312, 1143, 867, 819, 3190, 293, 729, 51310, 51310, 2141, 2158, 15494, 366, 264, 881, 3875, 2295, 1496, 551, 300, 291, 393, 28446, 867, 721, 490, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08028617016104765, "compression_ratio": 1.7298578199052133, "no_caption_prob": 1.0952920092677232e-05}, {"id": 421, "seek": 259596, "start": 2608.2, "end": 2614.88, "text": " denominator meaning that it's not highly structured it can be used many different places and those", "tokens": [50364, 741, 914, 456, 366, 1882, 271, 337, 1333, 295, 1105, 979, 8616, 6422, 558, 300, 1333, 295, 551, 293, 741, 478, 741, 478, 50674, 50674, 12736, 544, 364, 1558, 295, 1940, 300, 2295, 1496, 411, 741, 741, 519, 295, 309, 382, 264, 12437, 2689, 50976, 50976, 20687, 3620, 300, 309, 311, 406, 5405, 18519, 309, 393, 312, 1143, 867, 819, 3190, 293, 729, 51310, 51310, 2141, 2158, 15494, 366, 264, 881, 3875, 2295, 1496, 551, 300, 291, 393, 28446, 867, 721, 490, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08028617016104765, "compression_ratio": 1.7298578199052133, "no_caption_prob": 1.0952920092677232e-05}, {"id": 422, "seek": 259596, "start": 2614.88, "end": 2620.92, "text": " key value pairs are the most basic low level thing that you can derive many things from", "tokens": [50364, 741, 914, 456, 366, 1882, 271, 337, 1333, 295, 1105, 979, 8616, 6422, 558, 300, 1333, 295, 551, 293, 741, 478, 741, 478, 50674, 50674, 12736, 544, 364, 1558, 295, 1940, 300, 2295, 1496, 411, 741, 741, 519, 295, 309, 382, 264, 12437, 2689, 50976, 50976, 20687, 3620, 300, 309, 311, 406, 5405, 18519, 309, 393, 312, 1143, 867, 819, 3190, 293, 729, 51310, 51310, 2141, 2158, 15494, 366, 264, 881, 3875, 2295, 1496, 551, 300, 291, 393, 28446, 867, 721, 490, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.08028617016104765, "compression_ratio": 1.7298578199052133, "no_caption_prob": 1.0952920092677232e-05}, {"id": 423, "seek": 262092, "start": 2620.92, "end": 2626.92, "text": " including running a form decoder or form parser or whatever you want to call it to say hey", "tokens": [50364, 3009, 2614, 257, 1254, 979, 19866, 420, 1254, 21156, 260, 420, 2035, 291, 528, 281, 818, 309, 281, 584, 4177, 50664, 50664, 741, 2066, 257, 700, 1315, 741, 2066, 309, 281, 312, 2107, 6707, 741, 2066, 309, 281, 722, 365, 364, 11775, 2869, 651, 50936, 50936, 5063, 420, 2035, 291, 458, 2035, 24071, 9952, 291, 362, 291, 2066, 264, 1520, 294, 4002, 51232, 51232, 281, 312, 949, 264, 37153, 4002, 291, 2066, 341, 786, 281, 312, 572, 2854, 813, 341, 1230, 51472, 51472, 295, 1708, 293, 412, 1935, 341, 1230, 295, 1708, 2035, 291, 362, 729, 6423, 1252, 13834, 281, 385, 264, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.0694745936483707, "compression_ratio": 2.0691244239631335, "no_caption_prob": 8.664508641231805e-06}, {"id": 424, "seek": 262092, "start": 2626.92, "end": 2632.36, "text": " i expect a first name i expect it to be non empty i expect it to start with an uppercase", "tokens": [50364, 3009, 2614, 257, 1254, 979, 19866, 420, 1254, 21156, 260, 420, 2035, 291, 528, 281, 818, 309, 281, 584, 4177, 50664, 50664, 741, 2066, 257, 700, 1315, 741, 2066, 309, 281, 312, 2107, 6707, 741, 2066, 309, 281, 722, 365, 364, 11775, 2869, 651, 50936, 50936, 5063, 420, 2035, 291, 458, 2035, 24071, 9952, 291, 362, 291, 2066, 264, 1520, 294, 4002, 51232, 51232, 281, 312, 949, 264, 37153, 4002, 291, 2066, 341, 786, 281, 312, 572, 2854, 813, 341, 1230, 51472, 51472, 295, 1708, 293, 412, 1935, 341, 1230, 295, 1708, 2035, 291, 362, 729, 6423, 1252, 13834, 281, 385, 264, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.0694745936483707, "compression_ratio": 2.0691244239631335, "no_caption_prob": 8.664508641231805e-06}, {"id": 425, "seek": 262092, "start": 2632.36, "end": 2638.28, "text": " letter or whatever you know whatever validation logic you have you expect the check in date", "tokens": [50364, 3009, 2614, 257, 1254, 979, 19866, 420, 1254, 21156, 260, 420, 2035, 291, 528, 281, 818, 309, 281, 584, 4177, 50664, 50664, 741, 2066, 257, 700, 1315, 741, 2066, 309, 281, 312, 2107, 6707, 741, 2066, 309, 281, 722, 365, 364, 11775, 2869, 651, 50936, 50936, 5063, 420, 2035, 291, 458, 2035, 24071, 9952, 291, 362, 291, 2066, 264, 1520, 294, 4002, 51232, 51232, 281, 312, 949, 264, 37153, 4002, 291, 2066, 341, 786, 281, 312, 572, 2854, 813, 341, 1230, 51472, 51472, 295, 1708, 293, 412, 1935, 341, 1230, 295, 1708, 2035, 291, 362, 729, 6423, 1252, 13834, 281, 385, 264, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.0694745936483707, "compression_ratio": 2.0691244239631335, "no_caption_prob": 8.664508641231805e-06}, {"id": 426, "seek": 262092, "start": 2638.28, "end": 2643.08, "text": " to be before the checkout date you expect this day to be no longer than this number", "tokens": [50364, 3009, 2614, 257, 1254, 979, 19866, 420, 1254, 21156, 260, 420, 2035, 291, 528, 281, 818, 309, 281, 584, 4177, 50664, 50664, 741, 2066, 257, 700, 1315, 741, 2066, 309, 281, 312, 2107, 6707, 741, 2066, 309, 281, 722, 365, 364, 11775, 2869, 651, 50936, 50936, 5063, 420, 2035, 291, 458, 2035, 24071, 9952, 291, 362, 291, 2066, 264, 1520, 294, 4002, 51232, 51232, 281, 312, 949, 264, 37153, 4002, 291, 2066, 341, 786, 281, 312, 572, 2854, 813, 341, 1230, 51472, 51472, 295, 1708, 293, 412, 1935, 341, 1230, 295, 1708, 2035, 291, 362, 729, 6423, 1252, 13834, 281, 385, 264, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.0694745936483707, "compression_ratio": 2.0691244239631335, "no_caption_prob": 8.664508641231805e-06}, {"id": 427, "seek": 262092, "start": 2643.08, "end": 2647.6800000000003, "text": " of days and at least this number of days whatever you have those client side checks to me the", "tokens": [50364, 3009, 2614, 257, 1254, 979, 19866, 420, 1254, 21156, 260, 420, 2035, 291, 528, 281, 818, 309, 281, 584, 4177, 50664, 50664, 741, 2066, 257, 700, 1315, 741, 2066, 309, 281, 312, 2107, 6707, 741, 2066, 309, 281, 722, 365, 364, 11775, 2869, 651, 50936, 50936, 5063, 420, 2035, 291, 458, 2035, 24071, 9952, 291, 362, 291, 2066, 264, 1520, 294, 4002, 51232, 51232, 281, 312, 949, 264, 37153, 4002, 291, 2066, 341, 786, 281, 312, 572, 2854, 813, 341, 1230, 51472, 51472, 295, 1708, 293, 412, 1935, 341, 1230, 295, 1708, 2035, 291, 362, 729, 6423, 1252, 13834, 281, 385, 264, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.0694745936483707, "compression_ratio": 2.0691244239631335, "no_caption_prob": 8.664508641231805e-06}, {"id": 428, "seek": 264768, "start": 2647.68, "end": 2655.96, "text": " source of truth would be that sort of form decoder not and and the form decoder not the", "tokens": [50364, 4009, 295, 3494, 576, 312, 300, 1333, 295, 1254, 979, 19866, 406, 293, 293, 264, 1254, 979, 19866, 406, 264, 50778, 50778, 4190, 294, 264, 1254, 2969, 731, 264, 4009, 295, 3494, 466, 437, 7909, 309, 33280, 281, 312, 51134, 51134, 1974, 1954, 1338, 1338, 370, 731, 291, 727, 920, 362, 15743, 300, 366, 406, 885, 979, 12340, 411, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11274200015597874, "compression_ratio": 1.738562091503268, "no_caption_prob": 1.3006333574594464e-05}, {"id": 429, "seek": 264768, "start": 2655.96, "end": 2663.08, "text": " values in the form themselves well the source of truth about what fields it expects to be", "tokens": [50364, 4009, 295, 3494, 576, 312, 300, 1333, 295, 1254, 979, 19866, 406, 293, 293, 264, 1254, 979, 19866, 406, 264, 50778, 50778, 4190, 294, 264, 1254, 2969, 731, 264, 4009, 295, 3494, 466, 437, 7909, 309, 33280, 281, 312, 51134, 51134, 1974, 1954, 1338, 1338, 370, 731, 291, 727, 920, 362, 15743, 300, 366, 406, 885, 979, 12340, 411, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11274200015597874, "compression_ratio": 1.738562091503268, "no_caption_prob": 1.3006333574594464e-05}, {"id": 430, "seek": 264768, "start": 2663.08, "end": 2673.8399999999997, "text": " present oh yeah yeah so well you could still have inputs that are not being decoded like", "tokens": [50364, 4009, 295, 3494, 576, 312, 300, 1333, 295, 1254, 979, 19866, 406, 293, 293, 264, 1254, 979, 19866, 406, 264, 50778, 50778, 4190, 294, 264, 1254, 2969, 731, 264, 4009, 295, 3494, 466, 437, 7909, 309, 33280, 281, 312, 51134, 51134, 1974, 1954, 1338, 1338, 370, 731, 291, 727, 920, 362, 15743, 300, 366, 406, 885, 979, 12340, 411, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.11274200015597874, "compression_ratio": 1.738562091503268, "no_caption_prob": 1.3006333574594464e-05}, {"id": 431, "seek": 267384, "start": 2673.84, "end": 2680.2000000000003, "text": " you you could mess that up you could have an input for h and then you don't decode that", "tokens": [50364, 291, 291, 727, 2082, 300, 493, 291, 727, 362, 364, 4846, 337, 276, 293, 550, 291, 500, 380, 979, 1429, 300, 50682, 50682, 294, 428, 979, 19866, 457, 550, 291, 727, 584, 291, 458, 291, 727, 362, 746, 689, 291, 291, 50992, 50992, 483, 264, 291, 483, 512, 276, 83, 15480, 17212, 281, 829, 666, 264, 666, 428, 1910, 337, 264, 1254, 15743, 51442, 51442, 490, 300, 1254, 979, 19866, 558, 370, 457, 457, 498, 300, 311, 428, 4009, 295, 3494, 550, 291, 500, 380, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.0869073224871346, "compression_ratio": 1.9772727272727273, "no_caption_prob": 1.1300502592348494e-05}, {"id": 432, "seek": 267384, "start": 2680.2000000000003, "end": 2686.4, "text": " in your decoder but then you could say you know you could have something where you you", "tokens": [50364, 291, 291, 727, 2082, 300, 493, 291, 727, 362, 364, 4846, 337, 276, 293, 550, 291, 500, 380, 979, 1429, 300, 50682, 50682, 294, 428, 979, 19866, 457, 550, 291, 727, 584, 291, 458, 291, 727, 362, 746, 689, 291, 291, 50992, 50992, 483, 264, 291, 483, 512, 276, 83, 15480, 17212, 281, 829, 666, 264, 666, 428, 1910, 337, 264, 1254, 15743, 51442, 51442, 490, 300, 1254, 979, 19866, 558, 370, 457, 457, 498, 300, 311, 428, 4009, 295, 3494, 550, 291, 500, 380, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.0869073224871346, "compression_ratio": 1.9772727272727273, "no_caption_prob": 1.1300502592348494e-05}, {"id": 433, "seek": 267384, "start": 2686.4, "end": 2695.4, "text": " get the you get some html attributes to put into the into your view for the form inputs", "tokens": [50364, 291, 291, 727, 2082, 300, 493, 291, 727, 362, 364, 4846, 337, 276, 293, 550, 291, 500, 380, 979, 1429, 300, 50682, 50682, 294, 428, 979, 19866, 457, 550, 291, 727, 584, 291, 458, 291, 727, 362, 746, 689, 291, 291, 50992, 50992, 483, 264, 291, 483, 512, 276, 83, 15480, 17212, 281, 829, 666, 264, 666, 428, 1910, 337, 264, 1254, 15743, 51442, 51442, 490, 300, 1254, 979, 19866, 558, 370, 457, 457, 498, 300, 311, 428, 4009, 295, 3494, 550, 291, 500, 380, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.0869073224871346, "compression_ratio": 1.9772727272727273, "no_caption_prob": 1.1300502592348494e-05}, {"id": 434, "seek": 267384, "start": 2695.4, "end": 2701.1200000000003, "text": " from that form decoder right so but but if that's your source of truth then you don't", "tokens": [50364, 291, 291, 727, 2082, 300, 493, 291, 727, 362, 364, 4846, 337, 276, 293, 550, 291, 500, 380, 979, 1429, 300, 50682, 50682, 294, 428, 979, 19866, 457, 550, 291, 727, 584, 291, 458, 291, 727, 362, 746, 689, 291, 291, 50992, 50992, 483, 264, 291, 483, 512, 276, 83, 15480, 17212, 281, 829, 666, 264, 666, 428, 1910, 337, 264, 1254, 15743, 51442, 51442, 490, 300, 1254, 979, 19866, 558, 370, 457, 457, 498, 300, 311, 428, 4009, 295, 3494, 550, 291, 500, 380, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.0869073224871346, "compression_ratio": 1.9772727272727273, "no_caption_prob": 1.1300502592348494e-05}, {"id": 435, "seek": 270112, "start": 2701.12, "end": 2708.52, "text": " need to decode into this structured intermediary representation like to me there's something", "tokens": [50364, 643, 281, 979, 1429, 666, 341, 18519, 15184, 822, 10290, 411, 281, 385, 456, 311, 746, 50734, 50734, 1483, 9079, 906, 466, 300, 1558, 295, 1419, 364, 24324, 18519, 15184, 822, 10290, 411, 51007, 51007, 741, 528, 281, 362, 498, 741, 393, 4258, 48377, 746, 666, 257, 731, 18519, 10290, 51416, 51416, 558, 1314, 293, 741, 500, 380, 643, 281, 360, 1340, 1646, 365, 309, 300, 311, 869, 420, 5911, 498, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.05824834187825521, "compression_ratio": 1.8994708994708995, "no_caption_prob": 1.9832797988783568e-05}, {"id": 436, "seek": 270112, "start": 2708.52, "end": 2713.98, "text": " distasteful about that idea of having an overly structured intermediary representation like", "tokens": [50364, 643, 281, 979, 1429, 666, 341, 18519, 15184, 822, 10290, 411, 281, 385, 456, 311, 746, 50734, 50734, 1483, 9079, 906, 466, 300, 1558, 295, 1419, 364, 24324, 18519, 15184, 822, 10290, 411, 51007, 51007, 741, 528, 281, 362, 498, 741, 393, 4258, 48377, 746, 666, 257, 731, 18519, 10290, 51416, 51416, 558, 1314, 293, 741, 500, 380, 643, 281, 360, 1340, 1646, 365, 309, 300, 311, 869, 420, 5911, 498, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.05824834187825521, "compression_ratio": 1.8994708994708995, "no_caption_prob": 1.9832797988783568e-05}, {"id": 437, "seek": 270112, "start": 2713.98, "end": 2722.16, "text": " i want to have if i can immediately parse something into a well structured representation", "tokens": [50364, 643, 281, 979, 1429, 666, 341, 18519, 15184, 822, 10290, 411, 281, 385, 456, 311, 746, 50734, 50734, 1483, 9079, 906, 466, 300, 1558, 295, 1419, 364, 24324, 18519, 15184, 822, 10290, 411, 51007, 51007, 741, 528, 281, 362, 498, 741, 393, 4258, 48377, 746, 666, 257, 731, 18519, 10290, 51416, 51416, 558, 1314, 293, 741, 500, 380, 643, 281, 360, 1340, 1646, 365, 309, 300, 311, 869, 420, 5911, 498, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.05824834187825521, "compression_ratio": 1.8994708994708995, "no_caption_prob": 1.9832797988783568e-05}, {"id": 438, "seek": 270112, "start": 2722.16, "end": 2727.72, "text": " right away and i don't need to do anything else with it that's great or otherwise if", "tokens": [50364, 643, 281, 979, 1429, 666, 341, 18519, 15184, 822, 10290, 411, 281, 385, 456, 311, 746, 50734, 50734, 1483, 9079, 906, 466, 300, 1558, 295, 1419, 364, 24324, 18519, 15184, 822, 10290, 411, 51007, 51007, 741, 528, 281, 362, 498, 741, 393, 4258, 48377, 746, 666, 257, 731, 18519, 10290, 51416, 51416, 558, 1314, 293, 741, 500, 380, 643, 281, 360, 1340, 1646, 365, 309, 300, 311, 869, 420, 5911, 498, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.05824834187825521, "compression_ratio": 1.8994708994708995, "no_caption_prob": 1.9832797988783568e-05}, {"id": 439, "seek": 272772, "start": 2727.72, "end": 2733.56, "text": " something you know with with form data it's something that's changing on every keystroke", "tokens": [50364, 746, 291, 458, 365, 365, 1254, 1412, 309, 311, 746, 300, 311, 4473, 322, 633, 2141, 42706, 50656, 50656, 293, 309, 311, 516, 309, 393, 352, 490, 34702, 281, 7363, 281, 34702, 281, 7363, 550, 1419, 257, 5405, 18519, 51038, 51038, 15184, 822, 10290, 1177, 380, 976, 385, 1340, 293, 294, 1186, 309, 411, 10860, 439, 341, 51282, 51282, 27520, 498, 291, 528, 281, 362, 9952, 300, 1619, 291, 458, 741, 528, 281, 2837, 264, 1785, 337, 1184, 51612, 51612, 472, 291, 643, 281, 6234, 493, 7897, 337, 1184, 295, 729, 291, 643, 281, 652, 988, 291, 434, 27520, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.04617405400692838, "compression_ratio": 1.8744769874476988, "no_caption_prob": 2.21249047172023e-05}, {"id": 440, "seek": 272772, "start": 2733.56, "end": 2741.2, "text": " and it's going it can go from invalid to valid to invalid to valid then having a highly structured", "tokens": [50364, 746, 291, 458, 365, 365, 1254, 1412, 309, 311, 746, 300, 311, 4473, 322, 633, 2141, 42706, 50656, 50656, 293, 309, 311, 516, 309, 393, 352, 490, 34702, 281, 7363, 281, 34702, 281, 7363, 550, 1419, 257, 5405, 18519, 51038, 51038, 15184, 822, 10290, 1177, 380, 976, 385, 1340, 293, 294, 1186, 309, 411, 10860, 439, 341, 51282, 51282, 27520, 498, 291, 528, 281, 362, 9952, 300, 1619, 291, 458, 741, 528, 281, 2837, 264, 1785, 337, 1184, 51612, 51612, 472, 291, 643, 281, 6234, 493, 7897, 337, 1184, 295, 729, 291, 643, 281, 652, 988, 291, 434, 27520, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.04617405400692838, "compression_ratio": 1.8744769874476988, "no_caption_prob": 2.21249047172023e-05}, {"id": 441, "seek": 272772, "start": 2741.2, "end": 2746.08, "text": " intermediary representation doesn't give me anything and in fact it like adds all this", "tokens": [50364, 746, 291, 458, 365, 365, 1254, 1412, 309, 311, 746, 300, 311, 4473, 322, 633, 2141, 42706, 50656, 50656, 293, 309, 311, 516, 309, 393, 352, 490, 34702, 281, 7363, 281, 34702, 281, 7363, 550, 1419, 257, 5405, 18519, 51038, 51038, 15184, 822, 10290, 1177, 380, 976, 385, 1340, 293, 294, 1186, 309, 411, 10860, 439, 341, 51282, 51282, 27520, 498, 291, 528, 281, 362, 9952, 300, 1619, 291, 458, 741, 528, 281, 2837, 264, 1785, 337, 1184, 51612, 51612, 472, 291, 643, 281, 6234, 493, 7897, 337, 1184, 295, 729, 291, 643, 281, 652, 988, 291, 434, 27520, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.04617405400692838, "compression_ratio": 1.8744769874476988, "no_caption_prob": 2.21249047172023e-05}, {"id": 442, "seek": 272772, "start": 2746.08, "end": 2752.68, "text": " wiring if you want to have logic that says you know i want to track the state for each", "tokens": [50364, 746, 291, 458, 365, 365, 1254, 1412, 309, 311, 746, 300, 311, 4473, 322, 633, 2141, 42706, 50656, 50656, 293, 309, 311, 516, 309, 393, 352, 490, 34702, 281, 7363, 281, 34702, 281, 7363, 550, 1419, 257, 5405, 18519, 51038, 51038, 15184, 822, 10290, 1177, 380, 976, 385, 1340, 293, 294, 1186, 309, 411, 10860, 439, 341, 51282, 51282, 27520, 498, 291, 528, 281, 362, 9952, 300, 1619, 291, 458, 741, 528, 281, 2837, 264, 1785, 337, 1184, 51612, 51612, 472, 291, 643, 281, 6234, 493, 7897, 337, 1184, 295, 729, 291, 643, 281, 652, 988, 291, 434, 27520, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.04617405400692838, "compression_ratio": 1.8744769874476988, "no_caption_prob": 2.21249047172023e-05}, {"id": 443, "seek": 272772, "start": 2752.68, "end": 2755.7599999999998, "text": " one you need to wire up messages for each of those you need to make sure you're wiring", "tokens": [50364, 746, 291, 458, 365, 365, 1254, 1412, 309, 311, 746, 300, 311, 4473, 322, 633, 2141, 42706, 50656, 50656, 293, 309, 311, 516, 309, 393, 352, 490, 34702, 281, 7363, 281, 34702, 281, 7363, 550, 1419, 257, 5405, 18519, 51038, 51038, 15184, 822, 10290, 1177, 380, 976, 385, 1340, 293, 294, 1186, 309, 411, 10860, 439, 341, 51282, 51282, 27520, 498, 291, 528, 281, 362, 9952, 300, 1619, 291, 458, 741, 528, 281, 2837, 264, 1785, 337, 1184, 51612, 51612, 472, 291, 643, 281, 6234, 493, 7897, 337, 1184, 295, 729, 291, 643, 281, 652, 988, 291, 434, 27520, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.04617405400692838, "compression_ratio": 1.8744769874476988, "no_caption_prob": 2.21249047172023e-05}, {"id": 444, "seek": 275576, "start": 2755.76, "end": 2761.44, "text": " them up correctly you need to manage this form state carefully that's saying whether", "tokens": [50364, 552, 493, 8944, 291, 643, 281, 3067, 341, 1254, 1785, 7500, 300, 311, 1566, 1968, 50648, 50648, 257, 2519, 575, 668, 43525, 420, 5178, 949, 293, 370, 741, 411, 264, 1558, 295, 885, 1075, 281, 362, 50968, 50968, 411, 257, 2295, 1496, 10290, 689, 291, 362, 9952, 300, 393, 2028, 365, 729, 3875, 51258, 51258, 2390, 8474, 2831, 813, 411, 1419, 309, 29482, 281, 341, 2685, 15184, 822, 10290, 51616, 51616, 300, 300, 3417, 766, 281, 385, 1338, 456, 311, 611, 746, 300, 307, 588, 25054, 365, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.041932719094412665, "compression_ratio": 1.7244094488188977, "no_caption_prob": 1.2606664313352667e-05}, {"id": 445, "seek": 275576, "start": 2761.44, "end": 2767.84, "text": " a field has been blurred or focused before and so i like the idea of being able to have", "tokens": [50364, 552, 493, 8944, 291, 643, 281, 3067, 341, 1254, 1785, 7500, 300, 311, 1566, 1968, 50648, 50648, 257, 2519, 575, 668, 43525, 420, 5178, 949, 293, 370, 741, 411, 264, 1558, 295, 885, 1075, 281, 362, 50968, 50968, 411, 257, 2295, 1496, 10290, 689, 291, 362, 9952, 300, 393, 2028, 365, 729, 3875, 51258, 51258, 2390, 8474, 2831, 813, 411, 1419, 309, 29482, 281, 341, 2685, 15184, 822, 10290, 51616, 51616, 300, 300, 3417, 766, 281, 385, 1338, 456, 311, 611, 746, 300, 307, 588, 25054, 365, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.041932719094412665, "compression_ratio": 1.7244094488188977, "no_caption_prob": 1.2606664313352667e-05}, {"id": 446, "seek": 275576, "start": 2767.84, "end": 2773.6400000000003, "text": " like a low level representation where you have logic that can deal with those basic", "tokens": [50364, 552, 493, 8944, 291, 643, 281, 3067, 341, 1254, 1785, 7500, 300, 311, 1566, 1968, 50648, 50648, 257, 2519, 575, 668, 43525, 420, 5178, 949, 293, 370, 741, 411, 264, 1558, 295, 885, 1075, 281, 362, 50968, 50968, 411, 257, 2295, 1496, 10290, 689, 291, 362, 9952, 300, 393, 2028, 365, 729, 3875, 51258, 51258, 2390, 8474, 2831, 813, 411, 1419, 309, 29482, 281, 341, 2685, 15184, 822, 10290, 51616, 51616, 300, 300, 3417, 766, 281, 385, 1338, 456, 311, 611, 746, 300, 307, 588, 25054, 365, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.041932719094412665, "compression_ratio": 1.7244094488188977, "no_caption_prob": 1.2606664313352667e-05}, {"id": 447, "seek": 275576, "start": 2773.6400000000003, "end": 2780.8, "text": " building blocks rather than like having it coupled to this specific intermediary representation", "tokens": [50364, 552, 493, 8944, 291, 643, 281, 3067, 341, 1254, 1785, 7500, 300, 311, 1566, 1968, 50648, 50648, 257, 2519, 575, 668, 43525, 420, 5178, 949, 293, 370, 741, 411, 264, 1558, 295, 885, 1075, 281, 362, 50968, 50968, 411, 257, 2295, 1496, 10290, 689, 291, 362, 9952, 300, 393, 2028, 365, 729, 3875, 51258, 51258, 2390, 8474, 2831, 813, 411, 1419, 309, 29482, 281, 341, 2685, 15184, 822, 10290, 51616, 51616, 300, 300, 3417, 766, 281, 385, 1338, 456, 311, 611, 746, 300, 307, 588, 25054, 365, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.041932719094412665, "compression_ratio": 1.7244094488188977, "no_caption_prob": 1.2606664313352667e-05}, {"id": 448, "seek": 275576, "start": 2780.8, "end": 2785.6000000000004, "text": " that that feels off to me yeah there's also something that is very disappointing with", "tokens": [50364, 552, 493, 8944, 291, 643, 281, 3067, 341, 1254, 1785, 7500, 300, 311, 1566, 1968, 50648, 50648, 257, 2519, 575, 668, 43525, 420, 5178, 949, 293, 370, 741, 411, 264, 1558, 295, 885, 1075, 281, 362, 50968, 50968, 411, 257, 2295, 1496, 10290, 689, 291, 362, 9952, 300, 393, 2028, 365, 729, 3875, 51258, 51258, 2390, 8474, 2831, 813, 411, 1419, 309, 29482, 281, 341, 2685, 15184, 822, 10290, 51616, 51616, 300, 300, 3417, 766, 281, 385, 1338, 456, 311, 611, 746, 300, 307, 588, 25054, 365, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.041932719094412665, "compression_ratio": 1.7244094488188977, "no_caption_prob": 1.2606664313352667e-05}, {"id": 449, "seek": 278560, "start": 2785.6, "end": 2792.6, "text": " the intermediate representation is that it's still quite low level code or low level low", "tokens": [50364, 264, 19376, 10290, 307, 300, 309, 311, 920, 1596, 2295, 1496, 3089, 420, 2295, 1496, 2295, 50714, 50714, 1496, 1412, 558, 570, 337, 5197, 498, 291, 498, 291, 5308, 264, 3205, 293, 3205, 820, 312, 257, 51010, 51010, 1230, 293, 291, 362, 364, 4846, 337, 300, 597, 689, 291, 393, 2010, 294, 2035, 1230, 1310, 51334, 51334, 754, 257, 6798, 457, 456, 307, 512, 2086, 456, 456, 307, 512, 4846, 7909, 300, 787, 3241, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11262216323461288, "compression_ratio": 1.7587939698492463, "no_caption_prob": 2.7107893401989713e-05}, {"id": 450, "seek": 278560, "start": 2792.6, "end": 2798.52, "text": " level data right because for instance if you if you request the age and age should be a", "tokens": [50364, 264, 19376, 10290, 307, 300, 309, 311, 920, 1596, 2295, 1496, 3089, 420, 2295, 1496, 2295, 50714, 50714, 1496, 1412, 558, 570, 337, 5197, 498, 291, 498, 291, 5308, 264, 3205, 293, 3205, 820, 312, 257, 51010, 51010, 1230, 293, 291, 362, 364, 4846, 337, 300, 597, 689, 291, 393, 2010, 294, 2035, 1230, 1310, 51334, 51334, 754, 257, 6798, 457, 456, 307, 512, 2086, 456, 456, 307, 512, 4846, 7909, 300, 787, 3241, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11262216323461288, "compression_ratio": 1.7587939698492463, "no_caption_prob": 2.7107893401989713e-05}, {"id": 451, "seek": 278560, "start": 2798.52, "end": 2805.0, "text": " number and you have an input for that which where you can type in whatever number maybe", "tokens": [50364, 264, 19376, 10290, 307, 300, 309, 311, 920, 1596, 2295, 1496, 3089, 420, 2295, 1496, 2295, 50714, 50714, 1496, 1412, 558, 570, 337, 5197, 498, 291, 498, 291, 5308, 264, 3205, 293, 3205, 820, 312, 257, 51010, 51010, 1230, 293, 291, 362, 364, 4846, 337, 300, 597, 689, 291, 393, 2010, 294, 2035, 1230, 1310, 51334, 51334, 754, 257, 6798, 457, 456, 307, 512, 2086, 456, 456, 307, 512, 4846, 7909, 300, 787, 3241, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11262216323461288, "compression_ratio": 1.7587939698492463, "no_caption_prob": 2.7107893401989713e-05}, {"id": 452, "seek": 278560, "start": 2805.0, "end": 2811.4, "text": " even a string but there is some yes there there is some input fields that only accept", "tokens": [50364, 264, 19376, 10290, 307, 300, 309, 311, 920, 1596, 2295, 1496, 3089, 420, 2295, 1496, 2295, 50714, 50714, 1496, 1412, 558, 570, 337, 5197, 498, 291, 498, 291, 5308, 264, 3205, 293, 3205, 820, 312, 257, 51010, 51010, 1230, 293, 291, 362, 364, 4846, 337, 300, 597, 689, 291, 393, 2010, 294, 2035, 1230, 1310, 51334, 51334, 754, 257, 6798, 457, 456, 307, 512, 2086, 456, 456, 307, 512, 4846, 7909, 300, 787, 3241, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.11262216323461288, "compression_ratio": 1.7587939698492463, "no_caption_prob": 2.7107893401989713e-05}, {"id": 453, "seek": 281140, "start": 2811.4, "end": 2818.6800000000003, "text": " the numbers but they still accept the letter e i think for exponentiation right if someone", "tokens": [50364, 264, 3547, 457, 436, 920, 3241, 264, 5063, 308, 741, 519, 337, 37871, 6642, 558, 498, 1580, 50728, 50728, 30445, 264, 1036, 2517, 550, 291, 917, 493, 365, 257, 6707, 6798, 293, 300, 307, 406, 979, 378, 712, 50996, 50996, 281, 257, 1230, 293, 300, 2673, 7829, 512, 2740, 411, 264, 28169, 2684, 1507, 411, 51308, 51308, 300, 370, 437, 321, 5101, 2748, 561, 281, 360, 307, 281, 3531, 264, 6798, 4033, 294, 264, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06798915373973358, "compression_ratio": 1.7241379310344827, "no_caption_prob": 1.8342370822210796e-05}, {"id": 454, "seek": 281140, "start": 2818.6800000000003, "end": 2824.04, "text": " removes the last character then you end up with a empty string and that is not decodable", "tokens": [50364, 264, 3547, 457, 436, 920, 3241, 264, 5063, 308, 741, 519, 337, 37871, 6642, 558, 498, 1580, 50728, 50728, 30445, 264, 1036, 2517, 550, 291, 917, 493, 365, 257, 6707, 6798, 293, 300, 307, 406, 979, 378, 712, 50996, 50996, 281, 257, 1230, 293, 300, 2673, 7829, 512, 2740, 411, 264, 28169, 2684, 1507, 411, 51308, 51308, 300, 370, 437, 321, 5101, 2748, 561, 281, 360, 307, 281, 3531, 264, 6798, 4033, 294, 264, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06798915373973358, "compression_ratio": 1.7241379310344827, "no_caption_prob": 1.8342370822210796e-05}, {"id": 455, "seek": 281140, "start": 2824.04, "end": 2830.28, "text": " to a number and that usually creates some problems like the cursor moving stuff like", "tokens": [50364, 264, 3547, 457, 436, 920, 3241, 264, 5063, 308, 741, 519, 337, 37871, 6642, 558, 498, 1580, 50728, 50728, 30445, 264, 1036, 2517, 550, 291, 917, 493, 365, 257, 6707, 6798, 293, 300, 307, 406, 979, 378, 712, 50996, 50996, 281, 257, 1230, 293, 300, 2673, 7829, 512, 2740, 411, 264, 28169, 2684, 1507, 411, 51308, 51308, 300, 370, 437, 321, 5101, 2748, 561, 281, 360, 307, 281, 3531, 264, 6798, 4033, 294, 264, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06798915373973358, "compression_ratio": 1.7241379310344827, "no_caption_prob": 1.8342370822210796e-05}, {"id": 456, "seek": 281140, "start": 2830.28, "end": 2837.88, "text": " that so what we generally recommend people to do is to store the string anyway in the", "tokens": [50364, 264, 3547, 457, 436, 920, 3241, 264, 5063, 308, 741, 519, 337, 37871, 6642, 558, 498, 1580, 50728, 50728, 30445, 264, 1036, 2517, 550, 291, 917, 493, 365, 257, 6707, 6798, 293, 300, 307, 406, 979, 378, 712, 50996, 50996, 281, 257, 1230, 293, 300, 2673, 7829, 512, 2740, 411, 264, 28169, 2684, 1507, 411, 51308, 51308, 300, 370, 437, 321, 5101, 2748, 561, 281, 360, 307, 281, 3531, 264, 6798, 4033, 294, 264, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06798915373973358, "compression_ratio": 1.7241379310344827, "no_caption_prob": 1.8342370822210796e-05}, {"id": 457, "seek": 283788, "start": 2837.88, "end": 2843.88, "text": " model and then to whenever you want to do something with it save it validate it send", "tokens": [50364, 2316, 293, 550, 281, 5699, 291, 528, 281, 360, 746, 365, 309, 3155, 309, 29562, 309, 2845, 50664, 50664, 309, 670, 281, 264, 276, 67, 79, 5308, 550, 291, 48377, 309, 550, 291, 29562, 309, 291, 979, 1429, 309, 666, 51006, 51006, 257, 2296, 3205, 597, 307, 364, 24922, 293, 498, 291, 3061, 550, 291, 500, 380, 360, 604, 295, 729, 721, 51260, 51260, 370, 1338, 754, 498, 291, 362, 257, 1481, 2136, 257, 1481, 2316, 291, 920, 643, 281, 3531, 3126, 1496, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07669919660721702, "compression_ratio": 1.7731958762886597, "no_caption_prob": 2.4681055947439745e-05}, {"id": 458, "seek": 283788, "start": 2843.88, "end": 2850.7200000000003, "text": " it over to the hdp request then you parse it then you validate it you decode it into", "tokens": [50364, 2316, 293, 550, 281, 5699, 291, 528, 281, 360, 746, 365, 309, 3155, 309, 29562, 309, 2845, 50664, 50664, 309, 670, 281, 264, 276, 67, 79, 5308, 550, 291, 48377, 309, 550, 291, 29562, 309, 291, 979, 1429, 309, 666, 51006, 51006, 257, 2296, 3205, 597, 307, 364, 24922, 293, 498, 291, 3061, 550, 291, 500, 380, 360, 604, 295, 729, 721, 51260, 51260, 370, 1338, 754, 498, 291, 362, 257, 1481, 2136, 257, 1481, 2316, 291, 920, 643, 281, 3531, 3126, 1496, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07669919660721702, "compression_ratio": 1.7731958762886597, "no_caption_prob": 2.4681055947439745e-05}, {"id": 459, "seek": 283788, "start": 2850.7200000000003, "end": 2855.8, "text": " a proper age which is an integer and if you fail then you don't do any of those things", "tokens": [50364, 2316, 293, 550, 281, 5699, 291, 528, 281, 360, 746, 365, 309, 3155, 309, 29562, 309, 2845, 50664, 50664, 309, 670, 281, 264, 276, 67, 79, 5308, 550, 291, 48377, 309, 550, 291, 29562, 309, 291, 979, 1429, 309, 666, 51006, 51006, 257, 2296, 3205, 597, 307, 364, 24922, 293, 498, 291, 3061, 550, 291, 500, 380, 360, 604, 295, 729, 721, 51260, 51260, 370, 1338, 754, 498, 291, 362, 257, 1481, 2136, 257, 1481, 2316, 291, 920, 643, 281, 3531, 3126, 1496, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07669919660721702, "compression_ratio": 1.7731958762886597, "no_caption_prob": 2.4681055947439745e-05}, {"id": 460, "seek": 283788, "start": 2855.8, "end": 2864.02, "text": " so yeah even if you have a nice record a nice model you still need to store lower level", "tokens": [50364, 2316, 293, 550, 281, 5699, 291, 528, 281, 360, 746, 365, 309, 3155, 309, 29562, 309, 2845, 50664, 50664, 309, 670, 281, 264, 276, 67, 79, 5308, 550, 291, 48377, 309, 550, 291, 29562, 309, 291, 979, 1429, 309, 666, 51006, 51006, 257, 2296, 3205, 597, 307, 364, 24922, 293, 498, 291, 3061, 550, 291, 500, 380, 360, 604, 295, 729, 721, 51260, 51260, 370, 1338, 754, 498, 291, 362, 257, 1481, 2136, 257, 1481, 2316, 291, 920, 643, 281, 3531, 3126, 1496, 51671, 51671], "temperature": 0.0, "avg_logprob": -0.07669919660721702, "compression_ratio": 1.7731958762886597, "no_caption_prob": 2.4681055947439745e-05}, {"id": 461, "seek": 286402, "start": 2864.02, "end": 2869.82, "text": " data than you would like to and that has been that is annoying yeah yeah and you you have", "tokens": [50364, 1412, 813, 291, 576, 411, 281, 293, 300, 575, 668, 300, 307, 11304, 1338, 1338, 293, 291, 291, 362, 50654, 50654, 281, 291, 458, 362, 257, 688, 295, 9952, 300, 311, 5405, 29482, 281, 428, 11420, 293, 382, 428, 50967, 50967, 11420, 2962, 382, 291, 909, 777, 7909, 293, 1319, 7909, 291, 643, 281, 1066, 3579, 51225, 51225, 3089, 281, 3067, 729, 777, 3755, 597, 445, 1177, 380, 841, 558, 309, 311, 411, 291, 820, 445, 51498, 51498], "temperature": 0.0, "avg_logprob": -0.05485161542892456, "compression_ratio": 1.7969543147208122, "no_caption_prob": 2.4299321012222208e-05}, {"id": 462, "seek": 286402, "start": 2869.82, "end": 2876.08, "text": " to you know have a lot of logic that's highly coupled to your implementation and as your", "tokens": [50364, 1412, 813, 291, 576, 411, 281, 293, 300, 575, 668, 300, 307, 11304, 1338, 1338, 293, 291, 291, 362, 50654, 50654, 281, 291, 458, 362, 257, 688, 295, 9952, 300, 311, 5405, 29482, 281, 428, 11420, 293, 382, 428, 50967, 50967, 11420, 2962, 382, 291, 909, 777, 7909, 293, 1319, 7909, 291, 643, 281, 1066, 3579, 51225, 51225, 3089, 281, 3067, 729, 777, 3755, 597, 445, 1177, 380, 841, 558, 309, 311, 411, 291, 820, 445, 51498, 51498], "temperature": 0.0, "avg_logprob": -0.05485161542892456, "compression_ratio": 1.7969543147208122, "no_caption_prob": 2.4299321012222208e-05}, {"id": 463, "seek": 286402, "start": 2876.08, "end": 2881.24, "text": " implementation changes as you add new fields and change fields you need to keep writing", "tokens": [50364, 1412, 813, 291, 576, 411, 281, 293, 300, 575, 668, 300, 307, 11304, 1338, 1338, 293, 291, 291, 362, 50654, 50654, 281, 291, 458, 362, 257, 688, 295, 9952, 300, 311, 5405, 29482, 281, 428, 11420, 293, 382, 428, 50967, 50967, 11420, 2962, 382, 291, 909, 777, 7909, 293, 1319, 7909, 291, 643, 281, 1066, 3579, 51225, 51225, 3089, 281, 3067, 729, 777, 3755, 597, 445, 1177, 380, 841, 558, 309, 311, 411, 291, 820, 445, 51498, 51498], "temperature": 0.0, "avg_logprob": -0.05485161542892456, "compression_ratio": 1.7969543147208122, "no_caption_prob": 2.4299321012222208e-05}, {"id": 464, "seek": 286402, "start": 2881.24, "end": 2886.7, "text": " code to manage those new pieces which just doesn't feel right it's like you should just", "tokens": [50364, 1412, 813, 291, 576, 411, 281, 293, 300, 575, 668, 300, 307, 11304, 1338, 1338, 293, 291, 291, 362, 50654, 50654, 281, 291, 458, 362, 257, 688, 295, 9952, 300, 311, 5405, 29482, 281, 428, 11420, 293, 382, 428, 50967, 50967, 11420, 2962, 382, 291, 909, 777, 7909, 293, 1319, 7909, 291, 643, 281, 1066, 3579, 51225, 51225, 3089, 281, 3067, 729, 777, 3755, 597, 445, 1177, 380, 841, 558, 309, 311, 411, 291, 820, 445, 51498, 51498], "temperature": 0.0, "avg_logprob": -0.05485161542892456, "compression_ratio": 1.7969543147208122, "no_caption_prob": 2.4299321012222208e-05}, {"id": 465, "seek": 288670, "start": 2886.7, "end": 2894.8799999999997, "text": " be able to write a form decoder and have the the logic for maintaining that low level state", "tokens": [50364, 312, 1075, 281, 2464, 257, 1254, 979, 19866, 293, 362, 264, 264, 9952, 337, 14916, 300, 2295, 1496, 1785, 50773, 50773, 570, 309, 307, 2295, 1496, 1785, 406, 312, 29482, 281, 428, 2685, 291, 458, 11420, 293, 51127, 51127, 370, 370, 1338, 370, 741, 519, 300, 311, 741, 478, 12736, 512, 295, 729, 721, 337, 337, 364, 1882, 72, 741, 478, 1364, 51435, 51435, 322, 294, 322, 7183, 1045, 457, 309, 309, 311, 1027, 385, 519, 257, 707, 857, 466, 291, 458, 341, 291, 458, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.08080116550574142, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.6964069800451398e-05}, {"id": 466, "seek": 288670, "start": 2894.8799999999997, "end": 2901.96, "text": " because it is low level state not be coupled to your specific you know implementation and", "tokens": [50364, 312, 1075, 281, 2464, 257, 1254, 979, 19866, 293, 362, 264, 264, 9952, 337, 14916, 300, 2295, 1496, 1785, 50773, 50773, 570, 309, 307, 2295, 1496, 1785, 406, 312, 29482, 281, 428, 2685, 291, 458, 11420, 293, 51127, 51127, 370, 370, 1338, 370, 741, 519, 300, 311, 741, 478, 12736, 512, 295, 729, 721, 337, 337, 364, 1882, 72, 741, 478, 1364, 51435, 51435, 322, 294, 322, 7183, 1045, 457, 309, 309, 311, 1027, 385, 519, 257, 707, 857, 466, 291, 458, 341, 291, 458, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.08080116550574142, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.6964069800451398e-05}, {"id": 467, "seek": 288670, "start": 2901.96, "end": 2908.12, "text": " so so yeah so i think that's i'm exploring some of those things for for an api i'm working", "tokens": [50364, 312, 1075, 281, 2464, 257, 1254, 979, 19866, 293, 362, 264, 264, 9952, 337, 14916, 300, 2295, 1496, 1785, 50773, 50773, 570, 309, 307, 2295, 1496, 1785, 406, 312, 29482, 281, 428, 2685, 291, 458, 11420, 293, 51127, 51127, 370, 370, 1338, 370, 741, 519, 300, 311, 741, 478, 12736, 512, 295, 729, 721, 337, 337, 364, 1882, 72, 741, 478, 1364, 51435, 51435, 322, 294, 322, 7183, 1045, 457, 309, 309, 311, 1027, 385, 519, 257, 707, 857, 466, 291, 458, 341, 291, 458, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.08080116550574142, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.6964069800451398e-05}, {"id": 468, "seek": 288670, "start": 2908.12, "end": 2913.2799999999997, "text": " on in on pages three but it it's made me think a little bit about you know this you know", "tokens": [50364, 312, 1075, 281, 2464, 257, 1254, 979, 19866, 293, 362, 264, 264, 9952, 337, 14916, 300, 2295, 1496, 1785, 50773, 50773, 570, 309, 307, 2295, 1496, 1785, 406, 312, 29482, 281, 428, 2685, 291, 458, 11420, 293, 51127, 51127, 370, 370, 1338, 370, 741, 519, 300, 311, 741, 478, 12736, 512, 295, 729, 721, 337, 337, 364, 1882, 72, 741, 478, 1364, 51435, 51435, 322, 294, 322, 7183, 1045, 457, 309, 309, 311, 1027, 385, 519, 257, 707, 857, 466, 291, 458, 341, 291, 458, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.08080116550574142, "compression_ratio": 1.7439613526570048, "no_caption_prob": 1.6964069800451398e-05}, {"id": 469, "seek": 291328, "start": 2913.28, "end": 2918.6400000000003, "text": " it's somewhat related but it's this concept of deriving from from a source of truth and", "tokens": [50364, 309, 311, 8344, 4077, 457, 309, 311, 341, 3410, 295, 1163, 2123, 490, 490, 257, 4009, 295, 3494, 293, 50632, 50632, 437, 820, 264, 10290, 295, 264, 4009, 295, 3494, 312, 457, 22915, 291, 7019, 300, 412, 1935, 50912, 50912, 281, 281, 362, 309, 2906, 264, 264, 3467, 295, 13280, 291, 393, 362, 365, 309, 293, 797, 341, 341, 411, 51206, 51206, 21993, 309, 311, 406, 300, 291, 393, 1128, 764, 411, 257, 2295, 1496, 10290, 411, 257, 25890, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.06705107171851468, "compression_ratio": 1.8592964824120604, "no_caption_prob": 4.683607767219655e-05}, {"id": 470, "seek": 291328, "start": 2918.6400000000003, "end": 2924.2400000000002, "text": " what should the representation of the source of truth be but ideally you wrap that at least", "tokens": [50364, 309, 311, 8344, 4077, 457, 309, 311, 341, 3410, 295, 1163, 2123, 490, 490, 257, 4009, 295, 3494, 293, 50632, 50632, 437, 820, 264, 10290, 295, 264, 4009, 295, 3494, 312, 457, 22915, 291, 7019, 300, 412, 1935, 50912, 50912, 281, 281, 362, 309, 2906, 264, 264, 3467, 295, 13280, 291, 393, 362, 365, 309, 293, 797, 341, 341, 411, 51206, 51206, 21993, 309, 311, 406, 300, 291, 393, 1128, 764, 411, 257, 2295, 1496, 10290, 411, 257, 25890, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.06705107171851468, "compression_ratio": 1.8592964824120604, "no_caption_prob": 4.683607767219655e-05}, {"id": 471, "seek": 291328, "start": 2924.2400000000002, "end": 2930.1200000000003, "text": " to to have it represent the the types of interactions you can have with it and again this this like", "tokens": [50364, 309, 311, 8344, 4077, 457, 309, 311, 341, 3410, 295, 1163, 2123, 490, 490, 257, 4009, 295, 3494, 293, 50632, 50632, 437, 820, 264, 10290, 295, 264, 4009, 295, 3494, 312, 457, 22915, 291, 7019, 300, 412, 1935, 50912, 50912, 281, 281, 362, 309, 2906, 264, 264, 3467, 295, 13280, 291, 393, 362, 365, 309, 293, 797, 341, 341, 411, 51206, 51206, 21993, 309, 311, 406, 300, 291, 393, 1128, 764, 411, 257, 2295, 1496, 10290, 411, 257, 25890, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.06705107171851468, "compression_ratio": 1.8592964824120604, "no_caption_prob": 4.683607767219655e-05}, {"id": 472, "seek": 291328, "start": 2930.1200000000003, "end": 2936.0600000000004, "text": " wrapping it's not that you can never use like a low level representation like a dictionary", "tokens": [50364, 309, 311, 8344, 4077, 457, 309, 311, 341, 3410, 295, 1163, 2123, 490, 490, 257, 4009, 295, 3494, 293, 50632, 50632, 437, 820, 264, 10290, 295, 264, 4009, 295, 3494, 312, 457, 22915, 291, 7019, 300, 412, 1935, 50912, 50912, 281, 281, 362, 309, 2906, 264, 264, 3467, 295, 13280, 291, 393, 362, 365, 309, 293, 797, 341, 341, 411, 51206, 51206, 21993, 309, 311, 406, 300, 291, 393, 1128, 764, 411, 257, 2295, 1496, 10290, 411, 257, 25890, 51503, 51503], "temperature": 0.0, "avg_logprob": -0.06705107171851468, "compression_ratio": 1.8592964824120604, "no_caption_prob": 4.683607767219655e-05}, {"id": 473, "seek": 293606, "start": 2936.06, "end": 2943.4, "text": " or something like that but you should think about what kinds like what do these types", "tokens": [50364, 420, 746, 411, 300, 457, 291, 820, 519, 466, 437, 3685, 411, 437, 360, 613, 3467, 50731, 50731, 2089, 291, 281, 360, 365, 365, 552, 293, 498, 436, 2089, 291, 281, 360, 45667, 21493, 721, 365, 552, 51040, 51040, 550, 291, 820, 7019, 309, 293, 4871, 729, 293, 6964, 264, 9226, 291, 528, 337, 309, 370, 51351, 51351, 498, 291, 1105, 498, 291, 4659, 380, 312, 1075, 281, 8969, 746, 666, 309, 3993, 807, 257, 1254, 2519, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.052960348717960314, "compression_ratio": 1.8324607329842932, "no_caption_prob": 7.72076309658587e-05}, {"id": 474, "seek": 293606, "start": 2943.4, "end": 2949.58, "text": " allow you to do with with them and if they allow you to do undesirable things with them", "tokens": [50364, 420, 746, 411, 300, 457, 291, 820, 519, 466, 437, 3685, 411, 437, 360, 613, 3467, 50731, 50731, 2089, 291, 281, 360, 365, 365, 552, 293, 498, 436, 2089, 291, 281, 360, 45667, 21493, 721, 365, 552, 51040, 51040, 550, 291, 820, 7019, 309, 293, 4871, 729, 293, 6964, 264, 9226, 291, 528, 337, 309, 370, 51351, 51351, 498, 291, 1105, 498, 291, 4659, 380, 312, 1075, 281, 8969, 746, 666, 309, 3993, 807, 257, 1254, 2519, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.052960348717960314, "compression_ratio": 1.8324607329842932, "no_caption_prob": 7.72076309658587e-05}, {"id": 475, "seek": 293606, "start": 2949.58, "end": 2955.7999999999997, "text": " then you should wrap it and prevent those and define the interface you want for it so", "tokens": [50364, 420, 746, 411, 300, 457, 291, 820, 519, 466, 437, 3685, 411, 437, 360, 613, 3467, 50731, 50731, 2089, 291, 281, 360, 365, 365, 552, 293, 498, 436, 2089, 291, 281, 360, 45667, 21493, 721, 365, 552, 51040, 51040, 550, 291, 820, 7019, 309, 293, 4871, 729, 293, 6964, 264, 9226, 291, 528, 337, 309, 370, 51351, 51351, 498, 291, 1105, 498, 291, 4659, 380, 312, 1075, 281, 8969, 746, 666, 309, 3993, 807, 257, 1254, 2519, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.052960348717960314, "compression_ratio": 1.8324607329842932, "no_caption_prob": 7.72076309658587e-05}, {"id": 476, "seek": 293606, "start": 2955.7999999999997, "end": 2962.88, "text": " if you um if you shouldn't be able to insert something into it except through a form field", "tokens": [50364, 420, 746, 411, 300, 457, 291, 820, 519, 466, 437, 3685, 411, 437, 360, 613, 3467, 50731, 50731, 2089, 291, 281, 360, 365, 365, 552, 293, 498, 436, 2089, 291, 281, 360, 45667, 21493, 721, 365, 552, 51040, 51040, 550, 291, 820, 7019, 309, 293, 4871, 729, 293, 6964, 264, 9226, 291, 528, 337, 309, 370, 51351, 51351, 498, 291, 1105, 498, 291, 4659, 380, 312, 1075, 281, 8969, 746, 666, 309, 3993, 807, 257, 1254, 2519, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.052960348717960314, "compression_ratio": 1.8324607329842932, "no_caption_prob": 7.72076309658587e-05}, {"id": 477, "seek": 296288, "start": 2962.88, "end": 2968.4, "text": " getting changed then if you have a dictionary you're inviting that type of interaction so", "tokens": [50364, 1242, 3105, 550, 498, 291, 362, 257, 25890, 291, 434, 18202, 300, 2010, 295, 9285, 370, 50640, 50640, 291, 500, 380, 483, 281, 1969, 264, 9226, 295, 577, 291, 528, 746, 281, 312, 1143, 370, 291, 458, 50860, 50860, 264, 264, 21993, 1487, 760, 281, 1105, 17827, 437, 257, 2010, 8855, 437, 7363, 763, 775, 51212, 51212, 309, 2906, 775, 309, 2906, 1340, 466, 689, 257, 1081, 1361, 490, 293, 775, 309, 437, 437, 51490, 51490, 18491, 360, 291, 528, 281, 7983, 337, 577, 264, 551, 393, 312, 1143, 689, 264, 551, 393, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.05934972861378463, "compression_ratio": 1.9557522123893805, "no_caption_prob": 1.3845483408658765e-05}, {"id": 478, "seek": 296288, "start": 2968.4, "end": 2972.8, "text": " you don't get to control the interface of how you want something to be used so you know", "tokens": [50364, 1242, 3105, 550, 498, 291, 362, 257, 25890, 291, 434, 18202, 300, 2010, 295, 9285, 370, 50640, 50640, 291, 500, 380, 483, 281, 1969, 264, 9226, 295, 577, 291, 528, 746, 281, 312, 1143, 370, 291, 458, 50860, 50860, 264, 264, 21993, 1487, 760, 281, 1105, 17827, 437, 257, 2010, 8855, 437, 7363, 763, 775, 51212, 51212, 309, 2906, 775, 309, 2906, 1340, 466, 689, 257, 1081, 1361, 490, 293, 775, 309, 437, 437, 51490, 51490, 18491, 360, 291, 528, 281, 7983, 337, 577, 264, 551, 393, 312, 1143, 689, 264, 551, 393, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.05934972861378463, "compression_ratio": 1.9557522123893805, "no_caption_prob": 1.3845483408658765e-05}, {"id": 479, "seek": 296288, "start": 2972.8, "end": 2979.84, "text": " the the wrapping comes down to um defining what a type represents what validations does", "tokens": [50364, 1242, 3105, 550, 498, 291, 362, 257, 25890, 291, 434, 18202, 300, 2010, 295, 9285, 370, 50640, 50640, 291, 500, 380, 483, 281, 1969, 264, 9226, 295, 577, 291, 528, 746, 281, 312, 1143, 370, 291, 458, 50860, 50860, 264, 264, 21993, 1487, 760, 281, 1105, 17827, 437, 257, 2010, 8855, 437, 7363, 763, 775, 51212, 51212, 309, 2906, 775, 309, 2906, 1340, 466, 689, 257, 1081, 1361, 490, 293, 775, 309, 437, 437, 51490, 51490, 18491, 360, 291, 528, 281, 7983, 337, 577, 264, 551, 393, 312, 1143, 689, 264, 551, 393, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.05934972861378463, "compression_ratio": 1.9557522123893805, "no_caption_prob": 1.3845483408658765e-05}, {"id": 480, "seek": 296288, "start": 2979.84, "end": 2985.4, "text": " it represent does it represent anything about where a place came from and does it what what", "tokens": [50364, 1242, 3105, 550, 498, 291, 362, 257, 25890, 291, 434, 18202, 300, 2010, 295, 9285, 370, 50640, 50640, 291, 500, 380, 483, 281, 1969, 264, 9226, 295, 577, 291, 528, 746, 281, 312, 1143, 370, 291, 458, 50860, 50860, 264, 264, 21993, 1487, 760, 281, 1105, 17827, 437, 257, 2010, 8855, 437, 7363, 763, 775, 51212, 51212, 309, 2906, 775, 309, 2906, 1340, 466, 689, 257, 1081, 1361, 490, 293, 775, 309, 437, 437, 51490, 51490, 18491, 360, 291, 528, 281, 7983, 337, 577, 264, 551, 393, 312, 1143, 689, 264, 551, 393, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.05934972861378463, "compression_ratio": 1.9557522123893805, "no_caption_prob": 1.3845483408658765e-05}, {"id": 481, "seek": 296288, "start": 2985.4, "end": 2990.6400000000003, "text": " constraints do you want to capture for how the thing can be used where the thing can", "tokens": [50364, 1242, 3105, 550, 498, 291, 362, 257, 25890, 291, 434, 18202, 300, 2010, 295, 9285, 370, 50640, 50640, 291, 500, 380, 483, 281, 1969, 264, 9226, 295, 577, 291, 528, 746, 281, 312, 1143, 370, 291, 458, 50860, 50860, 264, 264, 21993, 1487, 760, 281, 1105, 17827, 437, 257, 2010, 8855, 437, 7363, 763, 775, 51212, 51212, 309, 2906, 775, 309, 2906, 1340, 466, 689, 257, 1081, 1361, 490, 293, 775, 309, 437, 437, 51490, 51490, 18491, 360, 291, 528, 281, 7983, 337, 577, 264, 551, 393, 312, 1143, 689, 264, 551, 393, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.05934972861378463, "compression_ratio": 1.9557522123893805, "no_caption_prob": 1.3845483408658765e-05}, {"id": 482, "seek": 299064, "start": 2990.64, "end": 2997.7599999999998, "text": " be used and how to present it and how to use it well maybe we should uh maybe we should", "tokens": [50364, 312, 1143, 293, 577, 281, 1974, 309, 293, 577, 281, 764, 309, 731, 1310, 321, 820, 2232, 1310, 321, 820, 50720, 50720, 7019, 2440, 322, 341, 472, 420, 366, 321, 14853, 424, 3759, 3469, 572, 572, 300, 1177, 380, 572, 300, 1177, 380, 652, 51146, 51146, 604, 2020, 370, 360, 291, 362, 604, 6082, 322, 577, 281, 483, 1409, 365, 7019, 2440, 293, 14853, 4007, 3469, 51566, 51566, 661, 813, 264, 2306, 300, 321, 600, 2835, 370, 1400, 293, 1228, 42687, 3467, 293, 20220, 28540, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10133723998337649, "compression_ratio": 1.854922279792746, "no_caption_prob": 3.647484118118882e-05}, {"id": 483, "seek": 299064, "start": 2997.7599999999998, "end": 3006.2799999999997, "text": " wrap early on this one or are we unwrapping late no no that doesn't no that doesn't make", "tokens": [50364, 312, 1143, 293, 577, 281, 1974, 309, 293, 577, 281, 764, 309, 731, 1310, 321, 820, 2232, 1310, 321, 820, 50720, 50720, 7019, 2440, 322, 341, 472, 420, 366, 321, 14853, 424, 3759, 3469, 572, 572, 300, 1177, 380, 572, 300, 1177, 380, 652, 51146, 51146, 604, 2020, 370, 360, 291, 362, 604, 6082, 322, 577, 281, 483, 1409, 365, 7019, 2440, 293, 14853, 4007, 3469, 51566, 51566, 661, 813, 264, 2306, 300, 321, 600, 2835, 370, 1400, 293, 1228, 42687, 3467, 293, 20220, 28540, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10133723998337649, "compression_ratio": 1.854922279792746, "no_caption_prob": 3.647484118118882e-05}, {"id": 484, "seek": 299064, "start": 3006.2799999999997, "end": 3014.68, "text": " any sense so do you have any tips on how to get started with wrap early and unwrap late", "tokens": [50364, 312, 1143, 293, 577, 281, 1974, 309, 293, 577, 281, 764, 309, 731, 1310, 321, 820, 2232, 1310, 321, 820, 50720, 50720, 7019, 2440, 322, 341, 472, 420, 366, 321, 14853, 424, 3759, 3469, 572, 572, 300, 1177, 380, 572, 300, 1177, 380, 652, 51146, 51146, 604, 2020, 370, 360, 291, 362, 604, 6082, 322, 577, 281, 483, 1409, 365, 7019, 2440, 293, 14853, 4007, 3469, 51566, 51566, 661, 813, 264, 2306, 300, 321, 600, 2835, 370, 1400, 293, 1228, 42687, 3467, 293, 20220, 28540, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10133723998337649, "compression_ratio": 1.854922279792746, "no_caption_prob": 3.647484118118882e-05}, {"id": 485, "seek": 299064, "start": 3014.68, "end": 3019.44, "text": " other than the ones that we've mentioned so far and using opaque types and avoiding primitive", "tokens": [50364, 312, 1143, 293, 577, 281, 1974, 309, 293, 577, 281, 764, 309, 731, 1310, 321, 820, 2232, 1310, 321, 820, 50720, 50720, 7019, 2440, 322, 341, 472, 420, 366, 321, 14853, 424, 3759, 3469, 572, 572, 300, 1177, 380, 572, 300, 1177, 380, 652, 51146, 51146, 604, 2020, 370, 360, 291, 362, 604, 6082, 322, 577, 281, 483, 1409, 365, 7019, 2440, 293, 14853, 4007, 3469, 51566, 51566, 661, 813, 264, 2306, 300, 321, 600, 2835, 370, 1400, 293, 1228, 42687, 3467, 293, 20220, 28540, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10133723998337649, "compression_ratio": 1.854922279792746, "no_caption_prob": 3.647484118118882e-05}, {"id": 486, "seek": 301944, "start": 3019.44, "end": 3026.62, "text": " obsession uh yeah definitely uh if you if you haven't give those episodes a listen because", "tokens": [50364, 30521, 2232, 1338, 2138, 2232, 498, 291, 498, 291, 2378, 380, 976, 729, 9313, 257, 2140, 570, 50723, 50723, 456, 311, 257, 688, 295, 7340, 1507, 294, 294, 527, 12897, 281, 42687, 3467, 3500, 293, 294, 741, 914, 51026, 51026, 6095, 309, 311, 4739, 4764, 321, 820, 498, 498, 321, 727, 362, 257, 1520, 412, 264, 8539, 949, 51382, 51382, 2618, 35959, 281, 281, 806, 76, 6477, 436, 1633, 2140, 281, 527, 12897, 281, 42687, 3467, 550, 321, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1178441047668457, "compression_ratio": 1.756218905472637, "no_caption_prob": 7.719994755461812e-05}, {"id": 487, "seek": 301944, "start": 3026.62, "end": 3032.68, "text": " there's a lot of relevant stuff in in our intro to opaque types episode and in i mean", "tokens": [50364, 30521, 2232, 1338, 2138, 2232, 498, 291, 498, 291, 2378, 380, 976, 729, 9313, 257, 2140, 570, 50723, 50723, 456, 311, 257, 688, 295, 7340, 1507, 294, 294, 527, 12897, 281, 42687, 3467, 3500, 293, 294, 741, 914, 51026, 51026, 6095, 309, 311, 4739, 4764, 321, 820, 498, 498, 321, 727, 362, 257, 1520, 412, 264, 8539, 949, 51382, 51382, 2618, 35959, 281, 281, 806, 76, 6477, 436, 1633, 2140, 281, 527, 12897, 281, 42687, 3467, 550, 321, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1178441047668457, "compression_ratio": 1.756218905472637, "no_caption_prob": 7.719994755461812e-05}, {"id": 488, "seek": 301944, "start": 3032.68, "end": 3039.8, "text": " honestly it's required listening we should if if we could have a check at the gate before", "tokens": [50364, 30521, 2232, 1338, 2138, 2232, 498, 291, 498, 291, 2378, 380, 976, 729, 9313, 257, 2140, 570, 50723, 50723, 456, 311, 257, 688, 295, 7340, 1507, 294, 294, 527, 12897, 281, 42687, 3467, 3500, 293, 294, 741, 914, 51026, 51026, 6095, 309, 311, 4739, 4764, 321, 820, 498, 498, 321, 727, 362, 257, 1520, 412, 264, 8539, 949, 51382, 51382, 2618, 35959, 281, 281, 806, 76, 6477, 436, 1633, 2140, 281, 527, 12897, 281, 42687, 3467, 550, 321, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1178441047668457, "compression_ratio": 1.756218905472637, "no_caption_prob": 7.719994755461812e-05}, {"id": 489, "seek": 301944, "start": 3039.8, "end": 3045.48, "text": " somebody listens to to elm radio they must listen to our intro to opaque types then we", "tokens": [50364, 30521, 2232, 1338, 2138, 2232, 498, 291, 498, 291, 2378, 380, 976, 729, 9313, 257, 2140, 570, 50723, 50723, 456, 311, 257, 688, 295, 7340, 1507, 294, 294, 527, 12897, 281, 42687, 3467, 3500, 293, 294, 741, 914, 51026, 51026, 6095, 309, 311, 4739, 4764, 321, 820, 498, 498, 321, 727, 362, 257, 1520, 412, 264, 8539, 949, 51382, 51382, 2618, 35959, 281, 281, 806, 76, 6477, 436, 1633, 2140, 281, 527, 12897, 281, 42687, 3467, 550, 321, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.1178441047668457, "compression_ratio": 1.756218905472637, "no_caption_prob": 7.719994755461812e-05}, {"id": 490, "seek": 304548, "start": 3045.48, "end": 3051.16, "text": " would but we don't know how to do that yet we're working on it yeah definitely give those", "tokens": [50364, 576, 457, 321, 500, 380, 458, 577, 281, 360, 300, 1939, 321, 434, 1364, 322, 309, 1338, 2138, 976, 729, 50648, 50648, 2140, 741, 603, 3270, 512, 6123, 281, 452, 6968, 12300, 466, 8729, 293, 11043, 8539, 43153, 293, 1338, 51000, 51000, 741, 611, 741, 600, 2835, 309, 322, 257, 3894, 3500, 457, 741, 362, 257, 456, 311, 257, 12487, 960, 689, 51256, 51256, 741, 8212, 512, 3487, 4494, 807, 512, 295, 341, 1507, 466, 264, 2093, 3825, 1230, 51518, 51518, 1365, 370, 741, 603, 3270, 257, 2113, 281, 300, 293, 1338, 5911, 291, 458, 797, 741, 914, 5120, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.06354338451496606, "compression_ratio": 1.7049808429118773, "no_caption_prob": 8.613475802121684e-05}, {"id": 491, "seek": 304548, "start": 3051.16, "end": 3058.2, "text": " listen i'll drop some links to my blog posts about entry and exit gatekeepers and yeah", "tokens": [50364, 576, 457, 321, 500, 380, 458, 577, 281, 360, 300, 1939, 321, 434, 1364, 322, 309, 1338, 2138, 976, 729, 50648, 50648, 2140, 741, 603, 3270, 512, 6123, 281, 452, 6968, 12300, 466, 8729, 293, 11043, 8539, 43153, 293, 1338, 51000, 51000, 741, 611, 741, 600, 2835, 309, 322, 257, 3894, 3500, 457, 741, 362, 257, 456, 311, 257, 12487, 960, 689, 51256, 51256, 741, 8212, 512, 3487, 4494, 807, 512, 295, 341, 1507, 466, 264, 2093, 3825, 1230, 51518, 51518, 1365, 370, 741, 603, 3270, 257, 2113, 281, 300, 293, 1338, 5911, 291, 458, 797, 741, 914, 5120, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.06354338451496606, "compression_ratio": 1.7049808429118773, "no_caption_prob": 8.613475802121684e-05}, {"id": 492, "seek": 304548, "start": 3058.2, "end": 3063.32, "text": " i also i've mentioned it on a previous episode but i have a there's a youtube video where", "tokens": [50364, 576, 457, 321, 500, 380, 458, 577, 281, 360, 300, 1939, 321, 434, 1364, 322, 309, 1338, 2138, 976, 729, 50648, 50648, 2140, 741, 603, 3270, 512, 6123, 281, 452, 6968, 12300, 466, 8729, 293, 11043, 8539, 43153, 293, 1338, 51000, 51000, 741, 611, 741, 600, 2835, 309, 322, 257, 3894, 3500, 457, 741, 362, 257, 456, 311, 257, 12487, 960, 689, 51256, 51256, 741, 8212, 512, 3487, 4494, 807, 512, 295, 341, 1507, 466, 264, 2093, 3825, 1230, 51518, 51518, 1365, 370, 741, 603, 3270, 257, 2113, 281, 300, 293, 1338, 5911, 291, 458, 797, 741, 914, 5120, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.06354338451496606, "compression_ratio": 1.7049808429118773, "no_caption_prob": 8.613475802121684e-05}, {"id": 493, "seek": 304548, "start": 3063.32, "end": 3068.56, "text": " i presented some ideas walking through some of this stuff about the social security number", "tokens": [50364, 576, 457, 321, 500, 380, 458, 577, 281, 360, 300, 1939, 321, 434, 1364, 322, 309, 1338, 2138, 976, 729, 50648, 50648, 2140, 741, 603, 3270, 512, 6123, 281, 452, 6968, 12300, 466, 8729, 293, 11043, 8539, 43153, 293, 1338, 51000, 51000, 741, 611, 741, 600, 2835, 309, 322, 257, 3894, 3500, 457, 741, 362, 257, 456, 311, 257, 12487, 960, 689, 51256, 51256, 741, 8212, 512, 3487, 4494, 807, 512, 295, 341, 1507, 466, 264, 2093, 3825, 1230, 51518, 51518, 1365, 370, 741, 603, 3270, 257, 2113, 281, 300, 293, 1338, 5911, 291, 458, 797, 741, 914, 5120, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.06354338451496606, "compression_ratio": 1.7049808429118773, "no_caption_prob": 8.613475802121684e-05}, {"id": 494, "seek": 304548, "start": 3068.56, "end": 3074.96, "text": " example so i'll drop a link to that and yeah otherwise you know again i mean experiment", "tokens": [50364, 576, 457, 321, 500, 380, 458, 577, 281, 360, 300, 1939, 321, 434, 1364, 322, 309, 1338, 2138, 976, 729, 50648, 50648, 2140, 741, 603, 3270, 512, 6123, 281, 452, 6968, 12300, 466, 8729, 293, 11043, 8539, 43153, 293, 1338, 51000, 51000, 741, 611, 741, 600, 2835, 309, 322, 257, 3894, 3500, 457, 741, 362, 257, 456, 311, 257, 12487, 960, 689, 51256, 51256, 741, 8212, 512, 3487, 4494, 807, 512, 295, 341, 1507, 466, 264, 2093, 3825, 1230, 51518, 51518, 1365, 370, 741, 603, 3270, 257, 2113, 281, 300, 293, 1338, 5911, 291, 458, 797, 741, 914, 5120, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.06354338451496606, "compression_ratio": 1.7049808429118773, "no_caption_prob": 8.613475802121684e-05}, {"id": 495, "seek": 307496, "start": 3074.96, "end": 3079.12, "text": " with it and pay attention to what are the constraints you know we talked about like", "tokens": [50364, 365, 309, 293, 1689, 3202, 281, 437, 366, 264, 18491, 291, 458, 321, 2825, 466, 411, 50572, 50572, 264, 46904, 7389, 293, 611, 445, 411, 1566, 437, 437, 18491, 360, 291, 528, 309, 311, 50904, 50904, 412, 264, 917, 295, 264, 786, 291, 600, 658, 281, 519, 466, 264, 2740, 291, 434, 12606, 456, 311, 51078, 51078, 572, 572, 636, 926, 309, 456, 311, 572, 472, 2744, 9001, 439, 3827, 570, 309, 2584, 5946, 51389, 51389, 322, 264, 18491, 291, 434, 1382, 281, 2316, 370, 534, 519, 466, 428, 18491, 293, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.0487805165742573, "compression_ratio": 1.8608695652173912, "no_caption_prob": 5.390115984482691e-05}, {"id": 496, "seek": 307496, "start": 3079.12, "end": 3085.76, "text": " the pragmatic concerns and also just like saying what what constraints do you want it's", "tokens": [50364, 365, 309, 293, 1689, 3202, 281, 437, 366, 264, 18491, 291, 458, 321, 2825, 466, 411, 50572, 50572, 264, 46904, 7389, 293, 611, 445, 411, 1566, 437, 437, 18491, 360, 291, 528, 309, 311, 50904, 50904, 412, 264, 917, 295, 264, 786, 291, 600, 658, 281, 519, 466, 264, 2740, 291, 434, 12606, 456, 311, 51078, 51078, 572, 572, 636, 926, 309, 456, 311, 572, 472, 2744, 9001, 439, 3827, 570, 309, 2584, 5946, 51389, 51389, 322, 264, 18491, 291, 434, 1382, 281, 2316, 370, 534, 519, 466, 428, 18491, 293, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.0487805165742573, "compression_ratio": 1.8608695652173912, "no_caption_prob": 5.390115984482691e-05}, {"id": 497, "seek": 307496, "start": 3085.76, "end": 3089.2400000000002, "text": " at the end of the day you've got to think about the problems you're solving there's", "tokens": [50364, 365, 309, 293, 1689, 3202, 281, 437, 366, 264, 18491, 291, 458, 321, 2825, 466, 411, 50572, 50572, 264, 46904, 7389, 293, 611, 445, 411, 1566, 437, 437, 18491, 360, 291, 528, 309, 311, 50904, 50904, 412, 264, 917, 295, 264, 786, 291, 600, 658, 281, 519, 466, 264, 2740, 291, 434, 12606, 456, 311, 51078, 51078, 572, 572, 636, 926, 309, 456, 311, 572, 472, 2744, 9001, 439, 3827, 570, 309, 2584, 5946, 51389, 51389, 322, 264, 18491, 291, 434, 1382, 281, 2316, 370, 534, 519, 466, 428, 18491, 293, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.0487805165742573, "compression_ratio": 1.8608695652173912, "no_caption_prob": 5.390115984482691e-05}, {"id": 498, "seek": 307496, "start": 3089.2400000000002, "end": 3095.46, "text": " no no way around it there's no one size fits all solution because it completely depends", "tokens": [50364, 365, 309, 293, 1689, 3202, 281, 437, 366, 264, 18491, 291, 458, 321, 2825, 466, 411, 50572, 50572, 264, 46904, 7389, 293, 611, 445, 411, 1566, 437, 437, 18491, 360, 291, 528, 309, 311, 50904, 50904, 412, 264, 917, 295, 264, 786, 291, 600, 658, 281, 519, 466, 264, 2740, 291, 434, 12606, 456, 311, 51078, 51078, 572, 572, 636, 926, 309, 456, 311, 572, 472, 2744, 9001, 439, 3827, 570, 309, 2584, 5946, 51389, 51389, 322, 264, 18491, 291, 434, 1382, 281, 2316, 370, 534, 519, 466, 428, 18491, 293, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.0487805165742573, "compression_ratio": 1.8608695652173912, "no_caption_prob": 5.390115984482691e-05}, {"id": 499, "seek": 307496, "start": 3095.46, "end": 3100.14, "text": " on the constraints you're trying to model so really think about your constraints and", "tokens": [50364, 365, 309, 293, 1689, 3202, 281, 437, 366, 264, 18491, 291, 458, 321, 2825, 466, 411, 50572, 50572, 264, 46904, 7389, 293, 611, 445, 411, 1566, 437, 437, 18491, 360, 291, 528, 309, 311, 50904, 50904, 412, 264, 917, 295, 264, 786, 291, 600, 658, 281, 519, 466, 264, 2740, 291, 434, 12606, 456, 311, 51078, 51078, 572, 572, 636, 926, 309, 456, 311, 572, 472, 2744, 9001, 439, 3827, 570, 309, 2584, 5946, 51389, 51389, 322, 264, 18491, 291, 434, 1382, 281, 2316, 370, 534, 519, 466, 428, 18491, 293, 51623, 51623], "temperature": 0.0, "avg_logprob": -0.0487805165742573, "compression_ratio": 1.8608695652173912, "no_caption_prob": 5.390115984482691e-05}, {"id": 500, "seek": 310014, "start": 3100.14, "end": 3108.24, "text": " think about how your types support those constraints or or not and and think about are you are", "tokens": [50364, 519, 466, 577, 428, 3467, 1406, 729, 18491, 420, 420, 406, 293, 293, 519, 466, 366, 291, 366, 50769, 50769, 291, 11642, 729, 18491, 294, 472, 32395, 1081, 294, 364, 42687, 3467, 10088, 420, 366, 291, 51153, 51153, 11642, 729, 18491, 5315, 291, 764, 264, 2010, 439, 926, 428, 3089, 3096, 281, 51401, 51401, 385, 300, 311, 264, 300, 311, 264, 955, 1168, 741, 478, 3365, 562, 741, 478, 1105, 577, 577, 709, 393, 741, 3361, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.05860175490379334, "compression_ratio": 1.9090909090909092, "no_caption_prob": 1.8341173927183263e-05}, {"id": 501, "seek": 310014, "start": 3108.24, "end": 3115.92, "text": " you managing those constraints in one centralized place in an opaque types module or are you", "tokens": [50364, 519, 466, 577, 428, 3467, 1406, 729, 18491, 420, 420, 406, 293, 293, 519, 466, 366, 291, 366, 50769, 50769, 291, 11642, 729, 18491, 294, 472, 32395, 1081, 294, 364, 42687, 3467, 10088, 420, 366, 291, 51153, 51153, 11642, 729, 18491, 5315, 291, 764, 264, 2010, 439, 926, 428, 3089, 3096, 281, 51401, 51401, 385, 300, 311, 264, 300, 311, 264, 955, 1168, 741, 478, 3365, 562, 741, 478, 1105, 577, 577, 709, 393, 741, 3361, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.05860175490379334, "compression_ratio": 1.9090909090909092, "no_caption_prob": 1.8341173927183263e-05}, {"id": 502, "seek": 310014, "start": 3115.92, "end": 3120.8799999999997, "text": " managing those constraints everywhere you use the type all around your code base to", "tokens": [50364, 519, 466, 577, 428, 3467, 1406, 729, 18491, 420, 420, 406, 293, 293, 519, 466, 366, 291, 366, 50769, 50769, 291, 11642, 729, 18491, 294, 472, 32395, 1081, 294, 364, 42687, 3467, 10088, 420, 366, 291, 51153, 51153, 11642, 729, 18491, 5315, 291, 764, 264, 2010, 439, 926, 428, 3089, 3096, 281, 51401, 51401, 385, 300, 311, 264, 300, 311, 264, 955, 1168, 741, 478, 3365, 562, 741, 478, 1105, 577, 577, 709, 393, 741, 3361, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.05860175490379334, "compression_ratio": 1.9090909090909092, "no_caption_prob": 1.8341173927183263e-05}, {"id": 503, "seek": 310014, "start": 3120.8799999999997, "end": 3127.6, "text": " me that's the that's the big question i'm asking when i'm um how how much can i trust", "tokens": [50364, 519, 466, 577, 428, 3467, 1406, 729, 18491, 420, 420, 406, 293, 293, 519, 466, 366, 291, 366, 50769, 50769, 291, 11642, 729, 18491, 294, 472, 32395, 1081, 294, 364, 42687, 3467, 10088, 420, 366, 291, 51153, 51153, 11642, 729, 18491, 5315, 291, 764, 264, 2010, 439, 926, 428, 3089, 3096, 281, 51401, 51401, 385, 300, 311, 264, 300, 311, 264, 955, 1168, 741, 478, 3365, 562, 741, 478, 1105, 577, 577, 709, 393, 741, 3361, 51737, 51737], "temperature": 0.0, "avg_logprob": -0.05860175490379334, "compression_ratio": 1.9090909090909092, "no_caption_prob": 1.8341173927183263e-05}, {"id": 504, "seek": 312760, "start": 3127.6, "end": 3133.72, "text": " a type by using the interface it exposes for me to use it versus how much do i have to", "tokens": [50364, 257, 2010, 538, 1228, 264, 9226, 309, 1278, 4201, 337, 385, 281, 764, 309, 5717, 577, 709, 360, 741, 362, 281, 50670, 50670, 7500, 3067, 729, 18491, 2380, 295, 300, 370, 300, 309, 311, 257, 1168, 295, 411, 689, 50905, 50905, 775, 264, 6357, 5784, 293, 309, 309, 445, 733, 295, 3417, 766, 498, 741, 478, 534, 5804, 466, 51174, 51174, 16478, 741, 528, 281, 652, 988, 741, 500, 380, 2082, 493, 577, 741, 478, 1228, 264, 2093, 3825, 1230, 293, 741, 478, 51398, 51398, 406, 1364, 294, 264, 2093, 3825, 1230, 10088, 300, 3417, 766, 300, 3417, 411, 1699, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.07323648379399227, "compression_ratio": 1.785425101214575, "no_caption_prob": 2.5465224098297767e-05}, {"id": 505, "seek": 312760, "start": 3133.72, "end": 3138.42, "text": " carefully manage those constraints outside of that so that it's a question of like where", "tokens": [50364, 257, 2010, 538, 1228, 264, 9226, 309, 1278, 4201, 337, 385, 281, 764, 309, 5717, 577, 709, 360, 741, 362, 281, 50670, 50670, 7500, 3067, 729, 18491, 2380, 295, 300, 370, 300, 309, 311, 257, 1168, 295, 411, 689, 50905, 50905, 775, 264, 6357, 5784, 293, 309, 309, 445, 733, 295, 3417, 766, 498, 741, 478, 534, 5804, 466, 51174, 51174, 16478, 741, 528, 281, 652, 988, 741, 500, 380, 2082, 493, 577, 741, 478, 1228, 264, 2093, 3825, 1230, 293, 741, 478, 51398, 51398, 406, 1364, 294, 264, 2093, 3825, 1230, 10088, 300, 3417, 766, 300, 3417, 411, 1699, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.07323648379399227, "compression_ratio": 1.785425101214575, "no_caption_prob": 2.5465224098297767e-05}, {"id": 506, "seek": 312760, "start": 3138.42, "end": 3143.7999999999997, "text": " does the responsibility belong and it it just kind of feels off if i'm really worried about", "tokens": [50364, 257, 2010, 538, 1228, 264, 9226, 309, 1278, 4201, 337, 385, 281, 764, 309, 5717, 577, 709, 360, 741, 362, 281, 50670, 50670, 7500, 3067, 729, 18491, 2380, 295, 300, 370, 300, 309, 311, 257, 1168, 295, 411, 689, 50905, 50905, 775, 264, 6357, 5784, 293, 309, 309, 445, 733, 295, 3417, 766, 498, 741, 478, 534, 5804, 466, 51174, 51174, 16478, 741, 528, 281, 652, 988, 741, 500, 380, 2082, 493, 577, 741, 478, 1228, 264, 2093, 3825, 1230, 293, 741, 478, 51398, 51398, 406, 1364, 294, 264, 2093, 3825, 1230, 10088, 300, 3417, 766, 300, 3417, 411, 1699, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.07323648379399227, "compression_ratio": 1.785425101214575, "no_caption_prob": 2.5465224098297767e-05}, {"id": 507, "seek": 312760, "start": 3143.7999999999997, "end": 3148.2799999999997, "text": " hmm i want to make sure i don't mess up how i'm using the social security number and i'm", "tokens": [50364, 257, 2010, 538, 1228, 264, 9226, 309, 1278, 4201, 337, 385, 281, 764, 309, 5717, 577, 709, 360, 741, 362, 281, 50670, 50670, 7500, 3067, 729, 18491, 2380, 295, 300, 370, 300, 309, 311, 257, 1168, 295, 411, 689, 50905, 50905, 775, 264, 6357, 5784, 293, 309, 309, 445, 733, 295, 3417, 766, 498, 741, 478, 534, 5804, 466, 51174, 51174, 16478, 741, 528, 281, 652, 988, 741, 500, 380, 2082, 493, 577, 741, 478, 1228, 264, 2093, 3825, 1230, 293, 741, 478, 51398, 51398, 406, 1364, 294, 264, 2093, 3825, 1230, 10088, 300, 3417, 766, 300, 3417, 411, 1699, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.07323648379399227, "compression_ratio": 1.785425101214575, "no_caption_prob": 2.5465224098297767e-05}, {"id": 508, "seek": 312760, "start": 3148.2799999999997, "end": 3153.52, "text": " not working in the social security number module that feels off that feels like wait", "tokens": [50364, 257, 2010, 538, 1228, 264, 9226, 309, 1278, 4201, 337, 385, 281, 764, 309, 5717, 577, 709, 360, 741, 362, 281, 50670, 50670, 7500, 3067, 729, 18491, 2380, 295, 300, 370, 300, 309, 311, 257, 1168, 295, 411, 689, 50905, 50905, 775, 264, 6357, 5784, 293, 309, 309, 445, 733, 295, 3417, 766, 498, 741, 478, 534, 5804, 466, 51174, 51174, 16478, 741, 528, 281, 652, 988, 741, 500, 380, 2082, 493, 577, 741, 478, 1228, 264, 2093, 3825, 1230, 293, 741, 478, 51398, 51398, 406, 1364, 294, 264, 2093, 3825, 1230, 10088, 300, 3417, 766, 300, 3417, 411, 1699, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.07323648379399227, "compression_ratio": 1.785425101214575, "no_caption_prob": 2.5465224098297767e-05}, {"id": 509, "seek": 315352, "start": 3153.52, "end": 3158.42, "text": " that shouldn't be my responsibility i should be able to trust this module to use it safely", "tokens": [50364, 300, 4659, 380, 312, 452, 6357, 741, 820, 312, 1075, 281, 3361, 341, 10088, 281, 764, 309, 11750, 50609, 50609, 370, 741, 820, 40999, 512, 544, 295, 300, 6357, 456, 293, 1817, 7146, 437, 741, 393, 360, 365, 2232, 50966, 50966, 291, 458, 577, 741, 393, 1884, 309, 820, 312, 544, 38901, 293, 577, 741, 393, 764, 309, 490, 1951, 51215, 51215, 300, 10088, 820, 312, 544, 38901, 2602, 295, 445, 33178, 732, 6798, 731, 291, 434, 294, 51507, 51507, 1826, 958, 565, 1826, 958, 565, 51594], "temperature": 0.0, "avg_logprob": -0.1092522010374605, "compression_ratio": 1.9653465346534653, "no_caption_prob": 4.399778845254332e-05}, {"id": 510, "seek": 315352, "start": 3158.42, "end": 3165.56, "text": " so i should delegate some more of that responsibility there and constrain what i can do with uh", "tokens": [50364, 300, 4659, 380, 312, 452, 6357, 741, 820, 312, 1075, 281, 3361, 341, 10088, 281, 764, 309, 11750, 50609, 50609, 370, 741, 820, 40999, 512, 544, 295, 300, 6357, 456, 293, 1817, 7146, 437, 741, 393, 360, 365, 2232, 50966, 50966, 291, 458, 577, 741, 393, 1884, 309, 820, 312, 544, 38901, 293, 577, 741, 393, 764, 309, 490, 1951, 51215, 51215, 300, 10088, 820, 312, 544, 38901, 2602, 295, 445, 33178, 732, 6798, 731, 291, 434, 294, 51507, 51507, 1826, 958, 565, 1826, 958, 565, 51594], "temperature": 0.0, "avg_logprob": -0.1092522010374605, "compression_ratio": 1.9653465346534653, "no_caption_prob": 4.399778845254332e-05}, {"id": 511, "seek": 315352, "start": 3165.56, "end": 3170.54, "text": " you know how i can create it should be more constrained and how i can use it from within", "tokens": [50364, 300, 4659, 380, 312, 452, 6357, 741, 820, 312, 1075, 281, 3361, 341, 10088, 281, 764, 309, 11750, 50609, 50609, 370, 741, 820, 40999, 512, 544, 295, 300, 6357, 456, 293, 1817, 7146, 437, 741, 393, 360, 365, 2232, 50966, 50966, 291, 458, 577, 741, 393, 1884, 309, 820, 312, 544, 38901, 293, 577, 741, 393, 764, 309, 490, 1951, 51215, 51215, 300, 10088, 820, 312, 544, 38901, 2602, 295, 445, 33178, 732, 6798, 731, 291, 434, 294, 51507, 51507, 1826, 958, 565, 1826, 958, 565, 51594], "temperature": 0.0, "avg_logprob": -0.1092522010374605, "compression_ratio": 1.9653465346534653, "no_caption_prob": 4.399778845254332e-05}, {"id": 512, "seek": 315352, "start": 3170.54, "end": 3176.38, "text": " that module should be more constrained instead of just exposing two string well you're in", "tokens": [50364, 300, 4659, 380, 312, 452, 6357, 741, 820, 312, 1075, 281, 3361, 341, 10088, 281, 764, 309, 11750, 50609, 50609, 370, 741, 820, 40999, 512, 544, 295, 300, 6357, 456, 293, 1817, 7146, 437, 741, 393, 360, 365, 2232, 50966, 50966, 291, 458, 577, 741, 393, 1884, 309, 820, 312, 544, 38901, 293, 577, 741, 393, 764, 309, 490, 1951, 51215, 51215, 300, 10088, 820, 312, 544, 38901, 2602, 295, 445, 33178, 732, 6798, 731, 291, 434, 294, 51507, 51507, 1826, 958, 565, 1826, 958, 565, 51594], "temperature": 0.0, "avg_logprob": -0.1092522010374605, "compression_ratio": 1.9653465346534653, "no_caption_prob": 4.399778845254332e-05}, {"id": 513, "seek": 317638, "start": 3176.38, "end": 3186.6, "text": " until next time until next time", "tokens": [50364, 1826, 958, 565, 1826, 958, 565, 50875], "temperature": 0.0, "avg_logprob": -0.42506612671746147, "compression_ratio": 1.1481481481481481, "no_caption_prob": 3.117648157058284e-05}], "language": "en"}