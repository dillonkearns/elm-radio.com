{"text": " Hello, Jeroen. How's it going? How are you doing today? I'm doing pretty well. Hold up inside, but doing pretty well. Yep, same here. Well, why don't we keep ourselves occupied by talking about some Elm? What are we talking about today? Oh, Elm. I like that. We're going to talk about JSON decoders today. Ah, that's a good one. Yeah, JSON decoders. So I feel like we're talking about JSON decoders, but this is really like a broader pattern. So it's extra important to talk about. Yeah, we should probably talk about what JSON decoders are and what they are for. Yeah, maybe like imagine that somebody is like brand new to Elm even like what the heck is a JSON decoder? First of all, welcome. So Elm gives you a lot of guarantees about how it will work. It will produce no runtime errors and all the functions will get the types they expect and the arguments they expect. And that is very good. That's something that we love about Elm. But what happens when you get data from sources that you do not control? Data from outside the Elm code. So for instance, data that comes from HTTP or data that comes from ports or from HTML events. Those are pieces of data that Elm cannot control and cannot control the types of it. So what you do is you validate the JSON that is coming in, if it's JSON, but we're going to talk about JSON decoders. You validate the fields that it has and the types that it has. So if they match, you will get a successful decoding result of the type that you provided. And otherwise you will get an error saying, hey, this field was not what I expected or this field was missing. So from that point on, you do have the data that you want to work with. So if you wanted a record with this and that field with these types, then now you have them. You have successfully told Elm, this is data that I'm going to work with and the data that you're going to have to play with from here on. So that is basically the idea about JSON decoders from what I understand them. Yes, and now, okay, so this is interesting because I'm realizing that from the description you gave, this is basically the more specific instance of the general concept that we described in our opaque types episode. Because in our opaque types episode, we described this sort of ability to do runtime type checking by conditionally returning a type when a validation passes, right? And that's exactly what you just described. And it turns out that JSON decoders are just a special case of that pattern. And the sort of opaque type patterns we talked about are a more general tool that you can use to build that sort of thing yourself. Yeah, that's a good point. So one other point I wanted to make is that just to contrast this against what you would be doing in other languages, let's talk about what that would look like doing this in JavaScript, right? So you would say, you know, you have some JSON response from an HTTP response. And you say that it's JSON, so it's decoded as JSON. And then you do, you know, response.data.person.name. And then maybe it's undefined because you're reaching in and grabbing an object key for which there's no value. Or maybe something's blowing up because you're dereferencing something that was that was not there. Or, you know, so basically, you say that you that it's possible to have a crash there or undefined behavior. Yeah, it's possible to have a crash or worse. The worst case is that you don't have a crash, and you have some bad or unexpected thing happen. Maybe it's a crash, maybe it's a weird bug. It's in some ways even harder to debug what's going on if it's not a crash, if it's just weird behavior, if it's just something that some undefined value gets passed into someplace, it gets concatenated with some string, which makes it the empty string, and then that goes in some other place. And then it tries to look that up as the key for some other HTTP request. And then the HTTP request 404s and you're like, what? Yeah, so basically, you will take much longer to find the problem that there is a problem. Exactly. Yeah. So it's lengthening that feedback loop where you're taking longer to discover what's going on. And, you know, if you just think about it from having confidence in your code point of view, how can you be confident that your code is, you know, it's one type of confidence about your code that you even just grabbed data that actually exists and that like, I don't know, if you have an API and you're saying, hmm, this would be kind of nice if we renamed this because we're calling it this thing, but we've kind of discovered some things about it and we think this would be a better name for this field. How confident are you going to be doing that if you're grabbing that data from JavaScript? Not very much. You're probably just not going to bother doing it, right? If the final replace is okay, if there are not too many instances, then let's try it. Maybe try it, but then you're going to try it and then what are you going to do? You're going to go through the app. You're not just going to run the part that makes the HTTP request, but you're going to run every part that you think uses that payload from that HTTP request to run through every single code path with every single permutation of all the possible conditions to make sure you exercise all possible code. Sounds like fun. Does that sound fun to you? Yeah. How else do you want to pass your afternoon? This is maybe a good thing if you're new to Elm and listening to this and you're like, JSON decoders, why can't I just use my data? That's why. That's why. It feels like a pain and it is a hard part when you're starting out, but once you're in the habit of doing it, I think it's fine. It really brings a lot of guarantees about the code that you're working with. You see the value after a while. Let's put it that way. Yeah. It's the kind of thing. I hear this over and over again from people that they thought it was a nuisance when they first started and over time they grew to really love it and when they go to other languages, they even try to replicate it. There are some libraries out there that try to bring this pattern to TypeScript, for example. Yeah. How am I supposed to trust the HTTP request response? Exactly. I need to validate it and that's pretty much what we do with JSON decoders except that it's enforced by the language or the language. Right. There's no way to tell Elm, just trust me, this is this type and just do your best and blow up if I'm wrong about this. Although there is actually one place where you can do that, but it's not a recommended practice with a port. You can describe, you got it. Ports and flags, which you could say is like a special case of a port, but you can just annotate your port or your flags as saying this takes a record with fields of these types and Elm will just blow up if those assumptions are invalid. Yeah. And then you will not even get the message. So that's one difference with implicit decoding and explicit decoding. Explicit decoding, you will have to handle the error. With implicit decoding, you will get a runtime error that will be shown in the console, but you will not notice in the Elm code. You will not be able to respond to the error. Right. And when you say runtime error, we should clarify your app dies completely, unrecoverably. Yeah. For flags, yes, but not for ports. For flags. Right. I'm pretty sure it doesn't crash for ports. Otherwise leave that in the comments. Let's look that up and leave it in the comments. What the result is there. Yeah, that's a good question. It's a good one to ponder. You don't trust me. You don't trust me. I trust but verify. The thing is that I'm actually doubting myself, so I'm not even trusting myself. So I'm going to have to doubt and verify and then trust myself again. Like, yes, you were right. Or I'm just going to listen to this and say, yeah, no, he was wrong all along. This is what I'm saying is like, we should all be a little more like Elm maybe, or maybe it's good to be trusting people. But just be like, hey, listen, I trust you, but let's just follow this process so we don't have to even question trusting or not. Make sure. Yeah, I agree. Okay. So we kind of talked about this benefit of JSON decoders that it validates your data and you know once you have this typed data, you can trust it and that's great. But there's another benefit and I think this is maybe a more subtle one, but it's one that as you get experience with Elm, I think people really grow to love this part of JSON decoders as well, which is that it allows you to decouple the way that you represent your data from the way that you serialize and deserialize your data. And so, for example, what you find often in JavaScript code is because JSON is this first class citizen, you have JavaScript object notation and you're in JavaScript. So hey, I've got this JavaScript object, I can just pull data off of it, I can just reference these fields and that's quite convenient on the one hand. But on the other hand, maybe you have a format that isn't the best way to describe something or maybe you want to have certain data structures that say make impossible states impossible or better match the rest of your code base. So let's talk a little bit about how that looks in JSON decoders. What are the practices that allow you to decouple the serialization format from the representation of that data in your Elm code? Basically when you decode something, when you decode JSON, you'd set it, hey, I want this field with this name and this type. And then what you do is you apply a function to that, to the results of that, which is from the raw value into something that you control. So what you usually do is we create a new type, so a type alias, which represents what you want, but that could have different names or you create opaque types over which you have much more control and which can give you a lot of guarantees. And that's it. Right. So let's maybe get into a concrete example. So let's say that you've got some way of representing a date time on the server and you have some way of serializing that into JSON so you can send it from the server to the client. And then in your Elm code, you have some way to represent that date time. Well, all three of those may be different. And so if you're using an ISO 8601 string to represent it in the JSON payload that comes through to the client, what I see happening in a lot of JavaScript applications is they'll just store that as the value that they pass around all over the place. So you're passing around these strings, but what you really want to do is you want to wrap that into a nice data type that represents the date time as soon as you get the response. And so like if you're writing a JSON decoder in Elm, let's say you've got some field created at and it's an ISO 8601 date time. Well, you can use your function to parse that from a string and then map that string into an Elm time POSIX value. Like Richard Feldman has a library for doing just that. In fact, he even exposes a decoder that first decodes it as a string and then it maps that string into an Elm time by running a parser that will extract out that ISO 8601 time format into something that Elm can interpret as a POSIX time. And so now the really cool thing is there's not a single point in your Elm code where you have access to that string value. Yeah, that's basically the point of don't model your model based on what you get from the user or from the HTTP, from the server, but model it based on what you will do with it. So if the only thing that you're going to do with time is get the number of the year, the year number, then just get that data. If you need to display that number as a string, you can already store it as a string. If you need to do operations on it, then store it as an integer and then whatever fits your use case the best. Do not store it as a string, as a POSIX, if it does not make sense to what you're going to do with it afterwards. That's interesting. Yeah, I think there's a certain mindset that you get into. So for me, test driven development is an example of this mindset. There's a notion called programming by intention. And all that term means is that you first sort of express how you want to use something and then you reverse engineer that to figure out what the implementation looks like. So you're thinking about how you want to consume something before you actually write the implementation, which means the implementation details don't guide the high level data modeling or API. Yeah, so this is kind of the same thing as API driven. That's a good way to think of it. Yeah, I mean, it's when you're doing data modeling, you know, I mean, you could even start by just writing out your data type. This is what I want to receive from the server. What would my ideal data be? This is actually something you can do with JSON decoders. You can sort of incrementally build something out and start consuming hard coded data. Yeah. So a really good trick in the toolkit of JSON decoders is JSON. It's a function called JSON decode succeed. And what that function does, it's extremely useful for a number of reasons. But one of the most useful use cases for it is to stub out data and just pass in hard coded data. So you could say, I need to get the year that this album was released. There's like some music recording, and I need the year it was released. And when I look at the Spotify API documentation, it says something about an ISO 8601 date time. But all I know is I only care about the year something was released because I'm making an app that takes this Spotify response. And it lists out a listing of albums for all of these tracks and what year they were released and orders them by year. And it doesn't display the date or the month it was released. It only shows the year. And that's all I care about. So ideally, my data structure would just be type alias album is a record. And it's got a field called release year, which is an int. And it's got a field called name, which is the album name, something like that. Okay, let's start with that. We've got those two fields. Now we can write a JSON decoder that decodes data into an album. So what does that look like? Well, it's it's quite easy. You can say JSON dot decode dot succeed 1975. And now that's a JSON decoder that decodes into an int. Well now I want to build that up into a JSON decoder that gives me an album, not just an int. So how do you do that? Well, you say, now we need to decode it into an object into into a record. So we can do that by taking our type alias we defined, we can say JSON dot decode dot map two and give it our album constructor, our record constructor defined by our type alias map to use two arguments map to because we're passing into arguments. And now we give it our two decoders for a hard coded JSON decode succeed 1975 and a JSON decode succeed some album name. So that's a lot of code for a podcast, but the point is that and actually, I kind of did something like this in my Elm Europe talk, incremental type driven development, illustrating this technique of succeeding values and having hard coded things and consuming them as quickly as possible. So you can sort of drive the design of your API by prioritizing things that help you define the API rather than the implementation. So you defer the implementation because you want to discover what the ideal API looks like as fast as possible. Yeah, I was in the front row for that talk. I remember you apologizing because you were taking too much time. That was tough to squeeze into that time slot. Live coding is hard, especially when you have to keep it short. Yeah, try not to. So yeah, that really helps out working with JSON data because you can just do it incrementally. So as long as you can work with raw data and just display the rest of your album, for instance, then you can just do that. And then whenever you will try to make this dynamic, then you can start implementing the decoder parts. There was one thing that you mentioned a few minutes ago now, is about the ISO 8601. Is that it? Yes, that's the number. You got it. I got so impressed when you said it's like 86. I typed it so many times. It's ingrained in my brain. So when you use that ISO 8601 something, then you decode it to a string and then you parse it. Parsing is kind of also the same idea as decoding, isn't it? Yeah, exactly. Decoding is kind of a special case of that. Well it's basically decoding and parsing is the same thing, but you do not work with the same raw data. You have the same thing with other formats. You could have YAML decoders. I'm pretty sure there is a library with a YAML decoder actually from Thierry. You could have a JSON decoder that you point at a GitHub repository and it will decode an Elm repository and give you information about that project. And you could say, decode primary programming language as a string. And then you could do JSON.decode.end then take that string and you could do JSON.decode.fail if the string is not Elm. So you want to reject any non Elm project, right? So that's the thing about JSON decoding is it's actually nothing magical. It's just this one building block of JSON.decode.succeed and JSON.decode.fail. It allows you to build a decoder that always succeeds or always fails. If it always succeeds, it succeeds with the hard coded value you give it. If it always fails, JSON.decode.fail, it always fails with the message you give it. And so you can say if primary programming language does not equal Elm, JSON.decode.fail. Or if it is Elm, JSON.decode.succeed, some value. Yeah, the repository name or just something that says Elm rocks. Yeah, exactly. So that gives you the building blocks that you need to build something like an ISO 8601 decoder because you can just do whatever runtime checks you want. That library happens to be built with an Elm parser, but that's just an implementation detail if you built it with a regular expression or whatever, right? It's just code. Yeah, decoder is just a fancy name for saying a validator. There are other things that we probably want to validate in our code, like forms. I think it was someone called Lexi who made a post called, not Lexi, yes, who made a post called parse don't validate or in the terms that we use now, decode don't validate. So it's basically don't have if conditions that say if this field is this, then go ahead and assume that everything is right, but instead decode form, like get a proper error. Like in JavaScript, if you had if object has field something, if object has field name, then take the name and pass it to this thing. Well, no, you don't want to do that because the problem is if you just do an if condition like that, then you haven't proven your work to the compiler. And so the way I interpret this parse don't validate article is the idea is that you want to be as you're proving certain conditions about your data, you want to show your work so the compiler can keep track of that and keep refining down more constraints and more guarantees about the data in a particular point. Yeah. And basically you validate each field and at the end you will have a whole form validator in the form of a decoder. Right. A form validator in the form of a form decoder. Yeah. Yeah, it's like a decode style validator. And there are a lot of different places that this sort of decoding pattern shows up. Like I mean, for example, I built a package called Elm CLI options parser. And what that library does is you can you can wire it into an Elm worker like a headless Elm application wired in with node JS and then build a command line tool that parses command line flags. So if you say, you know, dash dash help or dash dash output to tell it where to output your code or whatever. So like I use that in the Elm GraphQL command line tool and other things. Yeah, I wish I could have used it in Elm review, but I can't. Oh, that's sad. Because I'm building an Elm application. I don't have an Elm application. I see. That might be a topic for another conversation because we'll see. Maybe I can convince you to use it. But the really nice thing that you get when you use that is that you have a guarantee. You do this sort of decoder style pipeline where you say, okay, I have a command line application and I have a flag called dash dash output. And I expect it to be in this format and you can, you know, do whatever validations you need to. You can say, I expect it to be, you know, an int and I expect this thing to be an int. I expect this string to be either this value or this value. As you go and you build that up, you're basically describing the possible ways to invoke your command line application, right? And because you've described that, you've not only described it to my Elm CLI options parser tool, but you've also described it to the Elm compiler, which means the Elm compiler knows, Oh, based on all these chains that you've done, you added this field of this type, you added this field of this type, you mapped it into this data structure, this record. The Elm compiler knows what data type you're going to end up with. If it succeeded, it knows that it's going to be a result of a given type, a string result or whatever if it fails. And my Elm CLI options parser tool can just guarantee you that you're either a going to get the data you expected and you can just run the program for them or B the user gave an invalid set of options based on your definition and the user is going to see an error message telling them what went wrong, which is pretty cool. Yeah. What about when you don't want the code to fail? Like it is fine if I don't have this flag or if this value is not well formed, but what do you do then? Well, you can define certain fields as optional and the baseline in Elm CLI options parser is just a string. I mean, ultimately everything in a terminal is just a string. And so it's up to you to make additional guarantees or to use specific helpers that say, I expect this to be this type or I expect this to be one of these discrete values. And it can actually present documentation and it can give you better documentation if you use these specific helpers. But you can just say, give me the raw string input and I don't care what it is, just give me the raw thing. Yeah. It's the same thing with JSON decoders. So it's not necessarily black and white. You don't have to have the whole thing crash or fail. If one thing is missing, you can say, Hey, this is optional or this is okay if it doesn't work, but then just use this default value for instance. Right. Yeah. So there's this thing that often I still have to look up the documentation to remember this. You can either say maybe decode.string. Decode.maybe space decode.string, I think. Yeah. You can either say decode.maybe decode.string. That gives you something that the string may or may not be null, right? Or you can say, so you could decode a field that is a maybe string, but that field then needs to be there. So it would need to be, in the JSON, it would need to be name, colon, null. Or you could say this field is optional. So if this field isn't there, that's fine. Just give me nothing. Then you'd have to say maybe and then the field decoder with the string. Yeah. With the decode.string. So that one kind of trips me up, but it's the kind of thing. So it can feel overwhelming at first. There's a lot to take in and it really hurts your brain. But the thing is you want to start at the smaller level. If you try to think about it as a whole, then it's too overwhelming. But if you start by saying, hey, let's say I have a JSON response that comes back. That's just a string, right? That's JSON. A string is JSON or an int is JSON. Yeah. How do I decode that? Well you say JSON.decode.string and that will take whatever string, hello world in your JSON response and it will give you hello world. Or if you pass it a float, then it will say error. I expected a string. So start with that. You know, you start with that and then you say, okay, well can I decode a string and an int in a JSON object with these field names? You know, you start with that and you build it up one step at a time. And actually Brian Hicks has a book called the JSON Survival Kit. It's a pretty quick read. I think it's a really good resource if you're getting started with JSON decoders to learn about this. And he talks about this process of building it up piece by piece to get more complex ones, which I think is the way to learn it. Okay. Yeah. I haven't gone through that one. I probably should. Joel Keneville. Yes. Also has a few blog posts on the subject that we will link to because I know that he sends them, he links to them a lot on Slack and they seem to help people a lot. Definitely. Yeah. It's hard to get started, but just, I think that trying to write JSON decoders top down is kind of overwhelming. So start bottom up, start with the smallest piece of your JSON decoder and get that working. And once you have that working, you can even write a unit test for that if you want, or you can just try working with some smaller piece of data and then build up from there. There's one thing that I'm not very fond of with JSON decoders is that my Elm application won't crash. It will work exactly as I planned it to. And that's great because every HTTPS response that I get will be validated. The thing is, if it's not valid, I will not necessarily know it from a developer's point of view. I will have to handle it at runtime and I have no guarantees that the decoding will work or yeah, that's my biggest issue that I don't know if the decoding will work when I compile. Yes. Yeah. What do you do for that? Well, now that you put it that way, I'm kind of realizing that the main selling point of two projects I've built is exactly that. The first one is Elm GraphQL and Elm GraphQL gives you a way to, if you're not familiar with GraphQL, it's basically a schema for your API. So it's a schema that describes all of the possible API calls you can get. And the graph part is that you can sort of traverse these relationships between different parts of the API. You can go to a user and you can see their friends or their likes and traverse to these different objects. But the part that we're most interested in as Elm developers, that part's great too, but it gives you a schema. So you have types describing all the different values you can get from the API. Yes. And so you can build up a response and it's known before you run your query what data you're going to get back. So Elm GraphQL generates code that allows you to consume your specific GraphQL API in a way where you know that the types are going to be correct based on the schema of your API that GraphQL gives you. So it's basically taking that knowledge that your GraphQL schema has and bringing it down so the Elm compiler also has that knowledge. If you want to get a better picture of what that looks like exactly, I gave a talk at Elm Conf a couple of years back called Types Without Borders. That's worth checking out if you want to get an overview of that concept. So that's one way that you can do that. The other one, which we did our first episode on Elm Pages and we talked about static HTTP, actually that's one of the things that I find most exciting about the Elm Pages project is that it gives you this tool static HTTP, which allows you to run your decoder at build time and get this data from HTTP APIs. And if any of your decoders fail, your users don't see it. You see it in your build pipeline. Your build tool will fail, your CI build will fail, but your users will not see a failure and that's guaranteed, which is pretty exciting to reduce the possible failures that could happen at runtime. But I'm not sure, Jeroen, did you have any other thoughts on that topic of how you can... Yeah. So what happens when you don't have a schema? That's where things are getting tricky. Because you don't have a schema to generate something from or to compare against. So you basically have to kind of unit test and hope the server will match what you expect, I guess. Right. And that is where the limits of Elm end, I guess. Yes. Right. There's just conceptually, there's nothing Elm can do there. Tools like Elm GraphQL can help. There are similar things for Haskell, like Haskell Servant, is that what it's called? That allows you to take the data types you're returning on some Haskell server and it generates types and decoders for your Elm code. Yeah, I don't remember the name, but there were some decoding generators and type generators actually. Yes. I think it makes a lot of sense to... I mean, that's why I named the talk I gave Types Without Borders, because I think it does make sense to sort of connect across these different boundaries of these different languages and runtimes and say like, okay, we're in different runtimes, but that doesn't mean we can't share information about what type of data you should expect. Yeah. I might be going on a tangent here, but you're tying yourself up to the response of the backend. So if the backend changes, the decoders will change, but all the versions of your client side will not work anymore. Right. So I could easily do a whole episode about this specific topic even, not even just Elm GraphQL, but the short... I'll give you the short version, which is that there are two pieces here. One piece is that there are some practices around building GraphQL APIs where people try to build them in a nonbreaking way. This is just a sort of cultural value in the GraphQL community that you try to have nonbreaking API changes. So that means that you could, instead of removing a field, you would add a new one and maybe... Well, see, I have some disagreements with certain parts of this because part of what that implies is that you make every field nullable, which isn't great. And so they say, okay, well it's nullable. So if you stop returning certain fields or if something fails, then your whole assumptions don't fail because you're treating everything as nullable. That doesn't feel like a great solution. But that said, there are certain ways that, okay, if you have a new required argument, that's a breaking API change. And so if you're going to do that, then maybe you make a new field and that field has that required argument. And then you deprecate the old version. And there is a way in your GraphQL schema to deprecate certain fields. So that's one thing. And you can sort of have a path. Maybe if you decide to make a breaking API change, maybe you at least give a nice transition path where you have a deprecation period, and then if you go to a new version or do a breaking change, you give some time for clients to get updated or whatever. Yeah. For REST endpoints, you could duplicate the endpoints. So you do that way. You don't have a breaking change, just new requirements. Right. And the second piece, and I know some people who are doing this is you can take a snapshot of your GraphQL schema. And if you ever have a breaking change, first of all, there's tooling that can tell you if you're making a breaking change to your GraphQL schema, which is cool. Oh, cool. Yeah. It could warn you. And then what you could do is you could kind of take a snapshot every time that happens. If the browser client is on a version between a breaking change, you could say increment a number every time there's a breaking change and you could have the client know which number it's on and then check before it makes a request if it's on an outdated version. And then it has to reload itself before it continues if there's been a breaking change. Yeah. Mario Rogic had a talk kind of like that. Yes. On Evergreen. Yeah. I really like his thoughts on that. That's a really cool concept. Yeah. We'll link to that. Yes, definitely. Another thing we haven't touched on, but we've talked about generating types confidently with tools like Elm GraphQL or Haskell Servant. What about auto generating JSON decoders? There are a lot of tools out there for copy pasting a JSON payload into a window and generating some Elm decoders or there are some editors. IntelliJ Elm has some tooling that lets you generate a decoder based on a type annotation, for example. What do you think about those? Are they worth using? Do you use them? I don't use them because I usually don't have access to those. I don't have the need for it. I think they can be a very good starting point. The thing is that you... What do you decode into? You decode in something that looks like what you have in the backend. So I think they're useful, but only if you transform it afterwards into something that is made for the client. So what we discussed sometime in the episode. You want something that you will use, not something that looks like what the backend returns. Right. So it's like coupling you to the serialization format and it's getting you thinking about the serialization format first rather than your ideal data structure. Exactly. And you don't want that. You can map over what you got at decode time. So add another layer of decoding and that will be fine in my book. But you don't want to tell that coupling impact the rest of your application. So I think it's a very good starting point if you have trouble making them yourself, but I don't use them myself. That's interesting that you say that it would be fine in your book if I could get into some nitpicking and maybe explore something where we have a different perspective on things. Yeah, I don't have a book. Okay. That's nitpick. That's it. Yeah. Yeah. In your book. It's okay. Yeah, yeah, in your, it's okay in your blog. That's the definitive source of your own opinions. So I would consider that a smell in my book or in my blog. And the reason is because, I mean, partially because of what we talked about to sort of parse don't validate, I want to do it in a single step. I want to just have this format and deserialize it into exactly what I want. And we talked about this in the opaque types episode, this notion, I use this term, wrap early unwrap late. I want to wrap as early as possible. In fact, if I can wrap in the appropriate custom types and nice data structures and everything before I even have access to the data, that's the ideal, right? So yeah, I totally agree. Are you just saying like, it's not a big deal, but it's a best practice to decode into your desired data type or what were your thoughts on that? If I was understanding correctly, you were saying that it's okay in your book to auto generate a decoder and then get some sort of data format that represents the serialization format of the JSON and then pass that to a function and then map that into a different data structure as a separate step. You couldn't do it that way. The thought I had was just generate the decoders for each field and then the function that will create your custom type or your record, that one should make it look like what you're going to use. But you could have one extra step and just get that, have that logic of mapping one to the other in a decoder. But yeah, you don't want it to leak out somewhere else. So it's basically what is good in your book. Okay, so we're on the same page in our books there, it sounds like. Well, you also don't have a book. Well, we'll see about that. We'll see. Oh, yeah. Sneak peek. Yeah. Keep your eyes out. There may be a book. There may be a book. So okay. Yeah. And one of the other really cool things that comes from this strategy of immediately getting the data type you want rather than having this intermediary data format in your Elm code. It's really nice because you can sort of locally reason about how you want to transform something. Like I remember back in the day working on some angular code. Oh, man, it was it was fun. It was lots of fun just going through this data that we were getting from the server and running all these functions to filter over and change certain bits of data into a format that we needed to match it against some filters that we were applying and things like that. So we needed it into a specific format. And so there's this one giant function that takes all this data, this deeply nested data structure, and then it reaches into these pieces and it mutates things and it maybe it does some sort of functional style mapping of things. But either way, it's not it's it's very error prone and it's a pain and it's really it really hurts your brain a lot more than it needs to. And so this is one of the best qualities of JSON decoders, I think, is when you can just say, hmm, well, I've got this big data structure that's coming back from the server. It's got all of the users who are online right now and it's got some information about those users like their current status, and then it's got some nested data structures like which rooms they're a member of or whatever. Right. And you say, well, we're going to change something about the way that we're dealing with the rooms that they're in or we want to, you know, add an additional piece of data to that or put it in a different data structure or whatever. Well, where do you go? You could have like one module that deals with that piece of it. And it would be opaque. It could even be opaque. Yes. Yes. Guarantees. Exactly. It gives you these guarantees. You can you can just have it as a separate concern and you can reason about it locally. You can have unit tests that say, hey, here's this piece of this giant data structure. For performance reasons, we get it back as one giant JSON blob from the server. But in terms of reasoning about it, I want to think about this piece of it as a unit. And perhaps I even want to reuse that piece when we get a different response from the API, when we ask for a specific part of it. And so you can sort of like you can separate these pieces out. You can use nice opaque types. You can get nice test cases on them. You can change it locally without going to this one big function that maps everything. Like the thing that you have these things co located, the things that like decode into this data, the things that like validate this part of the data and know about the JSON structure of this data and put it into the right format. All of those responsibilities are sort of cohesively together and you can isolate them from the from the rest of it. And then you can snap together these different decoders that you've isolated if you need to reuse them. So I find that it's just a really nice way to organize and structure your data and to think about your code. Yeah, I think you say that because you're used to modeling your modules by data type. So there is something that Evan advises for in this talk, The Life of a File, which is very good advice in my opinion, in my book, my blog. We have one concern around the data type. What you do is you put that data type into a separate module and everything will be cohesively grouped together, as you said. And that is just something that you need to start getting into your head into your habits of grouping things and putting them into a separate module instead of having one giant file that does everything. Otherwise you'll get the same problem as you with your Angular application. Right. Right. And because you can still pretty hard to reason about if you want to. You can definitely create premature abstractions where you're going crazy with because you don't necessarily know what's going to be grouped together naturally. But the point is that you can, the way that JSON decoders work, you can reason about it locally because it is this sort of way of transforming data. And again, this is just like a broader pattern that you can have everything about how you deserialize this data. What are the names of the fields? What are the raw data types you expect? How do you transform those raw data types? Those things just belong together and you can sort of hide them in this box and change them in this one place and think about that as one unit. Even though it fits into this bigger piece of decoding a giant JSON blob, you can think about this one small part of it. So it's just a very successful pattern. And again, it's a pattern that shows up all over the place in Elm code. So, you know, start paying attention to that broader pattern when you have a function for succeed or fail that can stop the validation and say something went wrong. Here's the error message to show or, Hey, just don't even try running any real validations or anything like that. Just give this value or you can have actual decoders or validators or whatever, be on the lookout for that pattern. There was another point that I think is interesting on this topic. We talked about, should you generate your decoders? And we talked about these different tools for that. As I've gotten used to writing decoders in Elm, at first I found them intimidating. And once I got some practice generating, it doesn't seem that useful to me because it's so easy to write it. I can just like write the code and it's not that big a deal because you have enough practice and you become comfortable with those concepts. But it takes time and it's good to like break things down. So some people who are new to Elm say, well, why can't we use something like this approach that Haskell uses where you can automatically generate something that decodes data based on the data type. So Evan has a really interesting document on this. It's called a vision for data interchange in Elm. And he touches on that and he talks about his experience using these automatically generated decoders and he says, well, yeah, you can do that. But in my experience, debugging an error when it's coming from an implicitly generated thing based on the type signature is a lot harder to debug because I don't know where to look. I don't know how to change it to make it work. So that's another piece of it. The fact that JSON decoders are explicit is very in line with the values of Elm, which is there are worse things than being explicit. Like is that really the bottleneck to you writing maintainable, easy to change and not so error prone code? Like that's not the problem. Spoiler plate. That's not the thing keeping you from moving fast in your application. The thing keeping you from moving fast is something changes on your server the way that your code is serialized and now your decoders broke, but they were being generated implicitly based on your type signatures. And how the heck do I fix it? I explained that to your backend engineers. You broke it. They're like, what? That's your problem, frontend developer. Yeah. Yeah. Yeah. The JSON decoders get the decoupling really nicely. It's just a really elegant pattern. And once you get used to it, you'll learn to love them. Maybe it's Stockholm syndrome, but we're too far gone at this point. I feel like I never had much trouble with JSON myself. That's because my first work on Elm was working on Elm Lint, the previous name for Elm review. So it was something not frontend related for months, maybe years before I really started working on frontend work. And I just kept seeing people say, wow, JSON decoders are really hard. How do you do this? How do you handle this case? And I just read all the Slack conversations and I learned that way. Interesting. That was very nice for me. Yeah. That makes sense. I mean, I think one of the things that can be hard to wrap your brain around with JSON decoders when you're new to Elm is sometimes it feels like, why can't I just have a JSON decoder? Why can't I build one up by passing a list of JSON decoders somewhere? And then it gives me like, oh, here was a JSON decoder for an int and a JSON decoder for a string. And just give me a JSON decoder from that list that I passed to you. But the way that Elm works, you have to understand how these types change as you apply functions. And if you just pass in a list of things, then those things must have the same type for one thing. So you can't just have these different things and have it transform the type signature. So it's a pretty advanced thing actually that takes some time when you're new to Elm to get this sense of how calling functions also massages the types little by little. So you're saying, here's a JSON decode dot string. But well, I actually want to take this string and I want to extract the year from this ISO 8601 date. I still get so impressed when you say that. It feels like magic. Say it again. It's just a manifestation of the trauma I've been through dealing with that type too much. But... Extract the year, you said? Yeah. So if you're trying to extract the year, you have to understand that you take this JSON decode string and then you apply a JSON decode map function, which is going to take a string decoder. So it's going to take a value of type decoder string and it's going to transform that into a type decoder int. And so you can apply that and transform the type of your decoders. And then you can take, you know, you could take something if you do map two, you could take something that takes a decoder of type string and a decoder of type int and it decodes it into a decoder of type album, which is our type alias for the album record type. So I mean, I don't know, it's the kind of thing that when you're just saying it, it sounds so simple, but it takes time for your brain to get used to that, to how these types sort of fold together and how applying these map functions transforms things. Yeah. Well, as you said, it's an advanced topic. The problem with them is that they are an advanced topic, although they're not that hard when you get used to it. So they're advanced, but they happen at a point in your learning that is pretty early on. Exactly. So people who are used to doing JavaScript front end development, for instance, they're used to making HTTP calls. So they're used to getting data from the server. And that's one of the first things they will try to do before other things. Yeah. Yes. I completely agree that you couldn't have said it better. It's an advanced topic, but one that comes up right away. Maybe in some cases, for some people, that will be one of the first things they will try actually. Exactly. Don't do that. Right. Right. Okay. So a couple of tips for sort of easing that learning curve for JSON decoders. At least I found this very helpful. One thing is understand the JSON.decode.map function. Play around with that. And in fact, forget the map seven, map two functions. Just try JSON.decode.map. Take a string decoder and map that string into an int. Like decode a JSON string into an integer value or fail if it's not a string that's wrapping an integer. Try something like that. Just to give yourself a sense of how mapping feels, how you can write it, how you can transform types in your pipeline. That's one thing. I think a second thing that people get tripped up on that's like a low level building block of decoders that's really core to how you build decoders is record type aliases. So one thing they don't teach you, it's sort of an implicit rule that isn't like you just learn it by seeing it happen a lot. When I say type alias album equals some record, it's actually giving me a type constructor that takes if I have a field that's a string and a field that's an int. In that order. It gives me a function in that order. It gives me a function which takes a string, an int and returns an album record. Yeah. And that's one of the few implicit things that Elm does for you. Yes. So I usually say Elm has no magic. And that's pretty much true. But that one is implicit. Yes, it's quite handy. But where do you learn that? And so we're stating it here, Jeroen. We're giving people this explicit knowledge when you say type alias album equals a record alias, a record type. It gives you a constructor function. Okay, so yeah, pull up an Elm REPL, try defining a type alias of a record, and then just write the name of that record that you defined, capital A album, and the type is function. Yeah, just be very wary about the order of fields. I try not to put two elements with the same type next to each other in the type alias definition. Exactly. Because the problem with this is that you can put the right value in the wrong field. You can decode things in the wrong position. So be very wary of that. Yes, right. So if I had a JSON decoder that's decoding like a name JSON object, and that name has first name and last name, and I have a type alias name is a record with first name and last name. If I have my JSON decoder working perfectly, and it's getting the right first name and last name, and I now change the order, and I switch the order in my type alias. Or in the JSON decoder, either. Right. Yes, that's right. If I change the order in either place, so it might seem like, oh, I'm just refactoring my code. I maybe maybe you put. No, you're not. It's not that simple. It's not that simple. The order matters because you're using a positional argument constructor function that the type alias gives you when you define a type alias. It gives you a constructor function and it is order dependent. Yeah. So beware of that. Beware. That's the PSA for the day. The more you know. Anything else that people should know as they're getting started with JSON decoding? Not on my blog. All right. Well, I think that's a good start and looking forward to getting into some other topics. There are some more nuanced topics to explore here, but hopefully this is a good start for everybody. So we have recorded these episodes, the four episodes before we released Elm Radio to the public before you even knew this was a thing. And we would probably like to have some suggestions about topics. We have plenty of things to talk about. Many, many, many things that I will not list. But it might be useful for us at some point if you gave us some topics you would like us to cover. Yeah, topics. And we might do some grab bag episodes where we go through different questions, maybe multiple questions in one episode. So submit a question that you have and we'd love to talk about it. Don't make them questions that you can just get an answer on on Slack. Yeah, perhaps it's best to give questions where we can sort of get into some interesting best practices or different ways of looking at a topic rather than just a here's one clear cut answer that somebody on Slack could probably do a better job just linking you to the right article quickly. Yeah, exactly. Or why is this code not compiling? Like that's not what we're going to answer. Right. Yeah. Cool. Well, looking forward to seeing what people submit. And yeah, thanks a lot. You're in. I'll talk to you next time. See you next time. We'll talk again soon.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " How's it going?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " How are you doing today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 3, "seek": 0, "start": 3.0, "end": 4.0, "text": " I'm doing pretty well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 4, "seek": 0, "start": 4.0, "end": 5.0, "text": " Hold up inside, but doing pretty well.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 5, "seek": 0, "start": 5.0, "end": 6.0, "text": " Yep, same here.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 6, "seek": 0, "start": 6.0, "end": 7.0, "text": " Well, why don't we keep ourselves occupied by talking about some Elm?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 7, "seek": 0, "start": 7.0, "end": 8.0, "text": " What are we talking about today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 8, "seek": 0, "start": 8.0, "end": 9.0, "text": " Oh, Elm.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 9, "seek": 0, "start": 9.0, "end": 10.0, "text": " I like that.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 10, "seek": 0, "start": 10.0, "end": 11.0, "text": " We're going to talk about JSON decoders today.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 11, "seek": 0, "start": 11.0, "end": 12.0, "text": " Ah, that's a good one.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 12, "seek": 0, "start": 12.0, "end": 13.0, "text": " Yeah, JSON decoders.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 13, "seek": 0, "start": 13.0, "end": 18.0, "text": " So I feel like we're talking about JSON decoders, but this is really like a broader pattern.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 1012, 311, 309, 516, 30, 50464, 50464, 1012, 366, 291, 884, 965, 30, 50514, 50514, 286, 478, 884, 1238, 731, 13, 50564, 50564, 6962, 493, 1854, 11, 457, 884, 1238, 731, 13, 50614, 50614, 7010, 11, 912, 510, 13, 50664, 50664, 1042, 11, 983, 500, 380, 321, 1066, 4175, 19629, 538, 1417, 466, 512, 2699, 76, 30, 50714, 50714, 708, 366, 321, 1417, 466, 965, 30, 50764, 50764, 876, 11, 2699, 76, 13, 50814, 50814, 286, 411, 300, 13, 50864, 50864, 492, 434, 516, 281, 751, 466, 31828, 979, 378, 433, 965, 13, 50914, 50914, 2438, 11, 300, 311, 257, 665, 472, 13, 50964, 50964, 865, 11, 31828, 979, 378, 433, 13, 51014, 51014, 407, 286, 841, 411, 321, 434, 1417, 466, 31828, 979, 378, 433, 11, 457, 341, 307, 534, 411, 257, 13227, 5102, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.21706539875752218, "compression_ratio": 1.753968253968254, "no_caption_prob": 0.19654282927513123}, {"id": 14, "seek": 1800, "start": 18.0, "end": 31.0, "text": " So it's extra important to talk about.", "tokens": [50364, 407, 309, 311, 2857, 1021, 281, 751, 466, 13, 51014, 51014, 865, 11, 321, 820, 1391, 751, 466, 437, 31828, 979, 378, 433, 366, 293, 437, 436, 366, 337, 13, 51364, 51364, 865, 11, 1310, 411, 3811, 300, 2618, 307, 411, 3360, 777, 281, 2699, 76, 754, 411, 437, 264, 12872, 51640, 51640, 307, 257, 31828, 979, 19866, 30, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.24867799546983507, "compression_ratio": 1.4836601307189543, "no_caption_prob": 0.0007671230705454946}, {"id": 15, "seek": 1800, "start": 31.0, "end": 38.0, "text": " Yeah, we should probably talk about what JSON decoders are and what they are for.", "tokens": [50364, 407, 309, 311, 2857, 1021, 281, 751, 466, 13, 51014, 51014, 865, 11, 321, 820, 1391, 751, 466, 437, 31828, 979, 378, 433, 366, 293, 437, 436, 366, 337, 13, 51364, 51364, 865, 11, 1310, 411, 3811, 300, 2618, 307, 411, 3360, 777, 281, 2699, 76, 754, 411, 437, 264, 12872, 51640, 51640, 307, 257, 31828, 979, 19866, 30, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.24867799546983507, "compression_ratio": 1.4836601307189543, "no_caption_prob": 0.0007671230705454946}, {"id": 16, "seek": 1800, "start": 38.0, "end": 43.519999999999996, "text": " Yeah, maybe like imagine that somebody is like brand new to Elm even like what the heck", "tokens": [50364, 407, 309, 311, 2857, 1021, 281, 751, 466, 13, 51014, 51014, 865, 11, 321, 820, 1391, 751, 466, 437, 31828, 979, 378, 433, 366, 293, 437, 436, 366, 337, 13, 51364, 51364, 865, 11, 1310, 411, 3811, 300, 2618, 307, 411, 3360, 777, 281, 2699, 76, 754, 411, 437, 264, 12872, 51640, 51640, 307, 257, 31828, 979, 19866, 30, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.24867799546983507, "compression_ratio": 1.4836601307189543, "no_caption_prob": 0.0007671230705454946}, {"id": 17, "seek": 1800, "start": 43.519999999999996, "end": 45.36, "text": " is a JSON decoder?", "tokens": [50364, 407, 309, 311, 2857, 1021, 281, 751, 466, 13, 51014, 51014, 865, 11, 321, 820, 1391, 751, 466, 437, 31828, 979, 378, 433, 366, 293, 437, 436, 366, 337, 13, 51364, 51364, 865, 11, 1310, 411, 3811, 300, 2618, 307, 411, 3360, 777, 281, 2699, 76, 754, 411, 437, 264, 12872, 51640, 51640, 307, 257, 31828, 979, 19866, 30, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.24867799546983507, "compression_ratio": 1.4836601307189543, "no_caption_prob": 0.0007671230705454946}, {"id": 18, "seek": 4536, "start": 45.36, "end": 49.56, "text": " First of all, welcome.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 19, "seek": 4536, "start": 49.56, "end": 53.68, "text": " So Elm gives you a lot of guarantees about how it will work.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 20, "seek": 4536, "start": 53.68, "end": 60.5, "text": " It will produce no runtime errors and all the functions will get the types they expect", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 21, "seek": 4536, "start": 60.5, "end": 62.16, "text": " and the arguments they expect.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 22, "seek": 4536, "start": 62.16, "end": 63.4, "text": " And that is very good.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 23, "seek": 4536, "start": 63.4, "end": 65.6, "text": " That's something that we love about Elm.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 24, "seek": 4536, "start": 65.6, "end": 70.46000000000001, "text": " But what happens when you get data from sources that you do not control?", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 25, "seek": 4536, "start": 70.46000000000001, "end": 73.24, "text": " Data from outside the Elm code.", "tokens": [50364, 2386, 295, 439, 11, 2928, 13, 50574, 50574, 407, 2699, 76, 2709, 291, 257, 688, 295, 32567, 466, 577, 309, 486, 589, 13, 50780, 50780, 467, 486, 5258, 572, 34474, 13603, 293, 439, 264, 6828, 486, 483, 264, 3467, 436, 2066, 51121, 51121, 293, 264, 12869, 436, 2066, 13, 51204, 51204, 400, 300, 307, 588, 665, 13, 51266, 51266, 663, 311, 746, 300, 321, 959, 466, 2699, 76, 13, 51376, 51376, 583, 437, 2314, 562, 291, 483, 1412, 490, 7139, 300, 291, 360, 406, 1969, 30, 51619, 51619, 11888, 490, 2380, 264, 2699, 76, 3089, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.13108107566833496, "compression_ratio": 1.6017316017316017, "no_caption_prob": 6.604287773370743e-05}, {"id": 26, "seek": 7324, "start": 73.24, "end": 79.03999999999999, "text": " So for instance, data that comes from HTTP or data that comes from ports or from HTML", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 27, "seek": 7324, "start": 79.03999999999999, "end": 80.11999999999999, "text": " events.", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 28, "seek": 7324, "start": 80.11999999999999, "end": 85.6, "text": " Those are pieces of data that Elm cannot control and cannot control the types of it.", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 29, "seek": 7324, "start": 85.6, "end": 91.11999999999999, "text": " So what you do is you validate the JSON that is coming in, if it's JSON, but we're going", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 30, "seek": 7324, "start": 91.11999999999999, "end": 93.28, "text": " to talk about JSON decoders.", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 31, "seek": 7324, "start": 93.28, "end": 96.52, "text": " You validate the fields that it has and the types that it has.", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 32, "seek": 7324, "start": 96.52, "end": 102.88, "text": " So if they match, you will get a successful decoding result of the type that you provided.", "tokens": [50364, 407, 337, 5197, 11, 1412, 300, 1487, 490, 33283, 420, 1412, 300, 1487, 490, 18160, 420, 490, 17995, 50654, 50654, 3931, 13, 50708, 50708, 3950, 366, 3755, 295, 1412, 300, 2699, 76, 2644, 1969, 293, 2644, 1969, 264, 3467, 295, 309, 13, 50982, 50982, 407, 437, 291, 360, 307, 291, 29562, 264, 31828, 300, 307, 1348, 294, 11, 498, 309, 311, 31828, 11, 457, 321, 434, 516, 51258, 51258, 281, 751, 466, 31828, 979, 378, 433, 13, 51366, 51366, 509, 29562, 264, 7909, 300, 309, 575, 293, 264, 3467, 300, 309, 575, 13, 51528, 51528, 407, 498, 436, 2995, 11, 291, 486, 483, 257, 4406, 979, 8616, 1874, 295, 264, 2010, 300, 291, 5649, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10827042074764476, "compression_ratio": 1.814516129032258, "no_caption_prob": 4.565742983686505e-06}, {"id": 33, "seek": 10288, "start": 102.88, "end": 107.92, "text": " And otherwise you will get an error saying, hey, this field was not what I expected or", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 34, "seek": 10288, "start": 107.92, "end": 109.38, "text": " this field was missing.", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 35, "seek": 10288, "start": 109.38, "end": 112.53999999999999, "text": " So from that point on, you do have the data that you want to work with.", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 36, "seek": 10288, "start": 112.53999999999999, "end": 117.92, "text": " So if you wanted a record with this and that field with these types, then now you have", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 37, "seek": 10288, "start": 117.92, "end": 119.02, "text": " them.", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 38, "seek": 10288, "start": 119.02, "end": 124.16, "text": " You have successfully told Elm, this is data that I'm going to work with and the data that", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 39, "seek": 10288, "start": 124.16, "end": 127.06, "text": " you're going to have to play with from here on.", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 40, "seek": 10288, "start": 127.06, "end": 131.44, "text": " So that is basically the idea about JSON decoders from what I understand them.", "tokens": [50364, 400, 5911, 291, 486, 483, 364, 6713, 1566, 11, 4177, 11, 341, 2519, 390, 406, 437, 286, 5176, 420, 50616, 50616, 341, 2519, 390, 5361, 13, 50689, 50689, 407, 490, 300, 935, 322, 11, 291, 360, 362, 264, 1412, 300, 291, 528, 281, 589, 365, 13, 50847, 50847, 407, 498, 291, 1415, 257, 2136, 365, 341, 293, 300, 2519, 365, 613, 3467, 11, 550, 586, 291, 362, 51116, 51116, 552, 13, 51171, 51171, 509, 362, 10727, 1907, 2699, 76, 11, 341, 307, 1412, 300, 286, 478, 516, 281, 589, 365, 293, 264, 1412, 300, 51428, 51428, 291, 434, 516, 281, 362, 281, 862, 365, 490, 510, 322, 13, 51573, 51573, 407, 300, 307, 1936, 264, 1558, 466, 31828, 979, 378, 433, 490, 437, 286, 1223, 552, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.14186642188152285, "compression_ratio": 1.8464419475655431, "no_caption_prob": 1.3211185432737693e-05}, {"id": 41, "seek": 13144, "start": 131.44, "end": 137.2, "text": " Yes, and now, okay, so this is interesting because I'm realizing that from the description", "tokens": [50364, 1079, 11, 293, 586, 11, 1392, 11, 370, 341, 307, 1880, 570, 286, 478, 16734, 300, 490, 264, 3855, 50652, 50652, 291, 2729, 11, 341, 307, 1936, 264, 544, 2685, 5197, 295, 264, 2674, 3410, 300, 321, 7619, 51000, 51000, 294, 527, 42687, 3467, 3500, 13, 51098, 51098, 1436, 294, 527, 42687, 3467, 3500, 11, 321, 7619, 341, 1333, 295, 3485, 281, 360, 34474, 2010, 8568, 51472, 51472, 538, 4188, 379, 12678, 257, 2010, 562, 257, 24071, 11335, 11, 558, 30, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.0885602502261891, "compression_ratio": 1.6933333333333334, "no_caption_prob": 2.5070670744753443e-05}, {"id": 42, "seek": 13144, "start": 137.2, "end": 144.16, "text": " you gave, this is basically the more specific instance of the general concept that we described", "tokens": [50364, 1079, 11, 293, 586, 11, 1392, 11, 370, 341, 307, 1880, 570, 286, 478, 16734, 300, 490, 264, 3855, 50652, 50652, 291, 2729, 11, 341, 307, 1936, 264, 544, 2685, 5197, 295, 264, 2674, 3410, 300, 321, 7619, 51000, 51000, 294, 527, 42687, 3467, 3500, 13, 51098, 51098, 1436, 294, 527, 42687, 3467, 3500, 11, 321, 7619, 341, 1333, 295, 3485, 281, 360, 34474, 2010, 8568, 51472, 51472, 538, 4188, 379, 12678, 257, 2010, 562, 257, 24071, 11335, 11, 558, 30, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.0885602502261891, "compression_ratio": 1.6933333333333334, "no_caption_prob": 2.5070670744753443e-05}, {"id": 43, "seek": 13144, "start": 144.16, "end": 146.12, "text": " in our opaque types episode.", "tokens": [50364, 1079, 11, 293, 586, 11, 1392, 11, 370, 341, 307, 1880, 570, 286, 478, 16734, 300, 490, 264, 3855, 50652, 50652, 291, 2729, 11, 341, 307, 1936, 264, 544, 2685, 5197, 295, 264, 2674, 3410, 300, 321, 7619, 51000, 51000, 294, 527, 42687, 3467, 3500, 13, 51098, 51098, 1436, 294, 527, 42687, 3467, 3500, 11, 321, 7619, 341, 1333, 295, 3485, 281, 360, 34474, 2010, 8568, 51472, 51472, 538, 4188, 379, 12678, 257, 2010, 562, 257, 24071, 11335, 11, 558, 30, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.0885602502261891, "compression_ratio": 1.6933333333333334, "no_caption_prob": 2.5070670744753443e-05}, {"id": 44, "seek": 13144, "start": 146.12, "end": 153.6, "text": " Because in our opaque types episode, we described this sort of ability to do runtime type checking", "tokens": [50364, 1079, 11, 293, 586, 11, 1392, 11, 370, 341, 307, 1880, 570, 286, 478, 16734, 300, 490, 264, 3855, 50652, 50652, 291, 2729, 11, 341, 307, 1936, 264, 544, 2685, 5197, 295, 264, 2674, 3410, 300, 321, 7619, 51000, 51000, 294, 527, 42687, 3467, 3500, 13, 51098, 51098, 1436, 294, 527, 42687, 3467, 3500, 11, 321, 7619, 341, 1333, 295, 3485, 281, 360, 34474, 2010, 8568, 51472, 51472, 538, 4188, 379, 12678, 257, 2010, 562, 257, 24071, 11335, 11, 558, 30, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.0885602502261891, "compression_ratio": 1.6933333333333334, "no_caption_prob": 2.5070670744753443e-05}, {"id": 45, "seek": 13144, "start": 153.6, "end": 158.96, "text": " by conditionally returning a type when a validation passes, right?", "tokens": [50364, 1079, 11, 293, 586, 11, 1392, 11, 370, 341, 307, 1880, 570, 286, 478, 16734, 300, 490, 264, 3855, 50652, 50652, 291, 2729, 11, 341, 307, 1936, 264, 544, 2685, 5197, 295, 264, 2674, 3410, 300, 321, 7619, 51000, 51000, 294, 527, 42687, 3467, 3500, 13, 51098, 51098, 1436, 294, 527, 42687, 3467, 3500, 11, 321, 7619, 341, 1333, 295, 3485, 281, 360, 34474, 2010, 8568, 51472, 51472, 538, 4188, 379, 12678, 257, 2010, 562, 257, 24071, 11335, 11, 558, 30, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.0885602502261891, "compression_ratio": 1.6933333333333334, "no_caption_prob": 2.5070670744753443e-05}, {"id": 46, "seek": 15896, "start": 158.96, "end": 161.84, "text": " And that's exactly what you just described.", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 47, "seek": 15896, "start": 161.84, "end": 166.84, "text": " And it turns out that JSON decoders are just a special case of that pattern.", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 48, "seek": 15896, "start": 166.84, "end": 172.64000000000001, "text": " And the sort of opaque type patterns we talked about are a more general tool that you can", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 49, "seek": 15896, "start": 172.64000000000001, "end": 174.72, "text": " use to build that sort of thing yourself.", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 50, "seek": 15896, "start": 174.72, "end": 176.68, "text": " Yeah, that's a good point.", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 51, "seek": 15896, "start": 176.68, "end": 183.12, "text": " So one other point I wanted to make is that just to contrast this against what you would", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 52, "seek": 15896, "start": 183.12, "end": 187.92000000000002, "text": " be doing in other languages, let's talk about what that would look like doing this in JavaScript,", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 53, "seek": 15896, "start": 187.92000000000002, "end": 188.92000000000002, "text": " right?", "tokens": [50364, 400, 300, 311, 2293, 437, 291, 445, 7619, 13, 50508, 50508, 400, 309, 4523, 484, 300, 31828, 979, 378, 433, 366, 445, 257, 2121, 1389, 295, 300, 5102, 13, 50758, 50758, 400, 264, 1333, 295, 42687, 2010, 8294, 321, 2825, 466, 366, 257, 544, 2674, 2290, 300, 291, 393, 51048, 51048, 764, 281, 1322, 300, 1333, 295, 551, 1803, 13, 51152, 51152, 865, 11, 300, 311, 257, 665, 935, 13, 51250, 51250, 407, 472, 661, 935, 286, 1415, 281, 652, 307, 300, 445, 281, 8712, 341, 1970, 437, 291, 576, 51572, 51572, 312, 884, 294, 661, 8650, 11, 718, 311, 751, 466, 437, 300, 576, 574, 411, 884, 341, 294, 15778, 11, 51812, 51812, 558, 30, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.0951610008875529, "compression_ratio": 1.7014388489208634, "no_caption_prob": 7.411194474116201e-06}, {"id": 54, "seek": 18892, "start": 188.92, "end": 195.28, "text": " So you would say, you know, you have some JSON response from an HTTP response.", "tokens": [50364, 407, 291, 576, 584, 11, 291, 458, 11, 291, 362, 512, 31828, 4134, 490, 364, 33283, 4134, 13, 50682, 50682, 400, 291, 584, 300, 309, 311, 31828, 11, 370, 309, 311, 979, 12340, 382, 31828, 13, 50888, 50888, 400, 550, 291, 360, 11, 291, 458, 11, 4134, 13, 67, 3274, 13, 10813, 13, 16344, 13, 51300, 51300, 400, 550, 1310, 309, 311, 674, 5666, 2001, 570, 291, 434, 9906, 294, 293, 23771, 364, 2657, 2141, 337, 51624, 51624, 597, 456, 311, 572, 2158, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12963143261996182, "compression_ratio": 1.5714285714285714, "no_caption_prob": 0.00011234777775825933}, {"id": 55, "seek": 18892, "start": 195.28, "end": 199.39999999999998, "text": " And you say that it's JSON, so it's decoded as JSON.", "tokens": [50364, 407, 291, 576, 584, 11, 291, 458, 11, 291, 362, 512, 31828, 4134, 490, 364, 33283, 4134, 13, 50682, 50682, 400, 291, 584, 300, 309, 311, 31828, 11, 370, 309, 311, 979, 12340, 382, 31828, 13, 50888, 50888, 400, 550, 291, 360, 11, 291, 458, 11, 4134, 13, 67, 3274, 13, 10813, 13, 16344, 13, 51300, 51300, 400, 550, 1310, 309, 311, 674, 5666, 2001, 570, 291, 434, 9906, 294, 293, 23771, 364, 2657, 2141, 337, 51624, 51624, 597, 456, 311, 572, 2158, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12963143261996182, "compression_ratio": 1.5714285714285714, "no_caption_prob": 0.00011234777775825933}, {"id": 56, "seek": 18892, "start": 199.39999999999998, "end": 207.64, "text": " And then you do, you know, response.data.person.name.", "tokens": [50364, 407, 291, 576, 584, 11, 291, 458, 11, 291, 362, 512, 31828, 4134, 490, 364, 33283, 4134, 13, 50682, 50682, 400, 291, 584, 300, 309, 311, 31828, 11, 370, 309, 311, 979, 12340, 382, 31828, 13, 50888, 50888, 400, 550, 291, 360, 11, 291, 458, 11, 4134, 13, 67, 3274, 13, 10813, 13, 16344, 13, 51300, 51300, 400, 550, 1310, 309, 311, 674, 5666, 2001, 570, 291, 434, 9906, 294, 293, 23771, 364, 2657, 2141, 337, 51624, 51624, 597, 456, 311, 572, 2158, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12963143261996182, "compression_ratio": 1.5714285714285714, "no_caption_prob": 0.00011234777775825933}, {"id": 57, "seek": 18892, "start": 207.64, "end": 214.11999999999998, "text": " And then maybe it's undefined because you're reaching in and grabbing an object key for", "tokens": [50364, 407, 291, 576, 584, 11, 291, 458, 11, 291, 362, 512, 31828, 4134, 490, 364, 33283, 4134, 13, 50682, 50682, 400, 291, 584, 300, 309, 311, 31828, 11, 370, 309, 311, 979, 12340, 382, 31828, 13, 50888, 50888, 400, 550, 291, 360, 11, 291, 458, 11, 4134, 13, 67, 3274, 13, 10813, 13, 16344, 13, 51300, 51300, 400, 550, 1310, 309, 311, 674, 5666, 2001, 570, 291, 434, 9906, 294, 293, 23771, 364, 2657, 2141, 337, 51624, 51624, 597, 456, 311, 572, 2158, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12963143261996182, "compression_ratio": 1.5714285714285714, "no_caption_prob": 0.00011234777775825933}, {"id": 58, "seek": 18892, "start": 214.11999999999998, "end": 216.16, "text": " which there's no value.", "tokens": [50364, 407, 291, 576, 584, 11, 291, 458, 11, 291, 362, 512, 31828, 4134, 490, 364, 33283, 4134, 13, 50682, 50682, 400, 291, 584, 300, 309, 311, 31828, 11, 370, 309, 311, 979, 12340, 382, 31828, 13, 50888, 50888, 400, 550, 291, 360, 11, 291, 458, 11, 4134, 13, 67, 3274, 13, 10813, 13, 16344, 13, 51300, 51300, 400, 550, 1310, 309, 311, 674, 5666, 2001, 570, 291, 434, 9906, 294, 293, 23771, 364, 2657, 2141, 337, 51624, 51624, 597, 456, 311, 572, 2158, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.12963143261996182, "compression_ratio": 1.5714285714285714, "no_caption_prob": 0.00011234777775825933}, {"id": 59, "seek": 21616, "start": 216.16, "end": 220.78, "text": " Or maybe something's blowing up because you're dereferencing something that was that was", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 60, "seek": 21616, "start": 220.78, "end": 221.78, "text": " not there.", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 61, "seek": 21616, "start": 221.78, "end": 226.92, "text": " Or, you know, so basically, you say that you that it's possible to have a crash there or", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 62, "seek": 21616, "start": 226.92, "end": 227.92, "text": " undefined behavior.", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 63, "seek": 21616, "start": 227.92, "end": 231.28, "text": " Yeah, it's possible to have a crash or worse.", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 64, "seek": 21616, "start": 231.28, "end": 238.92, "text": " The worst case is that you don't have a crash, and you have some bad or unexpected thing", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 65, "seek": 21616, "start": 238.92, "end": 239.92, "text": " happen.", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 66, "seek": 21616, "start": 239.92, "end": 242.6, "text": " Maybe it's a crash, maybe it's a weird bug.", "tokens": [50364, 1610, 1310, 746, 311, 15068, 493, 570, 291, 434, 15969, 612, 13644, 746, 300, 390, 300, 390, 50595, 50595, 406, 456, 13, 50645, 50645, 1610, 11, 291, 458, 11, 370, 1936, 11, 291, 584, 300, 291, 300, 309, 311, 1944, 281, 362, 257, 8252, 456, 420, 50902, 50902, 674, 5666, 2001, 5223, 13, 50952, 50952, 865, 11, 309, 311, 1944, 281, 362, 257, 8252, 420, 5324, 13, 51120, 51120, 440, 5855, 1389, 307, 300, 291, 500, 380, 362, 257, 8252, 11, 293, 291, 362, 512, 1578, 420, 13106, 551, 51502, 51502, 1051, 13, 51552, 51552, 2704, 309, 311, 257, 8252, 11, 1310, 309, 311, 257, 3657, 7426, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.13794643538338797, "compression_ratio": 1.8202764976958525, "no_caption_prob": 4.6837412810418755e-05}, {"id": 67, "seek": 24260, "start": 242.6, "end": 248.32, "text": " It's in some ways even harder to debug what's going on if it's not a crash, if it's just", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 68, "seek": 24260, "start": 248.32, "end": 253.57999999999998, "text": " weird behavior, if it's just something that some undefined value gets passed into someplace,", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 69, "seek": 24260, "start": 253.57999999999998, "end": 257.96, "text": " it gets concatenated with some string, which makes it the empty string, and then that goes", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 70, "seek": 24260, "start": 257.96, "end": 259.76, "text": " in some other place.", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 71, "seek": 24260, "start": 259.76, "end": 265.56, "text": " And then it tries to look that up as the key for some other HTTP request.", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 72, "seek": 24260, "start": 265.56, "end": 269.92, "text": " And then the HTTP request 404s and you're like, what?", "tokens": [50364, 467, 311, 294, 512, 2098, 754, 6081, 281, 24083, 437, 311, 516, 322, 498, 309, 311, 406, 257, 8252, 11, 498, 309, 311, 445, 50650, 50650, 3657, 5223, 11, 498, 309, 311, 445, 746, 300, 512, 674, 5666, 2001, 2158, 2170, 4678, 666, 37126, 11, 50913, 50913, 309, 2170, 1588, 7186, 770, 365, 512, 6798, 11, 597, 1669, 309, 264, 6707, 6798, 11, 293, 550, 300, 1709, 51132, 51132, 294, 512, 661, 1081, 13, 51222, 51222, 400, 550, 309, 9898, 281, 574, 300, 493, 382, 264, 2141, 337, 512, 661, 33283, 5308, 13, 51512, 51512, 400, 550, 264, 33283, 5308, 3356, 19, 82, 293, 291, 434, 411, 11, 437, 30, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.12789608302869296, "compression_ratio": 1.7468879668049793, "no_caption_prob": 5.828930443385616e-05}, {"id": 73, "seek": 26992, "start": 269.92, "end": 276.24, "text": " Yeah, so basically, you will take much longer to find the problem that there is a problem.", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 74, "seek": 26992, "start": 276.24, "end": 277.24, "text": " Exactly.", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 75, "seek": 26992, "start": 277.24, "end": 278.24, "text": " Yeah.", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 76, "seek": 26992, "start": 278.24, "end": 281.8, "text": " So it's lengthening that feedback loop where you're taking longer to discover what's going", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 77, "seek": 26992, "start": 281.8, "end": 282.8, "text": " on.", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 78, "seek": 26992, "start": 282.8, "end": 286.62, "text": " And, you know, if you just think about it from having confidence in your code point", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 79, "seek": 26992, "start": 286.62, "end": 293.12, "text": " of view, how can you be confident that your code is, you know, it's one type of confidence", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 80, "seek": 26992, "start": 293.12, "end": 298.44, "text": " about your code that you even just grabbed data that actually exists and that like, I", "tokens": [50364, 865, 11, 370, 1936, 11, 291, 486, 747, 709, 2854, 281, 915, 264, 1154, 300, 456, 307, 257, 1154, 13, 50680, 50680, 7587, 13, 50730, 50730, 865, 13, 50780, 50780, 407, 309, 311, 4641, 4559, 300, 5824, 6367, 689, 291, 434, 1940, 2854, 281, 4411, 437, 311, 516, 50958, 50958, 322, 13, 51008, 51008, 400, 11, 291, 458, 11, 498, 291, 445, 519, 466, 309, 490, 1419, 6687, 294, 428, 3089, 935, 51199, 51199, 295, 1910, 11, 577, 393, 291, 312, 6679, 300, 428, 3089, 307, 11, 291, 458, 11, 309, 311, 472, 2010, 295, 6687, 51524, 51524, 466, 428, 3089, 300, 291, 754, 445, 18607, 1412, 300, 767, 8198, 293, 300, 411, 11, 286, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.11729036058698382, "compression_ratio": 1.739622641509434, "no_caption_prob": 3.269892113166861e-05}, {"id": 81, "seek": 29844, "start": 298.44, "end": 302.44, "text": " don't know, if you have an API and you're saying, hmm, this would be kind of nice if", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 82, "seek": 29844, "start": 302.44, "end": 308.0, "text": " we renamed this because we're calling it this thing, but we've kind of discovered some things", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 83, "seek": 29844, "start": 308.0, "end": 311.98, "text": " about it and we think this would be a better name for this field.", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 84, "seek": 29844, "start": 311.98, "end": 316.78, "text": " How confident are you going to be doing that if you're grabbing that data from JavaScript?", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 85, "seek": 29844, "start": 316.78, "end": 318.8, "text": " Not very much.", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 86, "seek": 29844, "start": 318.8, "end": 322.76, "text": " You're probably just not going to bother doing it, right?", "tokens": [50364, 500, 380, 458, 11, 498, 291, 362, 364, 9362, 293, 291, 434, 1566, 11, 16478, 11, 341, 576, 312, 733, 295, 1481, 498, 50564, 50564, 321, 40949, 341, 570, 321, 434, 5141, 309, 341, 551, 11, 457, 321, 600, 733, 295, 6941, 512, 721, 50842, 50842, 466, 309, 293, 321, 519, 341, 576, 312, 257, 1101, 1315, 337, 341, 2519, 13, 51041, 51041, 1012, 6679, 366, 291, 516, 281, 312, 884, 300, 498, 291, 434, 23771, 300, 1412, 490, 15778, 30, 51281, 51281, 1726, 588, 709, 13, 51382, 51382, 509, 434, 1391, 445, 406, 516, 281, 8677, 884, 309, 11, 558, 30, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.11221858690369804, "compression_ratio": 1.6518218623481782, "no_caption_prob": 3.26986082654912e-05}, {"id": 87, "seek": 32276, "start": 322.76, "end": 329.84, "text": " If the final replace is okay, if there are not too many instances, then let's try it.", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 88, "seek": 32276, "start": 329.84, "end": 333.24, "text": " Maybe try it, but then you're going to try it and then what are you going to do?", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 89, "seek": 32276, "start": 333.24, "end": 334.88, "text": " You're going to go through the app.", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 90, "seek": 32276, "start": 334.88, "end": 339.36, "text": " You're not just going to run the part that makes the HTTP request, but you're going to", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 91, "seek": 32276, "start": 339.36, "end": 345.38, "text": " run every part that you think uses that payload from that HTTP request to run through every", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 92, "seek": 32276, "start": 345.38, "end": 350.4, "text": " single code path with every single permutation of all the possible conditions to make sure", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 93, "seek": 32276, "start": 350.4, "end": 352.4, "text": " you exercise all possible code.", "tokens": [50364, 759, 264, 2572, 7406, 307, 1392, 11, 498, 456, 366, 406, 886, 867, 14519, 11, 550, 718, 311, 853, 309, 13, 50718, 50718, 2704, 853, 309, 11, 457, 550, 291, 434, 516, 281, 853, 309, 293, 550, 437, 366, 291, 516, 281, 360, 30, 50888, 50888, 509, 434, 516, 281, 352, 807, 264, 724, 13, 50970, 50970, 509, 434, 406, 445, 516, 281, 1190, 264, 644, 300, 1669, 264, 33283, 5308, 11, 457, 291, 434, 516, 281, 51194, 51194, 1190, 633, 644, 300, 291, 519, 4960, 300, 30918, 490, 300, 33283, 5308, 281, 1190, 807, 633, 51495, 51495, 2167, 3089, 3100, 365, 633, 2167, 4784, 11380, 295, 439, 264, 1944, 4487, 281, 652, 988, 51746, 51746, 291, 5380, 439, 1944, 3089, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.10236155797564794, "compression_ratio": 1.9384615384615385, "no_caption_prob": 8.092335338005796e-05}, {"id": 94, "seek": 35240, "start": 352.4, "end": 353.4, "text": " Sounds like fun.", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 95, "seek": 35240, "start": 353.4, "end": 356.03999999999996, "text": " Does that sound fun to you?", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 96, "seek": 35240, "start": 356.03999999999996, "end": 357.03999999999996, "text": " Yeah.", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 97, "seek": 35240, "start": 357.03999999999996, "end": 361.64, "text": " How else do you want to pass your afternoon?", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 98, "seek": 35240, "start": 361.64, "end": 367.91999999999996, "text": " This is maybe a good thing if you're new to Elm and listening to this and you're like,", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 99, "seek": 35240, "start": 367.91999999999996, "end": 371.26, "text": " JSON decoders, why can't I just use my data?", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 100, "seek": 35240, "start": 371.26, "end": 372.26, "text": " That's why.", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 101, "seek": 35240, "start": 372.26, "end": 374.52, "text": " That's why.", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 102, "seek": 35240, "start": 374.52, "end": 380.4, "text": " It feels like a pain and it is a hard part when you're starting out, but once you're", "tokens": [50364, 14576, 411, 1019, 13, 50414, 50414, 4402, 300, 1626, 1019, 281, 291, 30, 50546, 50546, 865, 13, 50596, 50596, 1012, 1646, 360, 291, 528, 281, 1320, 428, 6499, 30, 50826, 50826, 639, 307, 1310, 257, 665, 551, 498, 291, 434, 777, 281, 2699, 76, 293, 4764, 281, 341, 293, 291, 434, 411, 11, 51140, 51140, 31828, 979, 378, 433, 11, 983, 393, 380, 286, 445, 764, 452, 1412, 30, 51307, 51307, 663, 311, 983, 13, 51357, 51357, 663, 311, 983, 13, 51470, 51470, 467, 3417, 411, 257, 1822, 293, 309, 307, 257, 1152, 644, 562, 291, 434, 2891, 484, 11, 457, 1564, 291, 434, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.21479947478682906, "compression_ratio": 1.5555555555555556, "no_caption_prob": 6.605017551919445e-05}, {"id": 103, "seek": 38040, "start": 380.4, "end": 383.84, "text": " in the habit of doing it, I think it's fine.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 104, "seek": 38040, "start": 383.84, "end": 388.47999999999996, "text": " It really brings a lot of guarantees about the code that you're working with.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 105, "seek": 38040, "start": 388.47999999999996, "end": 389.76, "text": " You see the value after a while.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 106, "seek": 38040, "start": 389.76, "end": 391.08, "text": " Let's put it that way.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 107, "seek": 38040, "start": 391.08, "end": 392.08, "text": " Yeah.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 108, "seek": 38040, "start": 392.08, "end": 393.08, "text": " It's the kind of thing.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 109, "seek": 38040, "start": 393.08, "end": 398.2, "text": " I hear this over and over again from people that they thought it was a nuisance when they", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 110, "seek": 38040, "start": 398.2, "end": 403.73999999999995, "text": " first started and over time they grew to really love it and when they go to other languages,", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 111, "seek": 38040, "start": 403.73999999999995, "end": 405.32, "text": " they even try to replicate it.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 112, "seek": 38040, "start": 405.32, "end": 410.08, "text": " There are some libraries out there that try to bring this pattern to TypeScript, for example.", "tokens": [50364, 294, 264, 7164, 295, 884, 309, 11, 286, 519, 309, 311, 2489, 13, 50536, 50536, 467, 534, 5607, 257, 688, 295, 32567, 466, 264, 3089, 300, 291, 434, 1364, 365, 13, 50768, 50768, 509, 536, 264, 2158, 934, 257, 1339, 13, 50832, 50832, 961, 311, 829, 309, 300, 636, 13, 50898, 50898, 865, 13, 50948, 50948, 467, 311, 264, 733, 295, 551, 13, 50998, 50998, 286, 1568, 341, 670, 293, 670, 797, 490, 561, 300, 436, 1194, 309, 390, 257, 3822, 46852, 562, 436, 51254, 51254, 700, 1409, 293, 670, 565, 436, 6109, 281, 534, 959, 309, 293, 562, 436, 352, 281, 661, 8650, 11, 51531, 51531, 436, 754, 853, 281, 25356, 309, 13, 51610, 51610, 821, 366, 512, 15148, 484, 456, 300, 853, 281, 1565, 341, 5102, 281, 15576, 14237, 11, 337, 1365, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.16482682536831864, "compression_ratio": 1.7432432432432432, "no_caption_prob": 0.00012533528206404299}, {"id": 113, "seek": 41008, "start": 410.08, "end": 411.08, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 114, "seek": 41008, "start": 411.08, "end": 415.28, "text": " How am I supposed to trust the HTTP request response?", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 115, "seek": 41008, "start": 415.28, "end": 416.28, "text": " Exactly.", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 116, "seek": 41008, "start": 416.28, "end": 421.08, "text": " I need to validate it and that's pretty much what we do with JSON decoders except that", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 117, "seek": 41008, "start": 421.08, "end": 424.44, "text": " it's enforced by the language or the language.", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 118, "seek": 41008, "start": 424.44, "end": 425.56, "text": " Right.", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 119, "seek": 41008, "start": 425.56, "end": 432.15999999999997, "text": " There's no way to tell Elm, just trust me, this is this type and just do your best and", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 120, "seek": 41008, "start": 432.15999999999997, "end": 434.96, "text": " blow up if I'm wrong about this.", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 121, "seek": 41008, "start": 434.96, "end": 438.76, "text": " Although there is actually one place where you can do that, but it's not a recommended", "tokens": [50364, 865, 13, 50414, 50414, 1012, 669, 286, 3442, 281, 3361, 264, 33283, 5308, 4134, 30, 50624, 50624, 7587, 13, 50674, 50674, 286, 643, 281, 29562, 309, 293, 300, 311, 1238, 709, 437, 321, 360, 365, 31828, 979, 378, 433, 3993, 300, 50914, 50914, 309, 311, 40953, 538, 264, 2856, 420, 264, 2856, 13, 51082, 51082, 1779, 13, 51138, 51138, 821, 311, 572, 636, 281, 980, 2699, 76, 11, 445, 3361, 385, 11, 341, 307, 341, 2010, 293, 445, 360, 428, 1151, 293, 51468, 51468, 6327, 493, 498, 286, 478, 2085, 466, 341, 13, 51608, 51608, 5780, 456, 307, 767, 472, 1081, 689, 291, 393, 360, 300, 11, 457, 309, 311, 406, 257, 9628, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.176715329162076, "compression_ratio": 1.5350553505535056, "no_caption_prob": 6.708980072289705e-05}, {"id": 122, "seek": 43876, "start": 438.76, "end": 440.8, "text": " practice with a port.", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 123, "seek": 43876, "start": 440.8, "end": 443.56, "text": " You can describe, you got it.", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 124, "seek": 43876, "start": 443.56, "end": 449.42, "text": " Ports and flags, which you could say is like a special case of a port, but you can just", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 125, "seek": 43876, "start": 449.42, "end": 456.68, "text": " annotate your port or your flags as saying this takes a record with fields of these types", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 126, "seek": 43876, "start": 456.68, "end": 461.76, "text": " and Elm will just blow up if those assumptions are invalid.", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 127, "seek": 43876, "start": 461.76, "end": 462.76, "text": " Yeah.", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 128, "seek": 43876, "start": 462.76, "end": 464.71999999999997, "text": " And then you will not even get the message.", "tokens": [50364, 3124, 365, 257, 2436, 13, 50466, 50466, 509, 393, 6786, 11, 291, 658, 309, 13, 50604, 50604, 430, 3299, 293, 23265, 11, 597, 291, 727, 584, 307, 411, 257, 2121, 1389, 295, 257, 2436, 11, 457, 291, 393, 445, 50897, 50897, 25339, 473, 428, 2436, 420, 428, 23265, 382, 1566, 341, 2516, 257, 2136, 365, 7909, 295, 613, 3467, 51260, 51260, 293, 2699, 76, 486, 445, 6327, 493, 498, 729, 17695, 366, 34702, 13, 51514, 51514, 865, 13, 51564, 51564, 400, 550, 291, 486, 406, 754, 483, 264, 3636, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1668749565773822, "compression_ratio": 1.5841121495327102, "no_caption_prob": 2.7966581910732202e-05}, {"id": 129, "seek": 46472, "start": 464.72, "end": 470.48, "text": " So that's one difference with implicit decoding and explicit decoding.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 130, "seek": 46472, "start": 470.48, "end": 473.32000000000005, "text": " Explicit decoding, you will have to handle the error.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 131, "seek": 46472, "start": 473.32000000000005, "end": 477.84000000000003, "text": " With implicit decoding, you will get a runtime error that will be shown in the console, but", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 132, "seek": 46472, "start": 477.84000000000003, "end": 480.04, "text": " you will not notice in the Elm code.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 133, "seek": 46472, "start": 480.04, "end": 482.6, "text": " You will not be able to respond to the error.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 134, "seek": 46472, "start": 482.6, "end": 483.6, "text": " Right.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 135, "seek": 46472, "start": 483.6, "end": 490.16, "text": " And when you say runtime error, we should clarify your app dies completely, unrecoverably.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 136, "seek": 46472, "start": 490.16, "end": 491.16, "text": " Yeah.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 137, "seek": 46472, "start": 491.16, "end": 493.56, "text": " For flags, yes, but not for ports.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 138, "seek": 46472, "start": 493.56, "end": 494.56, "text": " For flags.", "tokens": [50364, 407, 300, 311, 472, 2649, 365, 26947, 979, 8616, 293, 13691, 979, 8616, 13, 50652, 50652, 2111, 4770, 270, 979, 8616, 11, 291, 486, 362, 281, 4813, 264, 6713, 13, 50794, 50794, 2022, 26947, 979, 8616, 11, 291, 486, 483, 257, 34474, 6713, 300, 486, 312, 4898, 294, 264, 11076, 11, 457, 51020, 51020, 291, 486, 406, 3449, 294, 264, 2699, 76, 3089, 13, 51130, 51130, 509, 486, 406, 312, 1075, 281, 4196, 281, 264, 6713, 13, 51258, 51258, 1779, 13, 51308, 51308, 400, 562, 291, 584, 34474, 6713, 11, 321, 820, 17594, 428, 724, 2714, 2584, 11, 20584, 12516, 1188, 13, 51636, 51636, 865, 13, 51686, 51686, 1171, 23265, 11, 2086, 11, 457, 406, 337, 18160, 13, 51806, 51806, 1171, 23265, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16199757733682948, "compression_ratio": 1.8477366255144032, "no_caption_prob": 1.2029194294882473e-05}, {"id": 139, "seek": 49456, "start": 494.56, "end": 495.56, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 140, "seek": 49456, "start": 495.56, "end": 499.12, "text": " I'm pretty sure it doesn't crash for ports.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 141, "seek": 49456, "start": 499.12, "end": 503.24, "text": " Otherwise leave that in the comments.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 142, "seek": 49456, "start": 503.24, "end": 506.2, "text": " Let's look that up and leave it in the comments.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 143, "seek": 49456, "start": 506.2, "end": 507.2, "text": " What the result is there.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 144, "seek": 49456, "start": 507.2, "end": 508.2, "text": " Yeah, that's a good question.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 145, "seek": 49456, "start": 508.2, "end": 510.28000000000003, "text": " It's a good one to ponder.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 146, "seek": 49456, "start": 510.28000000000003, "end": 514.0, "text": " You don't trust me.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 147, "seek": 49456, "start": 514.0, "end": 516.12, "text": " You don't trust me.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 148, "seek": 49456, "start": 516.12, "end": 520.76, "text": " I trust but verify.", "tokens": [50364, 1779, 13, 50414, 50414, 286, 478, 1238, 988, 309, 1177, 380, 8252, 337, 18160, 13, 50592, 50592, 10328, 1856, 300, 294, 264, 3053, 13, 50798, 50798, 961, 311, 574, 300, 493, 293, 1856, 309, 294, 264, 3053, 13, 50946, 50946, 708, 264, 1874, 307, 456, 13, 50996, 50996, 865, 11, 300, 311, 257, 665, 1168, 13, 51046, 51046, 467, 311, 257, 665, 472, 281, 280, 8548, 13, 51150, 51150, 509, 500, 380, 3361, 385, 13, 51336, 51336, 509, 500, 380, 3361, 385, 13, 51442, 51442, 286, 3361, 457, 16888, 13, 51674, 51674], "temperature": 0.0, "avg_logprob": -0.24337504772429772, "compression_ratio": 1.627906976744186, "no_caption_prob": 5.828756184200756e-05}, {"id": 149, "seek": 52076, "start": 520.76, "end": 526.92, "text": " The thing is that I'm actually doubting myself, so I'm not even trusting myself.", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 150, "seek": 52076, "start": 526.92, "end": 530.24, "text": " So I'm going to have to doubt and verify and then trust myself again.", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 151, "seek": 52076, "start": 530.24, "end": 532.8, "text": " Like, yes, you were right.", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 152, "seek": 52076, "start": 532.8, "end": 537.2, "text": " Or I'm just going to listen to this and say, yeah, no, he was wrong all along.", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 153, "seek": 52076, "start": 537.2, "end": 541.92, "text": " This is what I'm saying is like, we should all be a little more like Elm maybe, or maybe", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 154, "seek": 52076, "start": 541.92, "end": 543.76, "text": " it's good to be trusting people.", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 155, "seek": 52076, "start": 543.76, "end": 549.88, "text": " But just be like, hey, listen, I trust you, but let's just follow this process so we don't", "tokens": [50364, 440, 551, 307, 300, 286, 478, 767, 10831, 783, 2059, 11, 370, 286, 478, 406, 754, 28235, 2059, 13, 50672, 50672, 407, 286, 478, 516, 281, 362, 281, 6385, 293, 16888, 293, 550, 3361, 2059, 797, 13, 50838, 50838, 1743, 11, 2086, 11, 291, 645, 558, 13, 50966, 50966, 1610, 286, 478, 445, 516, 281, 2140, 281, 341, 293, 584, 11, 1338, 11, 572, 11, 415, 390, 2085, 439, 2051, 13, 51186, 51186, 639, 307, 437, 286, 478, 1566, 307, 411, 11, 321, 820, 439, 312, 257, 707, 544, 411, 2699, 76, 1310, 11, 420, 1310, 51422, 51422, 309, 311, 665, 281, 312, 28235, 561, 13, 51514, 51514, 583, 445, 312, 411, 11, 4177, 11, 2140, 11, 286, 3361, 291, 11, 457, 718, 311, 445, 1524, 341, 1399, 370, 321, 500, 380, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.1637098648968865, "compression_ratio": 1.7306273062730628, "no_caption_prob": 3.0240544219850563e-05}, {"id": 156, "seek": 54988, "start": 549.88, "end": 553.76, "text": " have to even question trusting or not.", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 157, "seek": 54988, "start": 553.76, "end": 554.76, "text": " Make sure.", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 158, "seek": 54988, "start": 554.76, "end": 555.76, "text": " Yeah, I agree.", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 159, "seek": 54988, "start": 555.76, "end": 556.76, "text": " Okay.", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 160, "seek": 54988, "start": 556.76, "end": 564.2, "text": " So we kind of talked about this benefit of JSON decoders that it validates your data", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 161, "seek": 54988, "start": 564.2, "end": 571.52, "text": " and you know once you have this typed data, you can trust it and that's great.", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 162, "seek": 54988, "start": 571.52, "end": 576.84, "text": " But there's another benefit and I think this is maybe a more subtle one, but it's one that", "tokens": [50364, 362, 281, 754, 1168, 28235, 420, 406, 13, 50558, 50558, 4387, 988, 13, 50608, 50608, 865, 11, 286, 3986, 13, 50658, 50658, 1033, 13, 50708, 50708, 407, 321, 733, 295, 2825, 466, 341, 5121, 295, 31828, 979, 378, 433, 300, 309, 7363, 1024, 428, 1412, 51080, 51080, 293, 291, 458, 1564, 291, 362, 341, 33941, 1412, 11, 291, 393, 3361, 309, 293, 300, 311, 869, 13, 51446, 51446, 583, 456, 311, 1071, 5121, 293, 286, 519, 341, 307, 1310, 257, 544, 13743, 472, 11, 457, 309, 311, 472, 300, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.1444848378499349, "compression_ratio": 1.5330188679245282, "no_caption_prob": 4.1334100387757644e-05}, {"id": 163, "seek": 57684, "start": 576.84, "end": 582.58, "text": " as you get experience with Elm, I think people really grow to love this part of JSON decoders", "tokens": [50364, 382, 291, 483, 1752, 365, 2699, 76, 11, 286, 519, 561, 534, 1852, 281, 959, 341, 644, 295, 31828, 979, 378, 433, 50651, 50651, 382, 731, 11, 597, 307, 300, 309, 4045, 291, 281, 979, 263, 781, 264, 636, 300, 291, 2906, 428, 1412, 490, 50954, 50954, 264, 636, 300, 291, 17436, 1125, 293, 730, 260, 831, 1125, 428, 1412, 13, 51134, 51134, 400, 370, 11, 337, 1365, 11, 437, 291, 915, 2049, 294, 15778, 3089, 307, 570, 31828, 307, 341, 700, 51473, 51473, 1508, 13326, 11, 291, 362, 15778, 2657, 24657, 293, 291, 434, 294, 15778, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09042156443876379, "compression_ratio": 1.6735537190082646, "no_caption_prob": 1.2411260286171455e-05}, {"id": 164, "seek": 57684, "start": 582.58, "end": 588.64, "text": " as well, which is that it allows you to decouple the way that you represent your data from", "tokens": [50364, 382, 291, 483, 1752, 365, 2699, 76, 11, 286, 519, 561, 534, 1852, 281, 959, 341, 644, 295, 31828, 979, 378, 433, 50651, 50651, 382, 731, 11, 597, 307, 300, 309, 4045, 291, 281, 979, 263, 781, 264, 636, 300, 291, 2906, 428, 1412, 490, 50954, 50954, 264, 636, 300, 291, 17436, 1125, 293, 730, 260, 831, 1125, 428, 1412, 13, 51134, 51134, 400, 370, 11, 337, 1365, 11, 437, 291, 915, 2049, 294, 15778, 3089, 307, 570, 31828, 307, 341, 700, 51473, 51473, 1508, 13326, 11, 291, 362, 15778, 2657, 24657, 293, 291, 434, 294, 15778, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09042156443876379, "compression_ratio": 1.6735537190082646, "no_caption_prob": 1.2411260286171455e-05}, {"id": 165, "seek": 57684, "start": 588.64, "end": 592.24, "text": " the way that you serialize and deserialize your data.", "tokens": [50364, 382, 291, 483, 1752, 365, 2699, 76, 11, 286, 519, 561, 534, 1852, 281, 959, 341, 644, 295, 31828, 979, 378, 433, 50651, 50651, 382, 731, 11, 597, 307, 300, 309, 4045, 291, 281, 979, 263, 781, 264, 636, 300, 291, 2906, 428, 1412, 490, 50954, 50954, 264, 636, 300, 291, 17436, 1125, 293, 730, 260, 831, 1125, 428, 1412, 13, 51134, 51134, 400, 370, 11, 337, 1365, 11, 437, 291, 915, 2049, 294, 15778, 3089, 307, 570, 31828, 307, 341, 700, 51473, 51473, 1508, 13326, 11, 291, 362, 15778, 2657, 24657, 293, 291, 434, 294, 15778, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09042156443876379, "compression_ratio": 1.6735537190082646, "no_caption_prob": 1.2411260286171455e-05}, {"id": 166, "seek": 57684, "start": 592.24, "end": 599.02, "text": " And so, for example, what you find often in JavaScript code is because JSON is this first", "tokens": [50364, 382, 291, 483, 1752, 365, 2699, 76, 11, 286, 519, 561, 534, 1852, 281, 959, 341, 644, 295, 31828, 979, 378, 433, 50651, 50651, 382, 731, 11, 597, 307, 300, 309, 4045, 291, 281, 979, 263, 781, 264, 636, 300, 291, 2906, 428, 1412, 490, 50954, 50954, 264, 636, 300, 291, 17436, 1125, 293, 730, 260, 831, 1125, 428, 1412, 13, 51134, 51134, 400, 370, 11, 337, 1365, 11, 437, 291, 915, 2049, 294, 15778, 3089, 307, 570, 31828, 307, 341, 700, 51473, 51473, 1508, 13326, 11, 291, 362, 15778, 2657, 24657, 293, 291, 434, 294, 15778, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09042156443876379, "compression_ratio": 1.6735537190082646, "no_caption_prob": 1.2411260286171455e-05}, {"id": 167, "seek": 57684, "start": 599.02, "end": 603.6600000000001, "text": " class citizen, you have JavaScript object notation and you're in JavaScript.", "tokens": [50364, 382, 291, 483, 1752, 365, 2699, 76, 11, 286, 519, 561, 534, 1852, 281, 959, 341, 644, 295, 31828, 979, 378, 433, 50651, 50651, 382, 731, 11, 597, 307, 300, 309, 4045, 291, 281, 979, 263, 781, 264, 636, 300, 291, 2906, 428, 1412, 490, 50954, 50954, 264, 636, 300, 291, 17436, 1125, 293, 730, 260, 831, 1125, 428, 1412, 13, 51134, 51134, 400, 370, 11, 337, 1365, 11, 437, 291, 915, 2049, 294, 15778, 3089, 307, 570, 31828, 307, 341, 700, 51473, 51473, 1508, 13326, 11, 291, 362, 15778, 2657, 24657, 293, 291, 434, 294, 15778, 13, 51705, 51705], "temperature": 0.0, "avg_logprob": -0.09042156443876379, "compression_ratio": 1.6735537190082646, "no_caption_prob": 1.2411260286171455e-05}, {"id": 168, "seek": 60366, "start": 603.66, "end": 609.16, "text": " So hey, I've got this JavaScript object, I can just pull data off of it, I can just reference", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 169, "seek": 60366, "start": 609.16, "end": 613.04, "text": " these fields and that's quite convenient on the one hand.", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 170, "seek": 60366, "start": 613.04, "end": 617.86, "text": " But on the other hand, maybe you have a format that isn't the best way to describe something", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 171, "seek": 60366, "start": 617.86, "end": 623.74, "text": " or maybe you want to have certain data structures that say make impossible states impossible", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 172, "seek": 60366, "start": 623.74, "end": 627.16, "text": " or better match the rest of your code base.", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 173, "seek": 60366, "start": 627.16, "end": 631.68, "text": " So let's talk a little bit about how that looks in JSON decoders.", "tokens": [50364, 407, 4177, 11, 286, 600, 658, 341, 15778, 2657, 11, 286, 393, 445, 2235, 1412, 766, 295, 309, 11, 286, 393, 445, 6408, 50639, 50639, 613, 7909, 293, 300, 311, 1596, 10851, 322, 264, 472, 1011, 13, 50833, 50833, 583, 322, 264, 661, 1011, 11, 1310, 291, 362, 257, 7877, 300, 1943, 380, 264, 1151, 636, 281, 6786, 746, 51074, 51074, 420, 1310, 291, 528, 281, 362, 1629, 1412, 9227, 300, 584, 652, 6243, 4368, 6243, 51368, 51368, 420, 1101, 2995, 264, 1472, 295, 428, 3089, 3096, 13, 51539, 51539, 407, 718, 311, 751, 257, 707, 857, 466, 577, 300, 1542, 294, 31828, 979, 378, 433, 13, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.08332934680285754, "compression_ratio": 1.6494464944649447, "no_caption_prob": 1.0783130164782051e-05}, {"id": 174, "seek": 63168, "start": 631.68, "end": 638.28, "text": " What are the practices that allow you to decouple the serialization format from the representation", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 175, "seek": 63168, "start": 638.28, "end": 640.88, "text": " of that data in your Elm code?", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 176, "seek": 63168, "start": 640.88, "end": 646.8, "text": " Basically when you decode something, when you decode JSON, you'd set it, hey, I want", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 177, "seek": 63168, "start": 646.8, "end": 649.3599999999999, "text": " this field with this name and this type.", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 178, "seek": 63168, "start": 649.3599999999999, "end": 655.04, "text": " And then what you do is you apply a function to that, to the results of that, which is", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 179, "seek": 63168, "start": 655.04, "end": 658.0799999999999, "text": " from the raw value into something that you control.", "tokens": [50364, 708, 366, 264, 7525, 300, 2089, 291, 281, 979, 263, 781, 264, 17436, 2144, 7877, 490, 264, 10290, 50694, 50694, 295, 300, 1412, 294, 428, 2699, 76, 3089, 30, 50824, 50824, 8537, 562, 291, 979, 1429, 746, 11, 562, 291, 979, 1429, 31828, 11, 291, 1116, 992, 309, 11, 4177, 11, 286, 528, 51120, 51120, 341, 2519, 365, 341, 1315, 293, 341, 2010, 13, 51248, 51248, 400, 550, 437, 291, 360, 307, 291, 3079, 257, 2445, 281, 300, 11, 281, 264, 3542, 295, 300, 11, 597, 307, 51532, 51532, 490, 264, 8936, 2158, 666, 746, 300, 291, 1969, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.11906219223170604, "compression_ratio": 1.6909871244635193, "no_caption_prob": 2.902293545048451e-06}, {"id": 180, "seek": 65808, "start": 658.08, "end": 663.5200000000001, "text": " So what you usually do is we create a new type, so a type alias, which represents what", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 181, "seek": 65808, "start": 663.5200000000001, "end": 669.6, "text": " you want, but that could have different names or you create opaque types over which you", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 182, "seek": 65808, "start": 669.6, "end": 674.58, "text": " have much more control and which can give you a lot of guarantees.", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 183, "seek": 65808, "start": 674.58, "end": 675.58, "text": " And that's it.", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 184, "seek": 65808, "start": 675.58, "end": 676.58, "text": " Right.", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 185, "seek": 65808, "start": 676.58, "end": 679.82, "text": " So let's maybe get into a concrete example.", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 186, "seek": 65808, "start": 679.82, "end": 686.5, "text": " So let's say that you've got some way of representing a date time on the server and you have some", "tokens": [50364, 407, 437, 291, 2673, 360, 307, 321, 1884, 257, 777, 2010, 11, 370, 257, 2010, 419, 4609, 11, 597, 8855, 437, 50636, 50636, 291, 528, 11, 457, 300, 727, 362, 819, 5288, 420, 291, 1884, 42687, 3467, 670, 597, 291, 50940, 50940, 362, 709, 544, 1969, 293, 597, 393, 976, 291, 257, 688, 295, 32567, 13, 51189, 51189, 400, 300, 311, 309, 13, 51239, 51239, 1779, 13, 51289, 51289, 407, 718, 311, 1310, 483, 666, 257, 9859, 1365, 13, 51451, 51451, 407, 718, 311, 584, 300, 291, 600, 658, 512, 636, 295, 13460, 257, 4002, 565, 322, 264, 7154, 293, 291, 362, 512, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.11703439516441844, "compression_ratio": 1.6945606694560669, "no_caption_prob": 1.7330362425127532e-06}, {"id": 187, "seek": 68650, "start": 686.5, "end": 691.56, "text": " way of serializing that into JSON so you can send it from the server to the client.", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 188, "seek": 68650, "start": 691.56, "end": 696.6, "text": " And then in your Elm code, you have some way to represent that date time.", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 189, "seek": 68650, "start": 696.6, "end": 699.92, "text": " Well, all three of those may be different.", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 190, "seek": 68650, "start": 699.92, "end": 706.32, "text": " And so if you're using an ISO 8601 string to represent it in the JSON payload that comes", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 191, "seek": 68650, "start": 706.32, "end": 710.08, "text": " through to the client, what I see happening in a lot of JavaScript applications is they'll", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 192, "seek": 68650, "start": 710.08, "end": 714.36, "text": " just store that as the value that they pass around all over the place.", "tokens": [50364, 636, 295, 17436, 3319, 300, 666, 31828, 370, 291, 393, 2845, 309, 490, 264, 7154, 281, 264, 6423, 13, 50617, 50617, 400, 550, 294, 428, 2699, 76, 3089, 11, 291, 362, 512, 636, 281, 2906, 300, 4002, 565, 13, 50869, 50869, 1042, 11, 439, 1045, 295, 729, 815, 312, 819, 13, 51035, 51035, 400, 370, 498, 291, 434, 1228, 364, 25042, 1649, 4550, 16, 6798, 281, 2906, 309, 294, 264, 31828, 30918, 300, 1487, 51355, 51355, 807, 281, 264, 6423, 11, 437, 286, 536, 2737, 294, 257, 688, 295, 15778, 5821, 307, 436, 603, 51543, 51543, 445, 3531, 300, 382, 264, 2158, 300, 436, 1320, 926, 439, 670, 264, 1081, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.067450125321098, "compression_ratio": 1.628158844765343, "no_caption_prob": 1.6442312698927708e-05}, {"id": 193, "seek": 71436, "start": 714.36, "end": 717.8000000000001, "text": " So you're passing around these strings, but what you really want to do is you want to", "tokens": [50364, 407, 291, 434, 8437, 926, 613, 13985, 11, 457, 437, 291, 534, 528, 281, 360, 307, 291, 528, 281, 50536, 50536, 7019, 300, 666, 257, 1481, 1412, 2010, 300, 8855, 264, 4002, 565, 382, 2321, 382, 291, 483, 264, 4134, 13, 50856, 50856, 400, 370, 411, 498, 291, 434, 3579, 257, 31828, 979, 19866, 294, 2699, 76, 11, 718, 311, 584, 291, 600, 658, 512, 2519, 2942, 51162, 51162, 412, 293, 309, 311, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51376, 51376, 1042, 11, 291, 393, 764, 428, 2445, 281, 48377, 300, 490, 257, 6798, 293, 550, 4471, 300, 6798, 666, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.07994226239762216, "compression_ratio": 1.5983935742971886, "no_caption_prob": 5.093655545351794e-06}, {"id": 194, "seek": 71436, "start": 717.8000000000001, "end": 724.2, "text": " wrap that into a nice data type that represents the date time as soon as you get the response.", "tokens": [50364, 407, 291, 434, 8437, 926, 613, 13985, 11, 457, 437, 291, 534, 528, 281, 360, 307, 291, 528, 281, 50536, 50536, 7019, 300, 666, 257, 1481, 1412, 2010, 300, 8855, 264, 4002, 565, 382, 2321, 382, 291, 483, 264, 4134, 13, 50856, 50856, 400, 370, 411, 498, 291, 434, 3579, 257, 31828, 979, 19866, 294, 2699, 76, 11, 718, 311, 584, 291, 600, 658, 512, 2519, 2942, 51162, 51162, 412, 293, 309, 311, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51376, 51376, 1042, 11, 291, 393, 764, 428, 2445, 281, 48377, 300, 490, 257, 6798, 293, 550, 4471, 300, 6798, 666, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.07994226239762216, "compression_ratio": 1.5983935742971886, "no_caption_prob": 5.093655545351794e-06}, {"id": 195, "seek": 71436, "start": 724.2, "end": 730.32, "text": " And so like if you're writing a JSON decoder in Elm, let's say you've got some field created", "tokens": [50364, 407, 291, 434, 8437, 926, 613, 13985, 11, 457, 437, 291, 534, 528, 281, 360, 307, 291, 528, 281, 50536, 50536, 7019, 300, 666, 257, 1481, 1412, 2010, 300, 8855, 264, 4002, 565, 382, 2321, 382, 291, 483, 264, 4134, 13, 50856, 50856, 400, 370, 411, 498, 291, 434, 3579, 257, 31828, 979, 19866, 294, 2699, 76, 11, 718, 311, 584, 291, 600, 658, 512, 2519, 2942, 51162, 51162, 412, 293, 309, 311, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51376, 51376, 1042, 11, 291, 393, 764, 428, 2445, 281, 48377, 300, 490, 257, 6798, 293, 550, 4471, 300, 6798, 666, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.07994226239762216, "compression_ratio": 1.5983935742971886, "no_caption_prob": 5.093655545351794e-06}, {"id": 196, "seek": 71436, "start": 730.32, "end": 734.6, "text": " at and it's an ISO 8601 date time.", "tokens": [50364, 407, 291, 434, 8437, 926, 613, 13985, 11, 457, 437, 291, 534, 528, 281, 360, 307, 291, 528, 281, 50536, 50536, 7019, 300, 666, 257, 1481, 1412, 2010, 300, 8855, 264, 4002, 565, 382, 2321, 382, 291, 483, 264, 4134, 13, 50856, 50856, 400, 370, 411, 498, 291, 434, 3579, 257, 31828, 979, 19866, 294, 2699, 76, 11, 718, 311, 584, 291, 600, 658, 512, 2519, 2942, 51162, 51162, 412, 293, 309, 311, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51376, 51376, 1042, 11, 291, 393, 764, 428, 2445, 281, 48377, 300, 490, 257, 6798, 293, 550, 4471, 300, 6798, 666, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.07994226239762216, "compression_ratio": 1.5983935742971886, "no_caption_prob": 5.093655545351794e-06}, {"id": 197, "seek": 71436, "start": 734.6, "end": 742.28, "text": " Well, you can use your function to parse that from a string and then map that string into", "tokens": [50364, 407, 291, 434, 8437, 926, 613, 13985, 11, 457, 437, 291, 534, 528, 281, 360, 307, 291, 528, 281, 50536, 50536, 7019, 300, 666, 257, 1481, 1412, 2010, 300, 8855, 264, 4002, 565, 382, 2321, 382, 291, 483, 264, 4134, 13, 50856, 50856, 400, 370, 411, 498, 291, 434, 3579, 257, 31828, 979, 19866, 294, 2699, 76, 11, 718, 311, 584, 291, 600, 658, 512, 2519, 2942, 51162, 51162, 412, 293, 309, 311, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51376, 51376, 1042, 11, 291, 393, 764, 428, 2445, 281, 48377, 300, 490, 257, 6798, 293, 550, 4471, 300, 6798, 666, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.07994226239762216, "compression_ratio": 1.5983935742971886, "no_caption_prob": 5.093655545351794e-06}, {"id": 198, "seek": 74228, "start": 742.28, "end": 744.9599999999999, "text": " an Elm time POSIX value.", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 199, "seek": 74228, "start": 744.9599999999999, "end": 747.64, "text": " Like Richard Feldman has a library for doing just that.", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 200, "seek": 74228, "start": 747.64, "end": 753.4399999999999, "text": " In fact, he even exposes a decoder that first decodes it as a string and then it maps that", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 201, "seek": 74228, "start": 753.4399999999999, "end": 761.1999999999999, "text": " string into an Elm time by running a parser that will extract out that ISO 8601 time format", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 202, "seek": 74228, "start": 761.1999999999999, "end": 764.86, "text": " into something that Elm can interpret as a POSIX time.", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 203, "seek": 74228, "start": 764.86, "end": 770.9599999999999, "text": " And so now the really cool thing is there's not a single point in your Elm code where", "tokens": [50364, 364, 2699, 76, 565, 430, 4367, 21124, 2158, 13, 50498, 50498, 1743, 9809, 42677, 1601, 575, 257, 6405, 337, 884, 445, 300, 13, 50632, 50632, 682, 1186, 11, 415, 754, 1278, 4201, 257, 979, 19866, 300, 700, 979, 4789, 309, 382, 257, 6798, 293, 550, 309, 11317, 300, 50922, 50922, 6798, 666, 364, 2699, 76, 565, 538, 2614, 257, 21156, 260, 300, 486, 8947, 484, 300, 25042, 1649, 4550, 16, 565, 7877, 51310, 51310, 666, 746, 300, 2699, 76, 393, 7302, 382, 257, 430, 4367, 21124, 565, 13, 51493, 51493, 400, 370, 586, 264, 534, 1627, 551, 307, 456, 311, 406, 257, 2167, 935, 294, 428, 2699, 76, 3089, 689, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.07133306536758155, "compression_ratio": 1.6224899598393574, "no_caption_prob": 4.1334282286698e-05}, {"id": 204, "seek": 77096, "start": 770.96, "end": 773.4000000000001, "text": " you have access to that string value.", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 205, "seek": 77096, "start": 773.4000000000001, "end": 778.96, "text": " Yeah, that's basically the point of don't model your model based on what you get from", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 206, "seek": 77096, "start": 778.96, "end": 786.48, "text": " the user or from the HTTP, from the server, but model it based on what you will do with", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 207, "seek": 77096, "start": 786.48, "end": 787.48, "text": " it.", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 208, "seek": 77096, "start": 787.48, "end": 791.76, "text": " So if the only thing that you're going to do with time is get the number of the year,", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 209, "seek": 77096, "start": 791.76, "end": 795.34, "text": " the year number, then just get that data.", "tokens": [50364, 291, 362, 2105, 281, 300, 6798, 2158, 13, 50486, 50486, 865, 11, 300, 311, 1936, 264, 935, 295, 500, 380, 2316, 428, 2316, 2361, 322, 437, 291, 483, 490, 50764, 50764, 264, 4195, 420, 490, 264, 33283, 11, 490, 264, 7154, 11, 457, 2316, 309, 2361, 322, 437, 291, 486, 360, 365, 51140, 51140, 309, 13, 51190, 51190, 407, 498, 264, 787, 551, 300, 291, 434, 516, 281, 360, 365, 565, 307, 483, 264, 1230, 295, 264, 1064, 11, 51404, 51404, 264, 1064, 1230, 11, 550, 445, 483, 300, 1412, 13, 51583, 51583], "temperature": 0.0, "avg_logprob": -0.10865683304636102, "compression_ratio": 1.768041237113402, "no_caption_prob": 2.5866143914754502e-05}, {"id": 210, "seek": 79534, "start": 795.34, "end": 801.38, "text": " If you need to display that number as a string, you can already store it as a string.", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 211, "seek": 79534, "start": 801.38, "end": 806.5600000000001, "text": " If you need to do operations on it, then store it as an integer and then whatever fits your", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 212, "seek": 79534, "start": 806.5600000000001, "end": 808.62, "text": " use case the best.", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 213, "seek": 79534, "start": 808.62, "end": 815.0400000000001, "text": " Do not store it as a string, as a POSIX, if it does not make sense to what you're going", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 214, "seek": 79534, "start": 815.0400000000001, "end": 817.4, "text": " to do with it afterwards.", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 215, "seek": 79534, "start": 817.4, "end": 818.4, "text": " That's interesting.", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 216, "seek": 79534, "start": 818.4, "end": 822.34, "text": " Yeah, I think there's a certain mindset that you get into.", "tokens": [50364, 759, 291, 643, 281, 4674, 300, 1230, 382, 257, 6798, 11, 291, 393, 1217, 3531, 309, 382, 257, 6798, 13, 50666, 50666, 759, 291, 643, 281, 360, 7705, 322, 309, 11, 550, 3531, 309, 382, 364, 24922, 293, 550, 2035, 9001, 428, 50925, 50925, 764, 1389, 264, 1151, 13, 51028, 51028, 1144, 406, 3531, 309, 382, 257, 6798, 11, 382, 257, 430, 4367, 21124, 11, 498, 309, 775, 406, 652, 2020, 281, 437, 291, 434, 516, 51349, 51349, 281, 360, 365, 309, 10543, 13, 51467, 51467, 663, 311, 1880, 13, 51517, 51517, 865, 11, 286, 519, 456, 311, 257, 1629, 12543, 300, 291, 483, 666, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08869847384366122, "compression_ratio": 1.7212389380530972, "no_caption_prob": 2.078319994325284e-05}, {"id": 217, "seek": 82234, "start": 822.34, "end": 827.48, "text": " So for me, test driven development is an example of this mindset.", "tokens": [50364, 407, 337, 385, 11, 1500, 9555, 3250, 307, 364, 1365, 295, 341, 12543, 13, 50621, 50621, 821, 311, 257, 10710, 1219, 9410, 538, 7789, 13, 50765, 50765, 400, 439, 300, 1433, 1355, 307, 300, 291, 700, 1333, 295, 5109, 577, 291, 528, 281, 764, 746, 51060, 51060, 293, 550, 291, 9943, 11403, 300, 281, 2573, 484, 437, 264, 11420, 1542, 411, 13, 51319, 51319, 407, 291, 434, 1953, 466, 577, 291, 528, 281, 14732, 746, 949, 291, 767, 2464, 264, 11420, 11, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.06792443852091945, "compression_ratio": 1.6866952789699572, "no_caption_prob": 1.30817227272928e-06}, {"id": 218, "seek": 82234, "start": 827.48, "end": 830.36, "text": " There's a notion called programming by intention.", "tokens": [50364, 407, 337, 385, 11, 1500, 9555, 3250, 307, 364, 1365, 295, 341, 12543, 13, 50621, 50621, 821, 311, 257, 10710, 1219, 9410, 538, 7789, 13, 50765, 50765, 400, 439, 300, 1433, 1355, 307, 300, 291, 700, 1333, 295, 5109, 577, 291, 528, 281, 764, 746, 51060, 51060, 293, 550, 291, 9943, 11403, 300, 281, 2573, 484, 437, 264, 11420, 1542, 411, 13, 51319, 51319, 407, 291, 434, 1953, 466, 577, 291, 528, 281, 14732, 746, 949, 291, 767, 2464, 264, 11420, 11, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.06792443852091945, "compression_ratio": 1.6866952789699572, "no_caption_prob": 1.30817227272928e-06}, {"id": 219, "seek": 82234, "start": 830.36, "end": 836.26, "text": " And all that term means is that you first sort of express how you want to use something", "tokens": [50364, 407, 337, 385, 11, 1500, 9555, 3250, 307, 364, 1365, 295, 341, 12543, 13, 50621, 50621, 821, 311, 257, 10710, 1219, 9410, 538, 7789, 13, 50765, 50765, 400, 439, 300, 1433, 1355, 307, 300, 291, 700, 1333, 295, 5109, 577, 291, 528, 281, 764, 746, 51060, 51060, 293, 550, 291, 9943, 11403, 300, 281, 2573, 484, 437, 264, 11420, 1542, 411, 13, 51319, 51319, 407, 291, 434, 1953, 466, 577, 291, 528, 281, 14732, 746, 949, 291, 767, 2464, 264, 11420, 11, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.06792443852091945, "compression_ratio": 1.6866952789699572, "no_caption_prob": 1.30817227272928e-06}, {"id": 220, "seek": 82234, "start": 836.26, "end": 841.44, "text": " and then you reverse engineer that to figure out what the implementation looks like.", "tokens": [50364, 407, 337, 385, 11, 1500, 9555, 3250, 307, 364, 1365, 295, 341, 12543, 13, 50621, 50621, 821, 311, 257, 10710, 1219, 9410, 538, 7789, 13, 50765, 50765, 400, 439, 300, 1433, 1355, 307, 300, 291, 700, 1333, 295, 5109, 577, 291, 528, 281, 764, 746, 51060, 51060, 293, 550, 291, 9943, 11403, 300, 281, 2573, 484, 437, 264, 11420, 1542, 411, 13, 51319, 51319, 407, 291, 434, 1953, 466, 577, 291, 528, 281, 14732, 746, 949, 291, 767, 2464, 264, 11420, 11, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.06792443852091945, "compression_ratio": 1.6866952789699572, "no_caption_prob": 1.30817227272928e-06}, {"id": 221, "seek": 82234, "start": 841.44, "end": 846.84, "text": " So you're thinking about how you want to consume something before you actually write the implementation,", "tokens": [50364, 407, 337, 385, 11, 1500, 9555, 3250, 307, 364, 1365, 295, 341, 12543, 13, 50621, 50621, 821, 311, 257, 10710, 1219, 9410, 538, 7789, 13, 50765, 50765, 400, 439, 300, 1433, 1355, 307, 300, 291, 700, 1333, 295, 5109, 577, 291, 528, 281, 764, 746, 51060, 51060, 293, 550, 291, 9943, 11403, 300, 281, 2573, 484, 437, 264, 11420, 1542, 411, 13, 51319, 51319, 407, 291, 434, 1953, 466, 577, 291, 528, 281, 14732, 746, 949, 291, 767, 2464, 264, 11420, 11, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.06792443852091945, "compression_ratio": 1.6866952789699572, "no_caption_prob": 1.30817227272928e-06}, {"id": 222, "seek": 84684, "start": 846.84, "end": 852.9200000000001, "text": " which means the implementation details don't guide the high level data modeling or API.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 223, "seek": 84684, "start": 852.9200000000001, "end": 857.96, "text": " Yeah, so this is kind of the same thing as API driven.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 224, "seek": 84684, "start": 857.96, "end": 858.96, "text": " That's a good way to think of it.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 225, "seek": 84684, "start": 858.96, "end": 864.12, "text": " Yeah, I mean, it's when you're doing data modeling, you know, I mean, you could even", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 226, "seek": 84684, "start": 864.12, "end": 867.52, "text": " start by just writing out your data type.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 227, "seek": 84684, "start": 867.52, "end": 870.44, "text": " This is what I want to receive from the server.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 228, "seek": 84684, "start": 870.44, "end": 872.26, "text": " What would my ideal data be?", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 229, "seek": 84684, "start": 872.26, "end": 875.08, "text": " This is actually something you can do with JSON decoders.", "tokens": [50364, 597, 1355, 264, 11420, 4365, 500, 380, 5934, 264, 1090, 1496, 1412, 15983, 420, 9362, 13, 50668, 50668, 865, 11, 370, 341, 307, 733, 295, 264, 912, 551, 382, 9362, 9555, 13, 50920, 50920, 663, 311, 257, 665, 636, 281, 519, 295, 309, 13, 50970, 50970, 865, 11, 286, 914, 11, 309, 311, 562, 291, 434, 884, 1412, 15983, 11, 291, 458, 11, 286, 914, 11, 291, 727, 754, 51228, 51228, 722, 538, 445, 3579, 484, 428, 1412, 2010, 13, 51398, 51398, 639, 307, 437, 286, 528, 281, 4774, 490, 264, 7154, 13, 51544, 51544, 708, 576, 452, 7157, 1412, 312, 30, 51635, 51635, 639, 307, 767, 746, 291, 393, 360, 365, 31828, 979, 378, 433, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1453386732369415, "compression_ratio": 1.6222222222222222, "no_caption_prob": 1.1478527994768228e-05}, {"id": 230, "seek": 87508, "start": 875.08, "end": 880.44, "text": " You can sort of incrementally build something out and start consuming hard coded data.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 231, "seek": 87508, "start": 880.44, "end": 881.44, "text": " Yeah.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 232, "seek": 87508, "start": 881.44, "end": 886.4200000000001, "text": " So a really good trick in the toolkit of JSON decoders is JSON.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 233, "seek": 87508, "start": 886.4200000000001, "end": 889.38, "text": " It's a function called JSON decode succeed.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 234, "seek": 87508, "start": 889.38, "end": 894.4000000000001, "text": " And what that function does, it's extremely useful for a number of reasons.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 235, "seek": 87508, "start": 894.4000000000001, "end": 901.08, "text": " But one of the most useful use cases for it is to stub out data and just pass in hard", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 236, "seek": 87508, "start": 901.08, "end": 902.72, "text": " coded data.", "tokens": [50364, 509, 393, 1333, 295, 26200, 379, 1322, 746, 484, 293, 722, 19867, 1152, 34874, 1412, 13, 50632, 50632, 865, 13, 50682, 50682, 407, 257, 534, 665, 4282, 294, 264, 40167, 295, 31828, 979, 378, 433, 307, 31828, 13, 50931, 50931, 467, 311, 257, 2445, 1219, 31828, 979, 1429, 7754, 13, 51079, 51079, 400, 437, 300, 2445, 775, 11, 309, 311, 4664, 4420, 337, 257, 1230, 295, 4112, 13, 51330, 51330, 583, 472, 295, 264, 881, 4420, 764, 3331, 337, 309, 307, 281, 20266, 484, 1412, 293, 445, 1320, 294, 1152, 51664, 51664, 34874, 1412, 13, 51746, 51746], "temperature": 0.0, "avg_logprob": -0.11156846056080828, "compression_ratio": 1.6051502145922747, "no_caption_prob": 2.7693856736732414e-06}, {"id": 237, "seek": 90272, "start": 902.72, "end": 908.22, "text": " So you could say, I need to get the year that this album was released.", "tokens": [50364, 407, 291, 727, 584, 11, 286, 643, 281, 483, 264, 1064, 300, 341, 6030, 390, 4736, 13, 50639, 50639, 821, 311, 411, 512, 1318, 6613, 11, 293, 286, 643, 264, 1064, 309, 390, 4736, 13, 50892, 50892, 400, 562, 286, 574, 412, 264, 29036, 9362, 14333, 11, 309, 1619, 746, 466, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51224, 51224, 583, 439, 286, 458, 307, 286, 787, 1127, 466, 264, 1064, 746, 390, 4736, 570, 286, 478, 1455, 51426, 51426, 364, 724, 300, 2516, 341, 29036, 4134, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.11623473833965998, "compression_ratio": 1.6238938053097345, "no_caption_prob": 7.2962779995577876e-06}, {"id": 238, "seek": 90272, "start": 908.22, "end": 913.28, "text": " There's like some music recording, and I need the year it was released.", "tokens": [50364, 407, 291, 727, 584, 11, 286, 643, 281, 483, 264, 1064, 300, 341, 6030, 390, 4736, 13, 50639, 50639, 821, 311, 411, 512, 1318, 6613, 11, 293, 286, 643, 264, 1064, 309, 390, 4736, 13, 50892, 50892, 400, 562, 286, 574, 412, 264, 29036, 9362, 14333, 11, 309, 1619, 746, 466, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51224, 51224, 583, 439, 286, 458, 307, 286, 787, 1127, 466, 264, 1064, 746, 390, 4736, 570, 286, 478, 1455, 51426, 51426, 364, 724, 300, 2516, 341, 29036, 4134, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.11623473833965998, "compression_ratio": 1.6238938053097345, "no_caption_prob": 7.2962779995577876e-06}, {"id": 239, "seek": 90272, "start": 913.28, "end": 919.9200000000001, "text": " And when I look at the Spotify API documentation, it says something about an ISO 8601 date time.", "tokens": [50364, 407, 291, 727, 584, 11, 286, 643, 281, 483, 264, 1064, 300, 341, 6030, 390, 4736, 13, 50639, 50639, 821, 311, 411, 512, 1318, 6613, 11, 293, 286, 643, 264, 1064, 309, 390, 4736, 13, 50892, 50892, 400, 562, 286, 574, 412, 264, 29036, 9362, 14333, 11, 309, 1619, 746, 466, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51224, 51224, 583, 439, 286, 458, 307, 286, 787, 1127, 466, 264, 1064, 746, 390, 4736, 570, 286, 478, 1455, 51426, 51426, 364, 724, 300, 2516, 341, 29036, 4134, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.11623473833965998, "compression_ratio": 1.6238938053097345, "no_caption_prob": 7.2962779995577876e-06}, {"id": 240, "seek": 90272, "start": 919.9200000000001, "end": 923.96, "text": " But all I know is I only care about the year something was released because I'm making", "tokens": [50364, 407, 291, 727, 584, 11, 286, 643, 281, 483, 264, 1064, 300, 341, 6030, 390, 4736, 13, 50639, 50639, 821, 311, 411, 512, 1318, 6613, 11, 293, 286, 643, 264, 1064, 309, 390, 4736, 13, 50892, 50892, 400, 562, 286, 574, 412, 264, 29036, 9362, 14333, 11, 309, 1619, 746, 466, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51224, 51224, 583, 439, 286, 458, 307, 286, 787, 1127, 466, 264, 1064, 746, 390, 4736, 570, 286, 478, 1455, 51426, 51426, 364, 724, 300, 2516, 341, 29036, 4134, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.11623473833965998, "compression_ratio": 1.6238938053097345, "no_caption_prob": 7.2962779995577876e-06}, {"id": 241, "seek": 90272, "start": 923.96, "end": 927.22, "text": " an app that takes this Spotify response.", "tokens": [50364, 407, 291, 727, 584, 11, 286, 643, 281, 483, 264, 1064, 300, 341, 6030, 390, 4736, 13, 50639, 50639, 821, 311, 411, 512, 1318, 6613, 11, 293, 286, 643, 264, 1064, 309, 390, 4736, 13, 50892, 50892, 400, 562, 286, 574, 412, 264, 29036, 9362, 14333, 11, 309, 1619, 746, 466, 364, 25042, 1649, 4550, 16, 4002, 565, 13, 51224, 51224, 583, 439, 286, 458, 307, 286, 787, 1127, 466, 264, 1064, 746, 390, 4736, 570, 286, 478, 1455, 51426, 51426, 364, 724, 300, 2516, 341, 29036, 4134, 13, 51589, 51589], "temperature": 0.0, "avg_logprob": -0.11623473833965998, "compression_ratio": 1.6238938053097345, "no_caption_prob": 7.2962779995577876e-06}, {"id": 242, "seek": 92722, "start": 927.22, "end": 933.9200000000001, "text": " And it lists out a listing of albums for all of these tracks and what year they were released", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 243, "seek": 92722, "start": 933.9200000000001, "end": 935.32, "text": " and orders them by year.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 244, "seek": 92722, "start": 935.32, "end": 939.0400000000001, "text": " And it doesn't display the date or the month it was released.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 245, "seek": 92722, "start": 939.0400000000001, "end": 940.0400000000001, "text": " It only shows the year.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 246, "seek": 92722, "start": 940.0400000000001, "end": 941.36, "text": " And that's all I care about.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 247, "seek": 92722, "start": 941.36, "end": 946.9, "text": " So ideally, my data structure would just be type alias album is a record.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 248, "seek": 92722, "start": 946.9, "end": 950.12, "text": " And it's got a field called release year, which is an int.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 249, "seek": 92722, "start": 950.12, "end": 955.12, "text": " And it's got a field called name, which is the album name, something like that.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 250, "seek": 92722, "start": 955.12, "end": 956.32, "text": " Okay, let's start with that.", "tokens": [50364, 400, 309, 14511, 484, 257, 22161, 295, 24795, 337, 439, 295, 613, 10218, 293, 437, 1064, 436, 645, 4736, 50699, 50699, 293, 9470, 552, 538, 1064, 13, 50769, 50769, 400, 309, 1177, 380, 4674, 264, 4002, 420, 264, 1618, 309, 390, 4736, 13, 50955, 50955, 467, 787, 3110, 264, 1064, 13, 51005, 51005, 400, 300, 311, 439, 286, 1127, 466, 13, 51071, 51071, 407, 22915, 11, 452, 1412, 3877, 576, 445, 312, 2010, 419, 4609, 6030, 307, 257, 2136, 13, 51348, 51348, 400, 309, 311, 658, 257, 2519, 1219, 4374, 1064, 11, 597, 307, 364, 560, 13, 51509, 51509, 400, 309, 311, 658, 257, 2519, 1219, 1315, 11, 597, 307, 264, 6030, 1315, 11, 746, 411, 300, 13, 51759, 51759, 1033, 11, 718, 311, 722, 365, 300, 13, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.09629840561837862, "compression_ratio": 1.806083650190114, "no_caption_prob": 1.6187248547794297e-05}, {"id": 251, "seek": 95632, "start": 956.32, "end": 958.0400000000001, "text": " We've got those two fields.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 252, "seek": 95632, "start": 958.0400000000001, "end": 962.22, "text": " Now we can write a JSON decoder that decodes data into an album.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 253, "seek": 95632, "start": 962.22, "end": 963.4000000000001, "text": " So what does that look like?", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 254, "seek": 95632, "start": 963.4000000000001, "end": 964.96, "text": " Well, it's it's quite easy.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 255, "seek": 95632, "start": 964.96, "end": 969.22, "text": " You can say JSON dot decode dot succeed 1975.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 256, "seek": 95632, "start": 969.22, "end": 972.48, "text": " And now that's a JSON decoder that decodes into an int.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 257, "seek": 95632, "start": 972.48, "end": 977.24, "text": " Well now I want to build that up into a JSON decoder that gives me an album, not just an", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 258, "seek": 95632, "start": 977.24, "end": 978.24, "text": " int.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 259, "seek": 95632, "start": 978.24, "end": 979.24, "text": " So how do you do that?", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 260, "seek": 95632, "start": 979.24, "end": 985.3000000000001, "text": " Well, you say, now we need to decode it into an object into into a record.", "tokens": [50364, 492, 600, 658, 729, 732, 7909, 13, 50450, 50450, 823, 321, 393, 2464, 257, 31828, 979, 19866, 300, 979, 4789, 1412, 666, 364, 6030, 13, 50659, 50659, 407, 437, 775, 300, 574, 411, 30, 50718, 50718, 1042, 11, 309, 311, 309, 311, 1596, 1858, 13, 50796, 50796, 509, 393, 584, 31828, 5893, 979, 1429, 5893, 7754, 32454, 13, 51009, 51009, 400, 586, 300, 311, 257, 31828, 979, 19866, 300, 979, 4789, 666, 364, 560, 13, 51172, 51172, 1042, 586, 286, 528, 281, 1322, 300, 493, 666, 257, 31828, 979, 19866, 300, 2709, 385, 364, 6030, 11, 406, 445, 364, 51410, 51410, 560, 13, 51460, 51460, 407, 577, 360, 291, 360, 300, 30, 51510, 51510, 1042, 11, 291, 584, 11, 586, 321, 643, 281, 979, 1429, 309, 666, 364, 2657, 666, 666, 257, 2136, 13, 51813, 51813], "temperature": 0.0, "avg_logprob": -0.10258341526639635, "compression_ratio": 1.8305785123966942, "no_caption_prob": 1.4970869415265042e-05}, {"id": 261, "seek": 98530, "start": 985.3, "end": 989.8399999999999, "text": " So we can do that by taking our type alias we defined, we can say JSON dot decode dot", "tokens": [50364, 407, 321, 393, 360, 300, 538, 1940, 527, 2010, 419, 4609, 321, 7642, 11, 321, 393, 584, 31828, 5893, 979, 1429, 5893, 50591, 50591, 4471, 732, 293, 976, 309, 527, 6030, 47479, 11, 527, 2136, 47479, 7642, 538, 527, 2010, 50884, 50884, 419, 4609, 4471, 281, 764, 732, 12869, 4471, 281, 570, 321, 434, 8437, 666, 12869, 13, 51153, 51153, 400, 586, 321, 976, 309, 527, 732, 979, 378, 433, 337, 257, 1152, 34874, 31828, 979, 1429, 7754, 32454, 293, 257, 51509, 51509, 31828, 979, 1429, 7754, 512, 6030, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13481224461605673, "compression_ratio": 1.7864077669902914, "no_caption_prob": 1.696413710305933e-05}, {"id": 262, "seek": 98530, "start": 989.8399999999999, "end": 995.6999999999999, "text": " map two and give it our album constructor, our record constructor defined by our type", "tokens": [50364, 407, 321, 393, 360, 300, 538, 1940, 527, 2010, 419, 4609, 321, 7642, 11, 321, 393, 584, 31828, 5893, 979, 1429, 5893, 50591, 50591, 4471, 732, 293, 976, 309, 527, 6030, 47479, 11, 527, 2136, 47479, 7642, 538, 527, 2010, 50884, 50884, 419, 4609, 4471, 281, 764, 732, 12869, 4471, 281, 570, 321, 434, 8437, 666, 12869, 13, 51153, 51153, 400, 586, 321, 976, 309, 527, 732, 979, 378, 433, 337, 257, 1152, 34874, 31828, 979, 1429, 7754, 32454, 293, 257, 51509, 51509, 31828, 979, 1429, 7754, 512, 6030, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13481224461605673, "compression_ratio": 1.7864077669902914, "no_caption_prob": 1.696413710305933e-05}, {"id": 263, "seek": 98530, "start": 995.6999999999999, "end": 1001.0799999999999, "text": " alias map to use two arguments map to because we're passing into arguments.", "tokens": [50364, 407, 321, 393, 360, 300, 538, 1940, 527, 2010, 419, 4609, 321, 7642, 11, 321, 393, 584, 31828, 5893, 979, 1429, 5893, 50591, 50591, 4471, 732, 293, 976, 309, 527, 6030, 47479, 11, 527, 2136, 47479, 7642, 538, 527, 2010, 50884, 50884, 419, 4609, 4471, 281, 764, 732, 12869, 4471, 281, 570, 321, 434, 8437, 666, 12869, 13, 51153, 51153, 400, 586, 321, 976, 309, 527, 732, 979, 378, 433, 337, 257, 1152, 34874, 31828, 979, 1429, 7754, 32454, 293, 257, 51509, 51509, 31828, 979, 1429, 7754, 512, 6030, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13481224461605673, "compression_ratio": 1.7864077669902914, "no_caption_prob": 1.696413710305933e-05}, {"id": 264, "seek": 98530, "start": 1001.0799999999999, "end": 1008.1999999999999, "text": " And now we give it our two decoders for a hard coded JSON decode succeed 1975 and a", "tokens": [50364, 407, 321, 393, 360, 300, 538, 1940, 527, 2010, 419, 4609, 321, 7642, 11, 321, 393, 584, 31828, 5893, 979, 1429, 5893, 50591, 50591, 4471, 732, 293, 976, 309, 527, 6030, 47479, 11, 527, 2136, 47479, 7642, 538, 527, 2010, 50884, 50884, 419, 4609, 4471, 281, 764, 732, 12869, 4471, 281, 570, 321, 434, 8437, 666, 12869, 13, 51153, 51153, 400, 586, 321, 976, 309, 527, 732, 979, 378, 433, 337, 257, 1152, 34874, 31828, 979, 1429, 7754, 32454, 293, 257, 51509, 51509, 31828, 979, 1429, 7754, 512, 6030, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13481224461605673, "compression_ratio": 1.7864077669902914, "no_caption_prob": 1.696413710305933e-05}, {"id": 265, "seek": 98530, "start": 1008.1999999999999, "end": 1011.42, "text": " JSON decode succeed some album name.", "tokens": [50364, 407, 321, 393, 360, 300, 538, 1940, 527, 2010, 419, 4609, 321, 7642, 11, 321, 393, 584, 31828, 5893, 979, 1429, 5893, 50591, 50591, 4471, 732, 293, 976, 309, 527, 6030, 47479, 11, 527, 2136, 47479, 7642, 538, 527, 2010, 50884, 50884, 419, 4609, 4471, 281, 764, 732, 12869, 4471, 281, 570, 321, 434, 8437, 666, 12869, 13, 51153, 51153, 400, 586, 321, 976, 309, 527, 732, 979, 378, 433, 337, 257, 1152, 34874, 31828, 979, 1429, 7754, 32454, 293, 257, 51509, 51509, 31828, 979, 1429, 7754, 512, 6030, 1315, 13, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.13481224461605673, "compression_ratio": 1.7864077669902914, "no_caption_prob": 1.696413710305933e-05}, {"id": 266, "seek": 101142, "start": 1011.42, "end": 1020.4399999999999, "text": " So that's a lot of code for a podcast, but the point is that and actually, I kind of", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 267, "seek": 101142, "start": 1020.4399999999999, "end": 1026.28, "text": " did something like this in my Elm Europe talk, incremental type driven development, illustrating", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 268, "seek": 101142, "start": 1026.28, "end": 1031.46, "text": " this technique of succeeding values and having hard coded things and consuming them as quickly", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 269, "seek": 101142, "start": 1031.46, "end": 1032.46, "text": " as possible.", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 270, "seek": 101142, "start": 1032.46, "end": 1037.96, "text": " So you can sort of drive the design of your API by prioritizing things that help you define", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 271, "seek": 101142, "start": 1037.96, "end": 1040.28, "text": " the API rather than the implementation.", "tokens": [50364, 407, 300, 311, 257, 688, 295, 3089, 337, 257, 7367, 11, 457, 264, 935, 307, 300, 293, 767, 11, 286, 733, 295, 50815, 50815, 630, 746, 411, 341, 294, 452, 2699, 76, 3315, 751, 11, 35759, 2010, 9555, 3250, 11, 8490, 8754, 51107, 51107, 341, 6532, 295, 47912, 4190, 293, 1419, 1152, 34874, 721, 293, 19867, 552, 382, 2661, 51366, 51366, 382, 1944, 13, 51416, 51416, 407, 291, 393, 1333, 295, 3332, 264, 1715, 295, 428, 9362, 538, 14846, 3319, 721, 300, 854, 291, 6964, 51691, 51691, 264, 9362, 2831, 813, 264, 11420, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.10221596153414979, "compression_ratio": 1.6192307692307693, "no_caption_prob": 8.664525012136437e-06}, {"id": 272, "seek": 104028, "start": 1040.28, "end": 1045.6399999999999, "text": " So you defer the implementation because you want to discover what the ideal API looks", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 273, "seek": 104028, "start": 1045.6399999999999, "end": 1047.04, "text": " like as fast as possible.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 274, "seek": 104028, "start": 1047.04, "end": 1051.44, "text": " Yeah, I was in the front row for that talk.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 275, "seek": 104028, "start": 1051.44, "end": 1057.3999999999999, "text": " I remember you apologizing because you were taking too much time.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 276, "seek": 104028, "start": 1057.3999999999999, "end": 1061.72, "text": " That was tough to squeeze into that time slot.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 277, "seek": 104028, "start": 1061.72, "end": 1064.3999999999999, "text": " Live coding is hard, especially when you have to keep it short.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 278, "seek": 104028, "start": 1064.3999999999999, "end": 1066.8799999999999, "text": " Yeah, try not to.", "tokens": [50364, 407, 291, 25704, 264, 11420, 570, 291, 528, 281, 4411, 437, 264, 7157, 9362, 1542, 50632, 50632, 411, 382, 2370, 382, 1944, 13, 50702, 50702, 865, 11, 286, 390, 294, 264, 1868, 5386, 337, 300, 751, 13, 50922, 50922, 286, 1604, 291, 9472, 3319, 570, 291, 645, 1940, 886, 709, 565, 13, 51220, 51220, 663, 390, 4930, 281, 13578, 666, 300, 565, 14747, 13, 51436, 51436, 10385, 17720, 307, 1152, 11, 2318, 562, 291, 362, 281, 1066, 309, 2099, 13, 51570, 51570, 865, 11, 853, 406, 281, 13, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.15769984411156696, "compression_ratio": 1.5350877192982457, "no_caption_prob": 1.7603318838155246e-06}, {"id": 279, "seek": 106688, "start": 1066.88, "end": 1074.5600000000002, "text": " So yeah, that really helps out working with JSON data because you can just do it incrementally.", "tokens": [50364, 407, 1338, 11, 300, 534, 3665, 484, 1364, 365, 31828, 1412, 570, 291, 393, 445, 360, 309, 26200, 379, 13, 50748, 50748, 407, 382, 938, 382, 291, 393, 589, 365, 8936, 1412, 293, 445, 4674, 264, 1472, 295, 428, 6030, 11, 337, 5197, 11, 51070, 51070, 550, 291, 393, 445, 360, 300, 13, 51161, 51161, 400, 550, 5699, 291, 486, 853, 281, 652, 341, 8546, 11, 550, 291, 393, 722, 18114, 264, 51412, 51412, 979, 19866, 3166, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.08429574384921934, "compression_ratio": 1.6019900497512438, "no_caption_prob": 1.5935929695842788e-05}, {"id": 280, "seek": 106688, "start": 1074.5600000000002, "end": 1081.0, "text": " So as long as you can work with raw data and just display the rest of your album, for instance,", "tokens": [50364, 407, 1338, 11, 300, 534, 3665, 484, 1364, 365, 31828, 1412, 570, 291, 393, 445, 360, 309, 26200, 379, 13, 50748, 50748, 407, 382, 938, 382, 291, 393, 589, 365, 8936, 1412, 293, 445, 4674, 264, 1472, 295, 428, 6030, 11, 337, 5197, 11, 51070, 51070, 550, 291, 393, 445, 360, 300, 13, 51161, 51161, 400, 550, 5699, 291, 486, 853, 281, 652, 341, 8546, 11, 550, 291, 393, 722, 18114, 264, 51412, 51412, 979, 19866, 3166, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.08429574384921934, "compression_ratio": 1.6019900497512438, "no_caption_prob": 1.5935929695842788e-05}, {"id": 281, "seek": 106688, "start": 1081.0, "end": 1082.8200000000002, "text": " then you can just do that.", "tokens": [50364, 407, 1338, 11, 300, 534, 3665, 484, 1364, 365, 31828, 1412, 570, 291, 393, 445, 360, 309, 26200, 379, 13, 50748, 50748, 407, 382, 938, 382, 291, 393, 589, 365, 8936, 1412, 293, 445, 4674, 264, 1472, 295, 428, 6030, 11, 337, 5197, 11, 51070, 51070, 550, 291, 393, 445, 360, 300, 13, 51161, 51161, 400, 550, 5699, 291, 486, 853, 281, 652, 341, 8546, 11, 550, 291, 393, 722, 18114, 264, 51412, 51412, 979, 19866, 3166, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.08429574384921934, "compression_ratio": 1.6019900497512438, "no_caption_prob": 1.5935929695842788e-05}, {"id": 282, "seek": 106688, "start": 1082.8200000000002, "end": 1087.8400000000001, "text": " And then whenever you will try to make this dynamic, then you can start implementing the", "tokens": [50364, 407, 1338, 11, 300, 534, 3665, 484, 1364, 365, 31828, 1412, 570, 291, 393, 445, 360, 309, 26200, 379, 13, 50748, 50748, 407, 382, 938, 382, 291, 393, 589, 365, 8936, 1412, 293, 445, 4674, 264, 1472, 295, 428, 6030, 11, 337, 5197, 11, 51070, 51070, 550, 291, 393, 445, 360, 300, 13, 51161, 51161, 400, 550, 5699, 291, 486, 853, 281, 652, 341, 8546, 11, 550, 291, 393, 722, 18114, 264, 51412, 51412, 979, 19866, 3166, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.08429574384921934, "compression_ratio": 1.6019900497512438, "no_caption_prob": 1.5935929695842788e-05}, {"id": 283, "seek": 106688, "start": 1087.8400000000001, "end": 1090.0, "text": " decoder parts.", "tokens": [50364, 407, 1338, 11, 300, 534, 3665, 484, 1364, 365, 31828, 1412, 570, 291, 393, 445, 360, 309, 26200, 379, 13, 50748, 50748, 407, 382, 938, 382, 291, 393, 589, 365, 8936, 1412, 293, 445, 4674, 264, 1472, 295, 428, 6030, 11, 337, 5197, 11, 51070, 51070, 550, 291, 393, 445, 360, 300, 13, 51161, 51161, 400, 550, 5699, 291, 486, 853, 281, 652, 341, 8546, 11, 550, 291, 393, 722, 18114, 264, 51412, 51412, 979, 19866, 3166, 13, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.08429574384921934, "compression_ratio": 1.6019900497512438, "no_caption_prob": 1.5935929695842788e-05}, {"id": 284, "seek": 109000, "start": 1090.0, "end": 1097.2, "text": " There was one thing that you mentioned a few minutes ago now, is about the ISO 8601.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 285, "seek": 109000, "start": 1097.2, "end": 1098.2, "text": " Is that it?", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 286, "seek": 109000, "start": 1098.2, "end": 1099.2, "text": " Yes, that's the number.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 287, "seek": 109000, "start": 1099.2, "end": 1100.2, "text": " You got it.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 288, "seek": 109000, "start": 1100.2, "end": 1104.0, "text": " I got so impressed when you said it's like 86.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 289, "seek": 109000, "start": 1104.0, "end": 1107.64, "text": " I typed it so many times.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 290, "seek": 109000, "start": 1107.64, "end": 1110.92, "text": " It's ingrained in my brain.", "tokens": [50364, 821, 390, 472, 551, 300, 291, 2835, 257, 1326, 2077, 2057, 586, 11, 307, 466, 264, 25042, 1649, 4550, 16, 13, 50724, 50724, 1119, 300, 309, 30, 50774, 50774, 1079, 11, 300, 311, 264, 1230, 13, 50824, 50824, 509, 658, 309, 13, 50874, 50874, 286, 658, 370, 11679, 562, 291, 848, 309, 311, 411, 26687, 13, 51064, 51064, 286, 33941, 309, 370, 867, 1413, 13, 51246, 51246, 467, 311, 3957, 31774, 294, 452, 3567, 13, 51410, 51410], "temperature": 0.0, "avg_logprob": -0.29793676545348347, "compression_ratio": 1.3952095808383234, "no_caption_prob": 4.331341551733203e-05}, {"id": 291, "seek": 111092, "start": 1110.92, "end": 1121.0, "text": " So when you use that ISO 8601 something, then you decode it to a string and then you parse", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 292, "seek": 111092, "start": 1121.0, "end": 1123.04, "text": " it.", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 293, "seek": 111092, "start": 1123.04, "end": 1128.72, "text": " Parsing is kind of also the same idea as decoding, isn't it?", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 294, "seek": 111092, "start": 1128.72, "end": 1130.6000000000001, "text": " Yeah, exactly.", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 295, "seek": 111092, "start": 1130.6000000000001, "end": 1132.8400000000001, "text": " Decoding is kind of a special case of that.", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 296, "seek": 111092, "start": 1132.8400000000001, "end": 1139.24, "text": " Well it's basically decoding and parsing is the same thing, but you do not work with the", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 297, "seek": 111092, "start": 1139.24, "end": 1140.24, "text": " same raw data.", "tokens": [50364, 407, 562, 291, 764, 300, 25042, 1649, 4550, 16, 746, 11, 550, 291, 979, 1429, 309, 281, 257, 6798, 293, 550, 291, 48377, 50868, 50868, 309, 13, 50970, 50970, 49691, 278, 307, 733, 295, 611, 264, 912, 1558, 382, 979, 8616, 11, 1943, 380, 309, 30, 51254, 51254, 865, 11, 2293, 13, 51348, 51348, 12427, 8616, 307, 733, 295, 257, 2121, 1389, 295, 300, 13, 51460, 51460, 1042, 309, 311, 1936, 979, 8616, 293, 21156, 278, 307, 264, 912, 551, 11, 457, 291, 360, 406, 589, 365, 264, 51780, 51780, 912, 8936, 1412, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1984176441114776, "compression_ratio": 1.6224489795918366, "no_caption_prob": 8.93954074854264e-06}, {"id": 298, "seek": 114024, "start": 1140.24, "end": 1143.48, "text": " You have the same thing with other formats.", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 299, "seek": 114024, "start": 1143.48, "end": 1145.76, "text": " You could have YAML decoders.", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 300, "seek": 114024, "start": 1145.76, "end": 1150.2, "text": " I'm pretty sure there is a library with a YAML decoder actually from Thierry.", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 301, "seek": 114024, "start": 1150.2, "end": 1156.64, "text": " You could have a JSON decoder that you point at a GitHub repository and it will decode", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 302, "seek": 114024, "start": 1156.64, "end": 1161.18, "text": " an Elm repository and give you information about that project.", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 303, "seek": 114024, "start": 1161.18, "end": 1167.44, "text": " And you could say, decode primary programming language as a string.", "tokens": [50364, 509, 362, 264, 912, 551, 365, 661, 25879, 13, 50526, 50526, 509, 727, 362, 398, 2865, 43, 979, 378, 433, 13, 50640, 50640, 286, 478, 1238, 988, 456, 307, 257, 6405, 365, 257, 398, 2865, 43, 979, 19866, 767, 490, 334, 811, 627, 13, 50862, 50862, 509, 727, 362, 257, 31828, 979, 19866, 300, 291, 935, 412, 257, 23331, 25841, 293, 309, 486, 979, 1429, 51184, 51184, 364, 2699, 76, 25841, 293, 976, 291, 1589, 466, 300, 1716, 13, 51411, 51411, 400, 291, 727, 584, 11, 979, 1429, 6194, 9410, 2856, 382, 257, 6798, 13, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.16781007400666825, "compression_ratio": 1.6473214285714286, "no_caption_prob": 3.4807086194632575e-05}, {"id": 304, "seek": 116744, "start": 1167.44, "end": 1174.6200000000001, "text": " And then you could do JSON.decode.end then take that string and you could do JSON.decode.fail", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 305, "seek": 116744, "start": 1174.6200000000001, "end": 1176.92, "text": " if the string is not Elm.", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 306, "seek": 116744, "start": 1176.92, "end": 1180.3200000000002, "text": " So you want to reject any non Elm project, right?", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 307, "seek": 116744, "start": 1180.3200000000002, "end": 1185.18, "text": " So that's the thing about JSON decoding is it's actually nothing magical.", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 308, "seek": 116744, "start": 1185.18, "end": 1191.4, "text": " It's just this one building block of JSON.decode.succeed and JSON.decode.fail.", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 309, "seek": 116744, "start": 1191.4, "end": 1197.2, "text": " It allows you to build a decoder that always succeeds or always fails.", "tokens": [50364, 400, 550, 291, 727, 360, 31828, 13, 1479, 22332, 13, 521, 550, 747, 300, 6798, 293, 291, 727, 360, 31828, 13, 1479, 22332, 13, 69, 864, 50723, 50723, 498, 264, 6798, 307, 406, 2699, 76, 13, 50838, 50838, 407, 291, 528, 281, 8248, 604, 2107, 2699, 76, 1716, 11, 558, 30, 51008, 51008, 407, 300, 311, 264, 551, 466, 31828, 979, 8616, 307, 309, 311, 767, 1825, 12066, 13, 51251, 51251, 467, 311, 445, 341, 472, 2390, 3461, 295, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 293, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51562, 51562, 467, 4045, 291, 281, 1322, 257, 979, 19866, 300, 1009, 49263, 420, 1009, 18199, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.0948947026179387, "compression_ratio": 1.8027522935779816, "no_caption_prob": 1.1659323718049563e-05}, {"id": 310, "seek": 119720, "start": 1197.2, "end": 1200.8, "text": " If it always succeeds, it succeeds with the hard coded value you give it.", "tokens": [50364, 759, 309, 1009, 49263, 11, 309, 49263, 365, 264, 1152, 34874, 2158, 291, 976, 309, 13, 50544, 50544, 759, 309, 1009, 18199, 11, 31828, 13, 1479, 22332, 13, 69, 864, 11, 309, 1009, 18199, 365, 264, 3636, 291, 976, 309, 13, 50861, 50861, 400, 370, 291, 393, 584, 498, 6194, 9410, 2856, 775, 406, 2681, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51268, 51268, 1610, 498, 309, 307, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 11, 512, 2158, 13, 51476, 51476, 865, 11, 264, 25841, 1315, 420, 445, 746, 300, 1619, 2699, 76, 10989, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.16795382989901247, "compression_ratio": 1.7696078431372548, "no_caption_prob": 2.627420144563075e-05}, {"id": 311, "seek": 119720, "start": 1200.8, "end": 1207.14, "text": " If it always fails, JSON.decode.fail, it always fails with the message you give it.", "tokens": [50364, 759, 309, 1009, 49263, 11, 309, 49263, 365, 264, 1152, 34874, 2158, 291, 976, 309, 13, 50544, 50544, 759, 309, 1009, 18199, 11, 31828, 13, 1479, 22332, 13, 69, 864, 11, 309, 1009, 18199, 365, 264, 3636, 291, 976, 309, 13, 50861, 50861, 400, 370, 291, 393, 584, 498, 6194, 9410, 2856, 775, 406, 2681, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51268, 51268, 1610, 498, 309, 307, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 11, 512, 2158, 13, 51476, 51476, 865, 11, 264, 25841, 1315, 420, 445, 746, 300, 1619, 2699, 76, 10989, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.16795382989901247, "compression_ratio": 1.7696078431372548, "no_caption_prob": 2.627420144563075e-05}, {"id": 312, "seek": 119720, "start": 1207.14, "end": 1215.28, "text": " And so you can say if primary programming language does not equal Elm, JSON.decode.fail.", "tokens": [50364, 759, 309, 1009, 49263, 11, 309, 49263, 365, 264, 1152, 34874, 2158, 291, 976, 309, 13, 50544, 50544, 759, 309, 1009, 18199, 11, 31828, 13, 1479, 22332, 13, 69, 864, 11, 309, 1009, 18199, 365, 264, 3636, 291, 976, 309, 13, 50861, 50861, 400, 370, 291, 393, 584, 498, 6194, 9410, 2856, 775, 406, 2681, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51268, 51268, 1610, 498, 309, 307, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 11, 512, 2158, 13, 51476, 51476, 865, 11, 264, 25841, 1315, 420, 445, 746, 300, 1619, 2699, 76, 10989, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.16795382989901247, "compression_ratio": 1.7696078431372548, "no_caption_prob": 2.627420144563075e-05}, {"id": 313, "seek": 119720, "start": 1215.28, "end": 1219.44, "text": " Or if it is Elm, JSON.decode.succeed, some value.", "tokens": [50364, 759, 309, 1009, 49263, 11, 309, 49263, 365, 264, 1152, 34874, 2158, 291, 976, 309, 13, 50544, 50544, 759, 309, 1009, 18199, 11, 31828, 13, 1479, 22332, 13, 69, 864, 11, 309, 1009, 18199, 365, 264, 3636, 291, 976, 309, 13, 50861, 50861, 400, 370, 291, 393, 584, 498, 6194, 9410, 2856, 775, 406, 2681, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51268, 51268, 1610, 498, 309, 307, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 11, 512, 2158, 13, 51476, 51476, 865, 11, 264, 25841, 1315, 420, 445, 746, 300, 1619, 2699, 76, 10989, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.16795382989901247, "compression_ratio": 1.7696078431372548, "no_caption_prob": 2.627420144563075e-05}, {"id": 314, "seek": 119720, "start": 1219.44, "end": 1225.3600000000001, "text": " Yeah, the repository name or just something that says Elm rocks.", "tokens": [50364, 759, 309, 1009, 49263, 11, 309, 49263, 365, 264, 1152, 34874, 2158, 291, 976, 309, 13, 50544, 50544, 759, 309, 1009, 18199, 11, 31828, 13, 1479, 22332, 13, 69, 864, 11, 309, 1009, 18199, 365, 264, 3636, 291, 976, 309, 13, 50861, 50861, 400, 370, 291, 393, 584, 498, 6194, 9410, 2856, 775, 406, 2681, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 69, 864, 13, 51268, 51268, 1610, 498, 309, 307, 2699, 76, 11, 31828, 13, 1479, 22332, 13, 82, 1311, 4357, 11, 512, 2158, 13, 51476, 51476, 865, 11, 264, 25841, 1315, 420, 445, 746, 300, 1619, 2699, 76, 10989, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.16795382989901247, "compression_ratio": 1.7696078431372548, "no_caption_prob": 2.627420144563075e-05}, {"id": 315, "seek": 122536, "start": 1225.36, "end": 1227.76, "text": " Yeah, exactly.", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 316, "seek": 122536, "start": 1227.76, "end": 1233.0, "text": " So that gives you the building blocks that you need to build something like an ISO 8601", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 317, "seek": 122536, "start": 1233.0, "end": 1237.24, "text": " decoder because you can just do whatever runtime checks you want.", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 318, "seek": 122536, "start": 1237.24, "end": 1242.12, "text": " That library happens to be built with an Elm parser, but that's just an implementation", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 319, "seek": 122536, "start": 1242.12, "end": 1246.8799999999999, "text": " detail if you built it with a regular expression or whatever, right?", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 320, "seek": 122536, "start": 1246.8799999999999, "end": 1247.8799999999999, "text": " It's just code.", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 321, "seek": 122536, "start": 1247.8799999999999, "end": 1255.28, "text": " Yeah, decoder is just a fancy name for saying a validator.", "tokens": [50364, 865, 11, 2293, 13, 50484, 50484, 407, 300, 2709, 291, 264, 2390, 8474, 300, 291, 643, 281, 1322, 746, 411, 364, 25042, 1649, 4550, 16, 50746, 50746, 979, 19866, 570, 291, 393, 445, 360, 2035, 34474, 13834, 291, 528, 13, 50958, 50958, 663, 6405, 2314, 281, 312, 3094, 365, 364, 2699, 76, 21156, 260, 11, 457, 300, 311, 445, 364, 11420, 51202, 51202, 2607, 498, 291, 3094, 309, 365, 257, 3890, 6114, 420, 2035, 11, 558, 30, 51440, 51440, 467, 311, 445, 3089, 13, 51490, 51490, 865, 11, 979, 19866, 307, 445, 257, 10247, 1315, 337, 1566, 257, 7363, 1639, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11711641039167131, "compression_ratio": 1.596, "no_caption_prob": 5.561949728871696e-05}, {"id": 322, "seek": 125528, "start": 1255.28, "end": 1262.48, "text": " There are other things that we probably want to validate in our code, like forms.", "tokens": [50364, 821, 366, 661, 721, 300, 321, 1391, 528, 281, 29562, 294, 527, 3089, 11, 411, 6422, 13, 50724, 50724, 286, 519, 309, 390, 1580, 1219, 24086, 72, 567, 1027, 257, 2183, 1219, 11, 406, 24086, 72, 11, 2086, 11, 567, 1027, 257, 2183, 51168, 51168, 1219, 48377, 500, 380, 29562, 420, 294, 264, 2115, 300, 321, 764, 586, 11, 979, 1429, 500, 380, 29562, 13, 51423, 51423, 407, 309, 311, 1936, 500, 380, 362, 498, 4487, 300, 584, 498, 341, 2519, 307, 341, 11, 550, 352, 2286, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14588796175443208, "compression_ratio": 1.6780487804878048, "no_caption_prob": 2.212497747677844e-05}, {"id": 323, "seek": 125528, "start": 1262.48, "end": 1271.36, "text": " I think it was someone called Lexi who made a post called, not Lexi, yes, who made a post", "tokens": [50364, 821, 366, 661, 721, 300, 321, 1391, 528, 281, 29562, 294, 527, 3089, 11, 411, 6422, 13, 50724, 50724, 286, 519, 309, 390, 1580, 1219, 24086, 72, 567, 1027, 257, 2183, 1219, 11, 406, 24086, 72, 11, 2086, 11, 567, 1027, 257, 2183, 51168, 51168, 1219, 48377, 500, 380, 29562, 420, 294, 264, 2115, 300, 321, 764, 586, 11, 979, 1429, 500, 380, 29562, 13, 51423, 51423, 407, 309, 311, 1936, 500, 380, 362, 498, 4487, 300, 584, 498, 341, 2519, 307, 341, 11, 550, 352, 2286, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14588796175443208, "compression_ratio": 1.6780487804878048, "no_caption_prob": 2.212497747677844e-05}, {"id": 324, "seek": 125528, "start": 1271.36, "end": 1276.46, "text": " called parse don't validate or in the terms that we use now, decode don't validate.", "tokens": [50364, 821, 366, 661, 721, 300, 321, 1391, 528, 281, 29562, 294, 527, 3089, 11, 411, 6422, 13, 50724, 50724, 286, 519, 309, 390, 1580, 1219, 24086, 72, 567, 1027, 257, 2183, 1219, 11, 406, 24086, 72, 11, 2086, 11, 567, 1027, 257, 2183, 51168, 51168, 1219, 48377, 500, 380, 29562, 420, 294, 264, 2115, 300, 321, 764, 586, 11, 979, 1429, 500, 380, 29562, 13, 51423, 51423, 407, 309, 311, 1936, 500, 380, 362, 498, 4487, 300, 584, 498, 341, 2519, 307, 341, 11, 550, 352, 2286, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14588796175443208, "compression_ratio": 1.6780487804878048, "no_caption_prob": 2.212497747677844e-05}, {"id": 325, "seek": 125528, "start": 1276.46, "end": 1284.36, "text": " So it's basically don't have if conditions that say if this field is this, then go ahead", "tokens": [50364, 821, 366, 661, 721, 300, 321, 1391, 528, 281, 29562, 294, 527, 3089, 11, 411, 6422, 13, 50724, 50724, 286, 519, 309, 390, 1580, 1219, 24086, 72, 567, 1027, 257, 2183, 1219, 11, 406, 24086, 72, 11, 2086, 11, 567, 1027, 257, 2183, 51168, 51168, 1219, 48377, 500, 380, 29562, 420, 294, 264, 2115, 300, 321, 764, 586, 11, 979, 1429, 500, 380, 29562, 13, 51423, 51423, 407, 309, 311, 1936, 500, 380, 362, 498, 4487, 300, 584, 498, 341, 2519, 307, 341, 11, 550, 352, 2286, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14588796175443208, "compression_ratio": 1.6780487804878048, "no_caption_prob": 2.212497747677844e-05}, {"id": 326, "seek": 128436, "start": 1284.36, "end": 1291.1999999999998, "text": " and assume that everything is right, but instead decode form, like get a proper error.", "tokens": [50364, 293, 6552, 300, 1203, 307, 558, 11, 457, 2602, 979, 1429, 1254, 11, 411, 483, 257, 2296, 6713, 13, 50706, 50706, 1743, 294, 15778, 11, 498, 291, 632, 498, 2657, 575, 2519, 746, 11, 498, 2657, 575, 2519, 1315, 11, 51106, 51106, 550, 747, 264, 1315, 293, 1320, 309, 281, 341, 551, 13, 51282, 51282, 1042, 11, 572, 11, 291, 500, 380, 528, 281, 360, 300, 570, 264, 1154, 307, 498, 291, 445, 360, 364, 498, 4188, 51578, 51578, 411, 300, 11, 550, 291, 2378, 380, 12785, 428, 589, 281, 264, 31958, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14524095083020397, "compression_ratio": 1.6681614349775784, "no_caption_prob": 3.269880835432559e-05}, {"id": 327, "seek": 128436, "start": 1291.1999999999998, "end": 1299.1999999999998, "text": " Like in JavaScript, if you had if object has field something, if object has field name,", "tokens": [50364, 293, 6552, 300, 1203, 307, 558, 11, 457, 2602, 979, 1429, 1254, 11, 411, 483, 257, 2296, 6713, 13, 50706, 50706, 1743, 294, 15778, 11, 498, 291, 632, 498, 2657, 575, 2519, 746, 11, 498, 2657, 575, 2519, 1315, 11, 51106, 51106, 550, 747, 264, 1315, 293, 1320, 309, 281, 341, 551, 13, 51282, 51282, 1042, 11, 572, 11, 291, 500, 380, 528, 281, 360, 300, 570, 264, 1154, 307, 498, 291, 445, 360, 364, 498, 4188, 51578, 51578, 411, 300, 11, 550, 291, 2378, 380, 12785, 428, 589, 281, 264, 31958, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14524095083020397, "compression_ratio": 1.6681614349775784, "no_caption_prob": 3.269880835432559e-05}, {"id": 328, "seek": 128436, "start": 1299.1999999999998, "end": 1302.7199999999998, "text": " then take the name and pass it to this thing.", "tokens": [50364, 293, 6552, 300, 1203, 307, 558, 11, 457, 2602, 979, 1429, 1254, 11, 411, 483, 257, 2296, 6713, 13, 50706, 50706, 1743, 294, 15778, 11, 498, 291, 632, 498, 2657, 575, 2519, 746, 11, 498, 2657, 575, 2519, 1315, 11, 51106, 51106, 550, 747, 264, 1315, 293, 1320, 309, 281, 341, 551, 13, 51282, 51282, 1042, 11, 572, 11, 291, 500, 380, 528, 281, 360, 300, 570, 264, 1154, 307, 498, 291, 445, 360, 364, 498, 4188, 51578, 51578, 411, 300, 11, 550, 291, 2378, 380, 12785, 428, 589, 281, 264, 31958, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14524095083020397, "compression_ratio": 1.6681614349775784, "no_caption_prob": 3.269880835432559e-05}, {"id": 329, "seek": 128436, "start": 1302.7199999999998, "end": 1308.6399999999999, "text": " Well, no, you don't want to do that because the problem is if you just do an if condition", "tokens": [50364, 293, 6552, 300, 1203, 307, 558, 11, 457, 2602, 979, 1429, 1254, 11, 411, 483, 257, 2296, 6713, 13, 50706, 50706, 1743, 294, 15778, 11, 498, 291, 632, 498, 2657, 575, 2519, 746, 11, 498, 2657, 575, 2519, 1315, 11, 51106, 51106, 550, 747, 264, 1315, 293, 1320, 309, 281, 341, 551, 13, 51282, 51282, 1042, 11, 572, 11, 291, 500, 380, 528, 281, 360, 300, 570, 264, 1154, 307, 498, 291, 445, 360, 364, 498, 4188, 51578, 51578, 411, 300, 11, 550, 291, 2378, 380, 12785, 428, 589, 281, 264, 31958, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14524095083020397, "compression_ratio": 1.6681614349775784, "no_caption_prob": 3.269880835432559e-05}, {"id": 330, "seek": 128436, "start": 1308.6399999999999, "end": 1312.8799999999999, "text": " like that, then you haven't proven your work to the compiler.", "tokens": [50364, 293, 6552, 300, 1203, 307, 558, 11, 457, 2602, 979, 1429, 1254, 11, 411, 483, 257, 2296, 6713, 13, 50706, 50706, 1743, 294, 15778, 11, 498, 291, 632, 498, 2657, 575, 2519, 746, 11, 498, 2657, 575, 2519, 1315, 11, 51106, 51106, 550, 747, 264, 1315, 293, 1320, 309, 281, 341, 551, 13, 51282, 51282, 1042, 11, 572, 11, 291, 500, 380, 528, 281, 360, 300, 570, 264, 1154, 307, 498, 291, 445, 360, 364, 498, 4188, 51578, 51578, 411, 300, 11, 550, 291, 2378, 380, 12785, 428, 589, 281, 264, 31958, 13, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14524095083020397, "compression_ratio": 1.6681614349775784, "no_caption_prob": 3.269880835432559e-05}, {"id": 331, "seek": 131288, "start": 1312.88, "end": 1318.8400000000001, "text": " And so the way I interpret this parse don't validate article is the idea is that you want", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 332, "seek": 131288, "start": 1318.8400000000001, "end": 1324.38, "text": " to be as you're proving certain conditions about your data, you want to show your work", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 333, "seek": 131288, "start": 1324.38, "end": 1330.64, "text": " so the compiler can keep track of that and keep refining down more constraints and more", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 334, "seek": 131288, "start": 1330.64, "end": 1333.2, "text": " guarantees about the data in a particular point.", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 335, "seek": 131288, "start": 1333.2, "end": 1334.2, "text": " Yeah.", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 336, "seek": 131288, "start": 1334.2, "end": 1341.3200000000002, "text": " And basically you validate each field and at the end you will have a whole form validator", "tokens": [50364, 400, 370, 264, 636, 286, 7302, 341, 48377, 500, 380, 29562, 7222, 307, 264, 1558, 307, 300, 291, 528, 50662, 50662, 281, 312, 382, 291, 434, 27221, 1629, 4487, 466, 428, 1412, 11, 291, 528, 281, 855, 428, 589, 50939, 50939, 370, 264, 31958, 393, 1066, 2837, 295, 300, 293, 1066, 1895, 1760, 760, 544, 18491, 293, 544, 51252, 51252, 32567, 466, 264, 1412, 294, 257, 1729, 935, 13, 51380, 51380, 865, 13, 51430, 51430, 400, 1936, 291, 29562, 1184, 2519, 293, 412, 264, 917, 291, 486, 362, 257, 1379, 1254, 7363, 1639, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1377526509393122, "compression_ratio": 1.7041666666666666, "no_caption_prob": 2.4439796106889844e-06}, {"id": 337, "seek": 134132, "start": 1341.32, "end": 1343.8, "text": " in the form of a decoder.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 338, "seek": 134132, "start": 1343.8, "end": 1344.8, "text": " Right.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 339, "seek": 134132, "start": 1344.8, "end": 1347.72, "text": " A form validator in the form of a form decoder.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 340, "seek": 134132, "start": 1347.72, "end": 1348.72, "text": " Yeah.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 341, "seek": 134132, "start": 1348.72, "end": 1351.72, "text": " Yeah, it's like a decode style validator.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 342, "seek": 134132, "start": 1351.72, "end": 1358.1599999999999, "text": " And there are a lot of different places that this sort of decoding pattern shows up.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 343, "seek": 134132, "start": 1358.1599999999999, "end": 1364.34, "text": " Like I mean, for example, I built a package called Elm CLI options parser.", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 344, "seek": 134132, "start": 1364.34, "end": 1370.62, "text": " And what that library does is you can you can wire it into an Elm worker like a headless", "tokens": [50364, 294, 264, 1254, 295, 257, 979, 19866, 13, 50488, 50488, 1779, 13, 50538, 50538, 316, 1254, 7363, 1639, 294, 264, 1254, 295, 257, 1254, 979, 19866, 13, 50684, 50684, 865, 13, 50734, 50734, 865, 11, 309, 311, 411, 257, 979, 1429, 3758, 7363, 1639, 13, 50884, 50884, 400, 456, 366, 257, 688, 295, 819, 3190, 300, 341, 1333, 295, 979, 8616, 5102, 3110, 493, 13, 51206, 51206, 1743, 286, 914, 11, 337, 1365, 11, 286, 3094, 257, 7372, 1219, 2699, 76, 12855, 40, 3956, 21156, 260, 13, 51515, 51515, 400, 437, 300, 6405, 775, 307, 291, 393, 291, 393, 6234, 309, 666, 364, 2699, 76, 11346, 411, 257, 1378, 1832, 51829, 51829], "temperature": 0.0, "avg_logprob": -0.16330225425854064, "compression_ratio": 1.6535087719298245, "no_caption_prob": 5.955079814157216e-06}, {"id": 345, "seek": 137062, "start": 1370.62, "end": 1379.3999999999999, "text": " Elm application wired in with node JS and then build a command line tool that parses", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 346, "seek": 137062, "start": 1379.3999999999999, "end": 1380.6799999999998, "text": " command line flags.", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 347, "seek": 137062, "start": 1380.6799999999998, "end": 1387.08, "text": " So if you say, you know, dash dash help or dash dash output to tell it where to output", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 348, "seek": 137062, "start": 1387.08, "end": 1388.1599999999999, "text": " your code or whatever.", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 349, "seek": 137062, "start": 1388.1599999999999, "end": 1392.9599999999998, "text": " So like I use that in the Elm GraphQL command line tool and other things.", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 350, "seek": 137062, "start": 1392.9599999999998, "end": 1397.12, "text": " Yeah, I wish I could have used it in Elm review, but I can't.", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 351, "seek": 137062, "start": 1397.12, "end": 1398.9199999999998, "text": " Oh, that's sad.", "tokens": [50364, 2699, 76, 3861, 27415, 294, 365, 9984, 33063, 293, 550, 1322, 257, 5622, 1622, 2290, 300, 21156, 279, 50803, 50803, 5622, 1622, 23265, 13, 50867, 50867, 407, 498, 291, 584, 11, 291, 458, 11, 8240, 8240, 854, 420, 8240, 8240, 5598, 281, 980, 309, 689, 281, 5598, 51187, 51187, 428, 3089, 420, 2035, 13, 51241, 51241, 407, 411, 286, 764, 300, 294, 264, 2699, 76, 21884, 13695, 5622, 1622, 2290, 293, 661, 721, 13, 51481, 51481, 865, 11, 286, 3172, 286, 727, 362, 1143, 309, 294, 2699, 76, 3131, 11, 457, 286, 393, 380, 13, 51689, 51689, 876, 11, 300, 311, 4227, 13, 51779, 51779], "temperature": 0.0, "avg_logprob": -0.17099405449127483, "compression_ratio": 1.605263157894737, "no_caption_prob": 2.468248931108974e-05}, {"id": 352, "seek": 139892, "start": 1398.92, "end": 1401.92, "text": " Because I'm building an Elm application.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 353, "seek": 139892, "start": 1401.92, "end": 1403.48, "text": " I don't have an Elm application.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 354, "seek": 139892, "start": 1403.48, "end": 1404.48, "text": " I see.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 355, "seek": 139892, "start": 1404.48, "end": 1408.6000000000001, "text": " That might be a topic for another conversation because we'll see.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 356, "seek": 139892, "start": 1408.6000000000001, "end": 1410.0800000000002, "text": " Maybe I can convince you to use it.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 357, "seek": 139892, "start": 1410.0800000000002, "end": 1416.04, "text": " But the really nice thing that you get when you use that is that you have a guarantee.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 358, "seek": 139892, "start": 1416.04, "end": 1420.64, "text": " You do this sort of decoder style pipeline where you say, okay, I have a command line", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 359, "seek": 139892, "start": 1420.64, "end": 1426.68, "text": " application and I have a flag called dash dash output.", "tokens": [50364, 1436, 286, 478, 2390, 364, 2699, 76, 3861, 13, 50514, 50514, 286, 500, 380, 362, 364, 2699, 76, 3861, 13, 50592, 50592, 286, 536, 13, 50642, 50642, 663, 1062, 312, 257, 4829, 337, 1071, 3761, 570, 321, 603, 536, 13, 50848, 50848, 2704, 286, 393, 13447, 291, 281, 764, 309, 13, 50922, 50922, 583, 264, 534, 1481, 551, 300, 291, 483, 562, 291, 764, 300, 307, 300, 291, 362, 257, 10815, 13, 51220, 51220, 509, 360, 341, 1333, 295, 979, 19866, 3758, 15517, 689, 291, 584, 11, 1392, 11, 286, 362, 257, 5622, 1622, 51450, 51450, 3861, 293, 286, 362, 257, 7166, 1219, 8240, 8240, 5598, 13, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1264825167956653, "compression_ratio": 1.7083333333333333, "no_caption_prob": 1.4969622498028912e-05}, {"id": 360, "seek": 142668, "start": 1426.68, "end": 1431.1200000000001, "text": " And I expect it to be in this format and you can, you know, do whatever validations you", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 361, "seek": 142668, "start": 1431.1200000000001, "end": 1432.1200000000001, "text": " need to.", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 362, "seek": 142668, "start": 1432.1200000000001, "end": 1437.72, "text": " You can say, I expect it to be, you know, an int and I expect this thing to be an int.", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 363, "seek": 142668, "start": 1437.72, "end": 1442.28, "text": " I expect this string to be either this value or this value.", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 364, "seek": 142668, "start": 1442.28, "end": 1448.0, "text": " As you go and you build that up, you're basically describing the possible ways to invoke your", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 365, "seek": 142668, "start": 1448.0, "end": 1450.16, "text": " command line application, right?", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 366, "seek": 142668, "start": 1450.16, "end": 1456.44, "text": " And because you've described that, you've not only described it to my Elm CLI options", "tokens": [50364, 400, 286, 2066, 309, 281, 312, 294, 341, 7877, 293, 291, 393, 11, 291, 458, 11, 360, 2035, 7363, 763, 291, 50586, 50586, 643, 281, 13, 50636, 50636, 509, 393, 584, 11, 286, 2066, 309, 281, 312, 11, 291, 458, 11, 364, 560, 293, 286, 2066, 341, 551, 281, 312, 364, 560, 13, 50916, 50916, 286, 2066, 341, 6798, 281, 312, 2139, 341, 2158, 420, 341, 2158, 13, 51144, 51144, 1018, 291, 352, 293, 291, 1322, 300, 493, 11, 291, 434, 1936, 16141, 264, 1944, 2098, 281, 41117, 428, 51430, 51430, 5622, 1622, 3861, 11, 558, 30, 51538, 51538, 400, 570, 291, 600, 7619, 300, 11, 291, 600, 406, 787, 7619, 309, 281, 452, 2699, 76, 12855, 40, 3956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.11022904248741584, "compression_ratio": 1.8313253012048192, "no_caption_prob": 1.9222616174374707e-05}, {"id": 367, "seek": 145644, "start": 1456.44, "end": 1463.4, "text": " parser tool, but you've also described it to the Elm compiler, which means the Elm compiler", "tokens": [50364, 21156, 260, 2290, 11, 457, 291, 600, 611, 7619, 309, 281, 264, 2699, 76, 31958, 11, 597, 1355, 264, 2699, 76, 31958, 50712, 50712, 3255, 11, 876, 11, 2361, 322, 439, 613, 12626, 300, 291, 600, 1096, 11, 291, 3869, 341, 2519, 295, 341, 51040, 51040, 2010, 11, 291, 3869, 341, 2519, 295, 341, 2010, 11, 291, 33318, 309, 666, 341, 1412, 3877, 11, 341, 2136, 13, 51332, 51332, 440, 2699, 76, 31958, 3255, 437, 1412, 2010, 291, 434, 516, 281, 917, 493, 365, 13, 51544, 51544, 759, 309, 20263, 11, 309, 3255, 300, 309, 311, 516, 281, 312, 257, 1874, 295, 257, 2212, 2010, 11, 257, 6798, 1874, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.09473443664280715, "compression_ratio": 1.8933333333333333, "no_caption_prob": 2.710854823817499e-05}, {"id": 368, "seek": 145644, "start": 1463.4, "end": 1469.96, "text": " knows, Oh, based on all these chains that you've done, you added this field of this", "tokens": [50364, 21156, 260, 2290, 11, 457, 291, 600, 611, 7619, 309, 281, 264, 2699, 76, 31958, 11, 597, 1355, 264, 2699, 76, 31958, 50712, 50712, 3255, 11, 876, 11, 2361, 322, 439, 613, 12626, 300, 291, 600, 1096, 11, 291, 3869, 341, 2519, 295, 341, 51040, 51040, 2010, 11, 291, 3869, 341, 2519, 295, 341, 2010, 11, 291, 33318, 309, 666, 341, 1412, 3877, 11, 341, 2136, 13, 51332, 51332, 440, 2699, 76, 31958, 3255, 437, 1412, 2010, 291, 434, 516, 281, 917, 493, 365, 13, 51544, 51544, 759, 309, 20263, 11, 309, 3255, 300, 309, 311, 516, 281, 312, 257, 1874, 295, 257, 2212, 2010, 11, 257, 6798, 1874, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.09473443664280715, "compression_ratio": 1.8933333333333333, "no_caption_prob": 2.710854823817499e-05}, {"id": 369, "seek": 145644, "start": 1469.96, "end": 1475.8, "text": " type, you added this field of this type, you mapped it into this data structure, this record.", "tokens": [50364, 21156, 260, 2290, 11, 457, 291, 600, 611, 7619, 309, 281, 264, 2699, 76, 31958, 11, 597, 1355, 264, 2699, 76, 31958, 50712, 50712, 3255, 11, 876, 11, 2361, 322, 439, 613, 12626, 300, 291, 600, 1096, 11, 291, 3869, 341, 2519, 295, 341, 51040, 51040, 2010, 11, 291, 3869, 341, 2519, 295, 341, 2010, 11, 291, 33318, 309, 666, 341, 1412, 3877, 11, 341, 2136, 13, 51332, 51332, 440, 2699, 76, 31958, 3255, 437, 1412, 2010, 291, 434, 516, 281, 917, 493, 365, 13, 51544, 51544, 759, 309, 20263, 11, 309, 3255, 300, 309, 311, 516, 281, 312, 257, 1874, 295, 257, 2212, 2010, 11, 257, 6798, 1874, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.09473443664280715, "compression_ratio": 1.8933333333333333, "no_caption_prob": 2.710854823817499e-05}, {"id": 370, "seek": 145644, "start": 1475.8, "end": 1480.04, "text": " The Elm compiler knows what data type you're going to end up with.", "tokens": [50364, 21156, 260, 2290, 11, 457, 291, 600, 611, 7619, 309, 281, 264, 2699, 76, 31958, 11, 597, 1355, 264, 2699, 76, 31958, 50712, 50712, 3255, 11, 876, 11, 2361, 322, 439, 613, 12626, 300, 291, 600, 1096, 11, 291, 3869, 341, 2519, 295, 341, 51040, 51040, 2010, 11, 291, 3869, 341, 2519, 295, 341, 2010, 11, 291, 33318, 309, 666, 341, 1412, 3877, 11, 341, 2136, 13, 51332, 51332, 440, 2699, 76, 31958, 3255, 437, 1412, 2010, 291, 434, 516, 281, 917, 493, 365, 13, 51544, 51544, 759, 309, 20263, 11, 309, 3255, 300, 309, 311, 516, 281, 312, 257, 1874, 295, 257, 2212, 2010, 11, 257, 6798, 1874, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.09473443664280715, "compression_ratio": 1.8933333333333333, "no_caption_prob": 2.710854823817499e-05}, {"id": 371, "seek": 145644, "start": 1480.04, "end": 1485.1200000000001, "text": " If it succeeded, it knows that it's going to be a result of a given type, a string result", "tokens": [50364, 21156, 260, 2290, 11, 457, 291, 600, 611, 7619, 309, 281, 264, 2699, 76, 31958, 11, 597, 1355, 264, 2699, 76, 31958, 50712, 50712, 3255, 11, 876, 11, 2361, 322, 439, 613, 12626, 300, 291, 600, 1096, 11, 291, 3869, 341, 2519, 295, 341, 51040, 51040, 2010, 11, 291, 3869, 341, 2519, 295, 341, 2010, 11, 291, 33318, 309, 666, 341, 1412, 3877, 11, 341, 2136, 13, 51332, 51332, 440, 2699, 76, 31958, 3255, 437, 1412, 2010, 291, 434, 516, 281, 917, 493, 365, 13, 51544, 51544, 759, 309, 20263, 11, 309, 3255, 300, 309, 311, 516, 281, 312, 257, 1874, 295, 257, 2212, 2010, 11, 257, 6798, 1874, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.09473443664280715, "compression_ratio": 1.8933333333333333, "no_caption_prob": 2.710854823817499e-05}, {"id": 372, "seek": 148512, "start": 1485.12, "end": 1487.56, "text": " or whatever if it fails.", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 373, "seek": 148512, "start": 1487.56, "end": 1493.52, "text": " And my Elm CLI options parser tool can just guarantee you that you're either a going to", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 374, "seek": 148512, "start": 1493.52, "end": 1500.4799999999998, "text": " get the data you expected and you can just run the program for them or B the user gave", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 375, "seek": 148512, "start": 1500.4799999999998, "end": 1505.82, "text": " an invalid set of options based on your definition and the user is going to see an error message", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 376, "seek": 148512, "start": 1505.82, "end": 1508.2399999999998, "text": " telling them what went wrong, which is pretty cool.", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 377, "seek": 148512, "start": 1508.2399999999998, "end": 1509.2399999999998, "text": " Yeah.", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 378, "seek": 148512, "start": 1509.2399999999998, "end": 1513.3999999999999, "text": " What about when you don't want the code to fail?", "tokens": [50364, 420, 2035, 498, 309, 18199, 13, 50486, 50486, 400, 452, 2699, 76, 12855, 40, 3956, 21156, 260, 2290, 393, 445, 10815, 291, 300, 291, 434, 2139, 257, 516, 281, 50784, 50784, 483, 264, 1412, 291, 5176, 293, 291, 393, 445, 1190, 264, 1461, 337, 552, 420, 363, 264, 4195, 2729, 51132, 51132, 364, 34702, 992, 295, 3956, 2361, 322, 428, 7123, 293, 264, 4195, 307, 516, 281, 536, 364, 6713, 3636, 51399, 51399, 3585, 552, 437, 1437, 2085, 11, 597, 307, 1238, 1627, 13, 51520, 51520, 865, 13, 51570, 51570, 708, 466, 562, 291, 500, 380, 528, 264, 3089, 281, 3061, 30, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13508948739969506, "compression_ratio": 1.6382113821138211, "no_caption_prob": 1.4510122127830982e-05}, {"id": 379, "seek": 151340, "start": 1513.4, "end": 1520.4, "text": " Like it is fine if I don't have this flag or if this value is not well formed, but what", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 380, "seek": 151340, "start": 1520.4, "end": 1521.4, "text": " do you do then?", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 381, "seek": 151340, "start": 1521.4, "end": 1528.96, "text": " Well, you can define certain fields as optional and the baseline in Elm CLI options parser", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 382, "seek": 151340, "start": 1528.96, "end": 1530.64, "text": " is just a string.", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 383, "seek": 151340, "start": 1530.64, "end": 1535.66, "text": " I mean, ultimately everything in a terminal is just a string.", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 384, "seek": 151340, "start": 1535.66, "end": 1541.0, "text": " And so it's up to you to make additional guarantees or to use specific helpers that say, I expect", "tokens": [50364, 1743, 309, 307, 2489, 498, 286, 500, 380, 362, 341, 7166, 420, 498, 341, 2158, 307, 406, 731, 8693, 11, 457, 437, 50714, 50714, 360, 291, 360, 550, 30, 50764, 50764, 1042, 11, 291, 393, 6964, 1629, 7909, 382, 17312, 293, 264, 20518, 294, 2699, 76, 12855, 40, 3956, 21156, 260, 51142, 51142, 307, 445, 257, 6798, 13, 51226, 51226, 286, 914, 11, 6284, 1203, 294, 257, 14709, 307, 445, 257, 6798, 13, 51477, 51477, 400, 370, 309, 311, 493, 281, 291, 281, 652, 4497, 32567, 420, 281, 764, 2685, 854, 433, 300, 584, 11, 286, 2066, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.10240024151188312, "compression_ratio": 1.576271186440678, "no_caption_prob": 3.5354903957340866e-05}, {"id": 385, "seek": 154100, "start": 1541.0, "end": 1545.64, "text": " this to be this type or I expect this to be one of these discrete values.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 386, "seek": 154100, "start": 1545.64, "end": 1550.32, "text": " And it can actually present documentation and it can give you better documentation if", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 387, "seek": 154100, "start": 1550.32, "end": 1552.32, "text": " you use these specific helpers.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 388, "seek": 154100, "start": 1552.32, "end": 1558.14, "text": " But you can just say, give me the raw string input and I don't care what it is, just give", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 389, "seek": 154100, "start": 1558.14, "end": 1559.14, "text": " me the raw thing.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 390, "seek": 154100, "start": 1559.14, "end": 1560.14, "text": " Yeah.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 391, "seek": 154100, "start": 1560.14, "end": 1561.6, "text": " It's the same thing with JSON decoders.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 392, "seek": 154100, "start": 1561.6, "end": 1563.94, "text": " So it's not necessarily black and white.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 393, "seek": 154100, "start": 1563.94, "end": 1568.32, "text": " You don't have to have the whole thing crash or fail.", "tokens": [50364, 341, 281, 312, 341, 2010, 420, 286, 2066, 341, 281, 312, 472, 295, 613, 27706, 4190, 13, 50596, 50596, 400, 309, 393, 767, 1974, 14333, 293, 309, 393, 976, 291, 1101, 14333, 498, 50830, 50830, 291, 764, 613, 2685, 854, 433, 13, 50930, 50930, 583, 291, 393, 445, 584, 11, 976, 385, 264, 8936, 6798, 4846, 293, 286, 500, 380, 1127, 437, 309, 307, 11, 445, 976, 51221, 51221, 385, 264, 8936, 551, 13, 51271, 51271, 865, 13, 51321, 51321, 467, 311, 264, 912, 551, 365, 31828, 979, 378, 433, 13, 51394, 51394, 407, 309, 311, 406, 4725, 2211, 293, 2418, 13, 51511, 51511, 509, 500, 380, 362, 281, 362, 264, 1379, 551, 8252, 420, 3061, 13, 51730, 51730], "temperature": 0.0, "avg_logprob": -0.10368241554449413, "compression_ratio": 1.7054263565891472, "no_caption_prob": 1.805797546694521e-05}, {"id": 394, "seek": 156832, "start": 1568.32, "end": 1574.3999999999999, "text": " If one thing is missing, you can say, Hey, this is optional or this is okay if it doesn't", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 395, "seek": 156832, "start": 1574.3999999999999, "end": 1577.6399999999999, "text": " work, but then just use this default value for instance.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 396, "seek": 156832, "start": 1577.6399999999999, "end": 1578.6399999999999, "text": " Right.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 397, "seek": 156832, "start": 1578.6399999999999, "end": 1579.6399999999999, "text": " Yeah.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 398, "seek": 156832, "start": 1579.6399999999999, "end": 1585.48, "text": " So there's this thing that often I still have to look up the documentation to remember this.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 399, "seek": 156832, "start": 1585.48, "end": 1589.6799999999998, "text": " You can either say maybe decode.string.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 400, "seek": 156832, "start": 1589.6799999999998, "end": 1593.3999999999999, "text": " Decode.maybe space decode.string, I think.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 401, "seek": 156832, "start": 1593.3999999999999, "end": 1594.3999999999999, "text": " Yeah.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 402, "seek": 156832, "start": 1594.3999999999999, "end": 1597.52, "text": " You can either say decode.maybe decode.string.", "tokens": [50364, 759, 472, 551, 307, 5361, 11, 291, 393, 584, 11, 1911, 11, 341, 307, 17312, 420, 341, 307, 1392, 498, 309, 1177, 380, 50668, 50668, 589, 11, 457, 550, 445, 764, 341, 7576, 2158, 337, 5197, 13, 50830, 50830, 1779, 13, 50880, 50880, 865, 13, 50930, 50930, 407, 456, 311, 341, 551, 300, 2049, 286, 920, 362, 281, 574, 493, 264, 14333, 281, 1604, 341, 13, 51222, 51222, 509, 393, 2139, 584, 1310, 979, 1429, 13, 37045, 13, 51432, 51432, 12427, 1429, 13, 39380, 1901, 979, 1429, 13, 37045, 11, 286, 519, 13, 51618, 51618, 865, 13, 51668, 51668, 509, 393, 2139, 584, 979, 1429, 13, 39380, 979, 1429, 13, 37045, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.1917231822835988, "compression_ratio": 1.755656108597285, "no_caption_prob": 1.4510383152810391e-05}, {"id": 403, "seek": 159752, "start": 1597.52, "end": 1602.56, "text": " That gives you something that the string may or may not be null, right?", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 404, "seek": 159752, "start": 1602.56, "end": 1608.98, "text": " Or you can say, so you could decode a field that is a maybe string, but that field then", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 405, "seek": 159752, "start": 1608.98, "end": 1610.04, "text": " needs to be there.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 406, "seek": 159752, "start": 1610.04, "end": 1614.74, "text": " So it would need to be, in the JSON, it would need to be name, colon, null.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 407, "seek": 159752, "start": 1614.74, "end": 1617.96, "text": " Or you could say this field is optional.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 408, "seek": 159752, "start": 1617.96, "end": 1620.04, "text": " So if this field isn't there, that's fine.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 409, "seek": 159752, "start": 1620.04, "end": 1621.2, "text": " Just give me nothing.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 410, "seek": 159752, "start": 1621.2, "end": 1627.0, "text": " Then you'd have to say maybe and then the field decoder with the string.", "tokens": [50364, 663, 2709, 291, 746, 300, 264, 6798, 815, 420, 815, 406, 312, 18184, 11, 558, 30, 50616, 50616, 1610, 291, 393, 584, 11, 370, 291, 727, 979, 1429, 257, 2519, 300, 307, 257, 1310, 6798, 11, 457, 300, 2519, 550, 50937, 50937, 2203, 281, 312, 456, 13, 50990, 50990, 407, 309, 576, 643, 281, 312, 11, 294, 264, 31828, 11, 309, 576, 643, 281, 312, 1315, 11, 8255, 11, 18184, 13, 51225, 51225, 1610, 291, 727, 584, 341, 2519, 307, 17312, 13, 51386, 51386, 407, 498, 341, 2519, 1943, 380, 456, 11, 300, 311, 2489, 13, 51490, 51490, 1449, 976, 385, 1825, 13, 51548, 51548, 1396, 291, 1116, 362, 281, 584, 1310, 293, 550, 264, 2519, 979, 19866, 365, 264, 6798, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.12586794959174263, "compression_ratio": 1.8504273504273505, "no_caption_prob": 1.0451464731886517e-05}, {"id": 411, "seek": 162700, "start": 1627.0, "end": 1628.0, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 412, "seek": 162700, "start": 1628.0, "end": 1629.0, "text": " With the decode.string.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 413, "seek": 162700, "start": 1629.0, "end": 1631.84, "text": " So that one kind of trips me up, but it's the kind of thing.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 414, "seek": 162700, "start": 1631.84, "end": 1634.02, "text": " So it can feel overwhelming at first.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 415, "seek": 162700, "start": 1634.02, "end": 1636.78, "text": " There's a lot to take in and it really hurts your brain.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 416, "seek": 162700, "start": 1636.78, "end": 1641.02, "text": " But the thing is you want to start at the smaller level.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 417, "seek": 162700, "start": 1641.02, "end": 1644.88, "text": " If you try to think about it as a whole, then it's too overwhelming.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 418, "seek": 162700, "start": 1644.88, "end": 1649.98, "text": " But if you start by saying, hey, let's say I have a JSON response that comes back.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 419, "seek": 162700, "start": 1649.98, "end": 1651.22, "text": " That's just a string, right?", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 420, "seek": 162700, "start": 1651.22, "end": 1652.22, "text": " That's JSON.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 421, "seek": 162700, "start": 1652.22, "end": 1653.8, "text": " A string is JSON or an int is JSON.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 422, "seek": 162700, "start": 1653.8, "end": 1654.8, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 423, "seek": 162700, "start": 1654.8, "end": 1656.36, "text": " How do I decode that?", "tokens": [50364, 865, 13, 50414, 50414, 2022, 264, 979, 1429, 13, 37045, 13, 50464, 50464, 407, 300, 472, 733, 295, 16051, 385, 493, 11, 457, 309, 311, 264, 733, 295, 551, 13, 50606, 50606, 407, 309, 393, 841, 13373, 412, 700, 13, 50715, 50715, 821, 311, 257, 688, 281, 747, 294, 293, 309, 534, 11051, 428, 3567, 13, 50853, 50853, 583, 264, 551, 307, 291, 528, 281, 722, 412, 264, 4356, 1496, 13, 51065, 51065, 759, 291, 853, 281, 519, 466, 309, 382, 257, 1379, 11, 550, 309, 311, 886, 13373, 13, 51258, 51258, 583, 498, 291, 722, 538, 1566, 11, 4177, 11, 718, 311, 584, 286, 362, 257, 31828, 4134, 300, 1487, 646, 13, 51513, 51513, 663, 311, 445, 257, 6798, 11, 558, 30, 51575, 51575, 663, 311, 31828, 13, 51625, 51625, 316, 6798, 307, 31828, 420, 364, 560, 307, 31828, 13, 51704, 51704, 865, 13, 51754, 51754, 1012, 360, 286, 979, 1429, 300, 30, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.1144559353212767, "compression_ratio": 1.7123287671232876, "no_caption_prob": 3.0718005291419104e-05}, {"id": 424, "seek": 165636, "start": 1656.36, "end": 1662.56, "text": " Well you say JSON.decode.string and that will take whatever string, hello world in your", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 425, "seek": 165636, "start": 1662.56, "end": 1665.84, "text": " JSON response and it will give you hello world.", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 426, "seek": 165636, "start": 1665.84, "end": 1669.76, "text": " Or if you pass it a float, then it will say error.", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 427, "seek": 165636, "start": 1669.76, "end": 1671.4399999999998, "text": " I expected a string.", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 428, "seek": 165636, "start": 1671.4399999999998, "end": 1672.76, "text": " So start with that.", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 429, "seek": 165636, "start": 1672.76, "end": 1678.02, "text": " You know, you start with that and then you say, okay, well can I decode a string and", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 430, "seek": 165636, "start": 1678.02, "end": 1681.52, "text": " an int in a JSON object with these field names?", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 431, "seek": 165636, "start": 1681.52, "end": 1685.3799999999999, "text": " You know, you start with that and you build it up one step at a time.", "tokens": [50364, 1042, 291, 584, 31828, 13, 1479, 22332, 13, 37045, 293, 300, 486, 747, 2035, 6798, 11, 7751, 1002, 294, 428, 50674, 50674, 31828, 4134, 293, 309, 486, 976, 291, 7751, 1002, 13, 50838, 50838, 1610, 498, 291, 1320, 309, 257, 15706, 11, 550, 309, 486, 584, 6713, 13, 51034, 51034, 286, 5176, 257, 6798, 13, 51118, 51118, 407, 722, 365, 300, 13, 51184, 51184, 509, 458, 11, 291, 722, 365, 300, 293, 550, 291, 584, 11, 1392, 11, 731, 393, 286, 979, 1429, 257, 6798, 293, 51447, 51447, 364, 560, 294, 257, 31828, 2657, 365, 613, 2519, 5288, 30, 51622, 51622, 509, 458, 11, 291, 722, 365, 300, 293, 291, 1322, 309, 493, 472, 1823, 412, 257, 565, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.13820641990599594, "compression_ratio": 1.8454935622317596, "no_caption_prob": 9.080383279069792e-06}, {"id": 432, "seek": 168538, "start": 1685.38, "end": 1690.7800000000002, "text": " And actually Brian Hicks has a book called the JSON Survival Kit.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 433, "seek": 168538, "start": 1690.7800000000002, "end": 1692.0400000000002, "text": " It's a pretty quick read.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 434, "seek": 168538, "start": 1692.0400000000002, "end": 1695.5600000000002, "text": " I think it's a really good resource if you're getting started with JSON decoders to learn", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 435, "seek": 168538, "start": 1695.5600000000002, "end": 1696.5600000000002, "text": " about this.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 436, "seek": 168538, "start": 1696.5600000000002, "end": 1702.38, "text": " And he talks about this process of building it up piece by piece to get more complex ones,", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 437, "seek": 168538, "start": 1702.38, "end": 1704.0800000000002, "text": " which I think is the way to learn it.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 438, "seek": 168538, "start": 1704.0800000000002, "end": 1705.0800000000002, "text": " Okay.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 439, "seek": 168538, "start": 1705.0800000000002, "end": 1706.0800000000002, "text": " Yeah.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 440, "seek": 168538, "start": 1706.0800000000002, "end": 1707.0800000000002, "text": " I haven't gone through that one.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 441, "seek": 168538, "start": 1707.0800000000002, "end": 1708.0800000000002, "text": " I probably should.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 442, "seek": 168538, "start": 1708.0800000000002, "end": 1709.0800000000002, "text": " Joel Keneville.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 443, "seek": 168538, "start": 1709.0800000000002, "end": 1710.0800000000002, "text": " Yes.", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 444, "seek": 168538, "start": 1710.0800000000002, "end": 1714.72, "text": " Also has a few blog posts on the subject that we will link to because I know that he sends", "tokens": [50364, 400, 767, 10765, 389, 7663, 575, 257, 1446, 1219, 264, 31828, 40716, 3576, 23037, 13, 50634, 50634, 467, 311, 257, 1238, 1702, 1401, 13, 50697, 50697, 286, 519, 309, 311, 257, 534, 665, 7684, 498, 291, 434, 1242, 1409, 365, 31828, 979, 378, 433, 281, 1466, 50873, 50873, 466, 341, 13, 50923, 50923, 400, 415, 6686, 466, 341, 1399, 295, 2390, 309, 493, 2522, 538, 2522, 281, 483, 544, 3997, 2306, 11, 51214, 51214, 597, 286, 519, 307, 264, 636, 281, 1466, 309, 13, 51299, 51299, 1033, 13, 51349, 51349, 865, 13, 51399, 51399, 286, 2378, 380, 2780, 807, 300, 472, 13, 51449, 51449, 286, 1391, 820, 13, 51499, 51499, 21522, 591, 1450, 8386, 13, 51549, 51549, 1079, 13, 51599, 51599, 2743, 575, 257, 1326, 6968, 12300, 322, 264, 3983, 300, 321, 486, 2113, 281, 570, 286, 458, 300, 415, 14790, 51831, 51831], "temperature": 0.0, "avg_logprob": -0.10735367742078057, "compression_ratio": 1.6274509803921569, "no_caption_prob": 1.9522474758559838e-05}, {"id": 445, "seek": 171472, "start": 1714.72, "end": 1720.3600000000001, "text": " them, he links to them a lot on Slack and they seem to help people a lot.", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 446, "seek": 171472, "start": 1720.3600000000001, "end": 1721.3600000000001, "text": " Definitely.", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 447, "seek": 171472, "start": 1721.3600000000001, "end": 1722.3600000000001, "text": " Yeah.", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 448, "seek": 171472, "start": 1722.3600000000001, "end": 1729.0, "text": " It's hard to get started, but just, I think that trying to write JSON decoders top down", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 449, "seek": 171472, "start": 1729.0, "end": 1730.68, "text": " is kind of overwhelming.", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 450, "seek": 171472, "start": 1730.68, "end": 1738.92, "text": " So start bottom up, start with the smallest piece of your JSON decoder and get that working.", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 451, "seek": 171472, "start": 1738.92, "end": 1743.0, "text": " And once you have that working, you can even write a unit test for that if you want, or", "tokens": [50364, 552, 11, 415, 6123, 281, 552, 257, 688, 322, 37211, 293, 436, 1643, 281, 854, 561, 257, 688, 13, 50646, 50646, 12151, 13, 50696, 50696, 865, 13, 50746, 50746, 467, 311, 1152, 281, 483, 1409, 11, 457, 445, 11, 286, 519, 300, 1382, 281, 2464, 31828, 979, 378, 433, 1192, 760, 51078, 51078, 307, 733, 295, 13373, 13, 51162, 51162, 407, 722, 2767, 493, 11, 722, 365, 264, 16998, 2522, 295, 428, 31828, 979, 19866, 293, 483, 300, 1364, 13, 51574, 51574, 400, 1564, 291, 362, 300, 1364, 11, 291, 393, 754, 2464, 257, 4985, 1500, 337, 300, 498, 291, 528, 11, 420, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.09786435599639037, "compression_ratio": 1.6244725738396624, "no_caption_prob": 1.0952952834486496e-05}, {"id": 452, "seek": 174300, "start": 1743.0, "end": 1748.68, "text": " you can just try working with some smaller piece of data and then build up from there.", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 453, "seek": 174300, "start": 1748.68, "end": 1755.16, "text": " There's one thing that I'm not very fond of with JSON decoders is that my Elm application", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 454, "seek": 174300, "start": 1755.16, "end": 1756.64, "text": " won't crash.", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 455, "seek": 174300, "start": 1756.64, "end": 1758.94, "text": " It will work exactly as I planned it to.", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 456, "seek": 174300, "start": 1758.94, "end": 1764.96, "text": " And that's great because every HTTPS response that I get will be validated.", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 457, "seek": 174300, "start": 1764.96, "end": 1770.24, "text": " The thing is, if it's not valid, I will not necessarily know it from a developer's point", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 458, "seek": 174300, "start": 1770.24, "end": 1771.24, "text": " of view.", "tokens": [50364, 291, 393, 445, 853, 1364, 365, 512, 4356, 2522, 295, 1412, 293, 550, 1322, 493, 490, 456, 13, 50648, 50648, 821, 311, 472, 551, 300, 286, 478, 406, 588, 9557, 295, 365, 31828, 979, 378, 433, 307, 300, 452, 2699, 76, 3861, 50972, 50972, 1582, 380, 8252, 13, 51046, 51046, 467, 486, 589, 2293, 382, 286, 8589, 309, 281, 13, 51161, 51161, 400, 300, 311, 869, 570, 633, 11751, 51, 6273, 4134, 300, 286, 483, 486, 312, 40693, 13, 51462, 51462, 440, 551, 307, 11, 498, 309, 311, 406, 7363, 11, 286, 486, 406, 4725, 458, 309, 490, 257, 10754, 311, 935, 51726, 51726, 295, 1910, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.13810925011162287, "compression_ratio": 1.5361216730038023, "no_caption_prob": 1.184267512144288e-05}, {"id": 459, "seek": 177124, "start": 1771.24, "end": 1776.4, "text": " I will have to handle it at runtime and I have no guarantees that the decoding will", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 460, "seek": 177124, "start": 1776.4, "end": 1782.52, "text": " work or yeah, that's my biggest issue that I don't know if the decoding will work when", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 461, "seek": 177124, "start": 1782.52, "end": 1783.52, "text": " I compile.", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 462, "seek": 177124, "start": 1783.52, "end": 1784.52, "text": " Yes.", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 463, "seek": 177124, "start": 1784.52, "end": 1785.52, "text": " Yeah.", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 464, "seek": 177124, "start": 1785.52, "end": 1787.52, "text": " What do you do for that?", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 465, "seek": 177124, "start": 1787.52, "end": 1794.08, "text": " Well, now that you put it that way, I'm kind of realizing that the main selling point of", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 466, "seek": 177124, "start": 1794.08, "end": 1799.24, "text": " two projects I've built is exactly that.", "tokens": [50364, 286, 486, 362, 281, 4813, 309, 412, 34474, 293, 286, 362, 572, 32567, 300, 264, 979, 8616, 486, 50622, 50622, 589, 420, 1338, 11, 300, 311, 452, 3880, 2734, 300, 286, 500, 380, 458, 498, 264, 979, 8616, 486, 589, 562, 50928, 50928, 286, 31413, 13, 50978, 50978, 1079, 13, 51028, 51028, 865, 13, 51078, 51078, 708, 360, 291, 360, 337, 300, 30, 51178, 51178, 1042, 11, 586, 300, 291, 829, 309, 300, 636, 11, 286, 478, 733, 295, 16734, 300, 264, 2135, 6511, 935, 295, 51506, 51506, 732, 4455, 286, 600, 3094, 307, 2293, 300, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16153873783527034, "compression_ratio": 1.6064814814814814, "no_caption_prob": 7.646368430869188e-06}, {"id": 467, "seek": 179924, "start": 1799.24, "end": 1806.64, "text": " The first one is Elm GraphQL and Elm GraphQL gives you a way to, if you're not familiar", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 468, "seek": 179924, "start": 1806.64, "end": 1811.44, "text": " with GraphQL, it's basically a schema for your API.", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 469, "seek": 179924, "start": 1811.44, "end": 1815.76, "text": " So it's a schema that describes all of the possible API calls you can get.", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 470, "seek": 179924, "start": 1815.76, "end": 1820.52, "text": " And the graph part is that you can sort of traverse these relationships between different", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 471, "seek": 179924, "start": 1820.52, "end": 1821.52, "text": " parts of the API.", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 472, "seek": 179924, "start": 1821.52, "end": 1827.6200000000001, "text": " You can go to a user and you can see their friends or their likes and traverse to these", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 473, "seek": 179924, "start": 1827.6200000000001, "end": 1828.6200000000001, "text": " different objects.", "tokens": [50364, 440, 700, 472, 307, 2699, 76, 21884, 13695, 293, 2699, 76, 21884, 13695, 2709, 291, 257, 636, 281, 11, 498, 291, 434, 406, 4963, 50734, 50734, 365, 21884, 13695, 11, 309, 311, 1936, 257, 34078, 337, 428, 9362, 13, 50974, 50974, 407, 309, 311, 257, 34078, 300, 15626, 439, 295, 264, 1944, 9362, 5498, 291, 393, 483, 13, 51190, 51190, 400, 264, 4295, 644, 307, 300, 291, 393, 1333, 295, 45674, 613, 6159, 1296, 819, 51428, 51428, 3166, 295, 264, 9362, 13, 51478, 51478, 509, 393, 352, 281, 257, 4195, 293, 291, 393, 536, 641, 1855, 420, 641, 5902, 293, 45674, 281, 613, 51783, 51783, 819, 6565, 13, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.06739595106669835, "compression_ratio": 1.7298387096774193, "no_caption_prob": 4.0928484850155655e-06}, {"id": 474, "seek": 182862, "start": 1828.62, "end": 1833.84, "text": " But the part that we're most interested in as Elm developers, that part's great too,", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 475, "seek": 182862, "start": 1833.84, "end": 1835.3999999999999, "text": " but it gives you a schema.", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 476, "seek": 182862, "start": 1835.3999999999999, "end": 1839.9599999999998, "text": " So you have types describing all the different values you can get from the API.", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 477, "seek": 182862, "start": 1839.9599999999998, "end": 1840.9599999999998, "text": " Yes.", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 478, "seek": 182862, "start": 1840.9599999999998, "end": 1848.8799999999999, "text": " And so you can build up a response and it's known before you run your query what data", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 479, "seek": 182862, "start": 1848.8799999999999, "end": 1849.8799999999999, "text": " you're going to get back.", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 480, "seek": 182862, "start": 1849.8799999999999, "end": 1856.12, "text": " So Elm GraphQL generates code that allows you to consume your specific GraphQL API in", "tokens": [50364, 583, 264, 644, 300, 321, 434, 881, 3102, 294, 382, 2699, 76, 8849, 11, 300, 644, 311, 869, 886, 11, 50625, 50625, 457, 309, 2709, 291, 257, 34078, 13, 50703, 50703, 407, 291, 362, 3467, 16141, 439, 264, 819, 4190, 291, 393, 483, 490, 264, 9362, 13, 50931, 50931, 1079, 13, 50981, 50981, 400, 370, 291, 393, 1322, 493, 257, 4134, 293, 309, 311, 2570, 949, 291, 1190, 428, 14581, 437, 1412, 51377, 51377, 291, 434, 516, 281, 483, 646, 13, 51427, 51427, 407, 2699, 76, 21884, 13695, 23815, 3089, 300, 4045, 291, 281, 14732, 428, 2685, 21884, 13695, 9362, 294, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.10600964682442801, "compression_ratio": 1.5634920634920635, "no_caption_prob": 6.144071903690929e-06}, {"id": 481, "seek": 185612, "start": 1856.12, "end": 1860.4799999999998, "text": " a way where you know that the types are going to be correct based on the schema of your", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 482, "seek": 185612, "start": 1860.4799999999998, "end": 1862.76, "text": " API that GraphQL gives you.", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 483, "seek": 185612, "start": 1862.76, "end": 1867.6799999999998, "text": " So it's basically taking that knowledge that your GraphQL schema has and bringing it down", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 484, "seek": 185612, "start": 1867.6799999999998, "end": 1870.6799999999998, "text": " so the Elm compiler also has that knowledge.", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 485, "seek": 185612, "start": 1870.6799999999998, "end": 1874.6, "text": " If you want to get a better picture of what that looks like exactly, I gave a talk at", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 486, "seek": 185612, "start": 1874.6, "end": 1877.76, "text": " Elm Conf a couple of years back called Types Without Borders.", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 487, "seek": 185612, "start": 1877.76, "end": 1881.4599999999998, "text": " That's worth checking out if you want to get an overview of that concept.", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 488, "seek": 185612, "start": 1881.4599999999998, "end": 1884.4799999999998, "text": " So that's one way that you can do that.", "tokens": [50364, 257, 636, 689, 291, 458, 300, 264, 3467, 366, 516, 281, 312, 3006, 2361, 322, 264, 34078, 295, 428, 50582, 50582, 9362, 300, 21884, 13695, 2709, 291, 13, 50696, 50696, 407, 309, 311, 1936, 1940, 300, 3601, 300, 428, 21884, 13695, 34078, 575, 293, 5062, 309, 760, 50942, 50942, 370, 264, 2699, 76, 31958, 611, 575, 300, 3601, 13, 51092, 51092, 759, 291, 528, 281, 483, 257, 1101, 3036, 295, 437, 300, 1542, 411, 2293, 11, 286, 2729, 257, 751, 412, 51288, 51288, 2699, 76, 11701, 257, 1916, 295, 924, 646, 1219, 5569, 5190, 9129, 363, 10400, 13, 51446, 51446, 663, 311, 3163, 8568, 484, 498, 291, 528, 281, 483, 364, 12492, 295, 300, 3410, 13, 51631, 51631, 407, 300, 311, 472, 636, 300, 291, 393, 360, 300, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.07870721458492422, "compression_ratio": 1.7066666666666668, "no_caption_prob": 2.1444220692501403e-05}, {"id": 489, "seek": 188448, "start": 1884.48, "end": 1890.24, "text": " The other one, which we did our first episode on Elm Pages and we talked about static HTTP,", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 490, "seek": 188448, "start": 1890.24, "end": 1894.68, "text": " actually that's one of the things that I find most exciting about the Elm Pages project", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 491, "seek": 188448, "start": 1894.68, "end": 1900.6, "text": " is that it gives you this tool static HTTP, which allows you to run your decoder at build", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 492, "seek": 188448, "start": 1900.6, "end": 1906.04, "text": " time and get this data from HTTP APIs.", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 493, "seek": 188448, "start": 1906.04, "end": 1909.78, "text": " And if any of your decoders fail, your users don't see it.", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 494, "seek": 188448, "start": 1909.78, "end": 1911.92, "text": " You see it in your build pipeline.", "tokens": [50364, 440, 661, 472, 11, 597, 321, 630, 527, 700, 3500, 322, 2699, 76, 430, 1660, 293, 321, 2825, 466, 13437, 33283, 11, 50652, 50652, 767, 300, 311, 472, 295, 264, 721, 300, 286, 915, 881, 4670, 466, 264, 2699, 76, 430, 1660, 1716, 50874, 50874, 307, 300, 309, 2709, 291, 341, 2290, 13437, 33283, 11, 597, 4045, 291, 281, 1190, 428, 979, 19866, 412, 1322, 51170, 51170, 565, 293, 483, 341, 1412, 490, 33283, 21445, 13, 51442, 51442, 400, 498, 604, 295, 428, 979, 378, 433, 3061, 11, 428, 5022, 500, 380, 536, 309, 13, 51629, 51629, 509, 536, 309, 294, 428, 1322, 15517, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.0954394384261665, "compression_ratio": 1.675, "no_caption_prob": 4.425457063916838e-06}, {"id": 495, "seek": 191192, "start": 1911.92, "end": 1918.3200000000002, "text": " Your build tool will fail, your CI build will fail, but your users will not see a failure", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 496, "seek": 191192, "start": 1918.3200000000002, "end": 1925.28, "text": " and that's guaranteed, which is pretty exciting to reduce the possible failures that could", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 497, "seek": 191192, "start": 1925.28, "end": 1927.5600000000002, "text": " happen at runtime.", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 498, "seek": 191192, "start": 1927.5600000000002, "end": 1931.96, "text": " But I'm not sure, Jeroen, did you have any other thoughts on that topic of how you can...", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 499, "seek": 191192, "start": 1931.96, "end": 1932.96, "text": " Yeah.", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 500, "seek": 191192, "start": 1932.96, "end": 1935.3200000000002, "text": " So what happens when you don't have a schema?", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 501, "seek": 191192, "start": 1935.3200000000002, "end": 1938.92, "text": " That's where things are getting tricky.", "tokens": [50364, 2260, 1322, 2290, 486, 3061, 11, 428, 37777, 1322, 486, 3061, 11, 457, 428, 5022, 486, 406, 536, 257, 7763, 50684, 50684, 293, 300, 311, 18031, 11, 597, 307, 1238, 4670, 281, 5407, 264, 1944, 20774, 300, 727, 51032, 51032, 1051, 412, 34474, 13, 51146, 51146, 583, 286, 478, 406, 988, 11, 508, 2032, 268, 11, 630, 291, 362, 604, 661, 4598, 322, 300, 4829, 295, 577, 291, 393, 485, 51366, 51366, 865, 13, 51416, 51416, 407, 437, 2314, 562, 291, 500, 380, 362, 257, 34078, 30, 51534, 51534, 663, 311, 689, 721, 366, 1242, 12414, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12918575211326674, "compression_ratio": 1.6008403361344539, "no_caption_prob": 1.3419768038147595e-05}, {"id": 502, "seek": 193892, "start": 1938.92, "end": 1943.76, "text": " Because you don't have a schema to generate something from or to compare against.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 503, "seek": 193892, "start": 1943.76, "end": 1951.3600000000001, "text": " So you basically have to kind of unit test and hope the server will match what you expect,", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 504, "seek": 193892, "start": 1951.3600000000001, "end": 1952.3600000000001, "text": " I guess.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 505, "seek": 193892, "start": 1952.3600000000001, "end": 1953.3600000000001, "text": " Right.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 506, "seek": 193892, "start": 1953.3600000000001, "end": 1956.92, "text": " And that is where the limits of Elm end, I guess.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 507, "seek": 193892, "start": 1956.92, "end": 1957.92, "text": " Yes.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 508, "seek": 193892, "start": 1957.92, "end": 1958.92, "text": " Right.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 509, "seek": 193892, "start": 1958.92, "end": 1962.24, "text": " There's just conceptually, there's nothing Elm can do there.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 510, "seek": 193892, "start": 1962.24, "end": 1964.3600000000001, "text": " Tools like Elm GraphQL can help.", "tokens": [50364, 1436, 291, 500, 380, 362, 257, 34078, 281, 8460, 746, 490, 420, 281, 6794, 1970, 13, 50606, 50606, 407, 291, 1936, 362, 281, 733, 295, 4985, 1500, 293, 1454, 264, 7154, 486, 2995, 437, 291, 2066, 11, 50986, 50986, 286, 2041, 13, 51036, 51036, 1779, 13, 51086, 51086, 400, 300, 307, 689, 264, 10406, 295, 2699, 76, 917, 11, 286, 2041, 13, 51264, 51264, 1079, 13, 51314, 51314, 1779, 13, 51364, 51364, 821, 311, 445, 3410, 671, 11, 456, 311, 1825, 2699, 76, 393, 360, 456, 13, 51530, 51530, 30302, 411, 2699, 76, 21884, 13695, 393, 854, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.14235518025416954, "compression_ratio": 1.5357142857142858, "no_caption_prob": 1.321175841439981e-05}, {"id": 511, "seek": 196436, "start": 1964.36, "end": 1969.0, "text": " There are similar things for Haskell, like Haskell Servant, is that what it's called?", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 512, "seek": 196436, "start": 1969.0, "end": 1975.9599999999998, "text": " That allows you to take the data types you're returning on some Haskell server and it generates", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 513, "seek": 196436, "start": 1975.9599999999998, "end": 1978.1999999999998, "text": " types and decoders for your Elm code.", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 514, "seek": 196436, "start": 1978.1999999999998, "end": 1983.36, "text": " Yeah, I don't remember the name, but there were some decoding generators and type generators", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 515, "seek": 196436, "start": 1983.36, "end": 1984.36, "text": " actually.", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 516, "seek": 196436, "start": 1984.36, "end": 1985.36, "text": " Yes.", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 517, "seek": 196436, "start": 1985.36, "end": 1987.04, "text": " I think it makes a lot of sense to...", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 518, "seek": 196436, "start": 1987.04, "end": 1991.6, "text": " I mean, that's why I named the talk I gave Types Without Borders, because I think it", "tokens": [50364, 821, 366, 2531, 721, 337, 8646, 43723, 11, 411, 8646, 43723, 6213, 394, 11, 307, 300, 437, 309, 311, 1219, 30, 50596, 50596, 663, 4045, 291, 281, 747, 264, 1412, 3467, 291, 434, 12678, 322, 512, 8646, 43723, 7154, 293, 309, 23815, 50944, 50944, 3467, 293, 979, 378, 433, 337, 428, 2699, 76, 3089, 13, 51056, 51056, 865, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 456, 645, 512, 979, 8616, 38662, 293, 2010, 38662, 51314, 51314, 767, 13, 51364, 51364, 1079, 13, 51414, 51414, 286, 519, 309, 1669, 257, 688, 295, 2020, 281, 485, 51498, 51498, 286, 914, 11, 300, 311, 983, 286, 4926, 264, 751, 286, 2729, 5569, 5190, 9129, 363, 10400, 11, 570, 286, 519, 309, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.11092828166100287, "compression_ratio": 1.6728624535315986, "no_caption_prob": 2.753508852038067e-05}, {"id": 519, "seek": 199160, "start": 1991.6, "end": 1996.6, "text": " does make sense to sort of connect across these different boundaries of these different", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 520, "seek": 199160, "start": 1996.6, "end": 2001.48, "text": " languages and runtimes and say like, okay, we're in different runtimes, but that doesn't", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 521, "seek": 199160, "start": 2001.48, "end": 2005.1999999999998, "text": " mean we can't share information about what type of data you should expect.", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 522, "seek": 199160, "start": 2005.1999999999998, "end": 2006.1999999999998, "text": " Yeah.", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 523, "seek": 199160, "start": 2006.1999999999998, "end": 2011.8799999999999, "text": " I might be going on a tangent here, but you're tying yourself up to the response of the backend.", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 524, "seek": 199160, "start": 2011.8799999999999, "end": 2016.84, "text": " So if the backend changes, the decoders will change, but all the versions of your client", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 525, "seek": 199160, "start": 2016.84, "end": 2019.36, "text": " side will not work anymore.", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 526, "seek": 199160, "start": 2019.36, "end": 2020.36, "text": " Right.", "tokens": [50364, 775, 652, 2020, 281, 1333, 295, 1745, 2108, 613, 819, 13180, 295, 613, 819, 50614, 50614, 8650, 293, 49435, 1532, 293, 584, 411, 11, 1392, 11, 321, 434, 294, 819, 49435, 1532, 11, 457, 300, 1177, 380, 50858, 50858, 914, 321, 393, 380, 2073, 1589, 466, 437, 2010, 295, 1412, 291, 820, 2066, 13, 51044, 51044, 865, 13, 51094, 51094, 286, 1062, 312, 516, 322, 257, 27747, 510, 11, 457, 291, 434, 32405, 1803, 493, 281, 264, 4134, 295, 264, 38087, 13, 51378, 51378, 407, 498, 264, 38087, 2962, 11, 264, 979, 378, 433, 486, 1319, 11, 457, 439, 264, 9606, 295, 428, 6423, 51626, 51626, 1252, 486, 406, 589, 3602, 13, 51752, 51752, 1779, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1044537623723348, "compression_ratio": 1.7445255474452555, "no_caption_prob": 6.962159659451572e-06}, {"id": 527, "seek": 202036, "start": 2020.36, "end": 2025.6, "text": " So I could easily do a whole episode about this specific topic even, not even just Elm", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 528, "seek": 202036, "start": 2025.6, "end": 2027.9599999999998, "text": " GraphQL, but the short...", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 529, "seek": 202036, "start": 2027.9599999999998, "end": 2032.0, "text": " I'll give you the short version, which is that there are two pieces here.", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 530, "seek": 202036, "start": 2032.0, "end": 2037.04, "text": " One piece is that there are some practices around building GraphQL APIs where people", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 531, "seek": 202036, "start": 2037.04, "end": 2039.8, "text": " try to build them in a nonbreaking way.", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 532, "seek": 202036, "start": 2039.8, "end": 2046.9599999999998, "text": " This is just a sort of cultural value in the GraphQL community that you try to have nonbreaking", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 533, "seek": 202036, "start": 2046.9599999999998, "end": 2048.64, "text": " API changes.", "tokens": [50364, 407, 286, 727, 3612, 360, 257, 1379, 3500, 466, 341, 2685, 4829, 754, 11, 406, 754, 445, 2699, 76, 50626, 50626, 21884, 13695, 11, 457, 264, 2099, 485, 50744, 50744, 286, 603, 976, 291, 264, 2099, 3037, 11, 597, 307, 300, 456, 366, 732, 3755, 510, 13, 50946, 50946, 1485, 2522, 307, 300, 456, 366, 512, 7525, 926, 2390, 21884, 13695, 21445, 689, 561, 51198, 51198, 853, 281, 1322, 552, 294, 257, 2107, 20602, 636, 13, 51336, 51336, 639, 307, 445, 257, 1333, 295, 6988, 2158, 294, 264, 21884, 13695, 1768, 300, 291, 853, 281, 362, 2107, 20602, 51694, 51694, 9362, 2962, 13, 51778, 51778], "temperature": 0.0, "avg_logprob": -0.13109564558367862, "compression_ratio": 1.6470588235294117, "no_caption_prob": 7.889190783316735e-06}, {"id": 534, "seek": 204864, "start": 2048.64, "end": 2056.12, "text": " So that means that you could, instead of removing a field, you would add a new one and maybe...", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 535, "seek": 204864, "start": 2056.12, "end": 2061.0, "text": " Well, see, I have some disagreements with certain parts of this because part of what", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 536, "seek": 204864, "start": 2061.0, "end": 2065.4, "text": " that implies is that you make every field nullable, which isn't great.", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 537, "seek": 204864, "start": 2065.4, "end": 2067.04, "text": " And so they say, okay, well it's nullable.", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 538, "seek": 204864, "start": 2067.04, "end": 2073.22, "text": " So if you stop returning certain fields or if something fails, then your whole assumptions", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 539, "seek": 204864, "start": 2073.22, "end": 2076.0, "text": " don't fail because you're treating everything as nullable.", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 540, "seek": 204864, "start": 2076.0, "end": 2077.48, "text": " That doesn't feel like a great solution.", "tokens": [50364, 407, 300, 1355, 300, 291, 727, 11, 2602, 295, 12720, 257, 2519, 11, 291, 576, 909, 257, 777, 472, 293, 1310, 485, 50738, 50738, 1042, 11, 536, 11, 286, 362, 512, 23926, 6400, 365, 1629, 3166, 295, 341, 570, 644, 295, 437, 50982, 50982, 300, 18779, 307, 300, 291, 652, 633, 2519, 18184, 712, 11, 597, 1943, 380, 869, 13, 51202, 51202, 400, 370, 436, 584, 11, 1392, 11, 731, 309, 311, 18184, 712, 13, 51284, 51284, 407, 498, 291, 1590, 12678, 1629, 7909, 420, 498, 746, 18199, 11, 550, 428, 1379, 17695, 51593, 51593, 500, 380, 3061, 570, 291, 434, 15083, 1203, 382, 18184, 712, 13, 51732, 51732, 663, 1177, 380, 841, 411, 257, 869, 3827, 13, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.10420126211447794, "compression_ratio": 1.7198581560283688, "no_caption_prob": 6.962187853787327e-06}, {"id": 541, "seek": 207748, "start": 2077.48, "end": 2082.64, "text": " But that said, there are certain ways that, okay, if you have a new required argument,", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 542, "seek": 207748, "start": 2082.64, "end": 2085.5, "text": " that's a breaking API change.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 543, "seek": 207748, "start": 2085.5, "end": 2090.32, "text": " And so if you're going to do that, then maybe you make a new field and that field has that", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 544, "seek": 207748, "start": 2090.32, "end": 2091.32, "text": " required argument.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 545, "seek": 207748, "start": 2091.32, "end": 2093.0, "text": " And then you deprecate the old version.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 546, "seek": 207748, "start": 2093.0, "end": 2096.64, "text": " And there is a way in your GraphQL schema to deprecate certain fields.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 547, "seek": 207748, "start": 2096.64, "end": 2097.64, "text": " So that's one thing.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 548, "seek": 207748, "start": 2097.64, "end": 2099.52, "text": " And you can sort of have a path.", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 549, "seek": 207748, "start": 2099.52, "end": 2104.48, "text": " Maybe if you decide to make a breaking API change, maybe you at least give a nice transition", "tokens": [50364, 583, 300, 848, 11, 456, 366, 1629, 2098, 300, 11, 1392, 11, 498, 291, 362, 257, 777, 4739, 6770, 11, 50622, 50622, 300, 311, 257, 7697, 9362, 1319, 13, 50765, 50765, 400, 370, 498, 291, 434, 516, 281, 360, 300, 11, 550, 1310, 291, 652, 257, 777, 2519, 293, 300, 2519, 575, 300, 51006, 51006, 4739, 6770, 13, 51056, 51056, 400, 550, 291, 1367, 13867, 473, 264, 1331, 3037, 13, 51140, 51140, 400, 456, 307, 257, 636, 294, 428, 21884, 13695, 34078, 281, 1367, 13867, 473, 1629, 7909, 13, 51322, 51322, 407, 300, 311, 472, 551, 13, 51372, 51372, 400, 291, 393, 1333, 295, 362, 257, 3100, 13, 51466, 51466, 2704, 498, 291, 4536, 281, 652, 257, 7697, 9362, 1319, 11, 1310, 291, 412, 1935, 976, 257, 1481, 6034, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05587202086484522, "compression_ratio": 1.8473282442748091, "no_caption_prob": 2.482473746567848e-06}, {"id": 550, "seek": 210448, "start": 2104.48, "end": 2109.08, "text": " path where you have a deprecation period, and then if you go to a new version or do", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 551, "seek": 210448, "start": 2109.08, "end": 2113.52, "text": " a breaking change, you give some time for clients to get updated or whatever.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 552, "seek": 210448, "start": 2113.52, "end": 2114.52, "text": " Yeah.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 553, "seek": 210448, "start": 2114.52, "end": 2116.96, "text": " For REST endpoints, you could duplicate the endpoints.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 554, "seek": 210448, "start": 2116.96, "end": 2120.04, "text": " So you do that way.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 555, "seek": 210448, "start": 2120.04, "end": 2122.8, "text": " You don't have a breaking change, just new requirements.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 556, "seek": 210448, "start": 2122.8, "end": 2123.8, "text": " Right.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 557, "seek": 210448, "start": 2123.8, "end": 2130.8, "text": " And the second piece, and I know some people who are doing this is you can take a snapshot", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 558, "seek": 210448, "start": 2130.8, "end": 2133.2, "text": " of your GraphQL schema.", "tokens": [50364, 3100, 689, 291, 362, 257, 1367, 13867, 399, 2896, 11, 293, 550, 498, 291, 352, 281, 257, 777, 3037, 420, 360, 50594, 50594, 257, 7697, 1319, 11, 291, 976, 512, 565, 337, 6982, 281, 483, 10588, 420, 2035, 13, 50816, 50816, 865, 13, 50866, 50866, 1171, 497, 14497, 917, 20552, 11, 291, 727, 23976, 264, 917, 20552, 13, 50988, 50988, 407, 291, 360, 300, 636, 13, 51142, 51142, 509, 500, 380, 362, 257, 7697, 1319, 11, 445, 777, 7728, 13, 51280, 51280, 1779, 13, 51330, 51330, 400, 264, 1150, 2522, 11, 293, 286, 458, 512, 561, 567, 366, 884, 341, 307, 291, 393, 747, 257, 30163, 51680, 51680, 295, 428, 21884, 13695, 34078, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.18924861843303098, "compression_ratio": 1.6130268199233717, "no_caption_prob": 7.141604146454483e-05}, {"id": 559, "seek": 213320, "start": 2133.2, "end": 2136.7599999999998, "text": " And if you ever have a breaking change, first of all, there's tooling that can tell you", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 560, "seek": 213320, "start": 2136.7599999999998, "end": 2140.04, "text": " if you're making a breaking change to your GraphQL schema, which is cool.", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 561, "seek": 213320, "start": 2140.04, "end": 2141.04, "text": " Oh, cool.", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 562, "seek": 213320, "start": 2141.04, "end": 2142.04, "text": " Yeah.", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 563, "seek": 213320, "start": 2142.04, "end": 2143.04, "text": " It could warn you.", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 564, "seek": 213320, "start": 2143.04, "end": 2147.56, "text": " And then what you could do is you could kind of take a snapshot every time that happens.", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 565, "seek": 213320, "start": 2147.56, "end": 2153.7999999999997, "text": " If the browser client is on a version between a breaking change, you could say increment", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 566, "seek": 213320, "start": 2153.7999999999997, "end": 2159.3599999999997, "text": " a number every time there's a breaking change and you could have the client know which number", "tokens": [50364, 400, 498, 291, 1562, 362, 257, 7697, 1319, 11, 700, 295, 439, 11, 456, 311, 46593, 300, 393, 980, 291, 50542, 50542, 498, 291, 434, 1455, 257, 7697, 1319, 281, 428, 21884, 13695, 34078, 11, 597, 307, 1627, 13, 50706, 50706, 876, 11, 1627, 13, 50756, 50756, 865, 13, 50806, 50806, 467, 727, 12286, 291, 13, 50856, 50856, 400, 550, 437, 291, 727, 360, 307, 291, 727, 733, 295, 747, 257, 30163, 633, 565, 300, 2314, 13, 51082, 51082, 759, 264, 11185, 6423, 307, 322, 257, 3037, 1296, 257, 7697, 1319, 11, 291, 727, 584, 26200, 51394, 51394, 257, 1230, 633, 565, 456, 311, 257, 7697, 1319, 293, 291, 727, 362, 264, 6423, 458, 597, 1230, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.06728870073954264, "compression_ratio": 1.8645418326693226, "no_caption_prob": 4.495156645134557e-06}, {"id": 567, "seek": 215936, "start": 2159.36, "end": 2164.56, "text": " it's on and then check before it makes a request if it's on an outdated version.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 568, "seek": 215936, "start": 2164.56, "end": 2169.92, "text": " And then it has to reload itself before it continues if there's been a breaking change.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 569, "seek": 215936, "start": 2169.92, "end": 2170.92, "text": " Yeah.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 570, "seek": 215936, "start": 2170.92, "end": 2174.1600000000003, "text": " Mario Rogic had a talk kind of like that.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 571, "seek": 215936, "start": 2174.1600000000003, "end": 2175.2000000000003, "text": " Yes.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 572, "seek": 215936, "start": 2175.2000000000003, "end": 2176.2000000000003, "text": " On Evergreen.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 573, "seek": 215936, "start": 2176.2000000000003, "end": 2177.2000000000003, "text": " Yeah.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 574, "seek": 215936, "start": 2177.2000000000003, "end": 2178.44, "text": " I really like his thoughts on that.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 575, "seek": 215936, "start": 2178.44, "end": 2179.6800000000003, "text": " That's a really cool concept.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 576, "seek": 215936, "start": 2179.6800000000003, "end": 2180.6800000000003, "text": " Yeah.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 577, "seek": 215936, "start": 2180.6800000000003, "end": 2181.6800000000003, "text": " We'll link to that.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 578, "seek": 215936, "start": 2181.6800000000003, "end": 2183.28, "text": " Yes, definitely.", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 579, "seek": 215936, "start": 2183.28, "end": 2189.1200000000003, "text": " Another thing we haven't touched on, but we've talked about generating types confidently", "tokens": [50364, 309, 311, 322, 293, 550, 1520, 949, 309, 1669, 257, 5308, 498, 309, 311, 322, 364, 36313, 3037, 13, 50624, 50624, 400, 550, 309, 575, 281, 25628, 2564, 949, 309, 6515, 498, 456, 311, 668, 257, 7697, 1319, 13, 50892, 50892, 865, 13, 50942, 50942, 9343, 11860, 299, 632, 257, 751, 733, 295, 411, 300, 13, 51104, 51104, 1079, 13, 51156, 51156, 1282, 12123, 27399, 13, 51206, 51206, 865, 13, 51256, 51256, 286, 534, 411, 702, 4598, 322, 300, 13, 51318, 51318, 663, 311, 257, 534, 1627, 3410, 13, 51380, 51380, 865, 13, 51430, 51430, 492, 603, 2113, 281, 300, 13, 51480, 51480, 1079, 11, 2138, 13, 51560, 51560, 3996, 551, 321, 2378, 380, 9828, 322, 11, 457, 321, 600, 2825, 466, 17746, 3467, 41956, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.15055221735044969, "compression_ratio": 1.6319702602230484, "no_caption_prob": 1.8058346540783532e-05}, {"id": 580, "seek": 218912, "start": 2189.12, "end": 2194.3199999999997, "text": " with tools like Elm GraphQL or Haskell Servant.", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 581, "seek": 218912, "start": 2194.3199999999997, "end": 2198.22, "text": " What about auto generating JSON decoders?", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 582, "seek": 218912, "start": 2198.22, "end": 2204.6, "text": " There are a lot of tools out there for copy pasting a JSON payload into a window and generating", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 583, "seek": 218912, "start": 2204.6, "end": 2208.24, "text": " some Elm decoders or there are some editors.", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 584, "seek": 218912, "start": 2208.24, "end": 2213.8399999999997, "text": " IntelliJ Elm has some tooling that lets you generate a decoder based on a type annotation,", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 585, "seek": 218912, "start": 2213.8399999999997, "end": 2214.8399999999997, "text": " for example.", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 586, "seek": 218912, "start": 2214.8399999999997, "end": 2216.08, "text": " What do you think about those?", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 587, "seek": 218912, "start": 2216.08, "end": 2217.56, "text": " Are they worth using?", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 588, "seek": 218912, "start": 2217.56, "end": 2219.0, "text": " Do you use them?", "tokens": [50364, 365, 3873, 411, 2699, 76, 21884, 13695, 420, 8646, 43723, 6213, 394, 13, 50624, 50624, 708, 466, 8399, 17746, 31828, 979, 378, 433, 30, 50819, 50819, 821, 366, 257, 688, 295, 3873, 484, 456, 337, 5055, 1791, 278, 257, 31828, 30918, 666, 257, 4910, 293, 17746, 51138, 51138, 512, 2699, 76, 979, 378, 433, 420, 456, 366, 512, 31446, 13, 51320, 51320, 18762, 72, 41, 2699, 76, 575, 512, 46593, 300, 6653, 291, 8460, 257, 979, 19866, 2361, 322, 257, 2010, 48654, 11, 51600, 51600, 337, 1365, 13, 51650, 51650, 708, 360, 291, 519, 466, 729, 30, 51712, 51712, 2014, 436, 3163, 1228, 30, 51786, 51786, 1144, 291, 764, 552, 30, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.16149152672809103, "compression_ratio": 1.6356275303643724, "no_caption_prob": 3.321324402350001e-05}, {"id": 589, "seek": 221900, "start": 2219.0, "end": 2222.6, "text": " I don't use them because I usually don't have access to those.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 590, "seek": 221900, "start": 2222.6, "end": 2224.56, "text": " I don't have the need for it.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 591, "seek": 221900, "start": 2224.56, "end": 2228.2, "text": " I think they can be a very good starting point.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 592, "seek": 221900, "start": 2228.2, "end": 2231.4, "text": " The thing is that you...", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 593, "seek": 221900, "start": 2231.4, "end": 2232.48, "text": " What do you decode into?", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 594, "seek": 221900, "start": 2232.48, "end": 2236.12, "text": " You decode in something that looks like what you have in the backend.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 595, "seek": 221900, "start": 2236.12, "end": 2241.12, "text": " So I think they're useful, but only if you transform it afterwards into something that", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 596, "seek": 221900, "start": 2241.12, "end": 2243.2, "text": " is made for the client.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 597, "seek": 221900, "start": 2243.2, "end": 2246.56, "text": " So what we discussed sometime in the episode.", "tokens": [50364, 286, 500, 380, 764, 552, 570, 286, 2673, 500, 380, 362, 2105, 281, 729, 13, 50544, 50544, 286, 500, 380, 362, 264, 643, 337, 309, 13, 50642, 50642, 286, 519, 436, 393, 312, 257, 588, 665, 2891, 935, 13, 50824, 50824, 440, 551, 307, 300, 291, 485, 50984, 50984, 708, 360, 291, 979, 1429, 666, 30, 51038, 51038, 509, 979, 1429, 294, 746, 300, 1542, 411, 437, 291, 362, 294, 264, 38087, 13, 51220, 51220, 407, 286, 519, 436, 434, 4420, 11, 457, 787, 498, 291, 4088, 309, 10543, 666, 746, 300, 51470, 51470, 307, 1027, 337, 264, 6423, 13, 51574, 51574, 407, 437, 321, 7152, 15053, 294, 264, 3500, 13, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.17386786419412364, "compression_ratio": 1.7302904564315353, "no_caption_prob": 8.885745046427473e-05}, {"id": 598, "seek": 224656, "start": 2246.56, "end": 2250.92, "text": " You want something that you will use, not something that looks like what the backend", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 599, "seek": 224656, "start": 2250.92, "end": 2251.92, "text": " returns.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 600, "seek": 224656, "start": 2251.92, "end": 2252.92, "text": " Right.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 601, "seek": 224656, "start": 2252.92, "end": 2258.2799999999997, "text": " So it's like coupling you to the serialization format and it's getting you thinking about", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 602, "seek": 224656, "start": 2258.2799999999997, "end": 2262.32, "text": " the serialization format first rather than your ideal data structure.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 603, "seek": 224656, "start": 2262.32, "end": 2263.32, "text": " Exactly.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 604, "seek": 224656, "start": 2263.32, "end": 2264.92, "text": " And you don't want that.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 605, "seek": 224656, "start": 2264.92, "end": 2269.32, "text": " You can map over what you got at decode time.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 606, "seek": 224656, "start": 2269.32, "end": 2273.56, "text": " So add another layer of decoding and that will be fine in my book.", "tokens": [50364, 509, 528, 746, 300, 291, 486, 764, 11, 406, 746, 300, 1542, 411, 437, 264, 38087, 50582, 50582, 11247, 13, 50632, 50632, 1779, 13, 50682, 50682, 407, 309, 311, 411, 37447, 291, 281, 264, 17436, 2144, 7877, 293, 309, 311, 1242, 291, 1953, 466, 50950, 50950, 264, 17436, 2144, 7877, 700, 2831, 813, 428, 7157, 1412, 3877, 13, 51152, 51152, 7587, 13, 51202, 51202, 400, 291, 500, 380, 528, 300, 13, 51282, 51282, 509, 393, 4471, 670, 437, 291, 658, 412, 979, 1429, 565, 13, 51502, 51502, 407, 909, 1071, 4583, 295, 979, 8616, 293, 300, 486, 312, 2489, 294, 452, 1446, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13847376921466578, "compression_ratio": 1.7245762711864407, "no_caption_prob": 3.2885000109672546e-06}, {"id": 607, "seek": 227356, "start": 2273.56, "end": 2277.56, "text": " But you don't want to tell that coupling impact the rest of your application.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 608, "seek": 227356, "start": 2277.56, "end": 2282.24, "text": " So I think it's a very good starting point if you have trouble making them yourself,", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 609, "seek": 227356, "start": 2282.24, "end": 2284.64, "text": " but I don't use them myself.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 610, "seek": 227356, "start": 2284.64, "end": 2289.6, "text": " That's interesting that you say that it would be fine in your book if I could get into some", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 611, "seek": 227356, "start": 2289.6, "end": 2293.72, "text": " nitpicking and maybe explore something where we have a different perspective on things.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 612, "seek": 227356, "start": 2293.72, "end": 2294.72, "text": " Yeah, I don't have a book.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 613, "seek": 227356, "start": 2294.72, "end": 2295.72, "text": " Okay.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 614, "seek": 227356, "start": 2295.72, "end": 2296.72, "text": " That's nitpick.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 615, "seek": 227356, "start": 2296.72, "end": 2297.72, "text": " That's it.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 616, "seek": 227356, "start": 2297.72, "end": 2298.72, "text": " Yeah.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 617, "seek": 227356, "start": 2298.72, "end": 2299.72, "text": " Yeah.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 618, "seek": 227356, "start": 2299.72, "end": 2300.72, "text": " In your book.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 619, "seek": 227356, "start": 2300.72, "end": 2301.72, "text": " It's okay.", "tokens": [50364, 583, 291, 500, 380, 528, 281, 980, 300, 37447, 2712, 264, 1472, 295, 428, 3861, 13, 50564, 50564, 407, 286, 519, 309, 311, 257, 588, 665, 2891, 935, 498, 291, 362, 5253, 1455, 552, 1803, 11, 50798, 50798, 457, 286, 500, 380, 764, 552, 2059, 13, 50918, 50918, 663, 311, 1880, 300, 291, 584, 300, 309, 576, 312, 2489, 294, 428, 1446, 498, 286, 727, 483, 666, 512, 51166, 51166, 10900, 79, 10401, 293, 1310, 6839, 746, 689, 321, 362, 257, 819, 4585, 322, 721, 13, 51372, 51372, 865, 11, 286, 500, 380, 362, 257, 1446, 13, 51422, 51422, 1033, 13, 51472, 51472, 663, 311, 10900, 79, 618, 13, 51522, 51522, 663, 311, 309, 13, 51572, 51572, 865, 13, 51622, 51622, 865, 13, 51672, 51672, 682, 428, 1446, 13, 51722, 51722, 467, 311, 1392, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.1774783786252248, "compression_ratio": 1.7462686567164178, "no_caption_prob": 2.7534520995686762e-05}, {"id": 620, "seek": 230172, "start": 2301.72, "end": 2304.4399999999996, "text": " Yeah, yeah, in your, it's okay in your blog.", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 621, "seek": 230172, "start": 2304.4399999999996, "end": 2308.24, "text": " That's the definitive source of your own opinions.", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 622, "seek": 230172, "start": 2308.24, "end": 2312.7999999999997, "text": " So I would consider that a smell in my book or in my blog.", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 623, "seek": 230172, "start": 2312.7999999999997, "end": 2317.8399999999997, "text": " And the reason is because, I mean, partially because of what we talked about to sort of", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 624, "seek": 230172, "start": 2317.8399999999997, "end": 2322.24, "text": " parse don't validate, I want to do it in a single step.", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 625, "seek": 230172, "start": 2322.24, "end": 2328.9599999999996, "text": " I want to just have this format and deserialize it into exactly what I want.", "tokens": [50364, 865, 11, 1338, 11, 294, 428, 11, 309, 311, 1392, 294, 428, 6968, 13, 50500, 50500, 663, 311, 264, 28152, 4009, 295, 428, 1065, 11819, 13, 50690, 50690, 407, 286, 576, 1949, 300, 257, 4316, 294, 452, 1446, 420, 294, 452, 6968, 13, 50918, 50918, 400, 264, 1778, 307, 570, 11, 286, 914, 11, 18886, 570, 295, 437, 321, 2825, 466, 281, 1333, 295, 51170, 51170, 48377, 500, 380, 29562, 11, 286, 528, 281, 360, 309, 294, 257, 2167, 1823, 13, 51390, 51390, 286, 528, 281, 445, 362, 341, 7877, 293, 730, 260, 831, 1125, 309, 666, 2293, 437, 286, 528, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.18473441645784197, "compression_ratio": 1.609442060085837, "no_caption_prob": 2.9772365451208316e-05}, {"id": 626, "seek": 232896, "start": 2328.96, "end": 2334.92, "text": " And we talked about this in the opaque types episode, this notion, I use this term, wrap", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 627, "seek": 232896, "start": 2334.92, "end": 2336.56, "text": " early unwrap late.", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 628, "seek": 232896, "start": 2336.56, "end": 2338.48, "text": " I want to wrap as early as possible.", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 629, "seek": 232896, "start": 2338.48, "end": 2344.64, "text": " In fact, if I can wrap in the appropriate custom types and nice data structures and", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 630, "seek": 232896, "start": 2344.64, "end": 2349.48, "text": " everything before I even have access to the data, that's the ideal, right?", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 631, "seek": 232896, "start": 2349.48, "end": 2351.36, "text": " So yeah, I totally agree.", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 632, "seek": 232896, "start": 2351.36, "end": 2356.82, "text": " Are you just saying like, it's not a big deal, but it's a best practice to decode into your", "tokens": [50364, 400, 321, 2825, 466, 341, 294, 264, 42687, 3467, 3500, 11, 341, 10710, 11, 286, 764, 341, 1433, 11, 7019, 50662, 50662, 2440, 14853, 4007, 3469, 13, 50744, 50744, 286, 528, 281, 7019, 382, 2440, 382, 1944, 13, 50840, 50840, 682, 1186, 11, 498, 286, 393, 7019, 294, 264, 6854, 2375, 3467, 293, 1481, 1412, 9227, 293, 51148, 51148, 1203, 949, 286, 754, 362, 2105, 281, 264, 1412, 11, 300, 311, 264, 7157, 11, 558, 30, 51390, 51390, 407, 1338, 11, 286, 3879, 3986, 13, 51484, 51484, 2014, 291, 445, 1566, 411, 11, 309, 311, 406, 257, 955, 2028, 11, 457, 309, 311, 257, 1151, 3124, 281, 979, 1429, 666, 428, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.11966168776802395, "compression_ratio": 1.64453125, "no_caption_prob": 2.429938831483014e-05}, {"id": 633, "seek": 235682, "start": 2356.82, "end": 2360.4, "text": " desired data type or what were your thoughts on that?", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 634, "seek": 235682, "start": 2360.4, "end": 2365.6800000000003, "text": " If I was understanding correctly, you were saying that it's okay in your book to auto", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 635, "seek": 235682, "start": 2365.6800000000003, "end": 2371.6200000000003, "text": " generate a decoder and then get some sort of data format that represents the serialization", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 636, "seek": 235682, "start": 2371.6200000000003, "end": 2377.6000000000004, "text": " format of the JSON and then pass that to a function and then map that into a different", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 637, "seek": 235682, "start": 2377.6000000000004, "end": 2380.1200000000003, "text": " data structure as a separate step.", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 638, "seek": 235682, "start": 2380.1200000000003, "end": 2381.48, "text": " You couldn't do it that way.", "tokens": [50364, 14721, 1412, 2010, 420, 437, 645, 428, 4598, 322, 300, 30, 50543, 50543, 759, 286, 390, 3701, 8944, 11, 291, 645, 1566, 300, 309, 311, 1392, 294, 428, 1446, 281, 8399, 50807, 50807, 8460, 257, 979, 19866, 293, 550, 483, 512, 1333, 295, 1412, 7877, 300, 8855, 264, 17436, 2144, 51104, 51104, 7877, 295, 264, 31828, 293, 550, 1320, 300, 281, 257, 2445, 293, 550, 4471, 300, 666, 257, 819, 51403, 51403, 1412, 3877, 382, 257, 4994, 1823, 13, 51529, 51529, 509, 2809, 380, 360, 309, 300, 636, 13, 51597, 51597], "temperature": 0.0, "avg_logprob": -0.10013883857316869, "compression_ratio": 1.6212765957446809, "no_caption_prob": 7.411184924421832e-06}, {"id": 639, "seek": 238148, "start": 2381.48, "end": 2387.72, "text": " The thought I had was just generate the decoders for each field and then the function that", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 640, "seek": 238148, "start": 2387.72, "end": 2394.88, "text": " will create your custom type or your record, that one should make it look like what you're", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 641, "seek": 238148, "start": 2394.88, "end": 2395.88, "text": " going to use.", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 642, "seek": 238148, "start": 2395.88, "end": 2401.76, "text": " But you could have one extra step and just get that, have that logic of mapping one to", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 643, "seek": 238148, "start": 2401.76, "end": 2403.52, "text": " the other in a decoder.", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 644, "seek": 238148, "start": 2403.52, "end": 2406.68, "text": " But yeah, you don't want it to leak out somewhere else.", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 645, "seek": 238148, "start": 2406.68, "end": 2410.56, "text": " So it's basically what is good in your book.", "tokens": [50364, 440, 1194, 286, 632, 390, 445, 8460, 264, 979, 378, 433, 337, 1184, 2519, 293, 550, 264, 2445, 300, 50676, 50676, 486, 1884, 428, 2375, 2010, 420, 428, 2136, 11, 300, 472, 820, 652, 309, 574, 411, 437, 291, 434, 51034, 51034, 516, 281, 764, 13, 51084, 51084, 583, 291, 727, 362, 472, 2857, 1823, 293, 445, 483, 300, 11, 362, 300, 9952, 295, 18350, 472, 281, 51378, 51378, 264, 661, 294, 257, 979, 19866, 13, 51466, 51466, 583, 1338, 11, 291, 500, 380, 528, 309, 281, 17143, 484, 4079, 1646, 13, 51624, 51624, 407, 309, 311, 1936, 437, 307, 665, 294, 428, 1446, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.14715978639935134, "compression_ratio": 1.6748971193415638, "no_caption_prob": 8.749076368985698e-05}, {"id": 646, "seek": 241056, "start": 2410.56, "end": 2414.16, "text": " Okay, so we're on the same page in our books there, it sounds like.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 647, "seek": 241056, "start": 2414.16, "end": 2416.16, "text": " Well, you also don't have a book.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 648, "seek": 241056, "start": 2416.16, "end": 2418.4, "text": " Well, we'll see about that.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 649, "seek": 241056, "start": 2418.4, "end": 2419.4, "text": " We'll see.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 650, "seek": 241056, "start": 2419.4, "end": 2420.4, "text": " Oh, yeah.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 651, "seek": 241056, "start": 2420.4, "end": 2421.4, "text": " Sneak peek.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 652, "seek": 241056, "start": 2421.4, "end": 2422.4, "text": " Yeah.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 653, "seek": 241056, "start": 2422.4, "end": 2423.62, "text": " Keep your eyes out.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 654, "seek": 241056, "start": 2423.62, "end": 2424.64, "text": " There may be a book.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 655, "seek": 241056, "start": 2424.64, "end": 2425.84, "text": " There may be a book.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 656, "seek": 241056, "start": 2425.84, "end": 2426.84, "text": " So okay.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 657, "seek": 241056, "start": 2426.84, "end": 2427.84, "text": " Yeah.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 658, "seek": 241056, "start": 2427.84, "end": 2433.6, "text": " And one of the other really cool things that comes from this strategy of immediately getting", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 659, "seek": 241056, "start": 2433.6, "end": 2438.48, "text": " the data type you want rather than having this intermediary data format in your Elm", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 660, "seek": 241056, "start": 2438.48, "end": 2439.48, "text": " code.", "tokens": [50364, 1033, 11, 370, 321, 434, 322, 264, 912, 3028, 294, 527, 3642, 456, 11, 309, 3263, 411, 13, 50544, 50544, 1042, 11, 291, 611, 500, 380, 362, 257, 1446, 13, 50644, 50644, 1042, 11, 321, 603, 536, 466, 300, 13, 50756, 50756, 492, 603, 536, 13, 50806, 50806, 876, 11, 1338, 13, 50856, 50856, 41336, 514, 19604, 13, 50906, 50906, 865, 13, 50956, 50956, 5527, 428, 2575, 484, 13, 51017, 51017, 821, 815, 312, 257, 1446, 13, 51068, 51068, 821, 815, 312, 257, 1446, 13, 51128, 51128, 407, 1392, 13, 51178, 51178, 865, 13, 51228, 51228, 400, 472, 295, 264, 661, 534, 1627, 721, 300, 1487, 490, 341, 5206, 295, 4258, 1242, 51516, 51516, 264, 1412, 2010, 291, 528, 2831, 813, 1419, 341, 15184, 822, 1412, 7877, 294, 428, 2699, 76, 51760, 51760, 3089, 13, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.2064557521463298, "compression_ratio": 1.691699604743083, "no_caption_prob": 1.6187292203539982e-05}, {"id": 661, "seek": 243948, "start": 2439.48, "end": 2445.16, "text": " It's really nice because you can sort of locally reason about how you want to transform something.", "tokens": [50364, 467, 311, 534, 1481, 570, 291, 393, 1333, 295, 16143, 1778, 466, 577, 291, 528, 281, 4088, 746, 13, 50648, 50648, 1743, 286, 1604, 646, 294, 264, 786, 1364, 322, 512, 24413, 3089, 13, 50860, 50860, 876, 11, 587, 11, 309, 390, 309, 390, 1019, 13, 50984, 50984, 467, 390, 3195, 295, 1019, 445, 516, 807, 341, 1412, 300, 321, 645, 1242, 490, 264, 7154, 51240, 51240, 293, 2614, 439, 613, 6828, 281, 6608, 670, 293, 1319, 1629, 9239, 295, 1412, 666, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.17651400455208713, "compression_ratio": 1.5866666666666667, "no_caption_prob": 6.6433549363864586e-06}, {"id": 662, "seek": 243948, "start": 2445.16, "end": 2449.4, "text": " Like I remember back in the day working on some angular code.", "tokens": [50364, 467, 311, 534, 1481, 570, 291, 393, 1333, 295, 16143, 1778, 466, 577, 291, 528, 281, 4088, 746, 13, 50648, 50648, 1743, 286, 1604, 646, 294, 264, 786, 1364, 322, 512, 24413, 3089, 13, 50860, 50860, 876, 11, 587, 11, 309, 390, 309, 390, 1019, 13, 50984, 50984, 467, 390, 3195, 295, 1019, 445, 516, 807, 341, 1412, 300, 321, 645, 1242, 490, 264, 7154, 51240, 51240, 293, 2614, 439, 613, 6828, 281, 6608, 670, 293, 1319, 1629, 9239, 295, 1412, 666, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.17651400455208713, "compression_ratio": 1.5866666666666667, "no_caption_prob": 6.6433549363864586e-06}, {"id": 663, "seek": 243948, "start": 2449.4, "end": 2451.88, "text": " Oh, man, it was it was fun.", "tokens": [50364, 467, 311, 534, 1481, 570, 291, 393, 1333, 295, 16143, 1778, 466, 577, 291, 528, 281, 4088, 746, 13, 50648, 50648, 1743, 286, 1604, 646, 294, 264, 786, 1364, 322, 512, 24413, 3089, 13, 50860, 50860, 876, 11, 587, 11, 309, 390, 309, 390, 1019, 13, 50984, 50984, 467, 390, 3195, 295, 1019, 445, 516, 807, 341, 1412, 300, 321, 645, 1242, 490, 264, 7154, 51240, 51240, 293, 2614, 439, 613, 6828, 281, 6608, 670, 293, 1319, 1629, 9239, 295, 1412, 666, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.17651400455208713, "compression_ratio": 1.5866666666666667, "no_caption_prob": 6.6433549363864586e-06}, {"id": 664, "seek": 243948, "start": 2451.88, "end": 2457.0, "text": " It was lots of fun just going through this data that we were getting from the server", "tokens": [50364, 467, 311, 534, 1481, 570, 291, 393, 1333, 295, 16143, 1778, 466, 577, 291, 528, 281, 4088, 746, 13, 50648, 50648, 1743, 286, 1604, 646, 294, 264, 786, 1364, 322, 512, 24413, 3089, 13, 50860, 50860, 876, 11, 587, 11, 309, 390, 309, 390, 1019, 13, 50984, 50984, 467, 390, 3195, 295, 1019, 445, 516, 807, 341, 1412, 300, 321, 645, 1242, 490, 264, 7154, 51240, 51240, 293, 2614, 439, 613, 6828, 281, 6608, 670, 293, 1319, 1629, 9239, 295, 1412, 666, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.17651400455208713, "compression_ratio": 1.5866666666666667, "no_caption_prob": 6.6433549363864586e-06}, {"id": 665, "seek": 243948, "start": 2457.0, "end": 2464.08, "text": " and running all these functions to filter over and change certain bits of data into", "tokens": [50364, 467, 311, 534, 1481, 570, 291, 393, 1333, 295, 16143, 1778, 466, 577, 291, 528, 281, 4088, 746, 13, 50648, 50648, 1743, 286, 1604, 646, 294, 264, 786, 1364, 322, 512, 24413, 3089, 13, 50860, 50860, 876, 11, 587, 11, 309, 390, 309, 390, 1019, 13, 50984, 50984, 467, 390, 3195, 295, 1019, 445, 516, 807, 341, 1412, 300, 321, 645, 1242, 490, 264, 7154, 51240, 51240, 293, 2614, 439, 613, 6828, 281, 6608, 670, 293, 1319, 1629, 9239, 295, 1412, 666, 51594, 51594], "temperature": 0.0, "avg_logprob": -0.17651400455208713, "compression_ratio": 1.5866666666666667, "no_caption_prob": 6.6433549363864586e-06}, {"id": 666, "seek": 246408, "start": 2464.08, "end": 2469.88, "text": " a format that we needed to match it against some filters that we were applying and things", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 667, "seek": 246408, "start": 2469.88, "end": 2470.88, "text": " like that.", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 668, "seek": 246408, "start": 2470.88, "end": 2472.88, "text": " So we needed it into a specific format.", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 669, "seek": 246408, "start": 2472.88, "end": 2478.08, "text": " And so there's this one giant function that takes all this data, this deeply nested data", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 670, "seek": 246408, "start": 2478.08, "end": 2484.7799999999997, "text": " structure, and then it reaches into these pieces and it mutates things and it maybe", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 671, "seek": 246408, "start": 2484.7799999999997, "end": 2488.12, "text": " it does some sort of functional style mapping of things.", "tokens": [50364, 257, 7877, 300, 321, 2978, 281, 2995, 309, 1970, 512, 15995, 300, 321, 645, 9275, 293, 721, 50654, 50654, 411, 300, 13, 50704, 50704, 407, 321, 2978, 309, 666, 257, 2685, 7877, 13, 50804, 50804, 400, 370, 456, 311, 341, 472, 7410, 2445, 300, 2516, 439, 341, 1412, 11, 341, 8760, 15646, 292, 1412, 51064, 51064, 3877, 11, 293, 550, 309, 14235, 666, 613, 3755, 293, 309, 5839, 1024, 721, 293, 309, 1310, 51399, 51399, 309, 775, 512, 1333, 295, 11745, 3758, 18350, 295, 721, 13, 51566, 51566], "temperature": 0.0, "avg_logprob": -0.09668705198499891, "compression_ratio": 1.7209302325581395, "no_caption_prob": 2.178203794755973e-05}, {"id": 672, "seek": 248812, "start": 2488.12, "end": 2494.8399999999997, "text": " But either way, it's not it's it's very error prone and it's a pain and it's really it really", "tokens": [50364, 583, 2139, 636, 11, 309, 311, 406, 309, 311, 309, 311, 588, 6713, 25806, 293, 309, 311, 257, 1822, 293, 309, 311, 534, 309, 534, 50700, 50700, 11051, 428, 3567, 257, 688, 544, 813, 309, 2203, 281, 13, 50864, 50864, 400, 370, 341, 307, 472, 295, 264, 1151, 16477, 295, 31828, 979, 378, 433, 11, 286, 519, 11, 307, 562, 291, 393, 445, 51088, 51088, 584, 11, 16478, 11, 731, 11, 286, 600, 658, 341, 955, 1412, 3877, 300, 311, 1348, 646, 490, 264, 7154, 13, 51349, 51349, 467, 311, 658, 439, 295, 264, 5022, 567, 366, 2950, 558, 586, 293, 309, 311, 658, 512, 1589, 466, 729, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.07361274106161934, "compression_ratio": 1.624, "no_caption_prob": 3.882942473865114e-05}, {"id": 673, "seek": 248812, "start": 2494.8399999999997, "end": 2498.12, "text": " hurts your brain a lot more than it needs to.", "tokens": [50364, 583, 2139, 636, 11, 309, 311, 406, 309, 311, 309, 311, 588, 6713, 25806, 293, 309, 311, 257, 1822, 293, 309, 311, 534, 309, 534, 50700, 50700, 11051, 428, 3567, 257, 688, 544, 813, 309, 2203, 281, 13, 50864, 50864, 400, 370, 341, 307, 472, 295, 264, 1151, 16477, 295, 31828, 979, 378, 433, 11, 286, 519, 11, 307, 562, 291, 393, 445, 51088, 51088, 584, 11, 16478, 11, 731, 11, 286, 600, 658, 341, 955, 1412, 3877, 300, 311, 1348, 646, 490, 264, 7154, 13, 51349, 51349, 467, 311, 658, 439, 295, 264, 5022, 567, 366, 2950, 558, 586, 293, 309, 311, 658, 512, 1589, 466, 729, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.07361274106161934, "compression_ratio": 1.624, "no_caption_prob": 3.882942473865114e-05}, {"id": 674, "seek": 248812, "start": 2498.12, "end": 2502.6, "text": " And so this is one of the best qualities of JSON decoders, I think, is when you can just", "tokens": [50364, 583, 2139, 636, 11, 309, 311, 406, 309, 311, 309, 311, 588, 6713, 25806, 293, 309, 311, 257, 1822, 293, 309, 311, 534, 309, 534, 50700, 50700, 11051, 428, 3567, 257, 688, 544, 813, 309, 2203, 281, 13, 50864, 50864, 400, 370, 341, 307, 472, 295, 264, 1151, 16477, 295, 31828, 979, 378, 433, 11, 286, 519, 11, 307, 562, 291, 393, 445, 51088, 51088, 584, 11, 16478, 11, 731, 11, 286, 600, 658, 341, 955, 1412, 3877, 300, 311, 1348, 646, 490, 264, 7154, 13, 51349, 51349, 467, 311, 658, 439, 295, 264, 5022, 567, 366, 2950, 558, 586, 293, 309, 311, 658, 512, 1589, 466, 729, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.07361274106161934, "compression_ratio": 1.624, "no_caption_prob": 3.882942473865114e-05}, {"id": 675, "seek": 248812, "start": 2502.6, "end": 2507.8199999999997, "text": " say, hmm, well, I've got this big data structure that's coming back from the server.", "tokens": [50364, 583, 2139, 636, 11, 309, 311, 406, 309, 311, 309, 311, 588, 6713, 25806, 293, 309, 311, 257, 1822, 293, 309, 311, 534, 309, 534, 50700, 50700, 11051, 428, 3567, 257, 688, 544, 813, 309, 2203, 281, 13, 50864, 50864, 400, 370, 341, 307, 472, 295, 264, 1151, 16477, 295, 31828, 979, 378, 433, 11, 286, 519, 11, 307, 562, 291, 393, 445, 51088, 51088, 584, 11, 16478, 11, 731, 11, 286, 600, 658, 341, 955, 1412, 3877, 300, 311, 1348, 646, 490, 264, 7154, 13, 51349, 51349, 467, 311, 658, 439, 295, 264, 5022, 567, 366, 2950, 558, 586, 293, 309, 311, 658, 512, 1589, 466, 729, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.07361274106161934, "compression_ratio": 1.624, "no_caption_prob": 3.882942473865114e-05}, {"id": 676, "seek": 248812, "start": 2507.8199999999997, "end": 2512.92, "text": " It's got all of the users who are online right now and it's got some information about those", "tokens": [50364, 583, 2139, 636, 11, 309, 311, 406, 309, 311, 309, 311, 588, 6713, 25806, 293, 309, 311, 257, 1822, 293, 309, 311, 534, 309, 534, 50700, 50700, 11051, 428, 3567, 257, 688, 544, 813, 309, 2203, 281, 13, 50864, 50864, 400, 370, 341, 307, 472, 295, 264, 1151, 16477, 295, 31828, 979, 378, 433, 11, 286, 519, 11, 307, 562, 291, 393, 445, 51088, 51088, 584, 11, 16478, 11, 731, 11, 286, 600, 658, 341, 955, 1412, 3877, 300, 311, 1348, 646, 490, 264, 7154, 13, 51349, 51349, 467, 311, 658, 439, 295, 264, 5022, 567, 366, 2950, 558, 586, 293, 309, 311, 658, 512, 1589, 466, 729, 51604, 51604], "temperature": 0.0, "avg_logprob": -0.07361274106161934, "compression_ratio": 1.624, "no_caption_prob": 3.882942473865114e-05}, {"id": 677, "seek": 251292, "start": 2512.92, "end": 2520.36, "text": " users like their current status, and then it's got some nested data structures like", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 678, "seek": 251292, "start": 2520.36, "end": 2523.4, "text": " which rooms they're a member of or whatever.", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 679, "seek": 251292, "start": 2523.4, "end": 2524.4, "text": " Right.", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 680, "seek": 251292, "start": 2524.4, "end": 2528.2000000000003, "text": " And you say, well, we're going to change something about the way that we're dealing with the", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 681, "seek": 251292, "start": 2528.2000000000003, "end": 2533.6, "text": " rooms that they're in or we want to, you know, add an additional piece of data to that or", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 682, "seek": 251292, "start": 2533.6, "end": 2535.48, "text": " put it in a different data structure or whatever.", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 683, "seek": 251292, "start": 2535.48, "end": 2536.8, "text": " Well, where do you go?", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 684, "seek": 251292, "start": 2536.8, "end": 2540.52, "text": " You could have like one module that deals with that piece of it.", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 685, "seek": 251292, "start": 2540.52, "end": 2541.94, "text": " And it would be opaque.", "tokens": [50364, 5022, 411, 641, 2190, 6558, 11, 293, 550, 309, 311, 658, 512, 15646, 292, 1412, 9227, 411, 50736, 50736, 597, 9396, 436, 434, 257, 4006, 295, 420, 2035, 13, 50888, 50888, 1779, 13, 50938, 50938, 400, 291, 584, 11, 731, 11, 321, 434, 516, 281, 1319, 746, 466, 264, 636, 300, 321, 434, 6260, 365, 264, 51128, 51128, 9396, 300, 436, 434, 294, 420, 321, 528, 281, 11, 291, 458, 11, 909, 364, 4497, 2522, 295, 1412, 281, 300, 420, 51398, 51398, 829, 309, 294, 257, 819, 1412, 3877, 420, 2035, 13, 51492, 51492, 1042, 11, 689, 360, 291, 352, 30, 51558, 51558, 509, 727, 362, 411, 472, 10088, 300, 11215, 365, 300, 2522, 295, 309, 13, 51744, 51744, 400, 309, 576, 312, 42687, 13, 51815, 51815], "temperature": 0.0, "avg_logprob": -0.1462677800378134, "compression_ratio": 1.7712177121771218, "no_caption_prob": 6.70891095069237e-05}, {"id": 686, "seek": 254194, "start": 2541.94, "end": 2543.44, "text": " It could even be opaque.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 687, "seek": 254194, "start": 2543.44, "end": 2544.44, "text": " Yes.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 688, "seek": 254194, "start": 2544.44, "end": 2545.44, "text": " Yes.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 689, "seek": 254194, "start": 2545.44, "end": 2546.44, "text": " Guarantees.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 690, "seek": 254194, "start": 2546.44, "end": 2547.44, "text": " Exactly.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 691, "seek": 254194, "start": 2547.44, "end": 2548.44, "text": " It gives you these guarantees.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 692, "seek": 254194, "start": 2548.44, "end": 2552.86, "text": " You can you can just have it as a separate concern and you can reason about it locally.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 693, "seek": 254194, "start": 2552.86, "end": 2557.56, "text": " You can have unit tests that say, hey, here's this piece of this giant data structure.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 694, "seek": 254194, "start": 2557.56, "end": 2562.18, "text": " For performance reasons, we get it back as one giant JSON blob from the server.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 695, "seek": 254194, "start": 2562.18, "end": 2567.04, "text": " But in terms of reasoning about it, I want to think about this piece of it as a unit.", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 696, "seek": 254194, "start": 2567.04, "end": 2571.52, "text": " And perhaps I even want to reuse that piece when we get a different response from the", "tokens": [50364, 467, 727, 754, 312, 42687, 13, 50439, 50439, 1079, 13, 50489, 50489, 1079, 13, 50539, 50539, 2694, 289, 2879, 279, 13, 50589, 50589, 7587, 13, 50639, 50639, 467, 2709, 291, 613, 32567, 13, 50689, 50689, 509, 393, 291, 393, 445, 362, 309, 382, 257, 4994, 3136, 293, 291, 393, 1778, 466, 309, 16143, 13, 50910, 50910, 509, 393, 362, 4985, 6921, 300, 584, 11, 4177, 11, 510, 311, 341, 2522, 295, 341, 7410, 1412, 3877, 13, 51145, 51145, 1171, 3389, 4112, 11, 321, 483, 309, 646, 382, 472, 7410, 31828, 46115, 490, 264, 7154, 13, 51376, 51376, 583, 294, 2115, 295, 21577, 466, 309, 11, 286, 528, 281, 519, 466, 341, 2522, 295, 309, 382, 257, 4985, 13, 51619, 51619, 400, 4317, 286, 754, 528, 281, 26225, 300, 2522, 562, 321, 483, 257, 819, 4134, 490, 264, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.0926625204424486, "compression_ratio": 1.7508532423208192, "no_caption_prob": 9.97281586023746e-06}, {"id": 697, "seek": 257152, "start": 2571.52, "end": 2574.52, "text": " API, when we ask for a specific part of it.", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 698, "seek": 257152, "start": 2574.52, "end": 2578.62, "text": " And so you can sort of like you can separate these pieces out.", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 699, "seek": 257152, "start": 2578.62, "end": 2580.98, "text": " You can use nice opaque types.", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 700, "seek": 257152, "start": 2580.98, "end": 2582.74, "text": " You can get nice test cases on them.", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 701, "seek": 257152, "start": 2582.74, "end": 2587.24, "text": " You can change it locally without going to this one big function that maps everything.", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 702, "seek": 257152, "start": 2587.24, "end": 2592.36, "text": " Like the thing that you have these things co located, the things that like decode into", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 703, "seek": 257152, "start": 2592.36, "end": 2599.12, "text": " this data, the things that like validate this part of the data and know about the JSON structure", "tokens": [50364, 9362, 11, 562, 321, 1029, 337, 257, 2685, 644, 295, 309, 13, 50514, 50514, 400, 370, 291, 393, 1333, 295, 411, 291, 393, 4994, 613, 3755, 484, 13, 50719, 50719, 509, 393, 764, 1481, 42687, 3467, 13, 50837, 50837, 509, 393, 483, 1481, 1500, 3331, 322, 552, 13, 50925, 50925, 509, 393, 1319, 309, 16143, 1553, 516, 281, 341, 472, 955, 2445, 300, 11317, 1203, 13, 51150, 51150, 1743, 264, 551, 300, 291, 362, 613, 721, 598, 6870, 11, 264, 721, 300, 411, 979, 1429, 666, 51406, 51406, 341, 1412, 11, 264, 721, 300, 411, 29562, 341, 644, 295, 264, 1412, 293, 458, 466, 264, 31828, 3877, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09249578080735765, "compression_ratio": 1.8016194331983806, "no_caption_prob": 4.069383430760354e-05}, {"id": 704, "seek": 259912, "start": 2599.12, "end": 2601.88, "text": " of this data and put it into the right format.", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 705, "seek": 259912, "start": 2601.88, "end": 2607.92, "text": " All of those responsibilities are sort of cohesively together and you can isolate them", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 706, "seek": 259912, "start": 2607.92, "end": 2609.2799999999997, "text": " from the from the rest of it.", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 707, "seek": 259912, "start": 2609.2799999999997, "end": 2613.68, "text": " And then you can snap together these different decoders that you've isolated if you need", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 708, "seek": 259912, "start": 2613.68, "end": 2614.8599999999997, "text": " to reuse them.", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 709, "seek": 259912, "start": 2614.8599999999997, "end": 2620.3599999999997, "text": " So I find that it's just a really nice way to organize and structure your data and to", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 710, "seek": 259912, "start": 2620.3599999999997, "end": 2621.88, "text": " think about your code.", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 711, "seek": 259912, "start": 2621.88, "end": 2628.24, "text": " Yeah, I think you say that because you're used to modeling your modules by data type.", "tokens": [50364, 295, 341, 1412, 293, 829, 309, 666, 264, 558, 7877, 13, 50502, 50502, 1057, 295, 729, 16190, 366, 1333, 295, 598, 8076, 3413, 1214, 293, 291, 393, 25660, 552, 50804, 50804, 490, 264, 490, 264, 1472, 295, 309, 13, 50872, 50872, 400, 550, 291, 393, 13650, 1214, 613, 819, 979, 378, 433, 300, 291, 600, 14621, 498, 291, 643, 51092, 51092, 281, 26225, 552, 13, 51151, 51151, 407, 286, 915, 300, 309, 311, 445, 257, 534, 1481, 636, 281, 13859, 293, 3877, 428, 1412, 293, 281, 51426, 51426, 519, 466, 428, 3089, 13, 51502, 51502, 865, 11, 286, 519, 291, 584, 300, 570, 291, 434, 1143, 281, 15983, 428, 16679, 538, 1412, 2010, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.10105386022794044, "compression_ratio": 1.7303370786516854, "no_caption_prob": 1.0615988685458433e-05}, {"id": 712, "seek": 262824, "start": 2628.24, "end": 2636.7599999999998, "text": " So there is something that Evan advises for in this talk, The Life of a File, which is", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 713, "seek": 262824, "start": 2636.7599999999998, "end": 2642.04, "text": " very good advice in my opinion, in my book, my blog.", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 714, "seek": 262824, "start": 2642.04, "end": 2645.2799999999997, "text": " We have one concern around the data type.", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 715, "seek": 262824, "start": 2645.2799999999997, "end": 2650.72, "text": " What you do is you put that data type into a separate module and everything will be cohesively", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 716, "seek": 262824, "start": 2650.72, "end": 2652.8799999999997, "text": " grouped together, as you said.", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 717, "seek": 262824, "start": 2652.8799999999997, "end": 2657.8799999999997, "text": " And that is just something that you need to start getting into your head into your habits", "tokens": [50364, 407, 456, 307, 746, 300, 22613, 1551, 3598, 337, 294, 341, 751, 11, 440, 7720, 295, 257, 26196, 11, 597, 307, 50790, 50790, 588, 665, 5192, 294, 452, 4800, 11, 294, 452, 1446, 11, 452, 6968, 13, 51054, 51054, 492, 362, 472, 3136, 926, 264, 1412, 2010, 13, 51216, 51216, 708, 291, 360, 307, 291, 829, 300, 1412, 2010, 666, 257, 4994, 10088, 293, 1203, 486, 312, 598, 8076, 3413, 51488, 51488, 41877, 1214, 11, 382, 291, 848, 13, 51596, 51596, 400, 300, 307, 445, 746, 300, 291, 643, 281, 722, 1242, 666, 428, 1378, 666, 428, 14100, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.1871790605432847, "compression_ratio": 1.6680672268907564, "no_caption_prob": 3.4803244489012286e-05}, {"id": 718, "seek": 265788, "start": 2657.88, "end": 2664.6, "text": " of grouping things and putting them into a separate module instead of having one giant", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 719, "seek": 265788, "start": 2664.6, "end": 2666.48, "text": " file that does everything.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 720, "seek": 265788, "start": 2666.48, "end": 2670.84, "text": " Otherwise you'll get the same problem as you with your Angular application.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 721, "seek": 265788, "start": 2670.84, "end": 2671.84, "text": " Right.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 722, "seek": 265788, "start": 2671.84, "end": 2672.84, "text": " Right.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 723, "seek": 265788, "start": 2672.84, "end": 2678.84, "text": " And because you can still pretty hard to reason about if you want to.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 724, "seek": 265788, "start": 2678.84, "end": 2683.2000000000003, "text": " You can definitely create premature abstractions where you're going crazy with because you", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 725, "seek": 265788, "start": 2683.2000000000003, "end": 2686.04, "text": " don't necessarily know what's going to be grouped together naturally.", "tokens": [50364, 295, 40149, 721, 293, 3372, 552, 666, 257, 4994, 10088, 2602, 295, 1419, 472, 7410, 50700, 50700, 3991, 300, 775, 1203, 13, 50794, 50794, 10328, 291, 603, 483, 264, 912, 1154, 382, 291, 365, 428, 34107, 3861, 13, 51012, 51012, 1779, 13, 51062, 51062, 1779, 13, 51112, 51112, 400, 570, 291, 393, 920, 1238, 1152, 281, 1778, 466, 498, 291, 528, 281, 13, 51412, 51412, 509, 393, 2138, 1884, 34877, 12649, 626, 689, 291, 434, 516, 3219, 365, 570, 291, 51630, 51630, 500, 380, 4725, 458, 437, 311, 516, 281, 312, 41877, 1214, 8195, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.2367983538695056, "compression_ratio": 1.643939393939394, "no_caption_prob": 9.665996913099661e-06}, {"id": 726, "seek": 268604, "start": 2686.04, "end": 2691.88, "text": " But the point is that you can, the way that JSON decoders work, you can reason about it", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 727, "seek": 268604, "start": 2691.88, "end": 2696.24, "text": " locally because it is this sort of way of transforming data.", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 728, "seek": 268604, "start": 2696.24, "end": 2702.24, "text": " And again, this is just like a broader pattern that you can have everything about how you", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 729, "seek": 268604, "start": 2702.24, "end": 2704.0, "text": " deserialize this data.", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 730, "seek": 268604, "start": 2704.0, "end": 2705.36, "text": " What are the names of the fields?", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 731, "seek": 268604, "start": 2705.36, "end": 2707.5, "text": " What are the raw data types you expect?", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 732, "seek": 268604, "start": 2707.5, "end": 2709.92, "text": " How do you transform those raw data types?", "tokens": [50364, 583, 264, 935, 307, 300, 291, 393, 11, 264, 636, 300, 31828, 979, 378, 433, 589, 11, 291, 393, 1778, 466, 309, 50656, 50656, 16143, 570, 309, 307, 341, 1333, 295, 636, 295, 27210, 1412, 13, 50874, 50874, 400, 797, 11, 341, 307, 445, 411, 257, 13227, 5102, 300, 291, 393, 362, 1203, 466, 577, 291, 51174, 51174, 730, 260, 831, 1125, 341, 1412, 13, 51262, 51262, 708, 366, 264, 5288, 295, 264, 7909, 30, 51330, 51330, 708, 366, 264, 8936, 1412, 3467, 291, 2066, 30, 51437, 51437, 1012, 360, 291, 4088, 729, 8936, 1412, 3467, 30, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.08824107670547938, "compression_ratio": 1.695067264573991, "no_caption_prob": 1.2805201549781486e-05}, {"id": 733, "seek": 270992, "start": 2709.92, "end": 2716.2200000000003, "text": " Those things just belong together and you can sort of hide them in this box and change", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 734, "seek": 270992, "start": 2716.2200000000003, "end": 2720.5, "text": " them in this one place and think about that as one unit.", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 735, "seek": 270992, "start": 2720.5, "end": 2725.6, "text": " Even though it fits into this bigger piece of decoding a giant JSON blob, you can think", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 736, "seek": 270992, "start": 2725.6, "end": 2726.76, "text": " about this one small part of it.", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 737, "seek": 270992, "start": 2726.76, "end": 2729.62, "text": " So it's just a very successful pattern.", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 738, "seek": 270992, "start": 2729.62, "end": 2734.64, "text": " And again, it's a pattern that shows up all over the place in Elm code.", "tokens": [50364, 3950, 721, 445, 5784, 1214, 293, 291, 393, 1333, 295, 6479, 552, 294, 341, 2424, 293, 1319, 50679, 50679, 552, 294, 341, 472, 1081, 293, 519, 466, 300, 382, 472, 4985, 13, 50893, 50893, 2754, 1673, 309, 9001, 666, 341, 3801, 2522, 295, 979, 8616, 257, 7410, 31828, 46115, 11, 291, 393, 519, 51148, 51148, 466, 341, 472, 1359, 644, 295, 309, 13, 51206, 51206, 407, 309, 311, 445, 257, 588, 4406, 5102, 13, 51349, 51349, 400, 797, 11, 309, 311, 257, 5102, 300, 3110, 493, 439, 670, 264, 1081, 294, 2699, 76, 3089, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.09823256791240037, "compression_ratio": 1.6860986547085202, "no_caption_prob": 2.0784706066478975e-05}, {"id": 739, "seek": 273464, "start": 2734.64, "end": 2740.8399999999997, "text": " So, you know, start paying attention to that broader pattern when you have a function for", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 740, "seek": 273464, "start": 2740.8399999999997, "end": 2746.24, "text": " succeed or fail that can stop the validation and say something went wrong.", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 741, "seek": 273464, "start": 2746.24, "end": 2753.08, "text": " Here's the error message to show or, Hey, just don't even try running any real validations", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 742, "seek": 273464, "start": 2753.08, "end": 2754.44, "text": " or anything like that.", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 743, "seek": 273464, "start": 2754.44, "end": 2760.4, "text": " Just give this value or you can have actual decoders or validators or whatever, be on", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 744, "seek": 273464, "start": 2760.4, "end": 2762.44, "text": " the lookout for that pattern.", "tokens": [50364, 407, 11, 291, 458, 11, 722, 6229, 3202, 281, 300, 13227, 5102, 562, 291, 362, 257, 2445, 337, 50674, 50674, 7754, 420, 3061, 300, 393, 1590, 264, 24071, 293, 584, 746, 1437, 2085, 13, 50944, 50944, 1692, 311, 264, 6713, 3636, 281, 855, 420, 11, 1911, 11, 445, 500, 380, 754, 853, 2614, 604, 957, 7363, 763, 51286, 51286, 420, 1340, 411, 300, 13, 51354, 51354, 1449, 976, 341, 2158, 420, 291, 393, 362, 3539, 979, 378, 433, 420, 7363, 3391, 420, 2035, 11, 312, 322, 51652, 51652, 264, 41025, 337, 300, 5102, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.11933267359830896, "compression_ratio": 1.6837606837606838, "no_caption_prob": 9.460585715714842e-05}, {"id": 745, "seek": 276244, "start": 2762.44, "end": 2766.7200000000003, "text": " There was another point that I think is interesting on this topic.", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 746, "seek": 276244, "start": 2766.7200000000003, "end": 2769.36, "text": " We talked about, should you generate your decoders?", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 747, "seek": 276244, "start": 2769.36, "end": 2771.76, "text": " And we talked about these different tools for that.", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 748, "seek": 276244, "start": 2771.76, "end": 2777.44, "text": " As I've gotten used to writing decoders in Elm, at first I found them intimidating.", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 749, "seek": 276244, "start": 2777.44, "end": 2783.36, "text": " And once I got some practice generating, it doesn't seem that useful to me because it's", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 750, "seek": 276244, "start": 2783.36, "end": 2784.4, "text": " so easy to write it.", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 751, "seek": 276244, "start": 2784.4, "end": 2788.98, "text": " I can just like write the code and it's not that big a deal because you have enough practice", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 752, "seek": 276244, "start": 2788.98, "end": 2791.84, "text": " and you become comfortable with those concepts.", "tokens": [50364, 821, 390, 1071, 935, 300, 286, 519, 307, 1880, 322, 341, 4829, 13, 50578, 50578, 492, 2825, 466, 11, 820, 291, 8460, 428, 979, 378, 433, 30, 50710, 50710, 400, 321, 2825, 466, 613, 819, 3873, 337, 300, 13, 50830, 50830, 1018, 286, 600, 5768, 1143, 281, 3579, 979, 378, 433, 294, 2699, 76, 11, 412, 700, 286, 1352, 552, 29714, 13, 51114, 51114, 400, 1564, 286, 658, 512, 3124, 17746, 11, 309, 1177, 380, 1643, 300, 4420, 281, 385, 570, 309, 311, 51410, 51410, 370, 1858, 281, 2464, 309, 13, 51462, 51462, 286, 393, 445, 411, 2464, 264, 3089, 293, 309, 311, 406, 300, 955, 257, 2028, 570, 291, 362, 1547, 3124, 51691, 51691, 293, 291, 1813, 4619, 365, 729, 10392, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.1289273509829063, "compression_ratio": 1.696969696969697, "no_caption_prob": 3.373602157807909e-05}, {"id": 753, "seek": 279184, "start": 2791.84, "end": 2796.48, "text": " But it takes time and it's good to like break things down.", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 754, "seek": 279184, "start": 2796.48, "end": 2801.6400000000003, "text": " So some people who are new to Elm say, well, why can't we use something like this approach", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 755, "seek": 279184, "start": 2801.6400000000003, "end": 2806.28, "text": " that Haskell uses where you can automatically generate something that decodes data based", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 756, "seek": 279184, "start": 2806.28, "end": 2807.6000000000004, "text": " on the data type.", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 757, "seek": 279184, "start": 2807.6000000000004, "end": 2811.0, "text": " So Evan has a really interesting document on this.", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 758, "seek": 279184, "start": 2811.0, "end": 2814.48, "text": " It's called a vision for data interchange in Elm.", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 759, "seek": 279184, "start": 2814.48, "end": 2820.0, "text": " And he touches on that and he talks about his experience using these automatically generated", "tokens": [50364, 583, 309, 2516, 565, 293, 309, 311, 665, 281, 411, 1821, 721, 760, 13, 50596, 50596, 407, 512, 561, 567, 366, 777, 281, 2699, 76, 584, 11, 731, 11, 983, 393, 380, 321, 764, 746, 411, 341, 3109, 50854, 50854, 300, 8646, 43723, 4960, 689, 291, 393, 6772, 8460, 746, 300, 979, 4789, 1412, 2361, 51086, 51086, 322, 264, 1412, 2010, 13, 51152, 51152, 407, 22613, 575, 257, 534, 1880, 4166, 322, 341, 13, 51322, 51322, 467, 311, 1219, 257, 5201, 337, 1412, 30358, 294, 2699, 76, 13, 51496, 51496, 400, 415, 17431, 322, 300, 293, 415, 6686, 466, 702, 1752, 1228, 613, 6772, 10833, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.08609023662882113, "compression_ratio": 1.6981132075471699, "no_caption_prob": 3.120097971986979e-05}, {"id": 760, "seek": 282000, "start": 2820.0, "end": 2823.24, "text": " decoders and he says, well, yeah, you can do that.", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 761, "seek": 282000, "start": 2823.24, "end": 2829.56, "text": " But in my experience, debugging an error when it's coming from an implicitly generated thing", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 762, "seek": 282000, "start": 2829.56, "end": 2836.68, "text": " based on the type signature is a lot harder to debug because I don't know where to look.", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 763, "seek": 282000, "start": 2836.68, "end": 2840.12, "text": " I don't know how to change it to make it work.", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 764, "seek": 282000, "start": 2840.12, "end": 2841.2, "text": " So that's another piece of it.", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 765, "seek": 282000, "start": 2841.2, "end": 2846.04, "text": " The fact that JSON decoders are explicit is very in line with the values of Elm, which", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 766, "seek": 282000, "start": 2846.04, "end": 2848.86, "text": " is there are worse things than being explicit.", "tokens": [50364, 979, 378, 433, 293, 415, 1619, 11, 731, 11, 1338, 11, 291, 393, 360, 300, 13, 50526, 50526, 583, 294, 452, 1752, 11, 45592, 364, 6713, 562, 309, 311, 1348, 490, 364, 26947, 356, 10833, 551, 50842, 50842, 2361, 322, 264, 2010, 13397, 307, 257, 688, 6081, 281, 24083, 570, 286, 500, 380, 458, 689, 281, 574, 13, 51198, 51198, 286, 500, 380, 458, 577, 281, 1319, 309, 281, 652, 309, 589, 13, 51370, 51370, 407, 300, 311, 1071, 2522, 295, 309, 13, 51424, 51424, 440, 1186, 300, 31828, 979, 378, 433, 366, 13691, 307, 588, 294, 1622, 365, 264, 4190, 295, 2699, 76, 11, 597, 51666, 51666, 307, 456, 366, 5324, 721, 813, 885, 13691, 13, 51807, 51807], "temperature": 0.0, "avg_logprob": -0.0710508961322879, "compression_ratio": 1.6028880866425992, "no_caption_prob": 1.3006908375245985e-05}, {"id": 767, "seek": 284886, "start": 2848.86, "end": 2854.56, "text": " Like is that really the bottleneck to you writing maintainable, easy to change and not", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 768, "seek": 284886, "start": 2854.56, "end": 2857.34, "text": " so error prone code?", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 769, "seek": 284886, "start": 2857.34, "end": 2859.88, "text": " Like that's not the problem.", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 770, "seek": 284886, "start": 2859.88, "end": 2861.04, "text": " Spoiler plate.", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 771, "seek": 284886, "start": 2861.04, "end": 2863.78, "text": " That's not the thing keeping you from moving fast in your application.", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 772, "seek": 284886, "start": 2863.78, "end": 2868.1200000000003, "text": " The thing keeping you from moving fast is something changes on your server the way that", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 773, "seek": 284886, "start": 2868.1200000000003, "end": 2874.2400000000002, "text": " your code is serialized and now your decoders broke, but they were being generated implicitly", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 774, "seek": 284886, "start": 2874.2400000000002, "end": 2876.4, "text": " based on your type signatures.", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 775, "seek": 284886, "start": 2876.4, "end": 2878.08, "text": " And how the heck do I fix it?", "tokens": [50364, 1743, 307, 300, 534, 264, 44641, 547, 281, 291, 3579, 6909, 712, 11, 1858, 281, 1319, 293, 406, 50649, 50649, 370, 6713, 25806, 3089, 30, 50788, 50788, 1743, 300, 311, 406, 264, 1154, 13, 50915, 50915, 45011, 5441, 5924, 13, 50973, 50973, 663, 311, 406, 264, 551, 5145, 291, 490, 2684, 2370, 294, 428, 3861, 13, 51110, 51110, 440, 551, 5145, 291, 490, 2684, 2370, 307, 746, 2962, 322, 428, 7154, 264, 636, 300, 51327, 51327, 428, 3089, 307, 17436, 1602, 293, 586, 428, 979, 378, 433, 6902, 11, 457, 436, 645, 885, 10833, 26947, 356, 51633, 51633, 2361, 322, 428, 2010, 32322, 13, 51741, 51741, 400, 577, 264, 12872, 360, 286, 3191, 309, 30, 51825, 51825], "temperature": 0.0, "avg_logprob": -0.13777849854541427, "compression_ratio": 1.7613636363636365, "no_caption_prob": 8.349071867996827e-05}, {"id": 776, "seek": 287808, "start": 2878.08, "end": 2881.08, "text": " I explained that to your backend engineers.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 777, "seek": 287808, "start": 2881.08, "end": 2882.08, "text": " You broke it.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 778, "seek": 287808, "start": 2882.08, "end": 2885.08, "text": " They're like, what?", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 779, "seek": 287808, "start": 2885.08, "end": 2887.52, "text": " That's your problem, frontend developer.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 780, "seek": 287808, "start": 2887.52, "end": 2888.52, "text": " Yeah.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 781, "seek": 287808, "start": 2888.52, "end": 2889.52, "text": " Yeah.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 782, "seek": 287808, "start": 2889.52, "end": 2890.52, "text": " Yeah.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 783, "seek": 287808, "start": 2890.52, "end": 2894.24, "text": " The JSON decoders get the decoupling really nicely.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 784, "seek": 287808, "start": 2894.24, "end": 2896.0, "text": " It's just a really elegant pattern.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 785, "seek": 287808, "start": 2896.0, "end": 2898.24, "text": " And once you get used to it, you'll learn to love them.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 786, "seek": 287808, "start": 2898.24, "end": 2902.56, "text": " Maybe it's Stockholm syndrome, but we're too far gone at this point.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 787, "seek": 287808, "start": 2902.56, "end": 2907.72, "text": " I feel like I never had much trouble with JSON myself.", "tokens": [50364, 286, 8825, 300, 281, 428, 38087, 11955, 13, 50514, 50514, 509, 6902, 309, 13, 50564, 50564, 814, 434, 411, 11, 437, 30, 50714, 50714, 663, 311, 428, 1154, 11, 1868, 521, 10754, 13, 50836, 50836, 865, 13, 50886, 50886, 865, 13, 50936, 50936, 865, 13, 50986, 50986, 440, 31828, 979, 378, 433, 483, 264, 979, 263, 11970, 534, 9594, 13, 51172, 51172, 467, 311, 445, 257, 534, 21117, 5102, 13, 51260, 51260, 400, 1564, 291, 483, 1143, 281, 309, 11, 291, 603, 1466, 281, 959, 552, 13, 51372, 51372, 2704, 309, 311, 38730, 19371, 11, 457, 321, 434, 886, 1400, 2780, 412, 341, 935, 13, 51588, 51588, 286, 841, 411, 286, 1128, 632, 709, 5253, 365, 31828, 2059, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.24905989422061578, "compression_ratio": 1.5245283018867926, "no_caption_prob": 7.72200437495485e-05}, {"id": 788, "seek": 290772, "start": 2907.72, "end": 2914.5, "text": " That's because my first work on Elm was working on Elm Lint, the previous name for Elm review.", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 789, "seek": 290772, "start": 2914.5, "end": 2919.72, "text": " So it was something not frontend related for months, maybe years before I really started", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 790, "seek": 290772, "start": 2919.72, "end": 2923.16, "text": " working on frontend work.", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 791, "seek": 290772, "start": 2923.16, "end": 2928.6, "text": " And I just kept seeing people say, wow, JSON decoders are really hard.", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 792, "seek": 290772, "start": 2928.6, "end": 2929.6, "text": " How do you do this?", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 793, "seek": 290772, "start": 2929.6, "end": 2932.16, "text": " How do you handle this case?", "tokens": [50364, 663, 311, 570, 452, 700, 589, 322, 2699, 76, 390, 1364, 322, 2699, 76, 441, 686, 11, 264, 3894, 1315, 337, 2699, 76, 3131, 13, 50703, 50703, 407, 309, 390, 746, 406, 1868, 521, 4077, 337, 2493, 11, 1310, 924, 949, 286, 534, 1409, 50964, 50964, 1364, 322, 1868, 521, 589, 13, 51136, 51136, 400, 286, 445, 4305, 2577, 561, 584, 11, 6076, 11, 31828, 979, 378, 433, 366, 534, 1152, 13, 51408, 51408, 1012, 360, 291, 360, 341, 30, 51458, 51458, 1012, 360, 291, 4813, 341, 1389, 30, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.14544455210367838, "compression_ratio": 1.5446009389671362, "no_caption_prob": 9.026668703882024e-05}, {"id": 794, "seek": 293216, "start": 2932.16, "end": 2938.2, "text": " And I just read all the Slack conversations and I learned that way.", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 795, "seek": 293216, "start": 2938.2, "end": 2939.2, "text": " Interesting.", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 796, "seek": 293216, "start": 2939.2, "end": 2941.2, "text": " That was very nice for me.", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 797, "seek": 293216, "start": 2941.2, "end": 2942.2, "text": " Yeah.", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 798, "seek": 293216, "start": 2942.2, "end": 2943.2, "text": " That makes sense.", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 799, "seek": 293216, "start": 2943.2, "end": 2947.3999999999996, "text": " I mean, I think one of the things that can be hard to wrap your brain around with JSON", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 800, "seek": 293216, "start": 2947.3999999999996, "end": 2952.96, "text": " decoders when you're new to Elm is sometimes it feels like, why can't I just have a JSON", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 801, "seek": 293216, "start": 2952.96, "end": 2953.96, "text": " decoder?", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 802, "seek": 293216, "start": 2953.96, "end": 2958.2, "text": " Why can't I build one up by passing a list of JSON decoders somewhere?", "tokens": [50364, 400, 286, 445, 1401, 439, 264, 37211, 7315, 293, 286, 3264, 300, 636, 13, 50666, 50666, 14711, 13, 50716, 50716, 663, 390, 588, 1481, 337, 385, 13, 50816, 50816, 865, 13, 50866, 50866, 663, 1669, 2020, 13, 50916, 50916, 286, 914, 11, 286, 519, 472, 295, 264, 721, 300, 393, 312, 1152, 281, 7019, 428, 3567, 926, 365, 31828, 51126, 51126, 979, 378, 433, 562, 291, 434, 777, 281, 2699, 76, 307, 2171, 309, 3417, 411, 11, 983, 393, 380, 286, 445, 362, 257, 31828, 51404, 51404, 979, 19866, 30, 51454, 51454, 1545, 393, 380, 286, 1322, 472, 493, 538, 8437, 257, 1329, 295, 31828, 979, 378, 433, 4079, 30, 51666, 51666], "temperature": 0.0, "avg_logprob": -0.15544707315009937, "compression_ratio": 1.579591836734694, "no_caption_prob": 4.198452734271996e-05}, {"id": 803, "seek": 295820, "start": 2958.2, "end": 2963.24, "text": " And then it gives me like, oh, here was a JSON decoder for an int and a JSON decoder", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 804, "seek": 295820, "start": 2963.24, "end": 2964.3599999999997, "text": " for a string.", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 805, "seek": 295820, "start": 2964.3599999999997, "end": 2968.24, "text": " And just give me a JSON decoder from that list that I passed to you.", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 806, "seek": 295820, "start": 2968.24, "end": 2974.8399999999997, "text": " But the way that Elm works, you have to understand how these types change as you apply functions.", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 807, "seek": 295820, "start": 2974.8399999999997, "end": 2981.12, "text": " And if you just pass in a list of things, then those things must have the same type", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 808, "seek": 295820, "start": 2981.12, "end": 2982.3599999999997, "text": " for one thing.", "tokens": [50364, 400, 550, 309, 2709, 385, 411, 11, 1954, 11, 510, 390, 257, 31828, 979, 19866, 337, 364, 560, 293, 257, 31828, 979, 19866, 50616, 50616, 337, 257, 6798, 13, 50672, 50672, 400, 445, 976, 385, 257, 31828, 979, 19866, 490, 300, 1329, 300, 286, 4678, 281, 291, 13, 50866, 50866, 583, 264, 636, 300, 2699, 76, 1985, 11, 291, 362, 281, 1223, 577, 613, 3467, 1319, 382, 291, 3079, 6828, 13, 51196, 51196, 400, 498, 291, 445, 1320, 294, 257, 1329, 295, 721, 11, 550, 729, 721, 1633, 362, 264, 912, 2010, 51510, 51510, 337, 472, 551, 13, 51572, 51572], "temperature": 0.0, "avg_logprob": -0.0989083682789522, "compression_ratio": 1.6930232558139535, "no_caption_prob": 2.014535311900545e-05}, {"id": 809, "seek": 298236, "start": 2982.36, "end": 2988.9, "text": " So you can't just have these different things and have it transform the type signature.", "tokens": [50364, 407, 291, 393, 380, 445, 362, 613, 819, 721, 293, 362, 309, 4088, 264, 2010, 13397, 13, 50691, 50691, 407, 309, 311, 257, 1238, 7339, 551, 767, 300, 2516, 512, 565, 562, 291, 434, 777, 281, 2699, 76, 281, 50938, 50938, 483, 341, 2020, 295, 577, 5141, 6828, 611, 2758, 1660, 264, 3467, 707, 538, 707, 13, 51230, 51230, 407, 291, 434, 1566, 11, 510, 311, 257, 31828, 979, 1429, 5893, 6798, 13, 51418, 51418, 583, 731, 11, 286, 767, 528, 281, 747, 341, 6798, 293, 286, 528, 281, 8947, 264, 1064, 490, 341, 25042, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10246674701420948, "compression_ratio": 1.6088709677419355, "no_caption_prob": 4.198323222226463e-05}, {"id": 810, "seek": 298236, "start": 2988.9, "end": 2993.84, "text": " So it's a pretty advanced thing actually that takes some time when you're new to Elm to", "tokens": [50364, 407, 291, 393, 380, 445, 362, 613, 819, 721, 293, 362, 309, 4088, 264, 2010, 13397, 13, 50691, 50691, 407, 309, 311, 257, 1238, 7339, 551, 767, 300, 2516, 512, 565, 562, 291, 434, 777, 281, 2699, 76, 281, 50938, 50938, 483, 341, 2020, 295, 577, 5141, 6828, 611, 2758, 1660, 264, 3467, 707, 538, 707, 13, 51230, 51230, 407, 291, 434, 1566, 11, 510, 311, 257, 31828, 979, 1429, 5893, 6798, 13, 51418, 51418, 583, 731, 11, 286, 767, 528, 281, 747, 341, 6798, 293, 286, 528, 281, 8947, 264, 1064, 490, 341, 25042, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10246674701420948, "compression_ratio": 1.6088709677419355, "no_caption_prob": 4.198323222226463e-05}, {"id": 811, "seek": 298236, "start": 2993.84, "end": 2999.6800000000003, "text": " get this sense of how calling functions also massages the types little by little.", "tokens": [50364, 407, 291, 393, 380, 445, 362, 613, 819, 721, 293, 362, 309, 4088, 264, 2010, 13397, 13, 50691, 50691, 407, 309, 311, 257, 1238, 7339, 551, 767, 300, 2516, 512, 565, 562, 291, 434, 777, 281, 2699, 76, 281, 50938, 50938, 483, 341, 2020, 295, 577, 5141, 6828, 611, 2758, 1660, 264, 3467, 707, 538, 707, 13, 51230, 51230, 407, 291, 434, 1566, 11, 510, 311, 257, 31828, 979, 1429, 5893, 6798, 13, 51418, 51418, 583, 731, 11, 286, 767, 528, 281, 747, 341, 6798, 293, 286, 528, 281, 8947, 264, 1064, 490, 341, 25042, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10246674701420948, "compression_ratio": 1.6088709677419355, "no_caption_prob": 4.198323222226463e-05}, {"id": 812, "seek": 298236, "start": 2999.6800000000003, "end": 3003.44, "text": " So you're saying, here's a JSON decode dot string.", "tokens": [50364, 407, 291, 393, 380, 445, 362, 613, 819, 721, 293, 362, 309, 4088, 264, 2010, 13397, 13, 50691, 50691, 407, 309, 311, 257, 1238, 7339, 551, 767, 300, 2516, 512, 565, 562, 291, 434, 777, 281, 2699, 76, 281, 50938, 50938, 483, 341, 2020, 295, 577, 5141, 6828, 611, 2758, 1660, 264, 3467, 707, 538, 707, 13, 51230, 51230, 407, 291, 434, 1566, 11, 510, 311, 257, 31828, 979, 1429, 5893, 6798, 13, 51418, 51418, 583, 731, 11, 286, 767, 528, 281, 747, 341, 6798, 293, 286, 528, 281, 8947, 264, 1064, 490, 341, 25042, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10246674701420948, "compression_ratio": 1.6088709677419355, "no_caption_prob": 4.198323222226463e-05}, {"id": 813, "seek": 298236, "start": 3003.44, "end": 3011.6800000000003, "text": " But well, I actually want to take this string and I want to extract the year from this ISO", "tokens": [50364, 407, 291, 393, 380, 445, 362, 613, 819, 721, 293, 362, 309, 4088, 264, 2010, 13397, 13, 50691, 50691, 407, 309, 311, 257, 1238, 7339, 551, 767, 300, 2516, 512, 565, 562, 291, 434, 777, 281, 2699, 76, 281, 50938, 50938, 483, 341, 2020, 295, 577, 5141, 6828, 611, 2758, 1660, 264, 3467, 707, 538, 707, 13, 51230, 51230, 407, 291, 434, 1566, 11, 510, 311, 257, 31828, 979, 1429, 5893, 6798, 13, 51418, 51418, 583, 731, 11, 286, 767, 528, 281, 747, 341, 6798, 293, 286, 528, 281, 8947, 264, 1064, 490, 341, 25042, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.10246674701420948, "compression_ratio": 1.6088709677419355, "no_caption_prob": 4.198323222226463e-05}, {"id": 814, "seek": 301168, "start": 3011.68, "end": 3012.68, "text": " 8601 date.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 815, "seek": 301168, "start": 3012.68, "end": 3019.2799999999997, "text": " I still get so impressed when you say that.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 816, "seek": 301168, "start": 3019.2799999999997, "end": 3020.2799999999997, "text": " It feels like magic.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 817, "seek": 301168, "start": 3020.2799999999997, "end": 3022.2799999999997, "text": " Say it again.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 818, "seek": 301168, "start": 3022.2799999999997, "end": 3029.68, "text": " It's just a manifestation of the trauma I've been through dealing with that type too much.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 819, "seek": 301168, "start": 3029.68, "end": 3030.68, "text": " But...", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 820, "seek": 301168, "start": 3030.68, "end": 3033.2799999999997, "text": " Extract the year, you said?", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 821, "seek": 301168, "start": 3033.2799999999997, "end": 3034.2799999999997, "text": " Yeah.", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 822, "seek": 301168, "start": 3034.2799999999997, "end": 3040.08, "text": " So if you're trying to extract the year, you have to understand that you take this JSON", "tokens": [50364, 1649, 4550, 16, 4002, 13, 50414, 50414, 286, 920, 483, 370, 11679, 562, 291, 584, 300, 13, 50744, 50744, 467, 3417, 411, 5585, 13, 50794, 50794, 6463, 309, 797, 13, 50894, 50894, 467, 311, 445, 257, 29550, 295, 264, 11407, 286, 600, 668, 807, 6260, 365, 300, 2010, 886, 709, 13, 51264, 51264, 583, 485, 51314, 51314, 9881, 1897, 264, 1064, 11, 291, 848, 30, 51444, 51444, 865, 13, 51494, 51494, 407, 498, 291, 434, 1382, 281, 8947, 264, 1064, 11, 291, 362, 281, 1223, 300, 291, 747, 341, 31828, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.24144144261136968, "compression_ratio": 1.4644549763033174, "no_caption_prob": 4.0061997424345464e-05}, {"id": 823, "seek": 304008, "start": 3040.08, "end": 3046.6, "text": " decode string and then you apply a JSON decode map function, which is going to take a string", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 824, "seek": 304008, "start": 3046.6, "end": 3048.0, "text": " decoder.", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 825, "seek": 304008, "start": 3048.0, "end": 3053.8199999999997, "text": " So it's going to take a value of type decoder string and it's going to transform that into", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 826, "seek": 304008, "start": 3053.8199999999997, "end": 3055.7999999999997, "text": " a type decoder int.", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 827, "seek": 304008, "start": 3055.7999999999997, "end": 3059.88, "text": " And so you can apply that and transform the type of your decoders.", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 828, "seek": 304008, "start": 3059.88, "end": 3063.7999999999997, "text": " And then you can take, you know, you could take something if you do map two, you could", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 829, "seek": 304008, "start": 3063.7999999999997, "end": 3069.88, "text": " take something that takes a decoder of type string and a decoder of type int and it decodes", "tokens": [50364, 979, 1429, 6798, 293, 550, 291, 3079, 257, 31828, 979, 1429, 4471, 2445, 11, 597, 307, 516, 281, 747, 257, 6798, 50690, 50690, 979, 19866, 13, 50760, 50760, 407, 309, 311, 516, 281, 747, 257, 2158, 295, 2010, 979, 19866, 6798, 293, 309, 311, 516, 281, 4088, 300, 666, 51051, 51051, 257, 2010, 979, 19866, 560, 13, 51150, 51150, 400, 370, 291, 393, 3079, 300, 293, 4088, 264, 2010, 295, 428, 979, 378, 433, 13, 51354, 51354, 400, 550, 291, 393, 747, 11, 291, 458, 11, 291, 727, 747, 746, 498, 291, 360, 4471, 732, 11, 291, 727, 51550, 51550, 747, 746, 300, 2516, 257, 979, 19866, 295, 2010, 6798, 293, 257, 979, 19866, 295, 2010, 560, 293, 309, 979, 4789, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.1017414321899414, "compression_ratio": 2.1502347417840375, "no_caption_prob": 2.35521474678535e-05}, {"id": 830, "seek": 306988, "start": 3069.88, "end": 3076.04, "text": " it into a decoder of type album, which is our type alias for the album record type.", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 831, "seek": 306988, "start": 3076.04, "end": 3079.84, "text": " So I mean, I don't know, it's the kind of thing that when you're just saying it, it", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 832, "seek": 306988, "start": 3079.84, "end": 3084.96, "text": " sounds so simple, but it takes time for your brain to get used to that, to how these types", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 833, "seek": 306988, "start": 3084.96, "end": 3091.76, "text": " sort of fold together and how applying these map functions transforms things.", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 834, "seek": 306988, "start": 3091.76, "end": 3092.76, "text": " Yeah.", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 835, "seek": 306988, "start": 3092.76, "end": 3095.04, "text": " Well, as you said, it's an advanced topic.", "tokens": [50364, 309, 666, 257, 979, 19866, 295, 2010, 6030, 11, 597, 307, 527, 2010, 419, 4609, 337, 264, 6030, 2136, 2010, 13, 50672, 50672, 407, 286, 914, 11, 286, 500, 380, 458, 11, 309, 311, 264, 733, 295, 551, 300, 562, 291, 434, 445, 1566, 309, 11, 309, 50862, 50862, 3263, 370, 2199, 11, 457, 309, 2516, 565, 337, 428, 3567, 281, 483, 1143, 281, 300, 11, 281, 577, 613, 3467, 51118, 51118, 1333, 295, 4860, 1214, 293, 577, 9275, 613, 4471, 6828, 35592, 721, 13, 51458, 51458, 865, 13, 51508, 51508, 1042, 11, 382, 291, 848, 11, 309, 311, 364, 7339, 4829, 13, 51622, 51622], "temperature": 0.0, "avg_logprob": -0.1078660020204348, "compression_ratio": 1.6041666666666667, "no_caption_prob": 2.84086763713276e-05}, {"id": 836, "seek": 309504, "start": 3095.04, "end": 3101.4, "text": " The problem with them is that they are an advanced topic, although they're not that", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 837, "seek": 309504, "start": 3101.4, "end": 3103.44, "text": " hard when you get used to it.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 838, "seek": 309504, "start": 3103.44, "end": 3107.64, "text": " So they're advanced, but they happen at a point in your learning that is pretty early", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 839, "seek": 309504, "start": 3107.64, "end": 3108.64, "text": " on.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 840, "seek": 309504, "start": 3108.64, "end": 3109.64, "text": " Exactly.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 841, "seek": 309504, "start": 3109.64, "end": 3113.44, "text": " So people who are used to doing JavaScript front end development, for instance, they're", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 842, "seek": 309504, "start": 3113.44, "end": 3115.8, "text": " used to making HTTP calls.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 843, "seek": 309504, "start": 3115.8, "end": 3118.56, "text": " So they're used to getting data from the server.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 844, "seek": 309504, "start": 3118.56, "end": 3122.36, "text": " And that's one of the first things they will try to do before other things.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 845, "seek": 309504, "start": 3122.36, "end": 3123.36, "text": " Yeah.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 846, "seek": 309504, "start": 3123.36, "end": 3124.36, "text": " Yes.", "tokens": [50364, 440, 1154, 365, 552, 307, 300, 436, 366, 364, 7339, 4829, 11, 4878, 436, 434, 406, 300, 50682, 50682, 1152, 562, 291, 483, 1143, 281, 309, 13, 50784, 50784, 407, 436, 434, 7339, 11, 457, 436, 1051, 412, 257, 935, 294, 428, 2539, 300, 307, 1238, 2440, 50994, 50994, 322, 13, 51044, 51044, 7587, 13, 51094, 51094, 407, 561, 567, 366, 1143, 281, 884, 15778, 1868, 917, 3250, 11, 337, 5197, 11, 436, 434, 51284, 51284, 1143, 281, 1455, 33283, 5498, 13, 51402, 51402, 407, 436, 434, 1143, 281, 1242, 1412, 490, 264, 7154, 13, 51540, 51540, 400, 300, 311, 472, 295, 264, 700, 721, 436, 486, 853, 281, 360, 949, 661, 721, 13, 51730, 51730, 865, 13, 51780, 51780, 1079, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.11272130693708148, "compression_ratio": 1.7022058823529411, "no_caption_prob": 2.6687272111303173e-05}, {"id": 847, "seek": 312436, "start": 3124.36, "end": 3127.4, "text": " I completely agree that you couldn't have said it better.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 848, "seek": 312436, "start": 3127.4, "end": 3130.88, "text": " It's an advanced topic, but one that comes up right away.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 849, "seek": 312436, "start": 3130.88, "end": 3134.88, "text": " Maybe in some cases, for some people, that will be one of the first things they will", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 850, "seek": 312436, "start": 3134.88, "end": 3135.88, "text": " try actually.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 851, "seek": 312436, "start": 3135.88, "end": 3136.88, "text": " Exactly.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 852, "seek": 312436, "start": 3136.88, "end": 3137.88, "text": " Don't do that.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 853, "seek": 312436, "start": 3137.88, "end": 3138.88, "text": " Right.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 854, "seek": 312436, "start": 3138.88, "end": 3139.88, "text": " Right.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 855, "seek": 312436, "start": 3139.88, "end": 3140.88, "text": " Okay.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 856, "seek": 312436, "start": 3140.88, "end": 3144.48, "text": " So a couple of tips for sort of easing that learning curve for JSON decoders.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 857, "seek": 312436, "start": 3144.48, "end": 3146.7400000000002, "text": " At least I found this very helpful.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 858, "seek": 312436, "start": 3146.7400000000002, "end": 3151.04, "text": " One thing is understand the JSON.decode.map function.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 859, "seek": 312436, "start": 3151.04, "end": 3152.56, "text": " Play around with that.", "tokens": [50364, 286, 2584, 3986, 300, 291, 2809, 380, 362, 848, 309, 1101, 13, 50516, 50516, 467, 311, 364, 7339, 4829, 11, 457, 472, 300, 1487, 493, 558, 1314, 13, 50690, 50690, 2704, 294, 512, 3331, 11, 337, 512, 561, 11, 300, 486, 312, 472, 295, 264, 700, 721, 436, 486, 50890, 50890, 853, 767, 13, 50940, 50940, 7587, 13, 50990, 50990, 1468, 380, 360, 300, 13, 51040, 51040, 1779, 13, 51090, 51090, 1779, 13, 51140, 51140, 1033, 13, 51190, 51190, 407, 257, 1916, 295, 6082, 337, 1333, 295, 1195, 278, 300, 2539, 7605, 337, 31828, 979, 378, 433, 13, 51370, 51370, 1711, 1935, 286, 1352, 341, 588, 4961, 13, 51483, 51483, 1485, 551, 307, 1223, 264, 31828, 13, 1479, 22332, 13, 24223, 2445, 13, 51698, 51698, 5506, 926, 365, 300, 13, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.1256902466959028, "compression_ratio": 1.6268115942028984, "no_caption_prob": 1.618745955056511e-05}, {"id": 860, "seek": 315256, "start": 3152.56, "end": 3157.88, "text": " And in fact, forget the map seven, map two functions.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 861, "seek": 315256, "start": 3157.88, "end": 3160.36, "text": " Just try JSON.decode.map.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 862, "seek": 315256, "start": 3160.36, "end": 3164.4, "text": " Take a string decoder and map that string into an int.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 863, "seek": 315256, "start": 3164.4, "end": 3170.04, "text": " Like decode a JSON string into an integer value or fail if it's not a string that's", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 864, "seek": 315256, "start": 3170.04, "end": 3171.5, "text": " wrapping an integer.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 865, "seek": 315256, "start": 3171.5, "end": 3172.7999999999997, "text": " Try something like that.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 866, "seek": 315256, "start": 3172.7999999999997, "end": 3178.84, "text": " Just to give yourself a sense of how mapping feels, how you can write it, how you can transform", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 867, "seek": 315256, "start": 3178.84, "end": 3180.64, "text": " types in your pipeline.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 868, "seek": 315256, "start": 3180.64, "end": 3181.64, "text": " That's one thing.", "tokens": [50364, 400, 294, 1186, 11, 2870, 264, 4471, 3407, 11, 4471, 732, 6828, 13, 50630, 50630, 1449, 853, 31828, 13, 1479, 22332, 13, 24223, 13, 50754, 50754, 3664, 257, 6798, 979, 19866, 293, 4471, 300, 6798, 666, 364, 560, 13, 50956, 50956, 1743, 979, 1429, 257, 31828, 6798, 666, 364, 24922, 2158, 420, 3061, 498, 309, 311, 406, 257, 6798, 300, 311, 51238, 51238, 21993, 364, 24922, 13, 51311, 51311, 6526, 746, 411, 300, 13, 51376, 51376, 1449, 281, 976, 1803, 257, 2020, 295, 577, 18350, 3417, 11, 577, 291, 393, 2464, 309, 11, 577, 291, 393, 4088, 51678, 51678, 3467, 294, 428, 15517, 13, 51768, 51768, 663, 311, 472, 551, 13, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.11216201782226562, "compression_ratio": 1.7253218884120172, "no_caption_prob": 1.1659287338261493e-05}, {"id": 869, "seek": 318164, "start": 3181.64, "end": 3185.56, "text": " I think a second thing that people get tripped up on that's like a low level building block", "tokens": [50364, 286, 519, 257, 1150, 551, 300, 561, 483, 1376, 3320, 493, 322, 300, 311, 411, 257, 2295, 1496, 2390, 3461, 50560, 50560, 295, 979, 378, 433, 300, 311, 534, 4965, 281, 577, 291, 1322, 979, 378, 433, 307, 2136, 2010, 10198, 1957, 13, 50838, 50838, 407, 472, 551, 436, 500, 380, 2924, 291, 11, 309, 311, 1333, 295, 364, 26947, 4978, 300, 1943, 380, 411, 291, 445, 51190, 51190, 1466, 309, 538, 2577, 309, 1051, 257, 688, 13, 51336, 51336, 1133, 286, 584, 2010, 419, 4609, 6030, 6915, 512, 2136, 11, 309, 311, 767, 2902, 385, 257, 2010, 47479, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.08859303854044201, "compression_ratio": 1.6986899563318778, "no_caption_prob": 2.144472637155559e-05}, {"id": 870, "seek": 318164, "start": 3185.56, "end": 3191.12, "text": " of decoders that's really core to how you build decoders is record type aliases.", "tokens": [50364, 286, 519, 257, 1150, 551, 300, 561, 483, 1376, 3320, 493, 322, 300, 311, 411, 257, 2295, 1496, 2390, 3461, 50560, 50560, 295, 979, 378, 433, 300, 311, 534, 4965, 281, 577, 291, 1322, 979, 378, 433, 307, 2136, 2010, 10198, 1957, 13, 50838, 50838, 407, 472, 551, 436, 500, 380, 2924, 291, 11, 309, 311, 1333, 295, 364, 26947, 4978, 300, 1943, 380, 411, 291, 445, 51190, 51190, 1466, 309, 538, 2577, 309, 1051, 257, 688, 13, 51336, 51336, 1133, 286, 584, 2010, 419, 4609, 6030, 6915, 512, 2136, 11, 309, 311, 767, 2902, 385, 257, 2010, 47479, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.08859303854044201, "compression_ratio": 1.6986899563318778, "no_caption_prob": 2.144472637155559e-05}, {"id": 871, "seek": 318164, "start": 3191.12, "end": 3198.16, "text": " So one thing they don't teach you, it's sort of an implicit rule that isn't like you just", "tokens": [50364, 286, 519, 257, 1150, 551, 300, 561, 483, 1376, 3320, 493, 322, 300, 311, 411, 257, 2295, 1496, 2390, 3461, 50560, 50560, 295, 979, 378, 433, 300, 311, 534, 4965, 281, 577, 291, 1322, 979, 378, 433, 307, 2136, 2010, 10198, 1957, 13, 50838, 50838, 407, 472, 551, 436, 500, 380, 2924, 291, 11, 309, 311, 1333, 295, 364, 26947, 4978, 300, 1943, 380, 411, 291, 445, 51190, 51190, 1466, 309, 538, 2577, 309, 1051, 257, 688, 13, 51336, 51336, 1133, 286, 584, 2010, 419, 4609, 6030, 6915, 512, 2136, 11, 309, 311, 767, 2902, 385, 257, 2010, 47479, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.08859303854044201, "compression_ratio": 1.6986899563318778, "no_caption_prob": 2.144472637155559e-05}, {"id": 872, "seek": 318164, "start": 3198.16, "end": 3201.08, "text": " learn it by seeing it happen a lot.", "tokens": [50364, 286, 519, 257, 1150, 551, 300, 561, 483, 1376, 3320, 493, 322, 300, 311, 411, 257, 2295, 1496, 2390, 3461, 50560, 50560, 295, 979, 378, 433, 300, 311, 534, 4965, 281, 577, 291, 1322, 979, 378, 433, 307, 2136, 2010, 10198, 1957, 13, 50838, 50838, 407, 472, 551, 436, 500, 380, 2924, 291, 11, 309, 311, 1333, 295, 364, 26947, 4978, 300, 1943, 380, 411, 291, 445, 51190, 51190, 1466, 309, 538, 2577, 309, 1051, 257, 688, 13, 51336, 51336, 1133, 286, 584, 2010, 419, 4609, 6030, 6915, 512, 2136, 11, 309, 311, 767, 2902, 385, 257, 2010, 47479, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.08859303854044201, "compression_ratio": 1.6986899563318778, "no_caption_prob": 2.144472637155559e-05}, {"id": 873, "seek": 318164, "start": 3201.08, "end": 3208.3199999999997, "text": " When I say type alias album equals some record, it's actually giving me a type constructor", "tokens": [50364, 286, 519, 257, 1150, 551, 300, 561, 483, 1376, 3320, 493, 322, 300, 311, 411, 257, 2295, 1496, 2390, 3461, 50560, 50560, 295, 979, 378, 433, 300, 311, 534, 4965, 281, 577, 291, 1322, 979, 378, 433, 307, 2136, 2010, 10198, 1957, 13, 50838, 50838, 407, 472, 551, 436, 500, 380, 2924, 291, 11, 309, 311, 1333, 295, 364, 26947, 4978, 300, 1943, 380, 411, 291, 445, 51190, 51190, 1466, 309, 538, 2577, 309, 1051, 257, 688, 13, 51336, 51336, 1133, 286, 584, 2010, 419, 4609, 6030, 6915, 512, 2136, 11, 309, 311, 767, 2902, 385, 257, 2010, 47479, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.08859303854044201, "compression_ratio": 1.6986899563318778, "no_caption_prob": 2.144472637155559e-05}, {"id": 874, "seek": 320832, "start": 3208.32, "end": 3213.1600000000003, "text": " that takes if I have a field that's a string and a field that's an int.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 875, "seek": 320832, "start": 3213.1600000000003, "end": 3214.1600000000003, "text": " In that order.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 876, "seek": 320832, "start": 3214.1600000000003, "end": 3216.36, "text": " It gives me a function in that order.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 877, "seek": 320832, "start": 3216.36, "end": 3222.04, "text": " It gives me a function which takes a string, an int and returns an album record.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 878, "seek": 320832, "start": 3222.04, "end": 3223.04, "text": " Yeah.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 879, "seek": 320832, "start": 3223.04, "end": 3226.6800000000003, "text": " And that's one of the few implicit things that Elm does for you.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 880, "seek": 320832, "start": 3226.6800000000003, "end": 3227.6800000000003, "text": " Yes.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 881, "seek": 320832, "start": 3227.6800000000003, "end": 3231.04, "text": " So I usually say Elm has no magic.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 882, "seek": 320832, "start": 3231.04, "end": 3232.52, "text": " And that's pretty much true.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 883, "seek": 320832, "start": 3232.52, "end": 3234.0800000000004, "text": " But that one is implicit.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 884, "seek": 320832, "start": 3234.0800000000004, "end": 3235.92, "text": " Yes, it's quite handy.", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 885, "seek": 320832, "start": 3235.92, "end": 3238.0, "text": " But where do you learn that?", "tokens": [50364, 300, 2516, 498, 286, 362, 257, 2519, 300, 311, 257, 6798, 293, 257, 2519, 300, 311, 364, 560, 13, 50606, 50606, 682, 300, 1668, 13, 50656, 50656, 467, 2709, 385, 257, 2445, 294, 300, 1668, 13, 50766, 50766, 467, 2709, 385, 257, 2445, 597, 2516, 257, 6798, 11, 364, 560, 293, 11247, 364, 6030, 2136, 13, 51050, 51050, 865, 13, 51100, 51100, 400, 300, 311, 472, 295, 264, 1326, 26947, 721, 300, 2699, 76, 775, 337, 291, 13, 51282, 51282, 1079, 13, 51332, 51332, 407, 286, 2673, 584, 2699, 76, 575, 572, 5585, 13, 51500, 51500, 400, 300, 311, 1238, 709, 2074, 13, 51574, 51574, 583, 300, 472, 307, 26947, 13, 51652, 51652, 1079, 11, 309, 311, 1596, 13239, 13, 51744, 51744, 583, 689, 360, 291, 1466, 300, 30, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.15346719268569373, "compression_ratio": 1.815450643776824, "no_caption_prob": 3.169285992044024e-05}, {"id": 886, "seek": 323800, "start": 3238.0, "end": 3241.2, "text": " And so we're stating it here, Jeroen.", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 887, "seek": 323800, "start": 3241.2, "end": 3247.72, "text": " We're giving people this explicit knowledge when you say type alias album equals a record", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 888, "seek": 323800, "start": 3247.72, "end": 3249.24, "text": " alias, a record type.", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 889, "seek": 323800, "start": 3249.24, "end": 3251.4, "text": " It gives you a constructor function.", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 890, "seek": 323800, "start": 3251.4, "end": 3258.92, "text": " Okay, so yeah, pull up an Elm REPL, try defining a type alias of a record, and then just write", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 891, "seek": 323800, "start": 3258.92, "end": 3265.16, "text": " the name of that record that you defined, capital A album, and the type is function.", "tokens": [50364, 400, 370, 321, 434, 26688, 309, 510, 11, 508, 2032, 268, 13, 50524, 50524, 492, 434, 2902, 561, 341, 13691, 3601, 562, 291, 584, 2010, 419, 4609, 6030, 6915, 257, 2136, 50850, 50850, 419, 4609, 11, 257, 2136, 2010, 13, 50926, 50926, 467, 2709, 291, 257, 47479, 2445, 13, 51034, 51034, 1033, 11, 370, 1338, 11, 2235, 493, 364, 2699, 76, 31511, 43, 11, 853, 17827, 257, 2010, 419, 4609, 295, 257, 2136, 11, 293, 550, 445, 2464, 51410, 51410, 264, 1315, 295, 300, 2136, 300, 291, 7642, 11, 4238, 316, 6030, 11, 293, 264, 2010, 307, 2445, 13, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.20719494865935983, "compression_ratio": 1.6123348017621146, "no_caption_prob": 8.990954825094377e-07}, {"id": 892, "seek": 326516, "start": 3265.16, "end": 3269.3199999999997, "text": " Yeah, just be very wary about the order of fields.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 893, "seek": 326516, "start": 3269.3199999999997, "end": 3275.56, "text": " I try not to put two elements with the same type next to each other in the type alias", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 894, "seek": 326516, "start": 3275.56, "end": 3276.56, "text": " definition.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 895, "seek": 326516, "start": 3276.56, "end": 3277.56, "text": " Exactly.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 896, "seek": 326516, "start": 3277.56, "end": 3283.92, "text": " Because the problem with this is that you can put the right value in the wrong field.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 897, "seek": 326516, "start": 3283.92, "end": 3286.8799999999997, "text": " You can decode things in the wrong position.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 898, "seek": 326516, "start": 3286.8799999999997, "end": 3289.2, "text": " So be very wary of that.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 899, "seek": 326516, "start": 3289.2, "end": 3290.2, "text": " Yes, right.", "tokens": [50364, 865, 11, 445, 312, 588, 46585, 466, 264, 1668, 295, 7909, 13, 50572, 50572, 286, 853, 406, 281, 829, 732, 4959, 365, 264, 912, 2010, 958, 281, 1184, 661, 294, 264, 2010, 419, 4609, 50884, 50884, 7123, 13, 50934, 50934, 7587, 13, 50984, 50984, 1436, 264, 1154, 365, 341, 307, 300, 291, 393, 829, 264, 558, 2158, 294, 264, 2085, 2519, 13, 51302, 51302, 509, 393, 979, 1429, 721, 294, 264, 2085, 2535, 13, 51450, 51450, 407, 312, 588, 46585, 295, 300, 13, 51566, 51566, 1079, 11, 558, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.16412096126105197, "compression_ratio": 1.6414141414141414, "no_caption_prob": 9.314281487604603e-05}, {"id": 900, "seek": 329020, "start": 3290.2, "end": 3296.7999999999997, "text": " So if I had a JSON decoder that's decoding like a name JSON object, and that name has", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 901, "seek": 329020, "start": 3296.7999999999997, "end": 3303.4399999999996, "text": " first name and last name, and I have a type alias name is a record with first name and", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 902, "seek": 329020, "start": 3303.4399999999996, "end": 3304.68, "text": " last name.", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 903, "seek": 329020, "start": 3304.68, "end": 3308.16, "text": " If I have my JSON decoder working perfectly, and it's getting the right first name and", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 904, "seek": 329020, "start": 3308.16, "end": 3314.3599999999997, "text": " last name, and I now change the order, and I switch the order in my type alias.", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 905, "seek": 329020, "start": 3314.3599999999997, "end": 3317.2, "text": " Or in the JSON decoder, either.", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 906, "seek": 329020, "start": 3317.2, "end": 3318.2, "text": " Right.", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 907, "seek": 329020, "start": 3318.2, "end": 3319.46, "text": " Yes, that's right.", "tokens": [50364, 407, 498, 286, 632, 257, 31828, 979, 19866, 300, 311, 979, 8616, 411, 257, 1315, 31828, 2657, 11, 293, 300, 1315, 575, 50694, 50694, 700, 1315, 293, 1036, 1315, 11, 293, 286, 362, 257, 2010, 419, 4609, 1315, 307, 257, 2136, 365, 700, 1315, 293, 51026, 51026, 1036, 1315, 13, 51088, 51088, 759, 286, 362, 452, 31828, 979, 19866, 1364, 6239, 11, 293, 309, 311, 1242, 264, 558, 700, 1315, 293, 51262, 51262, 1036, 1315, 11, 293, 286, 586, 1319, 264, 1668, 11, 293, 286, 3679, 264, 1668, 294, 452, 2010, 419, 4609, 13, 51572, 51572, 1610, 294, 264, 31828, 979, 19866, 11, 2139, 13, 51714, 51714, 1779, 13, 51764, 51764, 1079, 11, 300, 311, 558, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.12155613229294454, "compression_ratio": 1.9805825242718447, "no_caption_prob": 4.00595527025871e-05}, {"id": 908, "seek": 331946, "start": 3319.46, "end": 3323.36, "text": " If I change the order in either place, so it might seem like, oh, I'm just refactoring", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 909, "seek": 331946, "start": 3323.36, "end": 3324.36, "text": " my code.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 910, "seek": 331946, "start": 3324.36, "end": 3325.92, "text": " I maybe maybe you put.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 911, "seek": 331946, "start": 3325.92, "end": 3327.92, "text": " No, you're not.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 912, "seek": 331946, "start": 3327.92, "end": 3329.68, "text": " It's not that simple.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 913, "seek": 331946, "start": 3329.68, "end": 3330.7200000000003, "text": " It's not that simple.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 914, "seek": 331946, "start": 3330.7200000000003, "end": 3338.28, "text": " The order matters because you're using a positional argument constructor function that the type", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 915, "seek": 331946, "start": 3338.28, "end": 3340.76, "text": " alias gives you when you define a type alias.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 916, "seek": 331946, "start": 3340.76, "end": 3344.7200000000003, "text": " It gives you a constructor function and it is order dependent.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 917, "seek": 331946, "start": 3344.7200000000003, "end": 3345.7200000000003, "text": " Yeah.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 918, "seek": 331946, "start": 3345.7200000000003, "end": 3347.7200000000003, "text": " So beware of that.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 919, "seek": 331946, "start": 3347.7200000000003, "end": 3348.7200000000003, "text": " Beware.", "tokens": [50364, 759, 286, 1319, 264, 1668, 294, 2139, 1081, 11, 370, 309, 1062, 1643, 411, 11, 1954, 11, 286, 478, 445, 1895, 578, 3662, 50559, 50559, 452, 3089, 13, 50609, 50609, 286, 1310, 1310, 291, 829, 13, 50687, 50687, 883, 11, 291, 434, 406, 13, 50787, 50787, 467, 311, 406, 300, 2199, 13, 50875, 50875, 467, 311, 406, 300, 2199, 13, 50927, 50927, 440, 1668, 7001, 570, 291, 434, 1228, 257, 2535, 304, 6770, 47479, 2445, 300, 264, 2010, 51305, 51305, 419, 4609, 2709, 291, 562, 291, 6964, 257, 2010, 419, 4609, 13, 51429, 51429, 467, 2709, 291, 257, 47479, 2445, 293, 309, 307, 1668, 12334, 13, 51627, 51627, 865, 13, 51677, 51677, 407, 312, 3039, 295, 300, 13, 51777, 51777, 879, 3039, 13, 51827, 51827], "temperature": 0.0, "avg_logprob": -0.21242314436304288, "compression_ratio": 1.7552742616033756, "no_caption_prob": 3.219162317691371e-05}, {"id": 920, "seek": 334872, "start": 3348.72, "end": 3350.3199999999997, "text": " That's the PSA for the day.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 921, "seek": 334872, "start": 3350.3199999999997, "end": 3351.7999999999997, "text": " The more you know.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 922, "seek": 334872, "start": 3351.7999999999997, "end": 3356.68, "text": " Anything else that people should know as they're getting started with JSON decoding?", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 923, "seek": 334872, "start": 3356.68, "end": 3358.68, "text": " Not on my blog.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 924, "seek": 334872, "start": 3358.68, "end": 3360.48, "text": " All right.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 925, "seek": 334872, "start": 3360.48, "end": 3366.2799999999997, "text": " Well, I think that's a good start and looking forward to getting into some other topics.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 926, "seek": 334872, "start": 3366.2799999999997, "end": 3370.3599999999997, "text": " There are some more nuanced topics to explore here, but hopefully this is a good start for", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 927, "seek": 334872, "start": 3370.3599999999997, "end": 3371.3599999999997, "text": " everybody.", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 928, "seek": 334872, "start": 3371.3599999999997, "end": 3376.68, "text": " So we have recorded these episodes, the four episodes before we released Elm Radio to the", "tokens": [50364, 663, 311, 264, 8168, 32, 337, 264, 786, 13, 50444, 50444, 440, 544, 291, 458, 13, 50518, 50518, 11998, 1646, 300, 561, 820, 458, 382, 436, 434, 1242, 1409, 365, 31828, 979, 8616, 30, 50762, 50762, 1726, 322, 452, 6968, 13, 50862, 50862, 1057, 558, 13, 50952, 50952, 1042, 11, 286, 519, 300, 311, 257, 665, 722, 293, 1237, 2128, 281, 1242, 666, 512, 661, 8378, 13, 51242, 51242, 821, 366, 512, 544, 45115, 8378, 281, 6839, 510, 11, 457, 4696, 341, 307, 257, 665, 722, 337, 51446, 51446, 2201, 13, 51496, 51496, 407, 321, 362, 8287, 613, 9313, 11, 264, 1451, 9313, 949, 321, 4736, 2699, 76, 17296, 281, 264, 51762, 51762], "temperature": 0.0, "avg_logprob": -0.2160308837890625, "compression_ratio": 1.6080586080586081, "no_caption_prob": 0.0002531364152673632}, {"id": 929, "seek": 337668, "start": 3376.68, "end": 3380.7999999999997, "text": " public before you even knew this was a thing.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 930, "seek": 337668, "start": 3380.7999999999997, "end": 3385.16, "text": " And we would probably like to have some suggestions about topics.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 931, "seek": 337668, "start": 3385.16, "end": 3387.7999999999997, "text": " We have plenty of things to talk about.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 932, "seek": 337668, "start": 3387.7999999999997, "end": 3391.96, "text": " Many, many, many things that I will not list.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 933, "seek": 337668, "start": 3391.96, "end": 3396.94, "text": " But it might be useful for us at some point if you gave us some topics you would like", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 934, "seek": 337668, "start": 3396.94, "end": 3397.94, "text": " us to cover.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 935, "seek": 337668, "start": 3397.94, "end": 3398.94, "text": " Yeah, topics.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 936, "seek": 337668, "start": 3398.94, "end": 3404.24, "text": " And we might do some grab bag episodes where we go through different questions, maybe multiple", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 937, "seek": 337668, "start": 3404.24, "end": 3405.8799999999997, "text": " questions in one episode.", "tokens": [50364, 1908, 949, 291, 754, 2586, 341, 390, 257, 551, 13, 50570, 50570, 400, 321, 576, 1391, 411, 281, 362, 512, 13396, 466, 8378, 13, 50788, 50788, 492, 362, 7140, 295, 721, 281, 751, 466, 13, 50920, 50920, 5126, 11, 867, 11, 867, 721, 300, 286, 486, 406, 1329, 13, 51128, 51128, 583, 309, 1062, 312, 4420, 337, 505, 412, 512, 935, 498, 291, 2729, 505, 512, 8378, 291, 576, 411, 51377, 51377, 505, 281, 2060, 13, 51427, 51427, 865, 11, 8378, 13, 51477, 51477, 400, 321, 1062, 360, 512, 4444, 3411, 9313, 689, 321, 352, 807, 819, 1651, 11, 1310, 3866, 51742, 51742, 1651, 294, 472, 3500, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.15758000101361955, "compression_ratio": 1.7103174603174602, "no_caption_prob": 6.708745786454529e-05}, {"id": 938, "seek": 340588, "start": 3405.88, "end": 3410.56, "text": " So submit a question that you have and we'd love to talk about it.", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 939, "seek": 340588, "start": 3410.56, "end": 3414.36, "text": " Don't make them questions that you can just get an answer on on Slack.", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 940, "seek": 340588, "start": 3414.36, "end": 3419.44, "text": " Yeah, perhaps it's best to give questions where we can sort of get into some interesting", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 941, "seek": 340588, "start": 3419.44, "end": 3425.04, "text": " best practices or different ways of looking at a topic rather than just a here's one clear", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 942, "seek": 340588, "start": 3425.04, "end": 3429.84, "text": " cut answer that somebody on Slack could probably do a better job just linking you to the right", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 943, "seek": 340588, "start": 3429.84, "end": 3430.84, "text": " article quickly.", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 944, "seek": 340588, "start": 3430.84, "end": 3431.84, "text": " Yeah, exactly.", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 945, "seek": 340588, "start": 3431.84, "end": 3434.84, "text": " Or why is this code not compiling?", "tokens": [50364, 407, 10315, 257, 1168, 300, 291, 362, 293, 321, 1116, 959, 281, 751, 466, 309, 13, 50598, 50598, 1468, 380, 652, 552, 1651, 300, 291, 393, 445, 483, 364, 1867, 322, 322, 37211, 13, 50788, 50788, 865, 11, 4317, 309, 311, 1151, 281, 976, 1651, 689, 321, 393, 1333, 295, 483, 666, 512, 1880, 51042, 51042, 1151, 7525, 420, 819, 2098, 295, 1237, 412, 257, 4829, 2831, 813, 445, 257, 510, 311, 472, 1850, 51322, 51322, 1723, 1867, 300, 2618, 322, 37211, 727, 1391, 360, 257, 1101, 1691, 445, 25775, 291, 281, 264, 558, 51562, 51562, 7222, 2661, 13, 51612, 51612, 865, 11, 2293, 13, 51662, 51662, 1610, 983, 307, 341, 3089, 406, 715, 4883, 30, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.13241363366444905, "compression_ratio": 1.6866197183098592, "no_caption_prob": 6.854146704426967e-06}, {"id": 946, "seek": 343484, "start": 3434.84, "end": 3437.6800000000003, "text": " Like that's not what we're going to answer.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 947, "seek": 343484, "start": 3437.6800000000003, "end": 3438.6800000000003, "text": " Right.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 948, "seek": 343484, "start": 3438.6800000000003, "end": 3439.6800000000003, "text": " Yeah.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 949, "seek": 343484, "start": 3439.6800000000003, "end": 3440.6800000000003, "text": " Cool.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 950, "seek": 343484, "start": 3440.6800000000003, "end": 3442.8, "text": " Well, looking forward to seeing what people submit.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 951, "seek": 343484, "start": 3442.8, "end": 3443.8, "text": " And yeah, thanks a lot.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 952, "seek": 343484, "start": 3443.8, "end": 3444.8, "text": " You're in.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 953, "seek": 343484, "start": 3444.8, "end": 3445.8, "text": " I'll talk to you next time.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 954, "seek": 343484, "start": 3445.8, "end": 3446.8, "text": " See you next time.", "tokens": [50364, 1743, 300, 311, 406, 437, 321, 434, 516, 281, 1867, 13, 50506, 50506, 1779, 13, 50556, 50556, 865, 13, 50606, 50606, 8561, 13, 50656, 50656, 1042, 11, 1237, 2128, 281, 2577, 437, 561, 10315, 13, 50762, 50762, 400, 1338, 11, 3231, 257, 688, 13, 50812, 50812, 509, 434, 294, 13, 50862, 50862, 286, 603, 751, 281, 291, 958, 565, 13, 50912, 50912, 3008, 291, 958, 565, 13, 50962, 50962, 6531, 18732, 538, 462, 8886, 13, 1112, 51012], "temperature": 0.0, "avg_logprob": -0.2764175270177141, "compression_ratio": 1.360248447204969, "no_caption_prob": 0.00027787216822616756}, {"id": 955, "seek": 344680, "start": 3446.8, "end": 3471.02, "text": " We'll talk again soon.", "tokens": [50364, 492, 603, 751, 797, 2321, 13, 51575, 51575], "temperature": 1.0, "avg_logprob": -1.7412343978881837, "compression_ratio": 0.7333333333333333, "no_caption_prob": 0.0012063697213307023}], "language": "en"}