{"text": " Hello, Jeroen. Hello, Dillon. What are we talking about today? Today, we're talking about primitive obsession. Ah, a code smell. This is a new type of topic for us, so... Ah, that is true, yeah. What? I mean, we refer to code smells, but we've never done an episode dedicated to a code smell, so let's do some definitions. First of all, maybe we should define what a code smell is. Yeah, we should. And maybe we can rename the episode to Primitive Obsession Avoidance. That way, we don't talk about a code smell, we talk about a technique to improve the situation. Don't tell people what not to do, tell them what to do. Yes, I like that. That's kind of not what I do with Elm Review, but... Well, I guess I do both. So, yeah, primitive obsession. I quite like the definition that Jeremy Fairbank gave in his talk, Solving the Bullying Identity Crisis, which was, primitive obsession is the act of using primitive data types, like Boolean strings or integers, to represent domain concepts. I like that too. Yeah, it fits well. I love the word domain. To me, that is one of the most valuable concepts for writing better code, is being more domain oriented and imbuing our code with domain semantics and keeping that in mind. Yeah, in the same sense that domain driven design does it, right? Right, right. And yeah, just being able to read through our code in a high level way. In a way, declarative programming lends itself to this as opposed to imperative programming because it's declaratively stating what it's doing rather than how it's doing it. So in a way, that lends itself more to expressing a domain. And in a way, moving away from primitive values to more domain centric types feels more declarative than imperative. It feels more what rather than how. Yeah. So yeah, what are examples of primitive obsession? And maybe before we define that, maybe we should just quickly define a code smell, which people aren't familiar. It's essentially the concept that you could have something that smells off, but maybe it's just a nice blue cheese and it smells a little funny, but it's okay. So a smell is just that's the analogy is that it's something to look into. It doesn't necessarily mean it's bad, but it's something to think about changing. I live in France and I just cannot accept the blue cheese reference. It is just not acceptable. Blue cheese is smelly and it probably tastes bad. I haven't tasted it. I won't taste it. Well, that sounds like a Dutchman speaking, Dutchman in French clothing. That sounds like me, maybe. The Dutch actually like the French cheese. So sounds like you're having an identity crisis here in a bullion identity crisis. So we were saying examples of primitive obsession. So primitive obsession. I think a classic example would be if you've got a number being passed around that perhaps represents money, a monetary value. And I think we can all relate to that's a little bit scary because, for example, you lose the concept of the semantics of that value. There are a few things you lose that like you don't know how you don't know where it came from. You don't know how it can be used. You don't know what it represents. You lose all these pieces because it's just a number. And so does it represent sense? Does it represent a balance? Does it represent a difference in balances? Can it be negative? Do you even know whether it represents money? Exactly. Do you know if it represents money? Maybe it's an account number or maybe it's a different denomination. Maybe it's a different currency. So that feels very scary to me to just have a plain old number being passed through and then to use that to update someone's bank balance or something. That feels very scary. Yep. So you could say that way then. Yeah, sure. So, yeah, this episode is about scaring people into writing better code. So hopefully we've succeeded. So your way of scaring people is to present them with something that smells bad? Well, it sounded like it scared you. Get a knife, Dillon. Get a knife. Yeah, so I think that's to me, that's a classic example of this code smell of primitive obsession. And so like, let's talk about what that fix might look like. Yeah, I think there are other problems that we can highlight, even just when you're reading some code. So as you said, you don't know what something might represent. And that's even more highlighted when you have multiple of those things. So if you have a function that takes two integers, usually in Elm, if you read the type of notation of a function, you know what it does. But if you have a function that takes an int, then another int and returns something else, then you don't know what those two ints can be. If you have a money and then an int, then it gets a little bit clear. Like, okay, you have maybe this is adding this, maybe this is multiplying an amount of money. I don't know. Yes. But if you have two ints, then it's hard to tell. And also, you have the issue that this can be a potential bug because you can easily swap the two values. If you thought that money was the first argument, but it's actually the second one, then the compiler won't help you because the types match, but you will do the wrong thing. Exactly. And I actually realized, you know, we did our if it compiles, it works episode and we're discussing like, what is it that gives us that feeling that when our Elm code compiles, it works? And I realized that this was a major thing that we omitted in that episode that I realized this is one of the things that gives me the most confidence, that feeling that if you gather up the correct data types, you can be very confident that you're piecing them together in a valid, meaningful way, which you sort of lose if you're just passing around a bunch of strings, numbers, balls. Right. Everything you can do Elm programs with only encode.json.encode.values. Exactly. And that's called JavaScript. We need to be we need to do a live stream sometime where we just try building an app that way. Oh, God. Is it like a masochistic live stream that you want? We'll do it on April Fools. How about that? Not looking forward to it. Maybe let's go into what you can do to avoid those issues that we mentioned. Yeah. So let's let's take the money value. I think I think people can sort of imagine what what we would suggest to avoid this. You wrap it in a type and even better, wrap that type in a module, make it an opaque type. You know, in the case of money, maybe you want to have a phantom type for currency. We've talked about phantom types. We've talked about opaque types. You've heard a lot of a lot of our thoughts on that, although I feel that it is an underappreciated topic and I think we will we will continue talking about opaque types for a long time to come because I think they're a very important concept in Elm. I almost feel like it's a shame that we that opaque types wasn't our first episode. It should have been our first episode. Surprisingly, that is the basis of a lot of our thoughts. Yeah, because that's the only way you can truly wrap something and constrain your understanding of how you manipulate that type to to a given context. And that is so powerful. Yeah. So maybe let's break down your advice. So first of all, you said wrap it in a new type. So if you're manipulating money, then maybe for now it's an integer or it's float. What you can do is you define a new type, a new custom type that you call money or currency or whatever. So you say type money equals money float or int. I'm pretty sure that using floats for money is a very bad practice. So let's count the number of cents as an integer maybe. So type money equals money int. So what that does is that that creates a new type that from the point of view of the compiler will not be the same as an integer. So you're going to have to wrap it and unwrap it where you're going to create and use it. But that will avoid a lot of issues like having arguments swept around or using non money integers as money or money as an integer. Yes. Yes. And an important distinction. You said use a custom type. You did not say use a type alias. And that is very important because if we used a type alias, type alias money equals int, that actually doesn't prevent us. We could use our money type alias in one place that money is used and not in another place. So it doesn't guarantee that the type represents that in any way. And so that can be a bit misleading. It feels like we've got a nice name for our type. But in fact, it doesn't really give us a clear concept of what it represents. So often in fact, I would go as far to say that using a type alias for us, a unary primitive, a single value primitive, not a compound one is probably a code smell. So using a type alias for a record. Great. Common practice, often a very good idea using a type alias for a tuple. Maybe that's OK. Maybe, maybe not. But using a type alias for string, probably a bad idea. I can't think of an instance where that would be a good idea. I can see some. So first of all, one is performance. I'm going to contradict myself in a second. Just OK. But if you type alias, you don't have to wrap it and unwrap it all the time. So code wise, you have less to write, but that's also more code to be executed. The nice thing, and this is part of why I contradict myself, is that the Elm compiler strips those away when you have a custom type with only a single constructor. And that just wraps one data type. So that's actually not an issue. But where I would see a type alias being used is when you want to switch from a primitive to a custom type. Yeah. So let's imagine you're still still working with integers for money. How do you go about going towards using a custom type, a non primitive type? What you can do is you can create a type alias for your money and start using that. So where you before you had int arrow HTML message or something, you now have money arrow HTML message. And you can add those pretty randomly as you go around. Maybe in some cases that will actually not be true. So that's a pitfall. So when you have just something that's not money and use it as money. Exactly. Right. But the thing is, when you do that, you're doing a tiny step towards having the type used where you need it to. And then as we like to do, we commit and then we change the type from the type alias to a custom type with wrapping and unwrapping that we need. And then we get a lot of compiler errors and we just have to resolve those one by one. And that is pretty much how we can easily migrate from having a primitive for money to a custom type that does not have the same issues. Yeah. So I'm a bit torn because I am a huge fan of tiny steps, but I am also uncomfortable with the idea of, well, I guess put it this way. I'm a huge advocate for tiny steps. I'm also an advocate for feedback. And I feel that while replacing our money type, our int money type with a type alias checks the box for tiny steps, it doesn't check a box for feedback. And that's what concerns me. So, for example, we could use it in a place that actually doesn't represent money and not get feedback. We could forget to use it in a place where we're actually passing through something that we changed to use our money type alias and downstream from it, it's not going to complain that we forgot to change another place. Yes. So we're cut off from feedback. Yeah. For that one, I don't mind because my idea at least is to use money in some places. And then when you switch it, you will be notified of more places you're going to need to add it. Yeah. And the idea is not to use it everywhere and not have any feedback and to then switch. Right. It's a preparatory step to reduce the work for the next step when you turn it into an actual custom type. Yeah. And also, like one of the aspects of tiny steps is improvement. So as long as you improve the code base, a tiny step is a good thing. And I feel like it's already bringing you some value when you have a function that's read as int int HTML message that now reads as money int HTML message. So that also already brings some value, even though the compiler won't help you. It brings some value. The thing that concerns me is that it can give a false sense of security that we've improved it and we can use it incorrectly and not know. So let me give an alternative approach that I like to use. And I think this is kind of an example of a technique that I see sometimes in sort of, you know, code craft circles of trying to take the craft of coding seriously and refactoring and stuff. I think it's a I think it's a good technique, which is sort of a semi automated refactoring where you can basically follow a recipe of using the compiler to make a change. And I love how you say recipe instead of algorithm. Pretty much an algorithm. Yeah, that's right. And yeah. So so here's here's my algorithm. So the algorithm is you've got your money type, which is you're just using a raw int. And the step one, let's say you're only using it in one module for now. But define type money equals money. So define just a wrapper custom type, then wrap early, unwrap late. So what that means is you want to be passing around your money custom type everywhere you possibly can. So that means so. So you start with the entry points and that's where you wrap early. So, you know, you've got a an HTTP request, which is doing a decoder and decoding an int. Well, you need to wrap that so you can just say decode dot int and then you can do pipe that to decode dot map money. Now you've wrapped it. And then it's going to say, well, I I thought this was a decoder of this one type that has an int in it. But now it's this one type that has money in it. So you change that. And now you go through. You change all the places that say, hey, I thought I was getting an int, but now I'm getting money. And you just change the type annotations everywhere to say money in all those places. So that's just wiring through. That's in the middle, not not the early or the late part, but the middle part. So all those places, you change it to use your new type in the annotations. And then finally, when you're forced to unwrap it because you are you to value you want to use it. Now you need a primitive. So you're doing you're sending an HTTP request and you need to encode it or you need to present it in the UI. Now you need a primitive value because you can't present money directly. Then you unwrap it. So now you just follow that through and use those simple steps to to mechanically transform. Now, it's not exactly a tiny step. Ideally, this should be something that could be automated, but it is very mechanical, which is good. When you say it could be automated, you mean using like an ID or something? Yeah. Yeah. Do you know about any languages that do that? Yeah, I mean, languages like Java and, you know, you know, C sharp, they have tools to turn a parameter into a parameter object or all sorts of. Yeah, all sorts of things like that. OK, interesting. Yes. So that's very much something that could could one day exist in Elma. I think it would be very valuable. But see, that's sort of the the idea is that you're you're doing something so mechanically that it effectively is a tiny step. It's just a very tedious step that should be automated. But you're you're following it in such a boring way that it essentially is. Yeah, I agree. I feel like the only thing that's annoying is that you could not stop in the middle. Yes, absolutely. Absolutely. Right. That's right. Because basically what what we've done in that process is we've done an atomic step conceptually, but we've done it in a tedious manual, non atomic way, which means we can't break it up in the middle. But if it were automated, it would in fact be an actual atomic step. Right. Just like I can't think of a better way to do it in a non automated way that doesn't give any false feedback if we're using it incorrect. Well, if you did it with the type areas, as I said, what you can potentially do is you use the type areas. You start using it in some places, not too many, just one or two where you know where you define them or where you use them. You commit that and then you change it to a custom type. And then, as you said, you're going to have to change it in all the places. But if at some point you need to stop because, hey, it's six o clock or I don't know what time you stop, then you can commit all the changes that you made except the one about the custom type and the wrapping. So all the changes type and the wrapping and unwrapping, you don't commit those. You really commit the rest and you can go home and you can continue tomorrow. Right. And you're right that if you do that and you mess something up, you something is a quantity, not money semantically, and you accidentally wrap that in the money type alias, you replace the money type alias for the int in the annotation there. When you do the next step after you commit that step, as you're saying, then the compiler will tell you and you can sort it out there. I just am wary of any false sense of progress where I'm cut off from feedback and that that scares me. So I think that these are both valid approaches, but I think we've presented the tradeoffs pretty pretty well. So I think people should experiment and let us know how it goes. I would definitely go with your approach if it's like a small doable change. If it's something that is used everywhere, I would go with mine. Interesting. Yeah, that's a good way to look at it. It's basically the same idea. Yes. So then the next step, which would be like, let's say you've either done the approach you described or the approach I described. But then, you know, after using the type alias with your approach, the next step would be to change that to a custom type, make sure that everything lines up, and then it converges with the approach I described. Yeah, basically. Yeah. So then let's say we get to that point. The next step from there is instead of just using a custom type that's just sitting around, now you extract that to a module. OK. In preparation for making it an opaque type. Yeah. So I would like to ask you, why would you do that? What would be the benefits? Yes. Yes. Very good question. So here's how I think of it. When we extract it to that module, several things happen. One is, well, OK, it's in a different module. We sort of get that, you know, Evan gave his talk, The Life of a File, and he sort of says, you know, maybe that's not that important. I think I agree with that, that that's actually not the important part, moving it to a separate file. Here's what I think is the important part. And in Life of a File, Evan sort of describes, how do you extract modules? Well, I think it has something to do with being some logic that's centered around a type. And that's exactly what we're talking about here. So you extract a type and some ways to operate on a type. And what does that give you? Well, that gives you the ability to have an opaque type, an opaque type meaning see our opaque type episode. It means see it. It means that you have a custom type for which you do not expose that constructor to the outside world outside of that module. That's all it is. So what happens when you do that? Well, now you can have a now you can actually have some semantics around this type. So let's say that you have money and what can you do with money? Can you multiply money? Can I take one money and multiply it by another money? That doesn't make sense. That would be bad. You know, like squared euros. Exactly. It's much more than plain euros. So this is why we should feel very afraid and concerned if we see a raw number value floating around, no pun intended, in our code and not being wrapped in some sort of type. It's very concerning unless it's in the context of a money module which is defining that logic, which is defining how to add two sums of money together. Then great. That's that's where it lives. So we can. So it allows us to define the semantics for that type. What that means is if it's just an int wandering around our code, we don't get to control the semantics in one central place. And what that means is if we want to understand, is this money being used correctly? How am I getting negative money? I don't expect to ever have negative money because I expect that I can only ever have a positive sum of money and add it to another positive sum of money in my domain. That might be different in different domains. But you are too well off, Dillon. Not making the concept of negative money in a bank. You're too well off. Right. So in your domain, you don't want to have negative money and you want to say, can I be sure that I can never have negative money? How do you know? Well, you have to look at every single place that an integer that represents money is ever used in your entire code base now and in the future. And that's not very fun. Now, imagine you have an opaque type in your money module. Now, can I have negative money? Well, let's see. What are the operations I can perform on money? I can decode money from the server. I can create money from, you know, whatever. These are the ways that I can get a money type. So can it be negative there? You have to you have to figure that out. But you know exactly where to look to ask that question. Can I take money type that was positive and make it into a negative one? You know exactly where to look to answer that question. And that's it. That's and then how do I turn it into this thing that I'm serializing on the server or whatever? So, you know where to look for potential issues. So you've kind of wrapped it in this. I sometimes think of it as a semantic type, and I think this is a very powerful technique. I think it's probably underused. So, yeah, create semantic type wrappers. Use an opaque type. Now, again, I think I really like thinking about thinking about this in terms of, you know, like what what can an opaque type help us do? Well, it can help us understand like the origin of a type. Where can it come from? How can I get this thing? If it's an int, where can an int come from? Well, it's just an int. There's nothing special about it. But where can my opaque type come from? Well, that's another question. And a much simpler one. It's a much simpler question to answer. So if you define a decoder that gives you a money type, then it can come from a decoder. If you define an HTTP request that knows how to get money and get that type. So, you know, you get you get the idea. Like you can control the origin. You can put a stamp on it. As we've talked about in our opaque types episode, you can. You can conditionally return a type which allows you to perform a validation and represent a stamp of approval that this is a valid username or this is a positive money value or whatever, whatever it is. And you don't return that type unless you've validated it. So there are just all these things that when you have a primitive type, you have to look. It's almost this imperative thing where you have to get everything in your head to understand what it's doing rather than giving something semantics and being able to look in one place and then trust those semantics everywhere else. So I'm going to try to summarize what every step gives you. So if you have a primitive, then you have no guarantees of any kind and no knowledge of how things were created or how things are used. So let's imagine you create a type alias money. Then what you have is now a name. So you have a semantic name for this type. So it's easier to understand it and to identify it. When you switch to a custom type or when you use a custom type from the get go, as some prefer, then you get a lot more guarantees from the compiler because you can't mix them with regular primitives. And you still have this semantic name. Now you really have a semantic type. And when you switch it to an opaque type, then what you can do is control how it's created, what you can do with it. And you can also enforce some guarantees, some constraints, some invariants. Yes, exactly. Money not being negative, for instance. So yeah, each one of those steps adds more benefits, just a regular primitive. And I think each one is valuable. I don't know if I would always go to an opaque type, but I also don't see why I would not. So yeah, why would you not use an opaque type? The only reason I would not use an opaque type in general would be because I want consumers to be able to pattern match on the raw data or variants. That's fair. Yeah. So whenever you create an opaque custom type, if you want people to pattern match on them or to use them based on how it looks and what the value is, then either you expose the constructors, meaning it's not opaque, or you create some API which replicates a case of. Exactly. Which is usually not great. Yep. Or maybe you create an intermediate type. That's right. Which you do expose and it decouples you from the internal, actual opaque type that you use. Yeah, but then which confuses people because, oh, I thought this was money from this module, but it's money from this module. Right, right. Yeah. Yeah, but in general, the way I think about like whether to use an opaque type or not, it's, do I want to enforce constraints about how this thing is used everywhere in my code base or in this one module? And almost always the answer for me is in this one module. That's where I want to think about how this can be used and what operations are valid for it. That's, for me, that is the most powerful technique for making Elm code more maintainable. Besides like impossible states and things like that. I may go on a tangent here, but what do you think about, like in Elm if you have an opaque type, you cannot pattern match on it, and you cannot create it. What would you think if we had a type where we cannot create it, but we can pattern match on it? Interesting. I'm not sure. I would have to think about that. Because I think it would be valuable in a few cases. Like we definitely encountered a few of those. But also like now, if you change one of the types, then that's a breaking change. If you had a new type, a new variance, or we name a variance. Right. And we already have the tools to effectively do the same thing just by having a different type for the internal representation. And the sort of presentation. So we can define sort of a presentational custom type that you expose all the variants so you can pattern match on it. And you can create it if you want. It's just a presentational type. And then the actual thing that enforces the invariants about it and all of these good things we were talking about. You own that type. You can make breaking changes to that internal type because you own it. Whether this is publishing a package or the consumers of this module are all the employees at an Elm shop is the same idea. You want to shield the consumers from breaking changes. That's a good practice. So I think we sort of have the tools for that. Yeah. It sounded good for a few seconds in my head. It's an interesting idea. Something I've been thinking about lately is, you know, Richard Feldman has given some talks presenting Rock recently. Definitely worth checking some of those talks out. It's very interesting. And he has this concept in Rock, this pure functional programming language, which is in development now, that you can have a, what is it? A tagged union that's an open tagged union or closed tagged union. But you can have anonymous tags. So you can just use a tag and it can infer that it can infer tags of a union and which tags can be possible based on the data that you return or the case expression that you do. If you return a maybe, but you only return the just case, then it's going to notice only this is a tagged just. Exactly. And it doesn't know about the nothing variant because you didn't use it. And that's quite interesting. And I mean, it's essentially like in Elm, anytime you create a custom type and a custom type variant, they're nominal. They're nominal types and values, meaning if it's not that exact thing, if you if you define a type money in one in a money module and you find a type money in main type money equals money in in your money module and in your main module. Those are two different things. The type itself and the constructor, the variant money are different. They create values of different types and they're not interchangeable. But Rock has this concept of a sort of, you know, structurally typed union tag essentially, which is, you know, so it's if you refer to a thing with the same name, then I can. If all the types line up, then I can treat them as the same thing. And you can sort of without defining a type, you can use those union tags. And it's it's very interesting. So I do wonder, like, does that give us the potential to to have a more lightweight way to define types in some instances? Because sometimes I do think like I don't reach for a custom type and I sort of avoid it and I try to use like a maybe or a tuple or something like that when I'm just like, come on, like it's not that big a deal to just say type. You know, like I was just doing something the other day where there were like two different things that a thing could return. And I was like trying really hard to avoid doing that. And I'm just like, you know what, it's not that big a deal. Like I just define a custom type thing one and thing two and it can be those things. And like that wasn't so hard, was it? You know? Yeah. In the feature you described from the Rock program language, I feel like in some cases that can lead to new problems. Like, for instance, if you have an ID type, an ID string which represents like a non primitive string ID, then the ID from one module, you don't want to mix it with the idea of another module. Absolutely. But actually Rock has a specific syntax for doing opaque types. Okay, perfect. I think it's like an at symbol in front of the tag and that allows you to constrain in that way. But yeah, it's quite interesting. Now, there is one thing I think we should maybe talk about some of the trade offs for primitive obsession and when might it not be the right approach. So like one of the things I think about is the standard libraries in Elm. So there are all these operations that are defined for type. And if the semantics match that, then it's quite nice. For example, you know, I mean, lists are quite nice. There are useful things you can do with lists and results are quite nice. You can do meaningful things with results and with maybe should you have, you know, you can you can abuse maybe and use it to mean different semantics. And that can be problematic, but sometimes it can be okay. So there are trade offs. You do get a lot of things for free with maybe right, you don't have to rewrite things to shortcut the nothing case. Exactly, exactly. You've got maybe that with default, you've got result that from maybe all these all these nice helpers. So, yeah, I mean, definitely be aware of those trade offs. I mean, that said, under the hoods, your type can still be a maybe something. So you can have maybe. So you can have a money containing maybe something and then use maybe map under the hood. Right. But you just need to add wrapping and unwrapping. Right. Right. And you need to you need to then sometimes you have to sort of redefine those standard library operations or provide a way to get something as a maybe or that sort of thing. So those are some trade offs to be aware of. I have a limitation in mind, which is comparable. So, for instance, dictionaries and sets, they only can contain comparable keys or keys, slash values for sets and custom types are not comparable. So what do you do then, Dillon? Cry? That's fair. After you've cried for like two minutes and 27 seconds. What do you do? Sounds like you've cried for that exact amount of time before. It's very specific. No, I'm a man. I only cry for two minutes and 12 seconds. It's very brave of you. I know, right? It's a tough question. I mean, it would it would be quite nice if it was comparable. I mean, obviously there are packages to help use non comparable keys. And if you wanted to, you could wrap a dictionary of that type. Right. So you could you could sort of wrap constructors and say, OK, I'm passing in this thing that's a custom type, but I'm going to create like the a wrapper around dict dot insert. That's actually going to take that custom type and destructure the pieces that I can use to be comparable and turn it into that. So that's one possibility. I don't know if there's an easy answer there. Because it's tough making this trade off of when do you wrap something and sort of expose these operations that exist for other low level data structures versus when do you just go for the low level data structure and just have string keys and a dict and say, you know what? I'm just going to be sure that I only insert the string keys using this to string function for this custom type. But you don't trust yourself. You only trust a compiler. I think I think for good reason. Yeah, you're right. I don't trust myself. Because you're a bad developer. Yeah, I think the sooner we admit that the better off we are. Just admit you're a bad developer and let the compiler take care of things. That's actually pretty good advice. Just assume you're going to mess up. Act accordingly, just like with tiny steps. Like, assume you're going to mess up the next step and commit now. Exactly. Socrates said that he knows more than anyone else in the world because he realizes that he knows nothing. And that's the only thing that can truly be known. And therefore, he knows more than anyone else. He knows one thing that he can know nothing. That's the only thing that can truly be known. But what if someone else knows the same thing? Well, then they would know as much as him. But no one knows more than him because no one can. Is it like comparing infinity? Well, one guy knows infinity wisdom and another guy knows infinity wisdom. So you compare those and that's always true, always less and always more. I think it's not comparable, Jeroen. That's the problem. Oh, so it's knowledge is opaque. OK, we got it. That's what I should have written in my philosophy courses. Philosophy, knowledge is opaque. If I want to get knowledge from you, I need to use your API to transfer the knowledge to me. That's true. That's basically what Elm Radio is. We're an API for people's minds. Yeah. In this format, knowledge is actually a bit unwrapped. Yes, we're exposing the interface for it. Yeah, we're going to wrap it again at the end of the episode. Exactly. Wrap early, unwrap late. So I was thinking about something the other day. I was writing something and I was like, maybe I should be using a custom type here and a wrapper type. I wonder what you think. The thing I was encountering was I was inserting things into a list. And as you do with a list, you usually prepend to it because it's inefficient to add something to the end of the list. So you go over this list and you're adding things. And I realized there's actually a semantic concept behind this. This is not a list. It is a reverse list. And I was thinking maybe I should just create a little wrapper type and have reverse list. So you would have type reverse list equals reverse list parens list a. And you'd need your a type variable in the definition. So it's just a wrapper for list of something, but it would be an opaque type. And the important thing would be what can you do with a reverse list? Well, you can prepend to it and you can get it. You can turn it into a normal list. What is turning it into a normal list look like? You do the reverse list, a reverse plus wrapping, unwrapping or unwrapping it. Exactly. Unwrapping it and reverse it. But now here's here's the thing that you've given a name to these things. So when you're prepending, you're doing like reverse list dot prepend. And so, OK, you understand I'm prepending to this thing. And then when you do to list, you just use the list. And so if you take that reverse list, you can't accidentally pass it somewhere and say, wait a minute, I lost track. What was the context? Was this reversed at this point or not? And I think that's one of the powerful things about these sort of semantic types, about wrapping or these primitive types with semantics, is that it gives you this definition of what is the semantic context I'm in, which you can lose if you're passing a primitive because you're passing a list of something. Well, was it reversed already or not? What stage does this represent? I'm almost wondering, like, is reverse list a good name for this? Because I agree with the idea. But I'm like, you're building something. So maybe you have something like what you were building, but let's imagine this was a list of books or something and they have to be ordered in some way. Right. If you're like searching for books that match a certain criteria. So I'm like, maybe you could call it reverse list, but you could also call it list of books being built. Book search results. Yeah, or temporary or construction in progress with the icon, you know. But yeah, I agree with the idea. Would you want to use this? Would you want to create a custom type for this? It depends on how much you would have to transfer this over and over again. Like if it's an implementation detail only constrained to a single function, just call, just use list. And I'm guessing you could probably in some cases use list on map or something or list of fold. And in which case it may not make any sense. But if it still makes sense and you pass it all around all over the place, then yeah, maybe you can create a custom type, but then maybe give it a better name that more accurately represents the domain. Right. Yes, I think you're right. And I think that's why I was a little hesitant was because it's, I mean, sometimes you're going to have domain concepts that are just kind of around a particular data structure and that can be okay. But I think you're right. Sometimes that could be a sign that maybe you need to find something to express it in more specific terms for your domain. But I think this concept is so powerful that, again, it's like you've got context on this thing. You know, it's like, you know how you can lose context. And if you just do something when you have context, it's so much easier because the context is right there. You don't have to context shift. You don't have cache misses in your brain. And it's the same thing. We have this semantic idea. So, you know, when we're getting a money value from the server, the current balance from the server, we have context of what that means because we're saying, hey, please get the current balance from the server. We have this concept of what the thing we're trying to get represents at that point in time. And the farther away we get from that point of origin, the more we lose context. And so we have to hold that in our head imperatively to follow. Where did this come from? What were the steps again? How did this thing get from here to here? And wrapping it in a semantic type just preserves that context so our brain doesn't have to do it. Yeah. And also it will be more refactor proof. Right. Exactly. Because we can not only preserve the semantic meaning, but define what operations can be used. Where can it come from? Where can it go to? How can it be transformed? What operations can be used on it? What invariants does it have? You can avoid having someone mess it up a few years down the line, for instance, or someone who never had the knowledge in their head forgets about some invariant that they should have kept. Now, something I've been thinking about lately, I think that sometimes, often in front end frameworks, we'll deal with getting data from servers. And often that looks like these formats like JSON. And JSON is very low level. JSON is great format. Don't get me wrong. But it really it's just all primitives, right? By definition. Well, no, because objects and arrays are compound types. Would those not be considered primitives? I don't know. Well, they contain other, in a way they're primitive, but they contain other kinds of primitives, including themselves. Yeah, I'm not sure if that would technically be considered a primitive or not. I guess they're primitive in a way, but they don't have any domain. Exactly. They are devoid of domain semantics inherently. And because it's just a transfer format. Yeah. And I mean, even if you have like a list of books at one point in your code base, it can be considered a high level domain term. But another aspect, another part of code base, it could be considered primitive, potentially. Because you have a list of books for this, you have a list of books for that. And maybe you want different types for each of those. Right, right. Whether something is considered primitive totally depends on your domain, I think. Yeah, right. And so like what often happens is we've got, you know, maybe you have like a Ruby on Rails server that you're using for your JSON API. Then you get that data from Elm in your Ruby on Rails code base. You might have some nice classes that are abstracting away a few things and how to access a particular part of the database. And you've got these, you know, all these constraints that are sort of represented through these abstractions you have in your Ruby code base. But then you go and you get all this data. And then Ruby has to say, well, here is some JSON. It has to send the lowest common denominator. And now all those semantics in order to be serialized and deserialized, you lose all that semantic information. You lose all those domain concepts and you have to rebuild them somehow. You should have used them there. Well, actually, it's very true. I've been thinking about that. How powerful that is to actually have the exact same context and semantics and that glue code for serializing and deserializing. It's not just like tedious. It is lossy. You lose semantic information. You lose information about the constraints. But in Lambda, you don't you know what can if you have an opaque type, you have all these nice constraints we talked about in Lambda that that applies to the data that's being persisted and all of this. Well, you have full stack invariants, which is pretty, pretty powerful stuff. So, yeah, that avoids a lot of danger. Yes. Problems that can happen at encoding and decoding. Yes. Yeah. And, you know, so I mean, how do you fix this problem? Sure. You can you can use Lambda. And if you're not using Lambda, just be aware that you're losing semantic information. And even if you're using something like GraphQL, that gives you more safety for accessing those low level values. And it gives you a few semantic values like GraphQL has these these scalar types, which can be quite nice for saying this represents this represents time. And this is how you decode that. This represents a user ID. That's great. But still, you are crossing between paradigms and and any invariants you had in your Ruby on Rails backend are not automatically there just because you use these GraphQL codecs and that sort of thing. You have to be very deliberate about the contract that you're providing and think about that. And any time you serialize and deserialize, you have to be careful that you're preserving the contract and the semantics and the domain concepts between those two paradigms. I was talking to a few of my colleagues about primitive obsession today real quick. And we're like, yeah, that's a nice technique. It's it's super helpful for plenty of things. And then we were like, yeah, but we don't use it that much, actually. Mm hmm. Like I said, I think that I think opaque types are one of the most underused techniques. Well, no big types. Yes, but not just like new types. Mm hmm. Right. Yes. So what I mean is we still have plenty of instances where we just use strings or integers or right. Booleans or whatever. Not that much Booleans, I guess. We still use a lot of primitives. And I mean, things still work pretty well. We don't have any issues about switching values, switching argument orders, something like that. So I'm pretty happy with it, but it's still nice to have that additional guarantee that you didn't mess things up. And a nice overview of what a function does or works with. But yeah, I'm like, should we use this more? How would we go about it? Would we do a single pass of the code base to do to make everything a new type or should we do it incrementally? Probably more incrementally, I'm guessing. But yeah. Do you have any advice on that? I mean, yeah, I think as with any of this stuff, it takes judgment and creativity to apply it. But I would say one thing that I think about is like I like this. I like this idea. For example, people talk about self describing code, right? And you've got like, do I write a like if you have a comment that says, OK, here's what this function is doing. It's and only use it in this way. And well, OK, maybe you can turn that into the function name. Make sure that this integer argument is never zero. Yes. Right. Right. So any time you you find yourself wanting to write a comment or have caveats or explain to somebody in a pull request how it should be used or things like that, I think that's one cue because the thing is, comments can lie. Function names are more likely to to evolve over time. Now, that does require a habit of making small refactorings as you have that context. So like I've heard it described as you have this context about understanding the code and refactoring in tiny steps is just about taking that context and putting it back into the code. So you don't have to keep it in your head, especially if you're working with a team that's especially valuable. Right. But even for your future self. So I think in the same way, when you have some concept that something has a certain semantic meaning rapid in a semantic type. Now, we do have to keep in mind how that can affect composability and not being able to use things with standard APIs. So things like maybe and result types can be quite useful in that regard. But but yeah, that's that's that's one thing I think about is how can we kind of put that context back into the code? I'm just trying to pick your brain here. But what would you think of having something like a a new type for strings that would be displayed to the user? So one instance where I would probably not use a new type is when I would have strings that I want to display to the user. So like the number of their accounts, the user ID, the user ID, something. Now, not the user ID. That's a very bad example. But just some text like a button text. Do you think it would make sense to wrap that into a new type showable text or something? Displayable text. Interesting. Is that going too far? Like where do you stop? Right. Exactly. Yeah. This is this is a great example of kind of what we were talking about, too, with like the reversible or reverse list and stuff. Is it like, sure, there's some semantic concept there, but is it the right way to to draw those lines? And does it get you in trouble? Because because you can't necessarily easily compose these things together. And drawing the line one place means that you can't draw the line another another way that conflicts with that. And that's that's the thing. So my gut feeling with that example is that that's drawing the lines in a way that that prevents you from drawing them another way that's more specific to your domain. So, I mean, first and foremost, with all of this refactoring stuff, the the the golden rule is address pain points. So like with with this reverse list thing, the reason it came up for me was because I found a bug and the bug was in places. And I wasn't sure when I was fixing the bug. I was like, do I fix it? This do I reverse it here or here and here? And how do I keep track of that? And how do I know that some other thing isn't going to make that same bug in the future? So I think that's first and foremost, like address pain points, address concrete pain points. That's like the best refactoring advice I think you can give. Yeah. And also, if you try it out and then you notice new pain points, then maybe back off. All the more reason why tiny refactoring steps are valuable because you can try something out, see how it feels. But yeah, my gut feeling is it might box you into a corner where you're creating these things that are not core domain concepts. And it makes it hard to express things that you might want to as core domain concepts. But I'm not I'm not quite sure. Yeah. Because I feel like in some cases you you create some some text like you extract. You want to show the user ID to extract a string from it. Yeah. And then maybe you do some manipulation with it. And that was not the intent. Like the intent was to produce a string that you can display and then someone removes like the first three characters or something and and does something with it. And that was just not the point. And I feel like that happens more often than I would like to. Again, it's not a problem, but also right. It's like blue cheese. Exactly. Exactly. The Dutch love it. Is that what you're trying to say? Yeah, I guess we do. Yeah, I think that because abstractions have a cost and so we should. That's why it's really important to be addressing pain points when we introduce abstractions, because if we don't, then we're incurring a cost with something that might not give us a benefit to outweigh that cost. And also not just that, but not only are we incurring a cost, but we might be making another abstraction harder to to do in tandem with that because sometimes the lines just don't match up. You draw the lines one way and now you can't draw them another way. So. So, yeah, I think, you know, it's important not to do premature abstraction for this type of thing. Address concrete pain points as much as possible with these types of things. And you do get a sense of like, I'm making a money type. I'm making a user ID type like these are probably safe things to just go ahead and create an opaque. Yeah, right away. You know, I do feel like the showable text is interesting. Yeah. I also feel like very unsure about it. I know that there's some pain points that it could solve. Like, yeah, I don't feel good about it either. Right. Yeah. Yeah. Having like a leaky abstraction or an awkward abstraction can really make it very confusing where you're like, why can't I present this thing on the screen? Oh, you have to make it showable text like, oh, OK, well, how do I get showable text? We could do the end. It's like, hmm, it can lend itself to like making code that's scary to touch because you forget what the abstractions mean. So I think that's another thing to keep in mind is like the abstractions should just really be meaningful. And and and it's not something you figure out once and that's it. It's something that you have to like massage over time to make sure it's meaningful and continues to be meaningful and keeps up with your evolving domain and your evolving understanding of the domain. So so, yeah, I think really like make sure that it's a meaningful concept in your domain. So one thing I sometimes think about is like can just giving things a name in a record serve this purpose of giving it context? Now, obviously, you know, you could have a record money that has cents, USD cents in it. And that's that's not good enough. I wouldn't feel good enough about that code to, you know, that abstraction for that. But I don't know. Sometimes if it's like this is a username, this is the first name, the last name, the maybe it's good enough to give it a name instead of just passing string, string, string, string, string, username, first name. You know, if it's a record, sometimes that's good enough. And then, you know, maybe you you preserve those pieces until the last minute. And then when you're presenting it, you say user dot first plus plus space plus plus user dot last. And you're like, yeah, I'm I'm pretty sure I'm using this correctly. Yeah. Whenever I see a function that has two arguments with the same type that are next to each other, like in indoor string string, then I tend to create a record. I could indeed create a new type for this so that we can make we can't mess it up. But I guess in some cases, like they are the same type. And that case, like you have two kinds of monies, like you have USD cents and you have euro cents or you have amount in bank and amount in in wallets. And it's hard to like you probably wouldn't create another type around it. Like you could view money as a primitive at this point. Again, I feel like just creating records is simpler. And in some cases, it's going to be more descriptive because, OK, I have a money argument. But what kind of money does it represent? That, again, is lost. That is information that you don't have. So a record is a pretty good solution for this, I think. For the representation within the opaque type to have a record? No, for function arguments, for instance. So you have a function that displays the money that you have in your wallet and the money you have in your bank account. I see. Then you have a record with money in wallet is money and money in bank account is money. Like a presentational record. Or whatever else you need to do with it. But at least it's better than having money, money. Right, right. Money, money, money. Must be funny. Yeah, I think sometimes that can be sufficient. And it's a good tool to have in your toolkit. And again, I think that concept of unwrap late applies there. Because it preserves the semantics of those field names. Those field names do give some semantic information and that's useful context. Sometimes I think that tuples can be overused. There are certain things that tuples are quite nice for. But I think having tuples and having unnamed custom type arguments. Oh yeah, yeah. Again, a place where you would use records probably. Yeah, exactly. Custom types work very nicely with records. I mean, tuples are useful to easily group things up to a certain number of them. Right. But then when that starts having semantic meaning, now that's concerning. When it's like, you know, I don't know, you have a result, result.map to tuple.pair. You're like saying, hey, I've got two results. I want to map them together. And if things are OK on both of these two things and one of the things is a user and one of the things is their balance. OK, great. Like, you know, you've got these clear concepts of what they are. But if you're getting a record and the positions are the things that give you information and context of what it means, anytime you're getting like context from remembering what things in different positions mean, that's a little bit scary. Yeah. That you might lose context and mix things up. So you just give things names, you know. Sometimes, sometimes like one of the most important things that we do with refactoring is giving things names. You know, like. But naming is hard Dillon. Naming is hard. Naming is absolutely hard. Yeah. I mean, sometimes just, you know, extract a little function or a constant and give something a name. And that's very powerful. Sometimes turn some, you know, a tuple into a record and give those values name. And that it seems like it's not a meaningful difference, but it is because we're humans and we read the code and we infer context from it. So it matters. I think we should have a honorable mention to a package that contains a lot of non primitive values, which is arm units from Ian McKenzie. Yeah, absolutely. You're not going to use them in all applications, but it contains a lot of new primitives in a way that use arm core primitive underhood for like physics and space and distances and a lot of mathematical concepts like angles, energy, pixels, mass, volume, just getting a few of those. So if you are dealing with any of those kinds of units, then it's probably good to take a look at this and then you don't have to do it all yourself. Right. And as to that composability concern, it helps with that because for one thing, you can sort of share these common types that have this semantic meaning with these units. It gives you operations to deal with them in ways that are meaningful for these sort of concepts of these types of units. And yeah, that's a great example of that. So Jeremy Fairbank, he did a whole talk and a few blog posts series about solving the Boolean identity crisis. We haven't talked about that at all, almost. No, we didn't. But it's a very well done talk and very much worth a watch. We'll link to that. Definitely. I do feel like we have addressed some of his concerns in talks like in our episodes like Parsons of Validate and opaque types. So I think with those two and this episode, we covered most of it. So go give those episodes a listen again if you forgot about those and his talk as well. Yeah, we didn't really. He does talk about the concept of parse don't validate a lot. He doesn't refer to it by those terms, but he talks about sort of the idea of like checking for a thing and then getting the thing. But you lose the context that you actually had the thing, which is parse don't validate. That's the term we hear most often these days. Yeah, that term is from at least one point by Lexi Lander was from 2019 and the talk is from 2017. There you go. We can't blame him for the term in advance. Yes, and that's a great point. Also, I think there's something to just get having the context of what a thing means. And he talks about replacing these sort of true and false with more meaningful terms with custom types. And I think that's a great practice that to be honest, I think I underuse that. I think too often I'll say, you know, is production true or false instead of environment, prod or dev. And I think I could definitely make use of that much more often. I still feel like I'm using is required equal true and I'm like, should that be a new type? I don't know. Yeah, I think I don't reach for that as readily as I ought to. I think it's worth trying out to put it like almost everywhere and then evaluate. Yeah, just like I love the techniques. Like what I often say is in Elm, you can try it a few techniques and then it's easy to refactor to remove those as long as you reevaluate it earlier. Yes, I think I think we earn our own trust when we do small refactoring steps and commit them often. We lose trust in our likelihood that we'll ever do a refactoring when we only do big batch refactoring. We have a giant refactoring branch that we don't merge for a month. We stop trusting ourselves and with good reason when that's the only time refactoring happens. So we we that means we aren't going to experiment as much because we know I'm probably never going to refactor this. So, you know, give yourself the luxury of doing small refactoring frequently and and shipping them doing small, safe refactoring steps because that means you and your team are going to build up more trust that you actually will get to a refactoring. And that allows you to experiment more. Also, I gave a talk, I actually haven't really publicized this much or like shared the links, but I'll drop a link in the show notes that I gave a talk called using semantic types to squash bugs. And I talk about this concept of wrap early, unwrap late. I walk through these sort of refactoring steps of how to how to apply that mechanical refactoring we talked about and how to use it to fix a bug. And yeah, so I think if those concepts are interesting, check that out. Is it the one where you talk about social security ideas? It is. Yes, exactly. And I'll drop a link to a blog post I have to about using sort of entry gatekeepers to to check those constraints with opaque types. Well, I think we've I think we've covered primitive obsession pretty well. I hope you like this episode on the tiny steps. I'm sorry. I mean, opaque types. I'm sorry. I mean, primitive reception. We are a broken record type alias. Let's go to the outro, please. All right, Yaron, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 2, "seek": 0, "start": 2.0, "end": 3.0, "text": " What are we talking about today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 3, "seek": 0, "start": 3.0, "end": 8.0, "text": " Today, we're talking about primitive obsession.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 4, "seek": 0, "start": 8.0, "end": 11.0, "text": " Ah, a code smell.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 5, "seek": 0, "start": 11.0, "end": 14.0, "text": " This is a new type of topic for us, so...", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 6, "seek": 0, "start": 14.0, "end": 15.0, "text": " Ah, that is true, yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 7, "seek": 0, "start": 15.0, "end": 16.0, "text": " What?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 8, "seek": 0, "start": 16.0, "end": 21.0, "text": " I mean, we refer to code smells, but we've never done an episode dedicated to a code", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 9, "seek": 0, "start": 21.0, "end": 22.0, "text": " smell, so let's do some definitions.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 10, "seek": 0, "start": 22.0, "end": 25.0, "text": " First of all, maybe we should define what a code smell is.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 11, "seek": 0, "start": 25.0, "end": 26.0, "text": " Yeah, we should.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 708, 366, 321, 1417, 466, 965, 30, 50514, 50514, 2692, 11, 321, 434, 1417, 466, 28540, 30521, 13, 50764, 50764, 2438, 11, 257, 3089, 4316, 13, 50914, 50914, 639, 307, 257, 777, 2010, 295, 4829, 337, 505, 11, 370, 485, 51064, 51064, 2438, 11, 300, 307, 2074, 11, 1338, 13, 51114, 51114, 708, 30, 51164, 51164, 286, 914, 11, 321, 2864, 281, 3089, 10036, 11, 457, 321, 600, 1128, 1096, 364, 3500, 8374, 281, 257, 3089, 51414, 51414, 4316, 11, 370, 718, 311, 360, 512, 21988, 13, 51464, 51464, 2386, 295, 439, 11, 1310, 321, 820, 6964, 437, 257, 3089, 4316, 307, 13, 51614, 51614, 865, 11, 321, 820, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.19167286157608032, "compression_ratio": 1.6473029045643153, "no_caption_prob": 0.21426652371883392}, {"id": 12, "seek": 2600, "start": 26.0, "end": 31.0, "text": " And maybe we can rename the episode to Primitive Obsession Avoidance.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 13, "seek": 2600, "start": 31.0, "end": 36.0, "text": " That way, we don't talk about a code smell, we talk about a technique to improve the situation.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 14, "seek": 2600, "start": 36.0, "end": 40.0, "text": " Don't tell people what not to do, tell them what to do.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 15, "seek": 2600, "start": 40.0, "end": 42.0, "text": " Yes, I like that.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 16, "seek": 2600, "start": 42.0, "end": 45.0, "text": " That's kind of not what I do with Elm Review, but...", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 17, "seek": 2600, "start": 45.0, "end": 48.0, "text": " Well, I guess I do both.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 18, "seek": 2600, "start": 48.0, "end": 50.0, "text": " So, yeah, primitive obsession.", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 19, "seek": 2600, "start": 50.0, "end": 55.0, "text": " I quite like the definition that Jeremy Fairbank gave in his talk, Solving the Bullying Identity", "tokens": [50364, 400, 1310, 321, 393, 36741, 264, 3500, 281, 19671, 2187, 20707, 4311, 41061, 719, 13, 50614, 50614, 663, 636, 11, 321, 500, 380, 751, 466, 257, 3089, 4316, 11, 321, 751, 466, 257, 6532, 281, 3470, 264, 2590, 13, 50864, 50864, 1468, 380, 980, 561, 437, 406, 281, 360, 11, 980, 552, 437, 281, 360, 13, 51064, 51064, 1079, 11, 286, 411, 300, 13, 51164, 51164, 663, 311, 733, 295, 406, 437, 286, 360, 365, 2699, 76, 19954, 11, 457, 485, 51314, 51314, 1042, 11, 286, 2041, 286, 360, 1293, 13, 51464, 51464, 407, 11, 1338, 11, 28540, 30521, 13, 51564, 51564, 286, 1596, 411, 264, 7123, 300, 17809, 12157, 25423, 2729, 294, 702, 751, 11, 7026, 798, 264, 14131, 1840, 25905, 507, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10043565494807687, "compression_ratio": 1.6181818181818182, "no_caption_prob": 0.00011409490980440751}, {"id": 20, "seek": 5500, "start": 55.0, "end": 61.0, "text": " Crisis, which was, primitive obsession is the act of using primitive data types, like", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 21, "seek": 5500, "start": 61.0, "end": 66.0, "text": " Boolean strings or integers, to represent domain concepts.", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 22, "seek": 5500, "start": 66.0, "end": 67.0, "text": " I like that too.", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 23, "seek": 5500, "start": 67.0, "end": 69.0, "text": " Yeah, it fits well.", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 24, "seek": 5500, "start": 69.0, "end": 71.0, "text": " I love the word domain.", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 25, "seek": 5500, "start": 71.0, "end": 79.0, "text": " To me, that is one of the most valuable concepts for writing better code, is being more domain", "tokens": [50364, 42846, 11, 597, 390, 11, 28540, 30521, 307, 264, 605, 295, 1228, 28540, 1412, 3467, 11, 411, 50664, 50664, 23351, 28499, 13985, 420, 41674, 11, 281, 2906, 9274, 10392, 13, 50914, 50914, 286, 411, 300, 886, 13, 50964, 50964, 865, 11, 309, 9001, 731, 13, 51064, 51064, 286, 959, 264, 1349, 9274, 13, 51164, 51164, 1407, 385, 11, 300, 307, 472, 295, 264, 881, 8263, 10392, 337, 3579, 1101, 3089, 11, 307, 885, 544, 9274, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.11417979228345654, "compression_ratio": 1.5463917525773196, "no_caption_prob": 8.887521107681096e-05}, {"id": 26, "seek": 7900, "start": 79.0, "end": 87.0, "text": " oriented and imbuing our code with domain semantics and keeping that in mind.", "tokens": [50364, 21841, 293, 566, 6021, 278, 527, 3089, 365, 9274, 4361, 45298, 293, 5145, 300, 294, 1575, 13, 50764, 50764, 865, 11, 294, 264, 912, 2020, 300, 9274, 9555, 1715, 775, 309, 11, 558, 30, 50964, 50964, 1779, 11, 558, 13, 51014, 51014, 400, 1338, 11, 445, 885, 1075, 281, 1401, 807, 527, 3089, 294, 257, 1090, 1496, 636, 13, 51364, 51364, 682, 257, 636, 11, 16694, 1166, 9410, 287, 2581, 2564, 281, 341, 382, 8851, 281, 32490, 9410, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0865813580954947, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.535446376190521e-05}, {"id": 27, "seek": 7900, "start": 87.0, "end": 91.0, "text": " Yeah, in the same sense that domain driven design does it, right?", "tokens": [50364, 21841, 293, 566, 6021, 278, 527, 3089, 365, 9274, 4361, 45298, 293, 5145, 300, 294, 1575, 13, 50764, 50764, 865, 11, 294, 264, 912, 2020, 300, 9274, 9555, 1715, 775, 309, 11, 558, 30, 50964, 50964, 1779, 11, 558, 13, 51014, 51014, 400, 1338, 11, 445, 885, 1075, 281, 1401, 807, 527, 3089, 294, 257, 1090, 1496, 636, 13, 51364, 51364, 682, 257, 636, 11, 16694, 1166, 9410, 287, 2581, 2564, 281, 341, 382, 8851, 281, 32490, 9410, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0865813580954947, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.535446376190521e-05}, {"id": 28, "seek": 7900, "start": 91.0, "end": 92.0, "text": " Right, right.", "tokens": [50364, 21841, 293, 566, 6021, 278, 527, 3089, 365, 9274, 4361, 45298, 293, 5145, 300, 294, 1575, 13, 50764, 50764, 865, 11, 294, 264, 912, 2020, 300, 9274, 9555, 1715, 775, 309, 11, 558, 30, 50964, 50964, 1779, 11, 558, 13, 51014, 51014, 400, 1338, 11, 445, 885, 1075, 281, 1401, 807, 527, 3089, 294, 257, 1090, 1496, 636, 13, 51364, 51364, 682, 257, 636, 11, 16694, 1166, 9410, 287, 2581, 2564, 281, 341, 382, 8851, 281, 32490, 9410, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0865813580954947, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.535446376190521e-05}, {"id": 29, "seek": 7900, "start": 92.0, "end": 99.0, "text": " And yeah, just being able to read through our code in a high level way.", "tokens": [50364, 21841, 293, 566, 6021, 278, 527, 3089, 365, 9274, 4361, 45298, 293, 5145, 300, 294, 1575, 13, 50764, 50764, 865, 11, 294, 264, 912, 2020, 300, 9274, 9555, 1715, 775, 309, 11, 558, 30, 50964, 50964, 1779, 11, 558, 13, 51014, 51014, 400, 1338, 11, 445, 885, 1075, 281, 1401, 807, 527, 3089, 294, 257, 1090, 1496, 636, 13, 51364, 51364, 682, 257, 636, 11, 16694, 1166, 9410, 287, 2581, 2564, 281, 341, 382, 8851, 281, 32490, 9410, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0865813580954947, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.535446376190521e-05}, {"id": 30, "seek": 7900, "start": 99.0, "end": 104.0, "text": " In a way, declarative programming lends itself to this as opposed to imperative programming", "tokens": [50364, 21841, 293, 566, 6021, 278, 527, 3089, 365, 9274, 4361, 45298, 293, 5145, 300, 294, 1575, 13, 50764, 50764, 865, 11, 294, 264, 912, 2020, 300, 9274, 9555, 1715, 775, 309, 11, 558, 30, 50964, 50964, 1779, 11, 558, 13, 51014, 51014, 400, 1338, 11, 445, 885, 1075, 281, 1401, 807, 527, 3089, 294, 257, 1090, 1496, 636, 13, 51364, 51364, 682, 257, 636, 11, 16694, 1166, 9410, 287, 2581, 2564, 281, 341, 382, 8851, 281, 32490, 9410, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0865813580954947, "compression_ratio": 1.5812807881773399, "no_caption_prob": 3.535446376190521e-05}, {"id": 31, "seek": 10400, "start": 104.0, "end": 110.0, "text": " because it's declaratively stating what it's doing rather than how it's doing it.", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 32, "seek": 10400, "start": 110.0, "end": 114.0, "text": " So in a way, that lends itself more to expressing a domain.", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 33, "seek": 10400, "start": 114.0, "end": 124.0, "text": " And in a way, moving away from primitive values to more domain centric types feels more declarative", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 34, "seek": 10400, "start": 124.0, "end": 125.0, "text": " than imperative.", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 35, "seek": 10400, "start": 125.0, "end": 129.0, "text": " It feels more what rather than how.", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 36, "seek": 10400, "start": 129.0, "end": 130.0, "text": " Yeah.", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 37, "seek": 10400, "start": 130.0, "end": 132.0, "text": " So yeah, what are examples of primitive obsession?", "tokens": [50364, 570, 309, 311, 16694, 19020, 26688, 437, 309, 311, 884, 2831, 813, 577, 309, 311, 884, 309, 13, 50664, 50664, 407, 294, 257, 636, 11, 300, 287, 2581, 2564, 544, 281, 22171, 257, 9274, 13, 50864, 50864, 400, 294, 257, 636, 11, 2684, 1314, 490, 28540, 4190, 281, 544, 9274, 1489, 1341, 3467, 3417, 544, 16694, 1166, 51364, 51364, 813, 32490, 13, 51414, 51414, 467, 3417, 544, 437, 2831, 813, 577, 13, 51614, 51614, 865, 13, 51664, 51664, 407, 1338, 11, 437, 366, 5110, 295, 28540, 30521, 30, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09391534846761952, "compression_ratio": 1.7727272727272727, "no_caption_prob": 0.00018520558660384268}, {"id": 38, "seek": 13200, "start": 132.0, "end": 139.0, "text": " And maybe before we define that, maybe we should just quickly define a code smell, which", "tokens": [50364, 400, 1310, 949, 321, 6964, 300, 11, 1310, 321, 820, 445, 2661, 6964, 257, 3089, 4316, 11, 597, 50714, 50714, 561, 3212, 380, 4963, 13, 50814, 50814, 467, 311, 4476, 264, 3410, 300, 291, 727, 362, 746, 300, 10036, 766, 11, 457, 1310, 51164, 51164, 309, 311, 445, 257, 1481, 3344, 5399, 293, 309, 10036, 257, 707, 4074, 11, 457, 309, 311, 1392, 13, 51364, 51364, 407, 257, 4316, 307, 445, 300, 311, 264, 21663, 307, 300, 309, 311, 746, 281, 574, 666, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09381486069072377, "compression_ratio": 1.6602870813397128, "no_caption_prob": 0.00048019347013905644}, {"id": 39, "seek": 13200, "start": 139.0, "end": 141.0, "text": " people aren't familiar.", "tokens": [50364, 400, 1310, 949, 321, 6964, 300, 11, 1310, 321, 820, 445, 2661, 6964, 257, 3089, 4316, 11, 597, 50714, 50714, 561, 3212, 380, 4963, 13, 50814, 50814, 467, 311, 4476, 264, 3410, 300, 291, 727, 362, 746, 300, 10036, 766, 11, 457, 1310, 51164, 51164, 309, 311, 445, 257, 1481, 3344, 5399, 293, 309, 10036, 257, 707, 4074, 11, 457, 309, 311, 1392, 13, 51364, 51364, 407, 257, 4316, 307, 445, 300, 311, 264, 21663, 307, 300, 309, 311, 746, 281, 574, 666, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09381486069072377, "compression_ratio": 1.6602870813397128, "no_caption_prob": 0.00048019347013905644}, {"id": 40, "seek": 13200, "start": 141.0, "end": 148.0, "text": " It's essentially the concept that you could have something that smells off, but maybe", "tokens": [50364, 400, 1310, 949, 321, 6964, 300, 11, 1310, 321, 820, 445, 2661, 6964, 257, 3089, 4316, 11, 597, 50714, 50714, 561, 3212, 380, 4963, 13, 50814, 50814, 467, 311, 4476, 264, 3410, 300, 291, 727, 362, 746, 300, 10036, 766, 11, 457, 1310, 51164, 51164, 309, 311, 445, 257, 1481, 3344, 5399, 293, 309, 10036, 257, 707, 4074, 11, 457, 309, 311, 1392, 13, 51364, 51364, 407, 257, 4316, 307, 445, 300, 311, 264, 21663, 307, 300, 309, 311, 746, 281, 574, 666, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09381486069072377, "compression_ratio": 1.6602870813397128, "no_caption_prob": 0.00048019347013905644}, {"id": 41, "seek": 13200, "start": 148.0, "end": 152.0, "text": " it's just a nice blue cheese and it smells a little funny, but it's okay.", "tokens": [50364, 400, 1310, 949, 321, 6964, 300, 11, 1310, 321, 820, 445, 2661, 6964, 257, 3089, 4316, 11, 597, 50714, 50714, 561, 3212, 380, 4963, 13, 50814, 50814, 467, 311, 4476, 264, 3410, 300, 291, 727, 362, 746, 300, 10036, 766, 11, 457, 1310, 51164, 51164, 309, 311, 445, 257, 1481, 3344, 5399, 293, 309, 10036, 257, 707, 4074, 11, 457, 309, 311, 1392, 13, 51364, 51364, 407, 257, 4316, 307, 445, 300, 311, 264, 21663, 307, 300, 309, 311, 746, 281, 574, 666, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09381486069072377, "compression_ratio": 1.6602870813397128, "no_caption_prob": 0.00048019347013905644}, {"id": 42, "seek": 13200, "start": 152.0, "end": 158.0, "text": " So a smell is just that's the analogy is that it's something to look into.", "tokens": [50364, 400, 1310, 949, 321, 6964, 300, 11, 1310, 321, 820, 445, 2661, 6964, 257, 3089, 4316, 11, 597, 50714, 50714, 561, 3212, 380, 4963, 13, 50814, 50814, 467, 311, 4476, 264, 3410, 300, 291, 727, 362, 746, 300, 10036, 766, 11, 457, 1310, 51164, 51164, 309, 311, 445, 257, 1481, 3344, 5399, 293, 309, 10036, 257, 707, 4074, 11, 457, 309, 311, 1392, 13, 51364, 51364, 407, 257, 4316, 307, 445, 300, 311, 264, 21663, 307, 300, 309, 311, 746, 281, 574, 666, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09381486069072377, "compression_ratio": 1.6602870813397128, "no_caption_prob": 0.00048019347013905644}, {"id": 43, "seek": 15800, "start": 158.0, "end": 163.0, "text": " It doesn't necessarily mean it's bad, but it's something to think about changing.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 44, "seek": 15800, "start": 163.0, "end": 167.0, "text": " I live in France and I just cannot accept the blue cheese reference.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 45, "seek": 15800, "start": 167.0, "end": 171.0, "text": " It is just not acceptable.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 46, "seek": 15800, "start": 171.0, "end": 176.0, "text": " Blue cheese is smelly and it probably tastes bad.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 47, "seek": 15800, "start": 176.0, "end": 177.0, "text": " I haven't tasted it.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 48, "seek": 15800, "start": 177.0, "end": 178.0, "text": " I won't taste it.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 49, "seek": 15800, "start": 178.0, "end": 184.0, "text": " Well, that sounds like a Dutchman speaking, Dutchman in French clothing.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 50, "seek": 15800, "start": 184.0, "end": 186.0, "text": " That sounds like me, maybe.", "tokens": [50364, 467, 1177, 380, 4725, 914, 309, 311, 1578, 11, 457, 309, 311, 746, 281, 519, 466, 4473, 13, 50614, 50614, 286, 1621, 294, 6190, 293, 286, 445, 2644, 3241, 264, 3344, 5399, 6408, 13, 50814, 50814, 467, 307, 445, 406, 15513, 13, 51014, 51014, 8510, 5399, 307, 4316, 88, 293, 309, 1391, 8666, 1578, 13, 51264, 51264, 286, 2378, 380, 25003, 309, 13, 51314, 51314, 286, 1582, 380, 3939, 309, 13, 51364, 51364, 1042, 11, 300, 3263, 411, 257, 15719, 1601, 4124, 11, 15719, 1601, 294, 5522, 11502, 13, 51664, 51664, 663, 3263, 411, 385, 11, 1310, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06893210317574296, "compression_ratio": 1.6681818181818182, "no_caption_prob": 6.814246444264427e-05}, {"id": 51, "seek": 18600, "start": 186.0, "end": 189.0, "text": " The Dutch actually like the French cheese.", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 52, "seek": 18600, "start": 189.0, "end": 195.0, "text": " So sounds like you're having an identity crisis here in a bullion identity crisis.", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 53, "seek": 18600, "start": 195.0, "end": 201.0, "text": " So we were saying examples of primitive obsession.", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 54, "seek": 18600, "start": 201.0, "end": 204.0, "text": " So primitive obsession.", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 55, "seek": 18600, "start": 204.0, "end": 212.0, "text": " I think a classic example would be if you've got a number being passed around that perhaps", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 56, "seek": 18600, "start": 212.0, "end": 215.0, "text": " represents money, a monetary value.", "tokens": [50364, 440, 15719, 767, 411, 264, 5522, 5399, 13, 50514, 50514, 407, 3263, 411, 291, 434, 1419, 364, 6575, 5869, 510, 294, 257, 4693, 313, 6575, 5869, 13, 50814, 50814, 407, 321, 645, 1566, 5110, 295, 28540, 30521, 13, 51114, 51114, 407, 28540, 30521, 13, 51264, 51264, 286, 519, 257, 7230, 1365, 576, 312, 498, 291, 600, 658, 257, 1230, 885, 4678, 926, 300, 4317, 51664, 51664, 8855, 1460, 11, 257, 26388, 2158, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1493211473737444, "compression_ratio": 1.6029411764705883, "no_caption_prob": 0.00020984494767617434}, {"id": 57, "seek": 21500, "start": 215.0, "end": 222.0, "text": " And I think we can all relate to that's a little bit scary because, for example, you", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 58, "seek": 21500, "start": 222.0, "end": 225.0, "text": " lose the concept of the semantics of that value.", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 59, "seek": 21500, "start": 225.0, "end": 230.0, "text": " There are a few things you lose that like you don't know how you don't know where it", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 60, "seek": 21500, "start": 230.0, "end": 231.0, "text": " came from.", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 61, "seek": 21500, "start": 231.0, "end": 234.0, "text": " You don't know how it can be used.", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 62, "seek": 21500, "start": 234.0, "end": 235.0, "text": " You don't know what it represents.", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 63, "seek": 21500, "start": 235.0, "end": 238.0, "text": " You lose all these pieces because it's just a number.", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 64, "seek": 21500, "start": 238.0, "end": 241.0, "text": " And so does it represent sense?", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 65, "seek": 21500, "start": 241.0, "end": 244.0, "text": " Does it represent a balance?", "tokens": [50364, 400, 286, 519, 321, 393, 439, 10961, 281, 300, 311, 257, 707, 857, 6958, 570, 11, 337, 1365, 11, 291, 50714, 50714, 3624, 264, 3410, 295, 264, 4361, 45298, 295, 300, 2158, 13, 50864, 50864, 821, 366, 257, 1326, 721, 291, 3624, 300, 411, 291, 500, 380, 458, 577, 291, 500, 380, 458, 689, 309, 51114, 51114, 1361, 490, 13, 51164, 51164, 509, 500, 380, 458, 577, 309, 393, 312, 1143, 13, 51314, 51314, 509, 500, 380, 458, 437, 309, 8855, 13, 51364, 51364, 509, 3624, 439, 613, 3755, 570, 309, 311, 445, 257, 1230, 13, 51514, 51514, 400, 370, 775, 309, 2906, 2020, 30, 51664, 51664, 4402, 309, 2906, 257, 4772, 30, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06671693997505383, "compression_ratio": 1.8, "no_caption_prob": 9.027052146848291e-05}, {"id": 66, "seek": 24400, "start": 244.0, "end": 247.0, "text": " Does it represent a difference in balances?", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 67, "seek": 24400, "start": 247.0, "end": 249.0, "text": " Can it be negative?", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 68, "seek": 24400, "start": 249.0, "end": 252.0, "text": " Do you even know whether it represents money?", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 69, "seek": 24400, "start": 252.0, "end": 253.0, "text": " Exactly.", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 70, "seek": 24400, "start": 253.0, "end": 254.0, "text": " Do you know if it represents money?", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 71, "seek": 24400, "start": 254.0, "end": 258.0, "text": " Maybe it's an account number or maybe it's a different denomination.", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 72, "seek": 24400, "start": 258.0, "end": 259.0, "text": " Maybe it's a different currency.", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 73, "seek": 24400, "start": 259.0, "end": 266.0, "text": " So that feels very scary to me to just have a plain old number being passed through and", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 74, "seek": 24400, "start": 266.0, "end": 269.0, "text": " then to use that to update someone's bank balance or something.", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 75, "seek": 24400, "start": 269.0, "end": 272.0, "text": " That feels very scary.", "tokens": [50364, 4402, 309, 2906, 257, 2649, 294, 33993, 30, 50514, 50514, 1664, 309, 312, 3671, 30, 50614, 50614, 1144, 291, 754, 458, 1968, 309, 8855, 1460, 30, 50764, 50764, 7587, 13, 50814, 50814, 1144, 291, 458, 498, 309, 8855, 1460, 30, 50864, 50864, 2704, 309, 311, 364, 2696, 1230, 420, 1310, 309, 311, 257, 819, 1441, 46970, 13, 51064, 51064, 2704, 309, 311, 257, 819, 13346, 13, 51114, 51114, 407, 300, 3417, 588, 6958, 281, 385, 281, 445, 362, 257, 11121, 1331, 1230, 885, 4678, 807, 293, 51464, 51464, 550, 281, 764, 300, 281, 5623, 1580, 311, 3765, 4772, 420, 746, 13, 51614, 51614, 663, 3417, 588, 6958, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06993164760725838, "compression_ratio": 1.8033472803347281, "no_caption_prob": 1.618727037566714e-05}, {"id": 76, "seek": 27200, "start": 272.0, "end": 274.0, "text": " Yep.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 77, "seek": 27200, "start": 274.0, "end": 275.0, "text": " So you could say that way then.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 78, "seek": 27200, "start": 275.0, "end": 276.0, "text": " Yeah, sure.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 79, "seek": 27200, "start": 276.0, "end": 282.0, "text": " So, yeah, this episode is about scaring people into writing better code.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 80, "seek": 27200, "start": 282.0, "end": 284.0, "text": " So hopefully we've succeeded.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 81, "seek": 27200, "start": 284.0, "end": 293.0, "text": " So your way of scaring people is to present them with something that smells bad?", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 82, "seek": 27200, "start": 293.0, "end": 295.0, "text": " Well, it sounded like it scared you.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 83, "seek": 27200, "start": 295.0, "end": 297.0, "text": " Get a knife, Dillon.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 84, "seek": 27200, "start": 297.0, "end": 299.0, "text": " Get a knife.", "tokens": [50364, 7010, 13, 50464, 50464, 407, 291, 727, 584, 300, 636, 550, 13, 50514, 50514, 865, 11, 988, 13, 50564, 50564, 407, 11, 1338, 11, 341, 3500, 307, 466, 795, 1921, 561, 666, 3579, 1101, 3089, 13, 50864, 50864, 407, 4696, 321, 600, 20263, 13, 50964, 50964, 407, 428, 636, 295, 795, 1921, 561, 307, 281, 1974, 552, 365, 746, 300, 10036, 1578, 30, 51414, 51414, 1042, 11, 309, 17714, 411, 309, 5338, 291, 13, 51514, 51514, 3240, 257, 7976, 11, 28160, 13, 51614, 51614, 3240, 257, 7976, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.18760378464408542, "compression_ratio": 1.5647668393782384, "no_caption_prob": 0.00011959270341321826}, {"id": 85, "seek": 29900, "start": 299.0, "end": 306.0, "text": " Yeah, so I think that's to me, that's a classic example of this code smell of primitive obsession.", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 86, "seek": 29900, "start": 306.0, "end": 312.0, "text": " And so like, let's talk about what that fix might look like.", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 87, "seek": 29900, "start": 312.0, "end": 317.0, "text": " Yeah, I think there are other problems that we can highlight, even just when you're reading", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 88, "seek": 29900, "start": 317.0, "end": 318.0, "text": " some code.", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 89, "seek": 29900, "start": 318.0, "end": 322.0, "text": " So as you said, you don't know what something might represent.", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 90, "seek": 29900, "start": 322.0, "end": 327.0, "text": " And that's even more highlighted when you have multiple of those things.", "tokens": [50364, 865, 11, 370, 286, 519, 300, 311, 281, 385, 11, 300, 311, 257, 7230, 1365, 295, 341, 3089, 4316, 295, 28540, 30521, 13, 50714, 50714, 400, 370, 411, 11, 718, 311, 751, 466, 437, 300, 3191, 1062, 574, 411, 13, 51014, 51014, 865, 11, 286, 519, 456, 366, 661, 2740, 300, 321, 393, 5078, 11, 754, 445, 562, 291, 434, 3760, 51264, 51264, 512, 3089, 13, 51314, 51314, 407, 382, 291, 848, 11, 291, 500, 380, 458, 437, 746, 1062, 2906, 13, 51514, 51514, 400, 300, 311, 754, 544, 17173, 562, 291, 362, 3866, 295, 729, 721, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10225720499076095, "compression_ratio": 1.6936170212765957, "no_caption_prob": 4.757364513352513e-05}, {"id": 91, "seek": 32700, "start": 327.0, "end": 333.0, "text": " So if you have a function that takes two integers, usually in Elm, if you read the type of notation", "tokens": [50364, 407, 498, 291, 362, 257, 2445, 300, 2516, 732, 41674, 11, 2673, 294, 2699, 76, 11, 498, 291, 1401, 264, 2010, 295, 24657, 50664, 50664, 295, 257, 2445, 11, 291, 458, 437, 309, 775, 13, 50764, 50764, 583, 498, 291, 362, 257, 2445, 300, 2516, 364, 560, 11, 550, 1071, 560, 293, 11247, 746, 1646, 11, 51114, 51114, 550, 291, 500, 380, 458, 437, 729, 732, 560, 82, 393, 312, 13, 51264, 51264, 759, 291, 362, 257, 1460, 293, 550, 364, 560, 11, 550, 309, 2170, 257, 707, 857, 1850, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.0913766860961914, "compression_ratio": 1.8020833333333333, "no_caption_prob": 0.0001910891296574846}, {"id": 92, "seek": 32700, "start": 333.0, "end": 335.0, "text": " of a function, you know what it does.", "tokens": [50364, 407, 498, 291, 362, 257, 2445, 300, 2516, 732, 41674, 11, 2673, 294, 2699, 76, 11, 498, 291, 1401, 264, 2010, 295, 24657, 50664, 50664, 295, 257, 2445, 11, 291, 458, 437, 309, 775, 13, 50764, 50764, 583, 498, 291, 362, 257, 2445, 300, 2516, 364, 560, 11, 550, 1071, 560, 293, 11247, 746, 1646, 11, 51114, 51114, 550, 291, 500, 380, 458, 437, 729, 732, 560, 82, 393, 312, 13, 51264, 51264, 759, 291, 362, 257, 1460, 293, 550, 364, 560, 11, 550, 309, 2170, 257, 707, 857, 1850, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.0913766860961914, "compression_ratio": 1.8020833333333333, "no_caption_prob": 0.0001910891296574846}, {"id": 93, "seek": 32700, "start": 335.0, "end": 342.0, "text": " But if you have a function that takes an int, then another int and returns something else,", "tokens": [50364, 407, 498, 291, 362, 257, 2445, 300, 2516, 732, 41674, 11, 2673, 294, 2699, 76, 11, 498, 291, 1401, 264, 2010, 295, 24657, 50664, 50664, 295, 257, 2445, 11, 291, 458, 437, 309, 775, 13, 50764, 50764, 583, 498, 291, 362, 257, 2445, 300, 2516, 364, 560, 11, 550, 1071, 560, 293, 11247, 746, 1646, 11, 51114, 51114, 550, 291, 500, 380, 458, 437, 729, 732, 560, 82, 393, 312, 13, 51264, 51264, 759, 291, 362, 257, 1460, 293, 550, 364, 560, 11, 550, 309, 2170, 257, 707, 857, 1850, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.0913766860961914, "compression_ratio": 1.8020833333333333, "no_caption_prob": 0.0001910891296574846}, {"id": 94, "seek": 32700, "start": 342.0, "end": 345.0, "text": " then you don't know what those two ints can be.", "tokens": [50364, 407, 498, 291, 362, 257, 2445, 300, 2516, 732, 41674, 11, 2673, 294, 2699, 76, 11, 498, 291, 1401, 264, 2010, 295, 24657, 50664, 50664, 295, 257, 2445, 11, 291, 458, 437, 309, 775, 13, 50764, 50764, 583, 498, 291, 362, 257, 2445, 300, 2516, 364, 560, 11, 550, 1071, 560, 293, 11247, 746, 1646, 11, 51114, 51114, 550, 291, 500, 380, 458, 437, 729, 732, 560, 82, 393, 312, 13, 51264, 51264, 759, 291, 362, 257, 1460, 293, 550, 364, 560, 11, 550, 309, 2170, 257, 707, 857, 1850, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.0913766860961914, "compression_ratio": 1.8020833333333333, "no_caption_prob": 0.0001910891296574846}, {"id": 95, "seek": 32700, "start": 345.0, "end": 351.0, "text": " If you have a money and then an int, then it gets a little bit clear.", "tokens": [50364, 407, 498, 291, 362, 257, 2445, 300, 2516, 732, 41674, 11, 2673, 294, 2699, 76, 11, 498, 291, 1401, 264, 2010, 295, 24657, 50664, 50664, 295, 257, 2445, 11, 291, 458, 437, 309, 775, 13, 50764, 50764, 583, 498, 291, 362, 257, 2445, 300, 2516, 364, 560, 11, 550, 1071, 560, 293, 11247, 746, 1646, 11, 51114, 51114, 550, 291, 500, 380, 458, 437, 729, 732, 560, 82, 393, 312, 13, 51264, 51264, 759, 291, 362, 257, 1460, 293, 550, 364, 560, 11, 550, 309, 2170, 257, 707, 857, 1850, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.0913766860961914, "compression_ratio": 1.8020833333333333, "no_caption_prob": 0.0001910891296574846}, {"id": 96, "seek": 35100, "start": 351.0, "end": 357.0, "text": " Like, okay, you have maybe this is adding this, maybe this is multiplying an amount of money.", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 97, "seek": 35100, "start": 357.0, "end": 358.0, "text": " I don't know.", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 98, "seek": 35100, "start": 358.0, "end": 359.0, "text": " Yes.", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 99, "seek": 35100, "start": 359.0, "end": 362.0, "text": " But if you have two ints, then it's hard to tell.", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 100, "seek": 35100, "start": 362.0, "end": 369.0, "text": " And also, you have the issue that this can be a potential bug because you can easily", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 101, "seek": 35100, "start": 369.0, "end": 372.0, "text": " swap the two values.", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 102, "seek": 35100, "start": 372.0, "end": 376.0, "text": " If you thought that money was the first argument, but it's actually the second one, then the", "tokens": [50364, 1743, 11, 1392, 11, 291, 362, 1310, 341, 307, 5127, 341, 11, 1310, 341, 307, 30955, 364, 2372, 295, 1460, 13, 50664, 50664, 286, 500, 380, 458, 13, 50714, 50714, 1079, 13, 50764, 50764, 583, 498, 291, 362, 732, 560, 82, 11, 550, 309, 311, 1152, 281, 980, 13, 50914, 50914, 400, 611, 11, 291, 362, 264, 2734, 300, 341, 393, 312, 257, 3995, 7426, 570, 291, 393, 3612, 51264, 51264, 18135, 264, 732, 4190, 13, 51414, 51414, 759, 291, 1194, 300, 1460, 390, 264, 700, 6770, 11, 457, 309, 311, 767, 264, 1150, 472, 11, 550, 264, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1093748036552878, "compression_ratio": 1.6261261261261262, "no_caption_prob": 6.813680374762043e-05}, {"id": 103, "seek": 37600, "start": 376.0, "end": 381.0, "text": " compiler won't help you because the types match, but you will do the wrong thing.", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 104, "seek": 37600, "start": 381.0, "end": 382.0, "text": " Exactly.", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 105, "seek": 37600, "start": 382.0, "end": 388.0, "text": " And I actually realized, you know, we did our if it compiles, it works episode and we're", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 106, "seek": 37600, "start": 388.0, "end": 394.0, "text": " discussing like, what is it that gives us that feeling that when our Elm code compiles,", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 107, "seek": 37600, "start": 394.0, "end": 395.0, "text": " it works?", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 108, "seek": 37600, "start": 395.0, "end": 401.0, "text": " And I realized that this was a major thing that we omitted in that episode that I realized", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 109, "seek": 37600, "start": 401.0, "end": 405.0, "text": " this is one of the things that gives me the most confidence, that feeling that if you", "tokens": [50364, 31958, 1582, 380, 854, 291, 570, 264, 3467, 2995, 11, 457, 291, 486, 360, 264, 2085, 551, 13, 50614, 50614, 7587, 13, 50664, 50664, 400, 286, 767, 5334, 11, 291, 458, 11, 321, 630, 527, 498, 309, 715, 4680, 11, 309, 1985, 3500, 293, 321, 434, 50964, 50964, 10850, 411, 11, 437, 307, 309, 300, 2709, 505, 300, 2633, 300, 562, 527, 2699, 76, 3089, 715, 4680, 11, 51264, 51264, 309, 1985, 30, 51314, 51314, 400, 286, 5334, 300, 341, 390, 257, 2563, 551, 300, 321, 3406, 3944, 294, 300, 3500, 300, 286, 5334, 51614, 51614, 341, 307, 472, 295, 264, 721, 300, 2709, 385, 264, 881, 6687, 11, 300, 2633, 300, 498, 291, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07735084275067863, "compression_ratio": 1.8087649402390438, "no_caption_prob": 2.468111051712185e-05}, {"id": 110, "seek": 40500, "start": 405.0, "end": 411.0, "text": " gather up the correct data types, you can be very confident that you're piecing them", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 111, "seek": 40500, "start": 411.0, "end": 416.0, "text": " together in a valid, meaningful way, which you sort of lose if you're just passing around", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 112, "seek": 40500, "start": 416.0, "end": 418.0, "text": " a bunch of strings, numbers, balls.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 113, "seek": 40500, "start": 418.0, "end": 419.0, "text": " Right.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 114, "seek": 40500, "start": 419.0, "end": 425.0, "text": " Everything you can do Elm programs with only encode.json.encode.values.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 115, "seek": 40500, "start": 425.0, "end": 426.0, "text": " Exactly.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 116, "seek": 40500, "start": 426.0, "end": 428.0, "text": " And that's called JavaScript.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 117, "seek": 40500, "start": 428.0, "end": 433.0, "text": " We need to be we need to do a live stream sometime where we just try building an app", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 118, "seek": 40500, "start": 433.0, "end": 434.0, "text": " that way.", "tokens": [50364, 5448, 493, 264, 3006, 1412, 3467, 11, 291, 393, 312, 588, 6679, 300, 291, 434, 1730, 2175, 552, 50664, 50664, 1214, 294, 257, 7363, 11, 10995, 636, 11, 597, 291, 1333, 295, 3624, 498, 291, 434, 445, 8437, 926, 50914, 50914, 257, 3840, 295, 13985, 11, 3547, 11, 9803, 13, 51014, 51014, 1779, 13, 51064, 51064, 5471, 291, 393, 360, 2699, 76, 4268, 365, 787, 2058, 1429, 13, 73, 3015, 13, 268, 22332, 13, 46033, 13, 51364, 51364, 7587, 13, 51414, 51414, 400, 300, 311, 1219, 15778, 13, 51514, 51514, 492, 643, 281, 312, 321, 643, 281, 360, 257, 1621, 4309, 15053, 689, 321, 445, 853, 2390, 364, 724, 51764, 51764, 300, 636, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10431798837952695, "compression_ratio": 1.5724907063197027, "no_caption_prob": 2.1444753656396642e-05}, {"id": 119, "seek": 43400, "start": 434.0, "end": 438.0, "text": " Oh, God.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 120, "seek": 43400, "start": 438.0, "end": 443.0, "text": " Is it like a masochistic live stream that you want?", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 121, "seek": 43400, "start": 443.0, "end": 444.0, "text": " We'll do it on April Fools.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 122, "seek": 43400, "start": 444.0, "end": 446.0, "text": " How about that?", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 123, "seek": 43400, "start": 446.0, "end": 451.0, "text": " Not looking forward to it.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 124, "seek": 43400, "start": 451.0, "end": 456.0, "text": " Maybe let's go into what you can do to avoid those issues that we mentioned.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 125, "seek": 43400, "start": 456.0, "end": 457.0, "text": " Yeah.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 126, "seek": 43400, "start": 457.0, "end": 459.0, "text": " So let's let's take the money value.", "tokens": [50364, 876, 11, 1265, 13, 50564, 50564, 1119, 309, 411, 257, 2300, 8997, 3142, 1621, 4309, 300, 291, 528, 30, 50814, 50814, 492, 603, 360, 309, 322, 6929, 479, 29298, 13, 50864, 50864, 1012, 466, 300, 30, 50964, 50964, 1726, 1237, 2128, 281, 309, 13, 51214, 51214, 2704, 718, 311, 352, 666, 437, 291, 393, 360, 281, 5042, 729, 2663, 300, 321, 2835, 13, 51464, 51464, 865, 13, 51514, 51514, 407, 718, 311, 718, 311, 747, 264, 1460, 2158, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.14150514947362694, "compression_ratio": 1.379120879120879, "no_caption_prob": 2.3550306650577113e-05}, {"id": 127, "seek": 45900, "start": 459.0, "end": 465.0, "text": " I think I think people can sort of imagine what what we would suggest to avoid this.", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 128, "seek": 45900, "start": 465.0, "end": 472.0, "text": " You wrap it in a type and even better, wrap that type in a module, make it an opaque type.", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 129, "seek": 45900, "start": 472.0, "end": 476.0, "text": " You know, in the case of money, maybe you want to have a phantom type for currency.", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 130, "seek": 45900, "start": 476.0, "end": 477.0, "text": " We've talked about phantom types.", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 131, "seek": 45900, "start": 477.0, "end": 479.0, "text": " We've talked about opaque types.", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 132, "seek": 45900, "start": 479.0, "end": 485.0, "text": " You've heard a lot of a lot of our thoughts on that, although I feel that it is an underappreciated", "tokens": [50364, 286, 519, 286, 519, 561, 393, 1333, 295, 3811, 437, 437, 321, 576, 3402, 281, 5042, 341, 13, 50664, 50664, 509, 7019, 309, 294, 257, 2010, 293, 754, 1101, 11, 7019, 300, 2010, 294, 257, 10088, 11, 652, 309, 364, 42687, 2010, 13, 51014, 51014, 509, 458, 11, 294, 264, 1389, 295, 1460, 11, 1310, 291, 528, 281, 362, 257, 903, 25796, 2010, 337, 13346, 13, 51214, 51214, 492, 600, 2825, 466, 903, 25796, 3467, 13, 51264, 51264, 492, 600, 2825, 466, 42687, 3467, 13, 51364, 51364, 509, 600, 2198, 257, 688, 295, 257, 688, 295, 527, 4598, 322, 300, 11, 4878, 286, 841, 300, 309, 307, 364, 833, 1746, 3326, 770, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05163757965482514, "compression_ratio": 1.7676348547717842, "no_caption_prob": 4.7572691983077675e-05}, {"id": 133, "seek": 48500, "start": 485.0, "end": 492.0, "text": " topic and I think we will we will continue talking about opaque types for a long time to come because", "tokens": [50364, 4829, 293, 286, 519, 321, 486, 321, 486, 2354, 1417, 466, 42687, 3467, 337, 257, 938, 565, 281, 808, 570, 50714, 50714, 286, 519, 436, 434, 257, 588, 1021, 3410, 294, 2699, 76, 13, 50864, 50864, 286, 1920, 841, 411, 309, 311, 257, 10069, 300, 321, 300, 42687, 3467, 2067, 380, 527, 700, 3500, 13, 51114, 51114, 467, 820, 362, 668, 527, 700, 3500, 13, 51264, 51264, 49908, 11, 300, 307, 264, 5143, 295, 257, 688, 295, 527, 4598, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.14213783400399344, "compression_ratio": 1.6305418719211822, "no_caption_prob": 0.00015354884089902043}, {"id": 134, "seek": 48500, "start": 492.0, "end": 495.0, "text": " I think they're a very important concept in Elm.", "tokens": [50364, 4829, 293, 286, 519, 321, 486, 321, 486, 2354, 1417, 466, 42687, 3467, 337, 257, 938, 565, 281, 808, 570, 50714, 50714, 286, 519, 436, 434, 257, 588, 1021, 3410, 294, 2699, 76, 13, 50864, 50864, 286, 1920, 841, 411, 309, 311, 257, 10069, 300, 321, 300, 42687, 3467, 2067, 380, 527, 700, 3500, 13, 51114, 51114, 467, 820, 362, 668, 527, 700, 3500, 13, 51264, 51264, 49908, 11, 300, 307, 264, 5143, 295, 257, 688, 295, 527, 4598, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.14213783400399344, "compression_ratio": 1.6305418719211822, "no_caption_prob": 0.00015354884089902043}, {"id": 135, "seek": 48500, "start": 495.0, "end": 500.0, "text": " I almost feel like it's a shame that we that opaque types wasn't our first episode.", "tokens": [50364, 4829, 293, 286, 519, 321, 486, 321, 486, 2354, 1417, 466, 42687, 3467, 337, 257, 938, 565, 281, 808, 570, 50714, 50714, 286, 519, 436, 434, 257, 588, 1021, 3410, 294, 2699, 76, 13, 50864, 50864, 286, 1920, 841, 411, 309, 311, 257, 10069, 300, 321, 300, 42687, 3467, 2067, 380, 527, 700, 3500, 13, 51114, 51114, 467, 820, 362, 668, 527, 700, 3500, 13, 51264, 51264, 49908, 11, 300, 307, 264, 5143, 295, 257, 688, 295, 527, 4598, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.14213783400399344, "compression_ratio": 1.6305418719211822, "no_caption_prob": 0.00015354884089902043}, {"id": 136, "seek": 48500, "start": 500.0, "end": 503.0, "text": " It should have been our first episode.", "tokens": [50364, 4829, 293, 286, 519, 321, 486, 321, 486, 2354, 1417, 466, 42687, 3467, 337, 257, 938, 565, 281, 808, 570, 50714, 50714, 286, 519, 436, 434, 257, 588, 1021, 3410, 294, 2699, 76, 13, 50864, 50864, 286, 1920, 841, 411, 309, 311, 257, 10069, 300, 321, 300, 42687, 3467, 2067, 380, 527, 700, 3500, 13, 51114, 51114, 467, 820, 362, 668, 527, 700, 3500, 13, 51264, 51264, 49908, 11, 300, 307, 264, 5143, 295, 257, 688, 295, 527, 4598, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.14213783400399344, "compression_ratio": 1.6305418719211822, "no_caption_prob": 0.00015354884089902043}, {"id": 137, "seek": 48500, "start": 503.0, "end": 506.0, "text": " Surprisingly, that is the basis of a lot of our thoughts.", "tokens": [50364, 4829, 293, 286, 519, 321, 486, 321, 486, 2354, 1417, 466, 42687, 3467, 337, 257, 938, 565, 281, 808, 570, 50714, 50714, 286, 519, 436, 434, 257, 588, 1021, 3410, 294, 2699, 76, 13, 50864, 50864, 286, 1920, 841, 411, 309, 311, 257, 10069, 300, 321, 300, 42687, 3467, 2067, 380, 527, 700, 3500, 13, 51114, 51114, 467, 820, 362, 668, 527, 700, 3500, 13, 51264, 51264, 49908, 11, 300, 307, 264, 5143, 295, 257, 688, 295, 527, 4598, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.14213783400399344, "compression_ratio": 1.6305418719211822, "no_caption_prob": 0.00015354884089902043}, {"id": 138, "seek": 50600, "start": 506.0, "end": 515.0, "text": " Yeah, because that's the only way you can truly wrap something and constrain your understanding", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 139, "seek": 50600, "start": 515.0, "end": 518.0, "text": " of how you manipulate that type to to a given context.", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 140, "seek": 50600, "start": 518.0, "end": 520.0, "text": " And that is so powerful.", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 141, "seek": 50600, "start": 520.0, "end": 523.0, "text": " Yeah. So maybe let's break down your advice.", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 142, "seek": 50600, "start": 523.0, "end": 526.0, "text": " So first of all, you said wrap it in a new type.", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 143, "seek": 50600, "start": 526.0, "end": 534.0, "text": " So if you're manipulating money, then maybe for now it's an integer or it's float.", "tokens": [50364, 865, 11, 570, 300, 311, 264, 787, 636, 291, 393, 4908, 7019, 746, 293, 1817, 7146, 428, 3701, 50814, 50814, 295, 577, 291, 20459, 300, 2010, 281, 281, 257, 2212, 4319, 13, 50964, 50964, 400, 300, 307, 370, 4005, 13, 51064, 51064, 865, 13, 407, 1310, 718, 311, 1821, 760, 428, 5192, 13, 51214, 51214, 407, 700, 295, 439, 11, 291, 848, 7019, 309, 294, 257, 777, 2010, 13, 51364, 51364, 407, 498, 291, 434, 40805, 1460, 11, 550, 1310, 337, 586, 309, 311, 364, 24922, 420, 309, 311, 15706, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06400481274253443, "compression_ratio": 1.592760180995475, "no_caption_prob": 3.705070776049979e-05}, {"id": 144, "seek": 53400, "start": 534.0, "end": 540.0, "text": " What you can do is you define a new type, a new custom type that you call money or currency or whatever.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 145, "seek": 53400, "start": 540.0, "end": 546.0, "text": " So you say type money equals money float or int.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 146, "seek": 53400, "start": 546.0, "end": 551.0, "text": " I'm pretty sure that using floats for money is a very bad practice.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 147, "seek": 53400, "start": 551.0, "end": 554.0, "text": " So let's count the number of cents as an integer maybe.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 148, "seek": 53400, "start": 554.0, "end": 557.0, "text": " So type money equals money int.", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 149, "seek": 53400, "start": 557.0, "end": 563.0, "text": " So what that does is that that creates a new type that from the point of view of the compiler", "tokens": [50364, 708, 291, 393, 360, 307, 291, 6964, 257, 777, 2010, 11, 257, 777, 2375, 2010, 300, 291, 818, 1460, 420, 13346, 420, 2035, 13, 50664, 50664, 407, 291, 584, 2010, 1460, 6915, 1460, 15706, 420, 560, 13, 50964, 50964, 286, 478, 1238, 988, 300, 1228, 37878, 337, 1460, 307, 257, 588, 1578, 3124, 13, 51214, 51214, 407, 718, 311, 1207, 264, 1230, 295, 14941, 382, 364, 24922, 1310, 13, 51364, 51364, 407, 2010, 1460, 6915, 1460, 560, 13, 51514, 51514, 407, 437, 300, 775, 307, 300, 300, 7829, 257, 777, 2010, 300, 490, 264, 935, 295, 1910, 295, 264, 31958, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.07799701507274921, "compression_ratio": 1.8235294117647058, "no_caption_prob": 2.840825982275419e-05}, {"id": 150, "seek": 56300, "start": 563.0, "end": 566.0, "text": " will not be the same as an integer.", "tokens": [50364, 486, 406, 312, 264, 912, 382, 364, 24922, 13, 50514, 50514, 407, 291, 434, 516, 281, 362, 281, 7019, 309, 293, 14853, 4007, 309, 689, 291, 434, 516, 281, 1884, 293, 764, 309, 13, 50814, 50814, 583, 300, 486, 5042, 257, 688, 295, 2663, 411, 1419, 12869, 31791, 926, 420, 1228, 2107, 1460, 41674, 382, 1460, 420, 1460, 382, 364, 24922, 13, 51464, 51464, 1079, 13, 1079, 13, 400, 364, 1021, 16844, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10061522892543248, "compression_ratio": 1.65, "no_caption_prob": 4.469222403713502e-05}, {"id": 151, "seek": 56300, "start": 566.0, "end": 572.0, "text": " So you're going to have to wrap it and unwrap it where you're going to create and use it.", "tokens": [50364, 486, 406, 312, 264, 912, 382, 364, 24922, 13, 50514, 50514, 407, 291, 434, 516, 281, 362, 281, 7019, 309, 293, 14853, 4007, 309, 689, 291, 434, 516, 281, 1884, 293, 764, 309, 13, 50814, 50814, 583, 300, 486, 5042, 257, 688, 295, 2663, 411, 1419, 12869, 31791, 926, 420, 1228, 2107, 1460, 41674, 382, 1460, 420, 1460, 382, 364, 24922, 13, 51464, 51464, 1079, 13, 1079, 13, 400, 364, 1021, 16844, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10061522892543248, "compression_ratio": 1.65, "no_caption_prob": 4.469222403713502e-05}, {"id": 152, "seek": 56300, "start": 572.0, "end": 585.0, "text": " But that will avoid a lot of issues like having arguments swept around or using non money integers as money or money as an integer.", "tokens": [50364, 486, 406, 312, 264, 912, 382, 364, 24922, 13, 50514, 50514, 407, 291, 434, 516, 281, 362, 281, 7019, 309, 293, 14853, 4007, 309, 689, 291, 434, 516, 281, 1884, 293, 764, 309, 13, 50814, 50814, 583, 300, 486, 5042, 257, 688, 295, 2663, 411, 1419, 12869, 31791, 926, 420, 1228, 2107, 1460, 41674, 382, 1460, 420, 1460, 382, 364, 24922, 13, 51464, 51464, 1079, 13, 1079, 13, 400, 364, 1021, 16844, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10061522892543248, "compression_ratio": 1.65, "no_caption_prob": 4.469222403713502e-05}, {"id": 153, "seek": 56300, "start": 585.0, "end": 589.0, "text": " Yes. Yes. And an important distinction.", "tokens": [50364, 486, 406, 312, 264, 912, 382, 364, 24922, 13, 50514, 50514, 407, 291, 434, 516, 281, 362, 281, 7019, 309, 293, 14853, 4007, 309, 689, 291, 434, 516, 281, 1884, 293, 764, 309, 13, 50814, 50814, 583, 300, 486, 5042, 257, 688, 295, 2663, 411, 1419, 12869, 31791, 926, 420, 1228, 2107, 1460, 41674, 382, 1460, 420, 1460, 382, 364, 24922, 13, 51464, 51464, 1079, 13, 1079, 13, 400, 364, 1021, 16844, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10061522892543248, "compression_ratio": 1.65, "no_caption_prob": 4.469222403713502e-05}, {"id": 154, "seek": 58900, "start": 589.0, "end": 593.0, "text": " You said use a custom type. You did not say use a type alias.", "tokens": [50364, 509, 848, 764, 257, 2375, 2010, 13, 509, 630, 406, 584, 764, 257, 2010, 419, 4609, 13, 50564, 50564, 400, 300, 307, 588, 1021, 570, 498, 321, 1143, 257, 2010, 419, 4609, 11, 2010, 419, 4609, 1460, 6915, 560, 11, 300, 767, 1177, 380, 4871, 505, 13, 51014, 51014, 492, 727, 764, 527, 1460, 2010, 419, 4609, 294, 472, 1081, 300, 1460, 307, 1143, 293, 406, 294, 1071, 1081, 13, 51364, 51364, 407, 309, 1177, 380, 10815, 300, 264, 2010, 8855, 300, 294, 604, 636, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06344705157809788, "compression_ratio": 1.7538461538461538, "no_caption_prob": 7.843127241358161e-05}, {"id": 155, "seek": 58900, "start": 593.0, "end": 602.0, "text": " And that is very important because if we used a type alias, type alias money equals int, that actually doesn't prevent us.", "tokens": [50364, 509, 848, 764, 257, 2375, 2010, 13, 509, 630, 406, 584, 764, 257, 2010, 419, 4609, 13, 50564, 50564, 400, 300, 307, 588, 1021, 570, 498, 321, 1143, 257, 2010, 419, 4609, 11, 2010, 419, 4609, 1460, 6915, 560, 11, 300, 767, 1177, 380, 4871, 505, 13, 51014, 51014, 492, 727, 764, 527, 1460, 2010, 419, 4609, 294, 472, 1081, 300, 1460, 307, 1143, 293, 406, 294, 1071, 1081, 13, 51364, 51364, 407, 309, 1177, 380, 10815, 300, 264, 2010, 8855, 300, 294, 604, 636, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06344705157809788, "compression_ratio": 1.7538461538461538, "no_caption_prob": 7.843127241358161e-05}, {"id": 156, "seek": 58900, "start": 602.0, "end": 609.0, "text": " We could use our money type alias in one place that money is used and not in another place.", "tokens": [50364, 509, 848, 764, 257, 2375, 2010, 13, 509, 630, 406, 584, 764, 257, 2010, 419, 4609, 13, 50564, 50564, 400, 300, 307, 588, 1021, 570, 498, 321, 1143, 257, 2010, 419, 4609, 11, 2010, 419, 4609, 1460, 6915, 560, 11, 300, 767, 1177, 380, 4871, 505, 13, 51014, 51014, 492, 727, 764, 527, 1460, 2010, 419, 4609, 294, 472, 1081, 300, 1460, 307, 1143, 293, 406, 294, 1071, 1081, 13, 51364, 51364, 407, 309, 1177, 380, 10815, 300, 264, 2010, 8855, 300, 294, 604, 636, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06344705157809788, "compression_ratio": 1.7538461538461538, "no_caption_prob": 7.843127241358161e-05}, {"id": 157, "seek": 58900, "start": 609.0, "end": 616.0, "text": " So it doesn't guarantee that the type represents that in any way.", "tokens": [50364, 509, 848, 764, 257, 2375, 2010, 13, 509, 630, 406, 584, 764, 257, 2010, 419, 4609, 13, 50564, 50564, 400, 300, 307, 588, 1021, 570, 498, 321, 1143, 257, 2010, 419, 4609, 11, 2010, 419, 4609, 1460, 6915, 560, 11, 300, 767, 1177, 380, 4871, 505, 13, 51014, 51014, 492, 727, 764, 527, 1460, 2010, 419, 4609, 294, 472, 1081, 300, 1460, 307, 1143, 293, 406, 294, 1071, 1081, 13, 51364, 51364, 407, 309, 1177, 380, 10815, 300, 264, 2010, 8855, 300, 294, 604, 636, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06344705157809788, "compression_ratio": 1.7538461538461538, "no_caption_prob": 7.843127241358161e-05}, {"id": 158, "seek": 61600, "start": 616.0, "end": 620.0, "text": " And so that can be a bit misleading.", "tokens": [50364, 400, 370, 300, 393, 312, 257, 857, 36429, 13, 50564, 50564, 467, 3417, 411, 321, 600, 658, 257, 1481, 1315, 337, 527, 2010, 13, 50764, 50764, 583, 294, 1186, 11, 309, 1177, 380, 534, 976, 505, 257, 1850, 3410, 295, 437, 309, 8855, 13, 50964, 50964, 407, 2049, 294, 1186, 11, 286, 576, 352, 382, 1400, 281, 584, 300, 1228, 257, 2010, 419, 4609, 337, 505, 11, 257, 517, 822, 28540, 11, 257, 2167, 2158, 28540, 11, 406, 257, 14154, 472, 307, 1391, 257, 3089, 4316, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06705994134420877, "compression_ratio": 1.5446009389671362, "no_caption_prob": 0.00011059959069825709}, {"id": 159, "seek": 61600, "start": 620.0, "end": 624.0, "text": " It feels like we've got a nice name for our type.", "tokens": [50364, 400, 370, 300, 393, 312, 257, 857, 36429, 13, 50564, 50564, 467, 3417, 411, 321, 600, 658, 257, 1481, 1315, 337, 527, 2010, 13, 50764, 50764, 583, 294, 1186, 11, 309, 1177, 380, 534, 976, 505, 257, 1850, 3410, 295, 437, 309, 8855, 13, 50964, 50964, 407, 2049, 294, 1186, 11, 286, 576, 352, 382, 1400, 281, 584, 300, 1228, 257, 2010, 419, 4609, 337, 505, 11, 257, 517, 822, 28540, 11, 257, 2167, 2158, 28540, 11, 406, 257, 14154, 472, 307, 1391, 257, 3089, 4316, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06705994134420877, "compression_ratio": 1.5446009389671362, "no_caption_prob": 0.00011059959069825709}, {"id": 160, "seek": 61600, "start": 624.0, "end": 628.0, "text": " But in fact, it doesn't really give us a clear concept of what it represents.", "tokens": [50364, 400, 370, 300, 393, 312, 257, 857, 36429, 13, 50564, 50564, 467, 3417, 411, 321, 600, 658, 257, 1481, 1315, 337, 527, 2010, 13, 50764, 50764, 583, 294, 1186, 11, 309, 1177, 380, 534, 976, 505, 257, 1850, 3410, 295, 437, 309, 8855, 13, 50964, 50964, 407, 2049, 294, 1186, 11, 286, 576, 352, 382, 1400, 281, 584, 300, 1228, 257, 2010, 419, 4609, 337, 505, 11, 257, 517, 822, 28540, 11, 257, 2167, 2158, 28540, 11, 406, 257, 14154, 472, 307, 1391, 257, 3089, 4316, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06705994134420877, "compression_ratio": 1.5446009389671362, "no_caption_prob": 0.00011059959069825709}, {"id": 161, "seek": 61600, "start": 628.0, "end": 642.0, "text": " So often in fact, I would go as far to say that using a type alias for us, a unary primitive, a single value primitive, not a compound one is probably a code smell.", "tokens": [50364, 400, 370, 300, 393, 312, 257, 857, 36429, 13, 50564, 50564, 467, 3417, 411, 321, 600, 658, 257, 1481, 1315, 337, 527, 2010, 13, 50764, 50764, 583, 294, 1186, 11, 309, 1177, 380, 534, 976, 505, 257, 1850, 3410, 295, 437, 309, 8855, 13, 50964, 50964, 407, 2049, 294, 1186, 11, 286, 576, 352, 382, 1400, 281, 584, 300, 1228, 257, 2010, 419, 4609, 337, 505, 11, 257, 517, 822, 28540, 11, 257, 2167, 2158, 28540, 11, 406, 257, 14154, 472, 307, 1391, 257, 3089, 4316, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.06705994134420877, "compression_ratio": 1.5446009389671362, "no_caption_prob": 0.00011059959069825709}, {"id": 162, "seek": 64200, "start": 642.0, "end": 647.0, "text": " So using a type alias for a record. Great.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 163, "seek": 64200, "start": 647.0, "end": 653.0, "text": " Common practice, often a very good idea using a type alias for a tuple.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 164, "seek": 64200, "start": 653.0, "end": 656.0, "text": " Maybe that's OK. Maybe, maybe not.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 165, "seek": 64200, "start": 656.0, "end": 660.0, "text": " But using a type alias for string, probably a bad idea.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 166, "seek": 64200, "start": 660.0, "end": 665.0, "text": " I can't think of an instance where that would be a good idea.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 167, "seek": 64200, "start": 665.0, "end": 670.0, "text": " I can see some. So first of all, one is performance.", "tokens": [50364, 407, 1228, 257, 2010, 419, 4609, 337, 257, 2136, 13, 3769, 13, 50614, 50614, 18235, 3124, 11, 2049, 257, 588, 665, 1558, 1228, 257, 2010, 419, 4609, 337, 257, 2604, 781, 13, 50914, 50914, 2704, 300, 311, 2264, 13, 2704, 11, 1310, 406, 13, 51064, 51064, 583, 1228, 257, 2010, 419, 4609, 337, 6798, 11, 1391, 257, 1578, 1558, 13, 51264, 51264, 286, 393, 380, 519, 295, 364, 5197, 689, 300, 576, 312, 257, 665, 1558, 13, 51514, 51514, 286, 393, 536, 512, 13, 407, 700, 295, 439, 11, 472, 307, 3389, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07065344839980922, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.943981573684141e-05}, {"id": 168, "seek": 67000, "start": 670.0, "end": 674.0, "text": " I'm going to contradict myself in a second. Just OK.", "tokens": [50364, 286, 478, 516, 281, 28900, 2059, 294, 257, 1150, 13, 1449, 2264, 13, 50564, 50564, 583, 498, 291, 2010, 419, 4609, 11, 291, 500, 380, 362, 281, 7019, 309, 293, 14853, 4007, 309, 439, 264, 565, 13, 50914, 50914, 407, 3089, 10829, 11, 291, 362, 1570, 281, 2464, 11, 457, 300, 311, 611, 544, 3089, 281, 312, 17577, 13, 51214, 51214, 440, 1481, 551, 11, 293, 341, 307, 644, 295, 983, 286, 28900, 2059, 11, 307, 300, 264, 2699, 76, 31958, 19842, 729, 1314, 562, 291, 362, 257, 2375, 2010, 365, 787, 257, 2167, 47479, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1257429313659668, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00015354221977759153}, {"id": 169, "seek": 67000, "start": 674.0, "end": 681.0, "text": " But if you type alias, you don't have to wrap it and unwrap it all the time.", "tokens": [50364, 286, 478, 516, 281, 28900, 2059, 294, 257, 1150, 13, 1449, 2264, 13, 50564, 50564, 583, 498, 291, 2010, 419, 4609, 11, 291, 500, 380, 362, 281, 7019, 309, 293, 14853, 4007, 309, 439, 264, 565, 13, 50914, 50914, 407, 3089, 10829, 11, 291, 362, 1570, 281, 2464, 11, 457, 300, 311, 611, 544, 3089, 281, 312, 17577, 13, 51214, 51214, 440, 1481, 551, 11, 293, 341, 307, 644, 295, 983, 286, 28900, 2059, 11, 307, 300, 264, 2699, 76, 31958, 19842, 729, 1314, 562, 291, 362, 257, 2375, 2010, 365, 787, 257, 2167, 47479, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1257429313659668, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00015354221977759153}, {"id": 170, "seek": 67000, "start": 681.0, "end": 687.0, "text": " So code wise, you have less to write, but that's also more code to be executed.", "tokens": [50364, 286, 478, 516, 281, 28900, 2059, 294, 257, 1150, 13, 1449, 2264, 13, 50564, 50564, 583, 498, 291, 2010, 419, 4609, 11, 291, 500, 380, 362, 281, 7019, 309, 293, 14853, 4007, 309, 439, 264, 565, 13, 50914, 50914, 407, 3089, 10829, 11, 291, 362, 1570, 281, 2464, 11, 457, 300, 311, 611, 544, 3089, 281, 312, 17577, 13, 51214, 51214, 440, 1481, 551, 11, 293, 341, 307, 644, 295, 983, 286, 28900, 2059, 11, 307, 300, 264, 2699, 76, 31958, 19842, 729, 1314, 562, 291, 362, 257, 2375, 2010, 365, 787, 257, 2167, 47479, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1257429313659668, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00015354221977759153}, {"id": 171, "seek": 67000, "start": 687.0, "end": 697.0, "text": " The nice thing, and this is part of why I contradict myself, is that the Elm compiler strips those away when you have a custom type with only a single constructor.", "tokens": [50364, 286, 478, 516, 281, 28900, 2059, 294, 257, 1150, 13, 1449, 2264, 13, 50564, 50564, 583, 498, 291, 2010, 419, 4609, 11, 291, 500, 380, 362, 281, 7019, 309, 293, 14853, 4007, 309, 439, 264, 565, 13, 50914, 50914, 407, 3089, 10829, 11, 291, 362, 1570, 281, 2464, 11, 457, 300, 311, 611, 544, 3089, 281, 312, 17577, 13, 51214, 51214, 440, 1481, 551, 11, 293, 341, 307, 644, 295, 983, 286, 28900, 2059, 11, 307, 300, 264, 2699, 76, 31958, 19842, 729, 1314, 562, 291, 362, 257, 2375, 2010, 365, 787, 257, 2167, 47479, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.1257429313659668, "compression_ratio": 1.5940170940170941, "no_caption_prob": 0.00015354221977759153}, {"id": 172, "seek": 69700, "start": 697.0, "end": 704.0, "text": " And that just wraps one data type. So that's actually not an issue.", "tokens": [50364, 400, 300, 445, 25831, 472, 1412, 2010, 13, 407, 300, 311, 767, 406, 364, 2734, 13, 50714, 50714, 583, 689, 286, 576, 536, 257, 2010, 419, 4609, 885, 1143, 307, 562, 291, 528, 281, 3679, 490, 257, 28540, 281, 257, 2375, 2010, 13, 51214, 51214, 865, 13, 407, 718, 311, 3811, 291, 434, 920, 920, 1364, 365, 41674, 337, 1460, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07489516918475811, "compression_ratio": 1.4534883720930232, "no_caption_prob": 9.080016752704978e-06}, {"id": 173, "seek": 69700, "start": 704.0, "end": 714.0, "text": " But where I would see a type alias being used is when you want to switch from a primitive to a custom type.", "tokens": [50364, 400, 300, 445, 25831, 472, 1412, 2010, 13, 407, 300, 311, 767, 406, 364, 2734, 13, 50714, 50714, 583, 689, 286, 576, 536, 257, 2010, 419, 4609, 885, 1143, 307, 562, 291, 528, 281, 3679, 490, 257, 28540, 281, 257, 2375, 2010, 13, 51214, 51214, 865, 13, 407, 718, 311, 3811, 291, 434, 920, 920, 1364, 365, 41674, 337, 1460, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07489516918475811, "compression_ratio": 1.4534883720930232, "no_caption_prob": 9.080016752704978e-06}, {"id": 174, "seek": 69700, "start": 714.0, "end": 720.0, "text": " Yeah. So let's imagine you're still still working with integers for money.", "tokens": [50364, 400, 300, 445, 25831, 472, 1412, 2010, 13, 407, 300, 311, 767, 406, 364, 2734, 13, 50714, 50714, 583, 689, 286, 576, 536, 257, 2010, 419, 4609, 885, 1143, 307, 562, 291, 528, 281, 3679, 490, 257, 28540, 281, 257, 2375, 2010, 13, 51214, 51214, 865, 13, 407, 718, 311, 3811, 291, 434, 920, 920, 1364, 365, 41674, 337, 1460, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07489516918475811, "compression_ratio": 1.4534883720930232, "no_caption_prob": 9.080016752704978e-06}, {"id": 175, "seek": 72000, "start": 720.0, "end": 727.0, "text": " How do you go about going towards using a custom type, a non primitive type?", "tokens": [50364, 1012, 360, 291, 352, 466, 516, 3030, 1228, 257, 2375, 2010, 11, 257, 2107, 28540, 2010, 30, 50714, 50714, 708, 291, 393, 360, 307, 291, 393, 1884, 257, 2010, 419, 4609, 337, 428, 1460, 293, 722, 1228, 300, 13, 51064, 51064, 407, 689, 291, 949, 291, 632, 560, 11610, 17995, 3636, 420, 746, 11, 291, 586, 362, 1460, 11610, 17995, 3636, 13, 51514, 51514, 400, 291, 393, 909, 729, 1238, 16979, 382, 291, 352, 926, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08334454894065857, "compression_ratio": 1.6243654822335025, "no_caption_prob": 5.6817543736542575e-06}, {"id": 176, "seek": 72000, "start": 727.0, "end": 734.0, "text": " What you can do is you can create a type alias for your money and start using that.", "tokens": [50364, 1012, 360, 291, 352, 466, 516, 3030, 1228, 257, 2375, 2010, 11, 257, 2107, 28540, 2010, 30, 50714, 50714, 708, 291, 393, 360, 307, 291, 393, 1884, 257, 2010, 419, 4609, 337, 428, 1460, 293, 722, 1228, 300, 13, 51064, 51064, 407, 689, 291, 949, 291, 632, 560, 11610, 17995, 3636, 420, 746, 11, 291, 586, 362, 1460, 11610, 17995, 3636, 13, 51514, 51514, 400, 291, 393, 909, 729, 1238, 16979, 382, 291, 352, 926, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08334454894065857, "compression_ratio": 1.6243654822335025, "no_caption_prob": 5.6817543736542575e-06}, {"id": 177, "seek": 72000, "start": 734.0, "end": 743.0, "text": " So where you before you had int arrow HTML message or something, you now have money arrow HTML message.", "tokens": [50364, 1012, 360, 291, 352, 466, 516, 3030, 1228, 257, 2375, 2010, 11, 257, 2107, 28540, 2010, 30, 50714, 50714, 708, 291, 393, 360, 307, 291, 393, 1884, 257, 2010, 419, 4609, 337, 428, 1460, 293, 722, 1228, 300, 13, 51064, 51064, 407, 689, 291, 949, 291, 632, 560, 11610, 17995, 3636, 420, 746, 11, 291, 586, 362, 1460, 11610, 17995, 3636, 13, 51514, 51514, 400, 291, 393, 909, 729, 1238, 16979, 382, 291, 352, 926, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08334454894065857, "compression_ratio": 1.6243654822335025, "no_caption_prob": 5.6817543736542575e-06}, {"id": 178, "seek": 72000, "start": 743.0, "end": 749.0, "text": " And you can add those pretty randomly as you go around.", "tokens": [50364, 1012, 360, 291, 352, 466, 516, 3030, 1228, 257, 2375, 2010, 11, 257, 2107, 28540, 2010, 30, 50714, 50714, 708, 291, 393, 360, 307, 291, 393, 1884, 257, 2010, 419, 4609, 337, 428, 1460, 293, 722, 1228, 300, 13, 51064, 51064, 407, 689, 291, 949, 291, 632, 560, 11610, 17995, 3636, 420, 746, 11, 291, 586, 362, 1460, 11610, 17995, 3636, 13, 51514, 51514, 400, 291, 393, 909, 729, 1238, 16979, 382, 291, 352, 926, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08334454894065857, "compression_ratio": 1.6243654822335025, "no_caption_prob": 5.6817543736542575e-06}, {"id": 179, "seek": 74900, "start": 749.0, "end": 757.0, "text": " Maybe in some cases that will actually not be true. So that's a pitfall. So when you have just something that's not money and use it as money.", "tokens": [50364, 2704, 294, 512, 3331, 300, 486, 767, 406, 312, 2074, 13, 407, 300, 311, 257, 10147, 6691, 13, 407, 562, 291, 362, 445, 746, 300, 311, 406, 1460, 293, 764, 309, 382, 1460, 13, 50764, 50764, 7587, 13, 1779, 13, 50864, 50864, 583, 264, 551, 307, 11, 562, 291, 360, 300, 11, 291, 434, 884, 257, 5870, 1823, 3030, 1419, 264, 2010, 1143, 689, 291, 643, 309, 281, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10460993361799684, "compression_ratio": 1.542857142857143, "no_caption_prob": 2.9770235414616764e-05}, {"id": 180, "seek": 74900, "start": 757.0, "end": 759.0, "text": " Exactly. Right.", "tokens": [50364, 2704, 294, 512, 3331, 300, 486, 767, 406, 312, 2074, 13, 407, 300, 311, 257, 10147, 6691, 13, 407, 562, 291, 362, 445, 746, 300, 311, 406, 1460, 293, 764, 309, 382, 1460, 13, 50764, 50764, 7587, 13, 1779, 13, 50864, 50864, 583, 264, 551, 307, 11, 562, 291, 360, 300, 11, 291, 434, 884, 257, 5870, 1823, 3030, 1419, 264, 2010, 1143, 689, 291, 643, 309, 281, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10460993361799684, "compression_ratio": 1.542857142857143, "no_caption_prob": 2.9770235414616764e-05}, {"id": 181, "seek": 74900, "start": 759.0, "end": 769.0, "text": " But the thing is, when you do that, you're doing a tiny step towards having the type used where you need it to.", "tokens": [50364, 2704, 294, 512, 3331, 300, 486, 767, 406, 312, 2074, 13, 407, 300, 311, 257, 10147, 6691, 13, 407, 562, 291, 362, 445, 746, 300, 311, 406, 1460, 293, 764, 309, 382, 1460, 13, 50764, 50764, 7587, 13, 1779, 13, 50864, 50864, 583, 264, 551, 307, 11, 562, 291, 360, 300, 11, 291, 434, 884, 257, 5870, 1823, 3030, 1419, 264, 2010, 1143, 689, 291, 643, 309, 281, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.10460993361799684, "compression_ratio": 1.542857142857143, "no_caption_prob": 2.9770235414616764e-05}, {"id": 182, "seek": 76900, "start": 769.0, "end": 779.0, "text": " And then as we like to do, we commit and then we change the type from the type alias to a custom type with wrapping and unwrapping that we need.", "tokens": [50364, 400, 550, 382, 321, 411, 281, 360, 11, 321, 5599, 293, 550, 321, 1319, 264, 2010, 490, 264, 2010, 419, 4609, 281, 257, 2375, 2010, 365, 21993, 293, 14853, 424, 3759, 300, 321, 643, 13, 50864, 50864, 400, 550, 321, 483, 257, 688, 295, 31958, 13603, 293, 321, 445, 362, 281, 14151, 729, 472, 538, 472, 13, 51164, 51164, 400, 300, 307, 1238, 709, 577, 321, 393, 3612, 31821, 490, 1419, 257, 28540, 337, 1460, 281, 257, 2375, 2010, 300, 775, 406, 362, 264, 912, 2663, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04195056380806388, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.6272895411239006e-05}, {"id": 183, "seek": 76900, "start": 779.0, "end": 785.0, "text": " And then we get a lot of compiler errors and we just have to resolve those one by one.", "tokens": [50364, 400, 550, 382, 321, 411, 281, 360, 11, 321, 5599, 293, 550, 321, 1319, 264, 2010, 490, 264, 2010, 419, 4609, 281, 257, 2375, 2010, 365, 21993, 293, 14853, 424, 3759, 300, 321, 643, 13, 50864, 50864, 400, 550, 321, 483, 257, 688, 295, 31958, 13603, 293, 321, 445, 362, 281, 14151, 729, 472, 538, 472, 13, 51164, 51164, 400, 300, 307, 1238, 709, 577, 321, 393, 3612, 31821, 490, 1419, 257, 28540, 337, 1460, 281, 257, 2375, 2010, 300, 775, 406, 362, 264, 912, 2663, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04195056380806388, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.6272895411239006e-05}, {"id": 184, "seek": 76900, "start": 785.0, "end": 797.0, "text": " And that is pretty much how we can easily migrate from having a primitive for money to a custom type that does not have the same issues.", "tokens": [50364, 400, 550, 382, 321, 411, 281, 360, 11, 321, 5599, 293, 550, 321, 1319, 264, 2010, 490, 264, 2010, 419, 4609, 281, 257, 2375, 2010, 365, 21993, 293, 14853, 424, 3759, 300, 321, 643, 13, 50864, 50864, 400, 550, 321, 483, 257, 688, 295, 31958, 13603, 293, 321, 445, 362, 281, 14151, 729, 472, 538, 472, 13, 51164, 51164, 400, 300, 307, 1238, 709, 577, 321, 393, 3612, 31821, 490, 1419, 257, 28540, 337, 1460, 281, 257, 2375, 2010, 300, 775, 406, 362, 264, 912, 2663, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04195056380806388, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.6272895411239006e-05}, {"id": 185, "seek": 79700, "start": 797.0, "end": 811.0, "text": " Yeah. So I'm a bit torn because I am a huge fan of tiny steps, but I am also uncomfortable with the idea of, well, I guess put it this way.", "tokens": [50364, 865, 13, 407, 286, 478, 257, 857, 10885, 570, 286, 669, 257, 2603, 3429, 295, 5870, 4439, 11, 457, 286, 669, 611, 10532, 365, 264, 1558, 295, 11, 731, 11, 286, 2041, 829, 309, 341, 636, 13, 51064, 51064, 286, 478, 257, 2603, 14608, 337, 5870, 4439, 13, 286, 478, 611, 364, 14608, 337, 5824, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1058719793955485, "compression_ratio": 1.4893617021276595, "no_caption_prob": 7.483862282242626e-05}, {"id": 186, "seek": 79700, "start": 811.0, "end": 817.0, "text": " I'm a huge advocate for tiny steps. I'm also an advocate for feedback.", "tokens": [50364, 865, 13, 407, 286, 478, 257, 857, 10885, 570, 286, 669, 257, 2603, 3429, 295, 5870, 4439, 11, 457, 286, 669, 611, 10532, 365, 264, 1558, 295, 11, 731, 11, 286, 2041, 829, 309, 341, 636, 13, 51064, 51064, 286, 478, 257, 2603, 14608, 337, 5870, 4439, 13, 286, 478, 611, 364, 14608, 337, 5824, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1058719793955485, "compression_ratio": 1.4893617021276595, "no_caption_prob": 7.483862282242626e-05}, {"id": 187, "seek": 81700, "start": 817.0, "end": 829.0, "text": " And I feel that while replacing our money type, our int money type with a type alias checks the box for tiny steps, it doesn't check a box for feedback.", "tokens": [50364, 400, 286, 841, 300, 1339, 19139, 527, 1460, 2010, 11, 527, 560, 1460, 2010, 365, 257, 2010, 419, 4609, 13834, 264, 2424, 337, 5870, 4439, 11, 309, 1177, 380, 1520, 257, 2424, 337, 5824, 13, 50964, 50964, 400, 300, 311, 437, 7389, 385, 13, 407, 11, 337, 1365, 11, 321, 727, 764, 309, 294, 257, 1081, 300, 767, 1177, 380, 2906, 1460, 293, 406, 483, 5824, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04857531735594844, "compression_ratio": 1.5833333333333333, "no_caption_prob": 4.832140257349238e-05}, {"id": 188, "seek": 81700, "start": 829.0, "end": 838.0, "text": " And that's what concerns me. So, for example, we could use it in a place that actually doesn't represent money and not get feedback.", "tokens": [50364, 400, 286, 841, 300, 1339, 19139, 527, 1460, 2010, 11, 527, 560, 1460, 2010, 365, 257, 2010, 419, 4609, 13834, 264, 2424, 337, 5870, 4439, 11, 309, 1177, 380, 1520, 257, 2424, 337, 5824, 13, 50964, 50964, 400, 300, 311, 437, 7389, 385, 13, 407, 11, 337, 1365, 11, 321, 727, 764, 309, 294, 257, 1081, 300, 767, 1177, 380, 2906, 1460, 293, 406, 483, 5824, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.04857531735594844, "compression_ratio": 1.5833333333333333, "no_caption_prob": 4.832140257349238e-05}, {"id": 189, "seek": 83800, "start": 838.0, "end": 853.0, "text": " We could forget to use it in a place where we're actually passing through something that we changed to use our money type alias and downstream from it, it's not going to complain that we forgot to change another place.", "tokens": [50364, 492, 727, 2870, 281, 764, 309, 294, 257, 1081, 689, 321, 434, 767, 8437, 807, 746, 300, 321, 3105, 281, 764, 527, 1460, 2010, 419, 4609, 293, 30621, 490, 309, 11, 309, 311, 406, 516, 281, 11024, 300, 321, 5298, 281, 1319, 1071, 1081, 13, 51114, 51114, 1079, 13, 407, 321, 434, 1723, 766, 490, 5824, 13, 51264, 51264, 865, 13, 1171, 300, 472, 11, 286, 500, 380, 1575, 570, 452, 1558, 412, 1935, 307, 281, 764, 1460, 294, 512, 3190, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08334480330001476, "compression_ratio": 1.6121495327102804, "no_caption_prob": 3.120067049167119e-05}, {"id": 190, "seek": 83800, "start": 853.0, "end": 856.0, "text": " Yes. So we're cut off from feedback.", "tokens": [50364, 492, 727, 2870, 281, 764, 309, 294, 257, 1081, 689, 321, 434, 767, 8437, 807, 746, 300, 321, 3105, 281, 764, 527, 1460, 2010, 419, 4609, 293, 30621, 490, 309, 11, 309, 311, 406, 516, 281, 11024, 300, 321, 5298, 281, 1319, 1071, 1081, 13, 51114, 51114, 1079, 13, 407, 321, 434, 1723, 766, 490, 5824, 13, 51264, 51264, 865, 13, 1171, 300, 472, 11, 286, 500, 380, 1575, 570, 452, 1558, 412, 1935, 307, 281, 764, 1460, 294, 512, 3190, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08334480330001476, "compression_ratio": 1.6121495327102804, "no_caption_prob": 3.120067049167119e-05}, {"id": 191, "seek": 83800, "start": 856.0, "end": 863.0, "text": " Yeah. For that one, I don't mind because my idea at least is to use money in some places.", "tokens": [50364, 492, 727, 2870, 281, 764, 309, 294, 257, 1081, 689, 321, 434, 767, 8437, 807, 746, 300, 321, 3105, 281, 764, 527, 1460, 2010, 419, 4609, 293, 30621, 490, 309, 11, 309, 311, 406, 516, 281, 11024, 300, 321, 5298, 281, 1319, 1071, 1081, 13, 51114, 51114, 1079, 13, 407, 321, 434, 1723, 766, 490, 5824, 13, 51264, 51264, 865, 13, 1171, 300, 472, 11, 286, 500, 380, 1575, 570, 452, 1558, 412, 1935, 307, 281, 764, 1460, 294, 512, 3190, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08334480330001476, "compression_ratio": 1.6121495327102804, "no_caption_prob": 3.120067049167119e-05}, {"id": 192, "seek": 86300, "start": 863.0, "end": 869.0, "text": " And then when you switch it, you will be notified of more places you're going to need to add it.", "tokens": [50364, 400, 550, 562, 291, 3679, 309, 11, 291, 486, 312, 18013, 295, 544, 3190, 291, 434, 516, 281, 643, 281, 909, 309, 13, 50664, 50664, 865, 13, 400, 264, 1558, 307, 406, 281, 764, 309, 5315, 293, 406, 362, 604, 5824, 293, 281, 550, 3679, 13, 51014, 51014, 1779, 13, 467, 311, 257, 8231, 4745, 1823, 281, 5407, 264, 589, 337, 264, 958, 1823, 562, 291, 1261, 309, 666, 364, 3539, 2375, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11876632005740435, "compression_ratio": 1.532994923857868, "no_caption_prob": 4.133291804464534e-05}, {"id": 193, "seek": 86300, "start": 869.0, "end": 876.0, "text": " Yeah. And the idea is not to use it everywhere and not have any feedback and to then switch.", "tokens": [50364, 400, 550, 562, 291, 3679, 309, 11, 291, 486, 312, 18013, 295, 544, 3190, 291, 434, 516, 281, 643, 281, 909, 309, 13, 50664, 50664, 865, 13, 400, 264, 1558, 307, 406, 281, 764, 309, 5315, 293, 406, 362, 604, 5824, 293, 281, 550, 3679, 13, 51014, 51014, 1779, 13, 467, 311, 257, 8231, 4745, 1823, 281, 5407, 264, 589, 337, 264, 958, 1823, 562, 291, 1261, 309, 666, 364, 3539, 2375, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11876632005740435, "compression_ratio": 1.532994923857868, "no_caption_prob": 4.133291804464534e-05}, {"id": 194, "seek": 86300, "start": 876.0, "end": 886.0, "text": " Right. It's a preparatory step to reduce the work for the next step when you turn it into an actual custom type.", "tokens": [50364, 400, 550, 562, 291, 3679, 309, 11, 291, 486, 312, 18013, 295, 544, 3190, 291, 434, 516, 281, 643, 281, 909, 309, 13, 50664, 50664, 865, 13, 400, 264, 1558, 307, 406, 281, 764, 309, 5315, 293, 406, 362, 604, 5824, 293, 281, 550, 3679, 13, 51014, 51014, 1779, 13, 467, 311, 257, 8231, 4745, 1823, 281, 5407, 264, 589, 337, 264, 958, 1823, 562, 291, 1261, 309, 666, 364, 3539, 2375, 2010, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.11876632005740435, "compression_ratio": 1.532994923857868, "no_caption_prob": 4.133291804464534e-05}, {"id": 195, "seek": 88600, "start": 886.0, "end": 898.0, "text": " Yeah. And also, like one of the aspects of tiny steps is improvement. So as long as you improve the code base, a tiny step is a good thing.", "tokens": [50364, 865, 13, 400, 611, 11, 411, 472, 295, 264, 7270, 295, 5870, 4439, 307, 10444, 13, 407, 382, 938, 382, 291, 3470, 264, 3089, 3096, 11, 257, 5870, 1823, 307, 257, 665, 551, 13, 50964, 50964, 400, 286, 841, 411, 309, 311, 1217, 5062, 291, 512, 2158, 562, 291, 362, 257, 2445, 300, 311, 1401, 382, 560, 560, 17995, 3636, 300, 586, 15700, 382, 1460, 560, 17995, 3636, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.09205810337850492, "compression_ratio": 1.5775401069518717, "no_caption_prob": 5.6493729061912745e-05}, {"id": 196, "seek": 88600, "start": 898.0, "end": 909.0, "text": " And I feel like it's already bringing you some value when you have a function that's read as int int HTML message that now reads as money int HTML message.", "tokens": [50364, 865, 13, 400, 611, 11, 411, 472, 295, 264, 7270, 295, 5870, 4439, 307, 10444, 13, 407, 382, 938, 382, 291, 3470, 264, 3089, 3096, 11, 257, 5870, 1823, 307, 257, 665, 551, 13, 50964, 50964, 400, 286, 841, 411, 309, 311, 1217, 5062, 291, 512, 2158, 562, 291, 362, 257, 2445, 300, 311, 1401, 382, 560, 560, 17995, 3636, 300, 586, 15700, 382, 1460, 560, 17995, 3636, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.09205810337850492, "compression_ratio": 1.5775401069518717, "no_caption_prob": 5.6493729061912745e-05}, {"id": 197, "seek": 90900, "start": 909.0, "end": 916.0, "text": " So that also already brings some value, even though the compiler won't help you. It brings some value.", "tokens": [50364, 407, 300, 611, 1217, 5607, 512, 2158, 11, 754, 1673, 264, 31958, 1582, 380, 854, 291, 13, 467, 5607, 512, 2158, 13, 50714, 50714, 440, 551, 300, 7389, 385, 307, 300, 309, 393, 976, 257, 7908, 2020, 295, 3825, 300, 321, 600, 9689, 309, 293, 321, 393, 764, 309, 42892, 293, 406, 458, 13, 51214, 51214, 407, 718, 385, 976, 364, 8535, 3109, 300, 286, 411, 281, 764, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07744369114914985, "compression_ratio": 1.601063829787234, "no_caption_prob": 3.480538725852966e-05}, {"id": 198, "seek": 90900, "start": 916.0, "end": 926.0, "text": " The thing that concerns me is that it can give a false sense of security that we've improved it and we can use it incorrectly and not know.", "tokens": [50364, 407, 300, 611, 1217, 5607, 512, 2158, 11, 754, 1673, 264, 31958, 1582, 380, 854, 291, 13, 467, 5607, 512, 2158, 13, 50714, 50714, 440, 551, 300, 7389, 385, 307, 300, 309, 393, 976, 257, 7908, 2020, 295, 3825, 300, 321, 600, 9689, 309, 293, 321, 393, 764, 309, 42892, 293, 406, 458, 13, 51214, 51214, 407, 718, 385, 976, 364, 8535, 3109, 300, 286, 411, 281, 764, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07744369114914985, "compression_ratio": 1.601063829787234, "no_caption_prob": 3.480538725852966e-05}, {"id": 199, "seek": 90900, "start": 926.0, "end": 932.0, "text": " So let me give an alternative approach that I like to use.", "tokens": [50364, 407, 300, 611, 1217, 5607, 512, 2158, 11, 754, 1673, 264, 31958, 1582, 380, 854, 291, 13, 467, 5607, 512, 2158, 13, 50714, 50714, 440, 551, 300, 7389, 385, 307, 300, 309, 393, 976, 257, 7908, 2020, 295, 3825, 300, 321, 600, 9689, 309, 293, 321, 393, 764, 309, 42892, 293, 406, 458, 13, 51214, 51214, 407, 718, 385, 976, 364, 8535, 3109, 300, 286, 411, 281, 764, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.07744369114914985, "compression_ratio": 1.601063829787234, "no_caption_prob": 3.480538725852966e-05}, {"id": 200, "seek": 93200, "start": 932.0, "end": 947.0, "text": " And I think this is kind of an example of a technique that I see sometimes in sort of, you know, code craft circles of trying to take the craft of coding seriously and refactoring and stuff.", "tokens": [50364, 400, 286, 519, 341, 307, 733, 295, 364, 1365, 295, 257, 6532, 300, 286, 536, 2171, 294, 1333, 295, 11, 291, 458, 11, 3089, 8448, 13040, 295, 1382, 281, 747, 264, 8448, 295, 17720, 6638, 293, 1895, 578, 3662, 293, 1507, 13, 51114, 51114, 286, 519, 309, 311, 257, 286, 519, 309, 311, 257, 665, 6532, 11, 597, 307, 1333, 295, 257, 12909, 18473, 1895, 578, 3662, 689, 291, 393, 1936, 1524, 257, 6782, 295, 1228, 264, 31958, 281, 652, 257, 1319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05495757618169675, "compression_ratio": 1.6837209302325582, "no_caption_prob": 1.3006127119297162e-05}, {"id": 201, "seek": 93200, "start": 947.0, "end": 959.0, "text": " I think it's a I think it's a good technique, which is sort of a semi automated refactoring where you can basically follow a recipe of using the compiler to make a change.", "tokens": [50364, 400, 286, 519, 341, 307, 733, 295, 364, 1365, 295, 257, 6532, 300, 286, 536, 2171, 294, 1333, 295, 11, 291, 458, 11, 3089, 8448, 13040, 295, 1382, 281, 747, 264, 8448, 295, 17720, 6638, 293, 1895, 578, 3662, 293, 1507, 13, 51114, 51114, 286, 519, 309, 311, 257, 286, 519, 309, 311, 257, 665, 6532, 11, 597, 307, 1333, 295, 257, 12909, 18473, 1895, 578, 3662, 689, 291, 393, 1936, 1524, 257, 6782, 295, 1228, 264, 31958, 281, 652, 257, 1319, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.05495757618169675, "compression_ratio": 1.6837209302325582, "no_caption_prob": 1.3006127119297162e-05}, {"id": 202, "seek": 95900, "start": 959.0, "end": 968.0, "text": " And I love how you say recipe instead of algorithm. Pretty much an algorithm. Yeah, that's right. And yeah. So so here's here's my algorithm.", "tokens": [50364, 400, 286, 959, 577, 291, 584, 6782, 2602, 295, 9284, 13, 10693, 709, 364, 9284, 13, 865, 11, 300, 311, 558, 13, 400, 1338, 13, 407, 370, 510, 311, 510, 311, 452, 9284, 13, 50814, 50814, 407, 264, 9284, 307, 291, 600, 658, 428, 1460, 2010, 11, 597, 307, 291, 434, 445, 1228, 257, 8936, 560, 13, 51164, 51164, 400, 264, 1823, 472, 11, 718, 311, 584, 291, 434, 787, 1228, 309, 294, 472, 10088, 337, 586, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0902705134415045, "compression_ratio": 1.6162162162162161, "no_caption_prob": 9.223322194884531e-06}, {"id": 203, "seek": 95900, "start": 968.0, "end": 975.0, "text": " So the algorithm is you've got your money type, which is you're just using a raw int.", "tokens": [50364, 400, 286, 959, 577, 291, 584, 6782, 2602, 295, 9284, 13, 10693, 709, 364, 9284, 13, 865, 11, 300, 311, 558, 13, 400, 1338, 13, 407, 370, 510, 311, 510, 311, 452, 9284, 13, 50814, 50814, 407, 264, 9284, 307, 291, 600, 658, 428, 1460, 2010, 11, 597, 307, 291, 434, 445, 1228, 257, 8936, 560, 13, 51164, 51164, 400, 264, 1823, 472, 11, 718, 311, 584, 291, 434, 787, 1228, 309, 294, 472, 10088, 337, 586, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0902705134415045, "compression_ratio": 1.6162162162162161, "no_caption_prob": 9.223322194884531e-06}, {"id": 204, "seek": 95900, "start": 975.0, "end": 982.0, "text": " And the step one, let's say you're only using it in one module for now.", "tokens": [50364, 400, 286, 959, 577, 291, 584, 6782, 2602, 295, 9284, 13, 10693, 709, 364, 9284, 13, 865, 11, 300, 311, 558, 13, 400, 1338, 13, 407, 370, 510, 311, 510, 311, 452, 9284, 13, 50814, 50814, 407, 264, 9284, 307, 291, 600, 658, 428, 1460, 2010, 11, 597, 307, 291, 434, 445, 1228, 257, 8936, 560, 13, 51164, 51164, 400, 264, 1823, 472, 11, 718, 311, 584, 291, 434, 787, 1228, 309, 294, 472, 10088, 337, 586, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0902705134415045, "compression_ratio": 1.6162162162162161, "no_caption_prob": 9.223322194884531e-06}, {"id": 205, "seek": 98200, "start": 982.0, "end": 993.0, "text": " But define type money equals money. So define just a wrapper custom type, then wrap early, unwrap late.", "tokens": [50364, 583, 6964, 2010, 1460, 6915, 1460, 13, 407, 6964, 445, 257, 46906, 2375, 2010, 11, 550, 7019, 2440, 11, 14853, 4007, 3469, 13, 50914, 50914, 407, 437, 300, 1355, 307, 291, 528, 281, 312, 8437, 926, 428, 1460, 2375, 2010, 5315, 291, 6264, 393, 13, 51364, 51364, 407, 300, 1355, 370, 13, 407, 291, 722, 365, 264, 8729, 2793, 293, 300, 311, 689, 291, 7019, 2440, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09164929054152797, "compression_ratio": 1.69364161849711, "no_caption_prob": 1.300676740356721e-05}, {"id": 206, "seek": 98200, "start": 993.0, "end": 1002.0, "text": " So what that means is you want to be passing around your money custom type everywhere you possibly can.", "tokens": [50364, 583, 6964, 2010, 1460, 6915, 1460, 13, 407, 6964, 445, 257, 46906, 2375, 2010, 11, 550, 7019, 2440, 11, 14853, 4007, 3469, 13, 50914, 50914, 407, 437, 300, 1355, 307, 291, 528, 281, 312, 8437, 926, 428, 1460, 2375, 2010, 5315, 291, 6264, 393, 13, 51364, 51364, 407, 300, 1355, 370, 13, 407, 291, 722, 365, 264, 8729, 2793, 293, 300, 311, 689, 291, 7019, 2440, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09164929054152797, "compression_ratio": 1.69364161849711, "no_caption_prob": 1.300676740356721e-05}, {"id": 207, "seek": 98200, "start": 1002.0, "end": 1008.0, "text": " So that means so. So you start with the entry points and that's where you wrap early.", "tokens": [50364, 583, 6964, 2010, 1460, 6915, 1460, 13, 407, 6964, 445, 257, 46906, 2375, 2010, 11, 550, 7019, 2440, 11, 14853, 4007, 3469, 13, 50914, 50914, 407, 437, 300, 1355, 307, 291, 528, 281, 312, 8437, 926, 428, 1460, 2375, 2010, 5315, 291, 6264, 393, 13, 51364, 51364, 407, 300, 1355, 370, 13, 407, 291, 722, 365, 264, 8729, 2793, 293, 300, 311, 689, 291, 7019, 2440, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09164929054152797, "compression_ratio": 1.69364161849711, "no_caption_prob": 1.300676740356721e-05}, {"id": 208, "seek": 100800, "start": 1008.0, "end": 1016.0, "text": " So, you know, you've got a an HTTP request, which is doing a decoder and decoding an int.", "tokens": [50364, 407, 11, 291, 458, 11, 291, 600, 658, 257, 364, 33283, 5308, 11, 597, 307, 884, 257, 979, 19866, 293, 979, 8616, 364, 560, 13, 50764, 50764, 1042, 11, 291, 643, 281, 7019, 300, 370, 291, 393, 445, 584, 979, 1429, 5893, 560, 293, 550, 291, 393, 360, 11240, 300, 281, 979, 1429, 5893, 4471, 1460, 13, 51114, 51114, 823, 291, 600, 14226, 309, 13, 400, 550, 309, 311, 516, 281, 584, 11, 731, 11, 286, 286, 1194, 341, 390, 257, 979, 19866, 295, 341, 472, 2010, 300, 575, 364, 560, 294, 309, 13, 51464, 51464, 583, 586, 309, 311, 341, 472, 2010, 300, 575, 1460, 294, 309, 13, 407, 291, 1319, 300, 13, 400, 586, 291, 352, 807, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10153107489309003, "compression_ratio": 1.8369098712446352, "no_caption_prob": 7.76680371927796e-06}, {"id": 209, "seek": 100800, "start": 1016.0, "end": 1023.0, "text": " Well, you need to wrap that so you can just say decode dot int and then you can do pipe that to decode dot map money.", "tokens": [50364, 407, 11, 291, 458, 11, 291, 600, 658, 257, 364, 33283, 5308, 11, 597, 307, 884, 257, 979, 19866, 293, 979, 8616, 364, 560, 13, 50764, 50764, 1042, 11, 291, 643, 281, 7019, 300, 370, 291, 393, 445, 584, 979, 1429, 5893, 560, 293, 550, 291, 393, 360, 11240, 300, 281, 979, 1429, 5893, 4471, 1460, 13, 51114, 51114, 823, 291, 600, 14226, 309, 13, 400, 550, 309, 311, 516, 281, 584, 11, 731, 11, 286, 286, 1194, 341, 390, 257, 979, 19866, 295, 341, 472, 2010, 300, 575, 364, 560, 294, 309, 13, 51464, 51464, 583, 586, 309, 311, 341, 472, 2010, 300, 575, 1460, 294, 309, 13, 407, 291, 1319, 300, 13, 400, 586, 291, 352, 807, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10153107489309003, "compression_ratio": 1.8369098712446352, "no_caption_prob": 7.76680371927796e-06}, {"id": 210, "seek": 100800, "start": 1023.0, "end": 1030.0, "text": " Now you've wrapped it. And then it's going to say, well, I I thought this was a decoder of this one type that has an int in it.", "tokens": [50364, 407, 11, 291, 458, 11, 291, 600, 658, 257, 364, 33283, 5308, 11, 597, 307, 884, 257, 979, 19866, 293, 979, 8616, 364, 560, 13, 50764, 50764, 1042, 11, 291, 643, 281, 7019, 300, 370, 291, 393, 445, 584, 979, 1429, 5893, 560, 293, 550, 291, 393, 360, 11240, 300, 281, 979, 1429, 5893, 4471, 1460, 13, 51114, 51114, 823, 291, 600, 14226, 309, 13, 400, 550, 309, 311, 516, 281, 584, 11, 731, 11, 286, 286, 1194, 341, 390, 257, 979, 19866, 295, 341, 472, 2010, 300, 575, 364, 560, 294, 309, 13, 51464, 51464, 583, 586, 309, 311, 341, 472, 2010, 300, 575, 1460, 294, 309, 13, 407, 291, 1319, 300, 13, 400, 586, 291, 352, 807, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10153107489309003, "compression_ratio": 1.8369098712446352, "no_caption_prob": 7.76680371927796e-06}, {"id": 211, "seek": 100800, "start": 1030.0, "end": 1035.0, "text": " But now it's this one type that has money in it. So you change that. And now you go through.", "tokens": [50364, 407, 11, 291, 458, 11, 291, 600, 658, 257, 364, 33283, 5308, 11, 597, 307, 884, 257, 979, 19866, 293, 979, 8616, 364, 560, 13, 50764, 50764, 1042, 11, 291, 643, 281, 7019, 300, 370, 291, 393, 445, 584, 979, 1429, 5893, 560, 293, 550, 291, 393, 360, 11240, 300, 281, 979, 1429, 5893, 4471, 1460, 13, 51114, 51114, 823, 291, 600, 14226, 309, 13, 400, 550, 309, 311, 516, 281, 584, 11, 731, 11, 286, 286, 1194, 341, 390, 257, 979, 19866, 295, 341, 472, 2010, 300, 575, 364, 560, 294, 309, 13, 51464, 51464, 583, 586, 309, 311, 341, 472, 2010, 300, 575, 1460, 294, 309, 13, 407, 291, 1319, 300, 13, 400, 586, 291, 352, 807, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10153107489309003, "compression_ratio": 1.8369098712446352, "no_caption_prob": 7.76680371927796e-06}, {"id": 212, "seek": 103500, "start": 1035.0, "end": 1041.0, "text": " You change all the places that say, hey, I thought I was getting an int, but now I'm getting money.", "tokens": [50364, 509, 1319, 439, 264, 3190, 300, 584, 11, 4177, 11, 286, 1194, 286, 390, 1242, 364, 560, 11, 457, 586, 286, 478, 1242, 1460, 13, 50664, 50664, 400, 291, 445, 1319, 264, 2010, 25339, 763, 5315, 281, 584, 1460, 294, 439, 729, 3190, 13, 50864, 50864, 407, 300, 311, 445, 27520, 807, 13, 663, 311, 294, 264, 2808, 11, 406, 406, 264, 2440, 420, 264, 3469, 644, 11, 457, 264, 2808, 644, 13, 51164, 51164, 407, 439, 729, 3190, 11, 291, 1319, 309, 281, 764, 428, 777, 2010, 294, 264, 25339, 763, 13, 51364, 51364, 400, 550, 2721, 11, 562, 291, 434, 7579, 281, 14853, 4007, 309, 570, 291, 366, 291, 281, 2158, 291, 528, 281, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08183117998324758, "compression_ratio": 1.8503937007874016, "no_caption_prob": 5.6496370234526694e-05}, {"id": 213, "seek": 103500, "start": 1041.0, "end": 1045.0, "text": " And you just change the type annotations everywhere to say money in all those places.", "tokens": [50364, 509, 1319, 439, 264, 3190, 300, 584, 11, 4177, 11, 286, 1194, 286, 390, 1242, 364, 560, 11, 457, 586, 286, 478, 1242, 1460, 13, 50664, 50664, 400, 291, 445, 1319, 264, 2010, 25339, 763, 5315, 281, 584, 1460, 294, 439, 729, 3190, 13, 50864, 50864, 407, 300, 311, 445, 27520, 807, 13, 663, 311, 294, 264, 2808, 11, 406, 406, 264, 2440, 420, 264, 3469, 644, 11, 457, 264, 2808, 644, 13, 51164, 51164, 407, 439, 729, 3190, 11, 291, 1319, 309, 281, 764, 428, 777, 2010, 294, 264, 25339, 763, 13, 51364, 51364, 400, 550, 2721, 11, 562, 291, 434, 7579, 281, 14853, 4007, 309, 570, 291, 366, 291, 281, 2158, 291, 528, 281, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08183117998324758, "compression_ratio": 1.8503937007874016, "no_caption_prob": 5.6496370234526694e-05}, {"id": 214, "seek": 103500, "start": 1045.0, "end": 1051.0, "text": " So that's just wiring through. That's in the middle, not not the early or the late part, but the middle part.", "tokens": [50364, 509, 1319, 439, 264, 3190, 300, 584, 11, 4177, 11, 286, 1194, 286, 390, 1242, 364, 560, 11, 457, 586, 286, 478, 1242, 1460, 13, 50664, 50664, 400, 291, 445, 1319, 264, 2010, 25339, 763, 5315, 281, 584, 1460, 294, 439, 729, 3190, 13, 50864, 50864, 407, 300, 311, 445, 27520, 807, 13, 663, 311, 294, 264, 2808, 11, 406, 406, 264, 2440, 420, 264, 3469, 644, 11, 457, 264, 2808, 644, 13, 51164, 51164, 407, 439, 729, 3190, 11, 291, 1319, 309, 281, 764, 428, 777, 2010, 294, 264, 25339, 763, 13, 51364, 51364, 400, 550, 2721, 11, 562, 291, 434, 7579, 281, 14853, 4007, 309, 570, 291, 366, 291, 281, 2158, 291, 528, 281, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08183117998324758, "compression_ratio": 1.8503937007874016, "no_caption_prob": 5.6496370234526694e-05}, {"id": 215, "seek": 103500, "start": 1051.0, "end": 1055.0, "text": " So all those places, you change it to use your new type in the annotations.", "tokens": [50364, 509, 1319, 439, 264, 3190, 300, 584, 11, 4177, 11, 286, 1194, 286, 390, 1242, 364, 560, 11, 457, 586, 286, 478, 1242, 1460, 13, 50664, 50664, 400, 291, 445, 1319, 264, 2010, 25339, 763, 5315, 281, 584, 1460, 294, 439, 729, 3190, 13, 50864, 50864, 407, 300, 311, 445, 27520, 807, 13, 663, 311, 294, 264, 2808, 11, 406, 406, 264, 2440, 420, 264, 3469, 644, 11, 457, 264, 2808, 644, 13, 51164, 51164, 407, 439, 729, 3190, 11, 291, 1319, 309, 281, 764, 428, 777, 2010, 294, 264, 25339, 763, 13, 51364, 51364, 400, 550, 2721, 11, 562, 291, 434, 7579, 281, 14853, 4007, 309, 570, 291, 366, 291, 281, 2158, 291, 528, 281, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08183117998324758, "compression_ratio": 1.8503937007874016, "no_caption_prob": 5.6496370234526694e-05}, {"id": 216, "seek": 103500, "start": 1055.0, "end": 1061.0, "text": " And then finally, when you're forced to unwrap it because you are you to value you want to use it.", "tokens": [50364, 509, 1319, 439, 264, 3190, 300, 584, 11, 4177, 11, 286, 1194, 286, 390, 1242, 364, 560, 11, 457, 586, 286, 478, 1242, 1460, 13, 50664, 50664, 400, 291, 445, 1319, 264, 2010, 25339, 763, 5315, 281, 584, 1460, 294, 439, 729, 3190, 13, 50864, 50864, 407, 300, 311, 445, 27520, 807, 13, 663, 311, 294, 264, 2808, 11, 406, 406, 264, 2440, 420, 264, 3469, 644, 11, 457, 264, 2808, 644, 13, 51164, 51164, 407, 439, 729, 3190, 11, 291, 1319, 309, 281, 764, 428, 777, 2010, 294, 264, 25339, 763, 13, 51364, 51364, 400, 550, 2721, 11, 562, 291, 434, 7579, 281, 14853, 4007, 309, 570, 291, 366, 291, 281, 2158, 291, 528, 281, 764, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.08183117998324758, "compression_ratio": 1.8503937007874016, "no_caption_prob": 5.6496370234526694e-05}, {"id": 217, "seek": 106100, "start": 1061.0, "end": 1071.0, "text": " Now you need a primitive. So you're doing you're sending an HTTP request and you need to encode it or you need to present it in the UI.", "tokens": [50364, 823, 291, 643, 257, 28540, 13, 407, 291, 434, 884, 291, 434, 7750, 364, 33283, 5308, 293, 291, 643, 281, 2058, 1429, 309, 420, 291, 643, 281, 1974, 309, 294, 264, 15682, 13, 50864, 50864, 823, 291, 643, 257, 28540, 2158, 570, 291, 393, 380, 1974, 1460, 3838, 13, 51164, 51164, 1396, 291, 14853, 4007, 309, 13, 407, 586, 291, 445, 1524, 300, 807, 293, 764, 729, 2199, 4439, 281, 281, 4236, 984, 4088, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.037856168384793436, "compression_ratio": 1.6377551020408163, "no_caption_prob": 3.3213364076800644e-05}, {"id": 218, "seek": 106100, "start": 1071.0, "end": 1077.0, "text": " Now you need a primitive value because you can't present money directly.", "tokens": [50364, 823, 291, 643, 257, 28540, 13, 407, 291, 434, 884, 291, 434, 7750, 364, 33283, 5308, 293, 291, 643, 281, 2058, 1429, 309, 420, 291, 643, 281, 1974, 309, 294, 264, 15682, 13, 50864, 50864, 823, 291, 643, 257, 28540, 2158, 570, 291, 393, 380, 1974, 1460, 3838, 13, 51164, 51164, 1396, 291, 14853, 4007, 309, 13, 407, 586, 291, 445, 1524, 300, 807, 293, 764, 729, 2199, 4439, 281, 281, 4236, 984, 4088, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.037856168384793436, "compression_ratio": 1.6377551020408163, "no_caption_prob": 3.3213364076800644e-05}, {"id": 219, "seek": 106100, "start": 1077.0, "end": 1085.0, "text": " Then you unwrap it. So now you just follow that through and use those simple steps to to mechanically transform.", "tokens": [50364, 823, 291, 643, 257, 28540, 13, 407, 291, 434, 884, 291, 434, 7750, 364, 33283, 5308, 293, 291, 643, 281, 2058, 1429, 309, 420, 291, 643, 281, 1974, 309, 294, 264, 15682, 13, 50864, 50864, 823, 291, 643, 257, 28540, 2158, 570, 291, 393, 380, 1974, 1460, 3838, 13, 51164, 51164, 1396, 291, 14853, 4007, 309, 13, 407, 586, 291, 445, 1524, 300, 807, 293, 764, 729, 2199, 4439, 281, 281, 4236, 984, 4088, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.037856168384793436, "compression_ratio": 1.6377551020408163, "no_caption_prob": 3.3213364076800644e-05}, {"id": 220, "seek": 108500, "start": 1085.0, "end": 1095.0, "text": " Now, it's not exactly a tiny step. Ideally, this should be something that could be automated, but it is very mechanical, which is good.", "tokens": [50364, 823, 11, 309, 311, 406, 2293, 257, 5870, 1823, 13, 40817, 11, 341, 820, 312, 746, 300, 727, 312, 18473, 11, 457, 309, 307, 588, 12070, 11, 597, 307, 665, 13, 50864, 50864, 1133, 291, 584, 309, 727, 312, 18473, 11, 291, 914, 1228, 411, 364, 7348, 420, 746, 30, 51064, 51064, 865, 13, 865, 13, 1144, 291, 458, 466, 604, 8650, 300, 360, 300, 30, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.10126022611345564, "compression_ratio": 1.5197740112994351, "no_caption_prob": 4.757541319122538e-05}, {"id": 221, "seek": 108500, "start": 1095.0, "end": 1099.0, "text": " When you say it could be automated, you mean using like an ID or something?", "tokens": [50364, 823, 11, 309, 311, 406, 2293, 257, 5870, 1823, 13, 40817, 11, 341, 820, 312, 746, 300, 727, 312, 18473, 11, 457, 309, 307, 588, 12070, 11, 597, 307, 665, 13, 50864, 50864, 1133, 291, 584, 309, 727, 312, 18473, 11, 291, 914, 1228, 411, 364, 7348, 420, 746, 30, 51064, 51064, 865, 13, 865, 13, 1144, 291, 458, 466, 604, 8650, 300, 360, 300, 30, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.10126022611345564, "compression_ratio": 1.5197740112994351, "no_caption_prob": 4.757541319122538e-05}, {"id": 222, "seek": 108500, "start": 1099.0, "end": 1103.0, "text": " Yeah. Yeah. Do you know about any languages that do that?", "tokens": [50364, 823, 11, 309, 311, 406, 2293, 257, 5870, 1823, 13, 40817, 11, 341, 820, 312, 746, 300, 727, 312, 18473, 11, 457, 309, 307, 588, 12070, 11, 597, 307, 665, 13, 50864, 50864, 1133, 291, 584, 309, 727, 312, 18473, 11, 291, 914, 1228, 411, 364, 7348, 420, 746, 30, 51064, 51064, 865, 13, 865, 13, 1144, 291, 458, 466, 604, 8650, 300, 360, 300, 30, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.10126022611345564, "compression_ratio": 1.5197740112994351, "no_caption_prob": 4.757541319122538e-05}, {"id": 223, "seek": 110300, "start": 1103.0, "end": 1115.0, "text": " Yeah, I mean, languages like Java and, you know, you know, C sharp, they have tools to turn a parameter into a parameter object or all sorts of.", "tokens": [50364, 865, 11, 286, 914, 11, 8650, 411, 10745, 293, 11, 291, 458, 11, 291, 458, 11, 383, 8199, 11, 436, 362, 3873, 281, 1261, 257, 13075, 666, 257, 13075, 2657, 420, 439, 7527, 295, 13, 50964, 50964, 865, 11, 439, 7527, 295, 721, 411, 300, 13, 2264, 11, 1880, 13, 51164, 51164, 1079, 13, 407, 300, 311, 588, 709, 746, 300, 727, 727, 472, 786, 2514, 294, 2699, 1696, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1244386982273411, "compression_ratio": 1.5423728813559323, "no_caption_prob": 0.0001039067137753591}, {"id": 224, "seek": 110300, "start": 1115.0, "end": 1119.0, "text": " Yeah, all sorts of things like that. OK, interesting.", "tokens": [50364, 865, 11, 286, 914, 11, 8650, 411, 10745, 293, 11, 291, 458, 11, 291, 458, 11, 383, 8199, 11, 436, 362, 3873, 281, 1261, 257, 13075, 666, 257, 13075, 2657, 420, 439, 7527, 295, 13, 50964, 50964, 865, 11, 439, 7527, 295, 721, 411, 300, 13, 2264, 11, 1880, 13, 51164, 51164, 1079, 13, 407, 300, 311, 588, 709, 746, 300, 727, 727, 472, 786, 2514, 294, 2699, 1696, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1244386982273411, "compression_ratio": 1.5423728813559323, "no_caption_prob": 0.0001039067137753591}, {"id": 225, "seek": 110300, "start": 1119.0, "end": 1123.0, "text": " Yes. So that's very much something that could could one day exist in Elma.", "tokens": [50364, 865, 11, 286, 914, 11, 8650, 411, 10745, 293, 11, 291, 458, 11, 291, 458, 11, 383, 8199, 11, 436, 362, 3873, 281, 1261, 257, 13075, 666, 257, 13075, 2657, 420, 439, 7527, 295, 13, 50964, 50964, 865, 11, 439, 7527, 295, 721, 411, 300, 13, 2264, 11, 1880, 13, 51164, 51164, 1079, 13, 407, 300, 311, 588, 709, 746, 300, 727, 727, 472, 786, 2514, 294, 2699, 1696, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.1244386982273411, "compression_ratio": 1.5423728813559323, "no_caption_prob": 0.0001039067137753591}, {"id": 226, "seek": 112300, "start": 1123.0, "end": 1133.0, "text": " I think it would be very valuable. But see, that's sort of the the idea is that you're you're doing something so mechanically that it effectively is a tiny step.", "tokens": [50364, 286, 519, 309, 576, 312, 588, 8263, 13, 583, 536, 11, 300, 311, 1333, 295, 264, 264, 1558, 307, 300, 291, 434, 291, 434, 884, 746, 370, 4236, 984, 300, 309, 8659, 307, 257, 5870, 1823, 13, 50864, 50864, 467, 311, 445, 257, 588, 38284, 1823, 300, 820, 312, 18473, 13, 583, 291, 434, 291, 434, 3480, 309, 294, 1270, 257, 9989, 636, 300, 309, 4476, 307, 13, 51264, 51264, 865, 11, 286, 3986, 13, 286, 841, 411, 264, 787, 551, 300, 311, 11304, 307, 300, 291, 727, 406, 1590, 294, 264, 2808, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03459418306545335, "compression_ratio": 1.7012987012987013, "no_caption_prob": 0.00022690996411256492}, {"id": 227, "seek": 112300, "start": 1133.0, "end": 1141.0, "text": " It's just a very tedious step that should be automated. But you're you're following it in such a boring way that it essentially is.", "tokens": [50364, 286, 519, 309, 576, 312, 588, 8263, 13, 583, 536, 11, 300, 311, 1333, 295, 264, 264, 1558, 307, 300, 291, 434, 291, 434, 884, 746, 370, 4236, 984, 300, 309, 8659, 307, 257, 5870, 1823, 13, 50864, 50864, 467, 311, 445, 257, 588, 38284, 1823, 300, 820, 312, 18473, 13, 583, 291, 434, 291, 434, 3480, 309, 294, 1270, 257, 9989, 636, 300, 309, 4476, 307, 13, 51264, 51264, 865, 11, 286, 3986, 13, 286, 841, 411, 264, 787, 551, 300, 311, 11304, 307, 300, 291, 727, 406, 1590, 294, 264, 2808, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03459418306545335, "compression_ratio": 1.7012987012987013, "no_caption_prob": 0.00022690996411256492}, {"id": 228, "seek": 112300, "start": 1141.0, "end": 1149.0, "text": " Yeah, I agree. I feel like the only thing that's annoying is that you could not stop in the middle.", "tokens": [50364, 286, 519, 309, 576, 312, 588, 8263, 13, 583, 536, 11, 300, 311, 1333, 295, 264, 264, 1558, 307, 300, 291, 434, 291, 434, 884, 746, 370, 4236, 984, 300, 309, 8659, 307, 257, 5870, 1823, 13, 50864, 50864, 467, 311, 445, 257, 588, 38284, 1823, 300, 820, 312, 18473, 13, 583, 291, 434, 291, 434, 3480, 309, 294, 1270, 257, 9989, 636, 300, 309, 4476, 307, 13, 51264, 51264, 865, 11, 286, 3986, 13, 286, 841, 411, 264, 787, 551, 300, 311, 11304, 307, 300, 291, 727, 406, 1590, 294, 264, 2808, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.03459418306545335, "compression_ratio": 1.7012987012987013, "no_caption_prob": 0.00022690996411256492}, {"id": 229, "seek": 114900, "start": 1149.0, "end": 1159.0, "text": " Yes, absolutely. Absolutely. Right. That's right. Because basically what what we've done in that process is we've done an atomic step conceptually,", "tokens": [50364, 1079, 11, 3122, 13, 7021, 13, 1779, 13, 663, 311, 558, 13, 1436, 1936, 437, 437, 321, 600, 1096, 294, 300, 1399, 307, 321, 600, 1096, 364, 22275, 1823, 3410, 671, 11, 50864, 50864, 457, 321, 600, 1096, 309, 294, 257, 38284, 9688, 11, 2107, 22275, 636, 11, 597, 1355, 321, 393, 380, 1821, 309, 493, 294, 264, 2808, 13, 51264, 51264, 583, 498, 309, 645, 18473, 11, 309, 576, 294, 1186, 312, 364, 3539, 22275, 1823, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0752756828215064, "compression_ratio": 1.6528497409326426, "no_caption_prob": 2.930913797172252e-05}, {"id": 230, "seek": 114900, "start": 1159.0, "end": 1167.0, "text": " but we've done it in a tedious manual, non atomic way, which means we can't break it up in the middle.", "tokens": [50364, 1079, 11, 3122, 13, 7021, 13, 1779, 13, 663, 311, 558, 13, 1436, 1936, 437, 437, 321, 600, 1096, 294, 300, 1399, 307, 321, 600, 1096, 364, 22275, 1823, 3410, 671, 11, 50864, 50864, 457, 321, 600, 1096, 309, 294, 257, 38284, 9688, 11, 2107, 22275, 636, 11, 597, 1355, 321, 393, 380, 1821, 309, 493, 294, 264, 2808, 13, 51264, 51264, 583, 498, 309, 645, 18473, 11, 309, 576, 294, 1186, 312, 364, 3539, 22275, 1823, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0752756828215064, "compression_ratio": 1.6528497409326426, "no_caption_prob": 2.930913797172252e-05}, {"id": 231, "seek": 114900, "start": 1167.0, "end": 1171.0, "text": " But if it were automated, it would in fact be an actual atomic step.", "tokens": [50364, 1079, 11, 3122, 13, 7021, 13, 1779, 13, 663, 311, 558, 13, 1436, 1936, 437, 437, 321, 600, 1096, 294, 300, 1399, 307, 321, 600, 1096, 364, 22275, 1823, 3410, 671, 11, 50864, 50864, 457, 321, 600, 1096, 309, 294, 257, 38284, 9688, 11, 2107, 22275, 636, 11, 597, 1355, 321, 393, 380, 1821, 309, 493, 294, 264, 2808, 13, 51264, 51264, 583, 498, 309, 645, 18473, 11, 309, 576, 294, 1186, 312, 364, 3539, 22275, 1823, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0752756828215064, "compression_ratio": 1.6528497409326426, "no_caption_prob": 2.930913797172252e-05}, {"id": 232, "seek": 117100, "start": 1171.0, "end": 1182.0, "text": " Right. Just like I can't think of a better way to do it in a non automated way that doesn't give any false feedback if we're using it incorrect.", "tokens": [50364, 1779, 13, 1449, 411, 286, 393, 380, 519, 295, 257, 1101, 636, 281, 360, 309, 294, 257, 2107, 18473, 636, 300, 1177, 380, 976, 604, 7908, 5824, 498, 321, 434, 1228, 309, 18424, 13, 50914, 50914, 1042, 11, 498, 291, 630, 309, 365, 264, 2010, 3179, 11, 382, 286, 848, 11, 437, 291, 393, 7263, 360, 307, 291, 764, 264, 2010, 3179, 13, 51264, 51264, 509, 722, 1228, 309, 294, 512, 3190, 11, 406, 886, 867, 11, 445, 472, 420, 732, 689, 291, 458, 689, 291, 6964, 552, 420, 689, 291, 764, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07962150962985291, "compression_ratio": 1.6491228070175439, "no_caption_prob": 0.0001293074747081846}, {"id": 233, "seek": 117100, "start": 1182.0, "end": 1189.0, "text": " Well, if you did it with the type areas, as I said, what you can potentially do is you use the type areas.", "tokens": [50364, 1779, 13, 1449, 411, 286, 393, 380, 519, 295, 257, 1101, 636, 281, 360, 309, 294, 257, 2107, 18473, 636, 300, 1177, 380, 976, 604, 7908, 5824, 498, 321, 434, 1228, 309, 18424, 13, 50914, 50914, 1042, 11, 498, 291, 630, 309, 365, 264, 2010, 3179, 11, 382, 286, 848, 11, 437, 291, 393, 7263, 360, 307, 291, 764, 264, 2010, 3179, 13, 51264, 51264, 509, 722, 1228, 309, 294, 512, 3190, 11, 406, 886, 867, 11, 445, 472, 420, 732, 689, 291, 458, 689, 291, 6964, 552, 420, 689, 291, 764, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07962150962985291, "compression_ratio": 1.6491228070175439, "no_caption_prob": 0.0001293074747081846}, {"id": 234, "seek": 117100, "start": 1189.0, "end": 1196.0, "text": " You start using it in some places, not too many, just one or two where you know where you define them or where you use them.", "tokens": [50364, 1779, 13, 1449, 411, 286, 393, 380, 519, 295, 257, 1101, 636, 281, 360, 309, 294, 257, 2107, 18473, 636, 300, 1177, 380, 976, 604, 7908, 5824, 498, 321, 434, 1228, 309, 18424, 13, 50914, 50914, 1042, 11, 498, 291, 630, 309, 365, 264, 2010, 3179, 11, 382, 286, 848, 11, 437, 291, 393, 7263, 360, 307, 291, 764, 264, 2010, 3179, 13, 51264, 51264, 509, 722, 1228, 309, 294, 512, 3190, 11, 406, 886, 867, 11, 445, 472, 420, 732, 689, 291, 458, 689, 291, 6964, 552, 420, 689, 291, 764, 552, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07962150962985291, "compression_ratio": 1.6491228070175439, "no_caption_prob": 0.0001293074747081846}, {"id": 235, "seek": 119600, "start": 1196.0, "end": 1205.0, "text": " You commit that and then you change it to a custom type. And then, as you said, you're going to have to change it in all the places.", "tokens": [50364, 509, 5599, 300, 293, 550, 291, 1319, 309, 281, 257, 2375, 2010, 13, 400, 550, 11, 382, 291, 848, 11, 291, 434, 516, 281, 362, 281, 1319, 309, 294, 439, 264, 3190, 13, 50814, 50814, 583, 498, 412, 512, 935, 291, 643, 281, 1590, 570, 11, 4177, 11, 309, 311, 2309, 277, 7830, 420, 286, 500, 380, 458, 437, 565, 291, 1590, 11, 51214, 51214, 550, 291, 393, 5599, 439, 264, 2962, 300, 291, 1027, 3993, 264, 472, 466, 264, 2375, 2010, 293, 264, 21993, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05820659531487359, "compression_ratio": 1.6847290640394088, "no_caption_prob": 0.0001140861859312281}, {"id": 236, "seek": 119600, "start": 1205.0, "end": 1213.0, "text": " But if at some point you need to stop because, hey, it's six o clock or I don't know what time you stop,", "tokens": [50364, 509, 5599, 300, 293, 550, 291, 1319, 309, 281, 257, 2375, 2010, 13, 400, 550, 11, 382, 291, 848, 11, 291, 434, 516, 281, 362, 281, 1319, 309, 294, 439, 264, 3190, 13, 50814, 50814, 583, 498, 412, 512, 935, 291, 643, 281, 1590, 570, 11, 4177, 11, 309, 311, 2309, 277, 7830, 420, 286, 500, 380, 458, 437, 565, 291, 1590, 11, 51214, 51214, 550, 291, 393, 5599, 439, 264, 2962, 300, 291, 1027, 3993, 264, 472, 466, 264, 2375, 2010, 293, 264, 21993, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05820659531487359, "compression_ratio": 1.6847290640394088, "no_caption_prob": 0.0001140861859312281}, {"id": 237, "seek": 119600, "start": 1213.0, "end": 1221.0, "text": " then you can commit all the changes that you made except the one about the custom type and the wrapping.", "tokens": [50364, 509, 5599, 300, 293, 550, 291, 1319, 309, 281, 257, 2375, 2010, 13, 400, 550, 11, 382, 291, 848, 11, 291, 434, 516, 281, 362, 281, 1319, 309, 294, 439, 264, 3190, 13, 50814, 50814, 583, 498, 412, 512, 935, 291, 643, 281, 1590, 570, 11, 4177, 11, 309, 311, 2309, 277, 7830, 420, 286, 500, 380, 458, 437, 565, 291, 1590, 11, 51214, 51214, 550, 291, 393, 5599, 439, 264, 2962, 300, 291, 1027, 3993, 264, 472, 466, 264, 2375, 2010, 293, 264, 21993, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.05820659531487359, "compression_ratio": 1.6847290640394088, "no_caption_prob": 0.0001140861859312281}, {"id": 238, "seek": 122100, "start": 1221.0, "end": 1227.0, "text": " So all the changes type and the wrapping and unwrapping, you don't commit those.", "tokens": [50364, 407, 439, 264, 2962, 2010, 293, 264, 21993, 293, 14853, 424, 3759, 11, 291, 500, 380, 5599, 729, 13, 50664, 50664, 509, 534, 5599, 264, 1472, 293, 291, 393, 352, 1280, 293, 291, 393, 2354, 4153, 13, 50914, 50914, 1779, 13, 400, 291, 434, 558, 300, 498, 291, 360, 300, 293, 291, 2082, 746, 493, 11, 291, 746, 307, 257, 11275, 11, 51314, 51314, 406, 1460, 4361, 49505, 11, 293, 291, 15715, 7019, 300, 294, 264, 1460, 2010, 419, 4609, 11, 291, 7406, 264, 1460, 2010, 419, 4609, 337, 264, 560, 294, 264, 48654, 456, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10361560821533203, "compression_ratio": 1.880184331797235, "no_caption_prob": 8.886629075277597e-05}, {"id": 239, "seek": 122100, "start": 1227.0, "end": 1232.0, "text": " You really commit the rest and you can go home and you can continue tomorrow.", "tokens": [50364, 407, 439, 264, 2962, 2010, 293, 264, 21993, 293, 14853, 424, 3759, 11, 291, 500, 380, 5599, 729, 13, 50664, 50664, 509, 534, 5599, 264, 1472, 293, 291, 393, 352, 1280, 293, 291, 393, 2354, 4153, 13, 50914, 50914, 1779, 13, 400, 291, 434, 558, 300, 498, 291, 360, 300, 293, 291, 2082, 746, 493, 11, 291, 746, 307, 257, 11275, 11, 51314, 51314, 406, 1460, 4361, 49505, 11, 293, 291, 15715, 7019, 300, 294, 264, 1460, 2010, 419, 4609, 11, 291, 7406, 264, 1460, 2010, 419, 4609, 337, 264, 560, 294, 264, 48654, 456, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10361560821533203, "compression_ratio": 1.880184331797235, "no_caption_prob": 8.886629075277597e-05}, {"id": 240, "seek": 122100, "start": 1232.0, "end": 1240.0, "text": " Right. And you're right that if you do that and you mess something up, you something is a quantity,", "tokens": [50364, 407, 439, 264, 2962, 2010, 293, 264, 21993, 293, 14853, 424, 3759, 11, 291, 500, 380, 5599, 729, 13, 50664, 50664, 509, 534, 5599, 264, 1472, 293, 291, 393, 352, 1280, 293, 291, 393, 2354, 4153, 13, 50914, 50914, 1779, 13, 400, 291, 434, 558, 300, 498, 291, 360, 300, 293, 291, 2082, 746, 493, 11, 291, 746, 307, 257, 11275, 11, 51314, 51314, 406, 1460, 4361, 49505, 11, 293, 291, 15715, 7019, 300, 294, 264, 1460, 2010, 419, 4609, 11, 291, 7406, 264, 1460, 2010, 419, 4609, 337, 264, 560, 294, 264, 48654, 456, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10361560821533203, "compression_ratio": 1.880184331797235, "no_caption_prob": 8.886629075277597e-05}, {"id": 241, "seek": 122100, "start": 1240.0, "end": 1250.0, "text": " not money semantically, and you accidentally wrap that in the money type alias, you replace the money type alias for the int in the annotation there.", "tokens": [50364, 407, 439, 264, 2962, 2010, 293, 264, 21993, 293, 14853, 424, 3759, 11, 291, 500, 380, 5599, 729, 13, 50664, 50664, 509, 534, 5599, 264, 1472, 293, 291, 393, 352, 1280, 293, 291, 393, 2354, 4153, 13, 50914, 50914, 1779, 13, 400, 291, 434, 558, 300, 498, 291, 360, 300, 293, 291, 2082, 746, 493, 11, 291, 746, 307, 257, 11275, 11, 51314, 51314, 406, 1460, 4361, 49505, 11, 293, 291, 15715, 7019, 300, 294, 264, 1460, 2010, 419, 4609, 11, 291, 7406, 264, 1460, 2010, 419, 4609, 337, 264, 560, 294, 264, 48654, 456, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10361560821533203, "compression_ratio": 1.880184331797235, "no_caption_prob": 8.886629075277597e-05}, {"id": 242, "seek": 125000, "start": 1250.0, "end": 1260.0, "text": " When you do the next step after you commit that step, as you're saying, then the compiler will tell you and you can sort it out there.", "tokens": [50364, 1133, 291, 360, 264, 958, 1823, 934, 291, 5599, 300, 1823, 11, 382, 291, 434, 1566, 11, 550, 264, 31958, 486, 980, 291, 293, 291, 393, 1333, 309, 484, 456, 13, 50864, 50864, 286, 445, 669, 46585, 295, 604, 7908, 2020, 295, 4205, 689, 286, 478, 1723, 766, 490, 5824, 293, 300, 300, 35721, 385, 13, 51164, 51164, 407, 286, 519, 300, 613, 366, 1293, 7363, 11587, 11, 457, 286, 519, 321, 600, 8212, 264, 4923, 19231, 1238, 1238, 731, 13, 51464, 51464, 407, 286, 519, 561, 820, 5120, 293, 718, 505, 458, 577, 309, 1709, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05168962478637695, "compression_ratio": 1.6653225806451613, "no_caption_prob": 9.761060209712014e-05}, {"id": 243, "seek": 125000, "start": 1260.0, "end": 1266.0, "text": " I just am wary of any false sense of progress where I'm cut off from feedback and that that scares me.", "tokens": [50364, 1133, 291, 360, 264, 958, 1823, 934, 291, 5599, 300, 1823, 11, 382, 291, 434, 1566, 11, 550, 264, 31958, 486, 980, 291, 293, 291, 393, 1333, 309, 484, 456, 13, 50864, 50864, 286, 445, 669, 46585, 295, 604, 7908, 2020, 295, 4205, 689, 286, 478, 1723, 766, 490, 5824, 293, 300, 300, 35721, 385, 13, 51164, 51164, 407, 286, 519, 300, 613, 366, 1293, 7363, 11587, 11, 457, 286, 519, 321, 600, 8212, 264, 4923, 19231, 1238, 1238, 731, 13, 51464, 51464, 407, 286, 519, 561, 820, 5120, 293, 718, 505, 458, 577, 309, 1709, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05168962478637695, "compression_ratio": 1.6653225806451613, "no_caption_prob": 9.761060209712014e-05}, {"id": 244, "seek": 125000, "start": 1266.0, "end": 1272.0, "text": " So I think that these are both valid approaches, but I think we've presented the tradeoffs pretty pretty well.", "tokens": [50364, 1133, 291, 360, 264, 958, 1823, 934, 291, 5599, 300, 1823, 11, 382, 291, 434, 1566, 11, 550, 264, 31958, 486, 980, 291, 293, 291, 393, 1333, 309, 484, 456, 13, 50864, 50864, 286, 445, 669, 46585, 295, 604, 7908, 2020, 295, 4205, 689, 286, 478, 1723, 766, 490, 5824, 293, 300, 300, 35721, 385, 13, 51164, 51164, 407, 286, 519, 300, 613, 366, 1293, 7363, 11587, 11, 457, 286, 519, 321, 600, 8212, 264, 4923, 19231, 1238, 1238, 731, 13, 51464, 51464, 407, 286, 519, 561, 820, 5120, 293, 718, 505, 458, 577, 309, 1709, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05168962478637695, "compression_ratio": 1.6653225806451613, "no_caption_prob": 9.761060209712014e-05}, {"id": 245, "seek": 125000, "start": 1272.0, "end": 1276.0, "text": " So I think people should experiment and let us know how it goes.", "tokens": [50364, 1133, 291, 360, 264, 958, 1823, 934, 291, 5599, 300, 1823, 11, 382, 291, 434, 1566, 11, 550, 264, 31958, 486, 980, 291, 293, 291, 393, 1333, 309, 484, 456, 13, 50864, 50864, 286, 445, 669, 46585, 295, 604, 7908, 2020, 295, 4205, 689, 286, 478, 1723, 766, 490, 5824, 293, 300, 300, 35721, 385, 13, 51164, 51164, 407, 286, 519, 300, 613, 366, 1293, 7363, 11587, 11, 457, 286, 519, 321, 600, 8212, 264, 4923, 19231, 1238, 1238, 731, 13, 51464, 51464, 407, 286, 519, 561, 820, 5120, 293, 718, 505, 458, 577, 309, 1709, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05168962478637695, "compression_ratio": 1.6653225806451613, "no_caption_prob": 9.761060209712014e-05}, {"id": 246, "seek": 127600, "start": 1276.0, "end": 1281.0, "text": " I would definitely go with your approach if it's like a small doable change.", "tokens": [50364, 286, 576, 2138, 352, 365, 428, 3109, 498, 309, 311, 411, 257, 1359, 41183, 1319, 13, 50614, 50614, 759, 309, 311, 746, 300, 307, 1143, 5315, 11, 286, 576, 352, 365, 3892, 13, 50814, 50814, 14711, 13, 865, 11, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13, 51014, 51014, 467, 311, 1936, 264, 912, 1558, 13, 51114, 51114, 1079, 13, 407, 550, 264, 958, 1823, 11, 597, 576, 312, 411, 11, 718, 311, 584, 291, 600, 2139, 1096, 264, 3109, 291, 7619, 420, 264, 3109, 286, 7619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11644153392061274, "compression_ratio": 1.6527777777777777, "no_caption_prob": 0.00011234374687774107}, {"id": 247, "seek": 127600, "start": 1281.0, "end": 1285.0, "text": " If it's something that is used everywhere, I would go with mine.", "tokens": [50364, 286, 576, 2138, 352, 365, 428, 3109, 498, 309, 311, 411, 257, 1359, 41183, 1319, 13, 50614, 50614, 759, 309, 311, 746, 300, 307, 1143, 5315, 11, 286, 576, 352, 365, 3892, 13, 50814, 50814, 14711, 13, 865, 11, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13, 51014, 51014, 467, 311, 1936, 264, 912, 1558, 13, 51114, 51114, 1079, 13, 407, 550, 264, 958, 1823, 11, 597, 576, 312, 411, 11, 718, 311, 584, 291, 600, 2139, 1096, 264, 3109, 291, 7619, 420, 264, 3109, 286, 7619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11644153392061274, "compression_ratio": 1.6527777777777777, "no_caption_prob": 0.00011234374687774107}, {"id": 248, "seek": 127600, "start": 1285.0, "end": 1289.0, "text": " Interesting. Yeah, that's a good way to look at it.", "tokens": [50364, 286, 576, 2138, 352, 365, 428, 3109, 498, 309, 311, 411, 257, 1359, 41183, 1319, 13, 50614, 50614, 759, 309, 311, 746, 300, 307, 1143, 5315, 11, 286, 576, 352, 365, 3892, 13, 50814, 50814, 14711, 13, 865, 11, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13, 51014, 51014, 467, 311, 1936, 264, 912, 1558, 13, 51114, 51114, 1079, 13, 407, 550, 264, 958, 1823, 11, 597, 576, 312, 411, 11, 718, 311, 584, 291, 600, 2139, 1096, 264, 3109, 291, 7619, 420, 264, 3109, 286, 7619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11644153392061274, "compression_ratio": 1.6527777777777777, "no_caption_prob": 0.00011234374687774107}, {"id": 249, "seek": 127600, "start": 1289.0, "end": 1291.0, "text": " It's basically the same idea.", "tokens": [50364, 286, 576, 2138, 352, 365, 428, 3109, 498, 309, 311, 411, 257, 1359, 41183, 1319, 13, 50614, 50614, 759, 309, 311, 746, 300, 307, 1143, 5315, 11, 286, 576, 352, 365, 3892, 13, 50814, 50814, 14711, 13, 865, 11, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13, 51014, 51014, 467, 311, 1936, 264, 912, 1558, 13, 51114, 51114, 1079, 13, 407, 550, 264, 958, 1823, 11, 597, 576, 312, 411, 11, 718, 311, 584, 291, 600, 2139, 1096, 264, 3109, 291, 7619, 420, 264, 3109, 286, 7619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11644153392061274, "compression_ratio": 1.6527777777777777, "no_caption_prob": 0.00011234374687774107}, {"id": 250, "seek": 127600, "start": 1291.0, "end": 1302.0, "text": " Yes. So then the next step, which would be like, let's say you've either done the approach you described or the approach I described.", "tokens": [50364, 286, 576, 2138, 352, 365, 428, 3109, 498, 309, 311, 411, 257, 1359, 41183, 1319, 13, 50614, 50614, 759, 309, 311, 746, 300, 307, 1143, 5315, 11, 286, 576, 352, 365, 3892, 13, 50814, 50814, 14711, 13, 865, 11, 300, 311, 257, 665, 636, 281, 574, 412, 309, 13, 51014, 51014, 467, 311, 1936, 264, 912, 1558, 13, 51114, 51114, 1079, 13, 407, 550, 264, 958, 1823, 11, 597, 576, 312, 411, 11, 718, 311, 584, 291, 600, 2139, 1096, 264, 3109, 291, 7619, 420, 264, 3109, 286, 7619, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.11644153392061274, "compression_ratio": 1.6527777777777777, "no_caption_prob": 0.00011234374687774107}, {"id": 251, "seek": 130200, "start": 1302.0, "end": 1315.0, "text": " But then, you know, after using the type alias with your approach, the next step would be to change that to a custom type, make sure that everything lines up, and then it converges with the approach I described.", "tokens": [50364, 583, 550, 11, 291, 458, 11, 934, 1228, 264, 2010, 419, 4609, 365, 428, 3109, 11, 264, 958, 1823, 576, 312, 281, 1319, 300, 281, 257, 2375, 2010, 11, 652, 988, 300, 1203, 3876, 493, 11, 293, 550, 309, 9652, 2880, 365, 264, 3109, 286, 7619, 13, 51014, 51014, 865, 11, 1936, 13, 865, 13, 407, 550, 718, 311, 584, 321, 483, 281, 300, 935, 13, 51164, 51164, 440, 958, 1823, 490, 456, 307, 2602, 295, 445, 1228, 257, 2375, 2010, 300, 311, 445, 3798, 926, 11, 586, 291, 8947, 300, 281, 257, 10088, 13, 51564, 51564, 2264, 13, 682, 13081, 337, 1455, 309, 364, 42687, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10734423569270543, "compression_ratio": 1.6816479400749065, "no_caption_prob": 9.169473923975602e-05}, {"id": 252, "seek": 130200, "start": 1315.0, "end": 1318.0, "text": " Yeah, basically. Yeah. So then let's say we get to that point.", "tokens": [50364, 583, 550, 11, 291, 458, 11, 934, 1228, 264, 2010, 419, 4609, 365, 428, 3109, 11, 264, 958, 1823, 576, 312, 281, 1319, 300, 281, 257, 2375, 2010, 11, 652, 988, 300, 1203, 3876, 493, 11, 293, 550, 309, 9652, 2880, 365, 264, 3109, 286, 7619, 13, 51014, 51014, 865, 11, 1936, 13, 865, 13, 407, 550, 718, 311, 584, 321, 483, 281, 300, 935, 13, 51164, 51164, 440, 958, 1823, 490, 456, 307, 2602, 295, 445, 1228, 257, 2375, 2010, 300, 311, 445, 3798, 926, 11, 586, 291, 8947, 300, 281, 257, 10088, 13, 51564, 51564, 2264, 13, 682, 13081, 337, 1455, 309, 364, 42687, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10734423569270543, "compression_ratio": 1.6816479400749065, "no_caption_prob": 9.169473923975602e-05}, {"id": 253, "seek": 130200, "start": 1318.0, "end": 1326.0, "text": " The next step from there is instead of just using a custom type that's just sitting around, now you extract that to a module.", "tokens": [50364, 583, 550, 11, 291, 458, 11, 934, 1228, 264, 2010, 419, 4609, 365, 428, 3109, 11, 264, 958, 1823, 576, 312, 281, 1319, 300, 281, 257, 2375, 2010, 11, 652, 988, 300, 1203, 3876, 493, 11, 293, 550, 309, 9652, 2880, 365, 264, 3109, 286, 7619, 13, 51014, 51014, 865, 11, 1936, 13, 865, 13, 407, 550, 718, 311, 584, 321, 483, 281, 300, 935, 13, 51164, 51164, 440, 958, 1823, 490, 456, 307, 2602, 295, 445, 1228, 257, 2375, 2010, 300, 311, 445, 3798, 926, 11, 586, 291, 8947, 300, 281, 257, 10088, 13, 51564, 51564, 2264, 13, 682, 13081, 337, 1455, 309, 364, 42687, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10734423569270543, "compression_ratio": 1.6816479400749065, "no_caption_prob": 9.169473923975602e-05}, {"id": 254, "seek": 130200, "start": 1326.0, "end": 1329.0, "text": " OK. In preparation for making it an opaque type.", "tokens": [50364, 583, 550, 11, 291, 458, 11, 934, 1228, 264, 2010, 419, 4609, 365, 428, 3109, 11, 264, 958, 1823, 576, 312, 281, 1319, 300, 281, 257, 2375, 2010, 11, 652, 988, 300, 1203, 3876, 493, 11, 293, 550, 309, 9652, 2880, 365, 264, 3109, 286, 7619, 13, 51014, 51014, 865, 11, 1936, 13, 865, 13, 407, 550, 718, 311, 584, 321, 483, 281, 300, 935, 13, 51164, 51164, 440, 958, 1823, 490, 456, 307, 2602, 295, 445, 1228, 257, 2375, 2010, 300, 311, 445, 3798, 926, 11, 586, 291, 8947, 300, 281, 257, 10088, 13, 51564, 51564, 2264, 13, 682, 13081, 337, 1455, 309, 364, 42687, 2010, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10734423569270543, "compression_ratio": 1.6816479400749065, "no_caption_prob": 9.169473923975602e-05}, {"id": 255, "seek": 132900, "start": 1329.0, "end": 1335.0, "text": " Yeah. So I would like to ask you, why would you do that? What would be the benefits?", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 256, "seek": 132900, "start": 1335.0, "end": 1337.0, "text": " Yes. Yes. Very good question.", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 257, "seek": 132900, "start": 1337.0, "end": 1339.0, "text": " So here's how I think of it.", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 258, "seek": 132900, "start": 1339.0, "end": 1343.0, "text": " When we extract it to that module, several things happen.", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 259, "seek": 132900, "start": 1343.0, "end": 1347.0, "text": " One is, well, OK, it's in a different module.", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 260, "seek": 132900, "start": 1347.0, "end": 1356.0, "text": " We sort of get that, you know, Evan gave his talk, The Life of a File, and he sort of says, you know, maybe that's not that important.", "tokens": [50364, 865, 13, 407, 286, 576, 411, 281, 1029, 291, 11, 983, 576, 291, 360, 300, 30, 708, 576, 312, 264, 5311, 30, 50664, 50664, 1079, 13, 1079, 13, 4372, 665, 1168, 13, 50764, 50764, 407, 510, 311, 577, 286, 519, 295, 309, 13, 50864, 50864, 1133, 321, 8947, 309, 281, 300, 10088, 11, 2940, 721, 1051, 13, 51064, 51064, 1485, 307, 11, 731, 11, 2264, 11, 309, 311, 294, 257, 819, 10088, 13, 51264, 51264, 492, 1333, 295, 483, 300, 11, 291, 458, 11, 22613, 2729, 702, 751, 11, 440, 7720, 295, 257, 26196, 11, 293, 415, 1333, 295, 1619, 11, 291, 458, 11, 1310, 300, 311, 406, 300, 1021, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08452710690705673, "compression_ratio": 1.5591836734693878, "no_caption_prob": 4.198428723611869e-05}, {"id": 261, "seek": 135600, "start": 1356.0, "end": 1362.0, "text": " I think I agree with that, that that's actually not the important part, moving it to a separate file.", "tokens": [50364, 286, 519, 286, 3986, 365, 300, 11, 300, 300, 311, 767, 406, 264, 1021, 644, 11, 2684, 309, 281, 257, 4994, 3991, 13, 50664, 50664, 1692, 311, 437, 286, 519, 307, 264, 1021, 644, 13, 400, 294, 7720, 295, 257, 26196, 11, 22613, 1333, 295, 15626, 11, 577, 360, 291, 8947, 16679, 30, 51014, 51014, 1042, 11, 286, 519, 309, 575, 746, 281, 360, 365, 885, 512, 9952, 300, 311, 18988, 926, 257, 2010, 13, 51314, 51314, 400, 300, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 51464, 51464, 407, 291, 8947, 257, 2010, 293, 512, 2098, 281, 9651, 322, 257, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0540484763957836, "compression_ratio": 1.688259109311741, "no_caption_prob": 4.611019176081754e-05}, {"id": 262, "seek": 135600, "start": 1362.0, "end": 1369.0, "text": " Here's what I think is the important part. And in Life of a File, Evan sort of describes, how do you extract modules?", "tokens": [50364, 286, 519, 286, 3986, 365, 300, 11, 300, 300, 311, 767, 406, 264, 1021, 644, 11, 2684, 309, 281, 257, 4994, 3991, 13, 50664, 50664, 1692, 311, 437, 286, 519, 307, 264, 1021, 644, 13, 400, 294, 7720, 295, 257, 26196, 11, 22613, 1333, 295, 15626, 11, 577, 360, 291, 8947, 16679, 30, 51014, 51014, 1042, 11, 286, 519, 309, 575, 746, 281, 360, 365, 885, 512, 9952, 300, 311, 18988, 926, 257, 2010, 13, 51314, 51314, 400, 300, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 51464, 51464, 407, 291, 8947, 257, 2010, 293, 512, 2098, 281, 9651, 322, 257, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0540484763957836, "compression_ratio": 1.688259109311741, "no_caption_prob": 4.611019176081754e-05}, {"id": 263, "seek": 135600, "start": 1369.0, "end": 1375.0, "text": " Well, I think it has something to do with being some logic that's centered around a type.", "tokens": [50364, 286, 519, 286, 3986, 365, 300, 11, 300, 300, 311, 767, 406, 264, 1021, 644, 11, 2684, 309, 281, 257, 4994, 3991, 13, 50664, 50664, 1692, 311, 437, 286, 519, 307, 264, 1021, 644, 13, 400, 294, 7720, 295, 257, 26196, 11, 22613, 1333, 295, 15626, 11, 577, 360, 291, 8947, 16679, 30, 51014, 51014, 1042, 11, 286, 519, 309, 575, 746, 281, 360, 365, 885, 512, 9952, 300, 311, 18988, 926, 257, 2010, 13, 51314, 51314, 400, 300, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 51464, 51464, 407, 291, 8947, 257, 2010, 293, 512, 2098, 281, 9651, 322, 257, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0540484763957836, "compression_ratio": 1.688259109311741, "no_caption_prob": 4.611019176081754e-05}, {"id": 264, "seek": 135600, "start": 1375.0, "end": 1378.0, "text": " And that's exactly what we're talking about here.", "tokens": [50364, 286, 519, 286, 3986, 365, 300, 11, 300, 300, 311, 767, 406, 264, 1021, 644, 11, 2684, 309, 281, 257, 4994, 3991, 13, 50664, 50664, 1692, 311, 437, 286, 519, 307, 264, 1021, 644, 13, 400, 294, 7720, 295, 257, 26196, 11, 22613, 1333, 295, 15626, 11, 577, 360, 291, 8947, 16679, 30, 51014, 51014, 1042, 11, 286, 519, 309, 575, 746, 281, 360, 365, 885, 512, 9952, 300, 311, 18988, 926, 257, 2010, 13, 51314, 51314, 400, 300, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 51464, 51464, 407, 291, 8947, 257, 2010, 293, 512, 2098, 281, 9651, 322, 257, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0540484763957836, "compression_ratio": 1.688259109311741, "no_caption_prob": 4.611019176081754e-05}, {"id": 265, "seek": 135600, "start": 1378.0, "end": 1384.0, "text": " So you extract a type and some ways to operate on a type.", "tokens": [50364, 286, 519, 286, 3986, 365, 300, 11, 300, 300, 311, 767, 406, 264, 1021, 644, 11, 2684, 309, 281, 257, 4994, 3991, 13, 50664, 50664, 1692, 311, 437, 286, 519, 307, 264, 1021, 644, 13, 400, 294, 7720, 295, 257, 26196, 11, 22613, 1333, 295, 15626, 11, 577, 360, 291, 8947, 16679, 30, 51014, 51014, 1042, 11, 286, 519, 309, 575, 746, 281, 360, 365, 885, 512, 9952, 300, 311, 18988, 926, 257, 2010, 13, 51314, 51314, 400, 300, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 51464, 51464, 407, 291, 8947, 257, 2010, 293, 512, 2098, 281, 9651, 322, 257, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0540484763957836, "compression_ratio": 1.688259109311741, "no_caption_prob": 4.611019176081754e-05}, {"id": 266, "seek": 138400, "start": 1384.0, "end": 1392.0, "text": " And what does that give you? Well, that gives you the ability to have an opaque type, an opaque type meaning see our opaque type episode.", "tokens": [50364, 400, 437, 775, 300, 976, 291, 30, 1042, 11, 300, 2709, 291, 264, 3485, 281, 362, 364, 42687, 2010, 11, 364, 42687, 2010, 3620, 536, 527, 42687, 2010, 3500, 13, 50764, 50764, 467, 1355, 536, 309, 13, 467, 1355, 300, 291, 362, 257, 2375, 2010, 337, 597, 291, 360, 406, 19219, 300, 47479, 281, 264, 2380, 1002, 2380, 295, 300, 10088, 13, 51364, 51364, 663, 311, 439, 309, 307, 13, 407, 437, 2314, 562, 291, 360, 300, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08903991885301543, "compression_ratio": 1.7076923076923076, "no_caption_prob": 7.253805961227044e-05}, {"id": 267, "seek": 138400, "start": 1392.0, "end": 1404.0, "text": " It means see it. It means that you have a custom type for which you do not expose that constructor to the outside world outside of that module.", "tokens": [50364, 400, 437, 775, 300, 976, 291, 30, 1042, 11, 300, 2709, 291, 264, 3485, 281, 362, 364, 42687, 2010, 11, 364, 42687, 2010, 3620, 536, 527, 42687, 2010, 3500, 13, 50764, 50764, 467, 1355, 536, 309, 13, 467, 1355, 300, 291, 362, 257, 2375, 2010, 337, 597, 291, 360, 406, 19219, 300, 47479, 281, 264, 2380, 1002, 2380, 295, 300, 10088, 13, 51364, 51364, 663, 311, 439, 309, 307, 13, 407, 437, 2314, 562, 291, 360, 300, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08903991885301543, "compression_ratio": 1.7076923076923076, "no_caption_prob": 7.253805961227044e-05}, {"id": 268, "seek": 138400, "start": 1404.0, "end": 1407.0, "text": " That's all it is. So what happens when you do that?", "tokens": [50364, 400, 437, 775, 300, 976, 291, 30, 1042, 11, 300, 2709, 291, 264, 3485, 281, 362, 364, 42687, 2010, 11, 364, 42687, 2010, 3620, 536, 527, 42687, 2010, 3500, 13, 50764, 50764, 467, 1355, 536, 309, 13, 467, 1355, 300, 291, 362, 257, 2375, 2010, 337, 597, 291, 360, 406, 19219, 300, 47479, 281, 264, 2380, 1002, 2380, 295, 300, 10088, 13, 51364, 51364, 663, 311, 439, 309, 307, 13, 407, 437, 2314, 562, 291, 360, 300, 30, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08903991885301543, "compression_ratio": 1.7076923076923076, "no_caption_prob": 7.253805961227044e-05}, {"id": 269, "seek": 140700, "start": 1407.0, "end": 1414.0, "text": " Well, now you can have a now you can actually have some semantics around this type.", "tokens": [50364, 1042, 11, 586, 291, 393, 362, 257, 586, 291, 393, 767, 362, 512, 4361, 45298, 926, 341, 2010, 13, 50714, 50714, 407, 718, 311, 584, 300, 291, 362, 1460, 293, 437, 393, 291, 360, 365, 1460, 30, 50964, 50964, 1664, 291, 12972, 1460, 30, 1664, 286, 747, 472, 1460, 293, 12972, 309, 538, 1071, 1460, 30, 51214, 51214, 663, 1177, 380, 652, 2020, 13, 663, 576, 312, 1578, 13, 509, 458, 11, 411, 8889, 14160, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08660018444061279, "compression_ratio": 1.644808743169399, "no_caption_prob": 8.530179002264049e-06}, {"id": 270, "seek": 140700, "start": 1414.0, "end": 1419.0, "text": " So let's say that you have money and what can you do with money?", "tokens": [50364, 1042, 11, 586, 291, 393, 362, 257, 586, 291, 393, 767, 362, 512, 4361, 45298, 926, 341, 2010, 13, 50714, 50714, 407, 718, 311, 584, 300, 291, 362, 1460, 293, 437, 393, 291, 360, 365, 1460, 30, 50964, 50964, 1664, 291, 12972, 1460, 30, 1664, 286, 747, 472, 1460, 293, 12972, 309, 538, 1071, 1460, 30, 51214, 51214, 663, 1177, 380, 652, 2020, 13, 663, 576, 312, 1578, 13, 509, 458, 11, 411, 8889, 14160, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08660018444061279, "compression_ratio": 1.644808743169399, "no_caption_prob": 8.530179002264049e-06}, {"id": 271, "seek": 140700, "start": 1419.0, "end": 1424.0, "text": " Can you multiply money? Can I take one money and multiply it by another money?", "tokens": [50364, 1042, 11, 586, 291, 393, 362, 257, 586, 291, 393, 767, 362, 512, 4361, 45298, 926, 341, 2010, 13, 50714, 50714, 407, 718, 311, 584, 300, 291, 362, 1460, 293, 437, 393, 291, 360, 365, 1460, 30, 50964, 50964, 1664, 291, 12972, 1460, 30, 1664, 286, 747, 472, 1460, 293, 12972, 309, 538, 1071, 1460, 30, 51214, 51214, 663, 1177, 380, 652, 2020, 13, 663, 576, 312, 1578, 13, 509, 458, 11, 411, 8889, 14160, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08660018444061279, "compression_ratio": 1.644808743169399, "no_caption_prob": 8.530179002264049e-06}, {"id": 272, "seek": 140700, "start": 1424.0, "end": 1431.0, "text": " That doesn't make sense. That would be bad. You know, like squared euros.", "tokens": [50364, 1042, 11, 586, 291, 393, 362, 257, 586, 291, 393, 767, 362, 512, 4361, 45298, 926, 341, 2010, 13, 50714, 50714, 407, 718, 311, 584, 300, 291, 362, 1460, 293, 437, 393, 291, 360, 365, 1460, 30, 50964, 50964, 1664, 291, 12972, 1460, 30, 1664, 286, 747, 472, 1460, 293, 12972, 309, 538, 1071, 1460, 30, 51214, 51214, 663, 1177, 380, 652, 2020, 13, 663, 576, 312, 1578, 13, 509, 458, 11, 411, 8889, 14160, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.08660018444061279, "compression_ratio": 1.644808743169399, "no_caption_prob": 8.530179002264049e-06}, {"id": 273, "seek": 143100, "start": 1431.0, "end": 1450.0, "text": " Exactly. It's much more than plain euros. So this is why we should feel very afraid and concerned if we see a raw number value floating around, no pun intended, in our code and not being wrapped in some sort of type.", "tokens": [50364, 7587, 13, 467, 311, 709, 544, 813, 11121, 14160, 13, 407, 341, 307, 983, 321, 820, 841, 588, 4638, 293, 5922, 498, 321, 536, 257, 8936, 1230, 2158, 12607, 926, 11, 572, 4468, 10226, 11, 294, 527, 3089, 293, 406, 885, 14226, 294, 512, 1333, 295, 2010, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.14178020220536453, "compression_ratio": 1.375796178343949, "no_caption_prob": 0.00020661111921072006}, {"id": 274, "seek": 145000, "start": 1450.0, "end": 1461.0, "text": " It's very concerning unless it's in the context of a money module which is defining that logic, which is defining how to add two sums of money together.", "tokens": [50364, 467, 311, 588, 18087, 5969, 309, 311, 294, 264, 4319, 295, 257, 1460, 10088, 597, 307, 17827, 300, 9952, 11, 597, 307, 17827, 577, 281, 909, 732, 34499, 295, 1460, 1214, 13, 50914, 50914, 1396, 869, 13, 663, 311, 300, 311, 689, 309, 2909, 13, 407, 321, 393, 13, 407, 309, 4045, 505, 281, 6964, 264, 4361, 45298, 337, 300, 2010, 13, 51264, 51264, 708, 300, 1355, 307, 498, 309, 311, 445, 364, 560, 26396, 926, 527, 3089, 11, 321, 500, 380, 483, 281, 1969, 264, 4361, 45298, 294, 472, 5777, 1081, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060386677378231716, "compression_ratio": 1.685589519650655, "no_caption_prob": 7.966931298142299e-05}, {"id": 275, "seek": 145000, "start": 1461.0, "end": 1468.0, "text": " Then great. That's that's where it lives. So we can. So it allows us to define the semantics for that type.", "tokens": [50364, 467, 311, 588, 18087, 5969, 309, 311, 294, 264, 4319, 295, 257, 1460, 10088, 597, 307, 17827, 300, 9952, 11, 597, 307, 17827, 577, 281, 909, 732, 34499, 295, 1460, 1214, 13, 50914, 50914, 1396, 869, 13, 663, 311, 300, 311, 689, 309, 2909, 13, 407, 321, 393, 13, 407, 309, 4045, 505, 281, 6964, 264, 4361, 45298, 337, 300, 2010, 13, 51264, 51264, 708, 300, 1355, 307, 498, 309, 311, 445, 364, 560, 26396, 926, 527, 3089, 11, 321, 500, 380, 483, 281, 1969, 264, 4361, 45298, 294, 472, 5777, 1081, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060386677378231716, "compression_ratio": 1.685589519650655, "no_caption_prob": 7.966931298142299e-05}, {"id": 276, "seek": 145000, "start": 1468.0, "end": 1477.0, "text": " What that means is if it's just an int wandering around our code, we don't get to control the semantics in one central place.", "tokens": [50364, 467, 311, 588, 18087, 5969, 309, 311, 294, 264, 4319, 295, 257, 1460, 10088, 597, 307, 17827, 300, 9952, 11, 597, 307, 17827, 577, 281, 909, 732, 34499, 295, 1460, 1214, 13, 50914, 50914, 1396, 869, 13, 663, 311, 300, 311, 689, 309, 2909, 13, 407, 321, 393, 13, 407, 309, 4045, 505, 281, 6964, 264, 4361, 45298, 337, 300, 2010, 13, 51264, 51264, 708, 300, 1355, 307, 498, 309, 311, 445, 364, 560, 26396, 926, 527, 3089, 11, 321, 500, 380, 483, 281, 1969, 264, 4361, 45298, 294, 472, 5777, 1081, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.060386677378231716, "compression_ratio": 1.685589519650655, "no_caption_prob": 7.966931298142299e-05}, {"id": 277, "seek": 147700, "start": 1477.0, "end": 1484.0, "text": " And what that means is if we want to understand, is this money being used correctly? How am I getting negative money?", "tokens": [50364, 400, 437, 300, 1355, 307, 498, 321, 528, 281, 1223, 11, 307, 341, 1460, 885, 1143, 8944, 30, 1012, 669, 286, 1242, 3671, 1460, 30, 50714, 50714, 286, 500, 380, 2066, 281, 1562, 362, 3671, 1460, 570, 286, 2066, 300, 286, 393, 787, 1562, 362, 257, 3353, 2408, 295, 1460, 293, 909, 309, 281, 1071, 3353, 2408, 295, 1460, 294, 452, 9274, 13, 51314, 51314, 663, 1062, 312, 819, 294, 819, 25514, 13, 583, 291, 366, 886, 731, 766, 11, 28160, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08634305000305176, "compression_ratio": 1.6774193548387097, "no_caption_prob": 6.604339432669804e-05}, {"id": 278, "seek": 147700, "start": 1484.0, "end": 1496.0, "text": " I don't expect to ever have negative money because I expect that I can only ever have a positive sum of money and add it to another positive sum of money in my domain.", "tokens": [50364, 400, 437, 300, 1355, 307, 498, 321, 528, 281, 1223, 11, 307, 341, 1460, 885, 1143, 8944, 30, 1012, 669, 286, 1242, 3671, 1460, 30, 50714, 50714, 286, 500, 380, 2066, 281, 1562, 362, 3671, 1460, 570, 286, 2066, 300, 286, 393, 787, 1562, 362, 257, 3353, 2408, 295, 1460, 293, 909, 309, 281, 1071, 3353, 2408, 295, 1460, 294, 452, 9274, 13, 51314, 51314, 663, 1062, 312, 819, 294, 819, 25514, 13, 583, 291, 366, 886, 731, 766, 11, 28160, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08634305000305176, "compression_ratio": 1.6774193548387097, "no_caption_prob": 6.604339432669804e-05}, {"id": 279, "seek": 147700, "start": 1496.0, "end": 1502.0, "text": " That might be different in different domains. But you are too well off, Dillon.", "tokens": [50364, 400, 437, 300, 1355, 307, 498, 321, 528, 281, 1223, 11, 307, 341, 1460, 885, 1143, 8944, 30, 1012, 669, 286, 1242, 3671, 1460, 30, 50714, 50714, 286, 500, 380, 2066, 281, 1562, 362, 3671, 1460, 570, 286, 2066, 300, 286, 393, 787, 1562, 362, 257, 3353, 2408, 295, 1460, 293, 909, 309, 281, 1071, 3353, 2408, 295, 1460, 294, 452, 9274, 13, 51314, 51314, 663, 1062, 312, 819, 294, 819, 25514, 13, 583, 291, 366, 886, 731, 766, 11, 28160, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08634305000305176, "compression_ratio": 1.6774193548387097, "no_caption_prob": 6.604339432669804e-05}, {"id": 280, "seek": 150200, "start": 1502.0, "end": 1508.0, "text": " Not making the concept of negative money in a bank. You're too well off.", "tokens": [50364, 1726, 1455, 264, 3410, 295, 3671, 1460, 294, 257, 3765, 13, 509, 434, 886, 731, 766, 13, 50664, 50664, 1779, 13, 407, 294, 428, 9274, 11, 291, 500, 380, 528, 281, 362, 3671, 1460, 293, 291, 528, 281, 584, 11, 393, 286, 312, 988, 300, 286, 393, 1128, 362, 3671, 1460, 30, 1012, 360, 291, 458, 30, 51164, 51164, 1042, 11, 291, 362, 281, 574, 412, 633, 2167, 1081, 300, 364, 24922, 300, 8855, 1460, 307, 1562, 1143, 294, 428, 2302, 3089, 3096, 586, 293, 294, 264, 2027, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09405382217899445, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00022337492555379868}, {"id": 281, "seek": 150200, "start": 1508.0, "end": 1518.0, "text": " Right. So in your domain, you don't want to have negative money and you want to say, can I be sure that I can never have negative money? How do you know?", "tokens": [50364, 1726, 1455, 264, 3410, 295, 3671, 1460, 294, 257, 3765, 13, 509, 434, 886, 731, 766, 13, 50664, 50664, 1779, 13, 407, 294, 428, 9274, 11, 291, 500, 380, 528, 281, 362, 3671, 1460, 293, 291, 528, 281, 584, 11, 393, 286, 312, 988, 300, 286, 393, 1128, 362, 3671, 1460, 30, 1012, 360, 291, 458, 30, 51164, 51164, 1042, 11, 291, 362, 281, 574, 412, 633, 2167, 1081, 300, 364, 24922, 300, 8855, 1460, 307, 1562, 1143, 294, 428, 2302, 3089, 3096, 586, 293, 294, 264, 2027, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09405382217899445, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00022337492555379868}, {"id": 282, "seek": 150200, "start": 1518.0, "end": 1528.0, "text": " Well, you have to look at every single place that an integer that represents money is ever used in your entire code base now and in the future.", "tokens": [50364, 1726, 1455, 264, 3410, 295, 3671, 1460, 294, 257, 3765, 13, 509, 434, 886, 731, 766, 13, 50664, 50664, 1779, 13, 407, 294, 428, 9274, 11, 291, 500, 380, 528, 281, 362, 3671, 1460, 293, 291, 528, 281, 584, 11, 393, 286, 312, 988, 300, 286, 393, 1128, 362, 3671, 1460, 30, 1012, 360, 291, 458, 30, 51164, 51164, 1042, 11, 291, 362, 281, 574, 412, 633, 2167, 1081, 300, 364, 24922, 300, 8855, 1460, 307, 1562, 1143, 294, 428, 2302, 3089, 3096, 586, 293, 294, 264, 2027, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09405382217899445, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00022337492555379868}, {"id": 283, "seek": 152800, "start": 1528.0, "end": 1536.0, "text": " And that's not very fun. Now, imagine you have an opaque type in your money module. Now, can I have negative money?", "tokens": [50364, 400, 300, 311, 406, 588, 1019, 13, 823, 11, 3811, 291, 362, 364, 42687, 2010, 294, 428, 1460, 10088, 13, 823, 11, 393, 286, 362, 3671, 1460, 30, 50764, 50764, 1042, 11, 718, 311, 536, 13, 708, 366, 264, 7705, 286, 393, 2042, 322, 1460, 30, 286, 393, 979, 1429, 1460, 490, 264, 7154, 13, 51064, 51064, 286, 393, 1884, 1460, 490, 11, 291, 458, 11, 2035, 13, 1981, 366, 264, 2098, 300, 286, 393, 483, 257, 1460, 2010, 13, 51414, 51414, 407, 393, 309, 312, 3671, 456, 30, 509, 362, 281, 291, 362, 281, 2573, 300, 484, 13, 583, 291, 458, 2293, 689, 281, 574, 281, 1029, 300, 1168, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04190476873646612, "compression_ratio": 1.7580645161290323, "no_caption_prob": 7.253718649735674e-05}, {"id": 284, "seek": 152800, "start": 1536.0, "end": 1542.0, "text": " Well, let's see. What are the operations I can perform on money? I can decode money from the server.", "tokens": [50364, 400, 300, 311, 406, 588, 1019, 13, 823, 11, 3811, 291, 362, 364, 42687, 2010, 294, 428, 1460, 10088, 13, 823, 11, 393, 286, 362, 3671, 1460, 30, 50764, 50764, 1042, 11, 718, 311, 536, 13, 708, 366, 264, 7705, 286, 393, 2042, 322, 1460, 30, 286, 393, 979, 1429, 1460, 490, 264, 7154, 13, 51064, 51064, 286, 393, 1884, 1460, 490, 11, 291, 458, 11, 2035, 13, 1981, 366, 264, 2098, 300, 286, 393, 483, 257, 1460, 2010, 13, 51414, 51414, 407, 393, 309, 312, 3671, 456, 30, 509, 362, 281, 291, 362, 281, 2573, 300, 484, 13, 583, 291, 458, 2293, 689, 281, 574, 281, 1029, 300, 1168, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04190476873646612, "compression_ratio": 1.7580645161290323, "no_caption_prob": 7.253718649735674e-05}, {"id": 285, "seek": 152800, "start": 1542.0, "end": 1549.0, "text": " I can create money from, you know, whatever. These are the ways that I can get a money type.", "tokens": [50364, 400, 300, 311, 406, 588, 1019, 13, 823, 11, 3811, 291, 362, 364, 42687, 2010, 294, 428, 1460, 10088, 13, 823, 11, 393, 286, 362, 3671, 1460, 30, 50764, 50764, 1042, 11, 718, 311, 536, 13, 708, 366, 264, 7705, 286, 393, 2042, 322, 1460, 30, 286, 393, 979, 1429, 1460, 490, 264, 7154, 13, 51064, 51064, 286, 393, 1884, 1460, 490, 11, 291, 458, 11, 2035, 13, 1981, 366, 264, 2098, 300, 286, 393, 483, 257, 1460, 2010, 13, 51414, 51414, 407, 393, 309, 312, 3671, 456, 30, 509, 362, 281, 291, 362, 281, 2573, 300, 484, 13, 583, 291, 458, 2293, 689, 281, 574, 281, 1029, 300, 1168, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04190476873646612, "compression_ratio": 1.7580645161290323, "no_caption_prob": 7.253718649735674e-05}, {"id": 286, "seek": 152800, "start": 1549.0, "end": 1556.0, "text": " So can it be negative there? You have to you have to figure that out. But you know exactly where to look to ask that question.", "tokens": [50364, 400, 300, 311, 406, 588, 1019, 13, 823, 11, 3811, 291, 362, 364, 42687, 2010, 294, 428, 1460, 10088, 13, 823, 11, 393, 286, 362, 3671, 1460, 30, 50764, 50764, 1042, 11, 718, 311, 536, 13, 708, 366, 264, 7705, 286, 393, 2042, 322, 1460, 30, 286, 393, 979, 1429, 1460, 490, 264, 7154, 13, 51064, 51064, 286, 393, 1884, 1460, 490, 11, 291, 458, 11, 2035, 13, 1981, 366, 264, 2098, 300, 286, 393, 483, 257, 1460, 2010, 13, 51414, 51414, 407, 393, 309, 312, 3671, 456, 30, 509, 362, 281, 291, 362, 281, 2573, 300, 484, 13, 583, 291, 458, 2293, 689, 281, 574, 281, 1029, 300, 1168, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.04190476873646612, "compression_ratio": 1.7580645161290323, "no_caption_prob": 7.253718649735674e-05}, {"id": 287, "seek": 155600, "start": 1556.0, "end": 1564.0, "text": " Can I take money type that was positive and make it into a negative one? You know exactly where to look to answer that question.", "tokens": [50364, 1664, 286, 747, 1460, 2010, 300, 390, 3353, 293, 652, 309, 666, 257, 3671, 472, 30, 509, 458, 2293, 689, 281, 574, 281, 1867, 300, 1168, 13, 50764, 50764, 400, 300, 311, 309, 13, 663, 311, 293, 550, 577, 360, 286, 1261, 309, 666, 341, 551, 300, 286, 478, 17436, 3319, 322, 264, 7154, 420, 2035, 30, 51064, 51064, 407, 11, 291, 458, 689, 281, 574, 337, 3995, 2663, 13, 407, 291, 600, 733, 295, 14226, 309, 294, 341, 13, 51364, 51364, 286, 2171, 519, 295, 309, 382, 257, 47982, 2010, 11, 293, 286, 519, 341, 307, 257, 588, 4005, 6532, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06869442058059405, "compression_ratio": 1.6521739130434783, "no_caption_prob": 0.00010390691750217229}, {"id": 288, "seek": 155600, "start": 1564.0, "end": 1570.0, "text": " And that's it. That's and then how do I turn it into this thing that I'm serializing on the server or whatever?", "tokens": [50364, 1664, 286, 747, 1460, 2010, 300, 390, 3353, 293, 652, 309, 666, 257, 3671, 472, 30, 509, 458, 2293, 689, 281, 574, 281, 1867, 300, 1168, 13, 50764, 50764, 400, 300, 311, 309, 13, 663, 311, 293, 550, 577, 360, 286, 1261, 309, 666, 341, 551, 300, 286, 478, 17436, 3319, 322, 264, 7154, 420, 2035, 30, 51064, 51064, 407, 11, 291, 458, 689, 281, 574, 337, 3995, 2663, 13, 407, 291, 600, 733, 295, 14226, 309, 294, 341, 13, 51364, 51364, 286, 2171, 519, 295, 309, 382, 257, 47982, 2010, 11, 293, 286, 519, 341, 307, 257, 588, 4005, 6532, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06869442058059405, "compression_ratio": 1.6521739130434783, "no_caption_prob": 0.00010390691750217229}, {"id": 289, "seek": 155600, "start": 1570.0, "end": 1576.0, "text": " So, you know where to look for potential issues. So you've kind of wrapped it in this.", "tokens": [50364, 1664, 286, 747, 1460, 2010, 300, 390, 3353, 293, 652, 309, 666, 257, 3671, 472, 30, 509, 458, 2293, 689, 281, 574, 281, 1867, 300, 1168, 13, 50764, 50764, 400, 300, 311, 309, 13, 663, 311, 293, 550, 577, 360, 286, 1261, 309, 666, 341, 551, 300, 286, 478, 17436, 3319, 322, 264, 7154, 420, 2035, 30, 51064, 51064, 407, 11, 291, 458, 689, 281, 574, 337, 3995, 2663, 13, 407, 291, 600, 733, 295, 14226, 309, 294, 341, 13, 51364, 51364, 286, 2171, 519, 295, 309, 382, 257, 47982, 2010, 11, 293, 286, 519, 341, 307, 257, 588, 4005, 6532, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06869442058059405, "compression_ratio": 1.6521739130434783, "no_caption_prob": 0.00010390691750217229}, {"id": 290, "seek": 155600, "start": 1576.0, "end": 1581.0, "text": " I sometimes think of it as a semantic type, and I think this is a very powerful technique.", "tokens": [50364, 1664, 286, 747, 1460, 2010, 300, 390, 3353, 293, 652, 309, 666, 257, 3671, 472, 30, 509, 458, 2293, 689, 281, 574, 281, 1867, 300, 1168, 13, 50764, 50764, 400, 300, 311, 309, 13, 663, 311, 293, 550, 577, 360, 286, 1261, 309, 666, 341, 551, 300, 286, 478, 17436, 3319, 322, 264, 7154, 420, 2035, 30, 51064, 51064, 407, 11, 291, 458, 689, 281, 574, 337, 3995, 2663, 13, 407, 291, 600, 733, 295, 14226, 309, 294, 341, 13, 51364, 51364, 286, 2171, 519, 295, 309, 382, 257, 47982, 2010, 11, 293, 286, 519, 341, 307, 257, 588, 4005, 6532, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06869442058059405, "compression_ratio": 1.6521739130434783, "no_caption_prob": 0.00010390691750217229}, {"id": 291, "seek": 158100, "start": 1581.0, "end": 1587.0, "text": " I think it's probably underused. So, yeah, create semantic type wrappers. Use an opaque type.", "tokens": [50364, 286, 519, 309, 311, 1391, 833, 4717, 13, 407, 11, 1338, 11, 1884, 47982, 2010, 7843, 15226, 13, 8278, 364, 42687, 2010, 13, 50664, 50664, 823, 11, 797, 11, 286, 519, 286, 534, 411, 1953, 466, 1953, 466, 341, 294, 2115, 295, 11, 291, 458, 11, 411, 437, 437, 393, 364, 42687, 2010, 854, 505, 360, 30, 51114, 51114, 1042, 11, 309, 393, 854, 505, 1223, 411, 264, 4957, 295, 257, 2010, 13, 2305, 393, 309, 808, 490, 30, 1012, 393, 286, 483, 341, 551, 30, 51464, 51464, 759, 309, 311, 364, 560, 11, 689, 393, 364, 560, 808, 490, 30, 1042, 11, 309, 311, 445, 364, 560, 13, 821, 311, 1825, 2121, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07884345849355062, "compression_ratio": 1.7967479674796747, "no_caption_prob": 0.00024152269179467112}, {"id": 292, "seek": 158100, "start": 1587.0, "end": 1596.0, "text": " Now, again, I think I really like thinking about thinking about this in terms of, you know, like what what can an opaque type help us do?", "tokens": [50364, 286, 519, 309, 311, 1391, 833, 4717, 13, 407, 11, 1338, 11, 1884, 47982, 2010, 7843, 15226, 13, 8278, 364, 42687, 2010, 13, 50664, 50664, 823, 11, 797, 11, 286, 519, 286, 534, 411, 1953, 466, 1953, 466, 341, 294, 2115, 295, 11, 291, 458, 11, 411, 437, 437, 393, 364, 42687, 2010, 854, 505, 360, 30, 51114, 51114, 1042, 11, 309, 393, 854, 505, 1223, 411, 264, 4957, 295, 257, 2010, 13, 2305, 393, 309, 808, 490, 30, 1012, 393, 286, 483, 341, 551, 30, 51464, 51464, 759, 309, 311, 364, 560, 11, 689, 393, 364, 560, 808, 490, 30, 1042, 11, 309, 311, 445, 364, 560, 13, 821, 311, 1825, 2121, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07884345849355062, "compression_ratio": 1.7967479674796747, "no_caption_prob": 0.00024152269179467112}, {"id": 293, "seek": 158100, "start": 1596.0, "end": 1603.0, "text": " Well, it can help us understand like the origin of a type. Where can it come from? How can I get this thing?", "tokens": [50364, 286, 519, 309, 311, 1391, 833, 4717, 13, 407, 11, 1338, 11, 1884, 47982, 2010, 7843, 15226, 13, 8278, 364, 42687, 2010, 13, 50664, 50664, 823, 11, 797, 11, 286, 519, 286, 534, 411, 1953, 466, 1953, 466, 341, 294, 2115, 295, 11, 291, 458, 11, 411, 437, 437, 393, 364, 42687, 2010, 854, 505, 360, 30, 51114, 51114, 1042, 11, 309, 393, 854, 505, 1223, 411, 264, 4957, 295, 257, 2010, 13, 2305, 393, 309, 808, 490, 30, 1012, 393, 286, 483, 341, 551, 30, 51464, 51464, 759, 309, 311, 364, 560, 11, 689, 393, 364, 560, 808, 490, 30, 1042, 11, 309, 311, 445, 364, 560, 13, 821, 311, 1825, 2121, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07884345849355062, "compression_ratio": 1.7967479674796747, "no_caption_prob": 0.00024152269179467112}, {"id": 294, "seek": 158100, "start": 1603.0, "end": 1609.0, "text": " If it's an int, where can an int come from? Well, it's just an int. There's nothing special about it.", "tokens": [50364, 286, 519, 309, 311, 1391, 833, 4717, 13, 407, 11, 1338, 11, 1884, 47982, 2010, 7843, 15226, 13, 8278, 364, 42687, 2010, 13, 50664, 50664, 823, 11, 797, 11, 286, 519, 286, 534, 411, 1953, 466, 1953, 466, 341, 294, 2115, 295, 11, 291, 458, 11, 411, 437, 437, 393, 364, 42687, 2010, 854, 505, 360, 30, 51114, 51114, 1042, 11, 309, 393, 854, 505, 1223, 411, 264, 4957, 295, 257, 2010, 13, 2305, 393, 309, 808, 490, 30, 1012, 393, 286, 483, 341, 551, 30, 51464, 51464, 759, 309, 311, 364, 560, 11, 689, 393, 364, 560, 808, 490, 30, 1042, 11, 309, 311, 445, 364, 560, 13, 821, 311, 1825, 2121, 466, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.07884345849355062, "compression_ratio": 1.7967479674796747, "no_caption_prob": 0.00024152269179467112}, {"id": 295, "seek": 160900, "start": 1609.0, "end": 1613.0, "text": " But where can my opaque type come from? Well, that's another question.", "tokens": [50364, 583, 689, 393, 452, 42687, 2010, 808, 490, 30, 1042, 11, 300, 311, 1071, 1168, 13, 50564, 50564, 400, 257, 709, 18587, 472, 13, 467, 311, 257, 709, 18587, 1168, 281, 1867, 13, 50714, 50714, 407, 498, 291, 6964, 257, 979, 19866, 300, 2709, 291, 257, 1460, 2010, 11, 550, 309, 393, 808, 490, 257, 979, 19866, 13, 51014, 51014, 759, 291, 6964, 364, 33283, 5308, 300, 3255, 577, 281, 483, 1460, 293, 483, 300, 2010, 13, 407, 11, 291, 458, 11, 291, 483, 291, 483, 264, 1558, 13, 51414, 51414, 1743, 291, 393, 1969, 264, 4957, 13, 509, 393, 829, 257, 9921, 322, 309, 13, 1018, 321, 600, 2825, 466, 294, 527, 42687, 3467, 3500, 11, 291, 393, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08019699588898689, "compression_ratio": 1.7557251908396947, "no_caption_prob": 4.832441118196584e-05}, {"id": 296, "seek": 160900, "start": 1613.0, "end": 1616.0, "text": " And a much simpler one. It's a much simpler question to answer.", "tokens": [50364, 583, 689, 393, 452, 42687, 2010, 808, 490, 30, 1042, 11, 300, 311, 1071, 1168, 13, 50564, 50564, 400, 257, 709, 18587, 472, 13, 467, 311, 257, 709, 18587, 1168, 281, 1867, 13, 50714, 50714, 407, 498, 291, 6964, 257, 979, 19866, 300, 2709, 291, 257, 1460, 2010, 11, 550, 309, 393, 808, 490, 257, 979, 19866, 13, 51014, 51014, 759, 291, 6964, 364, 33283, 5308, 300, 3255, 577, 281, 483, 1460, 293, 483, 300, 2010, 13, 407, 11, 291, 458, 11, 291, 483, 291, 483, 264, 1558, 13, 51414, 51414, 1743, 291, 393, 1969, 264, 4957, 13, 509, 393, 829, 257, 9921, 322, 309, 13, 1018, 321, 600, 2825, 466, 294, 527, 42687, 3467, 3500, 11, 291, 393, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08019699588898689, "compression_ratio": 1.7557251908396947, "no_caption_prob": 4.832441118196584e-05}, {"id": 297, "seek": 160900, "start": 1616.0, "end": 1622.0, "text": " So if you define a decoder that gives you a money type, then it can come from a decoder.", "tokens": [50364, 583, 689, 393, 452, 42687, 2010, 808, 490, 30, 1042, 11, 300, 311, 1071, 1168, 13, 50564, 50564, 400, 257, 709, 18587, 472, 13, 467, 311, 257, 709, 18587, 1168, 281, 1867, 13, 50714, 50714, 407, 498, 291, 6964, 257, 979, 19866, 300, 2709, 291, 257, 1460, 2010, 11, 550, 309, 393, 808, 490, 257, 979, 19866, 13, 51014, 51014, 759, 291, 6964, 364, 33283, 5308, 300, 3255, 577, 281, 483, 1460, 293, 483, 300, 2010, 13, 407, 11, 291, 458, 11, 291, 483, 291, 483, 264, 1558, 13, 51414, 51414, 1743, 291, 393, 1969, 264, 4957, 13, 509, 393, 829, 257, 9921, 322, 309, 13, 1018, 321, 600, 2825, 466, 294, 527, 42687, 3467, 3500, 11, 291, 393, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08019699588898689, "compression_ratio": 1.7557251908396947, "no_caption_prob": 4.832441118196584e-05}, {"id": 298, "seek": 160900, "start": 1622.0, "end": 1630.0, "text": " If you define an HTTP request that knows how to get money and get that type. So, you know, you get you get the idea.", "tokens": [50364, 583, 689, 393, 452, 42687, 2010, 808, 490, 30, 1042, 11, 300, 311, 1071, 1168, 13, 50564, 50564, 400, 257, 709, 18587, 472, 13, 467, 311, 257, 709, 18587, 1168, 281, 1867, 13, 50714, 50714, 407, 498, 291, 6964, 257, 979, 19866, 300, 2709, 291, 257, 1460, 2010, 11, 550, 309, 393, 808, 490, 257, 979, 19866, 13, 51014, 51014, 759, 291, 6964, 364, 33283, 5308, 300, 3255, 577, 281, 483, 1460, 293, 483, 300, 2010, 13, 407, 11, 291, 458, 11, 291, 483, 291, 483, 264, 1558, 13, 51414, 51414, 1743, 291, 393, 1969, 264, 4957, 13, 509, 393, 829, 257, 9921, 322, 309, 13, 1018, 321, 600, 2825, 466, 294, 527, 42687, 3467, 3500, 11, 291, 393, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08019699588898689, "compression_ratio": 1.7557251908396947, "no_caption_prob": 4.832441118196584e-05}, {"id": 299, "seek": 160900, "start": 1630.0, "end": 1638.0, "text": " Like you can control the origin. You can put a stamp on it. As we've talked about in our opaque types episode, you can.", "tokens": [50364, 583, 689, 393, 452, 42687, 2010, 808, 490, 30, 1042, 11, 300, 311, 1071, 1168, 13, 50564, 50564, 400, 257, 709, 18587, 472, 13, 467, 311, 257, 709, 18587, 1168, 281, 1867, 13, 50714, 50714, 407, 498, 291, 6964, 257, 979, 19866, 300, 2709, 291, 257, 1460, 2010, 11, 550, 309, 393, 808, 490, 257, 979, 19866, 13, 51014, 51014, 759, 291, 6964, 364, 33283, 5308, 300, 3255, 577, 281, 483, 1460, 293, 483, 300, 2010, 13, 407, 11, 291, 458, 11, 291, 483, 291, 483, 264, 1558, 13, 51414, 51414, 1743, 291, 393, 1969, 264, 4957, 13, 509, 393, 829, 257, 9921, 322, 309, 13, 1018, 321, 600, 2825, 466, 294, 527, 42687, 3467, 3500, 11, 291, 393, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08019699588898689, "compression_ratio": 1.7557251908396947, "no_caption_prob": 4.832441118196584e-05}, {"id": 300, "seek": 163800, "start": 1638.0, "end": 1651.0, "text": " You can conditionally return a type which allows you to perform a validation and represent a stamp of approval that this is a valid username or this is a positive money value or whatever, whatever it is.", "tokens": [50364, 509, 393, 4188, 379, 2736, 257, 2010, 597, 4045, 291, 281, 2042, 257, 24071, 293, 2906, 257, 9921, 295, 13317, 300, 341, 307, 257, 7363, 30351, 420, 341, 307, 257, 3353, 1460, 2158, 420, 2035, 11, 2035, 309, 307, 13, 51014, 51014, 400, 291, 500, 380, 2736, 300, 2010, 5969, 291, 600, 40693, 309, 13, 407, 456, 366, 445, 439, 613, 721, 300, 562, 291, 362, 257, 28540, 2010, 11, 291, 362, 281, 574, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.0675382855572278, "compression_ratio": 1.6603773584905661, "no_caption_prob": 0.0001559644442750141}, {"id": 301, "seek": 163800, "start": 1651.0, "end": 1659.0, "text": " And you don't return that type unless you've validated it. So there are just all these things that when you have a primitive type, you have to look.", "tokens": [50364, 509, 393, 4188, 379, 2736, 257, 2010, 597, 4045, 291, 281, 2042, 257, 24071, 293, 2906, 257, 9921, 295, 13317, 300, 341, 307, 257, 7363, 30351, 420, 341, 307, 257, 3353, 1460, 2158, 420, 2035, 11, 2035, 309, 307, 13, 51014, 51014, 400, 291, 500, 380, 2736, 300, 2010, 5969, 291, 600, 40693, 309, 13, 407, 456, 366, 445, 439, 613, 721, 300, 562, 291, 362, 257, 28540, 2010, 11, 291, 362, 281, 574, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.0675382855572278, "compression_ratio": 1.6603773584905661, "no_caption_prob": 0.0001559644442750141}, {"id": 302, "seek": 165900, "start": 1659.0, "end": 1671.0, "text": " It's almost this imperative thing where you have to get everything in your head to understand what it's doing rather than giving something semantics and being able to look in one place and then trust those semantics everywhere else.", "tokens": [50364, 467, 311, 1920, 341, 32490, 551, 689, 291, 362, 281, 483, 1203, 294, 428, 1378, 281, 1223, 437, 309, 311, 884, 2831, 813, 2902, 746, 4361, 45298, 293, 885, 1075, 281, 574, 294, 472, 1081, 293, 550, 3361, 729, 4361, 45298, 5315, 1646, 13, 50964, 50964, 407, 286, 478, 516, 281, 853, 281, 20858, 437, 633, 1823, 2709, 291, 13, 407, 498, 291, 362, 257, 28540, 11, 550, 291, 362, 572, 32567, 295, 604, 733, 293, 572, 3601, 295, 577, 721, 645, 2942, 420, 577, 721, 366, 1143, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.02771490620028588, "compression_ratio": 1.7613168724279835, "no_caption_prob": 3.7634734326275066e-05}, {"id": 303, "seek": 165900, "start": 1671.0, "end": 1686.0, "text": " So I'm going to try to summarize what every step gives you. So if you have a primitive, then you have no guarantees of any kind and no knowledge of how things were created or how things are used.", "tokens": [50364, 467, 311, 1920, 341, 32490, 551, 689, 291, 362, 281, 483, 1203, 294, 428, 1378, 281, 1223, 437, 309, 311, 884, 2831, 813, 2902, 746, 4361, 45298, 293, 885, 1075, 281, 574, 294, 472, 1081, 293, 550, 3361, 729, 4361, 45298, 5315, 1646, 13, 50964, 50964, 407, 286, 478, 516, 281, 853, 281, 20858, 437, 633, 1823, 2709, 291, 13, 407, 498, 291, 362, 257, 28540, 11, 550, 291, 362, 572, 32567, 295, 604, 733, 293, 572, 3601, 295, 577, 721, 645, 2942, 420, 577, 721, 366, 1143, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.02771490620028588, "compression_ratio": 1.7613168724279835, "no_caption_prob": 3.7634734326275066e-05}, {"id": 304, "seek": 168600, "start": 1686.0, "end": 1700.0, "text": " So let's imagine you create a type alias money. Then what you have is now a name. So you have a semantic name for this type. So it's easier to understand it and to identify it.", "tokens": [50364, 407, 718, 311, 3811, 291, 1884, 257, 2010, 419, 4609, 1460, 13, 1396, 437, 291, 362, 307, 586, 257, 1315, 13, 407, 291, 362, 257, 47982, 1315, 337, 341, 2010, 13, 407, 309, 311, 3571, 281, 1223, 309, 293, 281, 5876, 309, 13, 51064, 51064, 1133, 291, 3679, 281, 257, 2375, 2010, 420, 562, 291, 764, 257, 2375, 2010, 490, 264, 483, 352, 11, 382, 512, 4382, 11, 550, 291, 483, 257, 688, 544, 32567, 490, 264, 31958, 570, 291, 393, 380, 2890, 552, 365, 3890, 2886, 38970, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06315448207239951, "compression_ratio": 1.6830357142857142, "no_caption_prob": 2.0143934307270683e-05}, {"id": 305, "seek": 168600, "start": 1700.0, "end": 1714.0, "text": " When you switch to a custom type or when you use a custom type from the get go, as some prefer, then you get a lot more guarantees from the compiler because you can't mix them with regular primitives.", "tokens": [50364, 407, 718, 311, 3811, 291, 1884, 257, 2010, 419, 4609, 1460, 13, 1396, 437, 291, 362, 307, 586, 257, 1315, 13, 407, 291, 362, 257, 47982, 1315, 337, 341, 2010, 13, 407, 309, 311, 3571, 281, 1223, 309, 293, 281, 5876, 309, 13, 51064, 51064, 1133, 291, 3679, 281, 257, 2375, 2010, 420, 562, 291, 764, 257, 2375, 2010, 490, 264, 483, 352, 11, 382, 512, 4382, 11, 550, 291, 483, 257, 688, 544, 32567, 490, 264, 31958, 570, 291, 393, 380, 2890, 552, 365, 3890, 2886, 38970, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.06315448207239951, "compression_ratio": 1.6830357142857142, "no_caption_prob": 2.0143934307270683e-05}, {"id": 306, "seek": 171400, "start": 1714.0, "end": 1726.0, "text": " And you still have this semantic name. Now you really have a semantic type. And when you switch it to an opaque type, then what you can do is control how it's created, what you can do with it.", "tokens": [50364, 400, 291, 920, 362, 341, 47982, 1315, 13, 823, 291, 534, 362, 257, 47982, 2010, 13, 400, 562, 291, 3679, 309, 281, 364, 42687, 2010, 11, 550, 437, 291, 393, 360, 307, 1969, 577, 309, 311, 2942, 11, 437, 291, 393, 360, 365, 309, 13, 50964, 50964, 400, 291, 393, 611, 24825, 512, 32567, 11, 512, 18491, 11, 512, 33270, 1719, 13, 51264, 51264, 1079, 11, 2293, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08659871419270833, "compression_ratio": 1.654970760233918, "no_caption_prob": 7.601360266562551e-05}, {"id": 307, "seek": 171400, "start": 1726.0, "end": 1732.0, "text": " And you can also enforce some guarantees, some constraints, some invariants.", "tokens": [50364, 400, 291, 920, 362, 341, 47982, 1315, 13, 823, 291, 534, 362, 257, 47982, 2010, 13, 400, 562, 291, 3679, 309, 281, 364, 42687, 2010, 11, 550, 437, 291, 393, 360, 307, 1969, 577, 309, 311, 2942, 11, 437, 291, 393, 360, 365, 309, 13, 50964, 50964, 400, 291, 393, 611, 24825, 512, 32567, 11, 512, 18491, 11, 512, 33270, 1719, 13, 51264, 51264, 1079, 11, 2293, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08659871419270833, "compression_ratio": 1.654970760233918, "no_caption_prob": 7.601360266562551e-05}, {"id": 308, "seek": 171400, "start": 1732.0, "end": 1733.0, "text": " Yes, exactly.", "tokens": [50364, 400, 291, 920, 362, 341, 47982, 1315, 13, 823, 291, 534, 362, 257, 47982, 2010, 13, 400, 562, 291, 3679, 309, 281, 364, 42687, 2010, 11, 550, 437, 291, 393, 360, 307, 1969, 577, 309, 311, 2942, 11, 437, 291, 393, 360, 365, 309, 13, 50964, 50964, 400, 291, 393, 611, 24825, 512, 32567, 11, 512, 18491, 11, 512, 33270, 1719, 13, 51264, 51264, 1079, 11, 2293, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08659871419270833, "compression_ratio": 1.654970760233918, "no_caption_prob": 7.601360266562551e-05}, {"id": 309, "seek": 173300, "start": 1733.0, "end": 1744.0, "text": " Money not being negative, for instance. So yeah, each one of those steps adds more benefits, just a regular primitive. And I think each one is valuable.", "tokens": [50364, 16631, 406, 885, 3671, 11, 337, 5197, 13, 407, 1338, 11, 1184, 472, 295, 729, 4439, 10860, 544, 5311, 11, 445, 257, 3890, 28540, 13, 400, 286, 519, 1184, 472, 307, 8263, 13, 50914, 50914, 286, 500, 380, 458, 498, 286, 576, 1009, 352, 281, 364, 42687, 2010, 11, 457, 286, 611, 500, 380, 536, 983, 286, 576, 406, 13, 407, 1338, 11, 983, 576, 291, 406, 764, 364, 42687, 2010, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08918612881710655, "compression_ratio": 1.5343915343915344, "no_caption_prob": 4.133350739721209e-05}, {"id": 310, "seek": 173300, "start": 1744.0, "end": 1760.0, "text": " I don't know if I would always go to an opaque type, but I also don't see why I would not. So yeah, why would you not use an opaque type?", "tokens": [50364, 16631, 406, 885, 3671, 11, 337, 5197, 13, 407, 1338, 11, 1184, 472, 295, 729, 4439, 10860, 544, 5311, 11, 445, 257, 3890, 28540, 13, 400, 286, 519, 1184, 472, 307, 8263, 13, 50914, 50914, 286, 500, 380, 458, 498, 286, 576, 1009, 352, 281, 364, 42687, 2010, 11, 457, 286, 611, 500, 380, 536, 983, 286, 576, 406, 13, 407, 1338, 11, 983, 576, 291, 406, 764, 364, 42687, 2010, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.08918612881710655, "compression_ratio": 1.5343915343915344, "no_caption_prob": 4.133350739721209e-05}, {"id": 311, "seek": 176000, "start": 1760.0, "end": 1771.0, "text": " The only reason I would not use an opaque type in general would be because I want consumers to be able to pattern match on the raw data or variants.", "tokens": [50364, 440, 787, 1778, 286, 576, 406, 764, 364, 42687, 2010, 294, 2674, 576, 312, 570, 286, 528, 11883, 281, 312, 1075, 281, 5102, 2995, 322, 264, 8936, 1412, 420, 21669, 13, 50914, 50914, 663, 311, 3143, 13, 865, 13, 51014, 51014], "temperature": 0.0, "avg_logprob": -0.07760187636974246, "compression_ratio": 1.31496062992126, "no_caption_prob": 3.288602329121204e-06}, {"id": 312, "seek": 176000, "start": 1771.0, "end": 1773.0, "text": " That's fair. Yeah.", "tokens": [50364, 440, 787, 1778, 286, 576, 406, 764, 364, 42687, 2010, 294, 2674, 576, 312, 570, 286, 528, 11883, 281, 312, 1075, 281, 5102, 2995, 322, 264, 8936, 1412, 420, 21669, 13, 50914, 50914, 663, 311, 3143, 13, 865, 13, 51014, 51014], "temperature": 0.0, "avg_logprob": -0.07760187636974246, "compression_ratio": 1.31496062992126, "no_caption_prob": 3.288602329121204e-06}, {"id": 313, "seek": 177300, "start": 1773.0, "end": 1793.0, "text": " So whenever you create an opaque custom type, if you want people to pattern match on them or to use them based on how it looks and what the value is, then either you expose the constructors, meaning it's not opaque, or you create some API which replicates a case of.", "tokens": [50364, 407, 5699, 291, 1884, 364, 42687, 2375, 2010, 11, 498, 291, 528, 561, 281, 5102, 2995, 322, 552, 420, 281, 764, 552, 2361, 322, 577, 309, 1542, 293, 437, 264, 2158, 307, 11, 550, 2139, 291, 19219, 264, 7690, 830, 11, 3620, 309, 311, 406, 42687, 11, 420, 291, 1884, 512, 9362, 597, 3248, 299, 1024, 257, 1389, 295, 13, 51364, 51364, 7587, 13, 51414, 51414, 3013, 307, 2673, 406, 869, 13, 51564, 51564, 7010, 13, 51614, 51614, 1610, 1310, 291, 1884, 364, 19376, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0922310405307346, "compression_ratio": 1.5625, "no_caption_prob": 0.00012146986409788951}, {"id": 314, "seek": 177300, "start": 1793.0, "end": 1794.0, "text": " Exactly.", "tokens": [50364, 407, 5699, 291, 1884, 364, 42687, 2375, 2010, 11, 498, 291, 528, 561, 281, 5102, 2995, 322, 552, 420, 281, 764, 552, 2361, 322, 577, 309, 1542, 293, 437, 264, 2158, 307, 11, 550, 2139, 291, 19219, 264, 7690, 830, 11, 3620, 309, 311, 406, 42687, 11, 420, 291, 1884, 512, 9362, 597, 3248, 299, 1024, 257, 1389, 295, 13, 51364, 51364, 7587, 13, 51414, 51414, 3013, 307, 2673, 406, 869, 13, 51564, 51564, 7010, 13, 51614, 51614, 1610, 1310, 291, 1884, 364, 19376, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0922310405307346, "compression_ratio": 1.5625, "no_caption_prob": 0.00012146986409788951}, {"id": 315, "seek": 177300, "start": 1794.0, "end": 1797.0, "text": " Which is usually not great.", "tokens": [50364, 407, 5699, 291, 1884, 364, 42687, 2375, 2010, 11, 498, 291, 528, 561, 281, 5102, 2995, 322, 552, 420, 281, 764, 552, 2361, 322, 577, 309, 1542, 293, 437, 264, 2158, 307, 11, 550, 2139, 291, 19219, 264, 7690, 830, 11, 3620, 309, 311, 406, 42687, 11, 420, 291, 1884, 512, 9362, 597, 3248, 299, 1024, 257, 1389, 295, 13, 51364, 51364, 7587, 13, 51414, 51414, 3013, 307, 2673, 406, 869, 13, 51564, 51564, 7010, 13, 51614, 51614, 1610, 1310, 291, 1884, 364, 19376, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0922310405307346, "compression_ratio": 1.5625, "no_caption_prob": 0.00012146986409788951}, {"id": 316, "seek": 177300, "start": 1797.0, "end": 1798.0, "text": " Yep.", "tokens": [50364, 407, 5699, 291, 1884, 364, 42687, 2375, 2010, 11, 498, 291, 528, 561, 281, 5102, 2995, 322, 552, 420, 281, 764, 552, 2361, 322, 577, 309, 1542, 293, 437, 264, 2158, 307, 11, 550, 2139, 291, 19219, 264, 7690, 830, 11, 3620, 309, 311, 406, 42687, 11, 420, 291, 1884, 512, 9362, 597, 3248, 299, 1024, 257, 1389, 295, 13, 51364, 51364, 7587, 13, 51414, 51414, 3013, 307, 2673, 406, 869, 13, 51564, 51564, 7010, 13, 51614, 51614, 1610, 1310, 291, 1884, 364, 19376, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0922310405307346, "compression_ratio": 1.5625, "no_caption_prob": 0.00012146986409788951}, {"id": 317, "seek": 177300, "start": 1798.0, "end": 1801.0, "text": " Or maybe you create an intermediate type.", "tokens": [50364, 407, 5699, 291, 1884, 364, 42687, 2375, 2010, 11, 498, 291, 528, 561, 281, 5102, 2995, 322, 552, 420, 281, 764, 552, 2361, 322, 577, 309, 1542, 293, 437, 264, 2158, 307, 11, 550, 2139, 291, 19219, 264, 7690, 830, 11, 3620, 309, 311, 406, 42687, 11, 420, 291, 1884, 512, 9362, 597, 3248, 299, 1024, 257, 1389, 295, 13, 51364, 51364, 7587, 13, 51414, 51414, 3013, 307, 2673, 406, 869, 13, 51564, 51564, 7010, 13, 51614, 51614, 1610, 1310, 291, 1884, 364, 19376, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0922310405307346, "compression_ratio": 1.5625, "no_caption_prob": 0.00012146986409788951}, {"id": 318, "seek": 180100, "start": 1801.0, "end": 1809.0, "text": " That's right. Which you do expose and it decouples you from the internal, actual opaque type that you use.", "tokens": [50364, 663, 311, 558, 13, 3013, 291, 360, 19219, 293, 309, 979, 263, 2622, 291, 490, 264, 6920, 11, 3539, 42687, 2010, 300, 291, 764, 13, 50764, 50764, 865, 11, 457, 550, 597, 1497, 8355, 561, 570, 11, 1954, 11, 286, 1194, 341, 390, 1460, 490, 341, 10088, 11, 457, 309, 311, 1460, 490, 341, 10088, 13, 51164, 51164, 1779, 11, 558, 13, 865, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.1180871654959286, "compression_ratio": 1.5460122699386503, "no_caption_prob": 8.092444477370009e-05}, {"id": 319, "seek": 180100, "start": 1809.0, "end": 1817.0, "text": " Yeah, but then which confuses people because, oh, I thought this was money from this module, but it's money from this module.", "tokens": [50364, 663, 311, 558, 13, 3013, 291, 360, 19219, 293, 309, 979, 263, 2622, 291, 490, 264, 6920, 11, 3539, 42687, 2010, 300, 291, 764, 13, 50764, 50764, 865, 11, 457, 550, 597, 1497, 8355, 561, 570, 11, 1954, 11, 286, 1194, 341, 390, 1460, 490, 341, 10088, 11, 457, 309, 311, 1460, 490, 341, 10088, 13, 51164, 51164, 1779, 11, 558, 13, 865, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.1180871654959286, "compression_ratio": 1.5460122699386503, "no_caption_prob": 8.092444477370009e-05}, {"id": 320, "seek": 180100, "start": 1817.0, "end": 1819.0, "text": " Right, right. Yeah.", "tokens": [50364, 663, 311, 558, 13, 3013, 291, 360, 19219, 293, 309, 979, 263, 2622, 291, 490, 264, 6920, 11, 3539, 42687, 2010, 300, 291, 764, 13, 50764, 50764, 865, 11, 457, 550, 597, 1497, 8355, 561, 570, 11, 1954, 11, 286, 1194, 341, 390, 1460, 490, 341, 10088, 11, 457, 309, 311, 1460, 490, 341, 10088, 13, 51164, 51164, 1779, 11, 558, 13, 865, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.1180871654959286, "compression_ratio": 1.5460122699386503, "no_caption_prob": 8.092444477370009e-05}, {"id": 321, "seek": 181900, "start": 1819.0, "end": 1834.0, "text": " Yeah, but in general, the way I think about like whether to use an opaque type or not, it's, do I want to enforce constraints about how this thing is used everywhere in my code base or in this one module?", "tokens": [50364, 865, 11, 457, 294, 2674, 11, 264, 636, 286, 519, 466, 411, 1968, 281, 764, 364, 42687, 2010, 420, 406, 11, 309, 311, 11, 360, 286, 528, 281, 24825, 18491, 466, 577, 341, 551, 307, 1143, 5315, 294, 452, 3089, 3096, 420, 294, 341, 472, 10088, 30, 51114, 51114, 400, 1920, 1009, 264, 1867, 337, 385, 307, 294, 341, 472, 10088, 13, 51314, 51314, 663, 311, 689, 286, 528, 281, 519, 466, 577, 341, 393, 312, 1143, 293, 437, 7705, 366, 7363, 337, 309, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07238167323423235, "compression_ratio": 1.6527777777777777, "no_caption_prob": 9.460224828217179e-05}, {"id": 322, "seek": 181900, "start": 1834.0, "end": 1838.0, "text": " And almost always the answer for me is in this one module.", "tokens": [50364, 865, 11, 457, 294, 2674, 11, 264, 636, 286, 519, 466, 411, 1968, 281, 764, 364, 42687, 2010, 420, 406, 11, 309, 311, 11, 360, 286, 528, 281, 24825, 18491, 466, 577, 341, 551, 307, 1143, 5315, 294, 452, 3089, 3096, 420, 294, 341, 472, 10088, 30, 51114, 51114, 400, 1920, 1009, 264, 1867, 337, 385, 307, 294, 341, 472, 10088, 13, 51314, 51314, 663, 311, 689, 286, 528, 281, 519, 466, 577, 341, 393, 312, 1143, 293, 437, 7705, 366, 7363, 337, 309, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07238167323423235, "compression_ratio": 1.6527777777777777, "no_caption_prob": 9.460224828217179e-05}, {"id": 323, "seek": 181900, "start": 1838.0, "end": 1843.0, "text": " That's where I want to think about how this can be used and what operations are valid for it.", "tokens": [50364, 865, 11, 457, 294, 2674, 11, 264, 636, 286, 519, 466, 411, 1968, 281, 764, 364, 42687, 2010, 420, 406, 11, 309, 311, 11, 360, 286, 528, 281, 24825, 18491, 466, 577, 341, 551, 307, 1143, 5315, 294, 452, 3089, 3096, 420, 294, 341, 472, 10088, 30, 51114, 51114, 400, 1920, 1009, 264, 1867, 337, 385, 307, 294, 341, 472, 10088, 13, 51314, 51314, 663, 311, 689, 286, 528, 281, 519, 466, 577, 341, 393, 312, 1143, 293, 437, 7705, 366, 7363, 337, 309, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.07238167323423235, "compression_ratio": 1.6527777777777777, "no_caption_prob": 9.460224828217179e-05}, {"id": 324, "seek": 184300, "start": 1843.0, "end": 1850.0, "text": " That's, for me, that is the most powerful technique for making Elm code more maintainable.", "tokens": [50364, 663, 311, 11, 337, 385, 11, 300, 307, 264, 881, 4005, 6532, 337, 1455, 2699, 76, 3089, 544, 6909, 712, 13, 50714, 50714, 13212, 411, 6243, 4368, 293, 721, 411, 300, 13, 50864, 50864, 286, 815, 352, 322, 257, 27747, 510, 11, 457, 437, 360, 291, 519, 466, 11, 411, 294, 2699, 76, 498, 291, 362, 364, 42687, 2010, 11, 291, 2644, 5102, 2995, 322, 309, 11, 293, 291, 2644, 1884, 309, 13, 51314, 51314, 708, 576, 291, 519, 498, 321, 632, 257, 2010, 689, 321, 2644, 1884, 309, 11, 457, 321, 393, 5102, 2995, 322, 309, 30, 51664, 51664, 14711, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11909860035158554, "compression_ratio": 1.7361702127659575, "no_caption_prob": 6.204794772202149e-05}, {"id": 325, "seek": 184300, "start": 1850.0, "end": 1853.0, "text": " Besides like impossible states and things like that.", "tokens": [50364, 663, 311, 11, 337, 385, 11, 300, 307, 264, 881, 4005, 6532, 337, 1455, 2699, 76, 3089, 544, 6909, 712, 13, 50714, 50714, 13212, 411, 6243, 4368, 293, 721, 411, 300, 13, 50864, 50864, 286, 815, 352, 322, 257, 27747, 510, 11, 457, 437, 360, 291, 519, 466, 11, 411, 294, 2699, 76, 498, 291, 362, 364, 42687, 2010, 11, 291, 2644, 5102, 2995, 322, 309, 11, 293, 291, 2644, 1884, 309, 13, 51314, 51314, 708, 576, 291, 519, 498, 321, 632, 257, 2010, 689, 321, 2644, 1884, 309, 11, 457, 321, 393, 5102, 2995, 322, 309, 30, 51664, 51664, 14711, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11909860035158554, "compression_ratio": 1.7361702127659575, "no_caption_prob": 6.204794772202149e-05}, {"id": 326, "seek": 184300, "start": 1853.0, "end": 1862.0, "text": " I may go on a tangent here, but what do you think about, like in Elm if you have an opaque type, you cannot pattern match on it, and you cannot create it.", "tokens": [50364, 663, 311, 11, 337, 385, 11, 300, 307, 264, 881, 4005, 6532, 337, 1455, 2699, 76, 3089, 544, 6909, 712, 13, 50714, 50714, 13212, 411, 6243, 4368, 293, 721, 411, 300, 13, 50864, 50864, 286, 815, 352, 322, 257, 27747, 510, 11, 457, 437, 360, 291, 519, 466, 11, 411, 294, 2699, 76, 498, 291, 362, 364, 42687, 2010, 11, 291, 2644, 5102, 2995, 322, 309, 11, 293, 291, 2644, 1884, 309, 13, 51314, 51314, 708, 576, 291, 519, 498, 321, 632, 257, 2010, 689, 321, 2644, 1884, 309, 11, 457, 321, 393, 5102, 2995, 322, 309, 30, 51664, 51664, 14711, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11909860035158554, "compression_ratio": 1.7361702127659575, "no_caption_prob": 6.204794772202149e-05}, {"id": 327, "seek": 184300, "start": 1862.0, "end": 1869.0, "text": " What would you think if we had a type where we cannot create it, but we can pattern match on it?", "tokens": [50364, 663, 311, 11, 337, 385, 11, 300, 307, 264, 881, 4005, 6532, 337, 1455, 2699, 76, 3089, 544, 6909, 712, 13, 50714, 50714, 13212, 411, 6243, 4368, 293, 721, 411, 300, 13, 50864, 50864, 286, 815, 352, 322, 257, 27747, 510, 11, 457, 437, 360, 291, 519, 466, 11, 411, 294, 2699, 76, 498, 291, 362, 364, 42687, 2010, 11, 291, 2644, 5102, 2995, 322, 309, 11, 293, 291, 2644, 1884, 309, 13, 51314, 51314, 708, 576, 291, 519, 498, 321, 632, 257, 2010, 689, 321, 2644, 1884, 309, 11, 457, 321, 393, 5102, 2995, 322, 309, 30, 51664, 51664, 14711, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11909860035158554, "compression_ratio": 1.7361702127659575, "no_caption_prob": 6.204794772202149e-05}, {"id": 328, "seek": 184300, "start": 1869.0, "end": 1871.0, "text": " Interesting.", "tokens": [50364, 663, 311, 11, 337, 385, 11, 300, 307, 264, 881, 4005, 6532, 337, 1455, 2699, 76, 3089, 544, 6909, 712, 13, 50714, 50714, 13212, 411, 6243, 4368, 293, 721, 411, 300, 13, 50864, 50864, 286, 815, 352, 322, 257, 27747, 510, 11, 457, 437, 360, 291, 519, 466, 11, 411, 294, 2699, 76, 498, 291, 362, 364, 42687, 2010, 11, 291, 2644, 5102, 2995, 322, 309, 11, 293, 291, 2644, 1884, 309, 13, 51314, 51314, 708, 576, 291, 519, 498, 321, 632, 257, 2010, 689, 321, 2644, 1884, 309, 11, 457, 321, 393, 5102, 2995, 322, 309, 30, 51664, 51664, 14711, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11909860035158554, "compression_ratio": 1.7361702127659575, "no_caption_prob": 6.204794772202149e-05}, {"id": 329, "seek": 187100, "start": 1871.0, "end": 1874.0, "text": " I'm not sure. I would have to think about that.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 330, "seek": 187100, "start": 1874.0, "end": 1877.0, "text": " Because I think it would be valuable in a few cases.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 331, "seek": 187100, "start": 1877.0, "end": 1880.0, "text": " Like we definitely encountered a few of those.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 332, "seek": 187100, "start": 1880.0, "end": 1887.0, "text": " But also like now, if you change one of the types, then that's a breaking change.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 333, "seek": 187100, "start": 1887.0, "end": 1892.0, "text": " If you had a new type, a new variance, or we name a variance.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 334, "seek": 187100, "start": 1892.0, "end": 1899.0, "text": " Right. And we already have the tools to effectively do the same thing just by having a different type for the internal representation.", "tokens": [50364, 286, 478, 406, 988, 13, 286, 576, 362, 281, 519, 466, 300, 13, 50514, 50514, 1436, 286, 519, 309, 576, 312, 8263, 294, 257, 1326, 3331, 13, 50664, 50664, 1743, 321, 2138, 20381, 257, 1326, 295, 729, 13, 50814, 50814, 583, 611, 411, 586, 11, 498, 291, 1319, 472, 295, 264, 3467, 11, 550, 300, 311, 257, 7697, 1319, 13, 51164, 51164, 759, 291, 632, 257, 777, 2010, 11, 257, 777, 21977, 11, 420, 321, 1315, 257, 21977, 13, 51414, 51414, 1779, 13, 400, 321, 1217, 362, 264, 3873, 281, 8659, 360, 264, 912, 551, 445, 538, 1419, 257, 819, 2010, 337, 264, 6920, 10290, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11670203642411665, "compression_ratio": 1.6575875486381324, "no_caption_prob": 5.562072328757495e-05}, {"id": 335, "seek": 189900, "start": 1899.0, "end": 1901.0, "text": " And the sort of presentation.", "tokens": [50364, 400, 264, 1333, 295, 5860, 13, 50464, 50464, 407, 321, 393, 6964, 1333, 295, 257, 1974, 1478, 2375, 2010, 300, 291, 19219, 439, 264, 21669, 370, 291, 393, 5102, 2995, 322, 309, 13, 50914, 50914, 400, 291, 393, 1884, 309, 498, 291, 528, 13, 467, 311, 445, 257, 1974, 1478, 2010, 13, 51064, 51064, 400, 550, 264, 3539, 551, 300, 25495, 887, 264, 33270, 1719, 466, 309, 293, 439, 295, 613, 665, 721, 321, 645, 1417, 466, 13, 51514, 51514, 509, 1065, 300, 2010, 13, 509, 393, 652, 7697, 2962, 281, 300, 6920, 2010, 570, 291, 1065, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0621588160690752, "compression_ratio": 1.815450643776824, "no_caption_prob": 0.00021314280456863344}, {"id": 336, "seek": 189900, "start": 1901.0, "end": 1910.0, "text": " So we can define sort of a presentational custom type that you expose all the variants so you can pattern match on it.", "tokens": [50364, 400, 264, 1333, 295, 5860, 13, 50464, 50464, 407, 321, 393, 6964, 1333, 295, 257, 1974, 1478, 2375, 2010, 300, 291, 19219, 439, 264, 21669, 370, 291, 393, 5102, 2995, 322, 309, 13, 50914, 50914, 400, 291, 393, 1884, 309, 498, 291, 528, 13, 467, 311, 445, 257, 1974, 1478, 2010, 13, 51064, 51064, 400, 550, 264, 3539, 551, 300, 25495, 887, 264, 33270, 1719, 466, 309, 293, 439, 295, 613, 665, 721, 321, 645, 1417, 466, 13, 51514, 51514, 509, 1065, 300, 2010, 13, 509, 393, 652, 7697, 2962, 281, 300, 6920, 2010, 570, 291, 1065, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0621588160690752, "compression_ratio": 1.815450643776824, "no_caption_prob": 0.00021314280456863344}, {"id": 337, "seek": 189900, "start": 1910.0, "end": 1913.0, "text": " And you can create it if you want. It's just a presentational type.", "tokens": [50364, 400, 264, 1333, 295, 5860, 13, 50464, 50464, 407, 321, 393, 6964, 1333, 295, 257, 1974, 1478, 2375, 2010, 300, 291, 19219, 439, 264, 21669, 370, 291, 393, 5102, 2995, 322, 309, 13, 50914, 50914, 400, 291, 393, 1884, 309, 498, 291, 528, 13, 467, 311, 445, 257, 1974, 1478, 2010, 13, 51064, 51064, 400, 550, 264, 3539, 551, 300, 25495, 887, 264, 33270, 1719, 466, 309, 293, 439, 295, 613, 665, 721, 321, 645, 1417, 466, 13, 51514, 51514, 509, 1065, 300, 2010, 13, 509, 393, 652, 7697, 2962, 281, 300, 6920, 2010, 570, 291, 1065, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0621588160690752, "compression_ratio": 1.815450643776824, "no_caption_prob": 0.00021314280456863344}, {"id": 338, "seek": 189900, "start": 1913.0, "end": 1922.0, "text": " And then the actual thing that enforces the invariants about it and all of these good things we were talking about.", "tokens": [50364, 400, 264, 1333, 295, 5860, 13, 50464, 50464, 407, 321, 393, 6964, 1333, 295, 257, 1974, 1478, 2375, 2010, 300, 291, 19219, 439, 264, 21669, 370, 291, 393, 5102, 2995, 322, 309, 13, 50914, 50914, 400, 291, 393, 1884, 309, 498, 291, 528, 13, 467, 311, 445, 257, 1974, 1478, 2010, 13, 51064, 51064, 400, 550, 264, 3539, 551, 300, 25495, 887, 264, 33270, 1719, 466, 309, 293, 439, 295, 613, 665, 721, 321, 645, 1417, 466, 13, 51514, 51514, 509, 1065, 300, 2010, 13, 509, 393, 652, 7697, 2962, 281, 300, 6920, 2010, 570, 291, 1065, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0621588160690752, "compression_ratio": 1.815450643776824, "no_caption_prob": 0.00021314280456863344}, {"id": 339, "seek": 189900, "start": 1922.0, "end": 1927.0, "text": " You own that type. You can make breaking changes to that internal type because you own it.", "tokens": [50364, 400, 264, 1333, 295, 5860, 13, 50464, 50464, 407, 321, 393, 6964, 1333, 295, 257, 1974, 1478, 2375, 2010, 300, 291, 19219, 439, 264, 21669, 370, 291, 393, 5102, 2995, 322, 309, 13, 50914, 50914, 400, 291, 393, 1884, 309, 498, 291, 528, 13, 467, 311, 445, 257, 1974, 1478, 2010, 13, 51064, 51064, 400, 550, 264, 3539, 551, 300, 25495, 887, 264, 33270, 1719, 466, 309, 293, 439, 295, 613, 665, 721, 321, 645, 1417, 466, 13, 51514, 51514, 509, 1065, 300, 2010, 13, 509, 393, 652, 7697, 2962, 281, 300, 6920, 2010, 570, 291, 1065, 309, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.0621588160690752, "compression_ratio": 1.815450643776824, "no_caption_prob": 0.00021314280456863344}, {"id": 340, "seek": 192700, "start": 1927.0, "end": 1938.0, "text": " Whether this is publishing a package or the consumers of this module are all the employees at an Elm shop is the same idea.", "tokens": [50364, 8503, 341, 307, 17832, 257, 7372, 420, 264, 11883, 295, 341, 10088, 366, 439, 264, 6619, 412, 364, 2699, 76, 3945, 307, 264, 912, 1558, 13, 50914, 50914, 509, 528, 281, 10257, 264, 11883, 490, 7697, 2962, 13, 663, 311, 257, 665, 3124, 13, 51214, 51214, 407, 286, 519, 321, 1333, 295, 362, 264, 3873, 337, 300, 13, 51314, 51314, 865, 13, 467, 17714, 665, 337, 257, 1326, 3949, 294, 452, 1378, 13, 51514, 51514, 467, 311, 364, 1880, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07838924632352941, "compression_ratio": 1.5545023696682465, "no_caption_prob": 9.761220280779526e-05}, {"id": 341, "seek": 192700, "start": 1938.0, "end": 1944.0, "text": " You want to shield the consumers from breaking changes. That's a good practice.", "tokens": [50364, 8503, 341, 307, 17832, 257, 7372, 420, 264, 11883, 295, 341, 10088, 366, 439, 264, 6619, 412, 364, 2699, 76, 3945, 307, 264, 912, 1558, 13, 50914, 50914, 509, 528, 281, 10257, 264, 11883, 490, 7697, 2962, 13, 663, 311, 257, 665, 3124, 13, 51214, 51214, 407, 286, 519, 321, 1333, 295, 362, 264, 3873, 337, 300, 13, 51314, 51314, 865, 13, 467, 17714, 665, 337, 257, 1326, 3949, 294, 452, 1378, 13, 51514, 51514, 467, 311, 364, 1880, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07838924632352941, "compression_ratio": 1.5545023696682465, "no_caption_prob": 9.761220280779526e-05}, {"id": 342, "seek": 192700, "start": 1944.0, "end": 1946.0, "text": " So I think we sort of have the tools for that.", "tokens": [50364, 8503, 341, 307, 17832, 257, 7372, 420, 264, 11883, 295, 341, 10088, 366, 439, 264, 6619, 412, 364, 2699, 76, 3945, 307, 264, 912, 1558, 13, 50914, 50914, 509, 528, 281, 10257, 264, 11883, 490, 7697, 2962, 13, 663, 311, 257, 665, 3124, 13, 51214, 51214, 407, 286, 519, 321, 1333, 295, 362, 264, 3873, 337, 300, 13, 51314, 51314, 865, 13, 467, 17714, 665, 337, 257, 1326, 3949, 294, 452, 1378, 13, 51514, 51514, 467, 311, 364, 1880, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07838924632352941, "compression_ratio": 1.5545023696682465, "no_caption_prob": 9.761220280779526e-05}, {"id": 343, "seek": 192700, "start": 1946.0, "end": 1950.0, "text": " Yeah. It sounded good for a few seconds in my head.", "tokens": [50364, 8503, 341, 307, 17832, 257, 7372, 420, 264, 11883, 295, 341, 10088, 366, 439, 264, 6619, 412, 364, 2699, 76, 3945, 307, 264, 912, 1558, 13, 50914, 50914, 509, 528, 281, 10257, 264, 11883, 490, 7697, 2962, 13, 663, 311, 257, 665, 3124, 13, 51214, 51214, 407, 286, 519, 321, 1333, 295, 362, 264, 3873, 337, 300, 13, 51314, 51314, 865, 13, 467, 17714, 665, 337, 257, 1326, 3949, 294, 452, 1378, 13, 51514, 51514, 467, 311, 364, 1880, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07838924632352941, "compression_ratio": 1.5545023696682465, "no_caption_prob": 9.761220280779526e-05}, {"id": 344, "seek": 192700, "start": 1950.0, "end": 1952.0, "text": " It's an interesting idea.", "tokens": [50364, 8503, 341, 307, 17832, 257, 7372, 420, 264, 11883, 295, 341, 10088, 366, 439, 264, 6619, 412, 364, 2699, 76, 3945, 307, 264, 912, 1558, 13, 50914, 50914, 509, 528, 281, 10257, 264, 11883, 490, 7697, 2962, 13, 663, 311, 257, 665, 3124, 13, 51214, 51214, 407, 286, 519, 321, 1333, 295, 362, 264, 3873, 337, 300, 13, 51314, 51314, 865, 13, 467, 17714, 665, 337, 257, 1326, 3949, 294, 452, 1378, 13, 51514, 51514, 467, 311, 364, 1880, 1558, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07838924632352941, "compression_ratio": 1.5545023696682465, "no_caption_prob": 9.761220280779526e-05}, {"id": 345, "seek": 195200, "start": 1952.0, "end": 1961.0, "text": " Something I've been thinking about lately is, you know, Richard Feldman has given some talks presenting Rock recently.", "tokens": [50364, 6595, 286, 600, 668, 1953, 466, 12881, 307, 11, 291, 458, 11, 9809, 42677, 1601, 575, 2212, 512, 6686, 15578, 6922, 3938, 13, 50814, 50814, 12151, 3163, 8568, 512, 295, 729, 6686, 484, 13, 467, 311, 588, 1880, 13, 51014, 51014, 400, 415, 575, 341, 3410, 294, 6922, 11, 341, 6075, 11745, 9410, 2856, 11, 597, 307, 294, 3250, 586, 11, 300, 291, 393, 362, 257, 11, 437, 307, 309, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15242332458496094, "compression_ratio": 1.5068493150684932, "no_caption_prob": 7.4836025305558e-05}, {"id": 346, "seek": 195200, "start": 1961.0, "end": 1965.0, "text": " Definitely worth checking some of those talks out. It's very interesting.", "tokens": [50364, 6595, 286, 600, 668, 1953, 466, 12881, 307, 11, 291, 458, 11, 9809, 42677, 1601, 575, 2212, 512, 6686, 15578, 6922, 3938, 13, 50814, 50814, 12151, 3163, 8568, 512, 295, 729, 6686, 484, 13, 467, 311, 588, 1880, 13, 51014, 51014, 400, 415, 575, 341, 3410, 294, 6922, 11, 341, 6075, 11745, 9410, 2856, 11, 597, 307, 294, 3250, 586, 11, 300, 291, 393, 362, 257, 11, 437, 307, 309, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15242332458496094, "compression_ratio": 1.5068493150684932, "no_caption_prob": 7.4836025305558e-05}, {"id": 347, "seek": 195200, "start": 1965.0, "end": 1977.0, "text": " And he has this concept in Rock, this pure functional programming language, which is in development now, that you can have a, what is it?", "tokens": [50364, 6595, 286, 600, 668, 1953, 466, 12881, 307, 11, 291, 458, 11, 9809, 42677, 1601, 575, 2212, 512, 6686, 15578, 6922, 3938, 13, 50814, 50814, 12151, 3163, 8568, 512, 295, 729, 6686, 484, 13, 467, 311, 588, 1880, 13, 51014, 51014, 400, 415, 575, 341, 3410, 294, 6922, 11, 341, 6075, 11745, 9410, 2856, 11, 597, 307, 294, 3250, 586, 11, 300, 291, 393, 362, 257, 11, 437, 307, 309, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.15242332458496094, "compression_ratio": 1.5068493150684932, "no_caption_prob": 7.4836025305558e-05}, {"id": 348, "seek": 197700, "start": 1977.0, "end": 1983.0, "text": " A tagged union that's an open tagged union or closed tagged union.", "tokens": [50364, 316, 40239, 11671, 300, 311, 364, 1269, 40239, 11671, 420, 5395, 40239, 11671, 13, 50664, 50664, 583, 291, 393, 362, 24932, 18632, 13, 407, 291, 393, 445, 764, 257, 6162, 293, 309, 393, 13596, 300, 309, 393, 13596, 18632, 295, 257, 11671, 293, 597, 18632, 393, 312, 1944, 2361, 322, 264, 1412, 300, 291, 2736, 420, 264, 1389, 6114, 300, 291, 360, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08915546047153758, "compression_ratio": 1.73125, "no_caption_prob": 0.00010553924221312627}, {"id": 349, "seek": 197700, "start": 1983.0, "end": 2000.0, "text": " But you can have anonymous tags. So you can just use a tag and it can infer that it can infer tags of a union and which tags can be possible based on the data that you return or the case expression that you do.", "tokens": [50364, 316, 40239, 11671, 300, 311, 364, 1269, 40239, 11671, 420, 5395, 40239, 11671, 13, 50664, 50664, 583, 291, 393, 362, 24932, 18632, 13, 407, 291, 393, 445, 764, 257, 6162, 293, 309, 393, 13596, 300, 309, 393, 13596, 18632, 295, 257, 11671, 293, 597, 18632, 393, 312, 1944, 2361, 322, 264, 1412, 300, 291, 2736, 420, 264, 1389, 6114, 300, 291, 360, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.08915546047153758, "compression_ratio": 1.73125, "no_caption_prob": 0.00010553924221312627}, {"id": 350, "seek": 200000, "start": 2000.0, "end": 2010.0, "text": " If you return a maybe, but you only return the just case, then it's going to notice only this is a tagged just.", "tokens": [50364, 759, 291, 2736, 257, 1310, 11, 457, 291, 787, 2736, 264, 445, 1389, 11, 550, 309, 311, 516, 281, 3449, 787, 341, 307, 257, 40239, 445, 13, 50864, 50864, 7587, 13, 400, 309, 1177, 380, 458, 466, 264, 1825, 17501, 570, 291, 994, 380, 764, 309, 13, 400, 300, 311, 1596, 1880, 13, 51164, 51164, 400, 286, 914, 11, 309, 311, 4476, 411, 294, 2699, 76, 11, 13038, 291, 1884, 257, 2375, 2010, 293, 257, 2375, 2010, 17501, 11, 436, 434, 41641, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1232674587732074, "compression_ratio": 1.6132075471698113, "no_caption_prob": 4.469148188945837e-05}, {"id": 351, "seek": 200000, "start": 2010.0, "end": 2016.0, "text": " Exactly. And it doesn't know about the nothing variant because you didn't use it. And that's quite interesting.", "tokens": [50364, 759, 291, 2736, 257, 1310, 11, 457, 291, 787, 2736, 264, 445, 1389, 11, 550, 309, 311, 516, 281, 3449, 787, 341, 307, 257, 40239, 445, 13, 50864, 50864, 7587, 13, 400, 309, 1177, 380, 458, 466, 264, 1825, 17501, 570, 291, 994, 380, 764, 309, 13, 400, 300, 311, 1596, 1880, 13, 51164, 51164, 400, 286, 914, 11, 309, 311, 4476, 411, 294, 2699, 76, 11, 13038, 291, 1884, 257, 2375, 2010, 293, 257, 2375, 2010, 17501, 11, 436, 434, 41641, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1232674587732074, "compression_ratio": 1.6132075471698113, "no_caption_prob": 4.469148188945837e-05}, {"id": 352, "seek": 200000, "start": 2016.0, "end": 2024.0, "text": " And I mean, it's essentially like in Elm, anytime you create a custom type and a custom type variant, they're nominal.", "tokens": [50364, 759, 291, 2736, 257, 1310, 11, 457, 291, 787, 2736, 264, 445, 1389, 11, 550, 309, 311, 516, 281, 3449, 787, 341, 307, 257, 40239, 445, 13, 50864, 50864, 7587, 13, 400, 309, 1177, 380, 458, 466, 264, 1825, 17501, 570, 291, 994, 380, 764, 309, 13, 400, 300, 311, 1596, 1880, 13, 51164, 51164, 400, 286, 914, 11, 309, 311, 4476, 411, 294, 2699, 76, 11, 13038, 291, 1884, 257, 2375, 2010, 293, 257, 2375, 2010, 17501, 11, 436, 434, 41641, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1232674587732074, "compression_ratio": 1.6132075471698113, "no_caption_prob": 4.469148188945837e-05}, {"id": 353, "seek": 202400, "start": 2024.0, "end": 2042.0, "text": " They're nominal types and values, meaning if it's not that exact thing, if you if you define a type money in one in a money module and you find a type money in main type money equals money in in your money module and in your main module.", "tokens": [50364, 814, 434, 41641, 3467, 293, 4190, 11, 3620, 498, 309, 311, 406, 300, 1900, 551, 11, 498, 291, 498, 291, 6964, 257, 2010, 1460, 294, 472, 294, 257, 1460, 10088, 293, 291, 915, 257, 2010, 1460, 294, 2135, 2010, 1460, 6915, 1460, 294, 294, 428, 1460, 10088, 293, 294, 428, 2135, 10088, 13, 51264, 51264, 3950, 366, 732, 819, 721, 13, 440, 2010, 2564, 293, 264, 47479, 11, 264, 17501, 1460, 366, 819, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09520434721922263, "compression_ratio": 1.8833333333333333, "no_caption_prob": 8.397876626986545e-06}, {"id": 354, "seek": 202400, "start": 2042.0, "end": 2049.0, "text": " Those are two different things. The type itself and the constructor, the variant money are different.", "tokens": [50364, 814, 434, 41641, 3467, 293, 4190, 11, 3620, 498, 309, 311, 406, 300, 1900, 551, 11, 498, 291, 498, 291, 6964, 257, 2010, 1460, 294, 472, 294, 257, 1460, 10088, 293, 291, 915, 257, 2010, 1460, 294, 2135, 2010, 1460, 6915, 1460, 294, 294, 428, 1460, 10088, 293, 294, 428, 2135, 10088, 13, 51264, 51264, 3950, 366, 732, 819, 721, 13, 440, 2010, 2564, 293, 264, 47479, 11, 264, 17501, 1460, 366, 819, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09520434721922263, "compression_ratio": 1.8833333333333333, "no_caption_prob": 8.397876626986545e-06}, {"id": 355, "seek": 204900, "start": 2049.0, "end": 2070.0, "text": " They create values of different types and they're not interchangeable. But Rock has this concept of a sort of, you know, structurally typed union tag essentially, which is, you know, so it's if you refer to a thing with the same name, then I can.", "tokens": [50364, 814, 1884, 4190, 295, 819, 3467, 293, 436, 434, 406, 30358, 712, 13, 583, 6922, 575, 341, 3410, 295, 257, 1333, 295, 11, 291, 458, 11, 6594, 6512, 33941, 11671, 6162, 4476, 11, 597, 307, 11, 291, 458, 11, 370, 309, 311, 498, 291, 2864, 281, 257, 551, 365, 264, 912, 1315, 11, 550, 286, 393, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09623052253097784, "compression_ratio": 1.455621301775148, "no_caption_prob": 1.5689101928728633e-05}, {"id": 356, "seek": 207000, "start": 2070.0, "end": 2080.0, "text": " If all the types line up, then I can treat them as the same thing. And you can sort of without defining a type, you can use those union tags.", "tokens": [50364, 759, 439, 264, 3467, 1622, 493, 11, 550, 286, 393, 2387, 552, 382, 264, 912, 551, 13, 400, 291, 393, 1333, 295, 1553, 17827, 257, 2010, 11, 291, 393, 764, 729, 11671, 18632, 13, 50864, 50864, 400, 309, 311, 309, 311, 588, 1880, 13, 407, 286, 360, 2441, 11, 411, 11, 775, 300, 976, 505, 264, 3995, 281, 281, 362, 257, 544, 22052, 636, 281, 6964, 3467, 294, 512, 14519, 30, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.0472545846303304, "compression_ratio": 1.5578947368421052, "no_caption_prob": 7.766837370581925e-06}, {"id": 357, "seek": 207000, "start": 2080.0, "end": 2090.0, "text": " And it's it's very interesting. So I do wonder, like, does that give us the potential to to have a more lightweight way to define types in some instances?", "tokens": [50364, 759, 439, 264, 3467, 1622, 493, 11, 550, 286, 393, 2387, 552, 382, 264, 912, 551, 13, 400, 291, 393, 1333, 295, 1553, 17827, 257, 2010, 11, 291, 393, 764, 729, 11671, 18632, 13, 50864, 50864, 400, 309, 311, 309, 311, 588, 1880, 13, 407, 286, 360, 2441, 11, 411, 11, 775, 300, 976, 505, 264, 3995, 281, 281, 362, 257, 544, 22052, 636, 281, 6964, 3467, 294, 512, 14519, 30, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.0472545846303304, "compression_ratio": 1.5578947368421052, "no_caption_prob": 7.766837370581925e-06}, {"id": 358, "seek": 209000, "start": 2090.0, "end": 2105.0, "text": " Because sometimes I do think like I don't reach for a custom type and I sort of avoid it and I try to use like a maybe or a tuple or something like that when I'm just like, come on, like it's not that big a deal to just say type.", "tokens": [50364, 1436, 2171, 286, 360, 519, 411, 286, 500, 380, 2524, 337, 257, 2375, 2010, 293, 286, 1333, 295, 5042, 309, 293, 286, 853, 281, 764, 411, 257, 1310, 420, 257, 2604, 781, 420, 746, 411, 300, 562, 286, 478, 445, 411, 11, 808, 322, 11, 411, 309, 311, 406, 300, 955, 257, 2028, 281, 445, 584, 2010, 13, 51114, 51114, 509, 458, 11, 411, 286, 390, 445, 884, 746, 264, 661, 786, 689, 456, 645, 411, 732, 819, 721, 300, 257, 551, 727, 2736, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06971344251311228, "compression_ratio": 1.6745283018867925, "no_caption_prob": 2.282725108671002e-05}, {"id": 359, "seek": 209000, "start": 2105.0, "end": 2113.0, "text": " You know, like I was just doing something the other day where there were like two different things that a thing could return.", "tokens": [50364, 1436, 2171, 286, 360, 519, 411, 286, 500, 380, 2524, 337, 257, 2375, 2010, 293, 286, 1333, 295, 5042, 309, 293, 286, 853, 281, 764, 411, 257, 1310, 420, 257, 2604, 781, 420, 746, 411, 300, 562, 286, 478, 445, 411, 11, 808, 322, 11, 411, 309, 311, 406, 300, 955, 257, 2028, 281, 445, 584, 2010, 13, 51114, 51114, 509, 458, 11, 411, 286, 390, 445, 884, 746, 264, 661, 786, 689, 456, 645, 411, 732, 819, 721, 300, 257, 551, 727, 2736, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.06971344251311228, "compression_ratio": 1.6745283018867925, "no_caption_prob": 2.282725108671002e-05}, {"id": 360, "seek": 211300, "start": 2113.0, "end": 2125.0, "text": " And I was like trying really hard to avoid doing that. And I'm just like, you know what, it's not that big a deal. Like I just define a custom type thing one and thing two and it can be those things.", "tokens": [50364, 400, 286, 390, 411, 1382, 534, 1152, 281, 5042, 884, 300, 13, 400, 286, 478, 445, 411, 11, 291, 458, 437, 11, 309, 311, 406, 300, 955, 257, 2028, 13, 1743, 286, 445, 6964, 257, 2375, 2010, 551, 472, 293, 551, 732, 293, 309, 393, 312, 729, 721, 13, 50964, 50964, 400, 411, 300, 2067, 380, 370, 1152, 11, 390, 309, 30, 509, 458, 30, 865, 13, 682, 264, 4111, 291, 7619, 490, 264, 6922, 1461, 2856, 11, 286, 841, 411, 294, 512, 3331, 300, 393, 1477, 281, 777, 2740, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10486456218518708, "compression_ratio": 1.606060606060606, "no_caption_prob": 8.800798241281882e-06}, {"id": 361, "seek": 211300, "start": 2125.0, "end": 2137.0, "text": " And like that wasn't so hard, was it? You know? Yeah. In the feature you described from the Rock program language, I feel like in some cases that can lead to new problems.", "tokens": [50364, 400, 286, 390, 411, 1382, 534, 1152, 281, 5042, 884, 300, 13, 400, 286, 478, 445, 411, 11, 291, 458, 437, 11, 309, 311, 406, 300, 955, 257, 2028, 13, 1743, 286, 445, 6964, 257, 2375, 2010, 551, 472, 293, 551, 732, 293, 309, 393, 312, 729, 721, 13, 50964, 50964, 400, 411, 300, 2067, 380, 370, 1152, 11, 390, 309, 30, 509, 458, 30, 865, 13, 682, 264, 4111, 291, 7619, 490, 264, 6922, 1461, 2856, 11, 286, 841, 411, 294, 512, 3331, 300, 393, 1477, 281, 777, 2740, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10486456218518708, "compression_ratio": 1.606060606060606, "no_caption_prob": 8.800798241281882e-06}, {"id": 362, "seek": 213700, "start": 2137.0, "end": 2151.0, "text": " Like, for instance, if you have an ID type, an ID string which represents like a non primitive string ID, then the ID from one module, you don't want to mix it with the idea of another module.", "tokens": [50364, 1743, 11, 337, 5197, 11, 498, 291, 362, 364, 7348, 2010, 11, 364, 7348, 6798, 597, 8855, 411, 257, 2107, 28540, 6798, 7348, 11, 550, 264, 7348, 490, 472, 10088, 11, 291, 500, 380, 528, 281, 2890, 309, 365, 264, 1558, 295, 1071, 10088, 13, 51064, 51064, 7021, 13, 583, 767, 6922, 575, 257, 2685, 28431, 337, 884, 42687, 3467, 13, 51364, 51364, 1033, 11, 2176, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.093139433524978, "compression_ratio": 1.4365482233502538, "no_caption_prob": 1.8342016119277105e-05}, {"id": 363, "seek": 213700, "start": 2151.0, "end": 2157.0, "text": " Absolutely. But actually Rock has a specific syntax for doing opaque types.", "tokens": [50364, 1743, 11, 337, 5197, 11, 498, 291, 362, 364, 7348, 2010, 11, 364, 7348, 6798, 597, 8855, 411, 257, 2107, 28540, 6798, 7348, 11, 550, 264, 7348, 490, 472, 10088, 11, 291, 500, 380, 528, 281, 2890, 309, 365, 264, 1558, 295, 1071, 10088, 13, 51064, 51064, 7021, 13, 583, 767, 6922, 575, 257, 2685, 28431, 337, 884, 42687, 3467, 13, 51364, 51364, 1033, 11, 2176, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.093139433524978, "compression_ratio": 1.4365482233502538, "no_caption_prob": 1.8342016119277105e-05}, {"id": 364, "seek": 213700, "start": 2157.0, "end": 2158.0, "text": " Okay, perfect.", "tokens": [50364, 1743, 11, 337, 5197, 11, 498, 291, 362, 364, 7348, 2010, 11, 364, 7348, 6798, 597, 8855, 411, 257, 2107, 28540, 6798, 7348, 11, 550, 264, 7348, 490, 472, 10088, 11, 291, 500, 380, 528, 281, 2890, 309, 365, 264, 1558, 295, 1071, 10088, 13, 51064, 51064, 7021, 13, 583, 767, 6922, 575, 257, 2685, 28431, 337, 884, 42687, 3467, 13, 51364, 51364, 1033, 11, 2176, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.093139433524978, "compression_ratio": 1.4365482233502538, "no_caption_prob": 1.8342016119277105e-05}, {"id": 365, "seek": 215800, "start": 2158.0, "end": 2175.0, "text": " I think it's like an at symbol in front of the tag and that allows you to constrain in that way. But yeah, it's quite interesting. Now, there is one thing I think we should maybe talk about some of the trade offs for primitive obsession and when might it not be the right approach.", "tokens": [50364, 286, 519, 309, 311, 411, 364, 412, 5986, 294, 1868, 295, 264, 6162, 293, 300, 4045, 291, 281, 1817, 7146, 294, 300, 636, 13, 583, 1338, 11, 309, 311, 1596, 1880, 13, 823, 11, 456, 307, 472, 551, 286, 519, 321, 820, 1310, 751, 466, 512, 295, 264, 4923, 39457, 337, 28540, 30521, 293, 562, 1062, 309, 406, 312, 264, 558, 3109, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.0797205255992377, "compression_ratio": 1.4867724867724867, "no_caption_prob": 8.348939445568249e-05}, {"id": 366, "seek": 217500, "start": 2175.0, "end": 2190.0, "text": " So like one of the things I think about is the standard libraries in Elm. So there are all these operations that are defined for type. And if the semantics match that, then it's quite nice. For example, you know, I mean, lists are quite nice.", "tokens": [50364, 407, 411, 472, 295, 264, 721, 286, 519, 466, 307, 264, 3832, 15148, 294, 2699, 76, 13, 407, 456, 366, 439, 613, 7705, 300, 366, 7642, 337, 2010, 13, 400, 498, 264, 4361, 45298, 2995, 300, 11, 550, 309, 311, 1596, 1481, 13, 1171, 1365, 11, 291, 458, 11, 286, 914, 11, 14511, 366, 1596, 1481, 13, 51114, 51114], "temperature": 0.0, "avg_logprob": -0.061959051695026336, "compression_ratio": 1.4666666666666666, "no_caption_prob": 4.98556146339979e-05}, {"id": 367, "seek": 219000, "start": 2190.0, "end": 2206.0, "text": " There are useful things you can do with lists and results are quite nice. You can do meaningful things with results and with maybe should you have, you know, you can you can abuse maybe and use it to mean different semantics.", "tokens": [50364, 821, 366, 4420, 721, 291, 393, 360, 365, 14511, 293, 3542, 366, 1596, 1481, 13, 509, 393, 360, 10995, 721, 365, 3542, 293, 365, 1310, 820, 291, 362, 11, 291, 458, 11, 291, 393, 291, 393, 9852, 1310, 293, 764, 309, 281, 914, 819, 4361, 45298, 13, 51164, 51164, 400, 300, 393, 312, 19011, 11, 457, 2171, 309, 393, 312, 1392, 13, 407, 456, 366, 4923, 39457, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09838232066896227, "compression_ratio": 1.6524064171122994, "no_caption_prob": 3.8227237382670864e-05}, {"id": 368, "seek": 219000, "start": 2206.0, "end": 2212.0, "text": " And that can be problematic, but sometimes it can be okay. So there are trade offs.", "tokens": [50364, 821, 366, 4420, 721, 291, 393, 360, 365, 14511, 293, 3542, 366, 1596, 1481, 13, 509, 393, 360, 10995, 721, 365, 3542, 293, 365, 1310, 820, 291, 362, 11, 291, 458, 11, 291, 393, 291, 393, 9852, 1310, 293, 764, 309, 281, 914, 819, 4361, 45298, 13, 51164, 51164, 400, 300, 393, 312, 19011, 11, 457, 2171, 309, 393, 312, 1392, 13, 407, 456, 366, 4923, 39457, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.09838232066896227, "compression_ratio": 1.6524064171122994, "no_caption_prob": 3.8227237382670864e-05}, {"id": 369, "seek": 221200, "start": 2212.0, "end": 2221.0, "text": " You do get a lot of things for free with maybe right, you don't have to rewrite things to shortcut the nothing case.", "tokens": [50364, 509, 360, 483, 257, 688, 295, 721, 337, 1737, 365, 1310, 558, 11, 291, 500, 380, 362, 281, 28132, 721, 281, 24822, 264, 1825, 1389, 13, 50814, 50814, 7587, 11, 2293, 13, 509, 600, 658, 1310, 300, 365, 7576, 11, 291, 600, 658, 1874, 300, 490, 1310, 439, 613, 439, 613, 1481, 854, 433, 13, 51364, 51364, 407, 11, 1338, 11, 286, 914, 11, 2138, 312, 3650, 295, 729, 4923, 39457, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1164161907999139, "compression_ratio": 1.6054054054054054, "no_caption_prob": 1.8924629330285825e-05}, {"id": 370, "seek": 221200, "start": 2221.0, "end": 2232.0, "text": " Exactly, exactly. You've got maybe that with default, you've got result that from maybe all these all these nice helpers.", "tokens": [50364, 509, 360, 483, 257, 688, 295, 721, 337, 1737, 365, 1310, 558, 11, 291, 500, 380, 362, 281, 28132, 721, 281, 24822, 264, 1825, 1389, 13, 50814, 50814, 7587, 11, 2293, 13, 509, 600, 658, 1310, 300, 365, 7576, 11, 291, 600, 658, 1874, 300, 490, 1310, 439, 613, 439, 613, 1481, 854, 433, 13, 51364, 51364, 407, 11, 1338, 11, 286, 914, 11, 2138, 312, 3650, 295, 729, 4923, 39457, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1164161907999139, "compression_ratio": 1.6054054054054054, "no_caption_prob": 1.8924629330285825e-05}, {"id": 371, "seek": 221200, "start": 2232.0, "end": 2236.0, "text": " So, yeah, I mean, definitely be aware of those trade offs.", "tokens": [50364, 509, 360, 483, 257, 688, 295, 721, 337, 1737, 365, 1310, 558, 11, 291, 500, 380, 362, 281, 28132, 721, 281, 24822, 264, 1825, 1389, 13, 50814, 50814, 7587, 11, 2293, 13, 509, 600, 658, 1310, 300, 365, 7576, 11, 291, 600, 658, 1874, 300, 490, 1310, 439, 613, 439, 613, 1481, 854, 433, 13, 51364, 51364, 407, 11, 1338, 11, 286, 914, 11, 2138, 312, 3650, 295, 729, 4923, 39457, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.1164161907999139, "compression_ratio": 1.6054054054054054, "no_caption_prob": 1.8924629330285825e-05}, {"id": 372, "seek": 223600, "start": 2236.0, "end": 2245.0, "text": " I mean, that said, under the hoods, your type can still be a maybe something. So you can have maybe.", "tokens": [50364, 286, 914, 11, 300, 848, 11, 833, 264, 13376, 82, 11, 428, 2010, 393, 920, 312, 257, 1310, 746, 13, 407, 291, 393, 362, 1310, 13, 50814, 50814, 407, 291, 393, 362, 257, 1460, 19273, 1310, 746, 293, 550, 764, 1310, 4471, 833, 264, 13376, 13, 51164, 51164, 1779, 13, 583, 291, 445, 643, 281, 909, 21993, 293, 14853, 424, 3759, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.16527051636666962, "compression_ratio": 1.703448275862069, "no_caption_prob": 5.225064523983747e-05}, {"id": 373, "seek": 223600, "start": 2245.0, "end": 2252.0, "text": " So you can have a money containing maybe something and then use maybe map under the hood.", "tokens": [50364, 286, 914, 11, 300, 848, 11, 833, 264, 13376, 82, 11, 428, 2010, 393, 920, 312, 257, 1310, 746, 13, 407, 291, 393, 362, 1310, 13, 50814, 50814, 407, 291, 393, 362, 257, 1460, 19273, 1310, 746, 293, 550, 764, 1310, 4471, 833, 264, 13376, 13, 51164, 51164, 1779, 13, 583, 291, 445, 643, 281, 909, 21993, 293, 14853, 424, 3759, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.16527051636666962, "compression_ratio": 1.703448275862069, "no_caption_prob": 5.225064523983747e-05}, {"id": 374, "seek": 223600, "start": 2252.0, "end": 2256.0, "text": " Right. But you just need to add wrapping and unwrapping.", "tokens": [50364, 286, 914, 11, 300, 848, 11, 833, 264, 13376, 82, 11, 428, 2010, 393, 920, 312, 257, 1310, 746, 13, 407, 291, 393, 362, 1310, 13, 50814, 50814, 407, 291, 393, 362, 257, 1460, 19273, 1310, 746, 293, 550, 764, 1310, 4471, 833, 264, 13376, 13, 51164, 51164, 1779, 13, 583, 291, 445, 643, 281, 909, 21993, 293, 14853, 424, 3759, 13, 51364, 51364], "temperature": 0.0, "avg_logprob": -0.16527051636666962, "compression_ratio": 1.703448275862069, "no_caption_prob": 5.225064523983747e-05}, {"id": 375, "seek": 225600, "start": 2256.0, "end": 2267.0, "text": " Right. Right. And you need to you need to then sometimes you have to sort of redefine those standard library operations or provide a way to get something as a maybe or that sort of thing.", "tokens": [50364, 1779, 13, 1779, 13, 400, 291, 643, 281, 291, 643, 281, 550, 2171, 291, 362, 281, 1333, 295, 38818, 533, 729, 3832, 6405, 7705, 420, 2893, 257, 636, 281, 483, 746, 382, 257, 1310, 420, 300, 1333, 295, 551, 13, 50914, 50914, 407, 729, 366, 512, 4923, 39457, 281, 312, 3650, 295, 13, 51114, 51114, 286, 362, 257, 27432, 294, 1575, 11, 597, 307, 25323, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.0652390548161098, "compression_ratio": 1.5754189944134078, "no_caption_prob": 2.668819433893077e-05}, {"id": 376, "seek": 225600, "start": 2267.0, "end": 2271.0, "text": " So those are some trade offs to be aware of.", "tokens": [50364, 1779, 13, 1779, 13, 400, 291, 643, 281, 291, 643, 281, 550, 2171, 291, 362, 281, 1333, 295, 38818, 533, 729, 3832, 6405, 7705, 420, 2893, 257, 636, 281, 483, 746, 382, 257, 1310, 420, 300, 1333, 295, 551, 13, 50914, 50914, 407, 729, 366, 512, 4923, 39457, 281, 312, 3650, 295, 13, 51114, 51114, 286, 362, 257, 27432, 294, 1575, 11, 597, 307, 25323, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.0652390548161098, "compression_ratio": 1.5754189944134078, "no_caption_prob": 2.668819433893077e-05}, {"id": 377, "seek": 225600, "start": 2271.0, "end": 2275.0, "text": " I have a limitation in mind, which is comparable.", "tokens": [50364, 1779, 13, 1779, 13, 400, 291, 643, 281, 291, 643, 281, 550, 2171, 291, 362, 281, 1333, 295, 38818, 533, 729, 3832, 6405, 7705, 420, 2893, 257, 636, 281, 483, 746, 382, 257, 1310, 420, 300, 1333, 295, 551, 13, 50914, 50914, 407, 729, 366, 512, 4923, 39457, 281, 312, 3650, 295, 13, 51114, 51114, 286, 362, 257, 27432, 294, 1575, 11, 597, 307, 25323, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.0652390548161098, "compression_ratio": 1.5754189944134078, "no_caption_prob": 2.668819433893077e-05}, {"id": 378, "seek": 227500, "start": 2275.0, "end": 2288.0, "text": " So, for instance, dictionaries and sets, they only can contain comparable keys or keys, slash values for sets and custom types are not comparable.", "tokens": [50364, 407, 11, 337, 5197, 11, 22352, 4889, 293, 6352, 11, 436, 787, 393, 5304, 25323, 9317, 420, 9317, 11, 17330, 4190, 337, 6352, 293, 2375, 3467, 366, 406, 25323, 13, 51014, 51014, 407, 437, 360, 291, 360, 550, 11, 28160, 30, 51164, 51164, 12267, 30, 51214, 51214, 663, 311, 3143, 13, 2381, 291, 600, 16266, 337, 411, 732, 2077, 293, 7634, 3949, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16928800896032534, "compression_ratio": 1.4261363636363635, "no_caption_prob": 2.9771559638902545e-05}, {"id": 379, "seek": 227500, "start": 2288.0, "end": 2291.0, "text": " So what do you do then, Dillon?", "tokens": [50364, 407, 11, 337, 5197, 11, 22352, 4889, 293, 6352, 11, 436, 787, 393, 5304, 25323, 9317, 420, 9317, 11, 17330, 4190, 337, 6352, 293, 2375, 3467, 366, 406, 25323, 13, 51014, 51014, 407, 437, 360, 291, 360, 550, 11, 28160, 30, 51164, 51164, 12267, 30, 51214, 51214, 663, 311, 3143, 13, 2381, 291, 600, 16266, 337, 411, 732, 2077, 293, 7634, 3949, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16928800896032534, "compression_ratio": 1.4261363636363635, "no_caption_prob": 2.9771559638902545e-05}, {"id": 380, "seek": 227500, "start": 2291.0, "end": 2292.0, "text": " Cry?", "tokens": [50364, 407, 11, 337, 5197, 11, 22352, 4889, 293, 6352, 11, 436, 787, 393, 5304, 25323, 9317, 420, 9317, 11, 17330, 4190, 337, 6352, 293, 2375, 3467, 366, 406, 25323, 13, 51014, 51014, 407, 437, 360, 291, 360, 550, 11, 28160, 30, 51164, 51164, 12267, 30, 51214, 51214, 663, 311, 3143, 13, 2381, 291, 600, 16266, 337, 411, 732, 2077, 293, 7634, 3949, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16928800896032534, "compression_ratio": 1.4261363636363635, "no_caption_prob": 2.9771559638902545e-05}, {"id": 381, "seek": 227500, "start": 2292.0, "end": 2303.0, "text": " That's fair. After you've cried for like two minutes and 27 seconds.", "tokens": [50364, 407, 11, 337, 5197, 11, 22352, 4889, 293, 6352, 11, 436, 787, 393, 5304, 25323, 9317, 420, 9317, 11, 17330, 4190, 337, 6352, 293, 2375, 3467, 366, 406, 25323, 13, 51014, 51014, 407, 437, 360, 291, 360, 550, 11, 28160, 30, 51164, 51164, 12267, 30, 51214, 51214, 663, 311, 3143, 13, 2381, 291, 600, 16266, 337, 411, 732, 2077, 293, 7634, 3949, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.16928800896032534, "compression_ratio": 1.4261363636363635, "no_caption_prob": 2.9771559638902545e-05}, {"id": 382, "seek": 230300, "start": 2303.0, "end": 2307.0, "text": " What do you do? Sounds like you've cried for that exact amount of time before.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 383, "seek": 230300, "start": 2307.0, "end": 2314.0, "text": " It's very specific. No, I'm a man. I only cry for two minutes and 12 seconds.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 384, "seek": 230300, "start": 2314.0, "end": 2318.0, "text": " It's very brave of you. I know, right? It's a tough question.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 385, "seek": 230300, "start": 2318.0, "end": 2321.0, "text": " I mean, it would it would be quite nice if it was comparable.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 386, "seek": 230300, "start": 2321.0, "end": 2327.0, "text": " I mean, obviously there are packages to help use non comparable keys.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 387, "seek": 230300, "start": 2327.0, "end": 2331.0, "text": " And if you wanted to, you could wrap a dictionary of that type.", "tokens": [50364, 708, 360, 291, 360, 30, 14576, 411, 291, 600, 16266, 337, 300, 1900, 2372, 295, 565, 949, 13, 50564, 50564, 467, 311, 588, 2685, 13, 883, 11, 286, 478, 257, 587, 13, 286, 787, 3305, 337, 732, 2077, 293, 2272, 3949, 13, 50914, 50914, 467, 311, 588, 12653, 295, 291, 13, 286, 458, 11, 558, 30, 467, 311, 257, 4930, 1168, 13, 51114, 51114, 286, 914, 11, 309, 576, 309, 576, 312, 1596, 1481, 498, 309, 390, 25323, 13, 51264, 51264, 286, 914, 11, 2745, 456, 366, 17401, 281, 854, 764, 2107, 25323, 9317, 13, 51564, 51564, 400, 498, 291, 1415, 281, 11, 291, 727, 7019, 257, 25890, 295, 300, 2010, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.08180362602760052, "compression_ratio": 1.5862068965517242, "no_caption_prob": 2.078463148791343e-05}, {"id": 388, "seek": 233100, "start": 2331.0, "end": 2343.0, "text": " Right. So you could you could sort of wrap constructors and say, OK, I'm passing in this thing that's a custom type, but I'm going to create like the a wrapper around dict dot insert.", "tokens": [50364, 1779, 13, 407, 291, 727, 291, 727, 1333, 295, 7019, 7690, 830, 293, 584, 11, 2264, 11, 286, 478, 8437, 294, 341, 551, 300, 311, 257, 2375, 2010, 11, 457, 286, 478, 516, 281, 1884, 411, 264, 257, 46906, 926, 12569, 5893, 8969, 13, 50964, 50964, 663, 311, 767, 516, 281, 747, 300, 2375, 2010, 293, 2677, 2885, 264, 3755, 300, 286, 393, 764, 281, 312, 25323, 293, 1261, 309, 666, 300, 13, 51414, 51414, 407, 300, 311, 472, 7959, 13, 286, 500, 380, 458, 498, 456, 311, 364, 1858, 1867, 456, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09543143596845804, "compression_ratio": 1.673913043478261, "no_caption_prob": 4.069289570907131e-05}, {"id": 389, "seek": 233100, "start": 2343.0, "end": 2352.0, "text": " That's actually going to take that custom type and destructure the pieces that I can use to be comparable and turn it into that.", "tokens": [50364, 1779, 13, 407, 291, 727, 291, 727, 1333, 295, 7019, 7690, 830, 293, 584, 11, 2264, 11, 286, 478, 8437, 294, 341, 551, 300, 311, 257, 2375, 2010, 11, 457, 286, 478, 516, 281, 1884, 411, 264, 257, 46906, 926, 12569, 5893, 8969, 13, 50964, 50964, 663, 311, 767, 516, 281, 747, 300, 2375, 2010, 293, 2677, 2885, 264, 3755, 300, 286, 393, 764, 281, 312, 25323, 293, 1261, 309, 666, 300, 13, 51414, 51414, 407, 300, 311, 472, 7959, 13, 286, 500, 380, 458, 498, 456, 311, 364, 1858, 1867, 456, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09543143596845804, "compression_ratio": 1.673913043478261, "no_caption_prob": 4.069289570907131e-05}, {"id": 390, "seek": 233100, "start": 2352.0, "end": 2356.0, "text": " So that's one possibility. I don't know if there's an easy answer there.", "tokens": [50364, 1779, 13, 407, 291, 727, 291, 727, 1333, 295, 7019, 7690, 830, 293, 584, 11, 2264, 11, 286, 478, 8437, 294, 341, 551, 300, 311, 257, 2375, 2010, 11, 457, 286, 478, 516, 281, 1884, 411, 264, 257, 46906, 926, 12569, 5893, 8969, 13, 50964, 50964, 663, 311, 767, 516, 281, 747, 300, 2375, 2010, 293, 2677, 2885, 264, 3755, 300, 286, 393, 764, 281, 312, 25323, 293, 1261, 309, 666, 300, 13, 51414, 51414, 407, 300, 311, 472, 7959, 13, 286, 500, 380, 458, 498, 456, 311, 364, 1858, 1867, 456, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.09543143596845804, "compression_ratio": 1.673913043478261, "no_caption_prob": 4.069289570907131e-05}, {"id": 391, "seek": 235600, "start": 2356.0, "end": 2371.0, "text": " Because it's tough making this trade off of when do you wrap something and sort of expose these operations that exist for other low level data structures versus when do you just go for the low level data structure and just have string keys and a dict and say, you know what?", "tokens": [50364, 1436, 309, 311, 4930, 1455, 341, 4923, 766, 295, 562, 360, 291, 7019, 746, 293, 1333, 295, 19219, 613, 7705, 300, 2514, 337, 661, 2295, 1496, 1412, 9227, 5717, 562, 360, 291, 445, 352, 337, 264, 2295, 1496, 1412, 3877, 293, 445, 362, 6798, 9317, 293, 257, 12569, 293, 584, 11, 291, 458, 437, 30, 51114, 51114, 286, 478, 445, 516, 281, 312, 988, 300, 286, 787, 8969, 264, 6798, 9317, 1228, 341, 281, 6798, 2445, 337, 341, 2375, 2010, 13, 51514, 51514, 583, 291, 500, 380, 3361, 1803, 13, 509, 787, 3361, 257, 31958, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09909019470214844, "compression_ratio": 1.7619047619047619, "no_caption_prob": 4.069321948918514e-05}, {"id": 392, "seek": 235600, "start": 2371.0, "end": 2379.0, "text": " I'm just going to be sure that I only insert the string keys using this to string function for this custom type.", "tokens": [50364, 1436, 309, 311, 4930, 1455, 341, 4923, 766, 295, 562, 360, 291, 7019, 746, 293, 1333, 295, 19219, 613, 7705, 300, 2514, 337, 661, 2295, 1496, 1412, 9227, 5717, 562, 360, 291, 445, 352, 337, 264, 2295, 1496, 1412, 3877, 293, 445, 362, 6798, 9317, 293, 257, 12569, 293, 584, 11, 291, 458, 437, 30, 51114, 51114, 286, 478, 445, 516, 281, 312, 988, 300, 286, 787, 8969, 264, 6798, 9317, 1228, 341, 281, 6798, 2445, 337, 341, 2375, 2010, 13, 51514, 51514, 583, 291, 500, 380, 3361, 1803, 13, 509, 787, 3361, 257, 31958, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09909019470214844, "compression_ratio": 1.7619047619047619, "no_caption_prob": 4.069321948918514e-05}, {"id": 393, "seek": 235600, "start": 2379.0, "end": 2382.0, "text": " But you don't trust yourself. You only trust a compiler.", "tokens": [50364, 1436, 309, 311, 4930, 1455, 341, 4923, 766, 295, 562, 360, 291, 7019, 746, 293, 1333, 295, 19219, 613, 7705, 300, 2514, 337, 661, 2295, 1496, 1412, 9227, 5717, 562, 360, 291, 445, 352, 337, 264, 2295, 1496, 1412, 3877, 293, 445, 362, 6798, 9317, 293, 257, 12569, 293, 584, 11, 291, 458, 437, 30, 51114, 51114, 286, 478, 445, 516, 281, 312, 988, 300, 286, 787, 8969, 264, 6798, 9317, 1228, 341, 281, 6798, 2445, 337, 341, 2375, 2010, 13, 51514, 51514, 583, 291, 500, 380, 3361, 1803, 13, 509, 787, 3361, 257, 31958, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09909019470214844, "compression_ratio": 1.7619047619047619, "no_caption_prob": 4.069321948918514e-05}, {"id": 394, "seek": 238200, "start": 2382.0, "end": 2387.0, "text": " I think I think for good reason. Yeah, you're right. I don't trust myself.", "tokens": [50364, 286, 519, 286, 519, 337, 665, 1778, 13, 865, 11, 291, 434, 558, 13, 286, 500, 380, 3361, 2059, 13, 50614, 50614, 1436, 291, 434, 257, 1578, 10754, 13, 865, 11, 286, 519, 264, 15324, 321, 9796, 300, 264, 1101, 766, 321, 366, 13, 50964, 50964, 1449, 9796, 291, 434, 257, 1578, 10754, 293, 718, 264, 31958, 747, 1127, 295, 721, 13, 51114, 51114, 663, 311, 767, 1238, 665, 5192, 13, 1449, 6552, 291, 434, 516, 281, 2082, 493, 13, 51464, 51464, 3251, 19717, 11, 445, 411, 365, 5870, 4439, 13, 1743, 11, 6552, 291, 434, 516, 281, 2082, 493, 264, 958, 1823, 293, 5599, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10449163763372747, "compression_ratio": 1.790794979079498, "no_caption_prob": 3.8228114135563374e-05}, {"id": 395, "seek": 238200, "start": 2387.0, "end": 2394.0, "text": " Because you're a bad developer. Yeah, I think the sooner we admit that the better off we are.", "tokens": [50364, 286, 519, 286, 519, 337, 665, 1778, 13, 865, 11, 291, 434, 558, 13, 286, 500, 380, 3361, 2059, 13, 50614, 50614, 1436, 291, 434, 257, 1578, 10754, 13, 865, 11, 286, 519, 264, 15324, 321, 9796, 300, 264, 1101, 766, 321, 366, 13, 50964, 50964, 1449, 9796, 291, 434, 257, 1578, 10754, 293, 718, 264, 31958, 747, 1127, 295, 721, 13, 51114, 51114, 663, 311, 767, 1238, 665, 5192, 13, 1449, 6552, 291, 434, 516, 281, 2082, 493, 13, 51464, 51464, 3251, 19717, 11, 445, 411, 365, 5870, 4439, 13, 1743, 11, 6552, 291, 434, 516, 281, 2082, 493, 264, 958, 1823, 293, 5599, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10449163763372747, "compression_ratio": 1.790794979079498, "no_caption_prob": 3.8228114135563374e-05}, {"id": 396, "seek": 238200, "start": 2394.0, "end": 2397.0, "text": " Just admit you're a bad developer and let the compiler take care of things.", "tokens": [50364, 286, 519, 286, 519, 337, 665, 1778, 13, 865, 11, 291, 434, 558, 13, 286, 500, 380, 3361, 2059, 13, 50614, 50614, 1436, 291, 434, 257, 1578, 10754, 13, 865, 11, 286, 519, 264, 15324, 321, 9796, 300, 264, 1101, 766, 321, 366, 13, 50964, 50964, 1449, 9796, 291, 434, 257, 1578, 10754, 293, 718, 264, 31958, 747, 1127, 295, 721, 13, 51114, 51114, 663, 311, 767, 1238, 665, 5192, 13, 1449, 6552, 291, 434, 516, 281, 2082, 493, 13, 51464, 51464, 3251, 19717, 11, 445, 411, 365, 5870, 4439, 13, 1743, 11, 6552, 291, 434, 516, 281, 2082, 493, 264, 958, 1823, 293, 5599, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10449163763372747, "compression_ratio": 1.790794979079498, "no_caption_prob": 3.8228114135563374e-05}, {"id": 397, "seek": 238200, "start": 2397.0, "end": 2404.0, "text": " That's actually pretty good advice. Just assume you're going to mess up.", "tokens": [50364, 286, 519, 286, 519, 337, 665, 1778, 13, 865, 11, 291, 434, 558, 13, 286, 500, 380, 3361, 2059, 13, 50614, 50614, 1436, 291, 434, 257, 1578, 10754, 13, 865, 11, 286, 519, 264, 15324, 321, 9796, 300, 264, 1101, 766, 321, 366, 13, 50964, 50964, 1449, 9796, 291, 434, 257, 1578, 10754, 293, 718, 264, 31958, 747, 1127, 295, 721, 13, 51114, 51114, 663, 311, 767, 1238, 665, 5192, 13, 1449, 6552, 291, 434, 516, 281, 2082, 493, 13, 51464, 51464, 3251, 19717, 11, 445, 411, 365, 5870, 4439, 13, 1743, 11, 6552, 291, 434, 516, 281, 2082, 493, 264, 958, 1823, 293, 5599, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10449163763372747, "compression_ratio": 1.790794979079498, "no_caption_prob": 3.8228114135563374e-05}, {"id": 398, "seek": 238200, "start": 2404.0, "end": 2410.0, "text": " Act accordingly, just like with tiny steps. Like, assume you're going to mess up the next step and commit now.", "tokens": [50364, 286, 519, 286, 519, 337, 665, 1778, 13, 865, 11, 291, 434, 558, 13, 286, 500, 380, 3361, 2059, 13, 50614, 50614, 1436, 291, 434, 257, 1578, 10754, 13, 865, 11, 286, 519, 264, 15324, 321, 9796, 300, 264, 1101, 766, 321, 366, 13, 50964, 50964, 1449, 9796, 291, 434, 257, 1578, 10754, 293, 718, 264, 31958, 747, 1127, 295, 721, 13, 51114, 51114, 663, 311, 767, 1238, 665, 5192, 13, 1449, 6552, 291, 434, 516, 281, 2082, 493, 13, 51464, 51464, 3251, 19717, 11, 445, 411, 365, 5870, 4439, 13, 1743, 11, 6552, 291, 434, 516, 281, 2082, 493, 264, 958, 1823, 293, 5599, 586, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10449163763372747, "compression_ratio": 1.790794979079498, "no_caption_prob": 3.8228114135563374e-05}, {"id": 399, "seek": 241000, "start": 2410.0, "end": 2419.0, "text": " Exactly. Socrates said that he knows more than anyone else in the world because he realizes that he knows nothing.", "tokens": [50364, 7587, 13, 407, 50243, 848, 300, 415, 3255, 544, 813, 2878, 1646, 294, 264, 1002, 570, 415, 29316, 300, 415, 3255, 1825, 13, 50814, 50814, 400, 300, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 400, 4412, 11, 415, 3255, 544, 813, 2878, 1646, 13, 51064, 51064, 634, 3255, 472, 551, 300, 415, 393, 458, 1825, 13, 663, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 51264, 51264, 583, 437, 498, 1580, 1646, 3255, 264, 912, 551, 30, 51414, 51414, 1042, 11, 550, 436, 576, 458, 382, 709, 382, 796, 13, 583, 572, 472, 3255, 544, 813, 796, 570, 572, 472, 393, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.050259572965604765, "compression_ratio": 2.099056603773585, "no_caption_prob": 0.0002736992610152811}, {"id": 400, "seek": 241000, "start": 2419.0, "end": 2424.0, "text": " And that's the only thing that can truly be known. And therefore, he knows more than anyone else.", "tokens": [50364, 7587, 13, 407, 50243, 848, 300, 415, 3255, 544, 813, 2878, 1646, 294, 264, 1002, 570, 415, 29316, 300, 415, 3255, 1825, 13, 50814, 50814, 400, 300, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 400, 4412, 11, 415, 3255, 544, 813, 2878, 1646, 13, 51064, 51064, 634, 3255, 472, 551, 300, 415, 393, 458, 1825, 13, 663, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 51264, 51264, 583, 437, 498, 1580, 1646, 3255, 264, 912, 551, 30, 51414, 51414, 1042, 11, 550, 436, 576, 458, 382, 709, 382, 796, 13, 583, 572, 472, 3255, 544, 813, 796, 570, 572, 472, 393, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.050259572965604765, "compression_ratio": 2.099056603773585, "no_caption_prob": 0.0002736992610152811}, {"id": 401, "seek": 241000, "start": 2424.0, "end": 2428.0, "text": " He knows one thing that he can know nothing. That's the only thing that can truly be known.", "tokens": [50364, 7587, 13, 407, 50243, 848, 300, 415, 3255, 544, 813, 2878, 1646, 294, 264, 1002, 570, 415, 29316, 300, 415, 3255, 1825, 13, 50814, 50814, 400, 300, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 400, 4412, 11, 415, 3255, 544, 813, 2878, 1646, 13, 51064, 51064, 634, 3255, 472, 551, 300, 415, 393, 458, 1825, 13, 663, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 51264, 51264, 583, 437, 498, 1580, 1646, 3255, 264, 912, 551, 30, 51414, 51414, 1042, 11, 550, 436, 576, 458, 382, 709, 382, 796, 13, 583, 572, 472, 3255, 544, 813, 796, 570, 572, 472, 393, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.050259572965604765, "compression_ratio": 2.099056603773585, "no_caption_prob": 0.0002736992610152811}, {"id": 402, "seek": 241000, "start": 2428.0, "end": 2431.0, "text": " But what if someone else knows the same thing?", "tokens": [50364, 7587, 13, 407, 50243, 848, 300, 415, 3255, 544, 813, 2878, 1646, 294, 264, 1002, 570, 415, 29316, 300, 415, 3255, 1825, 13, 50814, 50814, 400, 300, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 400, 4412, 11, 415, 3255, 544, 813, 2878, 1646, 13, 51064, 51064, 634, 3255, 472, 551, 300, 415, 393, 458, 1825, 13, 663, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 51264, 51264, 583, 437, 498, 1580, 1646, 3255, 264, 912, 551, 30, 51414, 51414, 1042, 11, 550, 436, 576, 458, 382, 709, 382, 796, 13, 583, 572, 472, 3255, 544, 813, 796, 570, 572, 472, 393, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.050259572965604765, "compression_ratio": 2.099056603773585, "no_caption_prob": 0.0002736992610152811}, {"id": 403, "seek": 241000, "start": 2431.0, "end": 2436.0, "text": " Well, then they would know as much as him. But no one knows more than him because no one can.", "tokens": [50364, 7587, 13, 407, 50243, 848, 300, 415, 3255, 544, 813, 2878, 1646, 294, 264, 1002, 570, 415, 29316, 300, 415, 3255, 1825, 13, 50814, 50814, 400, 300, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 400, 4412, 11, 415, 3255, 544, 813, 2878, 1646, 13, 51064, 51064, 634, 3255, 472, 551, 300, 415, 393, 458, 1825, 13, 663, 311, 264, 787, 551, 300, 393, 4908, 312, 2570, 13, 51264, 51264, 583, 437, 498, 1580, 1646, 3255, 264, 912, 551, 30, 51414, 51414, 1042, 11, 550, 436, 576, 458, 382, 709, 382, 796, 13, 583, 572, 472, 3255, 544, 813, 796, 570, 572, 472, 393, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.050259572965604765, "compression_ratio": 2.099056603773585, "no_caption_prob": 0.0002736992610152811}, {"id": 404, "seek": 243600, "start": 2436.0, "end": 2444.0, "text": " Is it like comparing infinity? Well, one guy knows infinity wisdom and another guy knows infinity wisdom.", "tokens": [50364, 1119, 309, 411, 15763, 13202, 30, 1042, 11, 472, 2146, 3255, 13202, 10712, 293, 1071, 2146, 3255, 13202, 10712, 13, 50764, 50764, 407, 291, 6794, 729, 293, 300, 311, 1009, 2074, 11, 1009, 1570, 293, 1009, 544, 13, 51064, 51064, 286, 519, 309, 311, 406, 25323, 11, 508, 2032, 268, 13, 663, 311, 264, 1154, 13, 51264, 51264, 876, 11, 370, 309, 311, 3601, 307, 42687, 13, 2264, 11, 321, 658, 309, 13, 663, 311, 437, 286, 820, 362, 3720, 294, 452, 10675, 7712, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11530841870254345, "compression_ratio": 1.6303317535545023, "no_caption_prob": 0.00013980103540234268}, {"id": 405, "seek": 243600, "start": 2444.0, "end": 2450.0, "text": " So you compare those and that's always true, always less and always more.", "tokens": [50364, 1119, 309, 411, 15763, 13202, 30, 1042, 11, 472, 2146, 3255, 13202, 10712, 293, 1071, 2146, 3255, 13202, 10712, 13, 50764, 50764, 407, 291, 6794, 729, 293, 300, 311, 1009, 2074, 11, 1009, 1570, 293, 1009, 544, 13, 51064, 51064, 286, 519, 309, 311, 406, 25323, 11, 508, 2032, 268, 13, 663, 311, 264, 1154, 13, 51264, 51264, 876, 11, 370, 309, 311, 3601, 307, 42687, 13, 2264, 11, 321, 658, 309, 13, 663, 311, 437, 286, 820, 362, 3720, 294, 452, 10675, 7712, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11530841870254345, "compression_ratio": 1.6303317535545023, "no_caption_prob": 0.00013980103540234268}, {"id": 406, "seek": 243600, "start": 2450.0, "end": 2454.0, "text": " I think it's not comparable, Jeroen. That's the problem.", "tokens": [50364, 1119, 309, 411, 15763, 13202, 30, 1042, 11, 472, 2146, 3255, 13202, 10712, 293, 1071, 2146, 3255, 13202, 10712, 13, 50764, 50764, 407, 291, 6794, 729, 293, 300, 311, 1009, 2074, 11, 1009, 1570, 293, 1009, 544, 13, 51064, 51064, 286, 519, 309, 311, 406, 25323, 11, 508, 2032, 268, 13, 663, 311, 264, 1154, 13, 51264, 51264, 876, 11, 370, 309, 311, 3601, 307, 42687, 13, 2264, 11, 321, 658, 309, 13, 663, 311, 437, 286, 820, 362, 3720, 294, 452, 10675, 7712, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11530841870254345, "compression_ratio": 1.6303317535545023, "no_caption_prob": 0.00013980103540234268}, {"id": 407, "seek": 243600, "start": 2454.0, "end": 2463.0, "text": " Oh, so it's knowledge is opaque. OK, we got it. That's what I should have written in my philosophy courses.", "tokens": [50364, 1119, 309, 411, 15763, 13202, 30, 1042, 11, 472, 2146, 3255, 13202, 10712, 293, 1071, 2146, 3255, 13202, 10712, 13, 50764, 50764, 407, 291, 6794, 729, 293, 300, 311, 1009, 2074, 11, 1009, 1570, 293, 1009, 544, 13, 51064, 51064, 286, 519, 309, 311, 406, 25323, 11, 508, 2032, 268, 13, 663, 311, 264, 1154, 13, 51264, 51264, 876, 11, 370, 309, 311, 3601, 307, 42687, 13, 2264, 11, 321, 658, 309, 13, 663, 311, 437, 286, 820, 362, 3720, 294, 452, 10675, 7712, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11530841870254345, "compression_ratio": 1.6303317535545023, "no_caption_prob": 0.00013980103540234268}, {"id": 408, "seek": 246300, "start": 2463.0, "end": 2473.0, "text": " Philosophy, knowledge is opaque. If I want to get knowledge from you, I need to use your API to transfer the knowledge to me.", "tokens": [50364, 43655, 11, 3601, 307, 42687, 13, 759, 286, 528, 281, 483, 3601, 490, 291, 11, 286, 643, 281, 764, 428, 9362, 281, 5003, 264, 3601, 281, 385, 13, 50864, 50864, 663, 311, 2074, 13, 663, 311, 1936, 437, 2699, 76, 17296, 307, 13, 492, 434, 364, 9362, 337, 561, 311, 9634, 13, 51064, 51064, 865, 13, 682, 341, 7877, 11, 3601, 307, 767, 257, 857, 14853, 424, 3320, 13, 51364, 51364, 1079, 11, 321, 434, 33178, 264, 9226, 337, 309, 13, 51464, 51464, 865, 11, 321, 434, 516, 281, 7019, 309, 797, 412, 264, 917, 295, 264, 3500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11130703305735172, "compression_ratio": 1.6244541484716157, "no_caption_prob": 0.00017126994498539716}, {"id": 409, "seek": 246300, "start": 2473.0, "end": 2477.0, "text": " That's true. That's basically what Elm Radio is. We're an API for people's minds.", "tokens": [50364, 43655, 11, 3601, 307, 42687, 13, 759, 286, 528, 281, 483, 3601, 490, 291, 11, 286, 643, 281, 764, 428, 9362, 281, 5003, 264, 3601, 281, 385, 13, 50864, 50864, 663, 311, 2074, 13, 663, 311, 1936, 437, 2699, 76, 17296, 307, 13, 492, 434, 364, 9362, 337, 561, 311, 9634, 13, 51064, 51064, 865, 13, 682, 341, 7877, 11, 3601, 307, 767, 257, 857, 14853, 424, 3320, 13, 51364, 51364, 1079, 11, 321, 434, 33178, 264, 9226, 337, 309, 13, 51464, 51464, 865, 11, 321, 434, 516, 281, 7019, 309, 797, 412, 264, 917, 295, 264, 3500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11130703305735172, "compression_ratio": 1.6244541484716157, "no_caption_prob": 0.00017126994498539716}, {"id": 410, "seek": 246300, "start": 2477.0, "end": 2483.0, "text": " Yeah. In this format, knowledge is actually a bit unwrapped.", "tokens": [50364, 43655, 11, 3601, 307, 42687, 13, 759, 286, 528, 281, 483, 3601, 490, 291, 11, 286, 643, 281, 764, 428, 9362, 281, 5003, 264, 3601, 281, 385, 13, 50864, 50864, 663, 311, 2074, 13, 663, 311, 1936, 437, 2699, 76, 17296, 307, 13, 492, 434, 364, 9362, 337, 561, 311, 9634, 13, 51064, 51064, 865, 13, 682, 341, 7877, 11, 3601, 307, 767, 257, 857, 14853, 424, 3320, 13, 51364, 51364, 1079, 11, 321, 434, 33178, 264, 9226, 337, 309, 13, 51464, 51464, 865, 11, 321, 434, 516, 281, 7019, 309, 797, 412, 264, 917, 295, 264, 3500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11130703305735172, "compression_ratio": 1.6244541484716157, "no_caption_prob": 0.00017126994498539716}, {"id": 411, "seek": 246300, "start": 2483.0, "end": 2485.0, "text": " Yes, we're exposing the interface for it.", "tokens": [50364, 43655, 11, 3601, 307, 42687, 13, 759, 286, 528, 281, 483, 3601, 490, 291, 11, 286, 643, 281, 764, 428, 9362, 281, 5003, 264, 3601, 281, 385, 13, 50864, 50864, 663, 311, 2074, 13, 663, 311, 1936, 437, 2699, 76, 17296, 307, 13, 492, 434, 364, 9362, 337, 561, 311, 9634, 13, 51064, 51064, 865, 13, 682, 341, 7877, 11, 3601, 307, 767, 257, 857, 14853, 424, 3320, 13, 51364, 51364, 1079, 11, 321, 434, 33178, 264, 9226, 337, 309, 13, 51464, 51464, 865, 11, 321, 434, 516, 281, 7019, 309, 797, 412, 264, 917, 295, 264, 3500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11130703305735172, "compression_ratio": 1.6244541484716157, "no_caption_prob": 0.00017126994498539716}, {"id": 412, "seek": 246300, "start": 2485.0, "end": 2488.0, "text": " Yeah, we're going to wrap it again at the end of the episode.", "tokens": [50364, 43655, 11, 3601, 307, 42687, 13, 759, 286, 528, 281, 483, 3601, 490, 291, 11, 286, 643, 281, 764, 428, 9362, 281, 5003, 264, 3601, 281, 385, 13, 50864, 50864, 663, 311, 2074, 13, 663, 311, 1936, 437, 2699, 76, 17296, 307, 13, 492, 434, 364, 9362, 337, 561, 311, 9634, 13, 51064, 51064, 865, 13, 682, 341, 7877, 11, 3601, 307, 767, 257, 857, 14853, 424, 3320, 13, 51364, 51364, 1079, 11, 321, 434, 33178, 264, 9226, 337, 309, 13, 51464, 51464, 865, 11, 321, 434, 516, 281, 7019, 309, 797, 412, 264, 917, 295, 264, 3500, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11130703305735172, "compression_ratio": 1.6244541484716157, "no_caption_prob": 0.00017126994498539716}, {"id": 413, "seek": 248800, "start": 2488.0, "end": 2495.0, "text": " Exactly. Wrap early, unwrap late. So I was thinking about something the other day.", "tokens": [50364, 7587, 13, 41291, 2440, 11, 14853, 4007, 3469, 13, 407, 286, 390, 1953, 466, 746, 264, 661, 786, 13, 50714, 50714, 286, 390, 3579, 746, 293, 286, 390, 411, 11, 1310, 286, 820, 312, 1228, 257, 2375, 2010, 510, 293, 257, 46906, 2010, 13, 51114, 51114, 286, 2441, 437, 291, 519, 13, 440, 551, 286, 390, 8593, 278, 390, 286, 390, 46567, 721, 666, 257, 1329, 13, 51464, 51464, 400, 382, 291, 360, 365, 257, 1329, 11, 291, 2673, 2666, 521, 281, 309, 570, 309, 311, 43495, 281, 909, 746, 281, 264, 917, 295, 264, 1329, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06320560568630106, "compression_ratio": 1.7155172413793103, "no_caption_prob": 0.0014299702597782016}, {"id": 414, "seek": 248800, "start": 2495.0, "end": 2503.0, "text": " I was writing something and I was like, maybe I should be using a custom type here and a wrapper type.", "tokens": [50364, 7587, 13, 41291, 2440, 11, 14853, 4007, 3469, 13, 407, 286, 390, 1953, 466, 746, 264, 661, 786, 13, 50714, 50714, 286, 390, 3579, 746, 293, 286, 390, 411, 11, 1310, 286, 820, 312, 1228, 257, 2375, 2010, 510, 293, 257, 46906, 2010, 13, 51114, 51114, 286, 2441, 437, 291, 519, 13, 440, 551, 286, 390, 8593, 278, 390, 286, 390, 46567, 721, 666, 257, 1329, 13, 51464, 51464, 400, 382, 291, 360, 365, 257, 1329, 11, 291, 2673, 2666, 521, 281, 309, 570, 309, 311, 43495, 281, 909, 746, 281, 264, 917, 295, 264, 1329, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06320560568630106, "compression_ratio": 1.7155172413793103, "no_caption_prob": 0.0014299702597782016}, {"id": 415, "seek": 248800, "start": 2503.0, "end": 2510.0, "text": " I wonder what you think. The thing I was encountering was I was inserting things into a list.", "tokens": [50364, 7587, 13, 41291, 2440, 11, 14853, 4007, 3469, 13, 407, 286, 390, 1953, 466, 746, 264, 661, 786, 13, 50714, 50714, 286, 390, 3579, 746, 293, 286, 390, 411, 11, 1310, 286, 820, 312, 1228, 257, 2375, 2010, 510, 293, 257, 46906, 2010, 13, 51114, 51114, 286, 2441, 437, 291, 519, 13, 440, 551, 286, 390, 8593, 278, 390, 286, 390, 46567, 721, 666, 257, 1329, 13, 51464, 51464, 400, 382, 291, 360, 365, 257, 1329, 11, 291, 2673, 2666, 521, 281, 309, 570, 309, 311, 43495, 281, 909, 746, 281, 264, 917, 295, 264, 1329, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06320560568630106, "compression_ratio": 1.7155172413793103, "no_caption_prob": 0.0014299702597782016}, {"id": 416, "seek": 248800, "start": 2510.0, "end": 2517.0, "text": " And as you do with a list, you usually prepend to it because it's inefficient to add something to the end of the list.", "tokens": [50364, 7587, 13, 41291, 2440, 11, 14853, 4007, 3469, 13, 407, 286, 390, 1953, 466, 746, 264, 661, 786, 13, 50714, 50714, 286, 390, 3579, 746, 293, 286, 390, 411, 11, 1310, 286, 820, 312, 1228, 257, 2375, 2010, 510, 293, 257, 46906, 2010, 13, 51114, 51114, 286, 2441, 437, 291, 519, 13, 440, 551, 286, 390, 8593, 278, 390, 286, 390, 46567, 721, 666, 257, 1329, 13, 51464, 51464, 400, 382, 291, 360, 365, 257, 1329, 11, 291, 2673, 2666, 521, 281, 309, 570, 309, 311, 43495, 281, 909, 746, 281, 264, 917, 295, 264, 1329, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.06320560568630106, "compression_ratio": 1.7155172413793103, "no_caption_prob": 0.0014299702597782016}, {"id": 417, "seek": 251700, "start": 2517.0, "end": 2520.0, "text": " So you go over this list and you're adding things.", "tokens": [50364, 407, 291, 352, 670, 341, 1329, 293, 291, 434, 5127, 721, 13, 50514, 50514, 400, 286, 5334, 456, 311, 767, 257, 47982, 3410, 2261, 341, 13, 639, 307, 406, 257, 1329, 13, 467, 307, 257, 9943, 1329, 13, 50964, 50964, 400, 286, 390, 1953, 1310, 286, 820, 445, 1884, 257, 707, 46906, 2010, 293, 362, 9943, 1329, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08328392428736534, "compression_ratio": 1.5060975609756098, "no_caption_prob": 9.168771066470072e-05}, {"id": 418, "seek": 251700, "start": 2520.0, "end": 2529.0, "text": " And I realized there's actually a semantic concept behind this. This is not a list. It is a reverse list.", "tokens": [50364, 407, 291, 352, 670, 341, 1329, 293, 291, 434, 5127, 721, 13, 50514, 50514, 400, 286, 5334, 456, 311, 767, 257, 47982, 3410, 2261, 341, 13, 639, 307, 406, 257, 1329, 13, 467, 307, 257, 9943, 1329, 13, 50964, 50964, 400, 286, 390, 1953, 1310, 286, 820, 445, 1884, 257, 707, 46906, 2010, 293, 362, 9943, 1329, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08328392428736534, "compression_ratio": 1.5060975609756098, "no_caption_prob": 9.168771066470072e-05}, {"id": 419, "seek": 251700, "start": 2529.0, "end": 2536.0, "text": " And I was thinking maybe I should just create a little wrapper type and have reverse list.", "tokens": [50364, 407, 291, 352, 670, 341, 1329, 293, 291, 434, 5127, 721, 13, 50514, 50514, 400, 286, 5334, 456, 311, 767, 257, 47982, 3410, 2261, 341, 13, 639, 307, 406, 257, 1329, 13, 467, 307, 257, 9943, 1329, 13, 50964, 50964, 400, 286, 390, 1953, 1310, 286, 820, 445, 1884, 257, 707, 46906, 2010, 293, 362, 9943, 1329, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.08328392428736534, "compression_ratio": 1.5060975609756098, "no_caption_prob": 9.168771066470072e-05}, {"id": 420, "seek": 253600, "start": 2536.0, "end": 2547.0, "text": " So you would have type reverse list equals reverse list parens list a.", "tokens": [50364, 407, 291, 576, 362, 2010, 9943, 1329, 6915, 9943, 1329, 7448, 3695, 1329, 257, 13, 50914, 50914, 400, 291, 1116, 643, 428, 257, 2010, 7006, 294, 264, 7123, 13, 51114, 51114, 407, 309, 311, 445, 257, 46906, 337, 1329, 295, 746, 11, 457, 309, 576, 312, 364, 42687, 2010, 13, 51464, 51464, 400, 264, 1021, 551, 576, 312, 437, 393, 291, 360, 365, 257, 9943, 1329, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1307269082942479, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00010719745478127152}, {"id": 421, "seek": 253600, "start": 2547.0, "end": 2551.0, "text": " And you'd need your a type variable in the definition.", "tokens": [50364, 407, 291, 576, 362, 2010, 9943, 1329, 6915, 9943, 1329, 7448, 3695, 1329, 257, 13, 50914, 50914, 400, 291, 1116, 643, 428, 257, 2010, 7006, 294, 264, 7123, 13, 51114, 51114, 407, 309, 311, 445, 257, 46906, 337, 1329, 295, 746, 11, 457, 309, 576, 312, 364, 42687, 2010, 13, 51464, 51464, 400, 264, 1021, 551, 576, 312, 437, 393, 291, 360, 365, 257, 9943, 1329, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1307269082942479, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00010719745478127152}, {"id": 422, "seek": 253600, "start": 2551.0, "end": 2558.0, "text": " So it's just a wrapper for list of something, but it would be an opaque type.", "tokens": [50364, 407, 291, 576, 362, 2010, 9943, 1329, 6915, 9943, 1329, 7448, 3695, 1329, 257, 13, 50914, 50914, 400, 291, 1116, 643, 428, 257, 2010, 7006, 294, 264, 7123, 13, 51114, 51114, 407, 309, 311, 445, 257, 46906, 337, 1329, 295, 746, 11, 457, 309, 576, 312, 364, 42687, 2010, 13, 51464, 51464, 400, 264, 1021, 551, 576, 312, 437, 393, 291, 360, 365, 257, 9943, 1329, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1307269082942479, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00010719745478127152}, {"id": 423, "seek": 253600, "start": 2558.0, "end": 2561.0, "text": " And the important thing would be what can you do with a reverse list?", "tokens": [50364, 407, 291, 576, 362, 2010, 9943, 1329, 6915, 9943, 1329, 7448, 3695, 1329, 257, 13, 50914, 50914, 400, 291, 1116, 643, 428, 257, 2010, 7006, 294, 264, 7123, 13, 51114, 51114, 407, 309, 311, 445, 257, 46906, 337, 1329, 295, 746, 11, 457, 309, 576, 312, 364, 42687, 2010, 13, 51464, 51464, 400, 264, 1021, 551, 576, 312, 437, 393, 291, 360, 365, 257, 9943, 1329, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1307269082942479, "compression_ratio": 1.6153846153846154, "no_caption_prob": 0.00010719745478127152}, {"id": 424, "seek": 256100, "start": 2561.0, "end": 2567.0, "text": " Well, you can prepend to it and you can get it. You can turn it into a normal list.", "tokens": [50364, 1042, 11, 291, 393, 2666, 521, 281, 309, 293, 291, 393, 483, 309, 13, 509, 393, 1261, 309, 666, 257, 2710, 1329, 13, 50664, 50664, 708, 307, 6246, 309, 666, 257, 2710, 1329, 574, 411, 30, 509, 360, 264, 9943, 1329, 11, 257, 9943, 1804, 21993, 11, 14853, 424, 3759, 420, 14853, 424, 3759, 309, 13, 51064, 51064, 7587, 13, 1156, 86, 424, 3759, 309, 293, 9943, 309, 13, 583, 586, 510, 311, 510, 311, 264, 551, 300, 291, 600, 2212, 257, 1315, 281, 613, 721, 13, 51414, 51414, 407, 562, 291, 434, 2666, 2029, 11, 291, 434, 884, 411, 9943, 1329, 5893, 2666, 521, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12485384507612748, "compression_ratio": 1.8899521531100478, "no_caption_prob": 9.91466295090504e-05}, {"id": 425, "seek": 256100, "start": 2567.0, "end": 2575.0, "text": " What is turning it into a normal list look like? You do the reverse list, a reverse plus wrapping, unwrapping or unwrapping it.", "tokens": [50364, 1042, 11, 291, 393, 2666, 521, 281, 309, 293, 291, 393, 483, 309, 13, 509, 393, 1261, 309, 666, 257, 2710, 1329, 13, 50664, 50664, 708, 307, 6246, 309, 666, 257, 2710, 1329, 574, 411, 30, 509, 360, 264, 9943, 1329, 11, 257, 9943, 1804, 21993, 11, 14853, 424, 3759, 420, 14853, 424, 3759, 309, 13, 51064, 51064, 7587, 13, 1156, 86, 424, 3759, 309, 293, 9943, 309, 13, 583, 586, 510, 311, 510, 311, 264, 551, 300, 291, 600, 2212, 257, 1315, 281, 613, 721, 13, 51414, 51414, 407, 562, 291, 434, 2666, 2029, 11, 291, 434, 884, 411, 9943, 1329, 5893, 2666, 521, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12485384507612748, "compression_ratio": 1.8899521531100478, "no_caption_prob": 9.91466295090504e-05}, {"id": 426, "seek": 256100, "start": 2575.0, "end": 2582.0, "text": " Exactly. Unwrapping it and reverse it. But now here's here's the thing that you've given a name to these things.", "tokens": [50364, 1042, 11, 291, 393, 2666, 521, 281, 309, 293, 291, 393, 483, 309, 13, 509, 393, 1261, 309, 666, 257, 2710, 1329, 13, 50664, 50664, 708, 307, 6246, 309, 666, 257, 2710, 1329, 574, 411, 30, 509, 360, 264, 9943, 1329, 11, 257, 9943, 1804, 21993, 11, 14853, 424, 3759, 420, 14853, 424, 3759, 309, 13, 51064, 51064, 7587, 13, 1156, 86, 424, 3759, 309, 293, 9943, 309, 13, 583, 586, 510, 311, 510, 311, 264, 551, 300, 291, 600, 2212, 257, 1315, 281, 613, 721, 13, 51414, 51414, 407, 562, 291, 434, 2666, 2029, 11, 291, 434, 884, 411, 9943, 1329, 5893, 2666, 521, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12485384507612748, "compression_ratio": 1.8899521531100478, "no_caption_prob": 9.91466295090504e-05}, {"id": 427, "seek": 256100, "start": 2582.0, "end": 2588.0, "text": " So when you're prepending, you're doing like reverse list dot prepend.", "tokens": [50364, 1042, 11, 291, 393, 2666, 521, 281, 309, 293, 291, 393, 483, 309, 13, 509, 393, 1261, 309, 666, 257, 2710, 1329, 13, 50664, 50664, 708, 307, 6246, 309, 666, 257, 2710, 1329, 574, 411, 30, 509, 360, 264, 9943, 1329, 11, 257, 9943, 1804, 21993, 11, 14853, 424, 3759, 420, 14853, 424, 3759, 309, 13, 51064, 51064, 7587, 13, 1156, 86, 424, 3759, 309, 293, 9943, 309, 13, 583, 586, 510, 311, 510, 311, 264, 551, 300, 291, 600, 2212, 257, 1315, 281, 613, 721, 13, 51414, 51414, 407, 562, 291, 434, 2666, 2029, 11, 291, 434, 884, 411, 9943, 1329, 5893, 2666, 521, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12485384507612748, "compression_ratio": 1.8899521531100478, "no_caption_prob": 9.91466295090504e-05}, {"id": 428, "seek": 258800, "start": 2588.0, "end": 2596.0, "text": " And so, OK, you understand I'm prepending to this thing. And then when you do to list, you just use the list.", "tokens": [50364, 400, 370, 11, 2264, 11, 291, 1223, 286, 478, 2666, 2029, 281, 341, 551, 13, 400, 550, 562, 291, 360, 281, 1329, 11, 291, 445, 764, 264, 1329, 13, 50764, 50764, 400, 370, 498, 291, 747, 300, 9943, 1329, 11, 291, 393, 380, 15715, 1320, 309, 4079, 293, 584, 11, 1699, 257, 3456, 11, 286, 2731, 2837, 13, 51114, 51114, 708, 390, 264, 4319, 30, 3027, 341, 30563, 412, 341, 935, 420, 406, 30, 51264, 51264, 400, 286, 519, 300, 311, 472, 295, 264, 4005, 721, 466, 613, 1333, 295, 47982, 3467, 11, 466, 21993, 420, 613, 28540, 3467, 365, 4361, 45298, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06823583406822703, "compression_ratio": 1.6705882352941177, "no_caption_prob": 3.120137262158096e-05}, {"id": 429, "seek": 258800, "start": 2596.0, "end": 2603.0, "text": " And so if you take that reverse list, you can't accidentally pass it somewhere and say, wait a minute, I lost track.", "tokens": [50364, 400, 370, 11, 2264, 11, 291, 1223, 286, 478, 2666, 2029, 281, 341, 551, 13, 400, 550, 562, 291, 360, 281, 1329, 11, 291, 445, 764, 264, 1329, 13, 50764, 50764, 400, 370, 498, 291, 747, 300, 9943, 1329, 11, 291, 393, 380, 15715, 1320, 309, 4079, 293, 584, 11, 1699, 257, 3456, 11, 286, 2731, 2837, 13, 51114, 51114, 708, 390, 264, 4319, 30, 3027, 341, 30563, 412, 341, 935, 420, 406, 30, 51264, 51264, 400, 286, 519, 300, 311, 472, 295, 264, 4005, 721, 466, 613, 1333, 295, 47982, 3467, 11, 466, 21993, 420, 613, 28540, 3467, 365, 4361, 45298, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06823583406822703, "compression_ratio": 1.6705882352941177, "no_caption_prob": 3.120137262158096e-05}, {"id": 430, "seek": 258800, "start": 2603.0, "end": 2606.0, "text": " What was the context? Was this reversed at this point or not?", "tokens": [50364, 400, 370, 11, 2264, 11, 291, 1223, 286, 478, 2666, 2029, 281, 341, 551, 13, 400, 550, 562, 291, 360, 281, 1329, 11, 291, 445, 764, 264, 1329, 13, 50764, 50764, 400, 370, 498, 291, 747, 300, 9943, 1329, 11, 291, 393, 380, 15715, 1320, 309, 4079, 293, 584, 11, 1699, 257, 3456, 11, 286, 2731, 2837, 13, 51114, 51114, 708, 390, 264, 4319, 30, 3027, 341, 30563, 412, 341, 935, 420, 406, 30, 51264, 51264, 400, 286, 519, 300, 311, 472, 295, 264, 4005, 721, 466, 613, 1333, 295, 47982, 3467, 11, 466, 21993, 420, 613, 28540, 3467, 365, 4361, 45298, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06823583406822703, "compression_ratio": 1.6705882352941177, "no_caption_prob": 3.120137262158096e-05}, {"id": 431, "seek": 258800, "start": 2606.0, "end": 2615.0, "text": " And I think that's one of the powerful things about these sort of semantic types, about wrapping or these primitive types with semantics,", "tokens": [50364, 400, 370, 11, 2264, 11, 291, 1223, 286, 478, 2666, 2029, 281, 341, 551, 13, 400, 550, 562, 291, 360, 281, 1329, 11, 291, 445, 764, 264, 1329, 13, 50764, 50764, 400, 370, 498, 291, 747, 300, 9943, 1329, 11, 291, 393, 380, 15715, 1320, 309, 4079, 293, 584, 11, 1699, 257, 3456, 11, 286, 2731, 2837, 13, 51114, 51114, 708, 390, 264, 4319, 30, 3027, 341, 30563, 412, 341, 935, 420, 406, 30, 51264, 51264, 400, 286, 519, 300, 311, 472, 295, 264, 4005, 721, 466, 613, 1333, 295, 47982, 3467, 11, 466, 21993, 420, 613, 28540, 3467, 365, 4361, 45298, 11, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.06823583406822703, "compression_ratio": 1.6705882352941177, "no_caption_prob": 3.120137262158096e-05}, {"id": 432, "seek": 261500, "start": 2615.0, "end": 2626.0, "text": " is that it gives you this definition of what is the semantic context I'm in, which you can lose if you're passing a primitive because you're passing a list of something.", "tokens": [50364, 307, 300, 309, 2709, 291, 341, 7123, 295, 437, 307, 264, 47982, 4319, 286, 478, 294, 11, 597, 291, 393, 3624, 498, 291, 434, 8437, 257, 28540, 570, 291, 434, 8437, 257, 1329, 295, 746, 13, 50914, 50914, 1042, 11, 390, 309, 30563, 1217, 420, 406, 30, 708, 3233, 775, 341, 2906, 30, 51114, 51114, 286, 478, 1920, 6359, 11, 411, 11, 307, 9943, 1329, 257, 665, 1315, 337, 341, 30, 1436, 286, 3986, 365, 264, 1558, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06549653192845786, "compression_ratio": 1.5849056603773586, "no_caption_prob": 1.2029502613586374e-05}, {"id": 433, "seek": 261500, "start": 2626.0, "end": 2630.0, "text": " Well, was it reversed already or not? What stage does this represent?", "tokens": [50364, 307, 300, 309, 2709, 291, 341, 7123, 295, 437, 307, 264, 47982, 4319, 286, 478, 294, 11, 597, 291, 393, 3624, 498, 291, 434, 8437, 257, 28540, 570, 291, 434, 8437, 257, 1329, 295, 746, 13, 50914, 50914, 1042, 11, 390, 309, 30563, 1217, 420, 406, 30, 708, 3233, 775, 341, 2906, 30, 51114, 51114, 286, 478, 1920, 6359, 11, 411, 11, 307, 9943, 1329, 257, 665, 1315, 337, 341, 30, 1436, 286, 3986, 365, 264, 1558, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06549653192845786, "compression_ratio": 1.5849056603773586, "no_caption_prob": 1.2029502613586374e-05}, {"id": 434, "seek": 261500, "start": 2630.0, "end": 2637.0, "text": " I'm almost wondering, like, is reverse list a good name for this? Because I agree with the idea.", "tokens": [50364, 307, 300, 309, 2709, 291, 341, 7123, 295, 437, 307, 264, 47982, 4319, 286, 478, 294, 11, 597, 291, 393, 3624, 498, 291, 434, 8437, 257, 28540, 570, 291, 434, 8437, 257, 1329, 295, 746, 13, 50914, 50914, 1042, 11, 390, 309, 30563, 1217, 420, 406, 30, 708, 3233, 775, 341, 2906, 30, 51114, 51114, 286, 478, 1920, 6359, 11, 411, 11, 307, 9943, 1329, 257, 665, 1315, 337, 341, 30, 1436, 286, 3986, 365, 264, 1558, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.06549653192845786, "compression_ratio": 1.5849056603773586, "no_caption_prob": 1.2029502613586374e-05}, {"id": 435, "seek": 263700, "start": 2637.0, "end": 2652.0, "text": " But I'm like, you're building something. So maybe you have something like what you were building, but let's imagine this was a list of books or something and they have to be ordered in some way.", "tokens": [50364, 583, 286, 478, 411, 11, 291, 434, 2390, 746, 13, 407, 1310, 291, 362, 746, 411, 437, 291, 645, 2390, 11, 457, 718, 311, 3811, 341, 390, 257, 1329, 295, 3642, 420, 746, 293, 436, 362, 281, 312, 8866, 294, 512, 636, 13, 51114, 51114, 1779, 13, 759, 291, 434, 411, 10808, 337, 3642, 300, 2995, 257, 1629, 11101, 13, 51364, 51364, 407, 286, 478, 411, 11, 1310, 291, 727, 818, 309, 9943, 1329, 11, 457, 291, 727, 611, 818, 309, 1329, 295, 3642, 885, 3094, 13, 51714, 51714, 9476, 3164, 3542, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08723990450200346, "compression_ratio": 1.8027522935779816, "no_caption_prob": 5.920718103880063e-05}, {"id": 436, "seek": 263700, "start": 2652.0, "end": 2657.0, "text": " Right. If you're like searching for books that match a certain criteria.", "tokens": [50364, 583, 286, 478, 411, 11, 291, 434, 2390, 746, 13, 407, 1310, 291, 362, 746, 411, 437, 291, 645, 2390, 11, 457, 718, 311, 3811, 341, 390, 257, 1329, 295, 3642, 420, 746, 293, 436, 362, 281, 312, 8866, 294, 512, 636, 13, 51114, 51114, 1779, 13, 759, 291, 434, 411, 10808, 337, 3642, 300, 2995, 257, 1629, 11101, 13, 51364, 51364, 407, 286, 478, 411, 11, 1310, 291, 727, 818, 309, 9943, 1329, 11, 457, 291, 727, 611, 818, 309, 1329, 295, 3642, 885, 3094, 13, 51714, 51714, 9476, 3164, 3542, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08723990450200346, "compression_ratio": 1.8027522935779816, "no_caption_prob": 5.920718103880063e-05}, {"id": 437, "seek": 263700, "start": 2657.0, "end": 2664.0, "text": " So I'm like, maybe you could call it reverse list, but you could also call it list of books being built.", "tokens": [50364, 583, 286, 478, 411, 11, 291, 434, 2390, 746, 13, 407, 1310, 291, 362, 746, 411, 437, 291, 645, 2390, 11, 457, 718, 311, 3811, 341, 390, 257, 1329, 295, 3642, 420, 746, 293, 436, 362, 281, 312, 8866, 294, 512, 636, 13, 51114, 51114, 1779, 13, 759, 291, 434, 411, 10808, 337, 3642, 300, 2995, 257, 1629, 11101, 13, 51364, 51364, 407, 286, 478, 411, 11, 1310, 291, 727, 818, 309, 9943, 1329, 11, 457, 291, 727, 611, 818, 309, 1329, 295, 3642, 885, 3094, 13, 51714, 51714, 9476, 3164, 3542, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08723990450200346, "compression_ratio": 1.8027522935779816, "no_caption_prob": 5.920718103880063e-05}, {"id": 438, "seek": 263700, "start": 2664.0, "end": 2666.0, "text": " Book search results.", "tokens": [50364, 583, 286, 478, 411, 11, 291, 434, 2390, 746, 13, 407, 1310, 291, 362, 746, 411, 437, 291, 645, 2390, 11, 457, 718, 311, 3811, 341, 390, 257, 1329, 295, 3642, 420, 746, 293, 436, 362, 281, 312, 8866, 294, 512, 636, 13, 51114, 51114, 1779, 13, 759, 291, 434, 411, 10808, 337, 3642, 300, 2995, 257, 1629, 11101, 13, 51364, 51364, 407, 286, 478, 411, 11, 1310, 291, 727, 818, 309, 9943, 1329, 11, 457, 291, 727, 611, 818, 309, 1329, 295, 3642, 885, 3094, 13, 51714, 51714, 9476, 3164, 3542, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08723990450200346, "compression_ratio": 1.8027522935779816, "no_caption_prob": 5.920718103880063e-05}, {"id": 439, "seek": 266600, "start": 2666.0, "end": 2671.0, "text": " Yeah, or temporary or construction in progress with the icon, you know.", "tokens": [50364, 865, 11, 420, 13413, 420, 6435, 294, 4205, 365, 264, 6528, 11, 291, 458, 13, 50614, 50614, 583, 1338, 11, 286, 3986, 365, 264, 1558, 13, 6068, 291, 528, 281, 764, 341, 30, 6068, 291, 528, 281, 1884, 257, 2375, 2010, 337, 341, 30, 51014, 51014, 467, 5946, 322, 577, 709, 291, 576, 362, 281, 5003, 341, 670, 293, 670, 797, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.10776079784740102, "compression_ratio": 1.5575757575757576, "no_caption_prob": 4.832322883885354e-05}, {"id": 440, "seek": 266600, "start": 2671.0, "end": 2679.0, "text": " But yeah, I agree with the idea. Would you want to use this? Would you want to create a custom type for this?", "tokens": [50364, 865, 11, 420, 13413, 420, 6435, 294, 4205, 365, 264, 6528, 11, 291, 458, 13, 50614, 50614, 583, 1338, 11, 286, 3986, 365, 264, 1558, 13, 6068, 291, 528, 281, 764, 341, 30, 6068, 291, 528, 281, 1884, 257, 2375, 2010, 337, 341, 30, 51014, 51014, 467, 5946, 322, 577, 709, 291, 576, 362, 281, 5003, 341, 670, 293, 670, 797, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.10776079784740102, "compression_ratio": 1.5575757575757576, "no_caption_prob": 4.832322883885354e-05}, {"id": 441, "seek": 266600, "start": 2679.0, "end": 2685.0, "text": " It depends on how much you would have to transfer this over and over again.", "tokens": [50364, 865, 11, 420, 13413, 420, 6435, 294, 4205, 365, 264, 6528, 11, 291, 458, 13, 50614, 50614, 583, 1338, 11, 286, 3986, 365, 264, 1558, 13, 6068, 291, 528, 281, 764, 341, 30, 6068, 291, 528, 281, 1884, 257, 2375, 2010, 337, 341, 30, 51014, 51014, 467, 5946, 322, 577, 709, 291, 576, 362, 281, 5003, 341, 670, 293, 670, 797, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.10776079784740102, "compression_ratio": 1.5575757575757576, "no_caption_prob": 4.832322883885354e-05}, {"id": 442, "seek": 268500, "start": 2685.0, "end": 2699.0, "text": " Like if it's an implementation detail only constrained to a single function, just call, just use list. And I'm guessing you could probably in some cases use list on map or something or list of fold.", "tokens": [50364, 1743, 498, 309, 311, 364, 11420, 2607, 787, 38901, 281, 257, 2167, 2445, 11, 445, 818, 11, 445, 764, 1329, 13, 400, 286, 478, 17939, 291, 727, 1391, 294, 512, 3331, 764, 1329, 322, 4471, 420, 746, 420, 1329, 295, 4860, 13, 51064, 51064, 400, 294, 597, 1389, 309, 815, 406, 652, 604, 2020, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.15195896665928726, "compression_ratio": 1.4817073170731707, "no_caption_prob": 2.3186858015833423e-05}, {"id": 443, "seek": 268500, "start": 2699.0, "end": 2702.0, "text": " And in which case it may not make any sense.", "tokens": [50364, 1743, 498, 309, 311, 364, 11420, 2607, 787, 38901, 281, 257, 2167, 2445, 11, 445, 818, 11, 445, 764, 1329, 13, 400, 286, 478, 17939, 291, 727, 1391, 294, 512, 3331, 764, 1329, 322, 4471, 420, 746, 420, 1329, 295, 4860, 13, 51064, 51064, 400, 294, 597, 1389, 309, 815, 406, 652, 604, 2020, 13, 51214, 51214], "temperature": 0.0, "avg_logprob": -0.15195896665928726, "compression_ratio": 1.4817073170731707, "no_caption_prob": 2.3186858015833423e-05}, {"id": 444, "seek": 270200, "start": 2702.0, "end": 2717.0, "text": " But if it still makes sense and you pass it all around all over the place, then yeah, maybe you can create a custom type, but then maybe give it a better name that more accurately represents the domain.", "tokens": [50364, 583, 498, 309, 920, 1669, 2020, 293, 291, 1320, 309, 439, 926, 439, 670, 264, 1081, 11, 550, 1338, 11, 1310, 291, 393, 1884, 257, 2375, 2010, 11, 457, 550, 1310, 976, 309, 257, 1101, 1315, 300, 544, 20095, 8855, 264, 9274, 13, 51114, 51114, 1779, 13, 1079, 11, 286, 519, 291, 434, 558, 13, 400, 286, 519, 300, 311, 983, 286, 390, 257, 707, 36290, 390, 570, 309, 311, 11, 286, 914, 11, 2171, 291, 434, 516, 281, 362, 9274, 10392, 300, 366, 445, 733, 295, 926, 257, 1729, 1412, 3877, 293, 300, 393, 312, 1392, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08769025989607268, "compression_ratio": 1.6477272727272727, "no_caption_prob": 6.604995724046603e-05}, {"id": 445, "seek": 270200, "start": 2717.0, "end": 2731.0, "text": " Right. Yes, I think you're right. And I think that's why I was a little hesitant was because it's, I mean, sometimes you're going to have domain concepts that are just kind of around a particular data structure and that can be okay.", "tokens": [50364, 583, 498, 309, 920, 1669, 2020, 293, 291, 1320, 309, 439, 926, 439, 670, 264, 1081, 11, 550, 1338, 11, 1310, 291, 393, 1884, 257, 2375, 2010, 11, 457, 550, 1310, 976, 309, 257, 1101, 1315, 300, 544, 20095, 8855, 264, 9274, 13, 51114, 51114, 1779, 13, 1079, 11, 286, 519, 291, 434, 558, 13, 400, 286, 519, 300, 311, 983, 286, 390, 257, 707, 36290, 390, 570, 309, 311, 11, 286, 914, 11, 2171, 291, 434, 516, 281, 362, 9274, 10392, 300, 366, 445, 733, 295, 926, 257, 1729, 1412, 3877, 293, 300, 393, 312, 1392, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08769025989607268, "compression_ratio": 1.6477272727272727, "no_caption_prob": 6.604995724046603e-05}, {"id": 446, "seek": 273100, "start": 2731.0, "end": 2740.0, "text": " But I think you're right. Sometimes that could be a sign that maybe you need to find something to express it in more specific terms for your domain.", "tokens": [50364, 583, 286, 519, 291, 434, 558, 13, 4803, 300, 727, 312, 257, 1465, 300, 1310, 291, 643, 281, 915, 746, 281, 5109, 309, 294, 544, 2685, 2115, 337, 428, 9274, 13, 50814, 50814, 583, 286, 519, 341, 3410, 307, 370, 4005, 300, 11, 797, 11, 309, 311, 411, 291, 600, 658, 4319, 322, 341, 551, 13, 51164, 51164, 509, 458, 11, 309, 311, 411, 11, 291, 458, 577, 291, 393, 3624, 4319, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07906448686277712, "compression_ratio": 1.5595854922279793, "no_caption_prob": 2.97718961519422e-05}, {"id": 447, "seek": 273100, "start": 2740.0, "end": 2747.0, "text": " But I think this concept is so powerful that, again, it's like you've got context on this thing.", "tokens": [50364, 583, 286, 519, 291, 434, 558, 13, 4803, 300, 727, 312, 257, 1465, 300, 1310, 291, 643, 281, 915, 746, 281, 5109, 309, 294, 544, 2685, 2115, 337, 428, 9274, 13, 50814, 50814, 583, 286, 519, 341, 3410, 307, 370, 4005, 300, 11, 797, 11, 309, 311, 411, 291, 600, 658, 4319, 322, 341, 551, 13, 51164, 51164, 509, 458, 11, 309, 311, 411, 11, 291, 458, 577, 291, 393, 3624, 4319, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07906448686277712, "compression_ratio": 1.5595854922279793, "no_caption_prob": 2.97718961519422e-05}, {"id": 448, "seek": 273100, "start": 2747.0, "end": 2752.0, "text": " You know, it's like, you know how you can lose context.", "tokens": [50364, 583, 286, 519, 291, 434, 558, 13, 4803, 300, 727, 312, 257, 1465, 300, 1310, 291, 643, 281, 915, 746, 281, 5109, 309, 294, 544, 2685, 2115, 337, 428, 9274, 13, 50814, 50814, 583, 286, 519, 341, 3410, 307, 370, 4005, 300, 11, 797, 11, 309, 311, 411, 291, 600, 658, 4319, 322, 341, 551, 13, 51164, 51164, 509, 458, 11, 309, 311, 411, 11, 291, 458, 577, 291, 393, 3624, 4319, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.07906448686277712, "compression_ratio": 1.5595854922279793, "no_caption_prob": 2.97718961519422e-05}, {"id": 449, "seek": 275200, "start": 2752.0, "end": 2764.0, "text": " And if you just do something when you have context, it's so much easier because the context is right there. You don't have to context shift. You don't have cache misses in your brain.", "tokens": [50364, 400, 498, 291, 445, 360, 746, 562, 291, 362, 4319, 11, 309, 311, 370, 709, 3571, 570, 264, 4319, 307, 558, 456, 13, 509, 500, 380, 362, 281, 4319, 5513, 13, 509, 500, 380, 362, 19459, 29394, 294, 428, 3567, 13, 50964, 50964, 400, 309, 311, 264, 912, 551, 13, 492, 362, 341, 47982, 1558, 13, 51164, 51164, 407, 11, 291, 458, 11, 562, 321, 434, 1242, 257, 1460, 2158, 490, 264, 7154, 11, 264, 2190, 4772, 490, 264, 7154, 11, 321, 362, 4319, 295, 437, 300, 1355, 570, 321, 434, 1566, 11, 4177, 11, 1767, 483, 264, 2190, 4772, 490, 264, 7154, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.055122821419327346, "compression_ratio": 1.8781512605042017, "no_caption_prob": 7.484058005502447e-05}, {"id": 450, "seek": 275200, "start": 2764.0, "end": 2768.0, "text": " And it's the same thing. We have this semantic idea.", "tokens": [50364, 400, 498, 291, 445, 360, 746, 562, 291, 362, 4319, 11, 309, 311, 370, 709, 3571, 570, 264, 4319, 307, 558, 456, 13, 509, 500, 380, 362, 281, 4319, 5513, 13, 509, 500, 380, 362, 19459, 29394, 294, 428, 3567, 13, 50964, 50964, 400, 309, 311, 264, 912, 551, 13, 492, 362, 341, 47982, 1558, 13, 51164, 51164, 407, 11, 291, 458, 11, 562, 321, 434, 1242, 257, 1460, 2158, 490, 264, 7154, 11, 264, 2190, 4772, 490, 264, 7154, 11, 321, 362, 4319, 295, 437, 300, 1355, 570, 321, 434, 1566, 11, 4177, 11, 1767, 483, 264, 2190, 4772, 490, 264, 7154, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.055122821419327346, "compression_ratio": 1.8781512605042017, "no_caption_prob": 7.484058005502447e-05}, {"id": 451, "seek": 275200, "start": 2768.0, "end": 2781.0, "text": " So, you know, when we're getting a money value from the server, the current balance from the server, we have context of what that means because we're saying, hey, please get the current balance from the server.", "tokens": [50364, 400, 498, 291, 445, 360, 746, 562, 291, 362, 4319, 11, 309, 311, 370, 709, 3571, 570, 264, 4319, 307, 558, 456, 13, 509, 500, 380, 362, 281, 4319, 5513, 13, 509, 500, 380, 362, 19459, 29394, 294, 428, 3567, 13, 50964, 50964, 400, 309, 311, 264, 912, 551, 13, 492, 362, 341, 47982, 1558, 13, 51164, 51164, 407, 11, 291, 458, 11, 562, 321, 434, 1242, 257, 1460, 2158, 490, 264, 7154, 11, 264, 2190, 4772, 490, 264, 7154, 11, 321, 362, 4319, 295, 437, 300, 1355, 570, 321, 434, 1566, 11, 4177, 11, 1767, 483, 264, 2190, 4772, 490, 264, 7154, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.055122821419327346, "compression_ratio": 1.8781512605042017, "no_caption_prob": 7.484058005502447e-05}, {"id": 452, "seek": 278100, "start": 2781.0, "end": 2787.0, "text": " We have this concept of what the thing we're trying to get represents at that point in time.", "tokens": [50364, 492, 362, 341, 3410, 295, 437, 264, 551, 321, 434, 1382, 281, 483, 8855, 412, 300, 935, 294, 565, 13, 50664, 50664, 400, 264, 20344, 1314, 321, 483, 490, 300, 935, 295, 4957, 11, 264, 544, 321, 3624, 4319, 13, 50914, 50914, 400, 370, 321, 362, 281, 1797, 300, 294, 527, 1378, 10100, 19020, 281, 1524, 13, 2305, 630, 341, 808, 490, 30, 708, 645, 264, 4439, 797, 30, 51264, 51264, 1012, 630, 341, 551, 483, 490, 510, 281, 510, 30, 400, 21993, 309, 294, 257, 47982, 2010, 445, 1183, 9054, 300, 4319, 370, 527, 3567, 1177, 380, 362, 281, 360, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.047955682344525775, "compression_ratio": 1.7520325203252032, "no_caption_prob": 7.646471203770489e-06}, {"id": 453, "seek": 278100, "start": 2787.0, "end": 2792.0, "text": " And the farther away we get from that point of origin, the more we lose context.", "tokens": [50364, 492, 362, 341, 3410, 295, 437, 264, 551, 321, 434, 1382, 281, 483, 8855, 412, 300, 935, 294, 565, 13, 50664, 50664, 400, 264, 20344, 1314, 321, 483, 490, 300, 935, 295, 4957, 11, 264, 544, 321, 3624, 4319, 13, 50914, 50914, 400, 370, 321, 362, 281, 1797, 300, 294, 527, 1378, 10100, 19020, 281, 1524, 13, 2305, 630, 341, 808, 490, 30, 708, 645, 264, 4439, 797, 30, 51264, 51264, 1012, 630, 341, 551, 483, 490, 510, 281, 510, 30, 400, 21993, 309, 294, 257, 47982, 2010, 445, 1183, 9054, 300, 4319, 370, 527, 3567, 1177, 380, 362, 281, 360, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.047955682344525775, "compression_ratio": 1.7520325203252032, "no_caption_prob": 7.646471203770489e-06}, {"id": 454, "seek": 278100, "start": 2792.0, "end": 2799.0, "text": " And so we have to hold that in our head imperatively to follow. Where did this come from? What were the steps again?", "tokens": [50364, 492, 362, 341, 3410, 295, 437, 264, 551, 321, 434, 1382, 281, 483, 8855, 412, 300, 935, 294, 565, 13, 50664, 50664, 400, 264, 20344, 1314, 321, 483, 490, 300, 935, 295, 4957, 11, 264, 544, 321, 3624, 4319, 13, 50914, 50914, 400, 370, 321, 362, 281, 1797, 300, 294, 527, 1378, 10100, 19020, 281, 1524, 13, 2305, 630, 341, 808, 490, 30, 708, 645, 264, 4439, 797, 30, 51264, 51264, 1012, 630, 341, 551, 483, 490, 510, 281, 510, 30, 400, 21993, 309, 294, 257, 47982, 2010, 445, 1183, 9054, 300, 4319, 370, 527, 3567, 1177, 380, 362, 281, 360, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.047955682344525775, "compression_ratio": 1.7520325203252032, "no_caption_prob": 7.646471203770489e-06}, {"id": 455, "seek": 278100, "start": 2799.0, "end": 2807.0, "text": " How did this thing get from here to here? And wrapping it in a semantic type just preserves that context so our brain doesn't have to do it.", "tokens": [50364, 492, 362, 341, 3410, 295, 437, 264, 551, 321, 434, 1382, 281, 483, 8855, 412, 300, 935, 294, 565, 13, 50664, 50664, 400, 264, 20344, 1314, 321, 483, 490, 300, 935, 295, 4957, 11, 264, 544, 321, 3624, 4319, 13, 50914, 50914, 400, 370, 321, 362, 281, 1797, 300, 294, 527, 1378, 10100, 19020, 281, 1524, 13, 2305, 630, 341, 808, 490, 30, 708, 645, 264, 4439, 797, 30, 51264, 51264, 1012, 630, 341, 551, 483, 490, 510, 281, 510, 30, 400, 21993, 309, 294, 257, 47982, 2010, 445, 1183, 9054, 300, 4319, 370, 527, 3567, 1177, 380, 362, 281, 360, 309, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.047955682344525775, "compression_ratio": 1.7520325203252032, "no_caption_prob": 7.646471203770489e-06}, {"id": 456, "seek": 280700, "start": 2807.0, "end": 2812.0, "text": " Yeah. And also it will be more refactor proof.", "tokens": [50364, 865, 13, 400, 611, 309, 486, 312, 544, 1895, 15104, 8177, 13, 50614, 50614, 1779, 13, 7587, 13, 1436, 321, 393, 406, 787, 15665, 264, 47982, 3620, 11, 457, 6964, 437, 7705, 393, 312, 1143, 13, 51064, 51064, 2305, 393, 309, 808, 490, 30, 2305, 393, 309, 352, 281, 30, 1012, 393, 309, 312, 16894, 30, 708, 7705, 393, 312, 1143, 322, 309, 30, 708, 33270, 1719, 775, 309, 362, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09788167953491211, "compression_ratio": 1.5668449197860963, "no_caption_prob": 1.922284354805015e-05}, {"id": 457, "seek": 280700, "start": 2812.0, "end": 2821.0, "text": " Right. Exactly. Because we can not only preserve the semantic meaning, but define what operations can be used.", "tokens": [50364, 865, 13, 400, 611, 309, 486, 312, 544, 1895, 15104, 8177, 13, 50614, 50614, 1779, 13, 7587, 13, 1436, 321, 393, 406, 787, 15665, 264, 47982, 3620, 11, 457, 6964, 437, 7705, 393, 312, 1143, 13, 51064, 51064, 2305, 393, 309, 808, 490, 30, 2305, 393, 309, 352, 281, 30, 1012, 393, 309, 312, 16894, 30, 708, 7705, 393, 312, 1143, 322, 309, 30, 708, 33270, 1719, 775, 309, 362, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09788167953491211, "compression_ratio": 1.5668449197860963, "no_caption_prob": 1.922284354805015e-05}, {"id": 458, "seek": 280700, "start": 2821.0, "end": 2828.0, "text": " Where can it come from? Where can it go to? How can it be transformed? What operations can be used on it? What invariants does it have?", "tokens": [50364, 865, 13, 400, 611, 309, 486, 312, 544, 1895, 15104, 8177, 13, 50614, 50614, 1779, 13, 7587, 13, 1436, 321, 393, 406, 787, 15665, 264, 47982, 3620, 11, 457, 6964, 437, 7705, 393, 312, 1143, 13, 51064, 51064, 2305, 393, 309, 808, 490, 30, 2305, 393, 309, 352, 281, 30, 1012, 393, 309, 312, 16894, 30, 708, 7705, 393, 312, 1143, 322, 309, 30, 708, 33270, 1719, 775, 309, 362, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09788167953491211, "compression_ratio": 1.5668449197860963, "no_caption_prob": 1.922284354805015e-05}, {"id": 459, "seek": 282800, "start": 2828.0, "end": 2842.0, "text": " You can avoid having someone mess it up a few years down the line, for instance, or someone who never had the knowledge in their head forgets about some invariant that they should have kept.", "tokens": [50364, 509, 393, 5042, 1419, 1580, 2082, 309, 493, 257, 1326, 924, 760, 264, 1622, 11, 337, 5197, 11, 420, 1580, 567, 1128, 632, 264, 3601, 294, 641, 1378, 2870, 82, 466, 512, 33270, 394, 300, 436, 820, 362, 4305, 13, 51064, 51064, 823, 11, 746, 286, 600, 668, 1953, 466, 12881, 11, 286, 519, 300, 2171, 11, 2049, 294, 1868, 917, 29834, 11, 321, 603, 2028, 365, 1242, 1412, 490, 15909, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11913293286373741, "compression_ratio": 1.5774647887323943, "no_caption_prob": 0.00010070211283164099}, {"id": 460, "seek": 282800, "start": 2842.0, "end": 2853.0, "text": " Now, something I've been thinking about lately, I think that sometimes, often in front end frameworks, we'll deal with getting data from servers.", "tokens": [50364, 509, 393, 5042, 1419, 1580, 2082, 309, 493, 257, 1326, 924, 760, 264, 1622, 11, 337, 5197, 11, 420, 1580, 567, 1128, 632, 264, 3601, 294, 641, 1378, 2870, 82, 466, 512, 33270, 394, 300, 436, 820, 362, 4305, 13, 51064, 51064, 823, 11, 746, 286, 600, 668, 1953, 466, 12881, 11, 286, 519, 300, 2171, 11, 2049, 294, 1868, 917, 29834, 11, 321, 603, 2028, 365, 1242, 1412, 490, 15909, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.11913293286373741, "compression_ratio": 1.5774647887323943, "no_caption_prob": 0.00010070211283164099}, {"id": 461, "seek": 285300, "start": 2853.0, "end": 2861.0, "text": " And often that looks like these formats like JSON. And JSON is very low level. JSON is great format. Don't get me wrong.", "tokens": [50364, 400, 2049, 300, 1542, 411, 613, 25879, 411, 31828, 13, 400, 31828, 307, 588, 2295, 1496, 13, 31828, 307, 869, 7877, 13, 1468, 380, 483, 385, 2085, 13, 50764, 50764, 583, 309, 534, 309, 311, 445, 439, 2886, 38970, 11, 558, 30, 3146, 7123, 13, 51014, 51014, 1042, 11, 572, 11, 570, 6565, 293, 41011, 366, 14154, 3467, 13, 51364, 51364, 6068, 729, 406, 312, 4888, 2886, 38970, 30, 286, 500, 380, 458, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10796054204305013, "compression_ratio": 1.446078431372549, "no_caption_prob": 0.00023045735724736005}, {"id": 462, "seek": 285300, "start": 2861.0, "end": 2866.0, "text": " But it really it's just all primitives, right? By definition.", "tokens": [50364, 400, 2049, 300, 1542, 411, 613, 25879, 411, 31828, 13, 400, 31828, 307, 588, 2295, 1496, 13, 31828, 307, 869, 7877, 13, 1468, 380, 483, 385, 2085, 13, 50764, 50764, 583, 309, 534, 309, 311, 445, 439, 2886, 38970, 11, 558, 30, 3146, 7123, 13, 51014, 51014, 1042, 11, 572, 11, 570, 6565, 293, 41011, 366, 14154, 3467, 13, 51364, 51364, 6068, 729, 406, 312, 4888, 2886, 38970, 30, 286, 500, 380, 458, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10796054204305013, "compression_ratio": 1.446078431372549, "no_caption_prob": 0.00023045735724736005}, {"id": 463, "seek": 285300, "start": 2866.0, "end": 2873.0, "text": " Well, no, because objects and arrays are compound types.", "tokens": [50364, 400, 2049, 300, 1542, 411, 613, 25879, 411, 31828, 13, 400, 31828, 307, 588, 2295, 1496, 13, 31828, 307, 869, 7877, 13, 1468, 380, 483, 385, 2085, 13, 50764, 50764, 583, 309, 534, 309, 311, 445, 439, 2886, 38970, 11, 558, 30, 3146, 7123, 13, 51014, 51014, 1042, 11, 572, 11, 570, 6565, 293, 41011, 366, 14154, 3467, 13, 51364, 51364, 6068, 729, 406, 312, 4888, 2886, 38970, 30, 286, 500, 380, 458, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10796054204305013, "compression_ratio": 1.446078431372549, "no_caption_prob": 0.00023045735724736005}, {"id": 464, "seek": 285300, "start": 2873.0, "end": 2876.0, "text": " Would those not be considered primitives? I don't know.", "tokens": [50364, 400, 2049, 300, 1542, 411, 613, 25879, 411, 31828, 13, 400, 31828, 307, 588, 2295, 1496, 13, 31828, 307, 869, 7877, 13, 1468, 380, 483, 385, 2085, 13, 50764, 50764, 583, 309, 534, 309, 311, 445, 439, 2886, 38970, 11, 558, 30, 3146, 7123, 13, 51014, 51014, 1042, 11, 572, 11, 570, 6565, 293, 41011, 366, 14154, 3467, 13, 51364, 51364, 6068, 729, 406, 312, 4888, 2886, 38970, 30, 286, 500, 380, 458, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10796054204305013, "compression_ratio": 1.446078431372549, "no_caption_prob": 0.00023045735724736005}, {"id": 465, "seek": 287600, "start": 2876.0, "end": 2886.0, "text": " Well, they contain other, in a way they're primitive, but they contain other kinds of primitives, including themselves.", "tokens": [50364, 1042, 11, 436, 5304, 661, 11, 294, 257, 636, 436, 434, 28540, 11, 457, 436, 5304, 661, 3685, 295, 2886, 38970, 11, 3009, 2969, 13, 50864, 50864, 865, 11, 286, 478, 406, 988, 498, 300, 576, 12120, 312, 4888, 257, 28540, 420, 406, 13, 51114, 51114, 286, 2041, 436, 434, 28540, 294, 257, 636, 11, 457, 436, 500, 380, 362, 604, 9274, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1538164651215966, "compression_ratio": 1.6729559748427674, "no_caption_prob": 6.502187898149714e-05}, {"id": 466, "seek": 287600, "start": 2886.0, "end": 2891.0, "text": " Yeah, I'm not sure if that would technically be considered a primitive or not.", "tokens": [50364, 1042, 11, 436, 5304, 661, 11, 294, 257, 636, 436, 434, 28540, 11, 457, 436, 5304, 661, 3685, 295, 2886, 38970, 11, 3009, 2969, 13, 50864, 50864, 865, 11, 286, 478, 406, 988, 498, 300, 576, 12120, 312, 4888, 257, 28540, 420, 406, 13, 51114, 51114, 286, 2041, 436, 434, 28540, 294, 257, 636, 11, 457, 436, 500, 380, 362, 604, 9274, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1538164651215966, "compression_ratio": 1.6729559748427674, "no_caption_prob": 6.502187898149714e-05}, {"id": 467, "seek": 287600, "start": 2891.0, "end": 2899.0, "text": " I guess they're primitive in a way, but they don't have any domain.", "tokens": [50364, 1042, 11, 436, 5304, 661, 11, 294, 257, 636, 436, 434, 28540, 11, 457, 436, 5304, 661, 3685, 295, 2886, 38970, 11, 3009, 2969, 13, 50864, 50864, 865, 11, 286, 478, 406, 988, 498, 300, 576, 12120, 312, 4888, 257, 28540, 420, 406, 13, 51114, 51114, 286, 2041, 436, 434, 28540, 294, 257, 636, 11, 457, 436, 500, 380, 362, 604, 9274, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1538164651215966, "compression_ratio": 1.6729559748427674, "no_caption_prob": 6.502187898149714e-05}, {"id": 468, "seek": 289900, "start": 2899.0, "end": 2907.0, "text": " Exactly. They are devoid of domain semantics inherently. And because it's just a transfer format.", "tokens": [50364, 7587, 13, 814, 366, 1905, 17079, 295, 9274, 4361, 45298, 27993, 13, 400, 570, 309, 311, 445, 257, 5003, 7877, 13, 50764, 50764, 865, 13, 400, 286, 914, 11, 754, 498, 291, 362, 411, 257, 1329, 295, 3642, 412, 472, 935, 294, 428, 3089, 3096, 11, 309, 393, 312, 4888, 257, 1090, 1496, 9274, 1433, 13, 51364, 51364, 583, 1071, 4171, 11, 1071, 644, 295, 3089, 3096, 11, 309, 727, 312, 4888, 28540, 11, 7263, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12803088426589965, "compression_ratio": 1.5598086124401913, "no_caption_prob": 2.1112060494488105e-05}, {"id": 469, "seek": 289900, "start": 2907.0, "end": 2919.0, "text": " Yeah. And I mean, even if you have like a list of books at one point in your code base, it can be considered a high level domain term.", "tokens": [50364, 7587, 13, 814, 366, 1905, 17079, 295, 9274, 4361, 45298, 27993, 13, 400, 570, 309, 311, 445, 257, 5003, 7877, 13, 50764, 50764, 865, 13, 400, 286, 914, 11, 754, 498, 291, 362, 411, 257, 1329, 295, 3642, 412, 472, 935, 294, 428, 3089, 3096, 11, 309, 393, 312, 4888, 257, 1090, 1496, 9274, 1433, 13, 51364, 51364, 583, 1071, 4171, 11, 1071, 644, 295, 3089, 3096, 11, 309, 727, 312, 4888, 28540, 11, 7263, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12803088426589965, "compression_ratio": 1.5598086124401913, "no_caption_prob": 2.1112060494488105e-05}, {"id": 470, "seek": 289900, "start": 2919.0, "end": 2926.0, "text": " But another aspect, another part of code base, it could be considered primitive, potentially.", "tokens": [50364, 7587, 13, 814, 366, 1905, 17079, 295, 9274, 4361, 45298, 27993, 13, 400, 570, 309, 311, 445, 257, 5003, 7877, 13, 50764, 50764, 865, 13, 400, 286, 914, 11, 754, 498, 291, 362, 411, 257, 1329, 295, 3642, 412, 472, 935, 294, 428, 3089, 3096, 11, 309, 393, 312, 4888, 257, 1090, 1496, 9274, 1433, 13, 51364, 51364, 583, 1071, 4171, 11, 1071, 644, 295, 3089, 3096, 11, 309, 727, 312, 4888, 28540, 11, 7263, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.12803088426589965, "compression_ratio": 1.5598086124401913, "no_caption_prob": 2.1112060494488105e-05}, {"id": 471, "seek": 292600, "start": 2926.0, "end": 2932.0, "text": " Because you have a list of books for this, you have a list of books for that. And maybe you want different types for each of those.", "tokens": [50364, 1436, 291, 362, 257, 1329, 295, 3642, 337, 341, 11, 291, 362, 257, 1329, 295, 3642, 337, 300, 13, 400, 1310, 291, 528, 819, 3467, 337, 1184, 295, 729, 13, 50664, 50664, 1779, 11, 558, 13, 50764, 50764, 8503, 746, 307, 4888, 28540, 3879, 5946, 322, 428, 9274, 11, 286, 519, 13, 50964, 50964, 865, 11, 558, 13, 400, 370, 411, 437, 2049, 2314, 307, 321, 600, 658, 11, 291, 458, 11, 1310, 291, 362, 411, 257, 19907, 322, 48526, 7154, 300, 291, 434, 1228, 337, 428, 31828, 9362, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1069901446078686, "compression_ratio": 1.6206896551724137, "no_caption_prob": 2.3552169295726344e-05}, {"id": 472, "seek": 292600, "start": 2932.0, "end": 2934.0, "text": " Right, right.", "tokens": [50364, 1436, 291, 362, 257, 1329, 295, 3642, 337, 341, 11, 291, 362, 257, 1329, 295, 3642, 337, 300, 13, 400, 1310, 291, 528, 819, 3467, 337, 1184, 295, 729, 13, 50664, 50664, 1779, 11, 558, 13, 50764, 50764, 8503, 746, 307, 4888, 28540, 3879, 5946, 322, 428, 9274, 11, 286, 519, 13, 50964, 50964, 865, 11, 558, 13, 400, 370, 411, 437, 2049, 2314, 307, 321, 600, 658, 11, 291, 458, 11, 1310, 291, 362, 411, 257, 19907, 322, 48526, 7154, 300, 291, 434, 1228, 337, 428, 31828, 9362, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1069901446078686, "compression_ratio": 1.6206896551724137, "no_caption_prob": 2.3552169295726344e-05}, {"id": 473, "seek": 292600, "start": 2934.0, "end": 2938.0, "text": " Whether something is considered primitive totally depends on your domain, I think.", "tokens": [50364, 1436, 291, 362, 257, 1329, 295, 3642, 337, 341, 11, 291, 362, 257, 1329, 295, 3642, 337, 300, 13, 400, 1310, 291, 528, 819, 3467, 337, 1184, 295, 729, 13, 50664, 50664, 1779, 11, 558, 13, 50764, 50764, 8503, 746, 307, 4888, 28540, 3879, 5946, 322, 428, 9274, 11, 286, 519, 13, 50964, 50964, 865, 11, 558, 13, 400, 370, 411, 437, 2049, 2314, 307, 321, 600, 658, 11, 291, 458, 11, 1310, 291, 362, 411, 257, 19907, 322, 48526, 7154, 300, 291, 434, 1228, 337, 428, 31828, 9362, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1069901446078686, "compression_ratio": 1.6206896551724137, "no_caption_prob": 2.3552169295726344e-05}, {"id": 474, "seek": 292600, "start": 2938.0, "end": 2949.0, "text": " Yeah, right. And so like what often happens is we've got, you know, maybe you have like a Ruby on Rails server that you're using for your JSON API.", "tokens": [50364, 1436, 291, 362, 257, 1329, 295, 3642, 337, 341, 11, 291, 362, 257, 1329, 295, 3642, 337, 300, 13, 400, 1310, 291, 528, 819, 3467, 337, 1184, 295, 729, 13, 50664, 50664, 1779, 11, 558, 13, 50764, 50764, 8503, 746, 307, 4888, 28540, 3879, 5946, 322, 428, 9274, 11, 286, 519, 13, 50964, 50964, 865, 11, 558, 13, 400, 370, 411, 437, 2049, 2314, 307, 321, 600, 658, 11, 291, 458, 11, 1310, 291, 362, 411, 257, 19907, 322, 48526, 7154, 300, 291, 434, 1228, 337, 428, 31828, 9362, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1069901446078686, "compression_ratio": 1.6206896551724137, "no_caption_prob": 2.3552169295726344e-05}, {"id": 475, "seek": 294900, "start": 2949.0, "end": 2961.0, "text": " Then you get that data from Elm in your Ruby on Rails code base. You might have some nice classes that are abstracting away a few things and how to access a particular part of the database.", "tokens": [50364, 1396, 291, 483, 300, 1412, 490, 2699, 76, 294, 428, 19907, 322, 48526, 3089, 3096, 13, 509, 1062, 362, 512, 1481, 5359, 300, 366, 12649, 278, 1314, 257, 1326, 721, 293, 577, 281, 2105, 257, 1729, 644, 295, 264, 8149, 13, 50964, 50964, 400, 291, 600, 658, 613, 11, 291, 458, 11, 439, 613, 18491, 300, 366, 1333, 295, 10379, 807, 613, 12649, 626, 291, 362, 294, 428, 19907, 3089, 3096, 13, 51364, 51364, 583, 550, 291, 352, 293, 291, 483, 439, 341, 1412, 13, 400, 550, 19907, 575, 281, 584, 11, 731, 11, 510, 307, 512, 31828, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.058156194038761475, "compression_ratio": 1.7317073170731707, "no_caption_prob": 1.922231967910193e-05}, {"id": 476, "seek": 294900, "start": 2961.0, "end": 2969.0, "text": " And you've got these, you know, all these constraints that are sort of represented through these abstractions you have in your Ruby code base.", "tokens": [50364, 1396, 291, 483, 300, 1412, 490, 2699, 76, 294, 428, 19907, 322, 48526, 3089, 3096, 13, 509, 1062, 362, 512, 1481, 5359, 300, 366, 12649, 278, 1314, 257, 1326, 721, 293, 577, 281, 2105, 257, 1729, 644, 295, 264, 8149, 13, 50964, 50964, 400, 291, 600, 658, 613, 11, 291, 458, 11, 439, 613, 18491, 300, 366, 1333, 295, 10379, 807, 613, 12649, 626, 291, 362, 294, 428, 19907, 3089, 3096, 13, 51364, 51364, 583, 550, 291, 352, 293, 291, 483, 439, 341, 1412, 13, 400, 550, 19907, 575, 281, 584, 11, 731, 11, 510, 307, 512, 31828, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.058156194038761475, "compression_ratio": 1.7317073170731707, "no_caption_prob": 1.922231967910193e-05}, {"id": 477, "seek": 294900, "start": 2969.0, "end": 2976.0, "text": " But then you go and you get all this data. And then Ruby has to say, well, here is some JSON.", "tokens": [50364, 1396, 291, 483, 300, 1412, 490, 2699, 76, 294, 428, 19907, 322, 48526, 3089, 3096, 13, 509, 1062, 362, 512, 1481, 5359, 300, 366, 12649, 278, 1314, 257, 1326, 721, 293, 577, 281, 2105, 257, 1729, 644, 295, 264, 8149, 13, 50964, 50964, 400, 291, 600, 658, 613, 11, 291, 458, 11, 439, 613, 18491, 300, 366, 1333, 295, 10379, 807, 613, 12649, 626, 291, 362, 294, 428, 19907, 3089, 3096, 13, 51364, 51364, 583, 550, 291, 352, 293, 291, 483, 439, 341, 1412, 13, 400, 550, 19907, 575, 281, 584, 11, 731, 11, 510, 307, 512, 31828, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.058156194038761475, "compression_ratio": 1.7317073170731707, "no_caption_prob": 1.922231967910193e-05}, {"id": 478, "seek": 297600, "start": 2976.0, "end": 2986.0, "text": " It has to send the lowest common denominator. And now all those semantics in order to be serialized and deserialized, you lose all that semantic information.", "tokens": [50364, 467, 575, 281, 2845, 264, 12437, 2689, 20687, 13, 400, 586, 439, 729, 4361, 45298, 294, 1668, 281, 312, 17436, 1602, 293, 730, 260, 831, 1602, 11, 291, 3624, 439, 300, 47982, 1589, 13, 50864, 50864, 509, 3624, 439, 729, 9274, 10392, 293, 291, 362, 281, 16877, 552, 6063, 13, 51064, 51064, 509, 820, 362, 1143, 552, 456, 13, 51164, 51164, 1042, 11, 767, 11, 309, 311, 588, 2074, 13, 286, 600, 668, 1953, 466, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09328358850361389, "compression_ratio": 1.5902439024390245, "no_caption_prob": 5.562017759075388e-05}, {"id": 479, "seek": 297600, "start": 2986.0, "end": 2990.0, "text": " You lose all those domain concepts and you have to rebuild them somehow.", "tokens": [50364, 467, 575, 281, 2845, 264, 12437, 2689, 20687, 13, 400, 586, 439, 729, 4361, 45298, 294, 1668, 281, 312, 17436, 1602, 293, 730, 260, 831, 1602, 11, 291, 3624, 439, 300, 47982, 1589, 13, 50864, 50864, 509, 3624, 439, 729, 9274, 10392, 293, 291, 362, 281, 16877, 552, 6063, 13, 51064, 51064, 509, 820, 362, 1143, 552, 456, 13, 51164, 51164, 1042, 11, 767, 11, 309, 311, 588, 2074, 13, 286, 600, 668, 1953, 466, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09328358850361389, "compression_ratio": 1.5902439024390245, "no_caption_prob": 5.562017759075388e-05}, {"id": 480, "seek": 297600, "start": 2990.0, "end": 2992.0, "text": " You should have used them there.", "tokens": [50364, 467, 575, 281, 2845, 264, 12437, 2689, 20687, 13, 400, 586, 439, 729, 4361, 45298, 294, 1668, 281, 312, 17436, 1602, 293, 730, 260, 831, 1602, 11, 291, 3624, 439, 300, 47982, 1589, 13, 50864, 50864, 509, 3624, 439, 729, 9274, 10392, 293, 291, 362, 281, 16877, 552, 6063, 13, 51064, 51064, 509, 820, 362, 1143, 552, 456, 13, 51164, 51164, 1042, 11, 767, 11, 309, 311, 588, 2074, 13, 286, 600, 668, 1953, 466, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09328358850361389, "compression_ratio": 1.5902439024390245, "no_caption_prob": 5.562017759075388e-05}, {"id": 481, "seek": 297600, "start": 2992.0, "end": 2995.0, "text": " Well, actually, it's very true. I've been thinking about that.", "tokens": [50364, 467, 575, 281, 2845, 264, 12437, 2689, 20687, 13, 400, 586, 439, 729, 4361, 45298, 294, 1668, 281, 312, 17436, 1602, 293, 730, 260, 831, 1602, 11, 291, 3624, 439, 300, 47982, 1589, 13, 50864, 50864, 509, 3624, 439, 729, 9274, 10392, 293, 291, 362, 281, 16877, 552, 6063, 13, 51064, 51064, 509, 820, 362, 1143, 552, 456, 13, 51164, 51164, 1042, 11, 767, 11, 309, 311, 588, 2074, 13, 286, 600, 668, 1953, 466, 300, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.09328358850361389, "compression_ratio": 1.5902439024390245, "no_caption_prob": 5.562017759075388e-05}, {"id": 482, "seek": 299500, "start": 2995.0, "end": 3007.0, "text": " How powerful that is to actually have the exact same context and semantics and that glue code for serializing and deserializing. It's not just like tedious.", "tokens": [50364, 1012, 4005, 300, 307, 281, 767, 362, 264, 1900, 912, 4319, 293, 4361, 45298, 293, 300, 8998, 3089, 337, 17436, 3319, 293, 730, 260, 831, 3319, 13, 467, 311, 406, 445, 411, 38284, 13, 50964, 50964, 467, 307, 4470, 88, 13, 509, 3624, 47982, 1589, 13, 509, 3624, 1589, 466, 264, 18491, 13, 51214, 51214, 583, 294, 45691, 11, 291, 500, 380, 291, 458, 437, 393, 498, 291, 362, 364, 42687, 2010, 11, 291, 362, 439, 613, 1481, 18491, 321, 2825, 466, 294, 45691, 300, 300, 13165, 281, 264, 1412, 300, 311, 885, 13233, 292, 293, 439, 295, 341, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11548222028292142, "compression_ratio": 1.766798418972332, "no_caption_prob": 2.9310185709618963e-05}, {"id": 483, "seek": 299500, "start": 3007.0, "end": 3012.0, "text": " It is lossy. You lose semantic information. You lose information about the constraints.", "tokens": [50364, 1012, 4005, 300, 307, 281, 767, 362, 264, 1900, 912, 4319, 293, 4361, 45298, 293, 300, 8998, 3089, 337, 17436, 3319, 293, 730, 260, 831, 3319, 13, 467, 311, 406, 445, 411, 38284, 13, 50964, 50964, 467, 307, 4470, 88, 13, 509, 3624, 47982, 1589, 13, 509, 3624, 1589, 466, 264, 18491, 13, 51214, 51214, 583, 294, 45691, 11, 291, 500, 380, 291, 458, 437, 393, 498, 291, 362, 364, 42687, 2010, 11, 291, 362, 439, 613, 1481, 18491, 321, 2825, 466, 294, 45691, 300, 300, 13165, 281, 264, 1412, 300, 311, 885, 13233, 292, 293, 439, 295, 341, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11548222028292142, "compression_ratio": 1.766798418972332, "no_caption_prob": 2.9310185709618963e-05}, {"id": 484, "seek": 299500, "start": 3012.0, "end": 3023.0, "text": " But in Lambda, you don't you know what can if you have an opaque type, you have all these nice constraints we talked about in Lambda that that applies to the data that's being persisted and all of this.", "tokens": [50364, 1012, 4005, 300, 307, 281, 767, 362, 264, 1900, 912, 4319, 293, 4361, 45298, 293, 300, 8998, 3089, 337, 17436, 3319, 293, 730, 260, 831, 3319, 13, 467, 311, 406, 445, 411, 38284, 13, 50964, 50964, 467, 307, 4470, 88, 13, 509, 3624, 47982, 1589, 13, 509, 3624, 1589, 466, 264, 18491, 13, 51214, 51214, 583, 294, 45691, 11, 291, 500, 380, 291, 458, 437, 393, 498, 291, 362, 364, 42687, 2010, 11, 291, 362, 439, 613, 1481, 18491, 321, 2825, 466, 294, 45691, 300, 300, 13165, 281, 264, 1412, 300, 311, 885, 13233, 292, 293, 439, 295, 341, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.11548222028292142, "compression_ratio": 1.766798418972332, "no_caption_prob": 2.9310185709618963e-05}, {"id": 485, "seek": 302300, "start": 3023.0, "end": 3029.0, "text": " Well, you have full stack invariants, which is pretty, pretty powerful stuff.", "tokens": [50364, 1042, 11, 291, 362, 1577, 8630, 33270, 1719, 11, 597, 307, 1238, 11, 1238, 4005, 1507, 13, 50664, 50664, 407, 11, 1338, 11, 300, 3641, 3742, 257, 688, 295, 4330, 13, 1079, 13, 50864, 50864, 11676, 82, 300, 393, 1051, 412, 43430, 293, 979, 8616, 13, 1079, 13, 51014, 51014, 865, 13, 400, 11, 291, 458, 11, 370, 286, 914, 11, 577, 360, 291, 3191, 341, 1154, 30, 51264, 51264, 4894, 13, 509, 393, 291, 393, 764, 45691, 13, 400, 498, 291, 434, 406, 1228, 45691, 11, 445, 312, 3650, 300, 291, 434, 7027, 47982, 1589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.12736815273171603, "compression_ratio": 1.5541125541125542, "no_caption_prob": 6.0140569985378534e-05}, {"id": 486, "seek": 302300, "start": 3029.0, "end": 3033.0, "text": " So, yeah, that avoids a lot of danger. Yes.", "tokens": [50364, 1042, 11, 291, 362, 1577, 8630, 33270, 1719, 11, 597, 307, 1238, 11, 1238, 4005, 1507, 13, 50664, 50664, 407, 11, 1338, 11, 300, 3641, 3742, 257, 688, 295, 4330, 13, 1079, 13, 50864, 50864, 11676, 82, 300, 393, 1051, 412, 43430, 293, 979, 8616, 13, 1079, 13, 51014, 51014, 865, 13, 400, 11, 291, 458, 11, 370, 286, 914, 11, 577, 360, 291, 3191, 341, 1154, 30, 51264, 51264, 4894, 13, 509, 393, 291, 393, 764, 45691, 13, 400, 498, 291, 434, 406, 1228, 45691, 11, 445, 312, 3650, 300, 291, 434, 7027, 47982, 1589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.12736815273171603, "compression_ratio": 1.5541125541125542, "no_caption_prob": 6.0140569985378534e-05}, {"id": 487, "seek": 302300, "start": 3033.0, "end": 3036.0, "text": " Problems that can happen at encoding and decoding. Yes.", "tokens": [50364, 1042, 11, 291, 362, 1577, 8630, 33270, 1719, 11, 597, 307, 1238, 11, 1238, 4005, 1507, 13, 50664, 50664, 407, 11, 1338, 11, 300, 3641, 3742, 257, 688, 295, 4330, 13, 1079, 13, 50864, 50864, 11676, 82, 300, 393, 1051, 412, 43430, 293, 979, 8616, 13, 1079, 13, 51014, 51014, 865, 13, 400, 11, 291, 458, 11, 370, 286, 914, 11, 577, 360, 291, 3191, 341, 1154, 30, 51264, 51264, 4894, 13, 509, 393, 291, 393, 764, 45691, 13, 400, 498, 291, 434, 406, 1228, 45691, 11, 445, 312, 3650, 300, 291, 434, 7027, 47982, 1589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.12736815273171603, "compression_ratio": 1.5541125541125542, "no_caption_prob": 6.0140569985378534e-05}, {"id": 488, "seek": 302300, "start": 3036.0, "end": 3041.0, "text": " Yeah. And, you know, so I mean, how do you fix this problem?", "tokens": [50364, 1042, 11, 291, 362, 1577, 8630, 33270, 1719, 11, 597, 307, 1238, 11, 1238, 4005, 1507, 13, 50664, 50664, 407, 11, 1338, 11, 300, 3641, 3742, 257, 688, 295, 4330, 13, 1079, 13, 50864, 50864, 11676, 82, 300, 393, 1051, 412, 43430, 293, 979, 8616, 13, 1079, 13, 51014, 51014, 865, 13, 400, 11, 291, 458, 11, 370, 286, 914, 11, 577, 360, 291, 3191, 341, 1154, 30, 51264, 51264, 4894, 13, 509, 393, 291, 393, 764, 45691, 13, 400, 498, 291, 434, 406, 1228, 45691, 11, 445, 312, 3650, 300, 291, 434, 7027, 47982, 1589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.12736815273171603, "compression_ratio": 1.5541125541125542, "no_caption_prob": 6.0140569985378534e-05}, {"id": 489, "seek": 302300, "start": 3041.0, "end": 3049.0, "text": " Sure. You can you can use Lambda. And if you're not using Lambda, just be aware that you're losing semantic information.", "tokens": [50364, 1042, 11, 291, 362, 1577, 8630, 33270, 1719, 11, 597, 307, 1238, 11, 1238, 4005, 1507, 13, 50664, 50664, 407, 11, 1338, 11, 300, 3641, 3742, 257, 688, 295, 4330, 13, 1079, 13, 50864, 50864, 11676, 82, 300, 393, 1051, 412, 43430, 293, 979, 8616, 13, 1079, 13, 51014, 51014, 865, 13, 400, 11, 291, 458, 11, 370, 286, 914, 11, 577, 360, 291, 3191, 341, 1154, 30, 51264, 51264, 4894, 13, 509, 393, 291, 393, 764, 45691, 13, 400, 498, 291, 434, 406, 1228, 45691, 11, 445, 312, 3650, 300, 291, 434, 7027, 47982, 1589, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.12736815273171603, "compression_ratio": 1.5541125541125542, "no_caption_prob": 6.0140569985378534e-05}, {"id": 490, "seek": 304900, "start": 3049.0, "end": 3057.0, "text": " And even if you're using something like GraphQL, that gives you more safety for accessing those low level values.", "tokens": [50364, 400, 754, 498, 291, 434, 1228, 746, 411, 21884, 13695, 11, 300, 2709, 291, 544, 4514, 337, 26440, 729, 2295, 1496, 4190, 13, 50764, 50764, 400, 309, 2709, 291, 257, 1326, 47982, 4190, 411, 21884, 13695, 575, 613, 613, 39684, 3467, 11, 597, 393, 312, 1596, 1481, 337, 1566, 341, 8855, 341, 8855, 565, 13, 51314, 51314, 400, 341, 307, 577, 291, 979, 1429, 300, 13, 639, 8855, 257, 4195, 7348, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.05800458004600123, "compression_ratio": 1.6318407960199004, "no_caption_prob": 0.00010070428834296763}, {"id": 491, "seek": 304900, "start": 3057.0, "end": 3068.0, "text": " And it gives you a few semantic values like GraphQL has these these scalar types, which can be quite nice for saying this represents this represents time.", "tokens": [50364, 400, 754, 498, 291, 434, 1228, 746, 411, 21884, 13695, 11, 300, 2709, 291, 544, 4514, 337, 26440, 729, 2295, 1496, 4190, 13, 50764, 50764, 400, 309, 2709, 291, 257, 1326, 47982, 4190, 411, 21884, 13695, 575, 613, 613, 39684, 3467, 11, 597, 393, 312, 1596, 1481, 337, 1566, 341, 8855, 341, 8855, 565, 13, 51314, 51314, 400, 341, 307, 577, 291, 979, 1429, 300, 13, 639, 8855, 257, 4195, 7348, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.05800458004600123, "compression_ratio": 1.6318407960199004, "no_caption_prob": 0.00010070428834296763}, {"id": 492, "seek": 304900, "start": 3068.0, "end": 3071.0, "text": " And this is how you decode that. This represents a user ID.", "tokens": [50364, 400, 754, 498, 291, 434, 1228, 746, 411, 21884, 13695, 11, 300, 2709, 291, 544, 4514, 337, 26440, 729, 2295, 1496, 4190, 13, 50764, 50764, 400, 309, 2709, 291, 257, 1326, 47982, 4190, 411, 21884, 13695, 575, 613, 613, 39684, 3467, 11, 597, 393, 312, 1596, 1481, 337, 1566, 341, 8855, 341, 8855, 565, 13, 51314, 51314, 400, 341, 307, 577, 291, 979, 1429, 300, 13, 639, 8855, 257, 4195, 7348, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.05800458004600123, "compression_ratio": 1.6318407960199004, "no_caption_prob": 0.00010070428834296763}, {"id": 493, "seek": 307100, "start": 3071.0, "end": 3088.0, "text": " That's great. But still, you are crossing between paradigms and and any invariants you had in your Ruby on Rails backend are not automatically there just because you use these GraphQL codecs and that sort of thing.", "tokens": [50364, 663, 311, 869, 13, 583, 920, 11, 291, 366, 14712, 1296, 13480, 328, 2592, 293, 293, 604, 33270, 1719, 291, 632, 294, 428, 19907, 322, 48526, 38087, 366, 406, 6772, 456, 445, 570, 291, 764, 613, 21884, 13695, 3089, 14368, 293, 300, 1333, 295, 551, 13, 51214, 51214, 509, 362, 281, 312, 588, 30515, 466, 264, 4364, 300, 291, 434, 6530, 293, 519, 466, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05407418864113944, "compression_ratio": 1.4807692307692308, "no_caption_prob": 9.761033288668841e-05}, {"id": 494, "seek": 307100, "start": 3088.0, "end": 3094.0, "text": " You have to be very deliberate about the contract that you're providing and think about that.", "tokens": [50364, 663, 311, 869, 13, 583, 920, 11, 291, 366, 14712, 1296, 13480, 328, 2592, 293, 293, 604, 33270, 1719, 291, 632, 294, 428, 19907, 322, 48526, 38087, 366, 406, 6772, 456, 445, 570, 291, 764, 613, 21884, 13695, 3089, 14368, 293, 300, 1333, 295, 551, 13, 51214, 51214, 509, 362, 281, 312, 588, 30515, 466, 264, 4364, 300, 291, 434, 6530, 293, 519, 466, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.05407418864113944, "compression_ratio": 1.4807692307692308, "no_caption_prob": 9.761033288668841e-05}, {"id": 495, "seek": 309400, "start": 3094.0, "end": 3105.0, "text": " And any time you serialize and deserialize, you have to be careful that you're preserving the contract and the semantics and the domain concepts between those two paradigms.", "tokens": [50364, 400, 604, 565, 291, 17436, 1125, 293, 730, 260, 831, 1125, 11, 291, 362, 281, 312, 5026, 300, 291, 434, 33173, 264, 4364, 293, 264, 4361, 45298, 293, 264, 9274, 10392, 1296, 729, 732, 13480, 328, 2592, 13, 50914, 50914, 286, 390, 1417, 281, 257, 1326, 295, 452, 7734, 466, 28540, 30521, 965, 957, 1702, 13, 51214, 51214, 400, 321, 434, 411, 11, 1338, 11, 300, 311, 257, 1481, 6532, 13, 467, 311, 309, 311, 1687, 4961, 337, 7140, 295, 721, 13, 51564, 51564, 400, 550, 321, 645, 411, 11, 1338, 11, 457, 321, 500, 380, 764, 309, 300, 709, 11, 767, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.059650813307717584, "compression_ratio": 1.6216216216216217, "no_caption_prob": 3.480723898974247e-05}, {"id": 496, "seek": 309400, "start": 3105.0, "end": 3111.0, "text": " I was talking to a few of my colleagues about primitive obsession today real quick.", "tokens": [50364, 400, 604, 565, 291, 17436, 1125, 293, 730, 260, 831, 1125, 11, 291, 362, 281, 312, 5026, 300, 291, 434, 33173, 264, 4364, 293, 264, 4361, 45298, 293, 264, 9274, 10392, 1296, 729, 732, 13480, 328, 2592, 13, 50914, 50914, 286, 390, 1417, 281, 257, 1326, 295, 452, 7734, 466, 28540, 30521, 965, 957, 1702, 13, 51214, 51214, 400, 321, 434, 411, 11, 1338, 11, 300, 311, 257, 1481, 6532, 13, 467, 311, 309, 311, 1687, 4961, 337, 7140, 295, 721, 13, 51564, 51564, 400, 550, 321, 645, 411, 11, 1338, 11, 457, 321, 500, 380, 764, 309, 300, 709, 11, 767, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.059650813307717584, "compression_ratio": 1.6216216216216217, "no_caption_prob": 3.480723898974247e-05}, {"id": 497, "seek": 309400, "start": 3111.0, "end": 3118.0, "text": " And we're like, yeah, that's a nice technique. It's it's super helpful for plenty of things.", "tokens": [50364, 400, 604, 565, 291, 17436, 1125, 293, 730, 260, 831, 1125, 11, 291, 362, 281, 312, 5026, 300, 291, 434, 33173, 264, 4364, 293, 264, 4361, 45298, 293, 264, 9274, 10392, 1296, 729, 732, 13480, 328, 2592, 13, 50914, 50914, 286, 390, 1417, 281, 257, 1326, 295, 452, 7734, 466, 28540, 30521, 965, 957, 1702, 13, 51214, 51214, 400, 321, 434, 411, 11, 1338, 11, 300, 311, 257, 1481, 6532, 13, 467, 311, 309, 311, 1687, 4961, 337, 7140, 295, 721, 13, 51564, 51564, 400, 550, 321, 645, 411, 11, 1338, 11, 457, 321, 500, 380, 764, 309, 300, 709, 11, 767, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.059650813307717584, "compression_ratio": 1.6216216216216217, "no_caption_prob": 3.480723898974247e-05}, {"id": 498, "seek": 309400, "start": 3118.0, "end": 3121.0, "text": " And then we were like, yeah, but we don't use it that much, actually.", "tokens": [50364, 400, 604, 565, 291, 17436, 1125, 293, 730, 260, 831, 1125, 11, 291, 362, 281, 312, 5026, 300, 291, 434, 33173, 264, 4364, 293, 264, 4361, 45298, 293, 264, 9274, 10392, 1296, 729, 732, 13480, 328, 2592, 13, 50914, 50914, 286, 390, 1417, 281, 257, 1326, 295, 452, 7734, 466, 28540, 30521, 965, 957, 1702, 13, 51214, 51214, 400, 321, 434, 411, 11, 1338, 11, 300, 311, 257, 1481, 6532, 13, 467, 311, 309, 311, 1687, 4961, 337, 7140, 295, 721, 13, 51564, 51564, 400, 550, 321, 645, 411, 11, 1338, 11, 457, 321, 500, 380, 764, 309, 300, 709, 11, 767, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.059650813307717584, "compression_ratio": 1.6216216216216217, "no_caption_prob": 3.480723898974247e-05}, {"id": 499, "seek": 312100, "start": 3121.0, "end": 3128.0, "text": " Mm hmm. Like I said, I think that I think opaque types are one of the most underused techniques.", "tokens": [50364, 8266, 16478, 13, 1743, 286, 848, 11, 286, 519, 300, 286, 519, 42687, 3467, 366, 472, 295, 264, 881, 833, 4717, 7512, 13, 50714, 50714, 1042, 11, 572, 955, 3467, 13, 1079, 11, 457, 406, 445, 411, 777, 3467, 13, 50964, 50964, 8266, 16478, 13, 1779, 13, 1079, 13, 407, 437, 286, 914, 307, 321, 920, 362, 7140, 295, 14519, 689, 321, 445, 764, 13985, 420, 41674, 420, 558, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.18909655390559016, "compression_ratio": 1.4835164835164836, "no_caption_prob": 6.605018279515207e-05}, {"id": 500, "seek": 312100, "start": 3128.0, "end": 3133.0, "text": " Well, no big types. Yes, but not just like new types.", "tokens": [50364, 8266, 16478, 13, 1743, 286, 848, 11, 286, 519, 300, 286, 519, 42687, 3467, 366, 472, 295, 264, 881, 833, 4717, 7512, 13, 50714, 50714, 1042, 11, 572, 955, 3467, 13, 1079, 11, 457, 406, 445, 411, 777, 3467, 13, 50964, 50964, 8266, 16478, 13, 1779, 13, 1079, 13, 407, 437, 286, 914, 307, 321, 920, 362, 7140, 295, 14519, 689, 321, 445, 764, 13985, 420, 41674, 420, 558, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.18909655390559016, "compression_ratio": 1.4835164835164836, "no_caption_prob": 6.605018279515207e-05}, {"id": 501, "seek": 312100, "start": 3133.0, "end": 3142.0, "text": " Mm hmm. Right. Yes. So what I mean is we still have plenty of instances where we just use strings or integers or right.", "tokens": [50364, 8266, 16478, 13, 1743, 286, 848, 11, 286, 519, 300, 286, 519, 42687, 3467, 366, 472, 295, 264, 881, 833, 4717, 7512, 13, 50714, 50714, 1042, 11, 572, 955, 3467, 13, 1079, 11, 457, 406, 445, 411, 777, 3467, 13, 50964, 50964, 8266, 16478, 13, 1779, 13, 1079, 13, 407, 437, 286, 914, 307, 321, 920, 362, 7140, 295, 14519, 689, 321, 445, 764, 13985, 420, 41674, 420, 558, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.18909655390559016, "compression_ratio": 1.4835164835164836, "no_caption_prob": 6.605018279515207e-05}, {"id": 502, "seek": 314200, "start": 3142.0, "end": 3152.0, "text": " Booleans or whatever. Not that much Booleans, I guess. We still use a lot of primitives. And I mean, things still work pretty well.", "tokens": [50364, 23351, 24008, 420, 2035, 13, 1726, 300, 709, 23351, 24008, 11, 286, 2041, 13, 492, 920, 764, 257, 688, 295, 2886, 38970, 13, 400, 286, 914, 11, 721, 920, 589, 1238, 731, 13, 50864, 50864, 492, 500, 380, 362, 604, 2663, 466, 16493, 4190, 11, 16493, 6770, 9470, 11, 746, 411, 300, 13, 51264, 51264, 407, 286, 478, 1238, 2055, 365, 309, 11, 457, 309, 311, 920, 1481, 281, 362, 300, 4497, 10815, 300, 291, 994, 380, 2082, 721, 493, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09990971509148093, "compression_ratio": 1.5953488372093023, "no_caption_prob": 8.749523112783208e-05}, {"id": 503, "seek": 314200, "start": 3152.0, "end": 3160.0, "text": " We don't have any issues about switching values, switching argument orders, something like that.", "tokens": [50364, 23351, 24008, 420, 2035, 13, 1726, 300, 709, 23351, 24008, 11, 286, 2041, 13, 492, 920, 764, 257, 688, 295, 2886, 38970, 13, 400, 286, 914, 11, 721, 920, 589, 1238, 731, 13, 50864, 50864, 492, 500, 380, 362, 604, 2663, 466, 16493, 4190, 11, 16493, 6770, 9470, 11, 746, 411, 300, 13, 51264, 51264, 407, 286, 478, 1238, 2055, 365, 309, 11, 457, 309, 311, 920, 1481, 281, 362, 300, 4497, 10815, 300, 291, 994, 380, 2082, 721, 493, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09990971509148093, "compression_ratio": 1.5953488372093023, "no_caption_prob": 8.749523112783208e-05}, {"id": 504, "seek": 314200, "start": 3160.0, "end": 3166.0, "text": " So I'm pretty happy with it, but it's still nice to have that additional guarantee that you didn't mess things up.", "tokens": [50364, 23351, 24008, 420, 2035, 13, 1726, 300, 709, 23351, 24008, 11, 286, 2041, 13, 492, 920, 764, 257, 688, 295, 2886, 38970, 13, 400, 286, 914, 11, 721, 920, 589, 1238, 731, 13, 50864, 50864, 492, 500, 380, 362, 604, 2663, 466, 16493, 4190, 11, 16493, 6770, 9470, 11, 746, 411, 300, 13, 51264, 51264, 407, 286, 478, 1238, 2055, 365, 309, 11, 457, 309, 311, 920, 1481, 281, 362, 300, 4497, 10815, 300, 291, 994, 380, 2082, 721, 493, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.09990971509148093, "compression_ratio": 1.5953488372093023, "no_caption_prob": 8.749523112783208e-05}, {"id": 505, "seek": 316600, "start": 3166.0, "end": 3172.0, "text": " And a nice overview of what a function does or works with.", "tokens": [50364, 400, 257, 1481, 12492, 295, 437, 257, 2445, 775, 420, 1985, 365, 13, 50664, 50664, 583, 1338, 11, 286, 478, 411, 11, 820, 321, 764, 341, 544, 30, 1012, 576, 321, 352, 466, 309, 30, 50914, 50914, 6068, 321, 360, 257, 2167, 1320, 295, 264, 3089, 3096, 281, 360, 281, 652, 1203, 257, 777, 2010, 420, 820, 321, 360, 309, 26200, 379, 30, 51414, 51414, 9210, 544, 26200, 379, 11, 286, 478, 17939, 13, 583, 1338, 13, 1144, 291, 362, 604, 5192, 322, 300, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07489929842145256, "compression_ratio": 1.5424528301886793, "no_caption_prob": 5.390463047660887e-05}, {"id": 506, "seek": 316600, "start": 3172.0, "end": 3177.0, "text": " But yeah, I'm like, should we use this more? How would we go about it?", "tokens": [50364, 400, 257, 1481, 12492, 295, 437, 257, 2445, 775, 420, 1985, 365, 13, 50664, 50664, 583, 1338, 11, 286, 478, 411, 11, 820, 321, 764, 341, 544, 30, 1012, 576, 321, 352, 466, 309, 30, 50914, 50914, 6068, 321, 360, 257, 2167, 1320, 295, 264, 3089, 3096, 281, 360, 281, 652, 1203, 257, 777, 2010, 420, 820, 321, 360, 309, 26200, 379, 30, 51414, 51414, 9210, 544, 26200, 379, 11, 286, 478, 17939, 13, 583, 1338, 13, 1144, 291, 362, 604, 5192, 322, 300, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07489929842145256, "compression_ratio": 1.5424528301886793, "no_caption_prob": 5.390463047660887e-05}, {"id": 507, "seek": 316600, "start": 3177.0, "end": 3187.0, "text": " Would we do a single pass of the code base to do to make everything a new type or should we do it incrementally?", "tokens": [50364, 400, 257, 1481, 12492, 295, 437, 257, 2445, 775, 420, 1985, 365, 13, 50664, 50664, 583, 1338, 11, 286, 478, 411, 11, 820, 321, 764, 341, 544, 30, 1012, 576, 321, 352, 466, 309, 30, 50914, 50914, 6068, 321, 360, 257, 2167, 1320, 295, 264, 3089, 3096, 281, 360, 281, 652, 1203, 257, 777, 2010, 420, 820, 321, 360, 309, 26200, 379, 30, 51414, 51414, 9210, 544, 26200, 379, 11, 286, 478, 17939, 13, 583, 1338, 13, 1144, 291, 362, 604, 5192, 322, 300, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07489929842145256, "compression_ratio": 1.5424528301886793, "no_caption_prob": 5.390463047660887e-05}, {"id": 508, "seek": 316600, "start": 3187.0, "end": 3192.0, "text": " Probably more incrementally, I'm guessing. But yeah. Do you have any advice on that?", "tokens": [50364, 400, 257, 1481, 12492, 295, 437, 257, 2445, 775, 420, 1985, 365, 13, 50664, 50664, 583, 1338, 11, 286, 478, 411, 11, 820, 321, 764, 341, 544, 30, 1012, 576, 321, 352, 466, 309, 30, 50914, 50914, 6068, 321, 360, 257, 2167, 1320, 295, 264, 3089, 3096, 281, 360, 281, 652, 1203, 257, 777, 2010, 420, 820, 321, 360, 309, 26200, 379, 30, 51414, 51414, 9210, 544, 26200, 379, 11, 286, 478, 17939, 13, 583, 1338, 13, 1144, 291, 362, 604, 5192, 322, 300, 30, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07489929842145256, "compression_ratio": 1.5424528301886793, "no_caption_prob": 5.390463047660887e-05}, {"id": 509, "seek": 319200, "start": 3192.0, "end": 3201.0, "text": " I mean, yeah, I think as with any of this stuff, it takes judgment and creativity to apply it.", "tokens": [50364, 286, 914, 11, 1338, 11, 286, 519, 382, 365, 604, 295, 341, 1507, 11, 309, 2516, 12216, 293, 12915, 281, 3079, 309, 13, 50814, 50814, 583, 286, 576, 584, 472, 551, 300, 286, 519, 466, 307, 411, 286, 411, 341, 13, 286, 411, 341, 1558, 13, 51214, 51214, 1171, 1365, 11, 561, 751, 466, 2698, 16141, 3089, 11, 558, 30, 400, 291, 600, 658, 411, 11, 360, 286, 2464, 257, 411, 498, 291, 362, 257, 2871, 300, 1619, 11, 2264, 11, 510, 311, 437, 341, 2445, 307, 884, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12599071379630797, "compression_ratio": 1.5486725663716814, "no_caption_prob": 1.1299875950498972e-05}, {"id": 510, "seek": 319200, "start": 3201.0, "end": 3209.0, "text": " But I would say one thing that I think about is like I like this. I like this idea.", "tokens": [50364, 286, 914, 11, 1338, 11, 286, 519, 382, 365, 604, 295, 341, 1507, 11, 309, 2516, 12216, 293, 12915, 281, 3079, 309, 13, 50814, 50814, 583, 286, 576, 584, 472, 551, 300, 286, 519, 466, 307, 411, 286, 411, 341, 13, 286, 411, 341, 1558, 13, 51214, 51214, 1171, 1365, 11, 561, 751, 466, 2698, 16141, 3089, 11, 558, 30, 400, 291, 600, 658, 411, 11, 360, 286, 2464, 257, 411, 498, 291, 362, 257, 2871, 300, 1619, 11, 2264, 11, 510, 311, 437, 341, 2445, 307, 884, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12599071379630797, "compression_ratio": 1.5486725663716814, "no_caption_prob": 1.1299875950498972e-05}, {"id": 511, "seek": 319200, "start": 3209.0, "end": 3220.0, "text": " For example, people talk about self describing code, right? And you've got like, do I write a like if you have a comment that says, OK, here's what this function is doing.", "tokens": [50364, 286, 914, 11, 1338, 11, 286, 519, 382, 365, 604, 295, 341, 1507, 11, 309, 2516, 12216, 293, 12915, 281, 3079, 309, 13, 50814, 50814, 583, 286, 576, 584, 472, 551, 300, 286, 519, 466, 307, 411, 286, 411, 341, 13, 286, 411, 341, 1558, 13, 51214, 51214, 1171, 1365, 11, 561, 751, 466, 2698, 16141, 3089, 11, 558, 30, 400, 291, 600, 658, 411, 11, 360, 286, 2464, 257, 411, 498, 291, 362, 257, 2871, 300, 1619, 11, 2264, 11, 510, 311, 437, 341, 2445, 307, 884, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.12599071379630797, "compression_ratio": 1.5486725663716814, "no_caption_prob": 1.1299875950498972e-05}, {"id": 512, "seek": 322000, "start": 3220.0, "end": 3227.0, "text": " It's and only use it in this way. And well, OK, maybe you can turn that into the function name.", "tokens": [50364, 467, 311, 293, 787, 764, 309, 294, 341, 636, 13, 400, 731, 11, 2264, 11, 1310, 291, 393, 1261, 300, 666, 264, 2445, 1315, 13, 50714, 50714, 4387, 988, 300, 341, 24922, 6770, 307, 1128, 4018, 13, 1079, 13, 1779, 13, 1779, 13, 50964, 50964, 407, 604, 565, 291, 291, 915, 1803, 7935, 281, 2464, 257, 2871, 420, 362, 11730, 1720, 420, 2903, 281, 2618, 294, 257, 2235, 5308, 577, 309, 820, 312, 1143, 420, 721, 411, 300, 11, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09945306433252542, "compression_ratio": 1.4663677130044843, "no_caption_prob": 0.0002066131419269368}, {"id": 513, "seek": 322000, "start": 3227.0, "end": 3232.0, "text": " Make sure that this integer argument is never zero. Yes. Right. Right.", "tokens": [50364, 467, 311, 293, 787, 764, 309, 294, 341, 636, 13, 400, 731, 11, 2264, 11, 1310, 291, 393, 1261, 300, 666, 264, 2445, 1315, 13, 50714, 50714, 4387, 988, 300, 341, 24922, 6770, 307, 1128, 4018, 13, 1079, 13, 1779, 13, 1779, 13, 50964, 50964, 407, 604, 565, 291, 291, 915, 1803, 7935, 281, 2464, 257, 2871, 420, 362, 11730, 1720, 420, 2903, 281, 2618, 294, 257, 2235, 5308, 577, 309, 820, 312, 1143, 420, 721, 411, 300, 11, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09945306433252542, "compression_ratio": 1.4663677130044843, "no_caption_prob": 0.0002066131419269368}, {"id": 514, "seek": 322000, "start": 3232.0, "end": 3241.0, "text": " So any time you you find yourself wanting to write a comment or have caveats or explain to somebody in a pull request how it should be used or things like that,", "tokens": [50364, 467, 311, 293, 787, 764, 309, 294, 341, 636, 13, 400, 731, 11, 2264, 11, 1310, 291, 393, 1261, 300, 666, 264, 2445, 1315, 13, 50714, 50714, 4387, 988, 300, 341, 24922, 6770, 307, 1128, 4018, 13, 1079, 13, 1779, 13, 1779, 13, 50964, 50964, 407, 604, 565, 291, 291, 915, 1803, 7935, 281, 2464, 257, 2871, 420, 362, 11730, 1720, 420, 2903, 281, 2618, 294, 257, 2235, 5308, 577, 309, 820, 312, 1143, 420, 721, 411, 300, 11, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.09945306433252542, "compression_ratio": 1.4663677130044843, "no_caption_prob": 0.0002066131419269368}, {"id": 515, "seek": 324100, "start": 3241.0, "end": 3250.0, "text": " I think that's one cue because the thing is, comments can lie. Function names are more likely to to evolve over time.", "tokens": [50364, 286, 519, 300, 311, 472, 22656, 570, 264, 551, 307, 11, 3053, 393, 4544, 13, 11166, 882, 5288, 366, 544, 3700, 281, 281, 16693, 670, 565, 13, 50814, 50814, 823, 11, 300, 775, 3651, 257, 7164, 295, 1455, 1359, 1895, 15104, 1109, 382, 291, 362, 300, 4319, 13, 51064, 51064, 407, 411, 286, 600, 2198, 309, 7619, 382, 291, 362, 341, 4319, 466, 3701, 264, 3089, 293, 1895, 578, 3662, 294, 5870, 4439, 307, 445, 466, 1940, 300, 4319, 293, 3372, 309, 646, 666, 264, 3089, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.056150389241648245, "compression_ratio": 1.6652360515021458, "no_caption_prob": 9.16933422558941e-05}, {"id": 516, "seek": 324100, "start": 3250.0, "end": 3255.0, "text": " Now, that does require a habit of making small refactorings as you have that context.", "tokens": [50364, 286, 519, 300, 311, 472, 22656, 570, 264, 551, 307, 11, 3053, 393, 4544, 13, 11166, 882, 5288, 366, 544, 3700, 281, 281, 16693, 670, 565, 13, 50814, 50814, 823, 11, 300, 775, 3651, 257, 7164, 295, 1455, 1359, 1895, 15104, 1109, 382, 291, 362, 300, 4319, 13, 51064, 51064, 407, 411, 286, 600, 2198, 309, 7619, 382, 291, 362, 341, 4319, 466, 3701, 264, 3089, 293, 1895, 578, 3662, 294, 5870, 4439, 307, 445, 466, 1940, 300, 4319, 293, 3372, 309, 646, 666, 264, 3089, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.056150389241648245, "compression_ratio": 1.6652360515021458, "no_caption_prob": 9.16933422558941e-05}, {"id": 517, "seek": 324100, "start": 3255.0, "end": 3266.0, "text": " So like I've heard it described as you have this context about understanding the code and refactoring in tiny steps is just about taking that context and putting it back into the code.", "tokens": [50364, 286, 519, 300, 311, 472, 22656, 570, 264, 551, 307, 11, 3053, 393, 4544, 13, 11166, 882, 5288, 366, 544, 3700, 281, 281, 16693, 670, 565, 13, 50814, 50814, 823, 11, 300, 775, 3651, 257, 7164, 295, 1455, 1359, 1895, 15104, 1109, 382, 291, 362, 300, 4319, 13, 51064, 51064, 407, 411, 286, 600, 2198, 309, 7619, 382, 291, 362, 341, 4319, 466, 3701, 264, 3089, 293, 1895, 578, 3662, 294, 5870, 4439, 307, 445, 466, 1940, 300, 4319, 293, 3372, 309, 646, 666, 264, 3089, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.056150389241648245, "compression_ratio": 1.6652360515021458, "no_caption_prob": 9.16933422558941e-05}, {"id": 518, "seek": 326600, "start": 3266.0, "end": 3274.0, "text": " So you don't have to keep it in your head, especially if you're working with a team that's especially valuable. Right. But even for your future self.", "tokens": [50364, 407, 291, 500, 380, 362, 281, 1066, 309, 294, 428, 1378, 11, 2318, 498, 291, 434, 1364, 365, 257, 1469, 300, 311, 2318, 8263, 13, 1779, 13, 583, 754, 337, 428, 2027, 2698, 13, 50764, 50764, 407, 286, 519, 294, 264, 912, 636, 11, 562, 291, 362, 512, 3410, 300, 746, 575, 257, 1629, 47982, 3620, 7558, 294, 257, 47982, 2010, 13, 51164, 51164, 823, 11, 321, 360, 362, 281, 1066, 294, 1575, 577, 300, 393, 3345, 10199, 2310, 293, 406, 885, 1075, 281, 764, 721, 365, 3832, 21445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.064223568490211, "compression_ratio": 1.625514403292181, "no_caption_prob": 5.475735815707594e-05}, {"id": 519, "seek": 326600, "start": 3274.0, "end": 3282.0, "text": " So I think in the same way, when you have some concept that something has a certain semantic meaning rapid in a semantic type.", "tokens": [50364, 407, 291, 500, 380, 362, 281, 1066, 309, 294, 428, 1378, 11, 2318, 498, 291, 434, 1364, 365, 257, 1469, 300, 311, 2318, 8263, 13, 1779, 13, 583, 754, 337, 428, 2027, 2698, 13, 50764, 50764, 407, 286, 519, 294, 264, 912, 636, 11, 562, 291, 362, 512, 3410, 300, 746, 575, 257, 1629, 47982, 3620, 7558, 294, 257, 47982, 2010, 13, 51164, 51164, 823, 11, 321, 360, 362, 281, 1066, 294, 1575, 577, 300, 393, 3345, 10199, 2310, 293, 406, 885, 1075, 281, 764, 721, 365, 3832, 21445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.064223568490211, "compression_ratio": 1.625514403292181, "no_caption_prob": 5.475735815707594e-05}, {"id": 520, "seek": 326600, "start": 3282.0, "end": 3291.0, "text": " Now, we do have to keep in mind how that can affect composability and not being able to use things with standard APIs.", "tokens": [50364, 407, 291, 500, 380, 362, 281, 1066, 309, 294, 428, 1378, 11, 2318, 498, 291, 434, 1364, 365, 257, 1469, 300, 311, 2318, 8263, 13, 1779, 13, 583, 754, 337, 428, 2027, 2698, 13, 50764, 50764, 407, 286, 519, 294, 264, 912, 636, 11, 562, 291, 362, 512, 3410, 300, 746, 575, 257, 1629, 47982, 3620, 7558, 294, 257, 47982, 2010, 13, 51164, 51164, 823, 11, 321, 360, 362, 281, 1066, 294, 1575, 577, 300, 393, 3345, 10199, 2310, 293, 406, 885, 1075, 281, 764, 721, 365, 3832, 21445, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.064223568490211, "compression_ratio": 1.625514403292181, "no_caption_prob": 5.475735815707594e-05}, {"id": 521, "seek": 329100, "start": 3291.0, "end": 3302.0, "text": " So things like maybe and result types can be quite useful in that regard. But but yeah, that's that's that's one thing I think about is how can we kind of put that context back into the code?", "tokens": [50364, 407, 721, 411, 1310, 293, 1874, 3467, 393, 312, 1596, 4420, 294, 300, 3843, 13, 583, 457, 1338, 11, 300, 311, 300, 311, 300, 311, 472, 551, 286, 519, 466, 307, 577, 393, 321, 733, 295, 829, 300, 4319, 646, 666, 264, 3089, 30, 50914, 50914, 286, 478, 445, 1382, 281, 1888, 428, 3567, 510, 13, 583, 437, 576, 291, 519, 295, 1419, 746, 411, 257, 257, 777, 2010, 337, 13985, 300, 576, 312, 16372, 281, 264, 4195, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06550662488822477, "compression_ratio": 1.6074766355140186, "no_caption_prob": 2.9771672416245565e-05}, {"id": 522, "seek": 329100, "start": 3302.0, "end": 3312.0, "text": " I'm just trying to pick your brain here. But what would you think of having something like a a new type for strings that would be displayed to the user?", "tokens": [50364, 407, 721, 411, 1310, 293, 1874, 3467, 393, 312, 1596, 4420, 294, 300, 3843, 13, 583, 457, 1338, 11, 300, 311, 300, 311, 300, 311, 472, 551, 286, 519, 466, 307, 577, 393, 321, 733, 295, 829, 300, 4319, 646, 666, 264, 3089, 30, 50914, 50914, 286, 478, 445, 1382, 281, 1888, 428, 3567, 510, 13, 583, 437, 576, 291, 519, 295, 1419, 746, 411, 257, 257, 777, 2010, 337, 13985, 300, 576, 312, 16372, 281, 264, 4195, 30, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.06550662488822477, "compression_ratio": 1.6074766355140186, "no_caption_prob": 2.9771672416245565e-05}, {"id": 523, "seek": 331200, "start": 3312.0, "end": 3321.0, "text": " So one instance where I would probably not use a new type is when I would have strings that I want to display to the user.", "tokens": [50364, 407, 472, 5197, 689, 286, 576, 1391, 406, 764, 257, 777, 2010, 307, 562, 286, 576, 362, 13985, 300, 286, 528, 281, 4674, 281, 264, 4195, 13, 50814, 50814, 407, 411, 264, 1230, 295, 641, 9402, 11, 264, 4195, 7348, 11, 264, 4195, 7348, 11, 746, 13, 823, 11, 406, 264, 4195, 7348, 13, 51114, 51114, 663, 311, 257, 588, 1578, 1365, 13, 583, 445, 512, 2487, 411, 257, 2960, 2487, 13, 51414, 51414, 1144, 291, 519, 309, 576, 652, 2020, 281, 7019, 300, 666, 257, 777, 2010, 855, 712, 2487, 420, 746, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.21409219625044842, "compression_ratio": 1.6741071428571428, "no_caption_prob": 0.0001334014959866181}, {"id": 524, "seek": 331200, "start": 3321.0, "end": 3327.0, "text": " So like the number of their accounts, the user ID, the user ID, something. Now, not the user ID.", "tokens": [50364, 407, 472, 5197, 689, 286, 576, 1391, 406, 764, 257, 777, 2010, 307, 562, 286, 576, 362, 13985, 300, 286, 528, 281, 4674, 281, 264, 4195, 13, 50814, 50814, 407, 411, 264, 1230, 295, 641, 9402, 11, 264, 4195, 7348, 11, 264, 4195, 7348, 11, 746, 13, 823, 11, 406, 264, 4195, 7348, 13, 51114, 51114, 663, 311, 257, 588, 1578, 1365, 13, 583, 445, 512, 2487, 411, 257, 2960, 2487, 13, 51414, 51414, 1144, 291, 519, 309, 576, 652, 2020, 281, 7019, 300, 666, 257, 777, 2010, 855, 712, 2487, 420, 746, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.21409219625044842, "compression_ratio": 1.6741071428571428, "no_caption_prob": 0.0001334014959866181}, {"id": 525, "seek": 331200, "start": 3327.0, "end": 3333.0, "text": " That's a very bad example. But just some text like a button text.", "tokens": [50364, 407, 472, 5197, 689, 286, 576, 1391, 406, 764, 257, 777, 2010, 307, 562, 286, 576, 362, 13985, 300, 286, 528, 281, 4674, 281, 264, 4195, 13, 50814, 50814, 407, 411, 264, 1230, 295, 641, 9402, 11, 264, 4195, 7348, 11, 264, 4195, 7348, 11, 746, 13, 823, 11, 406, 264, 4195, 7348, 13, 51114, 51114, 663, 311, 257, 588, 1578, 1365, 13, 583, 445, 512, 2487, 411, 257, 2960, 2487, 13, 51414, 51414, 1144, 291, 519, 309, 576, 652, 2020, 281, 7019, 300, 666, 257, 777, 2010, 855, 712, 2487, 420, 746, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.21409219625044842, "compression_ratio": 1.6741071428571428, "no_caption_prob": 0.0001334014959866181}, {"id": 526, "seek": 331200, "start": 3333.0, "end": 3339.0, "text": " Do you think it would make sense to wrap that into a new type showable text or something?", "tokens": [50364, 407, 472, 5197, 689, 286, 576, 1391, 406, 764, 257, 777, 2010, 307, 562, 286, 576, 362, 13985, 300, 286, 528, 281, 4674, 281, 264, 4195, 13, 50814, 50814, 407, 411, 264, 1230, 295, 641, 9402, 11, 264, 4195, 7348, 11, 264, 4195, 7348, 11, 746, 13, 823, 11, 406, 264, 4195, 7348, 13, 51114, 51114, 663, 311, 257, 588, 1578, 1365, 13, 583, 445, 512, 2487, 411, 257, 2960, 2487, 13, 51414, 51414, 1144, 291, 519, 309, 576, 652, 2020, 281, 7019, 300, 666, 257, 777, 2010, 855, 712, 2487, 420, 746, 30, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.21409219625044842, "compression_ratio": 1.6741071428571428, "no_caption_prob": 0.0001334014959866181}, {"id": 527, "seek": 333900, "start": 3339.0, "end": 3344.0, "text": " Displayable text. Interesting. Is that going too far? Like where do you stop? Right.", "tokens": [50364, 32229, 712, 2487, 13, 14711, 13, 1119, 300, 516, 886, 1400, 30, 1743, 689, 360, 291, 1590, 30, 1779, 13, 50614, 50614, 7587, 13, 865, 13, 639, 307, 341, 307, 257, 869, 1365, 295, 733, 295, 437, 321, 645, 1417, 466, 11, 886, 11, 365, 411, 264, 44788, 420, 9943, 1329, 293, 1507, 13, 51014, 51014, 1119, 309, 411, 11, 988, 11, 456, 311, 512, 47982, 3410, 456, 11, 457, 307, 309, 264, 558, 636, 281, 281, 2642, 729, 3876, 30, 51314, 51314, 400, 775, 309, 483, 291, 294, 5253, 30, 1436, 570, 291, 393, 380, 4725, 3612, 35925, 613, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1388784212486766, "compression_ratio": 1.5927272727272728, "no_caption_prob": 1.8924536561826244e-05}, {"id": 528, "seek": 333900, "start": 3344.0, "end": 3352.0, "text": " Exactly. Yeah. This is this is a great example of kind of what we were talking about, too, with like the reversible or reverse list and stuff.", "tokens": [50364, 32229, 712, 2487, 13, 14711, 13, 1119, 300, 516, 886, 1400, 30, 1743, 689, 360, 291, 1590, 30, 1779, 13, 50614, 50614, 7587, 13, 865, 13, 639, 307, 341, 307, 257, 869, 1365, 295, 733, 295, 437, 321, 645, 1417, 466, 11, 886, 11, 365, 411, 264, 44788, 420, 9943, 1329, 293, 1507, 13, 51014, 51014, 1119, 309, 411, 11, 988, 11, 456, 311, 512, 47982, 3410, 456, 11, 457, 307, 309, 264, 558, 636, 281, 281, 2642, 729, 3876, 30, 51314, 51314, 400, 775, 309, 483, 291, 294, 5253, 30, 1436, 570, 291, 393, 380, 4725, 3612, 35925, 613, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1388784212486766, "compression_ratio": 1.5927272727272728, "no_caption_prob": 1.8924536561826244e-05}, {"id": 529, "seek": 333900, "start": 3352.0, "end": 3358.0, "text": " Is it like, sure, there's some semantic concept there, but is it the right way to to draw those lines?", "tokens": [50364, 32229, 712, 2487, 13, 14711, 13, 1119, 300, 516, 886, 1400, 30, 1743, 689, 360, 291, 1590, 30, 1779, 13, 50614, 50614, 7587, 13, 865, 13, 639, 307, 341, 307, 257, 869, 1365, 295, 733, 295, 437, 321, 645, 1417, 466, 11, 886, 11, 365, 411, 264, 44788, 420, 9943, 1329, 293, 1507, 13, 51014, 51014, 1119, 309, 411, 11, 988, 11, 456, 311, 512, 47982, 3410, 456, 11, 457, 307, 309, 264, 558, 636, 281, 281, 2642, 729, 3876, 30, 51314, 51314, 400, 775, 309, 483, 291, 294, 5253, 30, 1436, 570, 291, 393, 380, 4725, 3612, 35925, 613, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1388784212486766, "compression_ratio": 1.5927272727272728, "no_caption_prob": 1.8924536561826244e-05}, {"id": 530, "seek": 333900, "start": 3358.0, "end": 3364.0, "text": " And does it get you in trouble? Because because you can't necessarily easily compose these things together.", "tokens": [50364, 32229, 712, 2487, 13, 14711, 13, 1119, 300, 516, 886, 1400, 30, 1743, 689, 360, 291, 1590, 30, 1779, 13, 50614, 50614, 7587, 13, 865, 13, 639, 307, 341, 307, 257, 869, 1365, 295, 733, 295, 437, 321, 645, 1417, 466, 11, 886, 11, 365, 411, 264, 44788, 420, 9943, 1329, 293, 1507, 13, 51014, 51014, 1119, 309, 411, 11, 988, 11, 456, 311, 512, 47982, 3410, 456, 11, 457, 307, 309, 264, 558, 636, 281, 281, 2642, 729, 3876, 30, 51314, 51314, 400, 775, 309, 483, 291, 294, 5253, 30, 1436, 570, 291, 393, 380, 4725, 3612, 35925, 613, 721, 1214, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.1388784212486766, "compression_ratio": 1.5927272727272728, "no_caption_prob": 1.8924536561826244e-05}, {"id": 531, "seek": 336400, "start": 3364.0, "end": 3372.0, "text": " And drawing the line one place means that you can't draw the line another another way that conflicts with that.", "tokens": [50364, 400, 6316, 264, 1622, 472, 1081, 1355, 300, 291, 393, 380, 2642, 264, 1622, 1071, 1071, 636, 300, 19807, 365, 300, 13, 50764, 50764, 400, 300, 311, 300, 311, 264, 551, 13, 407, 452, 5228, 2633, 365, 300, 1365, 307, 300, 300, 311, 6316, 264, 3876, 294, 257, 636, 300, 300, 22367, 291, 490, 6316, 552, 1071, 636, 300, 311, 544, 2685, 281, 428, 9274, 13, 51364, 51364, 407, 11, 286, 914, 11, 700, 293, 18864, 11, 365, 439, 295, 341, 1895, 578, 3662, 1507, 11, 264, 264, 264, 9729, 4978, 307, 2985, 1822, 2793, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03344433069229126, "compression_ratio": 1.8596491228070176, "no_caption_prob": 4.399782483233139e-05}, {"id": 532, "seek": 336400, "start": 3372.0, "end": 3384.0, "text": " And that's that's the thing. So my gut feeling with that example is that that's drawing the lines in a way that that prevents you from drawing them another way that's more specific to your domain.", "tokens": [50364, 400, 6316, 264, 1622, 472, 1081, 1355, 300, 291, 393, 380, 2642, 264, 1622, 1071, 1071, 636, 300, 19807, 365, 300, 13, 50764, 50764, 400, 300, 311, 300, 311, 264, 551, 13, 407, 452, 5228, 2633, 365, 300, 1365, 307, 300, 300, 311, 6316, 264, 3876, 294, 257, 636, 300, 300, 22367, 291, 490, 6316, 552, 1071, 636, 300, 311, 544, 2685, 281, 428, 9274, 13, 51364, 51364, 407, 11, 286, 914, 11, 700, 293, 18864, 11, 365, 439, 295, 341, 1895, 578, 3662, 1507, 11, 264, 264, 264, 9729, 4978, 307, 2985, 1822, 2793, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03344433069229126, "compression_ratio": 1.8596491228070176, "no_caption_prob": 4.399782483233139e-05}, {"id": 533, "seek": 336400, "start": 3384.0, "end": 3392.0, "text": " So, I mean, first and foremost, with all of this refactoring stuff, the the the golden rule is address pain points.", "tokens": [50364, 400, 6316, 264, 1622, 472, 1081, 1355, 300, 291, 393, 380, 2642, 264, 1622, 1071, 1071, 636, 300, 19807, 365, 300, 13, 50764, 50764, 400, 300, 311, 300, 311, 264, 551, 13, 407, 452, 5228, 2633, 365, 300, 1365, 307, 300, 300, 311, 6316, 264, 3876, 294, 257, 636, 300, 300, 22367, 291, 490, 6316, 552, 1071, 636, 300, 311, 544, 2685, 281, 428, 9274, 13, 51364, 51364, 407, 11, 286, 914, 11, 700, 293, 18864, 11, 365, 439, 295, 341, 1895, 578, 3662, 1507, 11, 264, 264, 264, 9729, 4978, 307, 2985, 1822, 2793, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.03344433069229126, "compression_ratio": 1.8596491228070176, "no_caption_prob": 4.399782483233139e-05}, {"id": 534, "seek": 339200, "start": 3392.0, "end": 3402.0, "text": " So like with with this reverse list thing, the reason it came up for me was because I found a bug and the bug was in places.", "tokens": [50364, 407, 411, 365, 365, 341, 9943, 1329, 551, 11, 264, 1778, 309, 1361, 493, 337, 385, 390, 570, 286, 1352, 257, 7426, 293, 264, 7426, 390, 294, 3190, 13, 50864, 50864, 400, 286, 2067, 380, 988, 562, 286, 390, 19442, 264, 7426, 13, 286, 390, 411, 11, 360, 286, 3191, 309, 30, 639, 360, 286, 9943, 309, 510, 420, 510, 293, 510, 30, 51214, 51214, 400, 577, 360, 286, 1066, 2837, 295, 300, 30, 400, 577, 360, 286, 458, 300, 512, 661, 551, 1943, 380, 516, 281, 652, 300, 912, 7426, 294, 264, 2027, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.046061058237095075, "compression_ratio": 1.7142857142857142, "no_caption_prob": 4.3999658373650163e-05}, {"id": 535, "seek": 339200, "start": 3402.0, "end": 3409.0, "text": " And I wasn't sure when I was fixing the bug. I was like, do I fix it? This do I reverse it here or here and here?", "tokens": [50364, 407, 411, 365, 365, 341, 9943, 1329, 551, 11, 264, 1778, 309, 1361, 493, 337, 385, 390, 570, 286, 1352, 257, 7426, 293, 264, 7426, 390, 294, 3190, 13, 50864, 50864, 400, 286, 2067, 380, 988, 562, 286, 390, 19442, 264, 7426, 13, 286, 390, 411, 11, 360, 286, 3191, 309, 30, 639, 360, 286, 9943, 309, 510, 420, 510, 293, 510, 30, 51214, 51214, 400, 577, 360, 286, 1066, 2837, 295, 300, 30, 400, 577, 360, 286, 458, 300, 512, 661, 551, 1943, 380, 516, 281, 652, 300, 912, 7426, 294, 264, 2027, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.046061058237095075, "compression_ratio": 1.7142857142857142, "no_caption_prob": 4.3999658373650163e-05}, {"id": 536, "seek": 339200, "start": 3409.0, "end": 3417.0, "text": " And how do I keep track of that? And how do I know that some other thing isn't going to make that same bug in the future?", "tokens": [50364, 407, 411, 365, 365, 341, 9943, 1329, 551, 11, 264, 1778, 309, 1361, 493, 337, 385, 390, 570, 286, 1352, 257, 7426, 293, 264, 7426, 390, 294, 3190, 13, 50864, 50864, 400, 286, 2067, 380, 988, 562, 286, 390, 19442, 264, 7426, 13, 286, 390, 411, 11, 360, 286, 3191, 309, 30, 639, 360, 286, 9943, 309, 510, 420, 510, 293, 510, 30, 51214, 51214, 400, 577, 360, 286, 1066, 2837, 295, 300, 30, 400, 577, 360, 286, 458, 300, 512, 661, 551, 1943, 380, 516, 281, 652, 300, 912, 7426, 294, 264, 2027, 30, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.046061058237095075, "compression_ratio": 1.7142857142857142, "no_caption_prob": 4.3999658373650163e-05}, {"id": 537, "seek": 341700, "start": 3417.0, "end": 3423.0, "text": " So I think that's first and foremost, like address pain points, address concrete pain points.", "tokens": [50364, 407, 286, 519, 300, 311, 700, 293, 18864, 11, 411, 2985, 1822, 2793, 11, 2985, 9859, 1822, 2793, 13, 50664, 50664, 663, 311, 411, 264, 1151, 1895, 578, 3662, 5192, 286, 519, 291, 393, 976, 13, 50864, 50864, 865, 13, 400, 611, 11, 498, 291, 853, 309, 484, 293, 550, 291, 3449, 777, 1822, 2793, 11, 550, 1310, 646, 766, 13, 51214, 51214, 1057, 264, 544, 1778, 983, 5870, 1895, 578, 3662, 4439, 366, 8263, 570, 291, 393, 853, 746, 484, 11, 536, 577, 309, 3417, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07984106357281025, "compression_ratio": 1.6822429906542056, "no_caption_prob": 5.3907115216134116e-05}, {"id": 538, "seek": 341700, "start": 3423.0, "end": 3427.0, "text": " That's like the best refactoring advice I think you can give.", "tokens": [50364, 407, 286, 519, 300, 311, 700, 293, 18864, 11, 411, 2985, 1822, 2793, 11, 2985, 9859, 1822, 2793, 13, 50664, 50664, 663, 311, 411, 264, 1151, 1895, 578, 3662, 5192, 286, 519, 291, 393, 976, 13, 50864, 50864, 865, 13, 400, 611, 11, 498, 291, 853, 309, 484, 293, 550, 291, 3449, 777, 1822, 2793, 11, 550, 1310, 646, 766, 13, 51214, 51214, 1057, 264, 544, 1778, 983, 5870, 1895, 578, 3662, 4439, 366, 8263, 570, 291, 393, 853, 746, 484, 11, 536, 577, 309, 3417, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07984106357281025, "compression_ratio": 1.6822429906542056, "no_caption_prob": 5.3907115216134116e-05}, {"id": 539, "seek": 341700, "start": 3427.0, "end": 3434.0, "text": " Yeah. And also, if you try it out and then you notice new pain points, then maybe back off.", "tokens": [50364, 407, 286, 519, 300, 311, 700, 293, 18864, 11, 411, 2985, 1822, 2793, 11, 2985, 9859, 1822, 2793, 13, 50664, 50664, 663, 311, 411, 264, 1151, 1895, 578, 3662, 5192, 286, 519, 291, 393, 976, 13, 50864, 50864, 865, 13, 400, 611, 11, 498, 291, 853, 309, 484, 293, 550, 291, 3449, 777, 1822, 2793, 11, 550, 1310, 646, 766, 13, 51214, 51214, 1057, 264, 544, 1778, 983, 5870, 1895, 578, 3662, 4439, 366, 8263, 570, 291, 393, 853, 746, 484, 11, 536, 577, 309, 3417, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07984106357281025, "compression_ratio": 1.6822429906542056, "no_caption_prob": 5.3907115216134116e-05}, {"id": 540, "seek": 341700, "start": 3434.0, "end": 3439.0, "text": " All the more reason why tiny refactoring steps are valuable because you can try something out, see how it feels.", "tokens": [50364, 407, 286, 519, 300, 311, 700, 293, 18864, 11, 411, 2985, 1822, 2793, 11, 2985, 9859, 1822, 2793, 13, 50664, 50664, 663, 311, 411, 264, 1151, 1895, 578, 3662, 5192, 286, 519, 291, 393, 976, 13, 50864, 50864, 865, 13, 400, 611, 11, 498, 291, 853, 309, 484, 293, 550, 291, 3449, 777, 1822, 2793, 11, 550, 1310, 646, 766, 13, 51214, 51214, 1057, 264, 544, 1778, 983, 5870, 1895, 578, 3662, 4439, 366, 8263, 570, 291, 393, 853, 746, 484, 11, 536, 577, 309, 3417, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.07984106357281025, "compression_ratio": 1.6822429906542056, "no_caption_prob": 5.3907115216134116e-05}, {"id": 541, "seek": 343900, "start": 3439.0, "end": 3449.0, "text": " But yeah, my gut feeling is it might box you into a corner where you're creating these things that are not core domain concepts.", "tokens": [50364, 583, 1338, 11, 452, 5228, 2633, 307, 309, 1062, 2424, 291, 666, 257, 4538, 689, 291, 434, 4084, 613, 721, 300, 366, 406, 4965, 9274, 10392, 13, 50864, 50864, 400, 309, 1669, 309, 1152, 281, 5109, 721, 300, 291, 1062, 528, 281, 382, 4965, 9274, 10392, 13, 51164, 51164, 583, 286, 478, 406, 286, 478, 406, 1596, 988, 13, 865, 13, 1436, 286, 841, 411, 294, 512, 3331, 291, 291, 1884, 512, 512, 2487, 411, 291, 8947, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08801363735664182, "compression_ratio": 1.6919191919191918, "no_caption_prob": 9.760089596966282e-05}, {"id": 542, "seek": 343900, "start": 3449.0, "end": 3455.0, "text": " And it makes it hard to express things that you might want to as core domain concepts.", "tokens": [50364, 583, 1338, 11, 452, 5228, 2633, 307, 309, 1062, 2424, 291, 666, 257, 4538, 689, 291, 434, 4084, 613, 721, 300, 366, 406, 4965, 9274, 10392, 13, 50864, 50864, 400, 309, 1669, 309, 1152, 281, 5109, 721, 300, 291, 1062, 528, 281, 382, 4965, 9274, 10392, 13, 51164, 51164, 583, 286, 478, 406, 286, 478, 406, 1596, 988, 13, 865, 13, 1436, 286, 841, 411, 294, 512, 3331, 291, 291, 1884, 512, 512, 2487, 411, 291, 8947, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08801363735664182, "compression_ratio": 1.6919191919191918, "no_caption_prob": 9.760089596966282e-05}, {"id": 543, "seek": 343900, "start": 3455.0, "end": 3464.0, "text": " But I'm not I'm not quite sure. Yeah. Because I feel like in some cases you you create some some text like you extract.", "tokens": [50364, 583, 1338, 11, 452, 5228, 2633, 307, 309, 1062, 2424, 291, 666, 257, 4538, 689, 291, 434, 4084, 613, 721, 300, 366, 406, 4965, 9274, 10392, 13, 50864, 50864, 400, 309, 1669, 309, 1152, 281, 5109, 721, 300, 291, 1062, 528, 281, 382, 4965, 9274, 10392, 13, 51164, 51164, 583, 286, 478, 406, 286, 478, 406, 1596, 988, 13, 865, 13, 1436, 286, 841, 411, 294, 512, 3331, 291, 291, 1884, 512, 512, 2487, 411, 291, 8947, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08801363735664182, "compression_ratio": 1.6919191919191918, "no_caption_prob": 9.760089596966282e-05}, {"id": 544, "seek": 346400, "start": 3464.0, "end": 3471.0, "text": " You want to show the user ID to extract a string from it. Yeah. And then maybe you do some manipulation with it.", "tokens": [50364, 509, 528, 281, 855, 264, 4195, 7348, 281, 8947, 257, 6798, 490, 309, 13, 865, 13, 400, 550, 1310, 291, 360, 512, 26475, 365, 309, 13, 50714, 50714, 400, 300, 390, 406, 264, 8446, 13, 1743, 264, 8446, 390, 281, 5258, 257, 6798, 300, 291, 393, 4674, 293, 550, 1580, 30445, 411, 264, 700, 1045, 4342, 420, 746, 293, 293, 775, 746, 365, 309, 13, 51364, 51364, 400, 300, 390, 445, 406, 264, 935, 13, 400, 286, 841, 411, 300, 2314, 544, 2049, 813, 286, 576, 411, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0742212418586977, "compression_ratio": 1.7972972972972974, "no_caption_prob": 0.0001660182751948014}, {"id": 545, "seek": 346400, "start": 3471.0, "end": 3484.0, "text": " And that was not the intent. Like the intent was to produce a string that you can display and then someone removes like the first three characters or something and and does something with it.", "tokens": [50364, 509, 528, 281, 855, 264, 4195, 7348, 281, 8947, 257, 6798, 490, 309, 13, 865, 13, 400, 550, 1310, 291, 360, 512, 26475, 365, 309, 13, 50714, 50714, 400, 300, 390, 406, 264, 8446, 13, 1743, 264, 8446, 390, 281, 5258, 257, 6798, 300, 291, 393, 4674, 293, 550, 1580, 30445, 411, 264, 700, 1045, 4342, 420, 746, 293, 293, 775, 746, 365, 309, 13, 51364, 51364, 400, 300, 390, 445, 406, 264, 935, 13, 400, 286, 841, 411, 300, 2314, 544, 2049, 813, 286, 576, 411, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0742212418586977, "compression_ratio": 1.7972972972972974, "no_caption_prob": 0.0001660182751948014}, {"id": 546, "seek": 346400, "start": 3484.0, "end": 3489.0, "text": " And that was just not the point. And I feel like that happens more often than I would like to.", "tokens": [50364, 509, 528, 281, 855, 264, 4195, 7348, 281, 8947, 257, 6798, 490, 309, 13, 865, 13, 400, 550, 1310, 291, 360, 512, 26475, 365, 309, 13, 50714, 50714, 400, 300, 390, 406, 264, 8446, 13, 1743, 264, 8446, 390, 281, 5258, 257, 6798, 300, 291, 393, 4674, 293, 550, 1580, 30445, 411, 264, 700, 1045, 4342, 420, 746, 293, 293, 775, 746, 365, 309, 13, 51364, 51364, 400, 300, 390, 445, 406, 264, 935, 13, 400, 286, 841, 411, 300, 2314, 544, 2049, 813, 286, 576, 411, 281, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.0742212418586977, "compression_ratio": 1.7972972972972974, "no_caption_prob": 0.0001660182751948014}, {"id": 547, "seek": 348900, "start": 3489.0, "end": 3500.0, "text": " Again, it's not a problem, but also right. It's like blue cheese. Exactly. Exactly. The Dutch love it.", "tokens": [50364, 3764, 11, 309, 311, 406, 257, 1154, 11, 457, 611, 558, 13, 467, 311, 411, 3344, 5399, 13, 7587, 13, 7587, 13, 440, 15719, 959, 309, 13, 50914, 50914, 1119, 300, 437, 291, 434, 1382, 281, 584, 30, 865, 11, 286, 2041, 321, 360, 13, 865, 11, 286, 519, 300, 570, 12649, 626, 362, 257, 2063, 293, 370, 321, 820, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14596478388859677, "compression_ratio": 1.3734939759036144, "no_caption_prob": 0.00012729369336739182}, {"id": 548, "seek": 348900, "start": 3500.0, "end": 3516.0, "text": " Is that what you're trying to say? Yeah, I guess we do. Yeah, I think that because abstractions have a cost and so we should.", "tokens": [50364, 3764, 11, 309, 311, 406, 257, 1154, 11, 457, 611, 558, 13, 467, 311, 411, 3344, 5399, 13, 7587, 13, 7587, 13, 440, 15719, 959, 309, 13, 50914, 50914, 1119, 300, 437, 291, 434, 1382, 281, 584, 30, 865, 11, 286, 2041, 321, 360, 13, 865, 11, 286, 519, 300, 570, 12649, 626, 362, 257, 2063, 293, 370, 321, 820, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.14596478388859677, "compression_ratio": 1.3734939759036144, "no_caption_prob": 0.00012729369336739182}, {"id": 549, "seek": 351600, "start": 3516.0, "end": 3528.0, "text": " That's why it's really important to be addressing pain points when we introduce abstractions, because if we don't, then we're incurring a cost with something that might not give us a benefit to outweigh that cost.", "tokens": [50364, 663, 311, 983, 309, 311, 534, 1021, 281, 312, 14329, 1822, 2793, 562, 321, 5366, 12649, 626, 11, 570, 498, 321, 500, 380, 11, 550, 321, 434, 35774, 2937, 257, 2063, 365, 746, 300, 1062, 406, 976, 505, 257, 5121, 281, 484, 826, 910, 300, 2063, 13, 50964, 50964, 400, 611, 406, 445, 300, 11, 457, 406, 787, 366, 321, 35774, 2937, 257, 2063, 11, 457, 321, 1062, 312, 1455, 1071, 37765, 6081, 281, 281, 360, 294, 48120, 365, 300, 570, 2171, 264, 3876, 445, 500, 380, 2995, 493, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.054518801100710605, "compression_ratio": 1.7296137339055795, "no_caption_prob": 3.0240555133786984e-05}, {"id": 550, "seek": 351600, "start": 3528.0, "end": 3541.0, "text": " And also not just that, but not only are we incurring a cost, but we might be making another abstraction harder to to do in tandem with that because sometimes the lines just don't match up.", "tokens": [50364, 663, 311, 983, 309, 311, 534, 1021, 281, 312, 14329, 1822, 2793, 562, 321, 5366, 12649, 626, 11, 570, 498, 321, 500, 380, 11, 550, 321, 434, 35774, 2937, 257, 2063, 365, 746, 300, 1062, 406, 976, 505, 257, 5121, 281, 484, 826, 910, 300, 2063, 13, 50964, 50964, 400, 611, 406, 445, 300, 11, 457, 406, 787, 366, 321, 35774, 2937, 257, 2063, 11, 457, 321, 1062, 312, 1455, 1071, 37765, 6081, 281, 281, 360, 294, 48120, 365, 300, 570, 2171, 264, 3876, 445, 500, 380, 2995, 493, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.054518801100710605, "compression_ratio": 1.7296137339055795, "no_caption_prob": 3.0240555133786984e-05}, {"id": 551, "seek": 354100, "start": 3541.0, "end": 3551.0, "text": " You draw the lines one way and now you can't draw them another way. So. So, yeah, I think, you know, it's important not to do premature abstraction for this type of thing.", "tokens": [50364, 509, 2642, 264, 3876, 472, 636, 293, 586, 291, 393, 380, 2642, 552, 1071, 636, 13, 407, 13, 407, 11, 1338, 11, 286, 519, 11, 291, 458, 11, 309, 311, 1021, 406, 281, 360, 34877, 37765, 337, 341, 2010, 295, 551, 13, 50864, 50864, 5349, 735, 9859, 1822, 2793, 382, 709, 382, 1944, 365, 613, 3467, 295, 721, 13, 400, 291, 360, 483, 257, 2020, 295, 411, 11, 286, 478, 1455, 257, 1460, 2010, 13, 51314, 51314, 286, 478, 1455, 257, 4195, 7348, 2010, 411, 613, 366, 1391, 3273, 721, 281, 445, 352, 2286, 293, 1884, 364, 42687, 13, 865, 11, 558, 1314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10201209562796133, "compression_ratio": 1.6370656370656371, "no_caption_prob": 9.459368448005989e-05}, {"id": 552, "seek": 354100, "start": 3551.0, "end": 3560.0, "text": " Address concrete pain points as much as possible with these types of things. And you do get a sense of like, I'm making a money type.", "tokens": [50364, 509, 2642, 264, 3876, 472, 636, 293, 586, 291, 393, 380, 2642, 552, 1071, 636, 13, 407, 13, 407, 11, 1338, 11, 286, 519, 11, 291, 458, 11, 309, 311, 1021, 406, 281, 360, 34877, 37765, 337, 341, 2010, 295, 551, 13, 50864, 50864, 5349, 735, 9859, 1822, 2793, 382, 709, 382, 1944, 365, 613, 3467, 295, 721, 13, 400, 291, 360, 483, 257, 2020, 295, 411, 11, 286, 478, 1455, 257, 1460, 2010, 13, 51314, 51314, 286, 478, 1455, 257, 4195, 7348, 2010, 411, 613, 366, 1391, 3273, 721, 281, 445, 352, 2286, 293, 1884, 364, 42687, 13, 865, 11, 558, 1314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10201209562796133, "compression_ratio": 1.6370656370656371, "no_caption_prob": 9.459368448005989e-05}, {"id": 553, "seek": 354100, "start": 3560.0, "end": 3567.0, "text": " I'm making a user ID type like these are probably safe things to just go ahead and create an opaque. Yeah, right away.", "tokens": [50364, 509, 2642, 264, 3876, 472, 636, 293, 586, 291, 393, 380, 2642, 552, 1071, 636, 13, 407, 13, 407, 11, 1338, 11, 286, 519, 11, 291, 458, 11, 309, 311, 1021, 406, 281, 360, 34877, 37765, 337, 341, 2010, 295, 551, 13, 50864, 50864, 5349, 735, 9859, 1822, 2793, 382, 709, 382, 1944, 365, 613, 3467, 295, 721, 13, 400, 291, 360, 483, 257, 2020, 295, 411, 11, 286, 478, 1455, 257, 1460, 2010, 13, 51314, 51314, 286, 478, 1455, 257, 4195, 7348, 2010, 411, 613, 366, 1391, 3273, 721, 281, 445, 352, 2286, 293, 1884, 364, 42687, 13, 865, 11, 558, 1314, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10201209562796133, "compression_ratio": 1.6370656370656371, "no_caption_prob": 9.459368448005989e-05}, {"id": 554, "seek": 356700, "start": 3567.0, "end": 3579.0, "text": " You know, I do feel like the showable text is interesting. Yeah. I also feel like very unsure about it. I know that there's some pain points that it could solve.", "tokens": [50364, 509, 458, 11, 286, 360, 841, 411, 264, 855, 712, 2487, 307, 1880, 13, 865, 13, 286, 611, 841, 411, 588, 32486, 466, 309, 13, 286, 458, 300, 456, 311, 512, 1822, 2793, 300, 309, 727, 5039, 13, 50964, 50964, 1743, 11, 1338, 11, 286, 500, 380, 841, 665, 466, 309, 2139, 13, 1779, 13, 865, 13, 865, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16327755034915983, "compression_ratio": 1.4836601307189543, "no_caption_prob": 8.480397809762508e-05}, {"id": 555, "seek": 356700, "start": 3579.0, "end": 3588.0, "text": " Like, yeah, I don't feel good about it either. Right. Yeah. Yeah.", "tokens": [50364, 509, 458, 11, 286, 360, 841, 411, 264, 855, 712, 2487, 307, 1880, 13, 865, 13, 286, 611, 841, 411, 588, 32486, 466, 309, 13, 286, 458, 300, 456, 311, 512, 1822, 2793, 300, 309, 727, 5039, 13, 50964, 50964, 1743, 11, 1338, 11, 286, 500, 380, 841, 665, 466, 309, 2139, 13, 1779, 13, 865, 13, 865, 13, 51414, 51414], "temperature": 0.0, "avg_logprob": -0.16327755034915983, "compression_ratio": 1.4836601307189543, "no_caption_prob": 8.480397809762508e-05}, {"id": 556, "seek": 358800, "start": 3588.0, "end": 3599.0, "text": " Having like a leaky abstraction or an awkward abstraction can really make it very confusing where you're like, why can't I present this thing on the screen?", "tokens": [50364, 10222, 411, 257, 476, 15681, 37765, 420, 364, 11411, 37765, 393, 534, 652, 309, 588, 13181, 689, 291, 434, 411, 11, 983, 393, 380, 286, 1974, 341, 551, 322, 264, 2568, 30, 50914, 50914, 876, 11, 291, 362, 281, 652, 309, 855, 712, 2487, 411, 11, 1954, 11, 2264, 11, 731, 11, 577, 360, 286, 483, 855, 712, 2487, 30, 51114, 51114, 492, 727, 360, 264, 917, 13, 467, 311, 411, 11, 16478, 11, 309, 393, 21774, 2564, 281, 411, 1455, 3089, 300, 311, 6958, 281, 2557, 570, 291, 2870, 437, 264, 12649, 626, 914, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10171032905578613, "compression_ratio": 1.6538461538461537, "no_caption_prob": 0.00010389961971668527}, {"id": 557, "seek": 358800, "start": 3599.0, "end": 3603.0, "text": " Oh, you have to make it showable text like, oh, OK, well, how do I get showable text?", "tokens": [50364, 10222, 411, 257, 476, 15681, 37765, 420, 364, 11411, 37765, 393, 534, 652, 309, 588, 13181, 689, 291, 434, 411, 11, 983, 393, 380, 286, 1974, 341, 551, 322, 264, 2568, 30, 50914, 50914, 876, 11, 291, 362, 281, 652, 309, 855, 712, 2487, 411, 11, 1954, 11, 2264, 11, 731, 11, 577, 360, 286, 483, 855, 712, 2487, 30, 51114, 51114, 492, 727, 360, 264, 917, 13, 467, 311, 411, 11, 16478, 11, 309, 393, 21774, 2564, 281, 411, 1455, 3089, 300, 311, 6958, 281, 2557, 570, 291, 2870, 437, 264, 12649, 626, 914, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10171032905578613, "compression_ratio": 1.6538461538461537, "no_caption_prob": 0.00010389961971668527}, {"id": 558, "seek": 358800, "start": 3603.0, "end": 3612.0, "text": " We could do the end. It's like, hmm, it can lend itself to like making code that's scary to touch because you forget what the abstractions mean.", "tokens": [50364, 10222, 411, 257, 476, 15681, 37765, 420, 364, 11411, 37765, 393, 534, 652, 309, 588, 13181, 689, 291, 434, 411, 11, 983, 393, 380, 286, 1974, 341, 551, 322, 264, 2568, 30, 50914, 50914, 876, 11, 291, 362, 281, 652, 309, 855, 712, 2487, 411, 11, 1954, 11, 2264, 11, 731, 11, 577, 360, 286, 483, 855, 712, 2487, 30, 51114, 51114, 492, 727, 360, 264, 917, 13, 467, 311, 411, 11, 16478, 11, 309, 393, 21774, 2564, 281, 411, 1455, 3089, 300, 311, 6958, 281, 2557, 570, 291, 2870, 437, 264, 12649, 626, 914, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10171032905578613, "compression_ratio": 1.6538461538461537, "no_caption_prob": 0.00010389961971668527}, {"id": 559, "seek": 361200, "start": 3612.0, "end": 3619.0, "text": " So I think that's another thing to keep in mind is like the abstractions should just really be meaningful.", "tokens": [50364, 407, 286, 519, 300, 311, 1071, 551, 281, 1066, 294, 1575, 307, 411, 264, 12649, 626, 820, 445, 534, 312, 10995, 13, 50714, 50714, 400, 293, 293, 309, 311, 406, 746, 291, 2573, 484, 1564, 293, 300, 311, 309, 13, 50914, 50914, 467, 311, 746, 300, 291, 362, 281, 411, 16145, 670, 565, 281, 652, 988, 309, 311, 10995, 293, 6515, 281, 312, 10995, 293, 5965, 493, 365, 428, 21085, 9274, 293, 428, 21085, 3701, 295, 264, 9274, 13, 51464, 51464, 407, 370, 11, 1338, 11, 286, 519, 534, 411, 652, 988, 300, 309, 311, 257, 10995, 3410, 294, 428, 9274, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05415395520768076, "compression_ratio": 1.8821138211382114, "no_caption_prob": 9.313719783676788e-05}, {"id": 560, "seek": 361200, "start": 3619.0, "end": 3623.0, "text": " And and and it's not something you figure out once and that's it.", "tokens": [50364, 407, 286, 519, 300, 311, 1071, 551, 281, 1066, 294, 1575, 307, 411, 264, 12649, 626, 820, 445, 534, 312, 10995, 13, 50714, 50714, 400, 293, 293, 309, 311, 406, 746, 291, 2573, 484, 1564, 293, 300, 311, 309, 13, 50914, 50914, 467, 311, 746, 300, 291, 362, 281, 411, 16145, 670, 565, 281, 652, 988, 309, 311, 10995, 293, 6515, 281, 312, 10995, 293, 5965, 493, 365, 428, 21085, 9274, 293, 428, 21085, 3701, 295, 264, 9274, 13, 51464, 51464, 407, 370, 11, 1338, 11, 286, 519, 534, 411, 652, 988, 300, 309, 311, 257, 10995, 3410, 294, 428, 9274, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05415395520768076, "compression_ratio": 1.8821138211382114, "no_caption_prob": 9.313719783676788e-05}, {"id": 561, "seek": 361200, "start": 3623.0, "end": 3634.0, "text": " It's something that you have to like massage over time to make sure it's meaningful and continues to be meaningful and keeps up with your evolving domain and your evolving understanding of the domain.", "tokens": [50364, 407, 286, 519, 300, 311, 1071, 551, 281, 1066, 294, 1575, 307, 411, 264, 12649, 626, 820, 445, 534, 312, 10995, 13, 50714, 50714, 400, 293, 293, 309, 311, 406, 746, 291, 2573, 484, 1564, 293, 300, 311, 309, 13, 50914, 50914, 467, 311, 746, 300, 291, 362, 281, 411, 16145, 670, 565, 281, 652, 988, 309, 311, 10995, 293, 6515, 281, 312, 10995, 293, 5965, 493, 365, 428, 21085, 9274, 293, 428, 21085, 3701, 295, 264, 9274, 13, 51464, 51464, 407, 370, 11, 1338, 11, 286, 519, 534, 411, 652, 988, 300, 309, 311, 257, 10995, 3410, 294, 428, 9274, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05415395520768076, "compression_ratio": 1.8821138211382114, "no_caption_prob": 9.313719783676788e-05}, {"id": 562, "seek": 361200, "start": 3634.0, "end": 3641.0, "text": " So so, yeah, I think really like make sure that it's a meaningful concept in your domain.", "tokens": [50364, 407, 286, 519, 300, 311, 1071, 551, 281, 1066, 294, 1575, 307, 411, 264, 12649, 626, 820, 445, 534, 312, 10995, 13, 50714, 50714, 400, 293, 293, 309, 311, 406, 746, 291, 2573, 484, 1564, 293, 300, 311, 309, 13, 50914, 50914, 467, 311, 746, 300, 291, 362, 281, 411, 16145, 670, 565, 281, 652, 988, 309, 311, 10995, 293, 6515, 281, 312, 10995, 293, 5965, 493, 365, 428, 21085, 9274, 293, 428, 21085, 3701, 295, 264, 9274, 13, 51464, 51464, 407, 370, 11, 1338, 11, 286, 519, 534, 411, 652, 988, 300, 309, 311, 257, 10995, 3410, 294, 428, 9274, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05415395520768076, "compression_ratio": 1.8821138211382114, "no_caption_prob": 9.313719783676788e-05}, {"id": 563, "seek": 364100, "start": 3641.0, "end": 3652.0, "text": " So one thing I sometimes think about is like can just giving things a name in a record serve this purpose of giving it context?", "tokens": [50364, 407, 472, 551, 286, 2171, 519, 466, 307, 411, 393, 445, 2902, 721, 257, 1315, 294, 257, 2136, 4596, 341, 4334, 295, 2902, 309, 4319, 30, 50914, 50914, 823, 11, 2745, 11, 291, 458, 11, 291, 727, 362, 257, 2136, 1460, 300, 575, 14941, 11, 24375, 14941, 294, 309, 13, 51314, 51314, 400, 300, 311, 300, 311, 406, 665, 1547, 13, 286, 2759, 380, 841, 665, 1547, 466, 300, 3089, 281, 11, 291, 458, 11, 300, 37765, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07115416867392403, "compression_ratio": 1.6076555023923444, "no_caption_prob": 7.602019468322396e-05}, {"id": 564, "seek": 364100, "start": 3652.0, "end": 3660.0, "text": " Now, obviously, you know, you could have a record money that has cents, USD cents in it.", "tokens": [50364, 407, 472, 551, 286, 2171, 519, 466, 307, 411, 393, 445, 2902, 721, 257, 1315, 294, 257, 2136, 4596, 341, 4334, 295, 2902, 309, 4319, 30, 50914, 50914, 823, 11, 2745, 11, 291, 458, 11, 291, 727, 362, 257, 2136, 1460, 300, 575, 14941, 11, 24375, 14941, 294, 309, 13, 51314, 51314, 400, 300, 311, 300, 311, 406, 665, 1547, 13, 286, 2759, 380, 841, 665, 1547, 466, 300, 3089, 281, 11, 291, 458, 11, 300, 37765, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07115416867392403, "compression_ratio": 1.6076555023923444, "no_caption_prob": 7.602019468322396e-05}, {"id": 565, "seek": 364100, "start": 3660.0, "end": 3667.0, "text": " And that's that's not good enough. I wouldn't feel good enough about that code to, you know, that abstraction for that.", "tokens": [50364, 407, 472, 551, 286, 2171, 519, 466, 307, 411, 393, 445, 2902, 721, 257, 1315, 294, 257, 2136, 4596, 341, 4334, 295, 2902, 309, 4319, 30, 50914, 50914, 823, 11, 2745, 11, 291, 458, 11, 291, 727, 362, 257, 2136, 1460, 300, 575, 14941, 11, 24375, 14941, 294, 309, 13, 51314, 51314, 400, 300, 311, 300, 311, 406, 665, 1547, 13, 286, 2759, 380, 841, 665, 1547, 466, 300, 3089, 281, 11, 291, 458, 11, 300, 37765, 337, 300, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.07115416867392403, "compression_ratio": 1.6076555023923444, "no_caption_prob": 7.602019468322396e-05}, {"id": 566, "seek": 366700, "start": 3667.0, "end": 3681.0, "text": " But I don't know. Sometimes if it's like this is a username, this is the first name, the last name, the maybe it's good enough to give it a name instead of just passing string, string, string, string, string, username, first name.", "tokens": [50364, 583, 286, 500, 380, 458, 13, 4803, 498, 309, 311, 411, 341, 307, 257, 30351, 11, 341, 307, 264, 700, 1315, 11, 264, 1036, 1315, 11, 264, 1310, 309, 311, 665, 1547, 281, 976, 309, 257, 1315, 2602, 295, 445, 8437, 6798, 11, 6798, 11, 6798, 11, 6798, 11, 6798, 11, 30351, 11, 700, 1315, 13, 51064, 51064, 509, 458, 11, 498, 309, 311, 257, 2136, 11, 2171, 300, 311, 665, 1547, 13, 400, 550, 11, 291, 458, 11, 1310, 291, 291, 15665, 729, 3755, 1826, 264, 1036, 3456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0741967444724225, "compression_ratio": 1.882051282051282, "no_caption_prob": 4.6110624680295587e-05}, {"id": 567, "seek": 366700, "start": 3681.0, "end": 3689.0, "text": " You know, if it's a record, sometimes that's good enough. And then, you know, maybe you you preserve those pieces until the last minute.", "tokens": [50364, 583, 286, 500, 380, 458, 13, 4803, 498, 309, 311, 411, 341, 307, 257, 30351, 11, 341, 307, 264, 700, 1315, 11, 264, 1036, 1315, 11, 264, 1310, 309, 311, 665, 1547, 281, 976, 309, 257, 1315, 2602, 295, 445, 8437, 6798, 11, 6798, 11, 6798, 11, 6798, 11, 6798, 11, 30351, 11, 700, 1315, 13, 51064, 51064, 509, 458, 11, 498, 309, 311, 257, 2136, 11, 2171, 300, 311, 665, 1547, 13, 400, 550, 11, 291, 458, 11, 1310, 291, 291, 15665, 729, 3755, 1826, 264, 1036, 3456, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.0741967444724225, "compression_ratio": 1.882051282051282, "no_caption_prob": 4.6110624680295587e-05}, {"id": 568, "seek": 368900, "start": 3689.0, "end": 3700.0, "text": " And then when you're presenting it, you say user dot first plus plus space plus plus user dot last. And you're like, yeah, I'm I'm pretty sure I'm using this correctly.", "tokens": [50364, 400, 550, 562, 291, 434, 15578, 309, 11, 291, 584, 4195, 5893, 700, 1804, 1804, 1901, 1804, 1804, 4195, 5893, 1036, 13, 400, 291, 434, 411, 11, 1338, 11, 286, 478, 286, 478, 1238, 988, 286, 478, 1228, 341, 8944, 13, 50914, 50914, 865, 13, 14159, 286, 536, 257, 2445, 300, 575, 732, 12869, 365, 264, 912, 2010, 300, 366, 958, 281, 1184, 661, 11, 411, 294, 24029, 6798, 6798, 11, 550, 286, 3928, 281, 1884, 257, 2136, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1244539467685194, "compression_ratio": 1.5857142857142856, "no_caption_prob": 3.763538188650273e-05}, {"id": 569, "seek": 368900, "start": 3700.0, "end": 3712.0, "text": " Yeah. Whenever I see a function that has two arguments with the same type that are next to each other, like in indoor string string, then I tend to create a record.", "tokens": [50364, 400, 550, 562, 291, 434, 15578, 309, 11, 291, 584, 4195, 5893, 700, 1804, 1804, 1901, 1804, 1804, 4195, 5893, 1036, 13, 400, 291, 434, 411, 11, 1338, 11, 286, 478, 286, 478, 1238, 988, 286, 478, 1228, 341, 8944, 13, 50914, 50914, 865, 13, 14159, 286, 536, 257, 2445, 300, 575, 732, 12869, 365, 264, 912, 2010, 300, 366, 958, 281, 1184, 661, 11, 411, 294, 24029, 6798, 6798, 11, 550, 286, 3928, 281, 1884, 257, 2136, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.1244539467685194, "compression_ratio": 1.5857142857142856, "no_caption_prob": 3.763538188650273e-05}, {"id": 570, "seek": 371200, "start": 3712.0, "end": 3722.0, "text": " I could indeed create a new type for this so that we can make we can't mess it up. But I guess in some cases, like they are the same type.", "tokens": [50364, 286, 727, 6451, 1884, 257, 777, 2010, 337, 341, 370, 300, 321, 393, 652, 321, 393, 380, 2082, 309, 493, 13, 583, 286, 2041, 294, 512, 3331, 11, 411, 436, 366, 264, 912, 2010, 13, 50864, 50864, 400, 300, 1389, 11, 411, 291, 362, 732, 3685, 295, 1108, 530, 11, 411, 291, 362, 24375, 14941, 293, 291, 362, 14206, 14941, 420, 291, 362, 2372, 294, 3765, 293, 2372, 294, 294, 2929, 1385, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12892155833058544, "compression_ratio": 1.6420454545454546, "no_caption_prob": 1.7502108676126227e-05}, {"id": 571, "seek": 371200, "start": 3722.0, "end": 3734.0, "text": " And that case, like you have two kinds of monies, like you have USD cents and you have euro cents or you have amount in bank and amount in in wallets.", "tokens": [50364, 286, 727, 6451, 1884, 257, 777, 2010, 337, 341, 370, 300, 321, 393, 652, 321, 393, 380, 2082, 309, 493, 13, 583, 286, 2041, 294, 512, 3331, 11, 411, 436, 366, 264, 912, 2010, 13, 50864, 50864, 400, 300, 1389, 11, 411, 291, 362, 732, 3685, 295, 1108, 530, 11, 411, 291, 362, 24375, 14941, 293, 291, 362, 14206, 14941, 420, 291, 362, 2372, 294, 3765, 293, 2372, 294, 294, 2929, 1385, 13, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.12892155833058544, "compression_ratio": 1.6420454545454546, "no_caption_prob": 1.7502108676126227e-05}, {"id": 572, "seek": 373400, "start": 3734.0, "end": 3743.0, "text": " And it's hard to like you probably wouldn't create another type around it. Like you could view money as a primitive at this point.", "tokens": [50364, 400, 309, 311, 1152, 281, 411, 291, 1391, 2759, 380, 1884, 1071, 2010, 926, 309, 13, 1743, 291, 727, 1910, 1460, 382, 257, 28540, 412, 341, 935, 13, 50814, 50814, 3764, 11, 286, 841, 411, 445, 4084, 7724, 307, 18587, 13, 400, 294, 512, 3331, 11, 309, 311, 516, 281, 312, 544, 42585, 570, 11, 2264, 11, 286, 362, 257, 1460, 6770, 13, 51264, 51264, 583, 437, 733, 295, 1460, 775, 309, 2906, 30, 663, 11, 797, 11, 307, 2731, 13, 663, 307, 1589, 300, 291, 500, 380, 362, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08701309244683449, "compression_ratio": 1.5661157024793388, "no_caption_prob": 9.97285133053083e-06}, {"id": 573, "seek": 373400, "start": 3743.0, "end": 3752.0, "text": " Again, I feel like just creating records is simpler. And in some cases, it's going to be more descriptive because, OK, I have a money argument.", "tokens": [50364, 400, 309, 311, 1152, 281, 411, 291, 1391, 2759, 380, 1884, 1071, 2010, 926, 309, 13, 1743, 291, 727, 1910, 1460, 382, 257, 28540, 412, 341, 935, 13, 50814, 50814, 3764, 11, 286, 841, 411, 445, 4084, 7724, 307, 18587, 13, 400, 294, 512, 3331, 11, 309, 311, 516, 281, 312, 544, 42585, 570, 11, 2264, 11, 286, 362, 257, 1460, 6770, 13, 51264, 51264, 583, 437, 733, 295, 1460, 775, 309, 2906, 30, 663, 11, 797, 11, 307, 2731, 13, 663, 307, 1589, 300, 291, 500, 380, 362, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08701309244683449, "compression_ratio": 1.5661157024793388, "no_caption_prob": 9.97285133053083e-06}, {"id": 574, "seek": 373400, "start": 3752.0, "end": 3759.0, "text": " But what kind of money does it represent? That, again, is lost. That is information that you don't have.", "tokens": [50364, 400, 309, 311, 1152, 281, 411, 291, 1391, 2759, 380, 1884, 1071, 2010, 926, 309, 13, 1743, 291, 727, 1910, 1460, 382, 257, 28540, 412, 341, 935, 13, 50814, 50814, 3764, 11, 286, 841, 411, 445, 4084, 7724, 307, 18587, 13, 400, 294, 512, 3331, 11, 309, 311, 516, 281, 312, 544, 42585, 570, 11, 2264, 11, 286, 362, 257, 1460, 6770, 13, 51264, 51264, 583, 437, 733, 295, 1460, 775, 309, 2906, 30, 663, 11, 797, 11, 307, 2731, 13, 663, 307, 1589, 300, 291, 500, 380, 362, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08701309244683449, "compression_ratio": 1.5661157024793388, "no_caption_prob": 9.97285133053083e-06}, {"id": 575, "seek": 375900, "start": 3759.0, "end": 3768.0, "text": " So a record is a pretty good solution for this, I think. For the representation within the opaque type to have a record?", "tokens": [50364, 407, 257, 2136, 307, 257, 1238, 665, 3827, 337, 341, 11, 286, 519, 13, 1171, 264, 10290, 1951, 264, 42687, 2010, 281, 362, 257, 2136, 30, 50814, 50814, 883, 11, 337, 2445, 12869, 11, 337, 5197, 13, 407, 291, 362, 257, 2445, 300, 20119, 264, 1460, 300, 291, 362, 294, 428, 16599, 293, 264, 1460, 291, 362, 294, 428, 3765, 2696, 13, 51364, 51364, 286, 536, 13, 1396, 291, 362, 257, 2136, 365, 1460, 294, 16599, 307, 1460, 293, 1460, 294, 3765, 2696, 307, 1460, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13839024437798395, "compression_ratio": 1.8669950738916257, "no_caption_prob": 2.5465382350375876e-05}, {"id": 576, "seek": 375900, "start": 3768.0, "end": 3779.0, "text": " No, for function arguments, for instance. So you have a function that displays the money that you have in your wallet and the money you have in your bank account.", "tokens": [50364, 407, 257, 2136, 307, 257, 1238, 665, 3827, 337, 341, 11, 286, 519, 13, 1171, 264, 10290, 1951, 264, 42687, 2010, 281, 362, 257, 2136, 30, 50814, 50814, 883, 11, 337, 2445, 12869, 11, 337, 5197, 13, 407, 291, 362, 257, 2445, 300, 20119, 264, 1460, 300, 291, 362, 294, 428, 16599, 293, 264, 1460, 291, 362, 294, 428, 3765, 2696, 13, 51364, 51364, 286, 536, 13, 1396, 291, 362, 257, 2136, 365, 1460, 294, 16599, 307, 1460, 293, 1460, 294, 3765, 2696, 307, 1460, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13839024437798395, "compression_ratio": 1.8669950738916257, "no_caption_prob": 2.5465382350375876e-05}, {"id": 577, "seek": 375900, "start": 3779.0, "end": 3786.0, "text": " I see. Then you have a record with money in wallet is money and money in bank account is money.", "tokens": [50364, 407, 257, 2136, 307, 257, 1238, 665, 3827, 337, 341, 11, 286, 519, 13, 1171, 264, 10290, 1951, 264, 42687, 2010, 281, 362, 257, 2136, 30, 50814, 50814, 883, 11, 337, 2445, 12869, 11, 337, 5197, 13, 407, 291, 362, 257, 2445, 300, 20119, 264, 1460, 300, 291, 362, 294, 428, 16599, 293, 264, 1460, 291, 362, 294, 428, 3765, 2696, 13, 51364, 51364, 286, 536, 13, 1396, 291, 362, 257, 2136, 365, 1460, 294, 16599, 307, 1460, 293, 1460, 294, 3765, 2696, 307, 1460, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.13839024437798395, "compression_ratio": 1.8669950738916257, "no_caption_prob": 2.5465382350375876e-05}, {"id": 578, "seek": 378600, "start": 3786.0, "end": 3795.0, "text": " Like a presentational record. Or whatever else you need to do with it. But at least it's better than having money, money.", "tokens": [50364, 1743, 257, 1974, 1478, 2136, 13, 1610, 2035, 1646, 291, 643, 281, 360, 365, 309, 13, 583, 412, 1935, 309, 311, 1101, 813, 1419, 1460, 11, 1460, 13, 50814, 50814, 1779, 11, 558, 13, 16631, 11, 1460, 11, 1460, 13, 13252, 312, 4074, 13, 51214, 51214, 865, 11, 286, 519, 2171, 300, 393, 312, 11563, 13, 400, 309, 311, 257, 665, 2290, 281, 362, 294, 428, 40167, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14126378960079616, "compression_ratio": 1.4480874316939891, "no_caption_prob": 0.00012147500092396513}, {"id": 579, "seek": 378600, "start": 3795.0, "end": 3803.0, "text": " Right, right. Money, money, money. Must be funny.", "tokens": [50364, 1743, 257, 1974, 1478, 2136, 13, 1610, 2035, 1646, 291, 643, 281, 360, 365, 309, 13, 583, 412, 1935, 309, 311, 1101, 813, 1419, 1460, 11, 1460, 13, 50814, 50814, 1779, 11, 558, 13, 16631, 11, 1460, 11, 1460, 13, 13252, 312, 4074, 13, 51214, 51214, 865, 11, 286, 519, 2171, 300, 393, 312, 11563, 13, 400, 309, 311, 257, 665, 2290, 281, 362, 294, 428, 40167, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14126378960079616, "compression_ratio": 1.4480874316939891, "no_caption_prob": 0.00012147500092396513}, {"id": 580, "seek": 378600, "start": 3803.0, "end": 3810.0, "text": " Yeah, I think sometimes that can be sufficient. And it's a good tool to have in your toolkit.", "tokens": [50364, 1743, 257, 1974, 1478, 2136, 13, 1610, 2035, 1646, 291, 643, 281, 360, 365, 309, 13, 583, 412, 1935, 309, 311, 1101, 813, 1419, 1460, 11, 1460, 13, 50814, 50814, 1779, 11, 558, 13, 16631, 11, 1460, 11, 1460, 13, 13252, 312, 4074, 13, 51214, 51214, 865, 11, 286, 519, 2171, 300, 393, 312, 11563, 13, 400, 309, 311, 257, 665, 2290, 281, 362, 294, 428, 40167, 13, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.14126378960079616, "compression_ratio": 1.4480874316939891, "no_caption_prob": 0.00012147500092396513}, {"id": 581, "seek": 381000, "start": 3810.0, "end": 3818.0, "text": " And again, I think that concept of unwrap late applies there. Because it preserves the semantics of those field names.", "tokens": [50364, 400, 797, 11, 286, 519, 300, 3410, 295, 14853, 4007, 3469, 13165, 456, 13, 1436, 309, 1183, 9054, 264, 4361, 45298, 295, 729, 2519, 5288, 13, 50764, 50764, 3950, 2519, 5288, 360, 976, 512, 47982, 1589, 293, 300, 311, 4420, 4319, 13, 51014, 51014, 4803, 286, 519, 300, 2604, 2622, 393, 312, 670, 4717, 13, 821, 366, 1629, 721, 300, 2604, 2622, 366, 1596, 1481, 337, 13, 51414, 51414, 583, 286, 519, 1419, 2604, 2622, 293, 1419, 517, 33465, 2375, 2010, 12869, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10659882117962015, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.0001420007465640083}, {"id": 582, "seek": 381000, "start": 3818.0, "end": 3823.0, "text": " Those field names do give some semantic information and that's useful context.", "tokens": [50364, 400, 797, 11, 286, 519, 300, 3410, 295, 14853, 4007, 3469, 13165, 456, 13, 1436, 309, 1183, 9054, 264, 4361, 45298, 295, 729, 2519, 5288, 13, 50764, 50764, 3950, 2519, 5288, 360, 976, 512, 47982, 1589, 293, 300, 311, 4420, 4319, 13, 51014, 51014, 4803, 286, 519, 300, 2604, 2622, 393, 312, 670, 4717, 13, 821, 366, 1629, 721, 300, 2604, 2622, 366, 1596, 1481, 337, 13, 51414, 51414, 583, 286, 519, 1419, 2604, 2622, 293, 1419, 517, 33465, 2375, 2010, 12869, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10659882117962015, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.0001420007465640083}, {"id": 583, "seek": 381000, "start": 3823.0, "end": 3831.0, "text": " Sometimes I think that tuples can be overused. There are certain things that tuples are quite nice for.", "tokens": [50364, 400, 797, 11, 286, 519, 300, 3410, 295, 14853, 4007, 3469, 13165, 456, 13, 1436, 309, 1183, 9054, 264, 4361, 45298, 295, 729, 2519, 5288, 13, 50764, 50764, 3950, 2519, 5288, 360, 976, 512, 47982, 1589, 293, 300, 311, 4420, 4319, 13, 51014, 51014, 4803, 286, 519, 300, 2604, 2622, 393, 312, 670, 4717, 13, 821, 366, 1629, 721, 300, 2604, 2622, 366, 1596, 1481, 337, 13, 51414, 51414, 583, 286, 519, 1419, 2604, 2622, 293, 1419, 517, 33465, 2375, 2010, 12869, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10659882117962015, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.0001420007465640083}, {"id": 584, "seek": 381000, "start": 3831.0, "end": 3838.0, "text": " But I think having tuples and having unnamed custom type arguments.", "tokens": [50364, 400, 797, 11, 286, 519, 300, 3410, 295, 14853, 4007, 3469, 13165, 456, 13, 1436, 309, 1183, 9054, 264, 4361, 45298, 295, 729, 2519, 5288, 13, 50764, 50764, 3950, 2519, 5288, 360, 976, 512, 47982, 1589, 293, 300, 311, 4420, 4319, 13, 51014, 51014, 4803, 286, 519, 300, 2604, 2622, 393, 312, 670, 4717, 13, 821, 366, 1629, 721, 300, 2604, 2622, 366, 1596, 1481, 337, 13, 51414, 51414, 583, 286, 519, 1419, 2604, 2622, 293, 1419, 517, 33465, 2375, 2010, 12869, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.10659882117962015, "compression_ratio": 1.7083333333333333, "no_caption_prob": 0.0001420007465640083}, {"id": 585, "seek": 383800, "start": 3838.0, "end": 3842.0, "text": " Oh yeah, yeah. Again, a place where you would use records probably.", "tokens": [50364, 876, 1338, 11, 1338, 13, 3764, 11, 257, 1081, 689, 291, 576, 764, 7724, 1391, 13, 50564, 50564, 865, 11, 2293, 13, 16649, 3467, 589, 588, 9594, 365, 7724, 13, 50764, 50764, 286, 914, 11, 2604, 2622, 366, 4420, 281, 3612, 1594, 721, 493, 281, 257, 1629, 1230, 295, 552, 13, 51164, 51164, 1779, 13, 583, 550, 562, 300, 3719, 1419, 47982, 3620, 11, 586, 300, 311, 18087, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10415959031614538, "compression_ratio": 1.4472361809045227, "no_caption_prob": 3.763503991649486e-05}, {"id": 586, "seek": 383800, "start": 3842.0, "end": 3846.0, "text": " Yeah, exactly. Custom types work very nicely with records.", "tokens": [50364, 876, 1338, 11, 1338, 13, 3764, 11, 257, 1081, 689, 291, 576, 764, 7724, 1391, 13, 50564, 50564, 865, 11, 2293, 13, 16649, 3467, 589, 588, 9594, 365, 7724, 13, 50764, 50764, 286, 914, 11, 2604, 2622, 366, 4420, 281, 3612, 1594, 721, 493, 281, 257, 1629, 1230, 295, 552, 13, 51164, 51164, 1779, 13, 583, 550, 562, 300, 3719, 1419, 47982, 3620, 11, 586, 300, 311, 18087, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10415959031614538, "compression_ratio": 1.4472361809045227, "no_caption_prob": 3.763503991649486e-05}, {"id": 587, "seek": 383800, "start": 3846.0, "end": 3854.0, "text": " I mean, tuples are useful to easily group things up to a certain number of them.", "tokens": [50364, 876, 1338, 11, 1338, 13, 3764, 11, 257, 1081, 689, 291, 576, 764, 7724, 1391, 13, 50564, 50564, 865, 11, 2293, 13, 16649, 3467, 589, 588, 9594, 365, 7724, 13, 50764, 50764, 286, 914, 11, 2604, 2622, 366, 4420, 281, 3612, 1594, 721, 493, 281, 257, 1629, 1230, 295, 552, 13, 51164, 51164, 1779, 13, 583, 550, 562, 300, 3719, 1419, 47982, 3620, 11, 586, 300, 311, 18087, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10415959031614538, "compression_ratio": 1.4472361809045227, "no_caption_prob": 3.763503991649486e-05}, {"id": 588, "seek": 383800, "start": 3854.0, "end": 3861.0, "text": " Right. But then when that starts having semantic meaning, now that's concerning.", "tokens": [50364, 876, 1338, 11, 1338, 13, 3764, 11, 257, 1081, 689, 291, 576, 764, 7724, 1391, 13, 50564, 50564, 865, 11, 2293, 13, 16649, 3467, 589, 588, 9594, 365, 7724, 13, 50764, 50764, 286, 914, 11, 2604, 2622, 366, 4420, 281, 3612, 1594, 721, 493, 281, 257, 1629, 1230, 295, 552, 13, 51164, 51164, 1779, 13, 583, 550, 562, 300, 3719, 1419, 47982, 3620, 11, 586, 300, 311, 18087, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.10415959031614538, "compression_ratio": 1.4472361809045227, "no_caption_prob": 3.763503991649486e-05}, {"id": 589, "seek": 386100, "start": 3861.0, "end": 3868.0, "text": " When it's like, you know, I don't know, you have a result, result.map to tuple.pair.", "tokens": [50364, 1133, 309, 311, 411, 11, 291, 458, 11, 286, 500, 380, 458, 11, 291, 362, 257, 1874, 11, 1874, 13, 24223, 281, 2604, 781, 13, 79, 1246, 13, 50714, 50714, 509, 434, 411, 1566, 11, 4177, 11, 286, 600, 658, 732, 3542, 13, 286, 528, 281, 4471, 552, 1214, 13, 50964, 50964, 400, 498, 721, 366, 2264, 322, 1293, 295, 613, 732, 721, 293, 472, 295, 264, 721, 307, 257, 4195, 293, 472, 295, 264, 721, 307, 641, 4772, 13, 51414, 51414, 2264, 11, 869, 13, 1743, 11, 291, 458, 11, 291, 600, 658, 613, 1850, 10392, 295, 437, 436, 366, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10608946602299528, "compression_ratio": 1.7294685990338163, "no_caption_prob": 5.828385110362433e-05}, {"id": 590, "seek": 386100, "start": 3868.0, "end": 3873.0, "text": " You're like saying, hey, I've got two results. I want to map them together.", "tokens": [50364, 1133, 309, 311, 411, 11, 291, 458, 11, 286, 500, 380, 458, 11, 291, 362, 257, 1874, 11, 1874, 13, 24223, 281, 2604, 781, 13, 79, 1246, 13, 50714, 50714, 509, 434, 411, 1566, 11, 4177, 11, 286, 600, 658, 732, 3542, 13, 286, 528, 281, 4471, 552, 1214, 13, 50964, 50964, 400, 498, 721, 366, 2264, 322, 1293, 295, 613, 732, 721, 293, 472, 295, 264, 721, 307, 257, 4195, 293, 472, 295, 264, 721, 307, 641, 4772, 13, 51414, 51414, 2264, 11, 869, 13, 1743, 11, 291, 458, 11, 291, 600, 658, 613, 1850, 10392, 295, 437, 436, 366, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10608946602299528, "compression_ratio": 1.7294685990338163, "no_caption_prob": 5.828385110362433e-05}, {"id": 591, "seek": 386100, "start": 3873.0, "end": 3882.0, "text": " And if things are OK on both of these two things and one of the things is a user and one of the things is their balance.", "tokens": [50364, 1133, 309, 311, 411, 11, 291, 458, 11, 286, 500, 380, 458, 11, 291, 362, 257, 1874, 11, 1874, 13, 24223, 281, 2604, 781, 13, 79, 1246, 13, 50714, 50714, 509, 434, 411, 1566, 11, 4177, 11, 286, 600, 658, 732, 3542, 13, 286, 528, 281, 4471, 552, 1214, 13, 50964, 50964, 400, 498, 721, 366, 2264, 322, 1293, 295, 613, 732, 721, 293, 472, 295, 264, 721, 307, 257, 4195, 293, 472, 295, 264, 721, 307, 641, 4772, 13, 51414, 51414, 2264, 11, 869, 13, 1743, 11, 291, 458, 11, 291, 600, 658, 613, 1850, 10392, 295, 437, 436, 366, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10608946602299528, "compression_ratio": 1.7294685990338163, "no_caption_prob": 5.828385110362433e-05}, {"id": 592, "seek": 386100, "start": 3882.0, "end": 3887.0, "text": " OK, great. Like, you know, you've got these clear concepts of what they are.", "tokens": [50364, 1133, 309, 311, 411, 11, 291, 458, 11, 286, 500, 380, 458, 11, 291, 362, 257, 1874, 11, 1874, 13, 24223, 281, 2604, 781, 13, 79, 1246, 13, 50714, 50714, 509, 434, 411, 1566, 11, 4177, 11, 286, 600, 658, 732, 3542, 13, 286, 528, 281, 4471, 552, 1214, 13, 50964, 50964, 400, 498, 721, 366, 2264, 322, 1293, 295, 613, 732, 721, 293, 472, 295, 264, 721, 307, 257, 4195, 293, 472, 295, 264, 721, 307, 641, 4772, 13, 51414, 51414, 2264, 11, 869, 13, 1743, 11, 291, 458, 11, 291, 600, 658, 613, 1850, 10392, 295, 437, 436, 366, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10608946602299528, "compression_ratio": 1.7294685990338163, "no_caption_prob": 5.828385110362433e-05}, {"id": 593, "seek": 388700, "start": 3887.0, "end": 3895.0, "text": " But if you're getting a record and the positions are the things that give you information and context of what it means,", "tokens": [50364, 583, 498, 291, 434, 1242, 257, 2136, 293, 264, 8432, 366, 264, 721, 300, 976, 291, 1589, 293, 4319, 295, 437, 309, 1355, 11, 50764, 50764, 13038, 291, 434, 1242, 411, 4319, 490, 20719, 437, 721, 294, 819, 8432, 914, 11, 300, 311, 257, 707, 857, 6958, 13, 51164, 51164, 865, 13, 663, 291, 1062, 3624, 4319, 293, 2890, 721, 493, 13, 407, 291, 445, 976, 721, 5288, 11, 291, 458, 13, 51464, 51464, 4803, 11, 2171, 411, 472, 295, 264, 881, 1021, 721, 300, 321, 360, 365, 1895, 578, 3662, 307, 2902, 721, 5288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0839358139038086, "compression_ratio": 1.831275720164609, "no_caption_prob": 7.484140951419249e-05}, {"id": 594, "seek": 388700, "start": 3895.0, "end": 3903.0, "text": " anytime you're getting like context from remembering what things in different positions mean, that's a little bit scary.", "tokens": [50364, 583, 498, 291, 434, 1242, 257, 2136, 293, 264, 8432, 366, 264, 721, 300, 976, 291, 1589, 293, 4319, 295, 437, 309, 1355, 11, 50764, 50764, 13038, 291, 434, 1242, 411, 4319, 490, 20719, 437, 721, 294, 819, 8432, 914, 11, 300, 311, 257, 707, 857, 6958, 13, 51164, 51164, 865, 13, 663, 291, 1062, 3624, 4319, 293, 2890, 721, 493, 13, 407, 291, 445, 976, 721, 5288, 11, 291, 458, 13, 51464, 51464, 4803, 11, 2171, 411, 472, 295, 264, 881, 1021, 721, 300, 321, 360, 365, 1895, 578, 3662, 307, 2902, 721, 5288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0839358139038086, "compression_ratio": 1.831275720164609, "no_caption_prob": 7.484140951419249e-05}, {"id": 595, "seek": 388700, "start": 3903.0, "end": 3909.0, "text": " Yeah. That you might lose context and mix things up. So you just give things names, you know.", "tokens": [50364, 583, 498, 291, 434, 1242, 257, 2136, 293, 264, 8432, 366, 264, 721, 300, 976, 291, 1589, 293, 4319, 295, 437, 309, 1355, 11, 50764, 50764, 13038, 291, 434, 1242, 411, 4319, 490, 20719, 437, 721, 294, 819, 8432, 914, 11, 300, 311, 257, 707, 857, 6958, 13, 51164, 51164, 865, 13, 663, 291, 1062, 3624, 4319, 293, 2890, 721, 493, 13, 407, 291, 445, 976, 721, 5288, 11, 291, 458, 13, 51464, 51464, 4803, 11, 2171, 411, 472, 295, 264, 881, 1021, 721, 300, 321, 360, 365, 1895, 578, 3662, 307, 2902, 721, 5288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0839358139038086, "compression_ratio": 1.831275720164609, "no_caption_prob": 7.484140951419249e-05}, {"id": 596, "seek": 388700, "start": 3909.0, "end": 3916.0, "text": " Sometimes, sometimes like one of the most important things that we do with refactoring is giving things names.", "tokens": [50364, 583, 498, 291, 434, 1242, 257, 2136, 293, 264, 8432, 366, 264, 721, 300, 976, 291, 1589, 293, 4319, 295, 437, 309, 1355, 11, 50764, 50764, 13038, 291, 434, 1242, 411, 4319, 490, 20719, 437, 721, 294, 819, 8432, 914, 11, 300, 311, 257, 707, 857, 6958, 13, 51164, 51164, 865, 13, 663, 291, 1062, 3624, 4319, 293, 2890, 721, 493, 13, 407, 291, 445, 976, 721, 5288, 11, 291, 458, 13, 51464, 51464, 4803, 11, 2171, 411, 472, 295, 264, 881, 1021, 721, 300, 321, 360, 365, 1895, 578, 3662, 307, 2902, 721, 5288, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.0839358139038086, "compression_ratio": 1.831275720164609, "no_caption_prob": 7.484140951419249e-05}, {"id": 597, "seek": 391600, "start": 3916.0, "end": 3922.0, "text": " You know, like. But naming is hard Dillon. Naming is hard. Naming is absolutely hard.", "tokens": [50364, 509, 458, 11, 411, 13, 583, 25290, 307, 1152, 28160, 13, 426, 5184, 307, 1152, 13, 426, 5184, 307, 3122, 1152, 13, 50664, 50664, 865, 13, 286, 914, 11, 2171, 445, 11, 291, 458, 11, 8947, 257, 707, 2445, 420, 257, 5754, 293, 976, 746, 257, 1315, 13, 50914, 50914, 400, 300, 311, 588, 4005, 13, 4803, 1261, 512, 11, 291, 458, 11, 257, 2604, 781, 666, 257, 2136, 293, 976, 729, 4190, 1315, 13, 51264, 51264, 400, 300, 309, 2544, 411, 309, 311, 406, 257, 10995, 2649, 11, 457, 309, 307, 570, 321, 434, 6255, 293, 321, 1401, 264, 3089, 293, 321, 13596, 4319, 490, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08771044867379325, "compression_ratio": 1.720472440944882, "no_caption_prob": 8.749961125431582e-05}, {"id": 598, "seek": 391600, "start": 3922.0, "end": 3927.0, "text": " Yeah. I mean, sometimes just, you know, extract a little function or a constant and give something a name.", "tokens": [50364, 509, 458, 11, 411, 13, 583, 25290, 307, 1152, 28160, 13, 426, 5184, 307, 1152, 13, 426, 5184, 307, 3122, 1152, 13, 50664, 50664, 865, 13, 286, 914, 11, 2171, 445, 11, 291, 458, 11, 8947, 257, 707, 2445, 420, 257, 5754, 293, 976, 746, 257, 1315, 13, 50914, 50914, 400, 300, 311, 588, 4005, 13, 4803, 1261, 512, 11, 291, 458, 11, 257, 2604, 781, 666, 257, 2136, 293, 976, 729, 4190, 1315, 13, 51264, 51264, 400, 300, 309, 2544, 411, 309, 311, 406, 257, 10995, 2649, 11, 457, 309, 307, 570, 321, 434, 6255, 293, 321, 1401, 264, 3089, 293, 321, 13596, 4319, 490, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08771044867379325, "compression_ratio": 1.720472440944882, "no_caption_prob": 8.749961125431582e-05}, {"id": 599, "seek": 391600, "start": 3927.0, "end": 3934.0, "text": " And that's very powerful. Sometimes turn some, you know, a tuple into a record and give those values name.", "tokens": [50364, 509, 458, 11, 411, 13, 583, 25290, 307, 1152, 28160, 13, 426, 5184, 307, 1152, 13, 426, 5184, 307, 3122, 1152, 13, 50664, 50664, 865, 13, 286, 914, 11, 2171, 445, 11, 291, 458, 11, 8947, 257, 707, 2445, 420, 257, 5754, 293, 976, 746, 257, 1315, 13, 50914, 50914, 400, 300, 311, 588, 4005, 13, 4803, 1261, 512, 11, 291, 458, 11, 257, 2604, 781, 666, 257, 2136, 293, 976, 729, 4190, 1315, 13, 51264, 51264, 400, 300, 309, 2544, 411, 309, 311, 406, 257, 10995, 2649, 11, 457, 309, 307, 570, 321, 434, 6255, 293, 321, 1401, 264, 3089, 293, 321, 13596, 4319, 490, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08771044867379325, "compression_ratio": 1.720472440944882, "no_caption_prob": 8.749961125431582e-05}, {"id": 600, "seek": 391600, "start": 3934.0, "end": 3941.0, "text": " And that it seems like it's not a meaningful difference, but it is because we're humans and we read the code and we infer context from it.", "tokens": [50364, 509, 458, 11, 411, 13, 583, 25290, 307, 1152, 28160, 13, 426, 5184, 307, 1152, 13, 426, 5184, 307, 3122, 1152, 13, 50664, 50664, 865, 13, 286, 914, 11, 2171, 445, 11, 291, 458, 11, 8947, 257, 707, 2445, 420, 257, 5754, 293, 976, 746, 257, 1315, 13, 50914, 50914, 400, 300, 311, 588, 4005, 13, 4803, 1261, 512, 11, 291, 458, 11, 257, 2604, 781, 666, 257, 2136, 293, 976, 729, 4190, 1315, 13, 51264, 51264, 400, 300, 309, 2544, 411, 309, 311, 406, 257, 10995, 2649, 11, 457, 309, 307, 570, 321, 434, 6255, 293, 321, 1401, 264, 3089, 293, 321, 13596, 4319, 490, 309, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08771044867379325, "compression_ratio": 1.720472440944882, "no_caption_prob": 8.749961125431582e-05}, {"id": 601, "seek": 394100, "start": 3941.0, "end": 3956.0, "text": " So it matters. I think we should have a honorable mention to a package that contains a lot of non primitive values, which is arm units from Ian McKenzie.", "tokens": [50364, 407, 309, 7001, 13, 286, 519, 321, 820, 362, 257, 36322, 2152, 281, 257, 7372, 300, 8306, 257, 688, 295, 2107, 28540, 4190, 11, 597, 307, 3726, 6815, 490, 19595, 21765, 32203, 13, 51114, 51114, 865, 11, 3122, 13, 509, 434, 406, 516, 281, 764, 552, 294, 439, 5821, 11, 457, 309, 8306, 257, 688, 295, 777, 2886, 38970, 294, 257, 636, 300, 764, 3726, 4965, 28540, 833, 3809, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15824226483906786, "compression_ratio": 1.5555555555555556, "no_caption_prob": 3.763436325243674e-05}, {"id": 602, "seek": 394100, "start": 3956.0, "end": 3970.0, "text": " Yeah, absolutely. You're not going to use them in all applications, but it contains a lot of new primitives in a way that use arm core primitive underhood", "tokens": [50364, 407, 309, 7001, 13, 286, 519, 321, 820, 362, 257, 36322, 2152, 281, 257, 7372, 300, 8306, 257, 688, 295, 2107, 28540, 4190, 11, 597, 307, 3726, 6815, 490, 19595, 21765, 32203, 13, 51114, 51114, 865, 11, 3122, 13, 509, 434, 406, 516, 281, 764, 552, 294, 439, 5821, 11, 457, 309, 8306, 257, 688, 295, 777, 2886, 38970, 294, 257, 636, 300, 764, 3726, 4965, 28540, 833, 3809, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.15824226483906786, "compression_ratio": 1.5555555555555556, "no_caption_prob": 3.763436325243674e-05}, {"id": 603, "seek": 397000, "start": 3970.0, "end": 3988.0, "text": " for like physics and space and distances and a lot of mathematical concepts like angles, energy, pixels, mass, volume, just getting a few of those.", "tokens": [50364, 337, 411, 10649, 293, 1901, 293, 22182, 293, 257, 688, 295, 18894, 10392, 411, 14708, 11, 2281, 11, 18668, 11, 2758, 11, 5523, 11, 445, 1242, 257, 1326, 295, 729, 13, 51264, 51264, 407, 498, 291, 366, 6260, 365, 604, 295, 729, 3685, 295, 6815, 11, 550, 309, 311, 1391, 665, 281, 747, 257, 574, 412, 341, 293, 550, 291, 500, 380, 362, 281, 360, 309, 439, 1803, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05755737383071691, "compression_ratio": 1.5309278350515463, "no_caption_prob": 1.2805198821297381e-05}, {"id": 604, "seek": 397000, "start": 3988.0, "end": 3999.0, "text": " So if you are dealing with any of those kinds of units, then it's probably good to take a look at this and then you don't have to do it all yourself.", "tokens": [50364, 337, 411, 10649, 293, 1901, 293, 22182, 293, 257, 688, 295, 18894, 10392, 411, 14708, 11, 2281, 11, 18668, 11, 2758, 11, 5523, 11, 445, 1242, 257, 1326, 295, 729, 13, 51264, 51264, 407, 498, 291, 366, 6260, 365, 604, 295, 729, 3685, 295, 6815, 11, 550, 309, 311, 1391, 665, 281, 747, 257, 574, 412, 341, 293, 550, 291, 500, 380, 362, 281, 360, 309, 439, 1803, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.05755737383071691, "compression_ratio": 1.5309278350515463, "no_caption_prob": 1.2805198821297381e-05}, {"id": 605, "seek": 399900, "start": 3999.0, "end": 4012.0, "text": " Right. And as to that composability concern, it helps with that because for one thing, you can sort of share these common types that have this semantic meaning with these units.", "tokens": [50364, 1779, 13, 400, 382, 281, 300, 10199, 2310, 3136, 11, 309, 3665, 365, 300, 570, 337, 472, 551, 11, 291, 393, 1333, 295, 2073, 613, 2689, 3467, 300, 362, 341, 47982, 3620, 365, 613, 6815, 13, 51014, 51014, 467, 2709, 291, 7705, 281, 2028, 365, 552, 294, 2098, 300, 366, 10995, 337, 613, 1333, 295, 10392, 295, 613, 3467, 295, 6815, 13, 400, 1338, 11, 300, 311, 257, 869, 1365, 295, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0728470566984895, "compression_ratio": 1.6798029556650247, "no_caption_prob": 1.1125384844490327e-05}, {"id": 606, "seek": 399900, "start": 4012.0, "end": 4022.0, "text": " It gives you operations to deal with them in ways that are meaningful for these sort of concepts of these types of units. And yeah, that's a great example of that.", "tokens": [50364, 1779, 13, 400, 382, 281, 300, 10199, 2310, 3136, 11, 309, 3665, 365, 300, 570, 337, 472, 551, 11, 291, 393, 1333, 295, 2073, 613, 2689, 3467, 300, 362, 341, 47982, 3620, 365, 613, 6815, 13, 51014, 51014, 467, 2709, 291, 7705, 281, 2028, 365, 552, 294, 2098, 300, 366, 10995, 337, 613, 1333, 295, 10392, 295, 613, 3467, 295, 6815, 13, 400, 1338, 11, 300, 311, 257, 869, 1365, 295, 300, 13, 51514, 51514], "temperature": 0.0, "avg_logprob": -0.0728470566984895, "compression_ratio": 1.6798029556650247, "no_caption_prob": 1.1125384844490327e-05}, {"id": 607, "seek": 402200, "start": 4022.0, "end": 4034.0, "text": " So Jeremy Fairbank, he did a whole talk and a few blog posts series about solving the Boolean identity crisis. We haven't talked about that at all, almost.", "tokens": [50364, 407, 17809, 12157, 25423, 11, 415, 630, 257, 1379, 751, 293, 257, 1326, 6968, 12300, 2638, 466, 12606, 264, 23351, 28499, 6575, 5869, 13, 492, 2378, 380, 2825, 466, 300, 412, 439, 11, 1920, 13, 50964, 50964, 883, 11, 321, 994, 380, 13, 583, 309, 311, 257, 588, 731, 1096, 751, 293, 588, 709, 3163, 257, 1159, 13, 492, 603, 2113, 281, 300, 13, 51214, 51214, 12151, 13, 286, 360, 841, 411, 321, 362, 13847, 512, 295, 702, 7389, 294, 6686, 411, 294, 527, 9313, 411, 49691, 892, 295, 7188, 327, 473, 293, 42687, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17952693939208986, "compression_ratio": 1.5436507936507937, "no_caption_prob": 2.1444171579787508e-05}, {"id": 608, "seek": 402200, "start": 4034.0, "end": 4039.0, "text": " No, we didn't. But it's a very well done talk and very much worth a watch. We'll link to that.", "tokens": [50364, 407, 17809, 12157, 25423, 11, 415, 630, 257, 1379, 751, 293, 257, 1326, 6968, 12300, 2638, 466, 12606, 264, 23351, 28499, 6575, 5869, 13, 492, 2378, 380, 2825, 466, 300, 412, 439, 11, 1920, 13, 50964, 50964, 883, 11, 321, 994, 380, 13, 583, 309, 311, 257, 588, 731, 1096, 751, 293, 588, 709, 3163, 257, 1159, 13, 492, 603, 2113, 281, 300, 13, 51214, 51214, 12151, 13, 286, 360, 841, 411, 321, 362, 13847, 512, 295, 702, 7389, 294, 6686, 411, 294, 527, 9313, 411, 49691, 892, 295, 7188, 327, 473, 293, 42687, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17952693939208986, "compression_ratio": 1.5436507936507937, "no_caption_prob": 2.1444171579787508e-05}, {"id": 609, "seek": 402200, "start": 4039.0, "end": 4049.0, "text": " Definitely. I do feel like we have addressed some of his concerns in talks like in our episodes like Parsons of Validate and opaque types.", "tokens": [50364, 407, 17809, 12157, 25423, 11, 415, 630, 257, 1379, 751, 293, 257, 1326, 6968, 12300, 2638, 466, 12606, 264, 23351, 28499, 6575, 5869, 13, 492, 2378, 380, 2825, 466, 300, 412, 439, 11, 1920, 13, 50964, 50964, 883, 11, 321, 994, 380, 13, 583, 309, 311, 257, 588, 731, 1096, 751, 293, 588, 709, 3163, 257, 1159, 13, 492, 603, 2113, 281, 300, 13, 51214, 51214, 12151, 13, 286, 360, 841, 411, 321, 362, 13847, 512, 295, 702, 7389, 294, 6686, 411, 294, 527, 9313, 411, 49691, 892, 295, 7188, 327, 473, 293, 42687, 3467, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.17952693939208986, "compression_ratio": 1.5436507936507937, "no_caption_prob": 2.1444171579787508e-05}, {"id": 610, "seek": 404900, "start": 4049.0, "end": 4061.0, "text": " So I think with those two and this episode, we covered most of it. So go give those episodes a listen again if you forgot about those and his talk as well.", "tokens": [50364, 407, 286, 519, 365, 729, 732, 293, 341, 3500, 11, 321, 5343, 881, 295, 309, 13, 407, 352, 976, 729, 9313, 257, 2140, 797, 498, 291, 5298, 466, 729, 293, 702, 751, 382, 731, 13, 50964, 50964, 865, 11, 321, 994, 380, 534, 13, 634, 775, 751, 466, 264, 3410, 295, 48377, 500, 380, 29562, 257, 688, 13, 634, 1177, 380, 2864, 281, 309, 538, 729, 2115, 11, 457, 415, 6686, 466, 1333, 295, 264, 1558, 295, 411, 8568, 337, 257, 551, 293, 550, 1242, 264, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11476072021152663, "compression_ratio": 1.7031963470319635, "no_caption_prob": 3.9439510146621615e-05}, {"id": 611, "seek": 404900, "start": 4061.0, "end": 4076.0, "text": " Yeah, we didn't really. He does talk about the concept of parse don't validate a lot. He doesn't refer to it by those terms, but he talks about sort of the idea of like checking for a thing and then getting the thing.", "tokens": [50364, 407, 286, 519, 365, 729, 732, 293, 341, 3500, 11, 321, 5343, 881, 295, 309, 13, 407, 352, 976, 729, 9313, 257, 2140, 797, 498, 291, 5298, 466, 729, 293, 702, 751, 382, 731, 13, 50964, 50964, 865, 11, 321, 994, 380, 534, 13, 634, 775, 751, 466, 264, 3410, 295, 48377, 500, 380, 29562, 257, 688, 13, 634, 1177, 380, 2864, 281, 309, 538, 729, 2115, 11, 457, 415, 6686, 466, 1333, 295, 264, 1558, 295, 411, 8568, 337, 257, 551, 293, 550, 1242, 264, 551, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11476072021152663, "compression_ratio": 1.7031963470319635, "no_caption_prob": 3.9439510146621615e-05}, {"id": 612, "seek": 407600, "start": 4076.0, "end": 4082.0, "text": " But you lose the context that you actually had the thing, which is parse don't validate. That's the term we hear most often these days.", "tokens": [50364, 583, 291, 3624, 264, 4319, 300, 291, 767, 632, 264, 551, 11, 597, 307, 48377, 500, 380, 29562, 13, 663, 311, 264, 1433, 321, 1568, 881, 2049, 613, 1708, 13, 50664, 50664, 865, 11, 300, 1433, 307, 490, 412, 1935, 472, 935, 538, 24086, 72, 441, 4483, 390, 490, 6071, 293, 264, 751, 307, 490, 6591, 13, 51014, 51014, 821, 291, 352, 13, 492, 393, 380, 10127, 796, 337, 264, 1433, 294, 7295, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.15526995292076698, "compression_ratio": 1.489795918367347, "no_caption_prob": 3.0240593332564458e-05}, {"id": 613, "seek": 407600, "start": 4082.0, "end": 4089.0, "text": " Yeah, that term is from at least one point by Lexi Lander was from 2019 and the talk is from 2017.", "tokens": [50364, 583, 291, 3624, 264, 4319, 300, 291, 767, 632, 264, 551, 11, 597, 307, 48377, 500, 380, 29562, 13, 663, 311, 264, 1433, 321, 1568, 881, 2049, 613, 1708, 13, 50664, 50664, 865, 11, 300, 1433, 307, 490, 412, 1935, 472, 935, 538, 24086, 72, 441, 4483, 390, 490, 6071, 293, 264, 751, 307, 490, 6591, 13, 51014, 51014, 821, 291, 352, 13, 492, 393, 380, 10127, 796, 337, 264, 1433, 294, 7295, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.15526995292076698, "compression_ratio": 1.489795918367347, "no_caption_prob": 3.0240593332564458e-05}, {"id": 614, "seek": 407600, "start": 4089.0, "end": 4095.0, "text": " There you go. We can't blame him for the term in advance.", "tokens": [50364, 583, 291, 3624, 264, 4319, 300, 291, 767, 632, 264, 551, 11, 597, 307, 48377, 500, 380, 29562, 13, 663, 311, 264, 1433, 321, 1568, 881, 2049, 613, 1708, 13, 50664, 50664, 865, 11, 300, 1433, 307, 490, 412, 1935, 472, 935, 538, 24086, 72, 441, 4483, 390, 490, 6071, 293, 264, 751, 307, 490, 6591, 13, 51014, 51014, 821, 291, 352, 13, 492, 393, 380, 10127, 796, 337, 264, 1433, 294, 7295, 13, 51314, 51314], "temperature": 0.0, "avg_logprob": -0.15526995292076698, "compression_ratio": 1.489795918367347, "no_caption_prob": 3.0240593332564458e-05}, {"id": 615, "seek": 409500, "start": 4095.0, "end": 4106.0, "text": " Yes, and that's a great point. Also, I think there's something to just get having the context of what a thing means.", "tokens": [50364, 1079, 11, 293, 300, 311, 257, 869, 935, 13, 2743, 11, 286, 519, 456, 311, 746, 281, 445, 483, 1419, 264, 4319, 295, 437, 257, 551, 1355, 13, 50914, 50914, 400, 415, 6686, 466, 19139, 613, 1333, 295, 2074, 293, 7908, 365, 544, 10995, 2115, 365, 2375, 3467, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.10612213386679595, "compression_ratio": 1.4473684210526316, "no_caption_prob": 0.00012337016232777387}, {"id": 616, "seek": 409500, "start": 4106.0, "end": 4113.0, "text": " And he talks about replacing these sort of true and false with more meaningful terms with custom types.", "tokens": [50364, 1079, 11, 293, 300, 311, 257, 869, 935, 13, 2743, 11, 286, 519, 456, 311, 746, 281, 445, 483, 1419, 264, 4319, 295, 437, 257, 551, 1355, 13, 50914, 50914, 400, 415, 6686, 466, 19139, 613, 1333, 295, 2074, 293, 7908, 365, 544, 10995, 2115, 365, 2375, 3467, 13, 51264, 51264], "temperature": 0.0, "avg_logprob": -0.10612213386679595, "compression_ratio": 1.4473684210526316, "no_caption_prob": 0.00012337016232777387}, {"id": 617, "seek": 411300, "start": 4113.0, "end": 4128.0, "text": " And I think that's a great practice that to be honest, I think I underuse that. I think too often I'll say, you know, is production true or false instead of environment, prod or dev.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 869, 3124, 300, 281, 312, 3245, 11, 286, 519, 286, 833, 438, 300, 13, 286, 519, 886, 2049, 286, 603, 584, 11, 291, 458, 11, 307, 4265, 2074, 420, 7908, 2602, 295, 2823, 11, 15792, 420, 1905, 13, 51114, 51114, 400, 286, 519, 286, 727, 2138, 652, 764, 295, 300, 709, 544, 2049, 13, 51364, 51364, 286, 920, 841, 411, 286, 478, 1228, 307, 4739, 2681, 2074, 293, 286, 478, 411, 11, 820, 300, 312, 257, 777, 2010, 30, 286, 500, 380, 458, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1330795592450081, "compression_ratio": 1.6045454545454545, "no_caption_prob": 6.709005538141355e-05}, {"id": 618, "seek": 411300, "start": 4128.0, "end": 4133.0, "text": " And I think I could definitely make use of that much more often.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 869, 3124, 300, 281, 312, 3245, 11, 286, 519, 286, 833, 438, 300, 13, 286, 519, 886, 2049, 286, 603, 584, 11, 291, 458, 11, 307, 4265, 2074, 420, 7908, 2602, 295, 2823, 11, 15792, 420, 1905, 13, 51114, 51114, 400, 286, 519, 286, 727, 2138, 652, 764, 295, 300, 709, 544, 2049, 13, 51364, 51364, 286, 920, 841, 411, 286, 478, 1228, 307, 4739, 2681, 2074, 293, 286, 478, 411, 11, 820, 300, 312, 257, 777, 2010, 30, 286, 500, 380, 458, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1330795592450081, "compression_ratio": 1.6045454545454545, "no_caption_prob": 6.709005538141355e-05}, {"id": 619, "seek": 411300, "start": 4133.0, "end": 4141.0, "text": " I still feel like I'm using is required equal true and I'm like, should that be a new type? I don't know.", "tokens": [50364, 400, 286, 519, 300, 311, 257, 869, 3124, 300, 281, 312, 3245, 11, 286, 519, 286, 833, 438, 300, 13, 286, 519, 886, 2049, 286, 603, 584, 11, 291, 458, 11, 307, 4265, 2074, 420, 7908, 2602, 295, 2823, 11, 15792, 420, 1905, 13, 51114, 51114, 400, 286, 519, 286, 727, 2138, 652, 764, 295, 300, 709, 544, 2049, 13, 51364, 51364, 286, 920, 841, 411, 286, 478, 1228, 307, 4739, 2681, 2074, 293, 286, 478, 411, 11, 820, 300, 312, 257, 777, 2010, 30, 286, 500, 380, 458, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.1330795592450081, "compression_ratio": 1.6045454545454545, "no_caption_prob": 6.709005538141355e-05}, {"id": 620, "seek": 414100, "start": 4141.0, "end": 4147.0, "text": " Yeah, I think I don't reach for that as readily as I ought to.", "tokens": [50364, 865, 11, 286, 519, 286, 500, 380, 2524, 337, 300, 382, 26336, 382, 286, 13416, 281, 13, 50664, 50664, 286, 519, 309, 311, 3163, 1382, 484, 281, 829, 309, 411, 1920, 5315, 293, 550, 13059, 13, 50964, 50964, 865, 11, 445, 411, 286, 959, 264, 7512, 13, 1743, 437, 286, 2049, 584, 307, 294, 2699, 76, 11, 291, 393, 853, 309, 257, 1326, 7512, 293, 550, 309, 311, 1858, 281, 1895, 15104, 281, 4159, 729, 382, 938, 382, 291, 43060, 3337, 10107, 309, 3071, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15134435289361503, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00010229229519609362}, {"id": 621, "seek": 414100, "start": 4147.0, "end": 4153.0, "text": " I think it's worth trying out to put it like almost everywhere and then evaluate.", "tokens": [50364, 865, 11, 286, 519, 286, 500, 380, 2524, 337, 300, 382, 26336, 382, 286, 13416, 281, 13, 50664, 50664, 286, 519, 309, 311, 3163, 1382, 484, 281, 829, 309, 411, 1920, 5315, 293, 550, 13059, 13, 50964, 50964, 865, 11, 445, 411, 286, 959, 264, 7512, 13, 1743, 437, 286, 2049, 584, 307, 294, 2699, 76, 11, 291, 393, 853, 309, 257, 1326, 7512, 293, 550, 309, 311, 1858, 281, 1895, 15104, 281, 4159, 729, 382, 938, 382, 291, 43060, 3337, 10107, 309, 3071, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15134435289361503, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00010229229519609362}, {"id": 622, "seek": 414100, "start": 4153.0, "end": 4167.0, "text": " Yeah, just like I love the techniques. Like what I often say is in Elm, you can try it a few techniques and then it's easy to refactor to remove those as long as you reevaluate it earlier.", "tokens": [50364, 865, 11, 286, 519, 286, 500, 380, 2524, 337, 300, 382, 26336, 382, 286, 13416, 281, 13, 50664, 50664, 286, 519, 309, 311, 3163, 1382, 484, 281, 829, 309, 411, 1920, 5315, 293, 550, 13059, 13, 50964, 50964, 865, 11, 445, 411, 286, 959, 264, 7512, 13, 1743, 437, 286, 2049, 584, 307, 294, 2699, 76, 11, 291, 393, 853, 309, 257, 1326, 7512, 293, 550, 309, 311, 1858, 281, 1895, 15104, 281, 4159, 729, 382, 938, 382, 291, 43060, 3337, 10107, 309, 3071, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.15134435289361503, "compression_ratio": 1.608695652173913, "no_caption_prob": 0.00010229229519609362}, {"id": 623, "seek": 416700, "start": 4167.0, "end": 4175.0, "text": " Yes, I think I think we earn our own trust when we do small refactoring steps and commit them often.", "tokens": [50364, 1079, 11, 286, 519, 286, 519, 321, 6012, 527, 1065, 3361, 562, 321, 360, 1359, 1895, 578, 3662, 4439, 293, 5599, 552, 2049, 13, 50764, 50764, 492, 3624, 3361, 294, 527, 22119, 300, 321, 603, 1562, 360, 257, 1895, 578, 3662, 562, 321, 787, 360, 955, 15245, 1895, 578, 3662, 13, 51114, 51114, 492, 362, 257, 7410, 1895, 578, 3662, 9819, 300, 321, 500, 380, 22183, 337, 257, 1618, 13, 51314, 51314, 492, 1590, 28235, 4175, 293, 365, 665, 1778, 562, 300, 311, 264, 787, 565, 1895, 578, 3662, 2314, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06902908525968852, "compression_ratio": 1.7729468599033817, "no_caption_prob": 4.539220390142873e-05}, {"id": 624, "seek": 416700, "start": 4175.0, "end": 4182.0, "text": " We lose trust in our likelihood that we'll ever do a refactoring when we only do big batch refactoring.", "tokens": [50364, 1079, 11, 286, 519, 286, 519, 321, 6012, 527, 1065, 3361, 562, 321, 360, 1359, 1895, 578, 3662, 4439, 293, 5599, 552, 2049, 13, 50764, 50764, 492, 3624, 3361, 294, 527, 22119, 300, 321, 603, 1562, 360, 257, 1895, 578, 3662, 562, 321, 787, 360, 955, 15245, 1895, 578, 3662, 13, 51114, 51114, 492, 362, 257, 7410, 1895, 578, 3662, 9819, 300, 321, 500, 380, 22183, 337, 257, 1618, 13, 51314, 51314, 492, 1590, 28235, 4175, 293, 365, 665, 1778, 562, 300, 311, 264, 787, 565, 1895, 578, 3662, 2314, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06902908525968852, "compression_ratio": 1.7729468599033817, "no_caption_prob": 4.539220390142873e-05}, {"id": 625, "seek": 416700, "start": 4182.0, "end": 4186.0, "text": " We have a giant refactoring branch that we don't merge for a month.", "tokens": [50364, 1079, 11, 286, 519, 286, 519, 321, 6012, 527, 1065, 3361, 562, 321, 360, 1359, 1895, 578, 3662, 4439, 293, 5599, 552, 2049, 13, 50764, 50764, 492, 3624, 3361, 294, 527, 22119, 300, 321, 603, 1562, 360, 257, 1895, 578, 3662, 562, 321, 787, 360, 955, 15245, 1895, 578, 3662, 13, 51114, 51114, 492, 362, 257, 7410, 1895, 578, 3662, 9819, 300, 321, 500, 380, 22183, 337, 257, 1618, 13, 51314, 51314, 492, 1590, 28235, 4175, 293, 365, 665, 1778, 562, 300, 311, 264, 787, 565, 1895, 578, 3662, 2314, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06902908525968852, "compression_ratio": 1.7729468599033817, "no_caption_prob": 4.539220390142873e-05}, {"id": 626, "seek": 416700, "start": 4186.0, "end": 4192.0, "text": " We stop trusting ourselves and with good reason when that's the only time refactoring happens.", "tokens": [50364, 1079, 11, 286, 519, 286, 519, 321, 6012, 527, 1065, 3361, 562, 321, 360, 1359, 1895, 578, 3662, 4439, 293, 5599, 552, 2049, 13, 50764, 50764, 492, 3624, 3361, 294, 527, 22119, 300, 321, 603, 1562, 360, 257, 1895, 578, 3662, 562, 321, 787, 360, 955, 15245, 1895, 578, 3662, 13, 51114, 51114, 492, 362, 257, 7410, 1895, 578, 3662, 9819, 300, 321, 500, 380, 22183, 337, 257, 1618, 13, 51314, 51314, 492, 1590, 28235, 4175, 293, 365, 665, 1778, 562, 300, 311, 264, 787, 565, 1895, 578, 3662, 2314, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06902908525968852, "compression_ratio": 1.7729468599033817, "no_caption_prob": 4.539220390142873e-05}, {"id": 627, "seek": 419200, "start": 4192.0, "end": 4200.0, "text": " So we we that means we aren't going to experiment as much because we know I'm probably never going to refactor this.", "tokens": [50364, 407, 321, 321, 300, 1355, 321, 3212, 380, 516, 281, 5120, 382, 709, 570, 321, 458, 286, 478, 1391, 1128, 516, 281, 1895, 15104, 341, 13, 50764, 50764, 407, 11, 291, 458, 11, 976, 1803, 264, 15558, 295, 884, 1359, 1895, 578, 3662, 10374, 293, 293, 14122, 552, 884, 1359, 11, 3273, 1895, 578, 3662, 4439, 570, 300, 1355, 291, 293, 428, 1469, 366, 516, 281, 1322, 493, 544, 3361, 300, 291, 767, 486, 483, 281, 257, 1895, 578, 3662, 13, 51514, 51514, 400, 300, 4045, 291, 281, 5120, 544, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06783680162931743, "compression_ratio": 1.8206278026905829, "no_caption_prob": 7.842743798391894e-05}, {"id": 628, "seek": 419200, "start": 4200.0, "end": 4215.0, "text": " So, you know, give yourself the luxury of doing small refactoring frequently and and shipping them doing small, safe refactoring steps because that means you and your team are going to build up more trust that you actually will get to a refactoring.", "tokens": [50364, 407, 321, 321, 300, 1355, 321, 3212, 380, 516, 281, 5120, 382, 709, 570, 321, 458, 286, 478, 1391, 1128, 516, 281, 1895, 15104, 341, 13, 50764, 50764, 407, 11, 291, 458, 11, 976, 1803, 264, 15558, 295, 884, 1359, 1895, 578, 3662, 10374, 293, 293, 14122, 552, 884, 1359, 11, 3273, 1895, 578, 3662, 4439, 570, 300, 1355, 291, 293, 428, 1469, 366, 516, 281, 1322, 493, 544, 3361, 300, 291, 767, 486, 483, 281, 257, 1895, 578, 3662, 13, 51514, 51514, 400, 300, 4045, 291, 281, 5120, 544, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06783680162931743, "compression_ratio": 1.8206278026905829, "no_caption_prob": 7.842743798391894e-05}, {"id": 629, "seek": 419200, "start": 4215.0, "end": 4217.0, "text": " And that allows you to experiment more.", "tokens": [50364, 407, 321, 321, 300, 1355, 321, 3212, 380, 516, 281, 5120, 382, 709, 570, 321, 458, 286, 478, 1391, 1128, 516, 281, 1895, 15104, 341, 13, 50764, 50764, 407, 11, 291, 458, 11, 976, 1803, 264, 15558, 295, 884, 1359, 1895, 578, 3662, 10374, 293, 293, 14122, 552, 884, 1359, 11, 3273, 1895, 578, 3662, 4439, 570, 300, 1355, 291, 293, 428, 1469, 366, 516, 281, 1322, 493, 544, 3361, 300, 291, 767, 486, 483, 281, 257, 1895, 578, 3662, 13, 51514, 51514, 400, 300, 4045, 291, 281, 5120, 544, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.06783680162931743, "compression_ratio": 1.8206278026905829, "no_caption_prob": 7.842743798391894e-05}, {"id": 630, "seek": 421700, "start": 4217.0, "end": 4228.0, "text": " Also, I gave a talk, I actually haven't really publicized this much or like shared the links, but I'll drop a link in the show notes that I gave a talk called using semantic types to squash bugs.", "tokens": [50364, 2743, 11, 286, 2729, 257, 751, 11, 286, 767, 2378, 380, 534, 1908, 1602, 341, 709, 420, 411, 5507, 264, 6123, 11, 457, 286, 603, 3270, 257, 2113, 294, 264, 855, 5570, 300, 286, 2729, 257, 751, 1219, 1228, 47982, 3467, 281, 30725, 15120, 13, 50914, 50914, 400, 286, 751, 466, 341, 3410, 295, 7019, 2440, 11, 14853, 4007, 3469, 13, 51164, 51164, 286, 1792, 807, 613, 1333, 295, 1895, 578, 3662, 4439, 295, 577, 281, 577, 281, 3079, 300, 12070, 1895, 578, 3662, 321, 2825, 466, 293, 577, 281, 764, 309, 281, 3191, 257, 7426, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08751601039773167, "compression_ratio": 1.6835443037974684, "no_caption_prob": 2.212430081272032e-05}, {"id": 631, "seek": 421700, "start": 4228.0, "end": 4233.0, "text": " And I talk about this concept of wrap early, unwrap late.", "tokens": [50364, 2743, 11, 286, 2729, 257, 751, 11, 286, 767, 2378, 380, 534, 1908, 1602, 341, 709, 420, 411, 5507, 264, 6123, 11, 457, 286, 603, 3270, 257, 2113, 294, 264, 855, 5570, 300, 286, 2729, 257, 751, 1219, 1228, 47982, 3467, 281, 30725, 15120, 13, 50914, 50914, 400, 286, 751, 466, 341, 3410, 295, 7019, 2440, 11, 14853, 4007, 3469, 13, 51164, 51164, 286, 1792, 807, 613, 1333, 295, 1895, 578, 3662, 4439, 295, 577, 281, 577, 281, 3079, 300, 12070, 1895, 578, 3662, 321, 2825, 466, 293, 577, 281, 764, 309, 281, 3191, 257, 7426, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08751601039773167, "compression_ratio": 1.6835443037974684, "no_caption_prob": 2.212430081272032e-05}, {"id": 632, "seek": 421700, "start": 4233.0, "end": 4242.0, "text": " I walk through these sort of refactoring steps of how to how to apply that mechanical refactoring we talked about and how to use it to fix a bug.", "tokens": [50364, 2743, 11, 286, 2729, 257, 751, 11, 286, 767, 2378, 380, 534, 1908, 1602, 341, 709, 420, 411, 5507, 264, 6123, 11, 457, 286, 603, 3270, 257, 2113, 294, 264, 855, 5570, 300, 286, 2729, 257, 751, 1219, 1228, 47982, 3467, 281, 30725, 15120, 13, 50914, 50914, 400, 286, 751, 466, 341, 3410, 295, 7019, 2440, 11, 14853, 4007, 3469, 13, 51164, 51164, 286, 1792, 807, 613, 1333, 295, 1895, 578, 3662, 4439, 295, 577, 281, 577, 281, 3079, 300, 12070, 1895, 578, 3662, 321, 2825, 466, 293, 577, 281, 764, 309, 281, 3191, 257, 7426, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.08751601039773167, "compression_ratio": 1.6835443037974684, "no_caption_prob": 2.212430081272032e-05}, {"id": 633, "seek": 424200, "start": 4242.0, "end": 4248.0, "text": " And yeah, so I think if those concepts are interesting, check that out.", "tokens": [50364, 400, 1338, 11, 370, 286, 519, 498, 729, 10392, 366, 1880, 11, 1520, 300, 484, 13, 50664, 50664, 1119, 309, 264, 472, 689, 291, 751, 466, 2093, 3825, 3487, 30, 50814, 50814, 467, 307, 13, 1079, 11, 2293, 13, 400, 286, 603, 3270, 257, 2113, 281, 257, 6968, 2183, 286, 362, 281, 466, 1228, 1333, 295, 8729, 8539, 43153, 281, 281, 1520, 729, 18491, 365, 42687, 3467, 13, 51314, 51314, 1042, 11, 286, 519, 321, 600, 286, 519, 321, 600, 5343, 28540, 30521, 1238, 731, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07174167103237576, "compression_ratio": 1.536480686695279, "no_caption_prob": 9.460732690058649e-05}, {"id": 634, "seek": 424200, "start": 4248.0, "end": 4251.0, "text": " Is it the one where you talk about social security ideas?", "tokens": [50364, 400, 1338, 11, 370, 286, 519, 498, 729, 10392, 366, 1880, 11, 1520, 300, 484, 13, 50664, 50664, 1119, 309, 264, 472, 689, 291, 751, 466, 2093, 3825, 3487, 30, 50814, 50814, 467, 307, 13, 1079, 11, 2293, 13, 400, 286, 603, 3270, 257, 2113, 281, 257, 6968, 2183, 286, 362, 281, 466, 1228, 1333, 295, 8729, 8539, 43153, 281, 281, 1520, 729, 18491, 365, 42687, 3467, 13, 51314, 51314, 1042, 11, 286, 519, 321, 600, 286, 519, 321, 600, 5343, 28540, 30521, 1238, 731, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07174167103237576, "compression_ratio": 1.536480686695279, "no_caption_prob": 9.460732690058649e-05}, {"id": 635, "seek": 424200, "start": 4251.0, "end": 4261.0, "text": " It is. Yes, exactly. And I'll drop a link to a blog post I have to about using sort of entry gatekeepers to to check those constraints with opaque types.", "tokens": [50364, 400, 1338, 11, 370, 286, 519, 498, 729, 10392, 366, 1880, 11, 1520, 300, 484, 13, 50664, 50664, 1119, 309, 264, 472, 689, 291, 751, 466, 2093, 3825, 3487, 30, 50814, 50814, 467, 307, 13, 1079, 11, 2293, 13, 400, 286, 603, 3270, 257, 2113, 281, 257, 6968, 2183, 286, 362, 281, 466, 1228, 1333, 295, 8729, 8539, 43153, 281, 281, 1520, 729, 18491, 365, 42687, 3467, 13, 51314, 51314, 1042, 11, 286, 519, 321, 600, 286, 519, 321, 600, 5343, 28540, 30521, 1238, 731, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07174167103237576, "compression_ratio": 1.536480686695279, "no_caption_prob": 9.460732690058649e-05}, {"id": 636, "seek": 424200, "start": 4261.0, "end": 4267.0, "text": " Well, I think we've I think we've covered primitive obsession pretty well.", "tokens": [50364, 400, 1338, 11, 370, 286, 519, 498, 729, 10392, 366, 1880, 11, 1520, 300, 484, 13, 50664, 50664, 1119, 309, 264, 472, 689, 291, 751, 466, 2093, 3825, 3487, 30, 50814, 50814, 467, 307, 13, 1079, 11, 2293, 13, 400, 286, 603, 3270, 257, 2113, 281, 257, 6968, 2183, 286, 362, 281, 466, 1228, 1333, 295, 8729, 8539, 43153, 281, 281, 1520, 729, 18491, 365, 42687, 3467, 13, 51314, 51314, 1042, 11, 286, 519, 321, 600, 286, 519, 321, 600, 5343, 28540, 30521, 1238, 731, 13, 51614, 51614], "temperature": 0.0, "avg_logprob": -0.07174167103237576, "compression_ratio": 1.536480686695279, "no_caption_prob": 9.460732690058649e-05}, {"id": 637, "seek": 426700, "start": 4267.0, "end": 4276.0, "text": " I hope you like this episode on the tiny steps. I'm sorry. I mean, opaque types. I'm sorry. I mean, primitive reception.", "tokens": [50364, 286, 1454, 291, 411, 341, 3500, 322, 264, 5870, 4439, 13, 286, 478, 2597, 13, 286, 914, 11, 42687, 3467, 13, 286, 478, 2597, 13, 286, 914, 11, 28540, 21682, 13, 50814, 50814, 492, 366, 257, 5463, 2136, 2010, 419, 4609, 13, 51064, 51064, 961, 311, 352, 281, 264, 13170, 11, 1767, 13, 51314, 51314, 1057, 558, 11, 291, 15514, 1826, 958, 565, 13, 9088, 958, 565, 13, 51464], "temperature": 0.0, "avg_logprob": -0.18353788617631078, "compression_ratio": 1.5286624203821657, "no_caption_prob": 0.00017393620510119945}, {"id": 638, "seek": 426700, "start": 4276.0, "end": 4281.0, "text": " We are a broken record type alias.", "tokens": [50364, 286, 1454, 291, 411, 341, 3500, 322, 264, 5870, 4439, 13, 286, 478, 2597, 13, 286, 914, 11, 42687, 3467, 13, 286, 478, 2597, 13, 286, 914, 11, 28540, 21682, 13, 50814, 50814, 492, 366, 257, 5463, 2136, 2010, 419, 4609, 13, 51064, 51064, 961, 311, 352, 281, 264, 13170, 11, 1767, 13, 51314, 51314, 1057, 558, 11, 291, 15514, 1826, 958, 565, 13, 9088, 958, 565, 13, 51464], "temperature": 0.0, "avg_logprob": -0.18353788617631078, "compression_ratio": 1.5286624203821657, "no_caption_prob": 0.00017393620510119945}, {"id": 639, "seek": 426700, "start": 4281.0, "end": 4286.0, "text": " Let's go to the outro, please.", "tokens": [50364, 286, 1454, 291, 411, 341, 3500, 322, 264, 5870, 4439, 13, 286, 478, 2597, 13, 286, 914, 11, 42687, 3467, 13, 286, 478, 2597, 13, 286, 914, 11, 28540, 21682, 13, 50814, 50814, 492, 366, 257, 5463, 2136, 2010, 419, 4609, 13, 51064, 51064, 961, 311, 352, 281, 264, 13170, 11, 1767, 13, 51314, 51314, 1057, 558, 11, 291, 15514, 1826, 958, 565, 13, 9088, 958, 565, 13, 51464], "temperature": 0.0, "avg_logprob": -0.18353788617631078, "compression_ratio": 1.5286624203821657, "no_caption_prob": 0.00017393620510119945}, {"id": 640, "seek": 428600, "start": 4286.0, "end": 4298.0, "text": " All right, Yaron, until next time. Until next time.", "tokens": [50364, 1057, 558, 11, 398, 6372, 11, 1826, 958, 565, 13, 9088, 958, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.35839080810546875, "compression_ratio": 1.108695652173913, "no_caption_prob": 6.707790453219786e-05}], "language": "en"}