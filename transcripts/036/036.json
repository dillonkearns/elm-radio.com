{"text": " Hello Jeroen. Hello Dylan. Today after 35 episodes we talk about Elm Pages again. After 35 episodes and actually after our first episode was about Elm Pages 1.0 and about a year ago actually a little bit over a year ago now and the last I checked episode 1 is actually our most downloaded episode. Oh that's not true. Oh no it changed yeah I think you might be right yeah I think you did some good marketing recently. Maybe I must have. Let's double check. Oh yes so Evan's open source episode that we recorded with Evan Ciplicki is number one but number two getting started with Elm Pages our first episode. Yep and Elm UI is one download below. That's true. So it's a it's very frail very fragile number two spot. That's true you can you can place your vote by listening to one of those two episodes. But if you're listening to this episode well it kind of counts towards Elm Pages so if you want to support Elm UI then you should stop listening. Yeah that's true that's true although you still downloaded it so we're looking at download counts. Oh that's true yeah you're you can't do anything anymore. Yeah sorry. Just share Elm UI more yeah or share Elm Pages more. Share this episode. So I listened I actually listened back to the original Elm Pages episode a little while back to just sort of like look at you know take stock of where things have gone and compared to what's changed with 2.0 and actually our 1.0 episode not to try to gamify the system of getting more downloads there or anything but it's still relevant. We talked a lot about just kind of jamstack concepts and and why that's an interesting fit with Elm but the architecture with 2.0 has changed dramatically so I think we'll get into some of the details there which I think are very interesting. All right maybe let's start with just saying what Elm Pages is because some people may not be aware they may they might be rushing towards the Elm Pages one episode but let's let's redefine it here. So Dylan what is Elm Pages? Okay so at its core Elm Pages is a platform for pulling in data and pre rendering it to a set of static pages that you can deploy with this CDN like Netlify for example. So what I mean by pulling in data is there's this concept in Elm Pages 1.0 it was called static HTTP data meaning that you could pull in data from APIs and have it there when your page pre rendered. When you built your application? When you build your application and it outputs for your blog posts it outputs an HTML page for each of those etc etc for all the different pages so you could pull in data from for example from the elmradio.com website. What that does it's an Elm Pages application and it actually uses the Simplecast API which is our sort of hosting provider for for the audio and we use API calls from Simplecast and fetch metadata about where the mp3s are hosted and actually some some other metadata about the size of the files and stuff that the RSS feed needs. Generate an RSS feed all using pure Elm code generate the the pages for each episode and it's using API data and that's available at the pre rendered HTML and it's also available when your Elm application hydrates so it loads the HTML which has been pre rendered if you have something like Twitter or Slack basically scraping to get those nice social previews they're going to be able to get that because it's pre rendered so the core idea is that like to get those nice social previews and stuff sometimes you need data from different sources and Elm pages gives you the ability to get that data before init even runs in your Elm application. So for pre rendering... Just to clarify so you said that it generates a lot of HTML files and RSS files and I'm guessing kind of whatever you know that you wish for? Exactly it's just it it doesn't specifically generate anything except what you define including RSS feeds and all of that that's you know some Elm code that you write to output a string to a file path and when you run your build it generates that. All right but so you generate HTML files but you also generate JS files so you it's not just static files and static contents it is also like just regular Elm applications that you can interact with just the way you're used to with Elm. Exactly right yeah you have a full fledged Elm application once the page loads that starts by you know loading the pre rendered HTML and that's available for social media previews that need to scrape that but then you get a full Elm application and in fact it it takes over and does single page app navigations from there when you when you load a new page so it's not fetching HTML to go to a new page it's running as a continuous Elm application. Yeah so it's downloading the the HTML file the renders it and then when you say it hydrates it replaces all that by a native Elm application. Exactly and when you transition between pages you can even have a shared model exactly like Elm SPA and that design was inspired by Elm SPA's design there and that shared model will persist as you do page changes because it's a continuous single page application from from there and so for this sort of so there's a different life cycle for Elm pages where there's a build step normally Elm pages normally Elm applications don't have a build step but Elm pages gives you a build step so you get this pre in it so when you when it pre renders a page it calls init for that page but it does not call update so it renders the initial in knitted version of any given page. And that's where we'll be rendered in or sent to that HTML file that will be yes pre rendered okay. Exactly right but before init even happens Elm pages is going to resolve your data sources so the data sources could be in Elm pages 2.0 it can be not only an HTTP data source so you could do like for example for the listing page for for the Elm radio website it goes and fetches an API request to get all the listing of all episodes and then for each of those it makes a follow up HTTP request so you can do data source dot and then and you can do follow up data source requests from that initial data that you got so it opens up all sorts of possibilities and that that will be resolved by the Elm pages platform before init is called and your page is pre rendered at your build step or in the dev server. So all of the data is fetched and then condensed somehow into one big giant data structure or multiple I don't know yet we'll go into that later and that will be potentially available to the pages init function. That's right you can pull it in you can use it in init update and you also have that data in your view as well as in your in your head function which is where you can kind of put your SEO meta tags to say the Twitter card previews or JSON LD structured data you know you can pull in all sorts of metadata but you have access to the resolved data sources when you render those. So what is the benefit of having that build step? Right so one of my one of my favorite benefits from from having like a pre rendered Elm site is that so we've we've talked about the idea of parse don't validate a lot which is like you know one of my one of my favorite kind of design principles that I think about often and with Elm pages because there's a build step so you can like parse don't validate with a subsection of your data in your Elm app you can parse don't validate for a model for a page so you can say hey when I go to this page I need I need to have this data but if something's wrong with the data and I do you know I do this parsing then I can parse it into something that could potentially fail right that's sort of what parse means so that's a really powerful pattern but you have all these states in your application you try to sort of pull them to the top so you don't have shotgun surgery checking for things repeatedly and having you know not knowing if you have a good state all over your code. So that's when you're actually doing that logic you have the data that you need and you don't need to do any branching anymore. Exactly but you do need to branch at least at the top level because you can't guarantee that things will be in a good state so you need to check it at some point at runtime but when you have a build step you can actually parse don't validate and turn that those two tracks of the success track and the fail track you can turn the fail track into a build failure so you can parse it into either a build failure which will give you an a nice error message when you run Elm pages build or if you're in the Elm pages dev server when you're on that page it'll even hot reload as you change your code and as you change you know files that it might depend on like markdown files that it might depend on it will tell you that there's a problem so for it like let's take an example so we haven't mentioned yet but data sources can in Elm pages 2.0 can include a file data source so you could read like a markdown file so if you wanted to ensure that you have a title you know you could you could either extract the title by parsing the markdown and checking that it has an h1 tag or you could get the title from like front matter like a little yaml thing between the triple dashes that's called front matter at the top of markdown files so you can you can access those using using the data source dot file module in Elm pages 2.0 and you can fail if so so you can do data source dot fail or you can pass in a decoder to this this front matter data source and if the decoder fails or if you were to call data source dot fail or decode dot fail or whatever at any point that turns into a build failure so you don't have data sources don't give you a result that may have an error they give you a build error and you run that build and if the build succeeded that's the okay version if it didn't succeed that's the error version and you get that in your dev server or in your build step so that I think is huge because you know we love guarantees and we do there's no way for Elm to guarantee that all your data is valid and that all your HTTP requests succeed and that the server is available and well behaved and gives you a good response or even you know a a REST API may return HTML for some reason and you don't know until you do it but since Elm pages has a build step you actually do it so you do know before your site goes live so you can parse don't validate at build time not at runtime with some of these bits of data that you pull in during the build step yeah so with the example of the the block with a title and description if one markdown file doesn't have a title yes you will get a build failure if you exactly if you've requested that one would be required yes so you can you can just write your markdown file if it doesn't have a title because you forgot to write one you have a build failure and in your code which does all the rendering which does all the logic you can just go ahead and say okay I have a title exactly and otherwise you will have an Elm compiler error yeah exactly so you get the nice benefits of parse don't validate turning it into the nice data type that you want that represents that everything went well but you don't even have to worry about the failure case and this is actually like it's a very nice workflow as well when so like it sort of changed my workflow where if I depend on some API data you know like if if I'm pulling in a listing of items from like a content management system CMS or you know whatever it may be my process has changed where I'll start by doing an HTTP data source and then I'll do decode fail and what that's going to do so let's take an example let's say we're building a blog but the blog is hosted with a with a content management system so we're using an API to get a listing of all blog posts so so we want to create a blog index page so I would start by making the request to that API and then I would just do decode dot fail and what's going to happen then is when you're looking at that blog index page in your browser with the Elm pages dev server running it's it's going to tell you hey I got this HTTP data but the decoder failed and here's the JSON data if you think about what you would have to do to get that workflow in a in a vanilla Elm application there are a lot of steps involved so you would have to you would have to say in init here's an HTTP request to perform here's a message to to call back to you know when you receive the HTTP response in the update function you have a clause to handle that message you have something in your model that tells you that you've got that response oh and by the way it's gonna need to you probably want to wrap that with a remote data type because it could be loading or could be an error and then well you're gonna need to handle all of those different loading and error and success states in your view if there's an error state you're gonna have to turn that error into a nice printable string and don't forget to like wrap it in a pre tag so you can like debug it in real time and now you can go do that process if you didn't miss any steps along the way there easy peasy we're used to it I guess but it's a lot of work so that's I've just become addicted to this process now with Elm pages of this lifecycle where I just say so so the way a data source is wired in is you have these page modules so you would have something called like source page blog dot elm and that would map to the slash blog route in your app and that's going to have a top level value so just like you have init update subscriptions you're going to have data and that data is just going to be a data source and so for the data source we would do you know data source dot http dot get we'd write our data would be the content the the result of the data source data would be representing the data source of what you're going to fetch okay so that's what that's what data is and then in your view init update if you have those you can you can do it just with them with it with a view you don't need an update function but you you get that data so whatever type your data is there's a so you're going to have a type alias data often it'll be like a record could be a custom type if you wanted to but you're going to have some type called data with a capital d and you're going to have a top level value called data with a lower case d and that lowercase d data is where you define your your data source of what you're going to fetch and the and the top the capital d data is the data type you're going to get back so of course if you you know if you're adding more bits of data that you're expecting to receive that data type is going to change you add fields to the record or whatever it may be but there's no message there's no update clause there's no case statement checking whether it's loading or error or whatever so that workflow feels so nice to just say you know data equals data source dot http dot get give it your url and uh and then in your view function you're just like oh here's the here's the data i asked for it's it's just there or if it's not there the dev server or the build command are telling you i tried to make this http request and something went wrong yeah so earlier you said that whatever is returned by the init will be rendered i guess by yes by being called by the view function my mental model was like okay so the init function returns a temporary model until something has been loaded because you still need to to do all the fetch commands handle the update and in the view render an intermediate state and then the render state state but you would pre render the intermediate state but with elm pages you would actually render the completed view for the completed data so you render more than what you would get with a normal application exactly because the elm pages platform gives you this core concept of a data source that it's a declarative way to describe the data your page depends on statically now um you still have an it an update which can perform commands and if you wanted to get real time data you can do that in those places with regular http but the elm pages platform takes care of all the details of resolving that before your init or view function gets called for the first time that's just part of the platform and so so yeah you don't uh i think of it as just declaratively describing data rather than like imperatively saying go and do this here's the intermediary model state along the way as you get up this data you get you know or you know it's it's a lot more like just defining a task and resolving it and you can pull in all the data you need and once that's all resolved you just have that data available so at the beginning you mentioned that elm pages will build a set of html files and javascript files and whatever and those are already have all the content that they need as we've seen now and you deploy this to a cdn so that means that if your um cms is down the server is down because of an outage or something then you can't build because all those htp requests will fail but if at some point you have failed you have built and the cms is down but the yes the pages application is released and deployed yes then you don't need to depend on cms and everything is smooth even though the cms is down exactly that's right and so like i think one of the things people people sometimes wonder about you know data sources and that sort of thing i mean it um you know we've kind of talked about how it's convenient but then what about like you know wait a minute so you're fetching this data at the build step but then i have i have to make sure i get that data before i load a page because it's hydrating an elm application right so that seems a little odd and and that's true you do need to um you do need to get that data so like if if um you go to the uh the root page it gives you the pre rendered html everything loads up it hydrates into an elm single page application and then you click to the blog page right and now all of that data that you gathered to to get the listing of all of your blog posts from your cms where does that come from because it's a single page elm application so is it hitting your cms or what is it doing as you said it's not hitting the cms which means that even if the cms were to go down that page of the listing of blog posts would still be there yeah i guess you could still request from the cms new data but you would have to do that manually yourself you don't have to that's right yeah exactly if you wanted to for some reason um with the cms in in most cases you're probably going to be using data sources to get that data but but absolutely in some cases you might want real time data to check if a live stream is ongoing on twitch right now or to get the number of likes on a blog post or something like that so the cms gives you that data from the in the data source the data source gets that data and that data ends up in a json file and so all of the data that that uh blog index page depended on ends up in this json file and elm pages what it does is it fetches that json file for you before it goes to that page so so it gets and if you hover over a link you can look in your network tab and you can see when you hover over a link that it's going to go and fetch the data that it needs because it usually takes between one to 200 milliseconds to um between the time your your cursor enters the region of a link and the time you click it because you usually don't click it at the far edge you click it towards the middle and humans are slow even if you try to click it fast you're probably not going to do it faster than 100 milliseconds and it turns out that's actually like enough lead time to in most cases make it feel pretty instantaneous to have that data available so that when when um the user clicks on the page it's ready and it does the single page transition quickly so do you have a json file for the whole application or for each page it's split by page yeah exactly yeah it's split out by each page so it lazy loads as needed for a page when you go to that page it gets the data it needs is that the only data that is being fetched no more js no more css it it is and i mean i would love to to have like code splitting but uh there are some reasons that i can't really do that because the way the elm compiler works it would um i saw this as a as a bone as a good side i wasn't like oh it should split it up i was like it would be cool jason it would be cool i would love to be able to do the um to do the code splitting feature but there are some limitations that i can't really hack it but i would love if that feature were something i could make use of in the future but for now i mean the bundle sizes are are pretty reasonable so that's okay but yeah it only fetches that json file and then now the reason i think it might seem strange at first right because like wait a minute so it's still making these htp requests right so what's the point besides this sort of convenience and you know having this data available at pre render which we talked about i think there's an additional benefit which is kind of like you were hinting at if your cms is down your site is still up but what if the htp request fails to get that json file that it needs for your data sources for that page because that one is also hosted somewhere that can go down it's hosted somewhere that could go down but guess what so is the rest of your application so the uptime characteristic characteristics they're going to be tightly linked together so if you're the odds are if you're seeing a page you're going to be able to get that data and also you're hosting it on a cdn whatever that stands for content delivery network something like that cloud delivery yeah maybe content delivery network so the idea of a cdn is that you have dumb hosting where it's just giving you files it's not going through the complication of talking to a server and that server is handling multiple requests and it has your application logic and it has to go read something from a database it's just here's a file here you go and in fact since it's so simple it's just reading files why don't we distribute those files across a lot of networks across the world so we can serve it to you from the closest network so if you're in japan we're not going to serve it to you from the east coast of america and vice versa we can serve it up from the nearest data centers because it's just literally giving you a file that's on the disk so it can do that extremely efficiently that's like serving from the edge so anyway there are benefits to that not to mention that you can do data source dot and then so you can get the listing of all of these things and then you can go get follow up htp requests for each of those and that data is all kind of aggregated into this json file so even though you wrote and then and did all these follow on requests when it builds it it's all just there so it just goes and grabs it it doesn't need to wait for that waterfall of requests so um so i think that's pretty cool also um the uh so elm pages you will probably notice if you if you play around with elm pages that there's this module called optimized decoder so ilyas did some incredible work on that uh yeah ilyas van pier is he dutch i think he's from belgium oh cool okay or is dutch and uh well i'll leave the correct pronunciation to you but uh but yeah so i don't remember we told this story the last time uh we talked about on pages but yeah i i um i saw ilyas's json decode exploration package and noticed that it it can warn you if you have unused json data so if you if you have some json in a in a response and you don't consume it then it it tells you and gives you a warning and i'm like that's interesting because i've been thinking it would be really cool to keep track of the json that's used and not and strip out the unused json data and i i was just i just messaged ilyas and said i wonder if that's possible and then literally like that same day he's like oh i played around with it and you totally can and here it is nice which i thought was incredible but yeah so that's the backbone of the optimized decoder api so what it does is it um when you're running it at at build time it's going to go to the extra effort which uh is a little bit more expensive than running a vanilla json decoder it's going to go to the extra effort of keeping track of which json data in in the json blob that you've consumed using a decoder so if you do decode decode dot field name now it knows that that field has been consumed if you do you know decode dot index one it knows that array index was consumed and it actually will null out any data that it didn't need to consume for example so it's it's pretty sophisticated although it's also pretty simple which is why elm is incredible because it has this purity and so you can make these kinds of optimizations so that's uh it's doing that work in the build step in the in the runtime when the user is running it in their browser it just runs a vanilla json decoder for the performance so you don't incur the cost of running that optimized decoder but in the build step it figures out which json fields you used and strips off any unused fields which is pretty nifty so that that comes for free it strips out the unused fields from the json that you download when you hover a link when you go to a new page right um from the json in a data source so which ends up being that json so um and it will actually um uh it will actually merge together if so if you made um if you had a data source doing an http request to the same url two different places and you consumed one field from one of those data sources and another field from the other data source and you did data source dot map two and got those two pieces of data together it's actually going to handle that correctly and just merge it into a single data source with the consumed data you which you're welcome because it was a lot of work no i mean i did it because i couldn't couldn't help but but build these features because i i get really excited about them but um but yeah it it just it just works as far as you're concerned but there are all these optimizations happening under the hood yeah so there's one thing that we haven't touched on upon is that data sources are agnostic right yes to where they came from yeah um you can have data sources for files data sources for http but what you get is data source of data and where it came from or how you got it or how it was transformed in the meantime doesn't matter so you can combine things and if you are if you have a blog where you have a lot of markdown files and you are migrating them one by one to a cms you could you could have one data source for all the files one data source for the cms and then combine them maybe having one tick priority over another maybe and but then the rest of the transformation is uh we don't care where it came from we can keep that data like okay this data source came from http this one came from files we can keep that data because we can map we can end them all those data but we don't have to care and that is pretty nifty yeah i i agree that's that's my favorite part i mean that that's my favorite part of elm pages to me that's that's the heart of elm pages is is the the data source concept and the engine of resolving them and optimizing them but like you say it's if you have a data source of list of blog posts that's that's all it is right when you're using that all you care about is that you have a list of blog posts you don't care where it came from elm pages doesn't care where it came from it'll take care of resolving and getting the data that as you describe where you need to fetch it from from uh you know grabbing it from files and from cmss you can even do data source dot succeed and just get some data in there as uh as our listeners probably know we we like using succeed because succeed it's a key to success it's the key to success t shirts are on the way really no not really i lied not yet but they could be so yeah that's that's the beauty of it yeah so data sources some come from files i come from http yes but once it's run yeah it actually come from json files that's right that's true so exactly that's right yeah so even like so when you get uh front matter using a data source what's actually doing is it's so what what elm pages is really doing under the hood is it's sort of like this this runtime for for an elm build step and that runtime is using node js so it's using node js to read files right elm can't read files and it reads those files if you say you want to read a file and you want to read its front matter what it's doing is it's um it's actually uh parsing that front matter and that yaml into json and then it gives that to you so you can do a json decoder so you don't have to worry about doing yaml parsing or any of that you just get json and in fact you can use an optimized json decoder because if there's some yaml in the front matter that you don't use then it's just going to get stripped away if it's an unused fail field uh and so this is one of the really big changes in elm pages 2.0 also is that really um elm pages there's less to it now it's all just sort of data sources that's all it is that's how you read files that's how you get a listing of files that's how you um define routes that's that's what you do for everything and and so if you understand data sources well then you understand elm page as well that's the one concept that you really need to invest in understanding to understand elm pages yeah what i'm imagining is that a lot of the code that you wrote before and that you put in in it update message and stuff is now put into the data sources so like you you could be a data source expert now yeah totally yeah that's right so like with with elm pages 1.0 there were like a couple of additional concepts and it's it's pretty cool because i actually like removed a lot of code going you know migrating from from the 1.0 code base to the to the 2.0 internals a lot of code went away you mean from projects that use the elm pages or inside elm pages uh well both but uh but i'm speaking about the internals which i think is really cool because you can do more with it but the internals are actually less complex because it's just using this concept of a data source to do more things so does that mean that it's easier for contributors to to help out uh probably so so so one thing that is sort of on my mind for data sources is the idea so so we've got we've got different types of data sources we've got htp data sources which we've talked about you you give an htp you know you describe an htp request to perform and a decoder to use and you've got that data you can do uh file read data source so you can do data source dot file and you can do the data source dot file dot only front matter and give it a decoder to get the title and description from a blog post for example you can do data source dot file dot body without front matter and it will give you everything but those things between the triple dashes at the top of the file so you you can you can read in these files and uh there's also a data source dot glob api which allows you to depend on data that is just describing which files are on the file system so if you wanted to go to a folder and say hey i want i want a page for every uh or you know do an do an index page of blog posts and instead of being hosted on a cms it's local markdown files in your blog folder and so you could do uh data source dot glob of um you know of effectively blogging slash star dot md and then uh that data source is going to be you know a list of strings of those um of those files but so basically what what a data source is is it's a way of having you know having this data available for the sort of pre init phase that it's it's there on initial render for the pre rendered html it's there for the head as we've talked about but it's really just like as you said it's just json data and you can map it all together and you've got got that data when you go to a new page one of the things i've been thinking about is a sort of um having a mechanism for defining custom essentially like a javascript port where you have some json data and if you think about what a port is in elm you send json out and you receive json back through ports that's what ports are in elm that's actually not that different than what a data source is a data source under the hood is sending json to describe hey here's um here's this file i want to read or here's this glob pattern and then it sends back data and under the hood it is using ports with the elm pages runtime but you don't have to worry about that step don't tell anyone and uh so well what if you could write custom ports and say hey when when this message comes in just like you write a javascript port send this data back so maybe you want to say here's a an npm package that i have installed and it you know knows information it's like a database of time zones that conveniently there were a million of them to choose from an npm and i wanted that or i want to run a shell command that generates this svg image and so you can take that that json is the input and the output is you know conceptually you're deterministically um giving the same data for a given input right just like an http request to an api even if that's technically not true you have to conceptually think of it as like declaratively representing a single resource so you can say hey you know you're deterministically representing a single resource so anyway that's that's something on my mind is a sort of using that same data source mechanism as a way to send back json data from these sort of javascript ports so that you could do things like running shell commands or whatever custom things you needed to do to get that data yeah yeah the the issue with ports is to to get a result always just like with http you're right expected to get a result at some points yeah but because you have a build step you could potentially say okay if i haven't got anything after x seconds you you make a build failure exactly and you can create an abstraction too where you say like hey here's um you know you're gonna get a single port that port gives you some json data and you respond to that json data however you define so you you have a tag or whatever you could use lmts interrupt and um and and return you know have this contract with yourself that if i get this type of data i'm gonna do this type of thing and so you could basically have just like an async function that gives back data and it's going to be run at the build step and once your lmap is out there being used by a user it's not doing any of that because it's already resolved it in the content json so we talked about deploying to cdn because what you build gets deployed to your cdn can you briefly go about how that works and how complex that is sure yeah so you essentially so lm pages 2.0 uh there is an init command so you could just do you know npx lm pages init if uh if lm pages is uh if 2.0 is published by the time this is released then it would just be npx lm pages init if it's not then i believe in you dylan you can do it i believe in me too yeah i've got four weeks you listen and know whether he succeeded or not that's true yeah uh so but yeah well i'll i'll put the instructions regardless in the show notes so then you've got a skeleton lm app lm pages application and uh you know if you're deploying it to netlify you can npm install the netlify cli and then netlify init to get a netlify.toml configuration file that's going to have a command for the command i think it npm installs for you lm pages uh apps are going to require an npm install because because lm pages is an npm dependency and then um and then you do lm you know lm pages build and it generates the files to a dist folder um in your netlify config you can tell it that the folder to publish is your dist folder and then you push that up to netlify and it's gonna run lm pages build and publish the dist folder and now you've got an lm pages app okay i imagine you still need to sign up for netlify maybe pay the free tier is quite generous so if you're building a hobby project chances are you you won't have to pay but there are lots of good hosting providers out there and netlify i've been very very happy with yeah that's what i use also for my plugin and i don't think i've paid anything except the domain name obviously all right so lm pages 2.0 is simpler than lpages one for the people who are using it already uh will the migration be difficult or do you have any tips on how to do that yeah that's a good question so well so there are a few concepts that maybe we should um introduce first that we haven't talked about yet so with lm pages 2.0 they're um so very similar if you've used lm spa then these patterns are going to feel very familiar um i got a lot of inspiration from ryan's approach to this so there is a uh source slash page folder page with a capital p so if you have a page dot blog dot elm you know page dot blog module like like we described before it's a file based router so page dot blog corresponds to slash blog page dot index corresponds to the root page slash and you can do a dynamic uh route segments and so you could do um page dot blog dot slug underscore and that would correspond to slash blog slash sometimes they write it as colon slug meaning that it's a dynamic segment that could it's a placeholder could be anything so slash blog slash hello so the way that that that works is first of all um you can use elm pages add so you could say elm pages add blog with a capital b and that's going to add source page slash blog dot elm you could do elm pages add blog dot slug underscore and that's going to give you the uh the route corresponding to slash blog slash colon slug so that's that's the first thing to know between elm pages 1.0 and 2.0 is that whole setup is different that there's a file based router and so in 1.0 the routes were uh based on files in your content folder usually they were um markdown files and uh so if you had uh content slash blog slash hello dot md then you would get a corresponding route blog slash hello yeah okay that's what i have in my blog as well and that is not going to be the case in elm pages 2.0 right so you can build that functionality using the building blocks with 2.0 or you can do anything else you could uh have your blog post coming from a cms with with uh 1.0 you couldn't um there wasn't a way to have a data source determine which static routes you were going to have so in version one yeah you had static htp yes to get data from external resources and you had the file based routing right but it was marked down file based routing so it was a one to one mapping between a a url and a file whereas in elm pages 2.0 it's a one to one mapping between a route and a module and when i say route i mean blog slash dynamic slug is a route not blog slash hello that's a url it's a page so in 1.0 one file in your content folder markdown file usually was one url in 2.0 it's a module page dot blog dot slug underscore and that's that route which actually gives you multiple pages and so if you wanted to translate that to elm pages 2.0 so in elm pages 2.0 you have these page modules very similar to uh these page modules in elm spa so if you're defining a pre rendered route which is what we've been talking about this whole time and spoiler uh that's not the only thing it's it's sort of in an alpha phase but um i i do have some sort of alpha phase functionality for doing sort of serverless and on demand on demand routes which we can get into that's a whole nother can of worms all right but let's just focus on pre rendered routes for now which is the ones that are uh the html is pre rendered at build time and so um so to do that you've got so you've got a top level page which is just like your your main in a in a regular elm application but it's the page for each page module so each page module exposes this top level lower case p page value so if you do page dot pre render you give it head which lets you um you know do the seo data that we talked about you give it data that we talked about and that data is going to be the data source it resolves that is available before init and then you've got routes so routes are the uh the routes that you're going to pre render so for a blog post where does that route come from so now how would you how would you describe routes if only there was some declarative way to describe some data you needed to gather to define your routes yeah if only we had a some kind of data source yeah if you could like get some source of data declaratively yeah so it uses the data source api so a route is a data source of list of route params so um now route params are the route params are completely based on your page module's name because it's a file based routing based on the name of the module so so for our example of page dot blog dot slug underscore the route params are a record with lowercase slug equals string with no underscore so those dynamic segments are translated into into fields in your route params record if there are no dynamic route segments then the route params are empty like for page dot blog so the routes you just do a data source of of those route of a list of route params so for example uh we could say routes equals data source dot succeed and then a record slug equals hello and now when you go to you know when you run the dev server elm pages dev and go to go to the browser open it up go to slash blog slash hello it's going to be rendering your page if you go to slash blog slash getting started with elm pages it's going to give you a 404 page and it's actually uh i i put a lot of love into that 404 page to to actually like give you feedback saying hey this matched this route but it didn't match any of the routes for this type of page the pre rendered routes and that's why i'm showing you a 404 uh and then it's going to list out the routes which we only defined hello as a route yeah only the dev server right only the dev server but yeah i've seen a screenshot and it looks pretty cool again about trying to give the best air feedback to the user because there's so many things that can go wrong like what data sources are you fetching how is it mapped what is the resulting data source yes and you don't you know as a user you you don't trust the tool if the tool doesn't give you feedback you're not going to trust it it doesn't matter there's no way to earn a user's trust if you don't give them feedback you can't just say trust me i'm doing the right thing because if you're not giving them feedback feedback creates trust and if if the uh if the dev server is always right and has no bugs in it and is very consistent and reloads anytime configuration changes and pages change or whatever it actually doesn't matter if it's not giving feedback you're still not going to trust it so yeah i i i really like that as a user i like using it and getting that feedback this is how you know that dylan actually cares about you user like what he just said that was his his heart that's just spreading his love it's a love letter that was that was my love letter to the user um yeah that's how you create routes now if you wanted to create routes to match the v1 behavior of elm pages what you would do is um so v1 there was the content folder so you you would create a glob pattern to um to match the content folder so so now the way the glob works you do you can do i don't want to get too bogged down by it but you can look at the api docs for it and i think the the docs are pretty helpful but you can do glob dot match on a literal like content slash then you like content slash then you can do glob dot capture to pull a piece in so it's sort of this um it's very similar to the elm parser api um the parser api has you know pipe equals and pipe dot and those are those correspond to glob dot match or a glob dot capture is the pipe equals that eats the thing and glob dot match is equivalent to pipe dot which ignores ignores the thing yeah so anyway you you create a glob pattern you can extract the information you want from it so if you just want to get the slug you can if you want to get the full path you can get that but so you get that glob pattern and you if you were to take uh if you were to just capture the slug part so that means for content slash you're just going to match that for the you're going to do a wild card that you capture the star part and then the dot md part you're just going to match which means you match against it but you don't get that data what that means is you've got the slug yeah so you're building a glob pattern like just the way you would type it in a terminal like uh content slash star star or star slash no content slash star dot md and so you're building a glob and you're also saying this this here is what i'm actually caring about i care about the star part maybe i care about the content part maybe i don't um and then then you have a you transform that to a data source exactly then you yeah then you say to data source that's right you can do glob dot to data source and that kind of finalizes the glob gives you the data source and yeah and again you know what you're describing there that's that's parse don't validate so you get just the data you want rather than just saying here's my glob give me the list of matching files which you just built up but then you have to strip off the stuff afterwards again that you already sort of you had it in this nice neat format where you just could have said i want this data well you can just do that so then you can uh you can map each of those so you could do like data source dot map and then parentheses list dot map rep prams and that would turn each of those into the rep prams because the rep prams is a record you know it's a record constructor that takes a single string that's gonna that's gonna be your slug so now you've just defined a glob data source that's gonna correspond to all of the files in the content folder now you hinted at the double star and you can do a recursive wildcard and so if you if you really wanted to just exactly match the elm pages v1 behavior you could use that to create a glob pattern that matches every nested file in the content folder and and that's going to be all of your routes and you could actually use the um uh so elm pages the file based router we kind of hinted at this last time with ryan that uh elm pages has this sort of uh special feature of the splat routing so if you wanted to if you wanted to truly have exactly the behavior that elm pages one had for its for its routes where the content folder is directly mirrored in the urls in your application that's what you would do you would create a splat route so you can do elm pages add all uppercase splat splat is in all uppercase the other dynamic route segments are capital not all uppercase so all uppercase splat and you could do double underscore which is going to be an optional splat which means it's also going to match the top level root route okay what does splats mean what does it come from there are different terms for this sometimes people um sometimes people use the term like rest params like in a you know in some programming languages you can have a variable number of arguments var args and then you you get those as an array uh netlify's redirect routes use the term splat to say whatever comes after this just capture it give it give it to me in a list so there are different terms that are used for it but splat is just like you know uh similar to like the um like you know ecma script javascript calls it spread sometimes spread operator dot dot dot uh it's basically just like give me everything that comes after this yeah and i'll i'll handle it somehow yeah exactly i'll i'll slurp up all those values so that's um that's what splat does is for the um so blog dot slug underscore is gonna match exactly one segment after blog so if you do blog slash hello slash world it's not going to match that but if you did a splat route then it's going to match it's it's going going to match anything so you can you can actually do you could do like page dot blog dot all uppercase splat underscore and that would match blog slash hello world it wouldn't match slash blog because we did a single underscore so it's a required splat the double underscore is an optional so it's the same with um like for example in the elm pages 2.0 docs i have a route that is um docs it's page dot docs dot section underscore underscore the reason i do that is because if you go to if you go to slash docs slash what is elm pages then it shows you the what is elm pages docs section but if you go to slash docs i actually also want that to show you what is elm pages so i want the same page module to be responsible for rendering and showing the metadata and everything so i want to use the same page module for both of those routes whereas in the case of like page dot blog that's a totally separate page listing blogs compared to page dot blog dot slug underscore so i want those to be separate page modules so that so that's the optional double underscore at the end of a segment okay so i imagine that if if somehow um two routes or two modules cover the same route like yeah uh then you have a build failure well it's actually gonna just uh it deterministically will match routes and you can shadow routes and the more specific one will take precedence so like for example if you had you you could have splat routes and you could also have a blog route so if you have like a top level splat that's gonna match slash about slash you know 2021 conference event slash whatever you could handle all of those with splat however you're getting wherever those pages and their data lives but then you could also specifically have a um a blog page page dot blog and that that takes precedence because that is a specific route that you defined so um yeah so you so the route that you that it parses into and by the way there's a there's a route module that's generated so so elm pages just like lmspa you you get a generated route module that has this route custom type and you can use that to like uh programmatically link to pages so the specificity is deterministic and it doesn't depend on which routes you've defined so like for example if you had a splat route and you said for that splat route you're going to handle a route of blog but then you also have a blog route page dot blog well the the blog route is just always going to match and it doesn't depend on whether on whatever else any other routes have so the the the routes that you'll parse into is deterministic based on the specificity of routes yeah but i probably should specifically if you have two matching routes i should give a build error for that specific case but but in terms of um like i think this is just a helpful concept to keep in mind that the uh what what a route matches is not based on uh the specific routes you have it's based on the specificity of the page modules so you know what a route will decode to regardless of which routes are pre rendered or exist in your app if that makes sense distilled is not yet in on pages right it is oh it's it's fully stable so uh i've seen you talk about the concept of distilled uh data can you explain what that is yeah so in frameworks like nextjs and a lot of these javascript based static site frameworks or jmstack frameworks the way that you get data to the page is you would say like in nextjs you'd say get static props and then you have an async function you make http requests you read files you glob you whatever all these things that data sources do again at build time yeah that's right so with nextjs it it's going to do some fancy sort of static uh transformation of the your code and it actually splits apart the parts of the code that it's going to run on the server and that it's going to run on the client and get static props is going to be run on the server or whether that's a build server or a serverless function or whatever it may be and so um so get static props you get all this data and then you you give it a serializable json object and that's the data that gets sent to the page so if you wanted to split out data you could do whatever complex work you wanted to to do http requests and read files and then you could just say oh here's this prop the number of blog posts is 5000 but you could just say blog post count colon 5000 now that's the data that shows up on the client bundle right yeah it doesn't matter whatever other data came before that with the data source api and elm pages it's actually keeping track of what data you depended on and just pulling in that data for all your data sources for that page right yeah and it puts it into the json file right exactly strips down a bit but it strips it down exactly so if you are depending on some json fields and not others it's going to take care of only having the data you depend on in the bundle which is great but sometimes if you want to count count count the number of posts you don't want all of that data so there are many many cases where where you might want this you know i i've been um building like a digital garden for myself that uses back references and so the back references track every single uh every single post that refers back to the current post and so you know that can now that what that means is that it's like a it's like a glob data source to list out all the posts and then it's a follow up you know data source dot and then for each of those uh do a data source dot file dot and then read the file if i were to just let that data uh show up in the bundle then it would be pulling in 50 plus pages of markdown files or however large the the number of files grows to which is not good and it's not not needed because all i need is i need to know for each page does it refer back to this page or actually i don't even need to know that i just need a list of pages that refer back so it could be three three strings a list of three strings rather than 50 markdown files with all of their contents so with the distil api that's that's what that's for and it's the distil api lets you work in more of this way that that like next js get static props works where you just say here's the data make sure this data is there for the page to render with and so distill so i made like a couple of distill helpers distill codec and distill serialize codec and those are for uh mini bills codec package and the siri and martin stewart's serialize package elm serialize and you know the the reason they're codecs is because the way to still works is you need to teach the data source how to turn that into some json that it's going to include in the json for that page so you need to encode it you need to teach it how to encode it to put it into the json file and you need to teach it how to decode it to take it out of the json file it turns out codecs are really good for that although actually it doesn't really matter because it's always going to encode it and run the decoder so you're actually never getting the data before it went through the encode decode cycle so if you did it in a non reversible codec fashion it actually doesn't matter because you're you're not going to see the data without being encoded and decoded whether it's in the dev server or the build or whatever that's probably what you want in most cases so um but you can just use the low level distill if you want to provide a function to encode the json and a function to decode to json for whatever reason but one really cool thing about distill is that so for one thing uh you know if you wanted to get that list of back references you could do you know distill codec or distill serialized code so it's you know data source dot distill codec or data source dot distill serialized codec and then you give it a unique key so we could say like back references in this case and then that's just a string and then we give it a codec since the the data source that we arrived at in the chain up until this point was a list of string it was data source list of string then we just need a codec of type list of string so we could just say codec dot list codec dot string or serialized dot list serialized dot string depending on which package you want to use there and that's it now it is now it's going to strip down just that data to a list of strings so if you look in your json for that page that's what you'll see also uh any computation that came before that is not performed in the client side in the browser it's only done in the build step which is also cool so if you wanted to compute some fibonacci number and then distill that into an int you could do that and it wouldn't actually run the fibonacci code in the browser so that opens up some use cases and it's a good thing to have in your toolkit so if you if you're noticing large json files that that's what you'd want to reach for and i'm thinking about ways to to give some some nice feedback to tell you if your json files are getting large just to as a feedback mechanism so i might do that in the dev server server and or the build command that'd be cool yeah so um i've asked this question in during the first episode also uh but when would it make sense for someone to choose elm pages over a regular elm project i think it's worth you're addressing you're addressing this question i don't know if your answer changed well certainly uh the the things that you can do with elm pages 2.0 are a lot more flexible and it's it's just generally become more mature but i mean if you're not if you have no use in pre rendering pages then you know why would you pre render pages if you if you're not using data sources then why would you use elm pages you know that that's sort of my thinking on it is like if you're like oh wow data sources that's great now i can have this data there and um i can think about this this data being there for this page without having to go through the whole update message cycle and all of that and it's declarative data and that that abstraction works really well for this use case then elm pages might be a good fit if if it's like i don't really need this data source thing then what then why are you using elm pages that's that's sort of my rule of thumb yeah if so if you don't have any data to pre render yeah you use a regular elm application yeah or elm spa might be a great fit yeah so um yeah so you know that that's gonna tend to be like content sites and now i i really do believe that um content sites deserve good social previews that's just something i i believe like to me it's super anti climactic if if i put some love into like writing a blog post or something and then share it on twitter and it's like incremental elm.com slash blog slash whatever can you please stop pointing fingers at me please i want the love i put into the posts to be reflected in like a polished looking social preview and same for a marketing page or a restaurant you know restaurant menu you know site or a film festival site or whatever it might be like these sort of um content based sites i i think deserve nice previews and also like i think you can leverage like elm pages at its core is giving you this tool for for pulling in this data into nice typed elm data that you can use on your pages and like i just think elm is a very good tool for that like elm has an incredible type system it's so nice like transforming data and passing data around and parsing data right that's like that's what's amazing about elm like any like even somebody who's not sold on elm is like yeah i really like doing that sort of thing with elm you know that you hear that sometimes like well that's sort of what what data sources are really good at is letting you use data that way like there's no graph ql abstraction because we've had something much better than a local graph ql database for getting files and stuff we've got elm and elm's type system and elm's feedback mechanisms so i'd much rather use that now that said i i absolutely use graph ql and elm graph ql to like fetch data from cmss like uh like sanity or contentful that expose graph ql apis because why not do you have a graph ql data source yeah uh well um so uh elm graph ql uses like vanilla json decoders not optimized decoders and you can use that with um with um with elm pages um you just have to use these unoptimized requests but they are optimized in a different way right exactly right yes exactly because graph ql already sort of does this data splitting by returning exactly the data you requested so it would it would be unnecessary for that so yeah okay yeah so that works quite nicely so i i can i'll share a little link to like a snippet that i have for just performing and decoding that using a data source but it works works very nicely but why but why would you use an abstraction like that i think that you know frameworks like gatsby js for example use this graph ql abstraction because it's a typed way of getting data but elm i couldn't ask for a better way of dealing with types data than elm so yeah one of the principles of elm pages is to let elm shine and so anyway if you if you find that declaratively describing the data that your page depends on and transforming that and having it available on page load is a useful abstraction then chances are elm pages will probably be a pretty good fit yeah i think just marketing sites in general if you if you want to reuse like the same uh ui elements uh yeah can be a good fit even if you don't have any content because at least we'll get um uh pre rendering and therefore better seo metrics yeah so that's useful even if you don't have any data sources to to fetch from you can yeah do uh data source dot succeed to have to have static data sources right yeah or just uh hard code the data into your views or whatever it might be yeah absolutely that's that's true that's true right but if you don't need pre rendering or data sources then probably not what you need yeah but yeah i remember that we talked at one of my previous company about using elm and one of the concerns was seo so elm pages somehow solves that yeah yeah like you don't need seo you know you uh if it's like internal user authenticated pages no yeah yeah then you don't need it it's not going to help you out there so seo is you know i mean one one rule of thumb that people sometimes use for jamstack sites being a good candidate for jamstack is do do people see the same content when they go to the page and you can sort of enhance it with some user specific content if somebody's logged in but they're seeing an ecommerce page and they can see their shopping cart items but otherwise it's the same exact page for everybody and has the same inventory for everybody or whatever it may be and and those things really need to have seo and you want to have good first paint times as well okay i think it's time to to close so elm pages is a project that takes data sources of any sort and builds static html files rss feeds css files javascript files and therefore elm applications that you deploy to a cdn and if at some if at any point you have something that wasn't as expected you get a build error and during the elm application you still have elm for all the nice things that it has is that a okay summary i'd say so yeah that's a great summary now there are several things we didn't get to touch on today so we might need to do an elm pages 2.0 part 2 episode uh just to bump up our uh percentage of downloads for elm pages related episodes a little bit but um take that elm ui uh we didn't talk about sort of uh the the api routes and you know file generation part of it we didn't talk about serverless and on demand which is more alpha so maybe when that stabilizes we can revisit that but yeah that uh that's really the heart of elm pages i think we covered it pretty well and you you put a lot of effort and love into the dev experience also we didn't talk too much about it but from what i can see without having tried it too much it really looks like you put a lot of love into that so that's thank you yeah yeah no that's that's true i um i'm really pleased with the architecture in fact like the whole exploration of elm pages 2.0 began with trying to um uh sev forno who's been like really awesome just like discussing all these ideas of directions elm pages can go with me um was sort of saying like hey i wonder if elm pages could do serverless rendering i think that's where the elm pages 2.0 exploration started because that ended up being a giant nerd snipe which uh i i welcome it was incredible and uh i ended up building that and saying like oh you actually can and actually now that i have this mechanism for give me a single page and i will render that page instead of doing like full builds and rendering everything well hey that's really cool for a dev server because we can pre render pages in the dev server and we can do everything in this sort of just in time fashion rather than uh so you know in in the style of tools like vt and snowpack just very rapidly doing the minimum amount of work to give you hot reloads and stuff like that and so anyway yeah the the the architecture um i'm very pleased with and and i've tried to make the performance really noticeably fast and it's it's feeling really nice to work with all right so how do people get started with the elm pages uh check out the docs there's a fresh doc site for 2.0 and join the elm pages channel on slack i'm always happy to answer questions there also i'll link to some uh sites using elm pages 2.0 and some code bases uh i haven't upgraded uh elm radio to 2.0 yet but i will soon but incremental elm and the elm pages doc site are in 2.0 so there's those are some code bases you can take a look at too what is the link for the elm pages documentation well assuming that it's published uh by the time this episode goes live uh that would be elm pages elm pages dot com slash docs all right well all right i still have plenty of questions like i know well i think we're out of time yeah yeah i think uh well let's let's revisit this one uh when we've got some new stuff to talk about here that sounds good all right well until until next time until next time", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.6000000000000005, "text": " Hello Jeroen. Hello Dylan. Today after 35 episodes we talk about Elm Pages again.", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 2692, 934, 6976, 9313, 321, 751, 466, 2699, 76, 430, 1660, 797, 13, 50744, 50744, 2381, 6976, 9313, 293, 767, 934, 527, 700, 3500, 390, 466, 2699, 76, 430, 1660, 502, 13, 15, 293, 466, 257, 1064, 51194, 51194, 2057, 767, 257, 707, 857, 670, 257, 1064, 2057, 586, 293, 264, 1036, 286, 10033, 3500, 502, 307, 767, 527, 881, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.24286341667175293, "compression_ratio": 1.6993865030674846, "no_caption_prob": 0.19140826165676117}, {"id": 1, "seek": 0, "start": 7.6000000000000005, "end": 16.6, "text": " After 35 episodes and actually after our first episode was about Elm Pages 1.0 and about a year", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 2692, 934, 6976, 9313, 321, 751, 466, 2699, 76, 430, 1660, 797, 13, 50744, 50744, 2381, 6976, 9313, 293, 767, 934, 527, 700, 3500, 390, 466, 2699, 76, 430, 1660, 502, 13, 15, 293, 466, 257, 1064, 51194, 51194, 2057, 767, 257, 707, 857, 670, 257, 1064, 2057, 586, 293, 264, 1036, 286, 10033, 3500, 502, 307, 767, 527, 881, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.24286341667175293, "compression_ratio": 1.6993865030674846, "no_caption_prob": 0.19140826165676117}, {"id": 2, "seek": 0, "start": 16.6, "end": 23.400000000000002, "text": " ago actually a little bit over a year ago now and the last I checked episode 1 is actually our most", "tokens": [50364, 2425, 508, 2032, 268, 13, 2425, 28160, 13, 2692, 934, 6976, 9313, 321, 751, 466, 2699, 76, 430, 1660, 797, 13, 50744, 50744, 2381, 6976, 9313, 293, 767, 934, 527, 700, 3500, 390, 466, 2699, 76, 430, 1660, 502, 13, 15, 293, 466, 257, 1064, 51194, 51194, 2057, 767, 257, 707, 857, 670, 257, 1064, 2057, 586, 293, 264, 1036, 286, 10033, 3500, 502, 307, 767, 527, 881, 51534, 51534], "temperature": 0.0, "avg_logprob": -0.24286341667175293, "compression_ratio": 1.6993865030674846, "no_caption_prob": 0.19140826165676117}, {"id": 3, "seek": 2340, "start": 23.4, "end": 30.64, "text": " downloaded episode. Oh that's not true. Oh no it changed yeah I think you might be right yeah I", "tokens": [50364, 21748, 3500, 13, 876, 300, 311, 406, 2074, 13, 876, 572, 309, 3105, 1338, 286, 519, 291, 1062, 312, 558, 1338, 286, 50726, 50726, 519, 291, 630, 512, 665, 6370, 3938, 13, 2704, 286, 1633, 362, 13, 961, 311, 3834, 1520, 13, 876, 2086, 370, 22613, 311, 51094, 51094, 1269, 4009, 3500, 300, 321, 8287, 365, 22613, 20188, 564, 41356, 307, 1230, 472, 457, 1230, 732, 1242, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.18489076050234513, "compression_ratio": 1.5238095238095237, "no_caption_prob": 0.0001659561094129458}, {"id": 4, "seek": 2340, "start": 30.64, "end": 38.0, "text": " think you did some good marketing recently. Maybe I must have. Let's double check. Oh yes so Evan's", "tokens": [50364, 21748, 3500, 13, 876, 300, 311, 406, 2074, 13, 876, 572, 309, 3105, 1338, 286, 519, 291, 1062, 312, 558, 1338, 286, 50726, 50726, 519, 291, 630, 512, 665, 6370, 3938, 13, 2704, 286, 1633, 362, 13, 961, 311, 3834, 1520, 13, 876, 2086, 370, 22613, 311, 51094, 51094, 1269, 4009, 3500, 300, 321, 8287, 365, 22613, 20188, 564, 41356, 307, 1230, 472, 457, 1230, 732, 1242, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.18489076050234513, "compression_ratio": 1.5238095238095237, "no_caption_prob": 0.0001659561094129458}, {"id": 5, "seek": 2340, "start": 38.0, "end": 45.16, "text": " open source episode that we recorded with Evan Ciplicki is number one but number two getting", "tokens": [50364, 21748, 3500, 13, 876, 300, 311, 406, 2074, 13, 876, 572, 309, 3105, 1338, 286, 519, 291, 1062, 312, 558, 1338, 286, 50726, 50726, 519, 291, 630, 512, 665, 6370, 3938, 13, 2704, 286, 1633, 362, 13, 961, 311, 3834, 1520, 13, 876, 2086, 370, 22613, 311, 51094, 51094, 1269, 4009, 3500, 300, 321, 8287, 365, 22613, 20188, 564, 41356, 307, 1230, 472, 457, 1230, 732, 1242, 51452, 51452], "temperature": 0.0, "avg_logprob": -0.18489076050234513, "compression_ratio": 1.5238095238095237, "no_caption_prob": 0.0001659561094129458}, {"id": 6, "seek": 4516, "start": 45.16, "end": 54.4, "text": " started with Elm Pages our first episode. Yep and Elm UI is one download below. That's true. So it's", "tokens": [50364, 1409, 365, 2699, 76, 430, 1660, 527, 700, 3500, 13, 7010, 293, 2699, 76, 15682, 307, 472, 5484, 2507, 13, 663, 311, 2074, 13, 407, 309, 311, 50826, 50826, 257, 309, 311, 588, 6600, 388, 588, 23847, 1230, 732, 4008, 13, 663, 311, 2074, 291, 393, 291, 393, 1081, 428, 4740, 538, 51144, 51144, 4764, 281, 472, 295, 729, 732, 9313, 13, 583, 498, 291, 434, 4764, 281, 341, 3500, 731, 309, 733, 295, 51500, 51500, 14893, 3030, 2699, 76, 430, 1660, 370, 498, 291, 528, 281, 1406, 2699, 76, 15682, 550, 291, 820, 1590, 4764, 13, 865, 300, 311, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.147210405423091, "compression_ratio": 1.7236842105263157, "no_caption_prob": 2.8408776415744796e-05}, {"id": 7, "seek": 4516, "start": 54.4, "end": 60.76, "text": " a it's very frail very fragile number two spot. That's true you can you can place your vote by", "tokens": [50364, 1409, 365, 2699, 76, 430, 1660, 527, 700, 3500, 13, 7010, 293, 2699, 76, 15682, 307, 472, 5484, 2507, 13, 663, 311, 2074, 13, 407, 309, 311, 50826, 50826, 257, 309, 311, 588, 6600, 388, 588, 23847, 1230, 732, 4008, 13, 663, 311, 2074, 291, 393, 291, 393, 1081, 428, 4740, 538, 51144, 51144, 4764, 281, 472, 295, 729, 732, 9313, 13, 583, 498, 291, 434, 4764, 281, 341, 3500, 731, 309, 733, 295, 51500, 51500, 14893, 3030, 2699, 76, 430, 1660, 370, 498, 291, 528, 281, 1406, 2699, 76, 15682, 550, 291, 820, 1590, 4764, 13, 865, 300, 311, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.147210405423091, "compression_ratio": 1.7236842105263157, "no_caption_prob": 2.8408776415744796e-05}, {"id": 8, "seek": 4516, "start": 60.76, "end": 67.88, "text": " listening to one of those two episodes. But if you're listening to this episode well it kind of", "tokens": [50364, 1409, 365, 2699, 76, 430, 1660, 527, 700, 3500, 13, 7010, 293, 2699, 76, 15682, 307, 472, 5484, 2507, 13, 663, 311, 2074, 13, 407, 309, 311, 50826, 50826, 257, 309, 311, 588, 6600, 388, 588, 23847, 1230, 732, 4008, 13, 663, 311, 2074, 291, 393, 291, 393, 1081, 428, 4740, 538, 51144, 51144, 4764, 281, 472, 295, 729, 732, 9313, 13, 583, 498, 291, 434, 4764, 281, 341, 3500, 731, 309, 733, 295, 51500, 51500, 14893, 3030, 2699, 76, 430, 1660, 370, 498, 291, 528, 281, 1406, 2699, 76, 15682, 550, 291, 820, 1590, 4764, 13, 865, 300, 311, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.147210405423091, "compression_ratio": 1.7236842105263157, "no_caption_prob": 2.8408776415744796e-05}, {"id": 9, "seek": 4516, "start": 67.88, "end": 74.88, "text": " counts towards Elm Pages so if you want to support Elm UI then you should stop listening. Yeah that's", "tokens": [50364, 1409, 365, 2699, 76, 430, 1660, 527, 700, 3500, 13, 7010, 293, 2699, 76, 15682, 307, 472, 5484, 2507, 13, 663, 311, 2074, 13, 407, 309, 311, 50826, 50826, 257, 309, 311, 588, 6600, 388, 588, 23847, 1230, 732, 4008, 13, 663, 311, 2074, 291, 393, 291, 393, 1081, 428, 4740, 538, 51144, 51144, 4764, 281, 472, 295, 729, 732, 9313, 13, 583, 498, 291, 434, 4764, 281, 341, 3500, 731, 309, 733, 295, 51500, 51500, 14893, 3030, 2699, 76, 430, 1660, 370, 498, 291, 528, 281, 1406, 2699, 76, 15682, 550, 291, 820, 1590, 4764, 13, 865, 300, 311, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.147210405423091, "compression_ratio": 1.7236842105263157, "no_caption_prob": 2.8408776415744796e-05}, {"id": 10, "seek": 7488, "start": 74.88, "end": 80.16, "text": " true that's true although you still downloaded it so we're looking at download counts. Oh that's", "tokens": [50364, 2074, 300, 311, 2074, 4878, 291, 920, 21748, 309, 370, 321, 434, 1237, 412, 5484, 14893, 13, 876, 300, 311, 50628, 50628, 2074, 1338, 291, 434, 291, 393, 380, 360, 1340, 3602, 13, 865, 2597, 13, 1449, 2073, 2699, 76, 15682, 544, 1338, 420, 2073, 50978, 50978, 2699, 76, 430, 1660, 544, 13, 14945, 341, 3500, 13, 407, 286, 13207, 286, 767, 13207, 646, 281, 264, 3380, 2699, 76, 430, 1660, 51354, 51354, 3500, 257, 707, 1339, 646, 281, 445, 1333, 295, 411, 574, 412, 291, 458, 747, 4127, 295, 689, 721, 362, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.14200946965168432, "compression_ratio": 1.7117903930131004, "no_caption_prob": 6.96223014529096e-06}, {"id": 11, "seek": 7488, "start": 80.16, "end": 87.16, "text": " true yeah you're you can't do anything anymore. Yeah sorry. Just share Elm UI more yeah or share", "tokens": [50364, 2074, 300, 311, 2074, 4878, 291, 920, 21748, 309, 370, 321, 434, 1237, 412, 5484, 14893, 13, 876, 300, 311, 50628, 50628, 2074, 1338, 291, 434, 291, 393, 380, 360, 1340, 3602, 13, 865, 2597, 13, 1449, 2073, 2699, 76, 15682, 544, 1338, 420, 2073, 50978, 50978, 2699, 76, 430, 1660, 544, 13, 14945, 341, 3500, 13, 407, 286, 13207, 286, 767, 13207, 646, 281, 264, 3380, 2699, 76, 430, 1660, 51354, 51354, 3500, 257, 707, 1339, 646, 281, 445, 1333, 295, 411, 574, 412, 291, 458, 747, 4127, 295, 689, 721, 362, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.14200946965168432, "compression_ratio": 1.7117903930131004, "no_caption_prob": 6.96223014529096e-06}, {"id": 12, "seek": 7488, "start": 87.16, "end": 94.67999999999999, "text": " Elm Pages more. Share this episode. So I listened I actually listened back to the original Elm Pages", "tokens": [50364, 2074, 300, 311, 2074, 4878, 291, 920, 21748, 309, 370, 321, 434, 1237, 412, 5484, 14893, 13, 876, 300, 311, 50628, 50628, 2074, 1338, 291, 434, 291, 393, 380, 360, 1340, 3602, 13, 865, 2597, 13, 1449, 2073, 2699, 76, 15682, 544, 1338, 420, 2073, 50978, 50978, 2699, 76, 430, 1660, 544, 13, 14945, 341, 3500, 13, 407, 286, 13207, 286, 767, 13207, 646, 281, 264, 3380, 2699, 76, 430, 1660, 51354, 51354, 3500, 257, 707, 1339, 646, 281, 445, 1333, 295, 411, 574, 412, 291, 458, 747, 4127, 295, 689, 721, 362, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.14200946965168432, "compression_ratio": 1.7117903930131004, "no_caption_prob": 6.96223014529096e-06}, {"id": 13, "seek": 7488, "start": 94.67999999999999, "end": 101.64, "text": " episode a little while back to just sort of like look at you know take stock of where things have", "tokens": [50364, 2074, 300, 311, 2074, 4878, 291, 920, 21748, 309, 370, 321, 434, 1237, 412, 5484, 14893, 13, 876, 300, 311, 50628, 50628, 2074, 1338, 291, 434, 291, 393, 380, 360, 1340, 3602, 13, 865, 2597, 13, 1449, 2073, 2699, 76, 15682, 544, 1338, 420, 2073, 50978, 50978, 2699, 76, 430, 1660, 544, 13, 14945, 341, 3500, 13, 407, 286, 13207, 286, 767, 13207, 646, 281, 264, 3380, 2699, 76, 430, 1660, 51354, 51354, 3500, 257, 707, 1339, 646, 281, 445, 1333, 295, 411, 574, 412, 291, 458, 747, 4127, 295, 689, 721, 362, 51702, 51702], "temperature": 0.0, "avg_logprob": -0.14200946965168432, "compression_ratio": 1.7117903930131004, "no_caption_prob": 6.96223014529096e-06}, {"id": 14, "seek": 10164, "start": 101.64, "end": 110.04, "text": " gone and compared to what's changed with 2.0 and actually our 1.0 episode not to try to gamify the", "tokens": [50364, 2780, 293, 5347, 281, 437, 311, 3105, 365, 568, 13, 15, 293, 767, 527, 502, 13, 15, 3500, 406, 281, 853, 281, 8019, 2505, 264, 50784, 50784, 1185, 295, 1242, 544, 36553, 456, 420, 1340, 457, 309, 311, 920, 7340, 13, 492, 2825, 257, 688, 466, 51064, 51064, 445, 733, 295, 7872, 372, 501, 10392, 293, 293, 983, 300, 311, 364, 1880, 3318, 365, 2699, 76, 457, 264, 9482, 51364, 51364, 365, 568, 13, 15, 575, 3105, 17548, 370, 286, 519, 321, 603, 483, 666, 512, 295, 264, 4365, 456, 597, 286, 519, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.10394106206205703, "compression_ratio": 1.6122448979591837, "no_caption_prob": 2.586685513961129e-05}, {"id": 15, "seek": 10164, "start": 110.04, "end": 115.64, "text": " system of getting more downloads there or anything but it's still relevant. We talked a lot about", "tokens": [50364, 2780, 293, 5347, 281, 437, 311, 3105, 365, 568, 13, 15, 293, 767, 527, 502, 13, 15, 3500, 406, 281, 853, 281, 8019, 2505, 264, 50784, 50784, 1185, 295, 1242, 544, 36553, 456, 420, 1340, 457, 309, 311, 920, 7340, 13, 492, 2825, 257, 688, 466, 51064, 51064, 445, 733, 295, 7872, 372, 501, 10392, 293, 293, 983, 300, 311, 364, 1880, 3318, 365, 2699, 76, 457, 264, 9482, 51364, 51364, 365, 568, 13, 15, 575, 3105, 17548, 370, 286, 519, 321, 603, 483, 666, 512, 295, 264, 4365, 456, 597, 286, 519, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.10394106206205703, "compression_ratio": 1.6122448979591837, "no_caption_prob": 2.586685513961129e-05}, {"id": 16, "seek": 10164, "start": 115.64, "end": 121.64, "text": " just kind of jamstack concepts and and why that's an interesting fit with Elm but the architecture", "tokens": [50364, 2780, 293, 5347, 281, 437, 311, 3105, 365, 568, 13, 15, 293, 767, 527, 502, 13, 15, 3500, 406, 281, 853, 281, 8019, 2505, 264, 50784, 50784, 1185, 295, 1242, 544, 36553, 456, 420, 1340, 457, 309, 311, 920, 7340, 13, 492, 2825, 257, 688, 466, 51064, 51064, 445, 733, 295, 7872, 372, 501, 10392, 293, 293, 983, 300, 311, 364, 1880, 3318, 365, 2699, 76, 457, 264, 9482, 51364, 51364, 365, 568, 13, 15, 575, 3105, 17548, 370, 286, 519, 321, 603, 483, 666, 512, 295, 264, 4365, 456, 597, 286, 519, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.10394106206205703, "compression_ratio": 1.6122448979591837, "no_caption_prob": 2.586685513961129e-05}, {"id": 17, "seek": 10164, "start": 121.64, "end": 127.76, "text": " with 2.0 has changed dramatically so I think we'll get into some of the details there which I think", "tokens": [50364, 2780, 293, 5347, 281, 437, 311, 3105, 365, 568, 13, 15, 293, 767, 527, 502, 13, 15, 3500, 406, 281, 853, 281, 8019, 2505, 264, 50784, 50784, 1185, 295, 1242, 544, 36553, 456, 420, 1340, 457, 309, 311, 920, 7340, 13, 492, 2825, 257, 688, 466, 51064, 51064, 445, 733, 295, 7872, 372, 501, 10392, 293, 293, 983, 300, 311, 364, 1880, 3318, 365, 2699, 76, 457, 264, 9482, 51364, 51364, 365, 568, 13, 15, 575, 3105, 17548, 370, 286, 519, 321, 603, 483, 666, 512, 295, 264, 4365, 456, 597, 286, 519, 51670, 51670], "temperature": 0.0, "avg_logprob": -0.10394106206205703, "compression_ratio": 1.6122448979591837, "no_caption_prob": 2.586685513961129e-05}, {"id": 18, "seek": 12776, "start": 127.76, "end": 133.6, "text": " are very interesting. All right maybe let's start with just saying what Elm Pages is because some", "tokens": [50364, 366, 588, 1880, 13, 1057, 558, 1310, 718, 311, 722, 365, 445, 1566, 437, 2699, 76, 430, 1660, 307, 570, 512, 50656, 50656, 561, 815, 406, 312, 3650, 436, 815, 436, 1062, 312, 25876, 3030, 264, 2699, 76, 430, 1660, 472, 3500, 457, 50950, 50950, 718, 311, 718, 311, 38818, 533, 309, 510, 13, 407, 28160, 437, 307, 2699, 76, 430, 1660, 30, 1033, 370, 412, 1080, 4965, 2699, 76, 430, 1660, 307, 257, 51404, 51404, 3663, 337, 8407, 294, 1412, 293, 659, 22407, 309, 281, 257, 992, 295, 13437, 7183, 300, 291, 393, 7274, 365, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13528914451599122, "compression_ratio": 1.6508620689655173, "no_caption_prob": 1.3845869943907019e-05}, {"id": 19, "seek": 12776, "start": 133.6, "end": 139.48000000000002, "text": " people may not be aware they may they might be rushing towards the Elm Pages one episode but", "tokens": [50364, 366, 588, 1880, 13, 1057, 558, 1310, 718, 311, 722, 365, 445, 1566, 437, 2699, 76, 430, 1660, 307, 570, 512, 50656, 50656, 561, 815, 406, 312, 3650, 436, 815, 436, 1062, 312, 25876, 3030, 264, 2699, 76, 430, 1660, 472, 3500, 457, 50950, 50950, 718, 311, 718, 311, 38818, 533, 309, 510, 13, 407, 28160, 437, 307, 2699, 76, 430, 1660, 30, 1033, 370, 412, 1080, 4965, 2699, 76, 430, 1660, 307, 257, 51404, 51404, 3663, 337, 8407, 294, 1412, 293, 659, 22407, 309, 281, 257, 992, 295, 13437, 7183, 300, 291, 393, 7274, 365, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13528914451599122, "compression_ratio": 1.6508620689655173, "no_caption_prob": 1.3845869943907019e-05}, {"id": 20, "seek": 12776, "start": 139.48000000000002, "end": 148.56, "text": " let's let's redefine it here. So Dylan what is Elm Pages? Okay so at its core Elm Pages is a", "tokens": [50364, 366, 588, 1880, 13, 1057, 558, 1310, 718, 311, 722, 365, 445, 1566, 437, 2699, 76, 430, 1660, 307, 570, 512, 50656, 50656, 561, 815, 406, 312, 3650, 436, 815, 436, 1062, 312, 25876, 3030, 264, 2699, 76, 430, 1660, 472, 3500, 457, 50950, 50950, 718, 311, 718, 311, 38818, 533, 309, 510, 13, 407, 28160, 437, 307, 2699, 76, 430, 1660, 30, 1033, 370, 412, 1080, 4965, 2699, 76, 430, 1660, 307, 257, 51404, 51404, 3663, 337, 8407, 294, 1412, 293, 659, 22407, 309, 281, 257, 992, 295, 13437, 7183, 300, 291, 393, 7274, 365, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13528914451599122, "compression_ratio": 1.6508620689655173, "no_caption_prob": 1.3845869943907019e-05}, {"id": 21, "seek": 12776, "start": 148.56, "end": 156.36, "text": " platform for pulling in data and pre rendering it to a set of static pages that you can deploy with", "tokens": [50364, 366, 588, 1880, 13, 1057, 558, 1310, 718, 311, 722, 365, 445, 1566, 437, 2699, 76, 430, 1660, 307, 570, 512, 50656, 50656, 561, 815, 406, 312, 3650, 436, 815, 436, 1062, 312, 25876, 3030, 264, 2699, 76, 430, 1660, 472, 3500, 457, 50950, 50950, 718, 311, 718, 311, 38818, 533, 309, 510, 13, 407, 28160, 437, 307, 2699, 76, 430, 1660, 30, 1033, 370, 412, 1080, 4965, 2699, 76, 430, 1660, 307, 257, 51404, 51404, 3663, 337, 8407, 294, 1412, 293, 659, 22407, 309, 281, 257, 992, 295, 13437, 7183, 300, 291, 393, 7274, 365, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.13528914451599122, "compression_ratio": 1.6508620689655173, "no_caption_prob": 1.3845869943907019e-05}, {"id": 22, "seek": 15636, "start": 156.36, "end": 164.44000000000003, "text": " this CDN like Netlify for example. So what I mean by pulling in data is there's this concept in Elm", "tokens": [50364, 341, 6743, 45, 411, 6188, 75, 2505, 337, 1365, 13, 407, 437, 286, 914, 538, 8407, 294, 1412, 307, 456, 311, 341, 3410, 294, 2699, 76, 50768, 50768, 430, 1660, 502, 13, 15, 309, 390, 1219, 13437, 33283, 1412, 3620, 300, 291, 727, 2235, 294, 1412, 490, 21445, 293, 362, 309, 51100, 51100, 456, 562, 428, 3028, 659, 28748, 13, 1133, 291, 3094, 428, 3861, 30, 1133, 291, 1322, 428, 3861, 51424, 51424, 293, 309, 23930, 337, 428, 6968, 12300, 309, 23930, 364, 17995, 3028, 337, 1184, 295, 729, 5183, 5183, 337, 439, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10853006401840522, "compression_ratio": 1.6322314049586777, "no_caption_prob": 6.144115559436614e-06}, {"id": 23, "seek": 15636, "start": 164.44000000000003, "end": 171.08, "text": " Pages 1.0 it was called static HTTP data meaning that you could pull in data from APIs and have it", "tokens": [50364, 341, 6743, 45, 411, 6188, 75, 2505, 337, 1365, 13, 407, 437, 286, 914, 538, 8407, 294, 1412, 307, 456, 311, 341, 3410, 294, 2699, 76, 50768, 50768, 430, 1660, 502, 13, 15, 309, 390, 1219, 13437, 33283, 1412, 3620, 300, 291, 727, 2235, 294, 1412, 490, 21445, 293, 362, 309, 51100, 51100, 456, 562, 428, 3028, 659, 28748, 13, 1133, 291, 3094, 428, 3861, 30, 1133, 291, 1322, 428, 3861, 51424, 51424, 293, 309, 23930, 337, 428, 6968, 12300, 309, 23930, 364, 17995, 3028, 337, 1184, 295, 729, 5183, 5183, 337, 439, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10853006401840522, "compression_ratio": 1.6322314049586777, "no_caption_prob": 6.144115559436614e-06}, {"id": 24, "seek": 15636, "start": 171.08, "end": 177.56, "text": " there when your page pre rendered. When you built your application? When you build your application", "tokens": [50364, 341, 6743, 45, 411, 6188, 75, 2505, 337, 1365, 13, 407, 437, 286, 914, 538, 8407, 294, 1412, 307, 456, 311, 341, 3410, 294, 2699, 76, 50768, 50768, 430, 1660, 502, 13, 15, 309, 390, 1219, 13437, 33283, 1412, 3620, 300, 291, 727, 2235, 294, 1412, 490, 21445, 293, 362, 309, 51100, 51100, 456, 562, 428, 3028, 659, 28748, 13, 1133, 291, 3094, 428, 3861, 30, 1133, 291, 1322, 428, 3861, 51424, 51424, 293, 309, 23930, 337, 428, 6968, 12300, 309, 23930, 364, 17995, 3028, 337, 1184, 295, 729, 5183, 5183, 337, 439, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10853006401840522, "compression_ratio": 1.6322314049586777, "no_caption_prob": 6.144115559436614e-06}, {"id": 25, "seek": 15636, "start": 177.56, "end": 185.36, "text": " and it outputs for your blog posts it outputs an HTML page for each of those etc etc for all the", "tokens": [50364, 341, 6743, 45, 411, 6188, 75, 2505, 337, 1365, 13, 407, 437, 286, 914, 538, 8407, 294, 1412, 307, 456, 311, 341, 3410, 294, 2699, 76, 50768, 50768, 430, 1660, 502, 13, 15, 309, 390, 1219, 13437, 33283, 1412, 3620, 300, 291, 727, 2235, 294, 1412, 490, 21445, 293, 362, 309, 51100, 51100, 456, 562, 428, 3028, 659, 28748, 13, 1133, 291, 3094, 428, 3861, 30, 1133, 291, 1322, 428, 3861, 51424, 51424, 293, 309, 23930, 337, 428, 6968, 12300, 309, 23930, 364, 17995, 3028, 337, 1184, 295, 729, 5183, 5183, 337, 439, 264, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.10853006401840522, "compression_ratio": 1.6322314049586777, "no_caption_prob": 6.144115559436614e-06}, {"id": 26, "seek": 18536, "start": 185.36, "end": 192.36, "text": " different pages so you could pull in data from for example from the elmradio.com website. What that", "tokens": [50364, 819, 7183, 370, 291, 727, 2235, 294, 1412, 490, 337, 1365, 490, 264, 806, 76, 6206, 1004, 13, 1112, 3144, 13, 708, 300, 50714, 50714, 775, 309, 311, 364, 2699, 76, 430, 1660, 3861, 293, 309, 767, 4960, 264, 21532, 3734, 9362, 597, 307, 527, 1333, 295, 51088, 51088, 16058, 12398, 337, 337, 264, 6278, 293, 321, 764, 9362, 5498, 490, 21532, 3734, 293, 23673, 26603, 466, 51526, 51526, 689, 264, 275, 79, 18, 82, 366, 19204, 293, 767, 512, 512, 661, 26603, 466, 264, 2744, 295, 264, 7098, 293, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10485450257646277, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8448170067131286e-06}, {"id": 27, "seek": 18536, "start": 192.36, "end": 199.84, "text": " does it's an Elm Pages application and it actually uses the Simplecast API which is our sort of", "tokens": [50364, 819, 7183, 370, 291, 727, 2235, 294, 1412, 490, 337, 1365, 490, 264, 806, 76, 6206, 1004, 13, 1112, 3144, 13, 708, 300, 50714, 50714, 775, 309, 311, 364, 2699, 76, 430, 1660, 3861, 293, 309, 767, 4960, 264, 21532, 3734, 9362, 597, 307, 527, 1333, 295, 51088, 51088, 16058, 12398, 337, 337, 264, 6278, 293, 321, 764, 9362, 5498, 490, 21532, 3734, 293, 23673, 26603, 466, 51526, 51526, 689, 264, 275, 79, 18, 82, 366, 19204, 293, 767, 512, 512, 661, 26603, 466, 264, 2744, 295, 264, 7098, 293, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10485450257646277, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8448170067131286e-06}, {"id": 28, "seek": 18536, "start": 199.84, "end": 208.60000000000002, "text": " hosting provider for for the audio and we use API calls from Simplecast and fetch metadata about", "tokens": [50364, 819, 7183, 370, 291, 727, 2235, 294, 1412, 490, 337, 1365, 490, 264, 806, 76, 6206, 1004, 13, 1112, 3144, 13, 708, 300, 50714, 50714, 775, 309, 311, 364, 2699, 76, 430, 1660, 3861, 293, 309, 767, 4960, 264, 21532, 3734, 9362, 597, 307, 527, 1333, 295, 51088, 51088, 16058, 12398, 337, 337, 264, 6278, 293, 321, 764, 9362, 5498, 490, 21532, 3734, 293, 23673, 26603, 466, 51526, 51526, 689, 264, 275, 79, 18, 82, 366, 19204, 293, 767, 512, 512, 661, 26603, 466, 264, 2744, 295, 264, 7098, 293, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10485450257646277, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8448170067131286e-06}, {"id": 29, "seek": 18536, "start": 208.60000000000002, "end": 215.04000000000002, "text": " where the mp3s are hosted and actually some some other metadata about the size of the files and", "tokens": [50364, 819, 7183, 370, 291, 727, 2235, 294, 1412, 490, 337, 1365, 490, 264, 806, 76, 6206, 1004, 13, 1112, 3144, 13, 708, 300, 50714, 50714, 775, 309, 311, 364, 2699, 76, 430, 1660, 3861, 293, 309, 767, 4960, 264, 21532, 3734, 9362, 597, 307, 527, 1333, 295, 51088, 51088, 16058, 12398, 337, 337, 264, 6278, 293, 321, 764, 9362, 5498, 490, 21532, 3734, 293, 23673, 26603, 466, 51526, 51526, 689, 264, 275, 79, 18, 82, 366, 19204, 293, 767, 512, 512, 661, 26603, 466, 264, 2744, 295, 264, 7098, 293, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.10485450257646277, "compression_ratio": 1.6371308016877637, "no_caption_prob": 1.8448170067131286e-06}, {"id": 30, "seek": 21504, "start": 215.04, "end": 223.79999999999998, "text": " stuff that the RSS feed needs. Generate an RSS feed all using pure Elm code generate the the pages", "tokens": [50364, 1507, 300, 264, 497, 21929, 3154, 2203, 13, 15409, 473, 364, 497, 21929, 3154, 439, 1228, 6075, 2699, 76, 3089, 8460, 264, 264, 7183, 50802, 50802, 337, 1184, 3500, 293, 309, 311, 1228, 9362, 1412, 293, 300, 311, 2435, 412, 264, 659, 28748, 17995, 293, 51180, 51180, 309, 311, 611, 2435, 562, 428, 2699, 76, 3861, 5796, 12507, 370, 309, 12668, 264, 17995, 597, 575, 668, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.09810810089111328, "compression_ratio": 1.530054644808743, "no_caption_prob": 4.399930912768468e-05}, {"id": 31, "seek": 21504, "start": 223.79999999999998, "end": 231.35999999999999, "text": " for each episode and it's using API data and that's available at the pre rendered HTML and", "tokens": [50364, 1507, 300, 264, 497, 21929, 3154, 2203, 13, 15409, 473, 364, 497, 21929, 3154, 439, 1228, 6075, 2699, 76, 3089, 8460, 264, 264, 7183, 50802, 50802, 337, 1184, 3500, 293, 309, 311, 1228, 9362, 1412, 293, 300, 311, 2435, 412, 264, 659, 28748, 17995, 293, 51180, 51180, 309, 311, 611, 2435, 562, 428, 2699, 76, 3861, 5796, 12507, 370, 309, 12668, 264, 17995, 597, 575, 668, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.09810810089111328, "compression_ratio": 1.530054644808743, "no_caption_prob": 4.399930912768468e-05}, {"id": 32, "seek": 21504, "start": 231.35999999999999, "end": 237.32, "text": " it's also available when your Elm application hydrates so it loads the HTML which has been", "tokens": [50364, 1507, 300, 264, 497, 21929, 3154, 2203, 13, 15409, 473, 364, 497, 21929, 3154, 439, 1228, 6075, 2699, 76, 3089, 8460, 264, 264, 7183, 50802, 50802, 337, 1184, 3500, 293, 309, 311, 1228, 9362, 1412, 293, 300, 311, 2435, 412, 264, 659, 28748, 17995, 293, 51180, 51180, 309, 311, 611, 2435, 562, 428, 2699, 76, 3861, 5796, 12507, 370, 309, 12668, 264, 17995, 597, 575, 668, 51478, 51478], "temperature": 0.0, "avg_logprob": -0.09810810089111328, "compression_ratio": 1.530054644808743, "no_caption_prob": 4.399930912768468e-05}, {"id": 33, "seek": 23732, "start": 237.32, "end": 245.68, "text": " pre rendered if you have something like Twitter or Slack basically scraping to get those nice social", "tokens": [50364, 659, 28748, 498, 291, 362, 746, 411, 5794, 420, 37211, 1936, 43738, 281, 483, 729, 1481, 2093, 50782, 50782, 14281, 82, 436, 434, 516, 281, 312, 1075, 281, 483, 300, 570, 309, 311, 659, 28748, 370, 264, 4965, 1558, 307, 51100, 51100, 300, 411, 281, 483, 729, 1481, 2093, 14281, 82, 293, 1507, 2171, 291, 643, 1412, 490, 819, 51404, 51404, 7139, 293, 2699, 76, 7183, 2709, 291, 264, 3485, 281, 483, 300, 1412, 949, 3157, 754, 6676, 294, 428, 2699, 76, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.09995309696641079, "compression_ratio": 1.8095238095238095, "no_caption_prob": 1.8631402781466022e-05}, {"id": 34, "seek": 23732, "start": 245.68, "end": 252.04, "text": " previews they're going to be able to get that because it's pre rendered so the core idea is", "tokens": [50364, 659, 28748, 498, 291, 362, 746, 411, 5794, 420, 37211, 1936, 43738, 281, 483, 729, 1481, 2093, 50782, 50782, 14281, 82, 436, 434, 516, 281, 312, 1075, 281, 483, 300, 570, 309, 311, 659, 28748, 370, 264, 4965, 1558, 307, 51100, 51100, 300, 411, 281, 483, 729, 1481, 2093, 14281, 82, 293, 1507, 2171, 291, 643, 1412, 490, 819, 51404, 51404, 7139, 293, 2699, 76, 7183, 2709, 291, 264, 3485, 281, 483, 300, 1412, 949, 3157, 754, 6676, 294, 428, 2699, 76, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.09995309696641079, "compression_ratio": 1.8095238095238095, "no_caption_prob": 1.8631402781466022e-05}, {"id": 35, "seek": 23732, "start": 252.04, "end": 258.12, "text": " that like to get those nice social previews and stuff sometimes you need data from different", "tokens": [50364, 659, 28748, 498, 291, 362, 746, 411, 5794, 420, 37211, 1936, 43738, 281, 483, 729, 1481, 2093, 50782, 50782, 14281, 82, 436, 434, 516, 281, 312, 1075, 281, 483, 300, 570, 309, 311, 659, 28748, 370, 264, 4965, 1558, 307, 51100, 51100, 300, 411, 281, 483, 729, 1481, 2093, 14281, 82, 293, 1507, 2171, 291, 643, 1412, 490, 819, 51404, 51404, 7139, 293, 2699, 76, 7183, 2709, 291, 264, 3485, 281, 483, 300, 1412, 949, 3157, 754, 6676, 294, 428, 2699, 76, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.09995309696641079, "compression_ratio": 1.8095238095238095, "no_caption_prob": 1.8631402781466022e-05}, {"id": 36, "seek": 23732, "start": 258.12, "end": 265.24, "text": " sources and Elm pages gives you the ability to get that data before init even runs in your Elm", "tokens": [50364, 659, 28748, 498, 291, 362, 746, 411, 5794, 420, 37211, 1936, 43738, 281, 483, 729, 1481, 2093, 50782, 50782, 14281, 82, 436, 434, 516, 281, 312, 1075, 281, 483, 300, 570, 309, 311, 659, 28748, 370, 264, 4965, 1558, 307, 51100, 51100, 300, 411, 281, 483, 729, 1481, 2093, 14281, 82, 293, 1507, 2171, 291, 643, 1412, 490, 819, 51404, 51404, 7139, 293, 2699, 76, 7183, 2709, 291, 264, 3485, 281, 483, 300, 1412, 949, 3157, 754, 6676, 294, 428, 2699, 76, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.09995309696641079, "compression_ratio": 1.8095238095238095, "no_caption_prob": 1.8631402781466022e-05}, {"id": 37, "seek": 26524, "start": 265.24, "end": 271.92, "text": " application. So for pre rendering... Just to clarify so you said that it generates a lot of HTML", "tokens": [50364, 3861, 13, 407, 337, 659, 22407, 485, 1449, 281, 17594, 370, 291, 848, 300, 309, 23815, 257, 688, 295, 17995, 50698, 50698, 7098, 293, 497, 21929, 7098, 293, 286, 478, 17939, 733, 295, 2035, 291, 458, 300, 291, 3172, 337, 30, 7587, 51036, 51036, 309, 311, 445, 309, 309, 1177, 380, 4682, 8460, 1340, 3993, 437, 291, 6964, 3009, 497, 21929, 51352, 51352, 23712, 293, 439, 295, 300, 300, 311, 291, 458, 512, 2699, 76, 3089, 300, 291, 2464, 281, 5598, 257, 6798, 281, 257, 3991, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.12315023210313585, "compression_ratio": 1.5914893617021277, "no_caption_prob": 2.642577328515472e-06}, {"id": 38, "seek": 26524, "start": 271.92, "end": 278.68, "text": " files and RSS files and I'm guessing kind of whatever you know that you wish for? Exactly", "tokens": [50364, 3861, 13, 407, 337, 659, 22407, 485, 1449, 281, 17594, 370, 291, 848, 300, 309, 23815, 257, 688, 295, 17995, 50698, 50698, 7098, 293, 497, 21929, 7098, 293, 286, 478, 17939, 733, 295, 2035, 291, 458, 300, 291, 3172, 337, 30, 7587, 51036, 51036, 309, 311, 445, 309, 309, 1177, 380, 4682, 8460, 1340, 3993, 437, 291, 6964, 3009, 497, 21929, 51352, 51352, 23712, 293, 439, 295, 300, 300, 311, 291, 458, 512, 2699, 76, 3089, 300, 291, 2464, 281, 5598, 257, 6798, 281, 257, 3991, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.12315023210313585, "compression_ratio": 1.5914893617021277, "no_caption_prob": 2.642577328515472e-06}, {"id": 39, "seek": 26524, "start": 278.68, "end": 285.0, "text": " it's just it it doesn't specifically generate anything except what you define including RSS", "tokens": [50364, 3861, 13, 407, 337, 659, 22407, 485, 1449, 281, 17594, 370, 291, 848, 300, 309, 23815, 257, 688, 295, 17995, 50698, 50698, 7098, 293, 497, 21929, 7098, 293, 286, 478, 17939, 733, 295, 2035, 291, 458, 300, 291, 3172, 337, 30, 7587, 51036, 51036, 309, 311, 445, 309, 309, 1177, 380, 4682, 8460, 1340, 3993, 437, 291, 6964, 3009, 497, 21929, 51352, 51352, 23712, 293, 439, 295, 300, 300, 311, 291, 458, 512, 2699, 76, 3089, 300, 291, 2464, 281, 5598, 257, 6798, 281, 257, 3991, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.12315023210313585, "compression_ratio": 1.5914893617021277, "no_caption_prob": 2.642577328515472e-06}, {"id": 40, "seek": 26524, "start": 285.0, "end": 290.56, "text": " feeds and all of that that's you know some Elm code that you write to output a string to a file", "tokens": [50364, 3861, 13, 407, 337, 659, 22407, 485, 1449, 281, 17594, 370, 291, 848, 300, 309, 23815, 257, 688, 295, 17995, 50698, 50698, 7098, 293, 497, 21929, 7098, 293, 286, 478, 17939, 733, 295, 2035, 291, 458, 300, 291, 3172, 337, 30, 7587, 51036, 51036, 309, 311, 445, 309, 309, 1177, 380, 4682, 8460, 1340, 3993, 437, 291, 6964, 3009, 497, 21929, 51352, 51352, 23712, 293, 439, 295, 300, 300, 311, 291, 458, 512, 2699, 76, 3089, 300, 291, 2464, 281, 5598, 257, 6798, 281, 257, 3991, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.12315023210313585, "compression_ratio": 1.5914893617021277, "no_caption_prob": 2.642577328515472e-06}, {"id": 41, "seek": 29056, "start": 290.56, "end": 297.8, "text": " path and when you run your build it generates that. All right but so you generate HTML files", "tokens": [50364, 3100, 293, 562, 291, 1190, 428, 1322, 309, 23815, 300, 13, 1057, 558, 457, 370, 291, 8460, 17995, 7098, 50726, 50726, 457, 291, 611, 8460, 33063, 7098, 370, 291, 309, 311, 406, 445, 13437, 7098, 293, 13437, 15768, 309, 307, 611, 51094, 51094, 411, 445, 3890, 2699, 76, 5821, 300, 291, 393, 4648, 365, 445, 264, 636, 291, 434, 1143, 281, 365, 2699, 76, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.15225475421850232, "compression_ratio": 1.6179775280898876, "no_caption_prob": 1.892478576337453e-05}, {"id": 42, "seek": 29056, "start": 297.8, "end": 305.16, "text": " but you also generate JS files so you it's not just static files and static contents it is also", "tokens": [50364, 3100, 293, 562, 291, 1190, 428, 1322, 309, 23815, 300, 13, 1057, 558, 457, 370, 291, 8460, 17995, 7098, 50726, 50726, 457, 291, 611, 8460, 33063, 7098, 370, 291, 309, 311, 406, 445, 13437, 7098, 293, 13437, 15768, 309, 307, 611, 51094, 51094, 411, 445, 3890, 2699, 76, 5821, 300, 291, 393, 4648, 365, 445, 264, 636, 291, 434, 1143, 281, 365, 2699, 76, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.15225475421850232, "compression_ratio": 1.6179775280898876, "no_caption_prob": 1.892478576337453e-05}, {"id": 43, "seek": 29056, "start": 305.16, "end": 312.28, "text": " like just regular Elm applications that you can interact with just the way you're used to with Elm.", "tokens": [50364, 3100, 293, 562, 291, 1190, 428, 1322, 309, 23815, 300, 13, 1057, 558, 457, 370, 291, 8460, 17995, 7098, 50726, 50726, 457, 291, 611, 8460, 33063, 7098, 370, 291, 309, 311, 406, 445, 13437, 7098, 293, 13437, 15768, 309, 307, 611, 51094, 51094, 411, 445, 3890, 2699, 76, 5821, 300, 291, 393, 4648, 365, 445, 264, 636, 291, 434, 1143, 281, 365, 2699, 76, 13, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.15225475421850232, "compression_ratio": 1.6179775280898876, "no_caption_prob": 1.892478576337453e-05}, {"id": 44, "seek": 31228, "start": 312.28, "end": 320.67999999999995, "text": " Exactly right yeah you have a full fledged Elm application once the page loads that starts by", "tokens": [50364, 7587, 558, 1338, 291, 362, 257, 1577, 24114, 3004, 2699, 76, 3861, 1564, 264, 3028, 12668, 300, 3719, 538, 50784, 50784, 291, 458, 15114, 264, 659, 28748, 17995, 293, 300, 311, 2435, 337, 2093, 3021, 14281, 82, 300, 643, 281, 51134, 51134, 32827, 300, 457, 550, 291, 483, 257, 1577, 2699, 76, 3861, 293, 294, 1186, 309, 309, 2516, 670, 293, 775, 2167, 3028, 51498, 51498, 724, 7407, 763, 490, 456, 562, 291, 562, 291, 3677, 257, 777, 3028, 370, 309, 311, 406, 23673, 278, 17995, 281, 352, 281, 257, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10112976520619493, "compression_ratio": 1.696969696969697, "no_caption_prob": 8.614373655291274e-05}, {"id": 45, "seek": 31228, "start": 320.67999999999995, "end": 327.67999999999995, "text": " you know loading the pre rendered HTML and that's available for social media previews that need to", "tokens": [50364, 7587, 558, 1338, 291, 362, 257, 1577, 24114, 3004, 2699, 76, 3861, 1564, 264, 3028, 12668, 300, 3719, 538, 50784, 50784, 291, 458, 15114, 264, 659, 28748, 17995, 293, 300, 311, 2435, 337, 2093, 3021, 14281, 82, 300, 643, 281, 51134, 51134, 32827, 300, 457, 550, 291, 483, 257, 1577, 2699, 76, 3861, 293, 294, 1186, 309, 309, 2516, 670, 293, 775, 2167, 3028, 51498, 51498, 724, 7407, 763, 490, 456, 562, 291, 562, 291, 3677, 257, 777, 3028, 370, 309, 311, 406, 23673, 278, 17995, 281, 352, 281, 257, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10112976520619493, "compression_ratio": 1.696969696969697, "no_caption_prob": 8.614373655291274e-05}, {"id": 46, "seek": 31228, "start": 327.67999999999995, "end": 334.96, "text": " scrape that but then you get a full Elm application and in fact it it takes over and does single page", "tokens": [50364, 7587, 558, 1338, 291, 362, 257, 1577, 24114, 3004, 2699, 76, 3861, 1564, 264, 3028, 12668, 300, 3719, 538, 50784, 50784, 291, 458, 15114, 264, 659, 28748, 17995, 293, 300, 311, 2435, 337, 2093, 3021, 14281, 82, 300, 643, 281, 51134, 51134, 32827, 300, 457, 550, 291, 483, 257, 1577, 2699, 76, 3861, 293, 294, 1186, 309, 309, 2516, 670, 293, 775, 2167, 3028, 51498, 51498, 724, 7407, 763, 490, 456, 562, 291, 562, 291, 3677, 257, 777, 3028, 370, 309, 311, 406, 23673, 278, 17995, 281, 352, 281, 257, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10112976520619493, "compression_ratio": 1.696969696969697, "no_caption_prob": 8.614373655291274e-05}, {"id": 47, "seek": 31228, "start": 334.96, "end": 341.08, "text": " app navigations from there when you when you load a new page so it's not fetching HTML to go to a", "tokens": [50364, 7587, 558, 1338, 291, 362, 257, 1577, 24114, 3004, 2699, 76, 3861, 1564, 264, 3028, 12668, 300, 3719, 538, 50784, 50784, 291, 458, 15114, 264, 659, 28748, 17995, 293, 300, 311, 2435, 337, 2093, 3021, 14281, 82, 300, 643, 281, 51134, 51134, 32827, 300, 457, 550, 291, 483, 257, 1577, 2699, 76, 3861, 293, 294, 1186, 309, 309, 2516, 670, 293, 775, 2167, 3028, 51498, 51498, 724, 7407, 763, 490, 456, 562, 291, 562, 291, 3677, 257, 777, 3028, 370, 309, 311, 406, 23673, 278, 17995, 281, 352, 281, 257, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.10112976520619493, "compression_ratio": 1.696969696969697, "no_caption_prob": 8.614373655291274e-05}, {"id": 48, "seek": 34108, "start": 341.08, "end": 346.84, "text": " new page it's running as a continuous Elm application. Yeah so it's downloading the the", "tokens": [50364, 777, 3028, 309, 311, 2614, 382, 257, 10957, 2699, 76, 3861, 13, 865, 370, 309, 311, 32529, 264, 264, 50652, 50652, 17995, 3991, 264, 6125, 433, 309, 293, 550, 562, 291, 584, 309, 5796, 12507, 309, 46734, 439, 300, 538, 257, 8470, 2699, 76, 51070, 51070, 3861, 13, 7587, 293, 562, 291, 6034, 1296, 7183, 291, 393, 754, 362, 257, 5507, 2316, 51358, 51358, 2293, 411, 2699, 76, 8420, 32, 293, 300, 1715, 390, 7547, 538, 2699, 76, 8420, 32, 311, 1715, 456, 293, 300, 5507, 2316, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11294341873336625, "compression_ratio": 1.6801801801801801, "no_caption_prob": 4.495165285334224e-06}, {"id": 49, "seek": 34108, "start": 346.84, "end": 355.2, "text": " HTML file the renders it and then when you say it hydrates it replaces all that by a native Elm", "tokens": [50364, 777, 3028, 309, 311, 2614, 382, 257, 10957, 2699, 76, 3861, 13, 865, 370, 309, 311, 32529, 264, 264, 50652, 50652, 17995, 3991, 264, 6125, 433, 309, 293, 550, 562, 291, 584, 309, 5796, 12507, 309, 46734, 439, 300, 538, 257, 8470, 2699, 76, 51070, 51070, 3861, 13, 7587, 293, 562, 291, 6034, 1296, 7183, 291, 393, 754, 362, 257, 5507, 2316, 51358, 51358, 2293, 411, 2699, 76, 8420, 32, 293, 300, 1715, 390, 7547, 538, 2699, 76, 8420, 32, 311, 1715, 456, 293, 300, 5507, 2316, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11294341873336625, "compression_ratio": 1.6801801801801801, "no_caption_prob": 4.495165285334224e-06}, {"id": 50, "seek": 34108, "start": 355.2, "end": 360.96, "text": " application. Exactly and when you transition between pages you can even have a shared model", "tokens": [50364, 777, 3028, 309, 311, 2614, 382, 257, 10957, 2699, 76, 3861, 13, 865, 370, 309, 311, 32529, 264, 264, 50652, 50652, 17995, 3991, 264, 6125, 433, 309, 293, 550, 562, 291, 584, 309, 5796, 12507, 309, 46734, 439, 300, 538, 257, 8470, 2699, 76, 51070, 51070, 3861, 13, 7587, 293, 562, 291, 6034, 1296, 7183, 291, 393, 754, 362, 257, 5507, 2316, 51358, 51358, 2293, 411, 2699, 76, 8420, 32, 293, 300, 1715, 390, 7547, 538, 2699, 76, 8420, 32, 311, 1715, 456, 293, 300, 5507, 2316, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11294341873336625, "compression_ratio": 1.6801801801801801, "no_caption_prob": 4.495165285334224e-06}, {"id": 51, "seek": 34108, "start": 360.96, "end": 368.15999999999997, "text": " exactly like Elm SPA and that design was inspired by Elm SPA's design there and that shared model", "tokens": [50364, 777, 3028, 309, 311, 2614, 382, 257, 10957, 2699, 76, 3861, 13, 865, 370, 309, 311, 32529, 264, 264, 50652, 50652, 17995, 3991, 264, 6125, 433, 309, 293, 550, 562, 291, 584, 309, 5796, 12507, 309, 46734, 439, 300, 538, 257, 8470, 2699, 76, 51070, 51070, 3861, 13, 7587, 293, 562, 291, 6034, 1296, 7183, 291, 393, 754, 362, 257, 5507, 2316, 51358, 51358, 2293, 411, 2699, 76, 8420, 32, 293, 300, 1715, 390, 7547, 538, 2699, 76, 8420, 32, 311, 1715, 456, 293, 300, 5507, 2316, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.11294341873336625, "compression_ratio": 1.6801801801801801, "no_caption_prob": 4.495165285334224e-06}, {"id": 52, "seek": 36816, "start": 368.16, "end": 373.6, "text": " will persist as you do page changes because it's a continuous single page application from from", "tokens": [50364, 486, 13233, 382, 291, 360, 3028, 2962, 570, 309, 311, 257, 10957, 2167, 3028, 3861, 490, 490, 50636, 50636, 456, 293, 370, 337, 341, 1333, 295, 370, 456, 311, 257, 819, 993, 6586, 337, 2699, 76, 7183, 689, 456, 311, 50944, 50944, 257, 1322, 1823, 5646, 2699, 76, 7183, 5646, 2699, 76, 5821, 500, 380, 362, 257, 1322, 1823, 457, 2699, 76, 51234, 51234, 7183, 2709, 291, 257, 1322, 1823, 370, 291, 483, 341, 659, 294, 309, 370, 562, 291, 562, 309, 659, 6125, 433, 257, 3028, 309, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.08909215097842009, "compression_ratio": 1.9081632653061225, "no_caption_prob": 1.2805311598640401e-05}, {"id": 53, "seek": 36816, "start": 373.6, "end": 379.76000000000005, "text": " there and so for this sort of so there's a different life cycle for Elm pages where there's", "tokens": [50364, 486, 13233, 382, 291, 360, 3028, 2962, 570, 309, 311, 257, 10957, 2167, 3028, 3861, 490, 490, 50636, 50636, 456, 293, 370, 337, 341, 1333, 295, 370, 456, 311, 257, 819, 993, 6586, 337, 2699, 76, 7183, 689, 456, 311, 50944, 50944, 257, 1322, 1823, 5646, 2699, 76, 7183, 5646, 2699, 76, 5821, 500, 380, 362, 257, 1322, 1823, 457, 2699, 76, 51234, 51234, 7183, 2709, 291, 257, 1322, 1823, 370, 291, 483, 341, 659, 294, 309, 370, 562, 291, 562, 309, 659, 6125, 433, 257, 3028, 309, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.08909215097842009, "compression_ratio": 1.9081632653061225, "no_caption_prob": 1.2805311598640401e-05}, {"id": 54, "seek": 36816, "start": 379.76000000000005, "end": 385.56, "text": " a build step normally Elm pages normally Elm applications don't have a build step but Elm", "tokens": [50364, 486, 13233, 382, 291, 360, 3028, 2962, 570, 309, 311, 257, 10957, 2167, 3028, 3861, 490, 490, 50636, 50636, 456, 293, 370, 337, 341, 1333, 295, 370, 456, 311, 257, 819, 993, 6586, 337, 2699, 76, 7183, 689, 456, 311, 50944, 50944, 257, 1322, 1823, 5646, 2699, 76, 7183, 5646, 2699, 76, 5821, 500, 380, 362, 257, 1322, 1823, 457, 2699, 76, 51234, 51234, 7183, 2709, 291, 257, 1322, 1823, 370, 291, 483, 341, 659, 294, 309, 370, 562, 291, 562, 309, 659, 6125, 433, 257, 3028, 309, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.08909215097842009, "compression_ratio": 1.9081632653061225, "no_caption_prob": 1.2805311598640401e-05}, {"id": 55, "seek": 36816, "start": 385.56, "end": 393.64000000000004, "text": " pages gives you a build step so you get this pre in it so when you when it pre renders a page it", "tokens": [50364, 486, 13233, 382, 291, 360, 3028, 2962, 570, 309, 311, 257, 10957, 2167, 3028, 3861, 490, 490, 50636, 50636, 456, 293, 370, 337, 341, 1333, 295, 370, 456, 311, 257, 819, 993, 6586, 337, 2699, 76, 7183, 689, 456, 311, 50944, 50944, 257, 1322, 1823, 5646, 2699, 76, 7183, 5646, 2699, 76, 5821, 500, 380, 362, 257, 1322, 1823, 457, 2699, 76, 51234, 51234, 7183, 2709, 291, 257, 1322, 1823, 370, 291, 483, 341, 659, 294, 309, 370, 562, 291, 562, 309, 659, 6125, 433, 257, 3028, 309, 51638, 51638], "temperature": 0.0, "avg_logprob": -0.08909215097842009, "compression_ratio": 1.9081632653061225, "no_caption_prob": 1.2805311598640401e-05}, {"id": 56, "seek": 39364, "start": 393.64, "end": 400.91999999999996, "text": " calls init for that page but it does not call update so it renders the initial in knitted", "tokens": [50364, 5498, 3157, 337, 300, 3028, 457, 309, 775, 406, 818, 5623, 370, 309, 6125, 433, 264, 5883, 294, 444, 3944, 50728, 50728, 3037, 295, 604, 2212, 3028, 13, 400, 300, 311, 689, 321, 603, 312, 28748, 294, 420, 2279, 281, 300, 17995, 3991, 300, 486, 51076, 51076, 312, 2086, 659, 28748, 1392, 13, 7587, 558, 457, 949, 3157, 754, 2314, 2699, 76, 7183, 307, 516, 281, 14151, 51438, 51438, 428, 1412, 7139, 370, 264, 1412, 7139, 727, 312, 294, 2699, 76, 7183, 568, 13, 15, 309, 393, 312, 406, 787, 364, 33283, 1412, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.12952433910566508, "compression_ratio": 1.610878661087866, "no_caption_prob": 4.222797542752232e-06}, {"id": 57, "seek": 39364, "start": 400.91999999999996, "end": 407.88, "text": " version of any given page. And that's where we'll be rendered in or sent to that HTML file that will", "tokens": [50364, 5498, 3157, 337, 300, 3028, 457, 309, 775, 406, 818, 5623, 370, 309, 6125, 433, 264, 5883, 294, 444, 3944, 50728, 50728, 3037, 295, 604, 2212, 3028, 13, 400, 300, 311, 689, 321, 603, 312, 28748, 294, 420, 2279, 281, 300, 17995, 3991, 300, 486, 51076, 51076, 312, 2086, 659, 28748, 1392, 13, 7587, 558, 457, 949, 3157, 754, 2314, 2699, 76, 7183, 307, 516, 281, 14151, 51438, 51438, 428, 1412, 7139, 370, 264, 1412, 7139, 727, 312, 294, 2699, 76, 7183, 568, 13, 15, 309, 393, 312, 406, 787, 364, 33283, 1412, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.12952433910566508, "compression_ratio": 1.610878661087866, "no_caption_prob": 4.222797542752232e-06}, {"id": 58, "seek": 39364, "start": 407.88, "end": 415.12, "text": " be yes pre rendered okay. Exactly right but before init even happens Elm pages is going to resolve", "tokens": [50364, 5498, 3157, 337, 300, 3028, 457, 309, 775, 406, 818, 5623, 370, 309, 6125, 433, 264, 5883, 294, 444, 3944, 50728, 50728, 3037, 295, 604, 2212, 3028, 13, 400, 300, 311, 689, 321, 603, 312, 28748, 294, 420, 2279, 281, 300, 17995, 3991, 300, 486, 51076, 51076, 312, 2086, 659, 28748, 1392, 13, 7587, 558, 457, 949, 3157, 754, 2314, 2699, 76, 7183, 307, 516, 281, 14151, 51438, 51438, 428, 1412, 7139, 370, 264, 1412, 7139, 727, 312, 294, 2699, 76, 7183, 568, 13, 15, 309, 393, 312, 406, 787, 364, 33283, 1412, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.12952433910566508, "compression_ratio": 1.610878661087866, "no_caption_prob": 4.222797542752232e-06}, {"id": 59, "seek": 39364, "start": 415.12, "end": 422.32, "text": " your data sources so the data sources could be in Elm pages 2.0 it can be not only an HTTP data", "tokens": [50364, 5498, 3157, 337, 300, 3028, 457, 309, 775, 406, 818, 5623, 370, 309, 6125, 433, 264, 5883, 294, 444, 3944, 50728, 50728, 3037, 295, 604, 2212, 3028, 13, 400, 300, 311, 689, 321, 603, 312, 28748, 294, 420, 2279, 281, 300, 17995, 3991, 300, 486, 51076, 51076, 312, 2086, 659, 28748, 1392, 13, 7587, 558, 457, 949, 3157, 754, 2314, 2699, 76, 7183, 307, 516, 281, 14151, 51438, 51438, 428, 1412, 7139, 370, 264, 1412, 7139, 727, 312, 294, 2699, 76, 7183, 568, 13, 15, 309, 393, 312, 406, 787, 364, 33283, 1412, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.12952433910566508, "compression_ratio": 1.610878661087866, "no_caption_prob": 4.222797542752232e-06}, {"id": 60, "seek": 42232, "start": 422.32, "end": 430.52, "text": " source so you could do like for example for the listing page for for the Elm radio website it goes", "tokens": [50364, 4009, 370, 291, 727, 360, 411, 337, 1365, 337, 264, 22161, 3028, 337, 337, 264, 2699, 76, 6477, 3144, 309, 1709, 50774, 50774, 293, 15136, 3781, 364, 9362, 5308, 281, 483, 439, 264, 22161, 295, 439, 9313, 293, 550, 337, 1184, 295, 729, 309, 51168, 51168, 1669, 257, 1524, 493, 33283, 5308, 370, 291, 393, 360, 1412, 4009, 5893, 293, 550, 293, 291, 393, 360, 1524, 493, 1412, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.07221176889207628, "compression_ratio": 1.75, "no_caption_prob": 2.8409169317455962e-05}, {"id": 61, "seek": 42232, "start": 430.52, "end": 438.4, "text": " and fetches an API request to get all the listing of all episodes and then for each of those it", "tokens": [50364, 4009, 370, 291, 727, 360, 411, 337, 1365, 337, 264, 22161, 3028, 337, 337, 264, 2699, 76, 6477, 3144, 309, 1709, 50774, 50774, 293, 15136, 3781, 364, 9362, 5308, 281, 483, 439, 264, 22161, 295, 439, 9313, 293, 550, 337, 1184, 295, 729, 309, 51168, 51168, 1669, 257, 1524, 493, 33283, 5308, 370, 291, 393, 360, 1412, 4009, 5893, 293, 550, 293, 291, 393, 360, 1524, 493, 1412, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.07221176889207628, "compression_ratio": 1.75, "no_caption_prob": 2.8409169317455962e-05}, {"id": 62, "seek": 42232, "start": 438.4, "end": 446.6, "text": " makes a follow up HTTP request so you can do data source dot and then and you can do follow up data", "tokens": [50364, 4009, 370, 291, 727, 360, 411, 337, 1365, 337, 264, 22161, 3028, 337, 337, 264, 2699, 76, 6477, 3144, 309, 1709, 50774, 50774, 293, 15136, 3781, 364, 9362, 5308, 281, 483, 439, 264, 22161, 295, 439, 9313, 293, 550, 337, 1184, 295, 729, 309, 51168, 51168, 1669, 257, 1524, 493, 33283, 5308, 370, 291, 393, 360, 1412, 4009, 5893, 293, 550, 293, 291, 393, 360, 1524, 493, 1412, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.07221176889207628, "compression_ratio": 1.75, "no_caption_prob": 2.8409169317455962e-05}, {"id": 63, "seek": 44660, "start": 446.6, "end": 453.56, "text": " source requests from that initial data that you got so it opens up all sorts of possibilities and", "tokens": [50364, 4009, 12475, 490, 300, 5883, 1412, 300, 291, 658, 370, 309, 9870, 493, 439, 7527, 295, 12178, 293, 50712, 50712, 300, 300, 486, 312, 20772, 538, 264, 2699, 76, 7183, 3663, 949, 3157, 307, 1219, 293, 428, 3028, 307, 51012, 51012, 659, 28748, 412, 428, 1322, 1823, 420, 294, 264, 1905, 7154, 13, 407, 439, 295, 264, 1412, 307, 23673, 292, 293, 550, 51248, 51248, 36398, 6063, 666, 472, 955, 7410, 1412, 3877, 420, 3866, 286, 500, 380, 458, 1939, 321, 603, 352, 666, 300, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.09756164336472414, "compression_ratio": 1.6608695652173913, "no_caption_prob": 4.400047691888176e-05}, {"id": 64, "seek": 44660, "start": 453.56, "end": 459.56, "text": " that that will be resolved by the Elm pages platform before init is called and your page is", "tokens": [50364, 4009, 12475, 490, 300, 5883, 1412, 300, 291, 658, 370, 309, 9870, 493, 439, 7527, 295, 12178, 293, 50712, 50712, 300, 300, 486, 312, 20772, 538, 264, 2699, 76, 7183, 3663, 949, 3157, 307, 1219, 293, 428, 3028, 307, 51012, 51012, 659, 28748, 412, 428, 1322, 1823, 420, 294, 264, 1905, 7154, 13, 407, 439, 295, 264, 1412, 307, 23673, 292, 293, 550, 51248, 51248, 36398, 6063, 666, 472, 955, 7410, 1412, 3877, 420, 3866, 286, 500, 380, 458, 1939, 321, 603, 352, 666, 300, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.09756164336472414, "compression_ratio": 1.6608695652173913, "no_caption_prob": 4.400047691888176e-05}, {"id": 65, "seek": 44660, "start": 459.56, "end": 464.28000000000003, "text": " pre rendered at your build step or in the dev server. So all of the data is fetched and then", "tokens": [50364, 4009, 12475, 490, 300, 5883, 1412, 300, 291, 658, 370, 309, 9870, 493, 439, 7527, 295, 12178, 293, 50712, 50712, 300, 300, 486, 312, 20772, 538, 264, 2699, 76, 7183, 3663, 949, 3157, 307, 1219, 293, 428, 3028, 307, 51012, 51012, 659, 28748, 412, 428, 1322, 1823, 420, 294, 264, 1905, 7154, 13, 407, 439, 295, 264, 1412, 307, 23673, 292, 293, 550, 51248, 51248, 36398, 6063, 666, 472, 955, 7410, 1412, 3877, 420, 3866, 286, 500, 380, 458, 1939, 321, 603, 352, 666, 300, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.09756164336472414, "compression_ratio": 1.6608695652173913, "no_caption_prob": 4.400047691888176e-05}, {"id": 66, "seek": 44660, "start": 464.28000000000003, "end": 470.48, "text": " condensed somehow into one big giant data structure or multiple I don't know yet we'll go into that", "tokens": [50364, 4009, 12475, 490, 300, 5883, 1412, 300, 291, 658, 370, 309, 9870, 493, 439, 7527, 295, 12178, 293, 50712, 50712, 300, 300, 486, 312, 20772, 538, 264, 2699, 76, 7183, 3663, 949, 3157, 307, 1219, 293, 428, 3028, 307, 51012, 51012, 659, 28748, 412, 428, 1322, 1823, 420, 294, 264, 1905, 7154, 13, 407, 439, 295, 264, 1412, 307, 23673, 292, 293, 550, 51248, 51248, 36398, 6063, 666, 472, 955, 7410, 1412, 3877, 420, 3866, 286, 500, 380, 458, 1939, 321, 603, 352, 666, 300, 51558, 51558], "temperature": 0.0, "avg_logprob": -0.09756164336472414, "compression_ratio": 1.6608695652173913, "no_caption_prob": 4.400047691888176e-05}, {"id": 67, "seek": 47048, "start": 470.48, "end": 478.28000000000003, "text": " later and that will be potentially available to the pages init function. That's right you can pull", "tokens": [50364, 1780, 293, 300, 486, 312, 7263, 2435, 281, 264, 7183, 3157, 2445, 13, 663, 311, 558, 291, 393, 2235, 50754, 50754, 309, 294, 291, 393, 764, 309, 294, 3157, 5623, 293, 291, 611, 362, 300, 1412, 294, 428, 1910, 382, 731, 382, 294, 428, 294, 51092, 51092, 428, 1378, 2445, 597, 307, 689, 291, 393, 733, 295, 829, 428, 22964, 19616, 18632, 281, 584, 264, 5794, 2920, 51368, 51368, 14281, 82, 420, 31828, 33936, 18519, 1412, 291, 458, 291, 393, 2235, 294, 439, 7527, 295, 26603, 457, 291, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08012543442428753, "compression_ratio": 1.703056768558952, "no_caption_prob": 5.4758780606789514e-05}, {"id": 68, "seek": 47048, "start": 478.28000000000003, "end": 485.04, "text": " it in you can use it in init update and you also have that data in your view as well as in your in", "tokens": [50364, 1780, 293, 300, 486, 312, 7263, 2435, 281, 264, 7183, 3157, 2445, 13, 663, 311, 558, 291, 393, 2235, 50754, 50754, 309, 294, 291, 393, 764, 309, 294, 3157, 5623, 293, 291, 611, 362, 300, 1412, 294, 428, 1910, 382, 731, 382, 294, 428, 294, 51092, 51092, 428, 1378, 2445, 597, 307, 689, 291, 393, 733, 295, 829, 428, 22964, 19616, 18632, 281, 584, 264, 5794, 2920, 51368, 51368, 14281, 82, 420, 31828, 33936, 18519, 1412, 291, 458, 291, 393, 2235, 294, 439, 7527, 295, 26603, 457, 291, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08012543442428753, "compression_ratio": 1.703056768558952, "no_caption_prob": 5.4758780606789514e-05}, {"id": 69, "seek": 47048, "start": 485.04, "end": 490.56, "text": " your head function which is where you can kind of put your SEO meta tags to say the Twitter card", "tokens": [50364, 1780, 293, 300, 486, 312, 7263, 2435, 281, 264, 7183, 3157, 2445, 13, 663, 311, 558, 291, 393, 2235, 50754, 50754, 309, 294, 291, 393, 764, 309, 294, 3157, 5623, 293, 291, 611, 362, 300, 1412, 294, 428, 1910, 382, 731, 382, 294, 428, 294, 51092, 51092, 428, 1378, 2445, 597, 307, 689, 291, 393, 733, 295, 829, 428, 22964, 19616, 18632, 281, 584, 264, 5794, 2920, 51368, 51368, 14281, 82, 420, 31828, 33936, 18519, 1412, 291, 458, 291, 393, 2235, 294, 439, 7527, 295, 26603, 457, 291, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08012543442428753, "compression_ratio": 1.703056768558952, "no_caption_prob": 5.4758780606789514e-05}, {"id": 70, "seek": 47048, "start": 490.56, "end": 497.72, "text": " previews or JSON LD structured data you know you can pull in all sorts of metadata but you have", "tokens": [50364, 1780, 293, 300, 486, 312, 7263, 2435, 281, 264, 7183, 3157, 2445, 13, 663, 311, 558, 291, 393, 2235, 50754, 50754, 309, 294, 291, 393, 764, 309, 294, 3157, 5623, 293, 291, 611, 362, 300, 1412, 294, 428, 1910, 382, 731, 382, 294, 428, 294, 51092, 51092, 428, 1378, 2445, 597, 307, 689, 291, 393, 733, 295, 829, 428, 22964, 19616, 18632, 281, 584, 264, 5794, 2920, 51368, 51368, 14281, 82, 420, 31828, 33936, 18519, 1412, 291, 458, 291, 393, 2235, 294, 439, 7527, 295, 26603, 457, 291, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.08012543442428753, "compression_ratio": 1.703056768558952, "no_caption_prob": 5.4758780606789514e-05}, {"id": 71, "seek": 49772, "start": 497.72, "end": 503.24, "text": " access to the resolved data sources when you render those. So what is the benefit of having", "tokens": [50364, 2105, 281, 264, 20772, 1412, 7139, 562, 291, 15529, 729, 13, 407, 437, 307, 264, 5121, 295, 1419, 50640, 50640, 300, 1322, 1823, 30, 1779, 370, 472, 295, 452, 472, 295, 452, 2954, 5311, 490, 490, 1419, 411, 257, 659, 51040, 51040, 28748, 2699, 76, 3621, 307, 300, 370, 321, 600, 321, 600, 2825, 466, 264, 1558, 295, 48377, 500, 380, 29562, 257, 688, 597, 51380, 51380, 307, 411, 291, 458, 472, 295, 452, 472, 295, 452, 2954, 733, 295, 1715, 9156, 300, 286, 519, 466, 2049, 293, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10222099138342816, "compression_ratio": 1.740909090909091, "no_caption_prob": 6.962217412365135e-06}, {"id": 72, "seek": 49772, "start": 503.24, "end": 511.24, "text": " that build step? Right so one of my one of my favorite benefits from from having like a pre", "tokens": [50364, 2105, 281, 264, 20772, 1412, 7139, 562, 291, 15529, 729, 13, 407, 437, 307, 264, 5121, 295, 1419, 50640, 50640, 300, 1322, 1823, 30, 1779, 370, 472, 295, 452, 472, 295, 452, 2954, 5311, 490, 490, 1419, 411, 257, 659, 51040, 51040, 28748, 2699, 76, 3621, 307, 300, 370, 321, 600, 321, 600, 2825, 466, 264, 1558, 295, 48377, 500, 380, 29562, 257, 688, 597, 51380, 51380, 307, 411, 291, 458, 472, 295, 452, 472, 295, 452, 2954, 733, 295, 1715, 9156, 300, 286, 519, 466, 2049, 293, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10222099138342816, "compression_ratio": 1.740909090909091, "no_caption_prob": 6.962217412365135e-06}, {"id": 73, "seek": 49772, "start": 511.24, "end": 518.0400000000001, "text": " rendered Elm site is that so we've we've talked about the idea of parse don't validate a lot which", "tokens": [50364, 2105, 281, 264, 20772, 1412, 7139, 562, 291, 15529, 729, 13, 407, 437, 307, 264, 5121, 295, 1419, 50640, 50640, 300, 1322, 1823, 30, 1779, 370, 472, 295, 452, 472, 295, 452, 2954, 5311, 490, 490, 1419, 411, 257, 659, 51040, 51040, 28748, 2699, 76, 3621, 307, 300, 370, 321, 600, 321, 600, 2825, 466, 264, 1558, 295, 48377, 500, 380, 29562, 257, 688, 597, 51380, 51380, 307, 411, 291, 458, 472, 295, 452, 472, 295, 452, 2954, 733, 295, 1715, 9156, 300, 286, 519, 466, 2049, 293, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10222099138342816, "compression_ratio": 1.740909090909091, "no_caption_prob": 6.962217412365135e-06}, {"id": 74, "seek": 49772, "start": 518.0400000000001, "end": 524.2, "text": " is like you know one of my one of my favorite kind of design principles that I think about often and", "tokens": [50364, 2105, 281, 264, 20772, 1412, 7139, 562, 291, 15529, 729, 13, 407, 437, 307, 264, 5121, 295, 1419, 50640, 50640, 300, 1322, 1823, 30, 1779, 370, 472, 295, 452, 472, 295, 452, 2954, 5311, 490, 490, 1419, 411, 257, 659, 51040, 51040, 28748, 2699, 76, 3621, 307, 300, 370, 321, 600, 321, 600, 2825, 466, 264, 1558, 295, 48377, 500, 380, 29562, 257, 688, 597, 51380, 51380, 307, 411, 291, 458, 472, 295, 452, 472, 295, 452, 2954, 733, 295, 1715, 9156, 300, 286, 519, 466, 2049, 293, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.10222099138342816, "compression_ratio": 1.740909090909091, "no_caption_prob": 6.962217412365135e-06}, {"id": 75, "seek": 52420, "start": 524.2, "end": 531.72, "text": " with Elm pages because there's a build step so you can like parse don't validate with a subsection", "tokens": [50364, 365, 2699, 76, 7183, 570, 456, 311, 257, 1322, 1823, 370, 291, 393, 411, 48377, 500, 380, 29562, 365, 257, 1422, 11963, 50740, 50740, 295, 428, 1412, 294, 428, 2699, 76, 724, 291, 393, 48377, 500, 380, 29562, 337, 257, 2316, 337, 257, 3028, 370, 291, 393, 584, 51048, 51048, 4177, 562, 286, 352, 281, 341, 3028, 286, 643, 286, 643, 281, 362, 341, 1412, 457, 498, 746, 311, 2085, 365, 264, 1412, 51436, 51436, 293, 286, 360, 291, 458, 286, 360, 341, 21156, 278, 550, 286, 393, 48377, 309, 666, 746, 300, 727, 7263, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.07696026503437697, "compression_ratio": 1.812206572769953, "no_caption_prob": 1.5689298379584216e-05}, {"id": 76, "seek": 52420, "start": 531.72, "end": 537.88, "text": " of your data in your Elm app you can parse don't validate for a model for a page so you can say", "tokens": [50364, 365, 2699, 76, 7183, 570, 456, 311, 257, 1322, 1823, 370, 291, 393, 411, 48377, 500, 380, 29562, 365, 257, 1422, 11963, 50740, 50740, 295, 428, 1412, 294, 428, 2699, 76, 724, 291, 393, 48377, 500, 380, 29562, 337, 257, 2316, 337, 257, 3028, 370, 291, 393, 584, 51048, 51048, 4177, 562, 286, 352, 281, 341, 3028, 286, 643, 286, 643, 281, 362, 341, 1412, 457, 498, 746, 311, 2085, 365, 264, 1412, 51436, 51436, 293, 286, 360, 291, 458, 286, 360, 341, 21156, 278, 550, 286, 393, 48377, 309, 666, 746, 300, 727, 7263, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.07696026503437697, "compression_ratio": 1.812206572769953, "no_caption_prob": 1.5689298379584216e-05}, {"id": 77, "seek": 52420, "start": 537.88, "end": 545.6400000000001, "text": " hey when I go to this page I need I need to have this data but if something's wrong with the data", "tokens": [50364, 365, 2699, 76, 7183, 570, 456, 311, 257, 1322, 1823, 370, 291, 393, 411, 48377, 500, 380, 29562, 365, 257, 1422, 11963, 50740, 50740, 295, 428, 1412, 294, 428, 2699, 76, 724, 291, 393, 48377, 500, 380, 29562, 337, 257, 2316, 337, 257, 3028, 370, 291, 393, 584, 51048, 51048, 4177, 562, 286, 352, 281, 341, 3028, 286, 643, 286, 643, 281, 362, 341, 1412, 457, 498, 746, 311, 2085, 365, 264, 1412, 51436, 51436, 293, 286, 360, 291, 458, 286, 360, 341, 21156, 278, 550, 286, 393, 48377, 309, 666, 746, 300, 727, 7263, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.07696026503437697, "compression_ratio": 1.812206572769953, "no_caption_prob": 1.5689298379584216e-05}, {"id": 78, "seek": 52420, "start": 545.6400000000001, "end": 550.7, "text": " and I do you know I do this parsing then I can parse it into something that could potentially", "tokens": [50364, 365, 2699, 76, 7183, 570, 456, 311, 257, 1322, 1823, 370, 291, 393, 411, 48377, 500, 380, 29562, 365, 257, 1422, 11963, 50740, 50740, 295, 428, 1412, 294, 428, 2699, 76, 724, 291, 393, 48377, 500, 380, 29562, 337, 257, 2316, 337, 257, 3028, 370, 291, 393, 584, 51048, 51048, 4177, 562, 286, 352, 281, 341, 3028, 286, 643, 286, 643, 281, 362, 341, 1412, 457, 498, 746, 311, 2085, 365, 264, 1412, 51436, 51436, 293, 286, 360, 291, 458, 286, 360, 341, 21156, 278, 550, 286, 393, 48377, 309, 666, 746, 300, 727, 7263, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.07696026503437697, "compression_ratio": 1.812206572769953, "no_caption_prob": 1.5689298379584216e-05}, {"id": 79, "seek": 55070, "start": 550.7, "end": 556.84, "text": " fail right that's sort of what parse means so that's a really powerful pattern but you have", "tokens": [50364, 3061, 558, 300, 311, 1333, 295, 437, 48377, 1355, 370, 300, 311, 257, 534, 4005, 5102, 457, 291, 362, 50671, 50671, 439, 613, 4368, 294, 428, 3861, 291, 853, 281, 1333, 295, 2235, 552, 281, 264, 1192, 370, 291, 500, 380, 362, 50953, 50953, 24734, 7930, 8568, 337, 721, 18227, 293, 1419, 291, 458, 406, 5276, 498, 291, 362, 257, 51251, 51251, 665, 1785, 439, 670, 428, 3089, 13, 407, 300, 311, 562, 291, 434, 767, 884, 300, 9952, 291, 362, 264, 51519, 51519, 1412, 300, 291, 643, 293, 291, 500, 380, 643, 281, 360, 604, 9819, 278, 3602, 13, 7587, 457, 291, 360, 643, 281, 51753, 51753], "temperature": 0.0, "avg_logprob": -0.06910825209184127, "compression_ratio": 1.8452380952380953, "no_caption_prob": 2.8573035706358496e-06}, {"id": 80, "seek": 55070, "start": 556.84, "end": 562.48, "text": " all these states in your application you try to sort of pull them to the top so you don't have", "tokens": [50364, 3061, 558, 300, 311, 1333, 295, 437, 48377, 1355, 370, 300, 311, 257, 534, 4005, 5102, 457, 291, 362, 50671, 50671, 439, 613, 4368, 294, 428, 3861, 291, 853, 281, 1333, 295, 2235, 552, 281, 264, 1192, 370, 291, 500, 380, 362, 50953, 50953, 24734, 7930, 8568, 337, 721, 18227, 293, 1419, 291, 458, 406, 5276, 498, 291, 362, 257, 51251, 51251, 665, 1785, 439, 670, 428, 3089, 13, 407, 300, 311, 562, 291, 434, 767, 884, 300, 9952, 291, 362, 264, 51519, 51519, 1412, 300, 291, 643, 293, 291, 500, 380, 643, 281, 360, 604, 9819, 278, 3602, 13, 7587, 457, 291, 360, 643, 281, 51753, 51753], "temperature": 0.0, "avg_logprob": -0.06910825209184127, "compression_ratio": 1.8452380952380953, "no_caption_prob": 2.8573035706358496e-06}, {"id": 81, "seek": 55070, "start": 562.48, "end": 568.44, "text": " shotgun surgery checking for things repeatedly and having you know not knowing if you have a", "tokens": [50364, 3061, 558, 300, 311, 1333, 295, 437, 48377, 1355, 370, 300, 311, 257, 534, 4005, 5102, 457, 291, 362, 50671, 50671, 439, 613, 4368, 294, 428, 3861, 291, 853, 281, 1333, 295, 2235, 552, 281, 264, 1192, 370, 291, 500, 380, 362, 50953, 50953, 24734, 7930, 8568, 337, 721, 18227, 293, 1419, 291, 458, 406, 5276, 498, 291, 362, 257, 51251, 51251, 665, 1785, 439, 670, 428, 3089, 13, 407, 300, 311, 562, 291, 434, 767, 884, 300, 9952, 291, 362, 264, 51519, 51519, 1412, 300, 291, 643, 293, 291, 500, 380, 643, 281, 360, 604, 9819, 278, 3602, 13, 7587, 457, 291, 360, 643, 281, 51753, 51753], "temperature": 0.0, "avg_logprob": -0.06910825209184127, "compression_ratio": 1.8452380952380953, "no_caption_prob": 2.8573035706358496e-06}, {"id": 82, "seek": 55070, "start": 568.44, "end": 573.8000000000001, "text": " good state all over your code. So that's when you're actually doing that logic you have the", "tokens": [50364, 3061, 558, 300, 311, 1333, 295, 437, 48377, 1355, 370, 300, 311, 257, 534, 4005, 5102, 457, 291, 362, 50671, 50671, 439, 613, 4368, 294, 428, 3861, 291, 853, 281, 1333, 295, 2235, 552, 281, 264, 1192, 370, 291, 500, 380, 362, 50953, 50953, 24734, 7930, 8568, 337, 721, 18227, 293, 1419, 291, 458, 406, 5276, 498, 291, 362, 257, 51251, 51251, 665, 1785, 439, 670, 428, 3089, 13, 407, 300, 311, 562, 291, 434, 767, 884, 300, 9952, 291, 362, 264, 51519, 51519, 1412, 300, 291, 643, 293, 291, 500, 380, 643, 281, 360, 604, 9819, 278, 3602, 13, 7587, 457, 291, 360, 643, 281, 51753, 51753], "temperature": 0.0, "avg_logprob": -0.06910825209184127, "compression_ratio": 1.8452380952380953, "no_caption_prob": 2.8573035706358496e-06}, {"id": 83, "seek": 55070, "start": 573.8000000000001, "end": 578.48, "text": " data that you need and you don't need to do any branching anymore. Exactly but you do need to", "tokens": [50364, 3061, 558, 300, 311, 1333, 295, 437, 48377, 1355, 370, 300, 311, 257, 534, 4005, 5102, 457, 291, 362, 50671, 50671, 439, 613, 4368, 294, 428, 3861, 291, 853, 281, 1333, 295, 2235, 552, 281, 264, 1192, 370, 291, 500, 380, 362, 50953, 50953, 24734, 7930, 8568, 337, 721, 18227, 293, 1419, 291, 458, 406, 5276, 498, 291, 362, 257, 51251, 51251, 665, 1785, 439, 670, 428, 3089, 13, 407, 300, 311, 562, 291, 434, 767, 884, 300, 9952, 291, 362, 264, 51519, 51519, 1412, 300, 291, 643, 293, 291, 500, 380, 643, 281, 360, 604, 9819, 278, 3602, 13, 7587, 457, 291, 360, 643, 281, 51753, 51753], "temperature": 0.0, "avg_logprob": -0.06910825209184127, "compression_ratio": 1.8452380952380953, "no_caption_prob": 2.8573035706358496e-06}, {"id": 84, "seek": 57848, "start": 578.48, "end": 586.0, "text": " branch at least at the top level because you can't guarantee that things will be in a good state so", "tokens": [50364, 9819, 412, 1935, 412, 264, 1192, 1496, 570, 291, 393, 380, 10815, 300, 721, 486, 312, 294, 257, 665, 1785, 370, 50740, 50740, 291, 643, 281, 1520, 309, 412, 512, 935, 412, 34474, 457, 562, 291, 362, 257, 1322, 1823, 291, 393, 767, 48377, 51072, 51072, 500, 380, 29562, 293, 1261, 300, 729, 732, 10218, 295, 264, 2245, 2837, 293, 264, 3061, 2837, 291, 393, 1261, 51412, 51412, 264, 3061, 2837, 666, 257, 1322, 7763, 370, 291, 393, 48377, 309, 666, 2139, 257, 1322, 7763, 597, 486, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.06068502153669085, "compression_ratio": 1.8894230769230769, "no_caption_prob": 6.962211045902222e-06}, {"id": 85, "seek": 57848, "start": 586.0, "end": 592.64, "text": " you need to check it at some point at runtime but when you have a build step you can actually parse", "tokens": [50364, 9819, 412, 1935, 412, 264, 1192, 1496, 570, 291, 393, 380, 10815, 300, 721, 486, 312, 294, 257, 665, 1785, 370, 50740, 50740, 291, 643, 281, 1520, 309, 412, 512, 935, 412, 34474, 457, 562, 291, 362, 257, 1322, 1823, 291, 393, 767, 48377, 51072, 51072, 500, 380, 29562, 293, 1261, 300, 729, 732, 10218, 295, 264, 2245, 2837, 293, 264, 3061, 2837, 291, 393, 1261, 51412, 51412, 264, 3061, 2837, 666, 257, 1322, 7763, 370, 291, 393, 48377, 309, 666, 2139, 257, 1322, 7763, 597, 486, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.06068502153669085, "compression_ratio": 1.8894230769230769, "no_caption_prob": 6.962211045902222e-06}, {"id": 86, "seek": 57848, "start": 592.64, "end": 599.44, "text": " don't validate and turn that those two tracks of the success track and the fail track you can turn", "tokens": [50364, 9819, 412, 1935, 412, 264, 1192, 1496, 570, 291, 393, 380, 10815, 300, 721, 486, 312, 294, 257, 665, 1785, 370, 50740, 50740, 291, 643, 281, 1520, 309, 412, 512, 935, 412, 34474, 457, 562, 291, 362, 257, 1322, 1823, 291, 393, 767, 48377, 51072, 51072, 500, 380, 29562, 293, 1261, 300, 729, 732, 10218, 295, 264, 2245, 2837, 293, 264, 3061, 2837, 291, 393, 1261, 51412, 51412, 264, 3061, 2837, 666, 257, 1322, 7763, 370, 291, 393, 48377, 309, 666, 2139, 257, 1322, 7763, 597, 486, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.06068502153669085, "compression_ratio": 1.8894230769230769, "no_caption_prob": 6.962211045902222e-06}, {"id": 87, "seek": 57848, "start": 599.44, "end": 606.4, "text": " the fail track into a build failure so you can parse it into either a build failure which will", "tokens": [50364, 9819, 412, 1935, 412, 264, 1192, 1496, 570, 291, 393, 380, 10815, 300, 721, 486, 312, 294, 257, 665, 1785, 370, 50740, 50740, 291, 643, 281, 1520, 309, 412, 512, 935, 412, 34474, 457, 562, 291, 362, 257, 1322, 1823, 291, 393, 767, 48377, 51072, 51072, 500, 380, 29562, 293, 1261, 300, 729, 732, 10218, 295, 264, 2245, 2837, 293, 264, 3061, 2837, 291, 393, 1261, 51412, 51412, 264, 3061, 2837, 666, 257, 1322, 7763, 370, 291, 393, 48377, 309, 666, 2139, 257, 1322, 7763, 597, 486, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.06068502153669085, "compression_ratio": 1.8894230769230769, "no_caption_prob": 6.962211045902222e-06}, {"id": 88, "seek": 60640, "start": 606.4, "end": 611.72, "text": " give you an a nice error message when you run Elm pages build or if you're in the Elm pages dev", "tokens": [50364, 976, 291, 364, 257, 1481, 6713, 3636, 562, 291, 1190, 2699, 76, 7183, 1322, 420, 498, 291, 434, 294, 264, 2699, 76, 7183, 1905, 50630, 50630, 7154, 562, 291, 434, 322, 300, 3028, 309, 603, 754, 2368, 25628, 382, 291, 1319, 428, 3089, 293, 382, 291, 1319, 50902, 50902, 291, 458, 7098, 300, 309, 1062, 5672, 322, 411, 1491, 5093, 7098, 300, 309, 1062, 5672, 322, 309, 486, 51239, 51239, 980, 291, 300, 456, 311, 257, 1154, 370, 337, 309, 411, 718, 311, 747, 364, 1365, 370, 321, 2378, 380, 2835, 1939, 51448, 51448, 457, 1412, 7139, 393, 294, 2699, 76, 7183, 568, 13, 15, 393, 4090, 257, 3991, 1412, 4009, 370, 291, 727, 1401, 411, 257, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.07826157246739411, "compression_ratio": 1.8622047244094488, "no_caption_prob": 3.4267934097442776e-05}, {"id": 89, "seek": 60640, "start": 611.72, "end": 617.16, "text": " server when you're on that page it'll even hot reload as you change your code and as you change", "tokens": [50364, 976, 291, 364, 257, 1481, 6713, 3636, 562, 291, 1190, 2699, 76, 7183, 1322, 420, 498, 291, 434, 294, 264, 2699, 76, 7183, 1905, 50630, 50630, 7154, 562, 291, 434, 322, 300, 3028, 309, 603, 754, 2368, 25628, 382, 291, 1319, 428, 3089, 293, 382, 291, 1319, 50902, 50902, 291, 458, 7098, 300, 309, 1062, 5672, 322, 411, 1491, 5093, 7098, 300, 309, 1062, 5672, 322, 309, 486, 51239, 51239, 980, 291, 300, 456, 311, 257, 1154, 370, 337, 309, 411, 718, 311, 747, 364, 1365, 370, 321, 2378, 380, 2835, 1939, 51448, 51448, 457, 1412, 7139, 393, 294, 2699, 76, 7183, 568, 13, 15, 393, 4090, 257, 3991, 1412, 4009, 370, 291, 727, 1401, 411, 257, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.07826157246739411, "compression_ratio": 1.8622047244094488, "no_caption_prob": 3.4267934097442776e-05}, {"id": 90, "seek": 60640, "start": 617.16, "end": 623.9, "text": " you know files that it might depend on like markdown files that it might depend on it will", "tokens": [50364, 976, 291, 364, 257, 1481, 6713, 3636, 562, 291, 1190, 2699, 76, 7183, 1322, 420, 498, 291, 434, 294, 264, 2699, 76, 7183, 1905, 50630, 50630, 7154, 562, 291, 434, 322, 300, 3028, 309, 603, 754, 2368, 25628, 382, 291, 1319, 428, 3089, 293, 382, 291, 1319, 50902, 50902, 291, 458, 7098, 300, 309, 1062, 5672, 322, 411, 1491, 5093, 7098, 300, 309, 1062, 5672, 322, 309, 486, 51239, 51239, 980, 291, 300, 456, 311, 257, 1154, 370, 337, 309, 411, 718, 311, 747, 364, 1365, 370, 321, 2378, 380, 2835, 1939, 51448, 51448, 457, 1412, 7139, 393, 294, 2699, 76, 7183, 568, 13, 15, 393, 4090, 257, 3991, 1412, 4009, 370, 291, 727, 1401, 411, 257, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.07826157246739411, "compression_ratio": 1.8622047244094488, "no_caption_prob": 3.4267934097442776e-05}, {"id": 91, "seek": 60640, "start": 623.9, "end": 628.0799999999999, "text": " tell you that there's a problem so for it like let's take an example so we haven't mentioned yet", "tokens": [50364, 976, 291, 364, 257, 1481, 6713, 3636, 562, 291, 1190, 2699, 76, 7183, 1322, 420, 498, 291, 434, 294, 264, 2699, 76, 7183, 1905, 50630, 50630, 7154, 562, 291, 434, 322, 300, 3028, 309, 603, 754, 2368, 25628, 382, 291, 1319, 428, 3089, 293, 382, 291, 1319, 50902, 50902, 291, 458, 7098, 300, 309, 1062, 5672, 322, 411, 1491, 5093, 7098, 300, 309, 1062, 5672, 322, 309, 486, 51239, 51239, 980, 291, 300, 456, 311, 257, 1154, 370, 337, 309, 411, 718, 311, 747, 364, 1365, 370, 321, 2378, 380, 2835, 1939, 51448, 51448, 457, 1412, 7139, 393, 294, 2699, 76, 7183, 568, 13, 15, 393, 4090, 257, 3991, 1412, 4009, 370, 291, 727, 1401, 411, 257, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.07826157246739411, "compression_ratio": 1.8622047244094488, "no_caption_prob": 3.4267934097442776e-05}, {"id": 92, "seek": 60640, "start": 628.0799999999999, "end": 634.8, "text": " but data sources can in Elm pages 2.0 can include a file data source so you could read like a", "tokens": [50364, 976, 291, 364, 257, 1481, 6713, 3636, 562, 291, 1190, 2699, 76, 7183, 1322, 420, 498, 291, 434, 294, 264, 2699, 76, 7183, 1905, 50630, 50630, 7154, 562, 291, 434, 322, 300, 3028, 309, 603, 754, 2368, 25628, 382, 291, 1319, 428, 3089, 293, 382, 291, 1319, 50902, 50902, 291, 458, 7098, 300, 309, 1062, 5672, 322, 411, 1491, 5093, 7098, 300, 309, 1062, 5672, 322, 309, 486, 51239, 51239, 980, 291, 300, 456, 311, 257, 1154, 370, 337, 309, 411, 718, 311, 747, 364, 1365, 370, 321, 2378, 380, 2835, 1939, 51448, 51448, 457, 1412, 7139, 393, 294, 2699, 76, 7183, 568, 13, 15, 393, 4090, 257, 3991, 1412, 4009, 370, 291, 727, 1401, 411, 257, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.07826157246739411, "compression_ratio": 1.8622047244094488, "no_caption_prob": 3.4267934097442776e-05}, {"id": 93, "seek": 63480, "start": 634.8, "end": 640.88, "text": " markdown file so if you wanted to ensure that you have a title you know you could you could", "tokens": [50364, 1491, 5093, 3991, 370, 498, 291, 1415, 281, 5586, 300, 291, 362, 257, 4876, 291, 458, 291, 727, 291, 727, 50668, 50668, 2139, 8947, 264, 4876, 538, 21156, 278, 264, 1491, 5093, 293, 8568, 300, 309, 575, 364, 276, 16, 6162, 420, 291, 727, 51008, 51008, 483, 264, 4876, 490, 411, 1868, 1871, 411, 257, 707, 288, 335, 75, 551, 1296, 264, 15508, 8240, 279, 51336, 51336, 300, 311, 1219, 1868, 1871, 412, 264, 1192, 295, 1491, 5093, 7098, 370, 291, 393, 291, 393, 2105, 729, 1228, 1228, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.0749936466631682, "compression_ratio": 1.8706467661691542, "no_caption_prob": 1.805799729481805e-05}, {"id": 94, "seek": 63480, "start": 640.88, "end": 647.68, "text": " either extract the title by parsing the markdown and checking that it has an h1 tag or you could", "tokens": [50364, 1491, 5093, 3991, 370, 498, 291, 1415, 281, 5586, 300, 291, 362, 257, 4876, 291, 458, 291, 727, 291, 727, 50668, 50668, 2139, 8947, 264, 4876, 538, 21156, 278, 264, 1491, 5093, 293, 8568, 300, 309, 575, 364, 276, 16, 6162, 420, 291, 727, 51008, 51008, 483, 264, 4876, 490, 411, 1868, 1871, 411, 257, 707, 288, 335, 75, 551, 1296, 264, 15508, 8240, 279, 51336, 51336, 300, 311, 1219, 1868, 1871, 412, 264, 1192, 295, 1491, 5093, 7098, 370, 291, 393, 291, 393, 2105, 729, 1228, 1228, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.0749936466631682, "compression_ratio": 1.8706467661691542, "no_caption_prob": 1.805799729481805e-05}, {"id": 95, "seek": 63480, "start": 647.68, "end": 654.24, "text": " get the title from like front matter like a little yaml thing between the triple dashes", "tokens": [50364, 1491, 5093, 3991, 370, 498, 291, 1415, 281, 5586, 300, 291, 362, 257, 4876, 291, 458, 291, 727, 291, 727, 50668, 50668, 2139, 8947, 264, 4876, 538, 21156, 278, 264, 1491, 5093, 293, 8568, 300, 309, 575, 364, 276, 16, 6162, 420, 291, 727, 51008, 51008, 483, 264, 4876, 490, 411, 1868, 1871, 411, 257, 707, 288, 335, 75, 551, 1296, 264, 15508, 8240, 279, 51336, 51336, 300, 311, 1219, 1868, 1871, 412, 264, 1192, 295, 1491, 5093, 7098, 370, 291, 393, 291, 393, 2105, 729, 1228, 1228, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.0749936466631682, "compression_ratio": 1.8706467661691542, "no_caption_prob": 1.805799729481805e-05}, {"id": 96, "seek": 63480, "start": 654.24, "end": 660.5999999999999, "text": " that's called front matter at the top of markdown files so you can you can access those using using", "tokens": [50364, 1491, 5093, 3991, 370, 498, 291, 1415, 281, 5586, 300, 291, 362, 257, 4876, 291, 458, 291, 727, 291, 727, 50668, 50668, 2139, 8947, 264, 4876, 538, 21156, 278, 264, 1491, 5093, 293, 8568, 300, 309, 575, 364, 276, 16, 6162, 420, 291, 727, 51008, 51008, 483, 264, 4876, 490, 411, 1868, 1871, 411, 257, 707, 288, 335, 75, 551, 1296, 264, 15508, 8240, 279, 51336, 51336, 300, 311, 1219, 1868, 1871, 412, 264, 1192, 295, 1491, 5093, 7098, 370, 291, 393, 291, 393, 2105, 729, 1228, 1228, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.0749936466631682, "compression_ratio": 1.8706467661691542, "no_caption_prob": 1.805799729481805e-05}, {"id": 97, "seek": 66060, "start": 660.6, "end": 669.12, "text": " the data source dot file module in Elm pages 2.0 and you can fail if so so you can do data source", "tokens": [50364, 264, 1412, 4009, 5893, 3991, 10088, 294, 2699, 76, 7183, 568, 13, 15, 293, 291, 393, 3061, 498, 370, 370, 291, 393, 360, 1412, 4009, 50790, 50790, 5893, 3061, 420, 291, 393, 1320, 294, 257, 979, 19866, 281, 341, 341, 1868, 1871, 1412, 4009, 293, 498, 264, 979, 19866, 51184, 51184, 18199, 420, 498, 291, 645, 281, 818, 1412, 4009, 5893, 3061, 420, 979, 1429, 5893, 3061, 420, 2035, 412, 604, 935, 300, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.0720130747014826, "compression_ratio": 1.8774193548387097, "no_caption_prob": 4.22279617851018e-06}, {"id": 98, "seek": 66060, "start": 669.12, "end": 677.0, "text": " dot fail or you can pass in a decoder to this this front matter data source and if the decoder", "tokens": [50364, 264, 1412, 4009, 5893, 3991, 10088, 294, 2699, 76, 7183, 568, 13, 15, 293, 291, 393, 3061, 498, 370, 370, 291, 393, 360, 1412, 4009, 50790, 50790, 5893, 3061, 420, 291, 393, 1320, 294, 257, 979, 19866, 281, 341, 341, 1868, 1871, 1412, 4009, 293, 498, 264, 979, 19866, 51184, 51184, 18199, 420, 498, 291, 645, 281, 818, 1412, 4009, 5893, 3061, 420, 979, 1429, 5893, 3061, 420, 2035, 412, 604, 935, 300, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.0720130747014826, "compression_ratio": 1.8774193548387097, "no_caption_prob": 4.22279617851018e-06}, {"id": 99, "seek": 66060, "start": 677.0, "end": 685.0400000000001, "text": " fails or if you were to call data source dot fail or decode dot fail or whatever at any point that", "tokens": [50364, 264, 1412, 4009, 5893, 3991, 10088, 294, 2699, 76, 7183, 568, 13, 15, 293, 291, 393, 3061, 498, 370, 370, 291, 393, 360, 1412, 4009, 50790, 50790, 5893, 3061, 420, 291, 393, 1320, 294, 257, 979, 19866, 281, 341, 341, 1868, 1871, 1412, 4009, 293, 498, 264, 979, 19866, 51184, 51184, 18199, 420, 498, 291, 645, 281, 818, 1412, 4009, 5893, 3061, 420, 979, 1429, 5893, 3061, 420, 2035, 412, 604, 935, 300, 51586, 51586], "temperature": 0.0, "avg_logprob": -0.0720130747014826, "compression_ratio": 1.8774193548387097, "no_caption_prob": 4.22279617851018e-06}, {"id": 100, "seek": 68504, "start": 685.04, "end": 691.3199999999999, "text": " turns into a build failure so you don't have data sources don't give you a result that may have an", "tokens": [50364, 4523, 666, 257, 1322, 7763, 370, 291, 500, 380, 362, 1412, 7139, 500, 380, 976, 291, 257, 1874, 300, 815, 362, 364, 50678, 50678, 6713, 436, 976, 291, 257, 1322, 6713, 293, 291, 1190, 300, 1322, 293, 498, 264, 1322, 20263, 300, 311, 264, 50970, 50970, 1392, 3037, 498, 309, 994, 380, 7754, 300, 311, 264, 6713, 3037, 293, 291, 483, 300, 294, 428, 1905, 7154, 420, 294, 51186, 51186, 428, 1322, 1823, 370, 300, 286, 519, 307, 2603, 570, 291, 458, 321, 959, 32567, 293, 321, 360, 456, 311, 572, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.05488825346294202, "compression_ratio": 1.9073170731707316, "no_caption_prob": 0.0001465160312363878}, {"id": 101, "seek": 68504, "start": 691.3199999999999, "end": 697.16, "text": " error they give you a build error and you run that build and if the build succeeded that's the", "tokens": [50364, 4523, 666, 257, 1322, 7763, 370, 291, 500, 380, 362, 1412, 7139, 500, 380, 976, 291, 257, 1874, 300, 815, 362, 364, 50678, 50678, 6713, 436, 976, 291, 257, 1322, 6713, 293, 291, 1190, 300, 1322, 293, 498, 264, 1322, 20263, 300, 311, 264, 50970, 50970, 1392, 3037, 498, 309, 994, 380, 7754, 300, 311, 264, 6713, 3037, 293, 291, 483, 300, 294, 428, 1905, 7154, 420, 294, 51186, 51186, 428, 1322, 1823, 370, 300, 286, 519, 307, 2603, 570, 291, 458, 321, 959, 32567, 293, 321, 360, 456, 311, 572, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.05488825346294202, "compression_ratio": 1.9073170731707316, "no_caption_prob": 0.0001465160312363878}, {"id": 102, "seek": 68504, "start": 697.16, "end": 701.48, "text": " okay version if it didn't succeed that's the error version and you get that in your dev server or in", "tokens": [50364, 4523, 666, 257, 1322, 7763, 370, 291, 500, 380, 362, 1412, 7139, 500, 380, 976, 291, 257, 1874, 300, 815, 362, 364, 50678, 50678, 6713, 436, 976, 291, 257, 1322, 6713, 293, 291, 1190, 300, 1322, 293, 498, 264, 1322, 20263, 300, 311, 264, 50970, 50970, 1392, 3037, 498, 309, 994, 380, 7754, 300, 311, 264, 6713, 3037, 293, 291, 483, 300, 294, 428, 1905, 7154, 420, 294, 51186, 51186, 428, 1322, 1823, 370, 300, 286, 519, 307, 2603, 570, 291, 458, 321, 959, 32567, 293, 321, 360, 456, 311, 572, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.05488825346294202, "compression_ratio": 1.9073170731707316, "no_caption_prob": 0.0001465160312363878}, {"id": 103, "seek": 68504, "start": 701.48, "end": 708.16, "text": " your build step so that I think is huge because you know we love guarantees and we do there's no", "tokens": [50364, 4523, 666, 257, 1322, 7763, 370, 291, 500, 380, 362, 1412, 7139, 500, 380, 976, 291, 257, 1874, 300, 815, 362, 364, 50678, 50678, 6713, 436, 976, 291, 257, 1322, 6713, 293, 291, 1190, 300, 1322, 293, 498, 264, 1322, 20263, 300, 311, 264, 50970, 50970, 1392, 3037, 498, 309, 994, 380, 7754, 300, 311, 264, 6713, 3037, 293, 291, 483, 300, 294, 428, 1905, 7154, 420, 294, 51186, 51186, 428, 1322, 1823, 370, 300, 286, 519, 307, 2603, 570, 291, 458, 321, 959, 32567, 293, 321, 360, 456, 311, 572, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.05488825346294202, "compression_ratio": 1.9073170731707316, "no_caption_prob": 0.0001465160312363878}, {"id": 104, "seek": 70816, "start": 708.16, "end": 715.4, "text": " way for Elm to guarantee that all your data is valid and that all your HTTP requests succeed and", "tokens": [50364, 636, 337, 2699, 76, 281, 10815, 300, 439, 428, 1412, 307, 7363, 293, 300, 439, 428, 33283, 12475, 7754, 293, 50726, 50726, 300, 264, 7154, 307, 2435, 293, 731, 48249, 293, 2709, 291, 257, 665, 4134, 420, 754, 291, 458, 257, 257, 51032, 51032, 497, 14497, 9362, 815, 2736, 17995, 337, 512, 1778, 293, 291, 500, 380, 458, 1826, 291, 360, 309, 457, 1670, 2699, 76, 7183, 51464, 51464, 575, 257, 1322, 1823, 291, 767, 360, 309, 370, 291, 360, 458, 949, 428, 3621, 1709, 1621, 370, 291, 393, 48377, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.09521991648572556, "compression_ratio": 1.6623376623376624, "no_caption_prob": 3.763510540011339e-05}, {"id": 105, "seek": 70816, "start": 715.4, "end": 721.52, "text": " that the server is available and well behaved and gives you a good response or even you know a a", "tokens": [50364, 636, 337, 2699, 76, 281, 10815, 300, 439, 428, 1412, 307, 7363, 293, 300, 439, 428, 33283, 12475, 7754, 293, 50726, 50726, 300, 264, 7154, 307, 2435, 293, 731, 48249, 293, 2709, 291, 257, 665, 4134, 420, 754, 291, 458, 257, 257, 51032, 51032, 497, 14497, 9362, 815, 2736, 17995, 337, 512, 1778, 293, 291, 500, 380, 458, 1826, 291, 360, 309, 457, 1670, 2699, 76, 7183, 51464, 51464, 575, 257, 1322, 1823, 291, 767, 360, 309, 370, 291, 360, 458, 949, 428, 3621, 1709, 1621, 370, 291, 393, 48377, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.09521991648572556, "compression_ratio": 1.6623376623376624, "no_caption_prob": 3.763510540011339e-05}, {"id": 106, "seek": 70816, "start": 721.52, "end": 730.16, "text": " REST API may return HTML for some reason and you don't know until you do it but since Elm pages", "tokens": [50364, 636, 337, 2699, 76, 281, 10815, 300, 439, 428, 1412, 307, 7363, 293, 300, 439, 428, 33283, 12475, 7754, 293, 50726, 50726, 300, 264, 7154, 307, 2435, 293, 731, 48249, 293, 2709, 291, 257, 665, 4134, 420, 754, 291, 458, 257, 257, 51032, 51032, 497, 14497, 9362, 815, 2736, 17995, 337, 512, 1778, 293, 291, 500, 380, 458, 1826, 291, 360, 309, 457, 1670, 2699, 76, 7183, 51464, 51464, 575, 257, 1322, 1823, 291, 767, 360, 309, 370, 291, 360, 458, 949, 428, 3621, 1709, 1621, 370, 291, 393, 48377, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.09521991648572556, "compression_ratio": 1.6623376623376624, "no_caption_prob": 3.763510540011339e-05}, {"id": 107, "seek": 70816, "start": 730.16, "end": 736.72, "text": " has a build step you actually do it so you do know before your site goes live so you can parse", "tokens": [50364, 636, 337, 2699, 76, 281, 10815, 300, 439, 428, 1412, 307, 7363, 293, 300, 439, 428, 33283, 12475, 7754, 293, 50726, 50726, 300, 264, 7154, 307, 2435, 293, 731, 48249, 293, 2709, 291, 257, 665, 4134, 420, 754, 291, 458, 257, 257, 51032, 51032, 497, 14497, 9362, 815, 2736, 17995, 337, 512, 1778, 293, 291, 500, 380, 458, 1826, 291, 360, 309, 457, 1670, 2699, 76, 7183, 51464, 51464, 575, 257, 1322, 1823, 291, 767, 360, 309, 370, 291, 360, 458, 949, 428, 3621, 1709, 1621, 370, 291, 393, 48377, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.09521991648572556, "compression_ratio": 1.6623376623376624, "no_caption_prob": 3.763510540011339e-05}, {"id": 108, "seek": 73672, "start": 736.72, "end": 742.12, "text": " don't validate at build time not at runtime with some of these bits of data that you pull in during", "tokens": [50364, 500, 380, 29562, 412, 1322, 565, 406, 412, 34474, 365, 512, 295, 613, 9239, 295, 1412, 300, 291, 2235, 294, 1830, 50634, 50634, 264, 1322, 1823, 1338, 370, 365, 264, 1365, 295, 264, 264, 3461, 365, 257, 4876, 293, 3855, 498, 472, 50974, 50974, 1491, 5093, 3991, 1177, 380, 362, 257, 4876, 2086, 291, 486, 483, 257, 1322, 7763, 498, 291, 2293, 498, 291, 600, 51232, 51232, 16436, 300, 472, 576, 312, 4739, 2086, 370, 291, 393, 291, 393, 445, 2464, 428, 1491, 5093, 3991, 498, 309, 51586, 51586, 1177, 380, 362, 257, 4876, 570, 291, 5298, 281, 2464, 472, 291, 362, 257, 1322, 7763, 293, 294, 428, 3089, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.0979151092799364, "compression_ratio": 1.9588477366255144, "no_caption_prob": 2.9311049729585648e-05}, {"id": 109, "seek": 73672, "start": 742.12, "end": 748.9200000000001, "text": " the build step yeah so with the example of the the block with a title and description if one", "tokens": [50364, 500, 380, 29562, 412, 1322, 565, 406, 412, 34474, 365, 512, 295, 613, 9239, 295, 1412, 300, 291, 2235, 294, 1830, 50634, 50634, 264, 1322, 1823, 1338, 370, 365, 264, 1365, 295, 264, 264, 3461, 365, 257, 4876, 293, 3855, 498, 472, 50974, 50974, 1491, 5093, 3991, 1177, 380, 362, 257, 4876, 2086, 291, 486, 483, 257, 1322, 7763, 498, 291, 2293, 498, 291, 600, 51232, 51232, 16436, 300, 472, 576, 312, 4739, 2086, 370, 291, 393, 291, 393, 445, 2464, 428, 1491, 5093, 3991, 498, 309, 51586, 51586, 1177, 380, 362, 257, 4876, 570, 291, 5298, 281, 2464, 472, 291, 362, 257, 1322, 7763, 293, 294, 428, 3089, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.0979151092799364, "compression_ratio": 1.9588477366255144, "no_caption_prob": 2.9311049729585648e-05}, {"id": 110, "seek": 73672, "start": 748.9200000000001, "end": 754.08, "text": " markdown file doesn't have a title yes you will get a build failure if you exactly if you've", "tokens": [50364, 500, 380, 29562, 412, 1322, 565, 406, 412, 34474, 365, 512, 295, 613, 9239, 295, 1412, 300, 291, 2235, 294, 1830, 50634, 50634, 264, 1322, 1823, 1338, 370, 365, 264, 1365, 295, 264, 264, 3461, 365, 257, 4876, 293, 3855, 498, 472, 50974, 50974, 1491, 5093, 3991, 1177, 380, 362, 257, 4876, 2086, 291, 486, 483, 257, 1322, 7763, 498, 291, 2293, 498, 291, 600, 51232, 51232, 16436, 300, 472, 576, 312, 4739, 2086, 370, 291, 393, 291, 393, 445, 2464, 428, 1491, 5093, 3991, 498, 309, 51586, 51586, 1177, 380, 362, 257, 4876, 570, 291, 5298, 281, 2464, 472, 291, 362, 257, 1322, 7763, 293, 294, 428, 3089, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.0979151092799364, "compression_ratio": 1.9588477366255144, "no_caption_prob": 2.9311049729585648e-05}, {"id": 111, "seek": 73672, "start": 754.08, "end": 761.1600000000001, "text": " requested that one would be required yes so you can you can just write your markdown file if it", "tokens": [50364, 500, 380, 29562, 412, 1322, 565, 406, 412, 34474, 365, 512, 295, 613, 9239, 295, 1412, 300, 291, 2235, 294, 1830, 50634, 50634, 264, 1322, 1823, 1338, 370, 365, 264, 1365, 295, 264, 264, 3461, 365, 257, 4876, 293, 3855, 498, 472, 50974, 50974, 1491, 5093, 3991, 1177, 380, 362, 257, 4876, 2086, 291, 486, 483, 257, 1322, 7763, 498, 291, 2293, 498, 291, 600, 51232, 51232, 16436, 300, 472, 576, 312, 4739, 2086, 370, 291, 393, 291, 393, 445, 2464, 428, 1491, 5093, 3991, 498, 309, 51586, 51586, 1177, 380, 362, 257, 4876, 570, 291, 5298, 281, 2464, 472, 291, 362, 257, 1322, 7763, 293, 294, 428, 3089, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.0979151092799364, "compression_ratio": 1.9588477366255144, "no_caption_prob": 2.9311049729585648e-05}, {"id": 112, "seek": 73672, "start": 761.1600000000001, "end": 765.5600000000001, "text": " doesn't have a title because you forgot to write one you have a build failure and in your code", "tokens": [50364, 500, 380, 29562, 412, 1322, 565, 406, 412, 34474, 365, 512, 295, 613, 9239, 295, 1412, 300, 291, 2235, 294, 1830, 50634, 50634, 264, 1322, 1823, 1338, 370, 365, 264, 1365, 295, 264, 264, 3461, 365, 257, 4876, 293, 3855, 498, 472, 50974, 50974, 1491, 5093, 3991, 1177, 380, 362, 257, 4876, 2086, 291, 486, 483, 257, 1322, 7763, 498, 291, 2293, 498, 291, 600, 51232, 51232, 16436, 300, 472, 576, 312, 4739, 2086, 370, 291, 393, 291, 393, 445, 2464, 428, 1491, 5093, 3991, 498, 309, 51586, 51586, 1177, 380, 362, 257, 4876, 570, 291, 5298, 281, 2464, 472, 291, 362, 257, 1322, 7763, 293, 294, 428, 3089, 51806, 51806], "temperature": 0.0, "avg_logprob": -0.0979151092799364, "compression_ratio": 1.9588477366255144, "no_caption_prob": 2.9311049729585648e-05}, {"id": 113, "seek": 76556, "start": 765.56, "end": 771.9599999999999, "text": " which does all the rendering which does all the logic you can just go ahead and say okay I have", "tokens": [50364, 597, 775, 439, 264, 22407, 597, 775, 439, 264, 9952, 291, 393, 445, 352, 2286, 293, 584, 1392, 286, 362, 50684, 50684, 257, 4876, 2293, 293, 5911, 291, 486, 362, 364, 2699, 76, 31958, 6713, 1338, 2293, 370, 291, 483, 264, 50936, 50936, 1481, 5311, 295, 48377, 500, 380, 29562, 6246, 309, 666, 264, 1481, 1412, 2010, 300, 291, 528, 300, 51200, 51200, 8855, 300, 1203, 1437, 731, 457, 291, 500, 380, 754, 362, 281, 3292, 466, 264, 7763, 1389, 293, 341, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.08105844120646633, "compression_ratio": 1.740909090909091, "no_caption_prob": 4.006308154202998e-05}, {"id": 114, "seek": 76556, "start": 771.9599999999999, "end": 777.0, "text": " a title exactly and otherwise you will have an Elm compiler error yeah exactly so you get the", "tokens": [50364, 597, 775, 439, 264, 22407, 597, 775, 439, 264, 9952, 291, 393, 445, 352, 2286, 293, 584, 1392, 286, 362, 50684, 50684, 257, 4876, 2293, 293, 5911, 291, 486, 362, 364, 2699, 76, 31958, 6713, 1338, 2293, 370, 291, 483, 264, 50936, 50936, 1481, 5311, 295, 48377, 500, 380, 29562, 6246, 309, 666, 264, 1481, 1412, 2010, 300, 291, 528, 300, 51200, 51200, 8855, 300, 1203, 1437, 731, 457, 291, 500, 380, 754, 362, 281, 3292, 466, 264, 7763, 1389, 293, 341, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.08105844120646633, "compression_ratio": 1.740909090909091, "no_caption_prob": 4.006308154202998e-05}, {"id": 115, "seek": 76556, "start": 777.0, "end": 782.28, "text": " nice benefits of parse don't validate turning it into the nice data type that you want that", "tokens": [50364, 597, 775, 439, 264, 22407, 597, 775, 439, 264, 9952, 291, 393, 445, 352, 2286, 293, 584, 1392, 286, 362, 50684, 50684, 257, 4876, 2293, 293, 5911, 291, 486, 362, 364, 2699, 76, 31958, 6713, 1338, 2293, 370, 291, 483, 264, 50936, 50936, 1481, 5311, 295, 48377, 500, 380, 29562, 6246, 309, 666, 264, 1481, 1412, 2010, 300, 291, 528, 300, 51200, 51200, 8855, 300, 1203, 1437, 731, 457, 291, 500, 380, 754, 362, 281, 3292, 466, 264, 7763, 1389, 293, 341, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.08105844120646633, "compression_ratio": 1.740909090909091, "no_caption_prob": 4.006308154202998e-05}, {"id": 116, "seek": 76556, "start": 782.28, "end": 787.9599999999999, "text": " represents that everything went well but you don't even have to worry about the failure case and this", "tokens": [50364, 597, 775, 439, 264, 22407, 597, 775, 439, 264, 9952, 291, 393, 445, 352, 2286, 293, 584, 1392, 286, 362, 50684, 50684, 257, 4876, 2293, 293, 5911, 291, 486, 362, 364, 2699, 76, 31958, 6713, 1338, 2293, 370, 291, 483, 264, 50936, 50936, 1481, 5311, 295, 48377, 500, 380, 29562, 6246, 309, 666, 264, 1481, 1412, 2010, 300, 291, 528, 300, 51200, 51200, 8855, 300, 1203, 1437, 731, 457, 291, 500, 380, 754, 362, 281, 3292, 466, 264, 7763, 1389, 293, 341, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.08105844120646633, "compression_ratio": 1.740909090909091, "no_caption_prob": 4.006308154202998e-05}, {"id": 117, "seek": 78796, "start": 787.96, "end": 795.48, "text": " is actually like it's a very nice workflow as well when so like it sort of changed my workflow where", "tokens": [50364, 307, 767, 411, 309, 311, 257, 588, 1481, 20993, 382, 731, 562, 370, 411, 309, 1333, 295, 3105, 452, 20993, 689, 50740, 50740, 498, 286, 5672, 322, 512, 9362, 1412, 291, 458, 411, 498, 498, 286, 478, 8407, 294, 257, 22161, 295, 4754, 490, 411, 257, 51116, 51116, 2701, 4592, 1185, 33124, 420, 291, 458, 2035, 309, 815, 312, 452, 1399, 575, 3105, 689, 286, 603, 722, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.0472769535763163, "compression_ratio": 1.5578947368421052, "no_caption_prob": 2.5070452466025017e-05}, {"id": 118, "seek": 78796, "start": 795.48, "end": 803.0, "text": " if I depend on some API data you know like if if I'm pulling in a listing of items from like a", "tokens": [50364, 307, 767, 411, 309, 311, 257, 588, 1481, 20993, 382, 731, 562, 370, 411, 309, 1333, 295, 3105, 452, 20993, 689, 50740, 50740, 498, 286, 5672, 322, 512, 9362, 1412, 291, 458, 411, 498, 498, 286, 478, 8407, 294, 257, 22161, 295, 4754, 490, 411, 257, 51116, 51116, 2701, 4592, 1185, 33124, 420, 291, 458, 2035, 309, 815, 312, 452, 1399, 575, 3105, 689, 286, 603, 722, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.0472769535763163, "compression_ratio": 1.5578947368421052, "no_caption_prob": 2.5070452466025017e-05}, {"id": 119, "seek": 78796, "start": 803.0, "end": 809.6800000000001, "text": " content management system CMS or you know whatever it may be my process has changed where I'll start", "tokens": [50364, 307, 767, 411, 309, 311, 257, 588, 1481, 20993, 382, 731, 562, 370, 411, 309, 1333, 295, 3105, 452, 20993, 689, 50740, 50740, 498, 286, 5672, 322, 512, 9362, 1412, 291, 458, 411, 498, 498, 286, 478, 8407, 294, 257, 22161, 295, 4754, 490, 411, 257, 51116, 51116, 2701, 4592, 1185, 33124, 420, 291, 458, 2035, 309, 815, 312, 452, 1399, 575, 3105, 689, 286, 603, 722, 51450, 51450], "temperature": 0.0, "avg_logprob": -0.0472769535763163, "compression_ratio": 1.5578947368421052, "no_caption_prob": 2.5070452466025017e-05}, {"id": 120, "seek": 80968, "start": 809.68, "end": 818.52, "text": " by doing an HTTP data source and then I'll do decode fail and what that's going to do so let's", "tokens": [50364, 538, 884, 364, 33283, 1412, 4009, 293, 550, 286, 603, 360, 979, 1429, 3061, 293, 437, 300, 311, 516, 281, 360, 370, 718, 311, 50806, 50806, 747, 364, 1365, 718, 311, 584, 321, 434, 2390, 257, 6968, 457, 264, 6968, 307, 19204, 365, 257, 365, 257, 2701, 51142, 51142, 4592, 1185, 370, 321, 434, 1228, 364, 9362, 281, 483, 257, 22161, 295, 439, 6968, 12300, 370, 370, 321, 528, 281, 1884, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.06904071807861328, "compression_ratio": 1.580110497237569, "no_caption_prob": 4.539636938716285e-05}, {"id": 121, "seek": 80968, "start": 818.52, "end": 825.2399999999999, "text": " take an example let's say we're building a blog but the blog is hosted with a with a content", "tokens": [50364, 538, 884, 364, 33283, 1412, 4009, 293, 550, 286, 603, 360, 979, 1429, 3061, 293, 437, 300, 311, 516, 281, 360, 370, 718, 311, 50806, 50806, 747, 364, 1365, 718, 311, 584, 321, 434, 2390, 257, 6968, 457, 264, 6968, 307, 19204, 365, 257, 365, 257, 2701, 51142, 51142, 4592, 1185, 370, 321, 434, 1228, 364, 9362, 281, 483, 257, 22161, 295, 439, 6968, 12300, 370, 370, 321, 528, 281, 1884, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.06904071807861328, "compression_ratio": 1.580110497237569, "no_caption_prob": 4.539636938716285e-05}, {"id": 122, "seek": 80968, "start": 825.2399999999999, "end": 832.0799999999999, "text": " management system so we're using an API to get a listing of all blog posts so so we want to create", "tokens": [50364, 538, 884, 364, 33283, 1412, 4009, 293, 550, 286, 603, 360, 979, 1429, 3061, 293, 437, 300, 311, 516, 281, 360, 370, 718, 311, 50806, 50806, 747, 364, 1365, 718, 311, 584, 321, 434, 2390, 257, 6968, 457, 264, 6968, 307, 19204, 365, 257, 365, 257, 2701, 51142, 51142, 4592, 1185, 370, 321, 434, 1228, 364, 9362, 281, 483, 257, 22161, 295, 439, 6968, 12300, 370, 370, 321, 528, 281, 1884, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.06904071807861328, "compression_ratio": 1.580110497237569, "no_caption_prob": 4.539636938716285e-05}, {"id": 123, "seek": 83208, "start": 832.08, "end": 840.5200000000001, "text": " a blog index page so I would start by making the request to that API and then I would just do decode", "tokens": [50364, 257, 6968, 8186, 3028, 370, 286, 576, 722, 538, 1455, 264, 5308, 281, 300, 9362, 293, 550, 286, 576, 445, 360, 979, 1429, 50786, 50786, 5893, 3061, 293, 437, 311, 516, 281, 1051, 550, 307, 562, 291, 434, 1237, 412, 300, 6968, 8186, 3028, 294, 428, 51092, 51092, 11185, 365, 264, 2699, 76, 7183, 1905, 7154, 2614, 309, 311, 309, 311, 516, 281, 980, 291, 4177, 286, 658, 341, 33283, 51420, 51420, 1412, 457, 264, 979, 19866, 7612, 293, 510, 311, 264, 31828, 1412, 498, 291, 519, 466, 437, 291, 576, 362, 281, 360, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703418186732701, "compression_ratio": 1.7017543859649122, "no_caption_prob": 1.3419712558970787e-05}, {"id": 124, "seek": 83208, "start": 840.5200000000001, "end": 846.64, "text": " dot fail and what's going to happen then is when you're looking at that blog index page in your", "tokens": [50364, 257, 6968, 8186, 3028, 370, 286, 576, 722, 538, 1455, 264, 5308, 281, 300, 9362, 293, 550, 286, 576, 445, 360, 979, 1429, 50786, 50786, 5893, 3061, 293, 437, 311, 516, 281, 1051, 550, 307, 562, 291, 434, 1237, 412, 300, 6968, 8186, 3028, 294, 428, 51092, 51092, 11185, 365, 264, 2699, 76, 7183, 1905, 7154, 2614, 309, 311, 309, 311, 516, 281, 980, 291, 4177, 286, 658, 341, 33283, 51420, 51420, 1412, 457, 264, 979, 19866, 7612, 293, 510, 311, 264, 31828, 1412, 498, 291, 519, 466, 437, 291, 576, 362, 281, 360, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703418186732701, "compression_ratio": 1.7017543859649122, "no_caption_prob": 1.3419712558970787e-05}, {"id": 125, "seek": 83208, "start": 846.64, "end": 853.2, "text": " browser with the Elm pages dev server running it's it's going to tell you hey I got this HTTP", "tokens": [50364, 257, 6968, 8186, 3028, 370, 286, 576, 722, 538, 1455, 264, 5308, 281, 300, 9362, 293, 550, 286, 576, 445, 360, 979, 1429, 50786, 50786, 5893, 3061, 293, 437, 311, 516, 281, 1051, 550, 307, 562, 291, 434, 1237, 412, 300, 6968, 8186, 3028, 294, 428, 51092, 51092, 11185, 365, 264, 2699, 76, 7183, 1905, 7154, 2614, 309, 311, 309, 311, 516, 281, 980, 291, 4177, 286, 658, 341, 33283, 51420, 51420, 1412, 457, 264, 979, 19866, 7612, 293, 510, 311, 264, 31828, 1412, 498, 291, 519, 466, 437, 291, 576, 362, 281, 360, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703418186732701, "compression_ratio": 1.7017543859649122, "no_caption_prob": 1.3419712558970787e-05}, {"id": 126, "seek": 83208, "start": 853.2, "end": 860.08, "text": " data but the decoder failed and here's the JSON data if you think about what you would have to do", "tokens": [50364, 257, 6968, 8186, 3028, 370, 286, 576, 722, 538, 1455, 264, 5308, 281, 300, 9362, 293, 550, 286, 576, 445, 360, 979, 1429, 50786, 50786, 5893, 3061, 293, 437, 311, 516, 281, 1051, 550, 307, 562, 291, 434, 1237, 412, 300, 6968, 8186, 3028, 294, 428, 51092, 51092, 11185, 365, 264, 2699, 76, 7183, 1905, 7154, 2614, 309, 311, 309, 311, 516, 281, 980, 291, 4177, 286, 658, 341, 33283, 51420, 51420, 1412, 457, 264, 979, 19866, 7612, 293, 510, 311, 264, 31828, 1412, 498, 291, 519, 466, 437, 291, 576, 362, 281, 360, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09703418186732701, "compression_ratio": 1.7017543859649122, "no_caption_prob": 1.3419712558970787e-05}, {"id": 127, "seek": 86008, "start": 860.08, "end": 866.44, "text": " to get that workflow in a in a vanilla Elm application there are a lot of steps involved", "tokens": [50364, 281, 483, 300, 20993, 294, 257, 294, 257, 17528, 2699, 76, 3861, 456, 366, 257, 688, 295, 4439, 3288, 50682, 50682, 370, 291, 576, 362, 281, 291, 576, 362, 281, 584, 294, 3157, 510, 311, 364, 33283, 5308, 281, 2042, 510, 311, 257, 51100, 51100, 3636, 281, 281, 818, 646, 281, 291, 458, 562, 291, 4774, 264, 33283, 4134, 294, 264, 5623, 2445, 51480, 51480, 291, 362, 257, 25925, 281, 4813, 300, 3636, 291, 362, 746, 294, 428, 2316, 300, 5112, 291, 300, 291, 600, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.09702639633350157, "compression_ratio": 1.7453703703703705, "no_caption_prob": 2.586688606243115e-05}, {"id": 128, "seek": 86008, "start": 866.44, "end": 874.8000000000001, "text": " so you would have to you would have to say in init here's an HTTP request to perform here's a", "tokens": [50364, 281, 483, 300, 20993, 294, 257, 294, 257, 17528, 2699, 76, 3861, 456, 366, 257, 688, 295, 4439, 3288, 50682, 50682, 370, 291, 576, 362, 281, 291, 576, 362, 281, 584, 294, 3157, 510, 311, 364, 33283, 5308, 281, 2042, 510, 311, 257, 51100, 51100, 3636, 281, 281, 818, 646, 281, 291, 458, 562, 291, 4774, 264, 33283, 4134, 294, 264, 5623, 2445, 51480, 51480, 291, 362, 257, 25925, 281, 4813, 300, 3636, 291, 362, 746, 294, 428, 2316, 300, 5112, 291, 300, 291, 600, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.09702639633350157, "compression_ratio": 1.7453703703703705, "no_caption_prob": 2.586688606243115e-05}, {"id": 129, "seek": 86008, "start": 874.8000000000001, "end": 882.4000000000001, "text": " message to to call back to you know when you receive the HTTP response in the update function", "tokens": [50364, 281, 483, 300, 20993, 294, 257, 294, 257, 17528, 2699, 76, 3861, 456, 366, 257, 688, 295, 4439, 3288, 50682, 50682, 370, 291, 576, 362, 281, 291, 576, 362, 281, 584, 294, 3157, 510, 311, 364, 33283, 5308, 281, 2042, 510, 311, 257, 51100, 51100, 3636, 281, 281, 818, 646, 281, 291, 458, 562, 291, 4774, 264, 33283, 4134, 294, 264, 5623, 2445, 51480, 51480, 291, 362, 257, 25925, 281, 4813, 300, 3636, 291, 362, 746, 294, 428, 2316, 300, 5112, 291, 300, 291, 600, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.09702639633350157, "compression_ratio": 1.7453703703703705, "no_caption_prob": 2.586688606243115e-05}, {"id": 130, "seek": 86008, "start": 882.4000000000001, "end": 888.2800000000001, "text": " you have a clause to handle that message you have something in your model that tells you that you've", "tokens": [50364, 281, 483, 300, 20993, 294, 257, 294, 257, 17528, 2699, 76, 3861, 456, 366, 257, 688, 295, 4439, 3288, 50682, 50682, 370, 291, 576, 362, 281, 291, 576, 362, 281, 584, 294, 3157, 510, 311, 364, 33283, 5308, 281, 2042, 510, 311, 257, 51100, 51100, 3636, 281, 281, 818, 646, 281, 291, 458, 562, 291, 4774, 264, 33283, 4134, 294, 264, 5623, 2445, 51480, 51480, 291, 362, 257, 25925, 281, 4813, 300, 3636, 291, 362, 746, 294, 428, 2316, 300, 5112, 291, 300, 291, 600, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.09702639633350157, "compression_ratio": 1.7453703703703705, "no_caption_prob": 2.586688606243115e-05}, {"id": 131, "seek": 88828, "start": 888.28, "end": 894.12, "text": " got that response oh and by the way it's gonna need to you probably want to wrap that with a", "tokens": [50364, 658, 300, 4134, 1954, 293, 538, 264, 636, 309, 311, 799, 643, 281, 291, 1391, 528, 281, 7019, 300, 365, 257, 50656, 50656, 8607, 1412, 2010, 570, 309, 727, 312, 15114, 420, 727, 312, 364, 6713, 293, 550, 731, 291, 434, 799, 643, 51020, 51020, 281, 4813, 439, 295, 729, 819, 15114, 293, 6713, 293, 2245, 4368, 294, 428, 1910, 498, 456, 311, 364, 6713, 51284, 51284, 1785, 291, 434, 799, 362, 281, 1261, 300, 6713, 666, 257, 1481, 4482, 712, 6798, 293, 500, 380, 2870, 281, 411, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.07060966802679974, "compression_ratio": 1.813953488372093, "no_caption_prob": 1.777822762960568e-05}, {"id": 132, "seek": 88828, "start": 894.12, "end": 901.4, "text": " remote data type because it could be loading or could be an error and then well you're gonna need", "tokens": [50364, 658, 300, 4134, 1954, 293, 538, 264, 636, 309, 311, 799, 643, 281, 291, 1391, 528, 281, 7019, 300, 365, 257, 50656, 50656, 8607, 1412, 2010, 570, 309, 727, 312, 15114, 420, 727, 312, 364, 6713, 293, 550, 731, 291, 434, 799, 643, 51020, 51020, 281, 4813, 439, 295, 729, 819, 15114, 293, 6713, 293, 2245, 4368, 294, 428, 1910, 498, 456, 311, 364, 6713, 51284, 51284, 1785, 291, 434, 799, 362, 281, 1261, 300, 6713, 666, 257, 1481, 4482, 712, 6798, 293, 500, 380, 2870, 281, 411, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.07060966802679974, "compression_ratio": 1.813953488372093, "no_caption_prob": 1.777822762960568e-05}, {"id": 133, "seek": 88828, "start": 901.4, "end": 906.68, "text": " to handle all of those different loading and error and success states in your view if there's an error", "tokens": [50364, 658, 300, 4134, 1954, 293, 538, 264, 636, 309, 311, 799, 643, 281, 291, 1391, 528, 281, 7019, 300, 365, 257, 50656, 50656, 8607, 1412, 2010, 570, 309, 727, 312, 15114, 420, 727, 312, 364, 6713, 293, 550, 731, 291, 434, 799, 643, 51020, 51020, 281, 4813, 439, 295, 729, 819, 15114, 293, 6713, 293, 2245, 4368, 294, 428, 1910, 498, 456, 311, 364, 6713, 51284, 51284, 1785, 291, 434, 799, 362, 281, 1261, 300, 6713, 666, 257, 1481, 4482, 712, 6798, 293, 500, 380, 2870, 281, 411, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.07060966802679974, "compression_ratio": 1.813953488372093, "no_caption_prob": 1.777822762960568e-05}, {"id": 134, "seek": 88828, "start": 906.68, "end": 913.24, "text": " state you're gonna have to turn that error into a nice printable string and don't forget to like", "tokens": [50364, 658, 300, 4134, 1954, 293, 538, 264, 636, 309, 311, 799, 643, 281, 291, 1391, 528, 281, 7019, 300, 365, 257, 50656, 50656, 8607, 1412, 2010, 570, 309, 727, 312, 15114, 420, 727, 312, 364, 6713, 293, 550, 731, 291, 434, 799, 643, 51020, 51020, 281, 4813, 439, 295, 729, 819, 15114, 293, 6713, 293, 2245, 4368, 294, 428, 1910, 498, 456, 311, 364, 6713, 51284, 51284, 1785, 291, 434, 799, 362, 281, 1261, 300, 6713, 666, 257, 1481, 4482, 712, 6798, 293, 500, 380, 2870, 281, 411, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.07060966802679974, "compression_ratio": 1.813953488372093, "no_caption_prob": 1.777822762960568e-05}, {"id": 135, "seek": 91324, "start": 913.24, "end": 920.36, "text": " wrap it in a pre tag so you can like debug it in real time and now you can go do that process if", "tokens": [50364, 7019, 309, 294, 257, 659, 6162, 370, 291, 393, 411, 24083, 309, 294, 957, 565, 293, 586, 291, 393, 352, 360, 300, 1399, 498, 50720, 50720, 291, 994, 380, 1713, 604, 4439, 2051, 264, 636, 456, 1858, 520, 5871, 321, 434, 1143, 281, 309, 286, 2041, 457, 309, 311, 257, 688, 295, 51024, 51024, 589, 370, 300, 311, 286, 600, 445, 1813, 24629, 281, 341, 1399, 586, 365, 2699, 76, 7183, 295, 341, 45722, 689, 51348, 51348, 286, 445, 584, 370, 370, 264, 636, 257, 1412, 4009, 307, 27415, 294, 307, 291, 362, 613, 3028, 16679, 370, 291, 576, 362, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08120324061467098, "compression_ratio": 1.6995708154506437, "no_caption_prob": 1.9832954421872273e-05}, {"id": 136, "seek": 91324, "start": 920.36, "end": 926.44, "text": " you didn't miss any steps along the way there easy peasy we're used to it I guess but it's a lot of", "tokens": [50364, 7019, 309, 294, 257, 659, 6162, 370, 291, 393, 411, 24083, 309, 294, 957, 565, 293, 586, 291, 393, 352, 360, 300, 1399, 498, 50720, 50720, 291, 994, 380, 1713, 604, 4439, 2051, 264, 636, 456, 1858, 520, 5871, 321, 434, 1143, 281, 309, 286, 2041, 457, 309, 311, 257, 688, 295, 51024, 51024, 589, 370, 300, 311, 286, 600, 445, 1813, 24629, 281, 341, 1399, 586, 365, 2699, 76, 7183, 295, 341, 45722, 689, 51348, 51348, 286, 445, 584, 370, 370, 264, 636, 257, 1412, 4009, 307, 27415, 294, 307, 291, 362, 613, 3028, 16679, 370, 291, 576, 362, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08120324061467098, "compression_ratio": 1.6995708154506437, "no_caption_prob": 1.9832954421872273e-05}, {"id": 137, "seek": 91324, "start": 926.44, "end": 932.92, "text": " work so that's I've just become addicted to this process now with Elm pages of this lifecycle where", "tokens": [50364, 7019, 309, 294, 257, 659, 6162, 370, 291, 393, 411, 24083, 309, 294, 957, 565, 293, 586, 291, 393, 352, 360, 300, 1399, 498, 50720, 50720, 291, 994, 380, 1713, 604, 4439, 2051, 264, 636, 456, 1858, 520, 5871, 321, 434, 1143, 281, 309, 286, 2041, 457, 309, 311, 257, 688, 295, 51024, 51024, 589, 370, 300, 311, 286, 600, 445, 1813, 24629, 281, 341, 1399, 586, 365, 2699, 76, 7183, 295, 341, 45722, 689, 51348, 51348, 286, 445, 584, 370, 370, 264, 636, 257, 1412, 4009, 307, 27415, 294, 307, 291, 362, 613, 3028, 16679, 370, 291, 576, 362, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08120324061467098, "compression_ratio": 1.6995708154506437, "no_caption_prob": 1.9832954421872273e-05}, {"id": 138, "seek": 91324, "start": 932.92, "end": 938.84, "text": " I just say so so the way a data source is wired in is you have these page modules so you would have", "tokens": [50364, 7019, 309, 294, 257, 659, 6162, 370, 291, 393, 411, 24083, 309, 294, 957, 565, 293, 586, 291, 393, 352, 360, 300, 1399, 498, 50720, 50720, 291, 994, 380, 1713, 604, 4439, 2051, 264, 636, 456, 1858, 520, 5871, 321, 434, 1143, 281, 309, 286, 2041, 457, 309, 311, 257, 688, 295, 51024, 51024, 589, 370, 300, 311, 286, 600, 445, 1813, 24629, 281, 341, 1399, 586, 365, 2699, 76, 7183, 295, 341, 45722, 689, 51348, 51348, 286, 445, 584, 370, 370, 264, 636, 257, 1412, 4009, 307, 27415, 294, 307, 291, 362, 613, 3028, 16679, 370, 291, 576, 362, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.08120324061467098, "compression_ratio": 1.6995708154506437, "no_caption_prob": 1.9832954421872273e-05}, {"id": 139, "seek": 93884, "start": 938.84, "end": 948.84, "text": " something called like source page blog dot elm and that would map to the slash blog route in your app", "tokens": [50364, 746, 1219, 411, 4009, 3028, 6968, 5893, 806, 76, 293, 300, 576, 4471, 281, 264, 17330, 6968, 7955, 294, 428, 724, 50864, 50864, 293, 300, 311, 516, 281, 362, 257, 1192, 1496, 2158, 370, 445, 411, 291, 362, 3157, 5623, 44951, 291, 434, 51164, 51164, 516, 281, 362, 1412, 293, 300, 1412, 307, 445, 516, 281, 312, 257, 1412, 4009, 293, 370, 337, 264, 1412, 4009, 321, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.0672254159416951, "compression_ratio": 1.783132530120482, "no_caption_prob": 1.9832796169794165e-05}, {"id": 140, "seek": 93884, "start": 948.84, "end": 954.84, "text": " and that's going to have a top level value so just like you have init update subscriptions you're", "tokens": [50364, 746, 1219, 411, 4009, 3028, 6968, 5893, 806, 76, 293, 300, 576, 4471, 281, 264, 17330, 6968, 7955, 294, 428, 724, 50864, 50864, 293, 300, 311, 516, 281, 362, 257, 1192, 1496, 2158, 370, 445, 411, 291, 362, 3157, 5623, 44951, 291, 434, 51164, 51164, 516, 281, 362, 1412, 293, 300, 1412, 307, 445, 516, 281, 312, 257, 1412, 4009, 293, 370, 337, 264, 1412, 4009, 321, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.0672254159416951, "compression_ratio": 1.783132530120482, "no_caption_prob": 1.9832796169794165e-05}, {"id": 141, "seek": 93884, "start": 954.84, "end": 961.24, "text": " going to have data and that data is just going to be a data source and so for the data source we", "tokens": [50364, 746, 1219, 411, 4009, 3028, 6968, 5893, 806, 76, 293, 300, 576, 4471, 281, 264, 17330, 6968, 7955, 294, 428, 724, 50864, 50864, 293, 300, 311, 516, 281, 362, 257, 1192, 1496, 2158, 370, 445, 411, 291, 362, 3157, 5623, 44951, 291, 434, 51164, 51164, 516, 281, 362, 1412, 293, 300, 1412, 307, 445, 516, 281, 312, 257, 1412, 4009, 293, 370, 337, 264, 1412, 4009, 321, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.0672254159416951, "compression_ratio": 1.783132530120482, "no_caption_prob": 1.9832796169794165e-05}, {"id": 142, "seek": 96124, "start": 961.24, "end": 969.08, "text": " would do you know data source dot http dot get we'd write our data would be the content the the result", "tokens": [50364, 576, 360, 291, 458, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 321, 1116, 2464, 527, 1412, 576, 312, 264, 2701, 264, 264, 1874, 50756, 50756, 295, 264, 1412, 4009, 1412, 576, 312, 13460, 264, 1412, 4009, 295, 437, 291, 434, 516, 281, 23673, 51060, 51060, 1392, 370, 300, 311, 437, 300, 311, 437, 1412, 307, 293, 550, 294, 428, 1910, 3157, 5623, 498, 291, 362, 729, 291, 393, 51484, 51484, 291, 393, 360, 309, 445, 365, 552, 365, 309, 365, 257, 1910, 291, 500, 380, 643, 364, 5623, 2445, 457, 291, 291, 483, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11026776439011698, "compression_ratio": 1.9264705882352942, "no_caption_prob": 2.3187074475572444e-05}, {"id": 143, "seek": 96124, "start": 969.08, "end": 975.16, "text": " of the data source data would be representing the data source of what you're going to fetch", "tokens": [50364, 576, 360, 291, 458, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 321, 1116, 2464, 527, 1412, 576, 312, 264, 2701, 264, 264, 1874, 50756, 50756, 295, 264, 1412, 4009, 1412, 576, 312, 13460, 264, 1412, 4009, 295, 437, 291, 434, 516, 281, 23673, 51060, 51060, 1392, 370, 300, 311, 437, 300, 311, 437, 1412, 307, 293, 550, 294, 428, 1910, 3157, 5623, 498, 291, 362, 729, 291, 393, 51484, 51484, 291, 393, 360, 309, 445, 365, 552, 365, 309, 365, 257, 1910, 291, 500, 380, 643, 364, 5623, 2445, 457, 291, 291, 483, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11026776439011698, "compression_ratio": 1.9264705882352942, "no_caption_prob": 2.3187074475572444e-05}, {"id": 144, "seek": 96124, "start": 975.16, "end": 983.64, "text": " okay so that's what that's what data is and then in your view init update if you have those you can", "tokens": [50364, 576, 360, 291, 458, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 321, 1116, 2464, 527, 1412, 576, 312, 264, 2701, 264, 264, 1874, 50756, 50756, 295, 264, 1412, 4009, 1412, 576, 312, 13460, 264, 1412, 4009, 295, 437, 291, 434, 516, 281, 23673, 51060, 51060, 1392, 370, 300, 311, 437, 300, 311, 437, 1412, 307, 293, 550, 294, 428, 1910, 3157, 5623, 498, 291, 362, 729, 291, 393, 51484, 51484, 291, 393, 360, 309, 445, 365, 552, 365, 309, 365, 257, 1910, 291, 500, 380, 643, 364, 5623, 2445, 457, 291, 291, 483, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11026776439011698, "compression_ratio": 1.9264705882352942, "no_caption_prob": 2.3187074475572444e-05}, {"id": 145, "seek": 96124, "start": 983.64, "end": 990.12, "text": " you can do it just with them with it with a view you don't need an update function but you you get", "tokens": [50364, 576, 360, 291, 458, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 321, 1116, 2464, 527, 1412, 576, 312, 264, 2701, 264, 264, 1874, 50756, 50756, 295, 264, 1412, 4009, 1412, 576, 312, 13460, 264, 1412, 4009, 295, 437, 291, 434, 516, 281, 23673, 51060, 51060, 1392, 370, 300, 311, 437, 300, 311, 437, 1412, 307, 293, 550, 294, 428, 1910, 3157, 5623, 498, 291, 362, 729, 291, 393, 51484, 51484, 291, 393, 360, 309, 445, 365, 552, 365, 309, 365, 257, 1910, 291, 500, 380, 643, 364, 5623, 2445, 457, 291, 291, 483, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11026776439011698, "compression_ratio": 1.9264705882352942, "no_caption_prob": 2.3187074475572444e-05}, {"id": 146, "seek": 99012, "start": 990.12, "end": 998.04, "text": " that data so whatever type your data is there's a so you're going to have a type alias data often", "tokens": [50364, 300, 1412, 370, 2035, 2010, 428, 1412, 307, 456, 311, 257, 370, 291, 434, 516, 281, 362, 257, 2010, 419, 4609, 1412, 2049, 50760, 50760, 309, 603, 312, 411, 257, 2136, 727, 312, 257, 2375, 2010, 498, 291, 1415, 281, 457, 291, 434, 516, 281, 362, 512, 2010, 51000, 51000, 1219, 1412, 365, 257, 4238, 274, 293, 291, 434, 516, 281, 362, 257, 1192, 1496, 2158, 1219, 1412, 365, 257, 3126, 51268, 51268, 1389, 274, 293, 300, 3126, 9765, 274, 1412, 307, 689, 291, 6964, 428, 428, 1412, 4009, 295, 437, 291, 434, 516, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.04229366049474599, "compression_ratio": 2.031413612565445, "no_caption_prob": 2.796879743982572e-05}, {"id": 147, "seek": 99012, "start": 998.04, "end": 1002.84, "text": " it'll be like a record could be a custom type if you wanted to but you're going to have some type", "tokens": [50364, 300, 1412, 370, 2035, 2010, 428, 1412, 307, 456, 311, 257, 370, 291, 434, 516, 281, 362, 257, 2010, 419, 4609, 1412, 2049, 50760, 50760, 309, 603, 312, 411, 257, 2136, 727, 312, 257, 2375, 2010, 498, 291, 1415, 281, 457, 291, 434, 516, 281, 362, 512, 2010, 51000, 51000, 1219, 1412, 365, 257, 4238, 274, 293, 291, 434, 516, 281, 362, 257, 1192, 1496, 2158, 1219, 1412, 365, 257, 3126, 51268, 51268, 1389, 274, 293, 300, 3126, 9765, 274, 1412, 307, 689, 291, 6964, 428, 428, 1412, 4009, 295, 437, 291, 434, 516, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.04229366049474599, "compression_ratio": 2.031413612565445, "no_caption_prob": 2.796879743982572e-05}, {"id": 148, "seek": 99012, "start": 1002.84, "end": 1008.2, "text": " called data with a capital d and you're going to have a top level value called data with a lower", "tokens": [50364, 300, 1412, 370, 2035, 2010, 428, 1412, 307, 456, 311, 257, 370, 291, 434, 516, 281, 362, 257, 2010, 419, 4609, 1412, 2049, 50760, 50760, 309, 603, 312, 411, 257, 2136, 727, 312, 257, 2375, 2010, 498, 291, 1415, 281, 457, 291, 434, 516, 281, 362, 512, 2010, 51000, 51000, 1219, 1412, 365, 257, 4238, 274, 293, 291, 434, 516, 281, 362, 257, 1192, 1496, 2158, 1219, 1412, 365, 257, 3126, 51268, 51268, 1389, 274, 293, 300, 3126, 9765, 274, 1412, 307, 689, 291, 6964, 428, 428, 1412, 4009, 295, 437, 291, 434, 516, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.04229366049474599, "compression_ratio": 2.031413612565445, "no_caption_prob": 2.796879743982572e-05}, {"id": 149, "seek": 99012, "start": 1008.2, "end": 1016.84, "text": " case d and that lowercase d data is where you define your your data source of what you're going", "tokens": [50364, 300, 1412, 370, 2035, 2010, 428, 1412, 307, 456, 311, 257, 370, 291, 434, 516, 281, 362, 257, 2010, 419, 4609, 1412, 2049, 50760, 50760, 309, 603, 312, 411, 257, 2136, 727, 312, 257, 2375, 2010, 498, 291, 1415, 281, 457, 291, 434, 516, 281, 362, 512, 2010, 51000, 51000, 1219, 1412, 365, 257, 4238, 274, 293, 291, 434, 516, 281, 362, 257, 1192, 1496, 2158, 1219, 1412, 365, 257, 3126, 51268, 51268, 1389, 274, 293, 300, 3126, 9765, 274, 1412, 307, 689, 291, 6964, 428, 428, 1412, 4009, 295, 437, 291, 434, 516, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.04229366049474599, "compression_ratio": 2.031413612565445, "no_caption_prob": 2.796879743982572e-05}, {"id": 150, "seek": 101684, "start": 1016.84, "end": 1026.2, "text": " to fetch and the and the top the capital d data is the data type you're going to get back so of course", "tokens": [50364, 281, 23673, 293, 264, 293, 264, 1192, 264, 4238, 274, 1412, 307, 264, 1412, 2010, 291, 434, 516, 281, 483, 646, 370, 295, 1164, 50832, 50832, 498, 291, 291, 458, 498, 291, 434, 5127, 544, 9239, 295, 1412, 300, 291, 434, 9650, 281, 4774, 300, 1412, 2010, 307, 51192, 51192, 516, 281, 1319, 291, 909, 7909, 281, 264, 2136, 420, 2035, 309, 815, 312, 457, 456, 311, 572, 3636, 456, 311, 51400, 51400, 572, 5623, 25925, 456, 311, 572, 1389, 5629, 8568, 1968, 309, 311, 15114, 420, 6713, 420, 2035, 370, 300, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.05095700919628143, "compression_ratio": 1.8790697674418604, "no_caption_prob": 2.078467332466971e-05}, {"id": 151, "seek": 101684, "start": 1026.2, "end": 1033.4, "text": " if you you know if you're adding more bits of data that you're expecting to receive that data type is", "tokens": [50364, 281, 23673, 293, 264, 293, 264, 1192, 264, 4238, 274, 1412, 307, 264, 1412, 2010, 291, 434, 516, 281, 483, 646, 370, 295, 1164, 50832, 50832, 498, 291, 291, 458, 498, 291, 434, 5127, 544, 9239, 295, 1412, 300, 291, 434, 9650, 281, 4774, 300, 1412, 2010, 307, 51192, 51192, 516, 281, 1319, 291, 909, 7909, 281, 264, 2136, 420, 2035, 309, 815, 312, 457, 456, 311, 572, 3636, 456, 311, 51400, 51400, 572, 5623, 25925, 456, 311, 572, 1389, 5629, 8568, 1968, 309, 311, 15114, 420, 6713, 420, 2035, 370, 300, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.05095700919628143, "compression_ratio": 1.8790697674418604, "no_caption_prob": 2.078467332466971e-05}, {"id": 152, "seek": 101684, "start": 1033.4, "end": 1037.56, "text": " going to change you add fields to the record or whatever it may be but there's no message there's", "tokens": [50364, 281, 23673, 293, 264, 293, 264, 1192, 264, 4238, 274, 1412, 307, 264, 1412, 2010, 291, 434, 516, 281, 483, 646, 370, 295, 1164, 50832, 50832, 498, 291, 291, 458, 498, 291, 434, 5127, 544, 9239, 295, 1412, 300, 291, 434, 9650, 281, 4774, 300, 1412, 2010, 307, 51192, 51192, 516, 281, 1319, 291, 909, 7909, 281, 264, 2136, 420, 2035, 309, 815, 312, 457, 456, 311, 572, 3636, 456, 311, 51400, 51400, 572, 5623, 25925, 456, 311, 572, 1389, 5629, 8568, 1968, 309, 311, 15114, 420, 6713, 420, 2035, 370, 300, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.05095700919628143, "compression_ratio": 1.8790697674418604, "no_caption_prob": 2.078467332466971e-05}, {"id": 153, "seek": 101684, "start": 1037.56, "end": 1043.4, "text": " no update clause there's no case statement checking whether it's loading or error or whatever so that", "tokens": [50364, 281, 23673, 293, 264, 293, 264, 1192, 264, 4238, 274, 1412, 307, 264, 1412, 2010, 291, 434, 516, 281, 483, 646, 370, 295, 1164, 50832, 50832, 498, 291, 291, 458, 498, 291, 434, 5127, 544, 9239, 295, 1412, 300, 291, 434, 9650, 281, 4774, 300, 1412, 2010, 307, 51192, 51192, 516, 281, 1319, 291, 909, 7909, 281, 264, 2136, 420, 2035, 309, 815, 312, 457, 456, 311, 572, 3636, 456, 311, 51400, 51400, 572, 5623, 25925, 456, 311, 572, 1389, 5629, 8568, 1968, 309, 311, 15114, 420, 6713, 420, 2035, 370, 300, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.05095700919628143, "compression_ratio": 1.8790697674418604, "no_caption_prob": 2.078467332466971e-05}, {"id": 154, "seek": 104340, "start": 1043.4, "end": 1050.0400000000002, "text": " workflow feels so nice to just say you know data equals data source dot http dot get give it your", "tokens": [50364, 20993, 3417, 370, 1481, 281, 445, 584, 291, 458, 1412, 6915, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 976, 309, 428, 50696, 50696, 4038, 75, 293, 2232, 293, 550, 294, 428, 1910, 2445, 291, 434, 445, 411, 1954, 510, 311, 264, 510, 311, 264, 1412, 741, 2351, 51016, 51016, 337, 309, 311, 309, 311, 445, 456, 420, 498, 309, 311, 406, 456, 264, 1905, 7154, 420, 264, 1322, 5622, 366, 3585, 291, 51300, 51300, 741, 3031, 281, 652, 341, 276, 83, 83, 79, 5308, 293, 746, 1437, 2085, 1338, 370, 3071, 291, 848, 300, 2035, 51596, 51624], "temperature": 0.0, "avg_logprob": -0.05640837697699518, "compression_ratio": 1.7808219178082192, "no_caption_prob": 4.029411684314255e-06}, {"id": 155, "seek": 104340, "start": 1050.0400000000002, "end": 1056.44, "text": " url and uh and then in your view function you're just like oh here's the here's the data i asked", "tokens": [50364, 20993, 3417, 370, 1481, 281, 445, 584, 291, 458, 1412, 6915, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 976, 309, 428, 50696, 50696, 4038, 75, 293, 2232, 293, 550, 294, 428, 1910, 2445, 291, 434, 445, 411, 1954, 510, 311, 264, 510, 311, 264, 1412, 741, 2351, 51016, 51016, 337, 309, 311, 309, 311, 445, 456, 420, 498, 309, 311, 406, 456, 264, 1905, 7154, 420, 264, 1322, 5622, 366, 3585, 291, 51300, 51300, 741, 3031, 281, 652, 341, 276, 83, 83, 79, 5308, 293, 746, 1437, 2085, 1338, 370, 3071, 291, 848, 300, 2035, 51596, 51624], "temperature": 0.0, "avg_logprob": -0.05640837697699518, "compression_ratio": 1.7808219178082192, "no_caption_prob": 4.029411684314255e-06}, {"id": 156, "seek": 104340, "start": 1056.44, "end": 1062.1200000000001, "text": " for it's it's just there or if it's not there the dev server or the build command are telling you", "tokens": [50364, 20993, 3417, 370, 1481, 281, 445, 584, 291, 458, 1412, 6915, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 976, 309, 428, 50696, 50696, 4038, 75, 293, 2232, 293, 550, 294, 428, 1910, 2445, 291, 434, 445, 411, 1954, 510, 311, 264, 510, 311, 264, 1412, 741, 2351, 51016, 51016, 337, 309, 311, 309, 311, 445, 456, 420, 498, 309, 311, 406, 456, 264, 1905, 7154, 420, 264, 1322, 5622, 366, 3585, 291, 51300, 51300, 741, 3031, 281, 652, 341, 276, 83, 83, 79, 5308, 293, 746, 1437, 2085, 1338, 370, 3071, 291, 848, 300, 2035, 51596, 51624], "temperature": 0.0, "avg_logprob": -0.05640837697699518, "compression_ratio": 1.7808219178082192, "no_caption_prob": 4.029411684314255e-06}, {"id": 157, "seek": 104340, "start": 1062.1200000000001, "end": 1068.0400000000002, "text": " i tried to make this http request and something went wrong yeah so earlier you said that whatever", "tokens": [50364, 20993, 3417, 370, 1481, 281, 445, 584, 291, 458, 1412, 6915, 1412, 4009, 5893, 276, 83, 83, 79, 5893, 483, 976, 309, 428, 50696, 50696, 4038, 75, 293, 2232, 293, 550, 294, 428, 1910, 2445, 291, 434, 445, 411, 1954, 510, 311, 264, 510, 311, 264, 1412, 741, 2351, 51016, 51016, 337, 309, 311, 309, 311, 445, 456, 420, 498, 309, 311, 406, 456, 264, 1905, 7154, 420, 264, 1322, 5622, 366, 3585, 291, 51300, 51300, 741, 3031, 281, 652, 341, 276, 83, 83, 79, 5308, 293, 746, 1437, 2085, 1338, 370, 3071, 291, 848, 300, 2035, 51596, 51624], "temperature": 0.0, "avg_logprob": -0.05640837697699518, "compression_ratio": 1.7808219178082192, "no_caption_prob": 4.029411684314255e-06}, {"id": 158, "seek": 106804, "start": 1068.04, "end": 1073.8, "text": " is returned by the init will be rendered i guess by yes by being called by the view function", "tokens": [50364, 307, 8752, 538, 264, 3157, 486, 312, 28748, 741, 2041, 538, 2086, 538, 885, 1219, 538, 264, 1910, 2445, 50652, 50708, 452, 4973, 2316, 390, 411, 1392, 370, 264, 3157, 2445, 11247, 257, 13413, 2316, 1826, 746, 575, 668, 51008, 51008, 13210, 570, 291, 920, 643, 281, 281, 360, 439, 264, 23673, 16901, 4813, 264, 5623, 293, 294, 264, 1910, 51332, 51332, 15529, 364, 19376, 1785, 293, 550, 264, 15529, 1785, 1785, 457, 291, 576, 659, 15529, 264, 19376, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.09333090035312147, "compression_ratio": 1.9077669902912622, "no_caption_prob": 3.7634323234669864e-05}, {"id": 159, "seek": 106804, "start": 1074.92, "end": 1080.92, "text": " my mental model was like okay so the init function returns a temporary model until something has been", "tokens": [50364, 307, 8752, 538, 264, 3157, 486, 312, 28748, 741, 2041, 538, 2086, 538, 885, 1219, 538, 264, 1910, 2445, 50652, 50708, 452, 4973, 2316, 390, 411, 1392, 370, 264, 3157, 2445, 11247, 257, 13413, 2316, 1826, 746, 575, 668, 51008, 51008, 13210, 570, 291, 920, 643, 281, 281, 360, 439, 264, 23673, 16901, 4813, 264, 5623, 293, 294, 264, 1910, 51332, 51332, 15529, 364, 19376, 1785, 293, 550, 264, 15529, 1785, 1785, 457, 291, 576, 659, 15529, 264, 19376, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.09333090035312147, "compression_ratio": 1.9077669902912622, "no_caption_prob": 3.7634323234669864e-05}, {"id": 160, "seek": 106804, "start": 1080.92, "end": 1087.3999999999999, "text": " loaded because you still need to to do all the fetch commands handle the update and in the view", "tokens": [50364, 307, 8752, 538, 264, 3157, 486, 312, 28748, 741, 2041, 538, 2086, 538, 885, 1219, 538, 264, 1910, 2445, 50652, 50708, 452, 4973, 2316, 390, 411, 1392, 370, 264, 3157, 2445, 11247, 257, 13413, 2316, 1826, 746, 575, 668, 51008, 51008, 13210, 570, 291, 920, 643, 281, 281, 360, 439, 264, 23673, 16901, 4813, 264, 5623, 293, 294, 264, 1910, 51332, 51332, 15529, 364, 19376, 1785, 293, 550, 264, 15529, 1785, 1785, 457, 291, 576, 659, 15529, 264, 19376, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.09333090035312147, "compression_ratio": 1.9077669902912622, "no_caption_prob": 3.7634323234669864e-05}, {"id": 161, "seek": 106804, "start": 1087.3999999999999, "end": 1093.72, "text": " render an intermediate state and then the render state state but you would pre render the intermediate", "tokens": [50364, 307, 8752, 538, 264, 3157, 486, 312, 28748, 741, 2041, 538, 2086, 538, 885, 1219, 538, 264, 1910, 2445, 50652, 50708, 452, 4973, 2316, 390, 411, 1392, 370, 264, 3157, 2445, 11247, 257, 13413, 2316, 1826, 746, 575, 668, 51008, 51008, 13210, 570, 291, 920, 643, 281, 281, 360, 439, 264, 23673, 16901, 4813, 264, 5623, 293, 294, 264, 1910, 51332, 51332, 15529, 364, 19376, 1785, 293, 550, 264, 15529, 1785, 1785, 457, 291, 576, 659, 15529, 264, 19376, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.09333090035312147, "compression_ratio": 1.9077669902912622, "no_caption_prob": 3.7634323234669864e-05}, {"id": 162, "seek": 109372, "start": 1093.72, "end": 1100.84, "text": " state but with elm pages you would actually render the completed view for the completed data", "tokens": [50364, 1785, 457, 365, 806, 76, 7183, 291, 576, 767, 15529, 264, 7365, 1910, 337, 264, 7365, 1412, 50720, 50720, 370, 291, 15529, 544, 813, 437, 291, 576, 483, 365, 257, 2710, 3861, 2293, 570, 264, 806, 76, 7183, 51052, 51052, 3663, 2709, 291, 341, 4965, 3410, 295, 257, 1412, 4009, 300, 309, 311, 257, 16694, 1166, 636, 281, 6786, 51428, 51428, 264, 1412, 428, 3028, 5946, 322, 2219, 984, 586, 1105, 291, 920, 362, 364, 309, 364, 5623, 597, 393, 2042, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.06983742433435777, "compression_ratio": 1.76036866359447, "no_caption_prob": 2.0462644897634163e-05}, {"id": 163, "seek": 109372, "start": 1100.84, "end": 1107.48, "text": " so you render more than what you would get with a normal application exactly because the elm pages", "tokens": [50364, 1785, 457, 365, 806, 76, 7183, 291, 576, 767, 15529, 264, 7365, 1910, 337, 264, 7365, 1412, 50720, 50720, 370, 291, 15529, 544, 813, 437, 291, 576, 483, 365, 257, 2710, 3861, 2293, 570, 264, 806, 76, 7183, 51052, 51052, 3663, 2709, 291, 341, 4965, 3410, 295, 257, 1412, 4009, 300, 309, 311, 257, 16694, 1166, 636, 281, 6786, 51428, 51428, 264, 1412, 428, 3028, 5946, 322, 2219, 984, 586, 1105, 291, 920, 362, 364, 309, 364, 5623, 597, 393, 2042, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.06983742433435777, "compression_ratio": 1.76036866359447, "no_caption_prob": 2.0462644897634163e-05}, {"id": 164, "seek": 109372, "start": 1107.48, "end": 1115.0, "text": " platform gives you this core concept of a data source that it's a declarative way to describe", "tokens": [50364, 1785, 457, 365, 806, 76, 7183, 291, 576, 767, 15529, 264, 7365, 1910, 337, 264, 7365, 1412, 50720, 50720, 370, 291, 15529, 544, 813, 437, 291, 576, 483, 365, 257, 2710, 3861, 2293, 570, 264, 806, 76, 7183, 51052, 51052, 3663, 2709, 291, 341, 4965, 3410, 295, 257, 1412, 4009, 300, 309, 311, 257, 16694, 1166, 636, 281, 6786, 51428, 51428, 264, 1412, 428, 3028, 5946, 322, 2219, 984, 586, 1105, 291, 920, 362, 364, 309, 364, 5623, 597, 393, 2042, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.06983742433435777, "compression_ratio": 1.76036866359447, "no_caption_prob": 2.0462644897634163e-05}, {"id": 165, "seek": 109372, "start": 1115.0, "end": 1121.48, "text": " the data your page depends on statically now um you still have an it an update which can perform", "tokens": [50364, 1785, 457, 365, 806, 76, 7183, 291, 576, 767, 15529, 264, 7365, 1910, 337, 264, 7365, 1412, 50720, 50720, 370, 291, 15529, 544, 813, 437, 291, 576, 483, 365, 257, 2710, 3861, 2293, 570, 264, 806, 76, 7183, 51052, 51052, 3663, 2709, 291, 341, 4965, 3410, 295, 257, 1412, 4009, 300, 309, 311, 257, 16694, 1166, 636, 281, 6786, 51428, 51428, 264, 1412, 428, 3028, 5946, 322, 2219, 984, 586, 1105, 291, 920, 362, 364, 309, 364, 5623, 597, 393, 2042, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.06983742433435777, "compression_ratio": 1.76036866359447, "no_caption_prob": 2.0462644897634163e-05}, {"id": 166, "seek": 112148, "start": 1121.48, "end": 1129.0, "text": " commands and if you wanted to get real time data you can do that in those places with regular http", "tokens": [50364, 16901, 293, 498, 291, 1415, 281, 483, 957, 565, 1412, 291, 393, 360, 300, 294, 729, 3190, 365, 3890, 276, 83, 83, 79, 50740, 50740, 457, 264, 806, 76, 7183, 3663, 2516, 1127, 295, 439, 264, 4365, 295, 49940, 300, 949, 428, 3157, 51048, 51048, 420, 1910, 2445, 2170, 1219, 337, 264, 700, 565, 300, 311, 445, 644, 295, 264, 3663, 293, 370, 370, 1338, 51428, 51428, 291, 500, 380, 2232, 741, 519, 295, 309, 382, 445, 16694, 19020, 16141, 1412, 2831, 813, 411, 10100, 19020, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.03895947933197021, "compression_ratio": 1.6858407079646018, "no_caption_prob": 3.2697989809094e-05}, {"id": 167, "seek": 112148, "start": 1129.0, "end": 1135.16, "text": " but the elm pages platform takes care of all the details of resolving that before your init", "tokens": [50364, 16901, 293, 498, 291, 1415, 281, 483, 957, 565, 1412, 291, 393, 360, 300, 294, 729, 3190, 365, 3890, 276, 83, 83, 79, 50740, 50740, 457, 264, 806, 76, 7183, 3663, 2516, 1127, 295, 439, 264, 4365, 295, 49940, 300, 949, 428, 3157, 51048, 51048, 420, 1910, 2445, 2170, 1219, 337, 264, 700, 565, 300, 311, 445, 644, 295, 264, 3663, 293, 370, 370, 1338, 51428, 51428, 291, 500, 380, 2232, 741, 519, 295, 309, 382, 445, 16694, 19020, 16141, 1412, 2831, 813, 411, 10100, 19020, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.03895947933197021, "compression_ratio": 1.6858407079646018, "no_caption_prob": 3.2697989809094e-05}, {"id": 168, "seek": 112148, "start": 1135.16, "end": 1142.76, "text": " or view function gets called for the first time that's just part of the platform and so so yeah", "tokens": [50364, 16901, 293, 498, 291, 1415, 281, 483, 957, 565, 1412, 291, 393, 360, 300, 294, 729, 3190, 365, 3890, 276, 83, 83, 79, 50740, 50740, 457, 264, 806, 76, 7183, 3663, 2516, 1127, 295, 439, 264, 4365, 295, 49940, 300, 949, 428, 3157, 51048, 51048, 420, 1910, 2445, 2170, 1219, 337, 264, 700, 565, 300, 311, 445, 644, 295, 264, 3663, 293, 370, 370, 1338, 51428, 51428, 291, 500, 380, 2232, 741, 519, 295, 309, 382, 445, 16694, 19020, 16141, 1412, 2831, 813, 411, 10100, 19020, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.03895947933197021, "compression_ratio": 1.6858407079646018, "no_caption_prob": 3.2697989809094e-05}, {"id": 169, "seek": 112148, "start": 1142.76, "end": 1149.4, "text": " you don't uh i think of it as just declaratively describing data rather than like imperatively", "tokens": [50364, 16901, 293, 498, 291, 1415, 281, 483, 957, 565, 1412, 291, 393, 360, 300, 294, 729, 3190, 365, 3890, 276, 83, 83, 79, 50740, 50740, 457, 264, 806, 76, 7183, 3663, 2516, 1127, 295, 439, 264, 4365, 295, 49940, 300, 949, 428, 3157, 51048, 51048, 420, 1910, 2445, 2170, 1219, 337, 264, 700, 565, 300, 311, 445, 644, 295, 264, 3663, 293, 370, 370, 1338, 51428, 51428, 291, 500, 380, 2232, 741, 519, 295, 309, 382, 445, 16694, 19020, 16141, 1412, 2831, 813, 411, 10100, 19020, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.03895947933197021, "compression_ratio": 1.6858407079646018, "no_caption_prob": 3.2697989809094e-05}, {"id": 170, "seek": 114940, "start": 1149.4, "end": 1156.2800000000002, "text": " saying go and do this here's the intermediary model state along the way as you get up this data", "tokens": [50364, 1566, 352, 293, 360, 341, 510, 311, 264, 15184, 822, 2316, 1785, 2051, 264, 636, 382, 291, 483, 493, 341, 1412, 50708, 50708, 291, 483, 291, 458, 420, 291, 458, 309, 311, 309, 311, 257, 688, 544, 411, 445, 17827, 257, 5633, 293, 49940, 309, 293, 291, 51040, 51040, 393, 2235, 294, 439, 264, 1412, 291, 643, 293, 1564, 300, 311, 439, 20772, 291, 445, 362, 300, 1412, 2435, 51364, 51364, 370, 412, 264, 2863, 291, 2835, 300, 806, 76, 7183, 486, 1322, 257, 992, 295, 276, 83, 15480, 7098, 293, 361, 37331, 5944, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.04173475382279376, "compression_ratio": 1.7716894977168949, "no_caption_prob": 6.2408166741079185e-06}, {"id": 171, "seek": 114940, "start": 1156.2800000000002, "end": 1162.92, "text": " you get you know or you know it's it's a lot more like just defining a task and resolving it and you", "tokens": [50364, 1566, 352, 293, 360, 341, 510, 311, 264, 15184, 822, 2316, 1785, 2051, 264, 636, 382, 291, 483, 493, 341, 1412, 50708, 50708, 291, 483, 291, 458, 420, 291, 458, 309, 311, 309, 311, 257, 688, 544, 411, 445, 17827, 257, 5633, 293, 49940, 309, 293, 291, 51040, 51040, 393, 2235, 294, 439, 264, 1412, 291, 643, 293, 1564, 300, 311, 439, 20772, 291, 445, 362, 300, 1412, 2435, 51364, 51364, 370, 412, 264, 2863, 291, 2835, 300, 806, 76, 7183, 486, 1322, 257, 992, 295, 276, 83, 15480, 7098, 293, 361, 37331, 5944, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.04173475382279376, "compression_ratio": 1.7716894977168949, "no_caption_prob": 6.2408166741079185e-06}, {"id": 172, "seek": 114940, "start": 1162.92, "end": 1169.4, "text": " can pull in all the data you need and once that's all resolved you just have that data available", "tokens": [50364, 1566, 352, 293, 360, 341, 510, 311, 264, 15184, 822, 2316, 1785, 2051, 264, 636, 382, 291, 483, 493, 341, 1412, 50708, 50708, 291, 483, 291, 458, 420, 291, 458, 309, 311, 309, 311, 257, 688, 544, 411, 445, 17827, 257, 5633, 293, 49940, 309, 293, 291, 51040, 51040, 393, 2235, 294, 439, 264, 1412, 291, 643, 293, 1564, 300, 311, 439, 20772, 291, 445, 362, 300, 1412, 2435, 51364, 51364, 370, 412, 264, 2863, 291, 2835, 300, 806, 76, 7183, 486, 1322, 257, 992, 295, 276, 83, 15480, 7098, 293, 361, 37331, 5944, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.04173475382279376, "compression_ratio": 1.7716894977168949, "no_caption_prob": 6.2408166741079185e-06}, {"id": 173, "seek": 114940, "start": 1169.4, "end": 1174.68, "text": " so at the beginning you mentioned that elm pages will build a set of html files and javascript", "tokens": [50364, 1566, 352, 293, 360, 341, 510, 311, 264, 15184, 822, 2316, 1785, 2051, 264, 636, 382, 291, 483, 493, 341, 1412, 50708, 50708, 291, 483, 291, 458, 420, 291, 458, 309, 311, 309, 311, 257, 688, 544, 411, 445, 17827, 257, 5633, 293, 49940, 309, 293, 291, 51040, 51040, 393, 2235, 294, 439, 264, 1412, 291, 643, 293, 1564, 300, 311, 439, 20772, 291, 445, 362, 300, 1412, 2435, 51364, 51364, 370, 412, 264, 2863, 291, 2835, 300, 806, 76, 7183, 486, 1322, 257, 992, 295, 276, 83, 15480, 7098, 293, 361, 37331, 5944, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.04173475382279376, "compression_ratio": 1.7716894977168949, "no_caption_prob": 6.2408166741079185e-06}, {"id": 174, "seek": 117468, "start": 1174.68, "end": 1180.3600000000001, "text": " files and whatever and those are already have all the content that they need as we've seen now and", "tokens": [50364, 7098, 293, 2035, 293, 729, 366, 1217, 362, 439, 264, 2701, 300, 436, 643, 382, 321, 600, 1612, 586, 293, 50648, 50648, 291, 7274, 341, 281, 257, 269, 67, 77, 370, 300, 1355, 300, 498, 428, 1105, 269, 2592, 307, 760, 264, 7154, 307, 760, 570, 51096, 51096, 295, 364, 484, 609, 420, 746, 550, 291, 393, 380, 1322, 570, 439, 729, 276, 83, 79, 12475, 486, 3061, 457, 498, 51436, 51436, 412, 512, 935, 291, 362, 7612, 291, 362, 3094, 293, 264, 269, 2592, 307, 760, 457, 264, 2086, 264, 7183, 3861, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.052684592217514196, "compression_ratio": 1.787037037037037, "no_caption_prob": 4.133204129175283e-05}, {"id": 175, "seek": 117468, "start": 1180.3600000000001, "end": 1189.3200000000002, "text": " you deploy this to a cdn so that means that if your um cms is down the server is down because", "tokens": [50364, 7098, 293, 2035, 293, 729, 366, 1217, 362, 439, 264, 2701, 300, 436, 643, 382, 321, 600, 1612, 586, 293, 50648, 50648, 291, 7274, 341, 281, 257, 269, 67, 77, 370, 300, 1355, 300, 498, 428, 1105, 269, 2592, 307, 760, 264, 7154, 307, 760, 570, 51096, 51096, 295, 364, 484, 609, 420, 746, 550, 291, 393, 380, 1322, 570, 439, 729, 276, 83, 79, 12475, 486, 3061, 457, 498, 51436, 51436, 412, 512, 935, 291, 362, 7612, 291, 362, 3094, 293, 264, 269, 2592, 307, 760, 457, 264, 2086, 264, 7183, 3861, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.052684592217514196, "compression_ratio": 1.787037037037037, "no_caption_prob": 4.133204129175283e-05}, {"id": 176, "seek": 117468, "start": 1189.3200000000002, "end": 1196.1200000000001, "text": " of an outage or something then you can't build because all those htp requests will fail but if", "tokens": [50364, 7098, 293, 2035, 293, 729, 366, 1217, 362, 439, 264, 2701, 300, 436, 643, 382, 321, 600, 1612, 586, 293, 50648, 50648, 291, 7274, 341, 281, 257, 269, 67, 77, 370, 300, 1355, 300, 498, 428, 1105, 269, 2592, 307, 760, 264, 7154, 307, 760, 570, 51096, 51096, 295, 364, 484, 609, 420, 746, 550, 291, 393, 380, 1322, 570, 439, 729, 276, 83, 79, 12475, 486, 3061, 457, 498, 51436, 51436, 412, 512, 935, 291, 362, 7612, 291, 362, 3094, 293, 264, 269, 2592, 307, 760, 457, 264, 2086, 264, 7183, 3861, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.052684592217514196, "compression_ratio": 1.787037037037037, "no_caption_prob": 4.133204129175283e-05}, {"id": 177, "seek": 117468, "start": 1196.1200000000001, "end": 1203.88, "text": " at some point you have failed you have built and the cms is down but the yes the pages application", "tokens": [50364, 7098, 293, 2035, 293, 729, 366, 1217, 362, 439, 264, 2701, 300, 436, 643, 382, 321, 600, 1612, 586, 293, 50648, 50648, 291, 7274, 341, 281, 257, 269, 67, 77, 370, 300, 1355, 300, 498, 428, 1105, 269, 2592, 307, 760, 264, 7154, 307, 760, 570, 51096, 51096, 295, 364, 484, 609, 420, 746, 550, 291, 393, 380, 1322, 570, 439, 729, 276, 83, 79, 12475, 486, 3061, 457, 498, 51436, 51436, 412, 512, 935, 291, 362, 7612, 291, 362, 3094, 293, 264, 269, 2592, 307, 760, 457, 264, 2086, 264, 7183, 3861, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.052684592217514196, "compression_ratio": 1.787037037037037, "no_caption_prob": 4.133204129175283e-05}, {"id": 178, "seek": 120388, "start": 1203.88, "end": 1210.5200000000002, "text": " is released and deployed yes then you don't need to depend on cms and everything is smooth even", "tokens": [50364, 307, 4736, 293, 17826, 2086, 550, 291, 500, 380, 643, 281, 5672, 322, 269, 2592, 293, 1203, 307, 5508, 754, 50696, 50696, 1673, 264, 269, 2592, 307, 760, 2293, 300, 311, 558, 293, 370, 411, 741, 519, 472, 295, 264, 721, 561, 561, 50984, 50984, 2171, 2441, 466, 291, 458, 1412, 7139, 293, 300, 1333, 295, 551, 741, 914, 309, 1105, 291, 458, 321, 600, 51204, 51204, 733, 295, 2825, 466, 577, 309, 311, 10851, 457, 550, 437, 466, 411, 291, 458, 1699, 257, 3456, 370, 291, 434, 51500, 51532, 23673, 278, 341, 1412, 412, 264, 1322, 1823, 457, 550, 741, 362, 741, 362, 281, 652, 988, 741, 483, 300, 1412, 949, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.025220603778444487, "compression_ratio": 1.8467432950191571, "no_caption_prob": 3.071688115596771e-05}, {"id": 179, "seek": 120388, "start": 1210.5200000000002, "end": 1216.2800000000002, "text": " though the cms is down exactly that's right and so like i think one of the things people people", "tokens": [50364, 307, 4736, 293, 17826, 2086, 550, 291, 500, 380, 643, 281, 5672, 322, 269, 2592, 293, 1203, 307, 5508, 754, 50696, 50696, 1673, 264, 269, 2592, 307, 760, 2293, 300, 311, 558, 293, 370, 411, 741, 519, 472, 295, 264, 721, 561, 561, 50984, 50984, 2171, 2441, 466, 291, 458, 1412, 7139, 293, 300, 1333, 295, 551, 741, 914, 309, 1105, 291, 458, 321, 600, 51204, 51204, 733, 295, 2825, 466, 577, 309, 311, 10851, 457, 550, 437, 466, 411, 291, 458, 1699, 257, 3456, 370, 291, 434, 51500, 51532, 23673, 278, 341, 1412, 412, 264, 1322, 1823, 457, 550, 741, 362, 741, 362, 281, 652, 988, 741, 483, 300, 1412, 949, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.025220603778444487, "compression_ratio": 1.8467432950191571, "no_caption_prob": 3.071688115596771e-05}, {"id": 180, "seek": 120388, "start": 1216.2800000000002, "end": 1220.68, "text": " sometimes wonder about you know data sources and that sort of thing i mean it um you know we've", "tokens": [50364, 307, 4736, 293, 17826, 2086, 550, 291, 500, 380, 643, 281, 5672, 322, 269, 2592, 293, 1203, 307, 5508, 754, 50696, 50696, 1673, 264, 269, 2592, 307, 760, 2293, 300, 311, 558, 293, 370, 411, 741, 519, 472, 295, 264, 721, 561, 561, 50984, 50984, 2171, 2441, 466, 291, 458, 1412, 7139, 293, 300, 1333, 295, 551, 741, 914, 309, 1105, 291, 458, 321, 600, 51204, 51204, 733, 295, 2825, 466, 577, 309, 311, 10851, 457, 550, 437, 466, 411, 291, 458, 1699, 257, 3456, 370, 291, 434, 51500, 51532, 23673, 278, 341, 1412, 412, 264, 1322, 1823, 457, 550, 741, 362, 741, 362, 281, 652, 988, 741, 483, 300, 1412, 949, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.025220603778444487, "compression_ratio": 1.8467432950191571, "no_caption_prob": 3.071688115596771e-05}, {"id": 181, "seek": 120388, "start": 1220.68, "end": 1226.6000000000001, "text": " kind of talked about how it's convenient but then what about like you know wait a minute so you're", "tokens": [50364, 307, 4736, 293, 17826, 2086, 550, 291, 500, 380, 643, 281, 5672, 322, 269, 2592, 293, 1203, 307, 5508, 754, 50696, 50696, 1673, 264, 269, 2592, 307, 760, 2293, 300, 311, 558, 293, 370, 411, 741, 519, 472, 295, 264, 721, 561, 561, 50984, 50984, 2171, 2441, 466, 291, 458, 1412, 7139, 293, 300, 1333, 295, 551, 741, 914, 309, 1105, 291, 458, 321, 600, 51204, 51204, 733, 295, 2825, 466, 577, 309, 311, 10851, 457, 550, 437, 466, 411, 291, 458, 1699, 257, 3456, 370, 291, 434, 51500, 51532, 23673, 278, 341, 1412, 412, 264, 1322, 1823, 457, 550, 741, 362, 741, 362, 281, 652, 988, 741, 483, 300, 1412, 949, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.025220603778444487, "compression_ratio": 1.8467432950191571, "no_caption_prob": 3.071688115596771e-05}, {"id": 182, "seek": 120388, "start": 1227.24, "end": 1233.4, "text": " fetching this data at the build step but then i have i have to make sure i get that data before", "tokens": [50364, 307, 4736, 293, 17826, 2086, 550, 291, 500, 380, 643, 281, 5672, 322, 269, 2592, 293, 1203, 307, 5508, 754, 50696, 50696, 1673, 264, 269, 2592, 307, 760, 2293, 300, 311, 558, 293, 370, 411, 741, 519, 472, 295, 264, 721, 561, 561, 50984, 50984, 2171, 2441, 466, 291, 458, 1412, 7139, 293, 300, 1333, 295, 551, 741, 914, 309, 1105, 291, 458, 321, 600, 51204, 51204, 733, 295, 2825, 466, 577, 309, 311, 10851, 457, 550, 437, 466, 411, 291, 458, 1699, 257, 3456, 370, 291, 434, 51500, 51532, 23673, 278, 341, 1412, 412, 264, 1322, 1823, 457, 550, 741, 362, 741, 362, 281, 652, 988, 741, 483, 300, 1412, 949, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.025220603778444487, "compression_ratio": 1.8467432950191571, "no_caption_prob": 3.071688115596771e-05}, {"id": 183, "seek": 123340, "start": 1233.4, "end": 1238.1200000000001, "text": " i load a page because it's hydrating an elm application right so that seems a little odd", "tokens": [50364, 741, 3677, 257, 3028, 570, 309, 311, 5796, 8754, 364, 806, 76, 3861, 558, 370, 300, 2544, 257, 707, 7401, 50600, 50600, 293, 293, 300, 311, 2074, 291, 360, 643, 281, 1105, 291, 360, 643, 281, 483, 300, 1412, 370, 411, 498, 498, 1105, 291, 352, 281, 264, 50964, 50964, 2232, 264, 5593, 3028, 309, 2709, 291, 264, 659, 28748, 276, 83, 15480, 1203, 12668, 493, 309, 5796, 12507, 666, 364, 806, 76, 51312, 51312, 2167, 3028, 3861, 293, 550, 291, 2052, 281, 264, 6968, 3028, 558, 293, 586, 439, 295, 300, 1412, 300, 291, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.04082058415268407, "compression_ratio": 1.8725490196078431, "no_caption_prob": 2.3922926629893482e-05}, {"id": 184, "seek": 123340, "start": 1238.1200000000001, "end": 1245.4, "text": " and and that's true you do need to um you do need to get that data so like if if um you go to the", "tokens": [50364, 741, 3677, 257, 3028, 570, 309, 311, 5796, 8754, 364, 806, 76, 3861, 558, 370, 300, 2544, 257, 707, 7401, 50600, 50600, 293, 293, 300, 311, 2074, 291, 360, 643, 281, 1105, 291, 360, 643, 281, 483, 300, 1412, 370, 411, 498, 498, 1105, 291, 352, 281, 264, 50964, 50964, 2232, 264, 5593, 3028, 309, 2709, 291, 264, 659, 28748, 276, 83, 15480, 1203, 12668, 493, 309, 5796, 12507, 666, 364, 806, 76, 51312, 51312, 2167, 3028, 3861, 293, 550, 291, 2052, 281, 264, 6968, 3028, 558, 293, 586, 439, 295, 300, 1412, 300, 291, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.04082058415268407, "compression_ratio": 1.8725490196078431, "no_caption_prob": 2.3922926629893482e-05}, {"id": 185, "seek": 123340, "start": 1245.4, "end": 1252.3600000000001, "text": " uh the root page it gives you the pre rendered html everything loads up it hydrates into an elm", "tokens": [50364, 741, 3677, 257, 3028, 570, 309, 311, 5796, 8754, 364, 806, 76, 3861, 558, 370, 300, 2544, 257, 707, 7401, 50600, 50600, 293, 293, 300, 311, 2074, 291, 360, 643, 281, 1105, 291, 360, 643, 281, 483, 300, 1412, 370, 411, 498, 498, 1105, 291, 352, 281, 264, 50964, 50964, 2232, 264, 5593, 3028, 309, 2709, 291, 264, 659, 28748, 276, 83, 15480, 1203, 12668, 493, 309, 5796, 12507, 666, 364, 806, 76, 51312, 51312, 2167, 3028, 3861, 293, 550, 291, 2052, 281, 264, 6968, 3028, 558, 293, 586, 439, 295, 300, 1412, 300, 291, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.04082058415268407, "compression_ratio": 1.8725490196078431, "no_caption_prob": 2.3922926629893482e-05}, {"id": 186, "seek": 123340, "start": 1252.3600000000001, "end": 1258.3600000000001, "text": " single page application and then you click to the blog page right and now all of that data that you", "tokens": [50364, 741, 3677, 257, 3028, 570, 309, 311, 5796, 8754, 364, 806, 76, 3861, 558, 370, 300, 2544, 257, 707, 7401, 50600, 50600, 293, 293, 300, 311, 2074, 291, 360, 643, 281, 1105, 291, 360, 643, 281, 483, 300, 1412, 370, 411, 498, 498, 1105, 291, 352, 281, 264, 50964, 50964, 2232, 264, 5593, 3028, 309, 2709, 291, 264, 659, 28748, 276, 83, 15480, 1203, 12668, 493, 309, 5796, 12507, 666, 364, 806, 76, 51312, 51312, 2167, 3028, 3861, 293, 550, 291, 2052, 281, 264, 6968, 3028, 558, 293, 586, 439, 295, 300, 1412, 300, 291, 51612, 51612], "temperature": 0.0, "avg_logprob": -0.04082058415268407, "compression_ratio": 1.8725490196078431, "no_caption_prob": 2.3922926629893482e-05}, {"id": 187, "seek": 125836, "start": 1258.36, "end": 1263.6399999999999, "text": " gathered to to get the listing of all of your blog posts from your cms where does that come from", "tokens": [50364, 13032, 281, 281, 483, 264, 22161, 295, 439, 295, 428, 6968, 12300, 490, 428, 269, 2592, 689, 775, 300, 808, 490, 50628, 50628, 570, 309, 311, 257, 2167, 3028, 806, 76, 3861, 370, 307, 309, 8850, 428, 269, 2592, 420, 437, 307, 309, 884, 382, 291, 848, 50912, 50912, 309, 311, 406, 8850, 264, 269, 2592, 597, 1355, 300, 754, 498, 264, 269, 2592, 645, 281, 352, 760, 300, 3028, 295, 264, 22161, 51268, 51268, 295, 6968, 12300, 576, 920, 312, 456, 1338, 741, 2041, 291, 727, 920, 5308, 490, 264, 269, 2592, 777, 1412, 457, 51608, 51644], "temperature": 0.0, "avg_logprob": -0.04251526832580566, "compression_ratio": 1.912621359223301, "no_caption_prob": 4.399892713990994e-05}, {"id": 188, "seek": 125836, "start": 1263.6399999999999, "end": 1269.32, "text": " because it's a single page elm application so is it hitting your cms or what is it doing as you said", "tokens": [50364, 13032, 281, 281, 483, 264, 22161, 295, 439, 295, 428, 6968, 12300, 490, 428, 269, 2592, 689, 775, 300, 808, 490, 50628, 50628, 570, 309, 311, 257, 2167, 3028, 806, 76, 3861, 370, 307, 309, 8850, 428, 269, 2592, 420, 437, 307, 309, 884, 382, 291, 848, 50912, 50912, 309, 311, 406, 8850, 264, 269, 2592, 597, 1355, 300, 754, 498, 264, 269, 2592, 645, 281, 352, 760, 300, 3028, 295, 264, 22161, 51268, 51268, 295, 6968, 12300, 576, 920, 312, 456, 1338, 741, 2041, 291, 727, 920, 5308, 490, 264, 269, 2592, 777, 1412, 457, 51608, 51644], "temperature": 0.0, "avg_logprob": -0.04251526832580566, "compression_ratio": 1.912621359223301, "no_caption_prob": 4.399892713990994e-05}, {"id": 189, "seek": 125836, "start": 1269.32, "end": 1276.4399999999998, "text": " it's not hitting the cms which means that even if the cms were to go down that page of the listing", "tokens": [50364, 13032, 281, 281, 483, 264, 22161, 295, 439, 295, 428, 6968, 12300, 490, 428, 269, 2592, 689, 775, 300, 808, 490, 50628, 50628, 570, 309, 311, 257, 2167, 3028, 806, 76, 3861, 370, 307, 309, 8850, 428, 269, 2592, 420, 437, 307, 309, 884, 382, 291, 848, 50912, 50912, 309, 311, 406, 8850, 264, 269, 2592, 597, 1355, 300, 754, 498, 264, 269, 2592, 645, 281, 352, 760, 300, 3028, 295, 264, 22161, 51268, 51268, 295, 6968, 12300, 576, 920, 312, 456, 1338, 741, 2041, 291, 727, 920, 5308, 490, 264, 269, 2592, 777, 1412, 457, 51608, 51644], "temperature": 0.0, "avg_logprob": -0.04251526832580566, "compression_ratio": 1.912621359223301, "no_caption_prob": 4.399892713990994e-05}, {"id": 190, "seek": 125836, "start": 1276.4399999999998, "end": 1283.24, "text": " of blog posts would still be there yeah i guess you could still request from the cms new data but", "tokens": [50364, 13032, 281, 281, 483, 264, 22161, 295, 439, 295, 428, 6968, 12300, 490, 428, 269, 2592, 689, 775, 300, 808, 490, 50628, 50628, 570, 309, 311, 257, 2167, 3028, 806, 76, 3861, 370, 307, 309, 8850, 428, 269, 2592, 420, 437, 307, 309, 884, 382, 291, 848, 50912, 50912, 309, 311, 406, 8850, 264, 269, 2592, 597, 1355, 300, 754, 498, 264, 269, 2592, 645, 281, 352, 760, 300, 3028, 295, 264, 22161, 51268, 51268, 295, 6968, 12300, 576, 920, 312, 456, 1338, 741, 2041, 291, 727, 920, 5308, 490, 264, 269, 2592, 777, 1412, 457, 51608, 51644], "temperature": 0.0, "avg_logprob": -0.04251526832580566, "compression_ratio": 1.912621359223301, "no_caption_prob": 4.399892713990994e-05}, {"id": 191, "seek": 128324, "start": 1283.24, "end": 1288.28, "text": " you would have to do that manually yourself you don't have to that's right yeah exactly if you", "tokens": [50364, 291, 576, 362, 281, 360, 300, 16945, 1803, 291, 500, 380, 362, 281, 300, 311, 558, 1338, 2293, 498, 291, 50616, 50616, 1415, 281, 337, 512, 1778, 1105, 365, 264, 269, 2592, 294, 294, 881, 3331, 291, 434, 1391, 516, 281, 312, 1228, 1412, 50936, 50936, 7139, 281, 483, 300, 1412, 457, 457, 3122, 294, 512, 3331, 291, 1062, 528, 957, 565, 1412, 281, 1520, 51292, 51292, 498, 257, 1621, 4309, 307, 10452, 322, 34167, 558, 586, 420, 281, 483, 264, 1230, 295, 5902, 322, 257, 6968, 2183, 420, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.07704453314504316, "compression_ratio": 1.742081447963801, "no_caption_prob": 1.0129743714060169e-05}, {"id": 192, "seek": 128324, "start": 1288.28, "end": 1294.68, "text": " wanted to for some reason um with the cms in in most cases you're probably going to be using data", "tokens": [50364, 291, 576, 362, 281, 360, 300, 16945, 1803, 291, 500, 380, 362, 281, 300, 311, 558, 1338, 2293, 498, 291, 50616, 50616, 1415, 281, 337, 512, 1778, 1105, 365, 264, 269, 2592, 294, 294, 881, 3331, 291, 434, 1391, 516, 281, 312, 1228, 1412, 50936, 50936, 7139, 281, 483, 300, 1412, 457, 457, 3122, 294, 512, 3331, 291, 1062, 528, 957, 565, 1412, 281, 1520, 51292, 51292, 498, 257, 1621, 4309, 307, 10452, 322, 34167, 558, 586, 420, 281, 483, 264, 1230, 295, 5902, 322, 257, 6968, 2183, 420, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.07704453314504316, "compression_ratio": 1.742081447963801, "no_caption_prob": 1.0129743714060169e-05}, {"id": 193, "seek": 128324, "start": 1294.68, "end": 1301.8, "text": " sources to get that data but but absolutely in some cases you might want real time data to check", "tokens": [50364, 291, 576, 362, 281, 360, 300, 16945, 1803, 291, 500, 380, 362, 281, 300, 311, 558, 1338, 2293, 498, 291, 50616, 50616, 1415, 281, 337, 512, 1778, 1105, 365, 264, 269, 2592, 294, 294, 881, 3331, 291, 434, 1391, 516, 281, 312, 1228, 1412, 50936, 50936, 7139, 281, 483, 300, 1412, 457, 457, 3122, 294, 512, 3331, 291, 1062, 528, 957, 565, 1412, 281, 1520, 51292, 51292, 498, 257, 1621, 4309, 307, 10452, 322, 34167, 558, 586, 420, 281, 483, 264, 1230, 295, 5902, 322, 257, 6968, 2183, 420, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.07704453314504316, "compression_ratio": 1.742081447963801, "no_caption_prob": 1.0129743714060169e-05}, {"id": 194, "seek": 128324, "start": 1301.8, "end": 1309.8, "text": " if a live stream is ongoing on twitch right now or to get the number of likes on a blog post or", "tokens": [50364, 291, 576, 362, 281, 360, 300, 16945, 1803, 291, 500, 380, 362, 281, 300, 311, 558, 1338, 2293, 498, 291, 50616, 50616, 1415, 281, 337, 512, 1778, 1105, 365, 264, 269, 2592, 294, 294, 881, 3331, 291, 434, 1391, 516, 281, 312, 1228, 1412, 50936, 50936, 7139, 281, 483, 300, 1412, 457, 457, 3122, 294, 512, 3331, 291, 1062, 528, 957, 565, 1412, 281, 1520, 51292, 51292, 498, 257, 1621, 4309, 307, 10452, 322, 34167, 558, 586, 420, 281, 483, 264, 1230, 295, 5902, 322, 257, 6968, 2183, 420, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.07704453314504316, "compression_ratio": 1.742081447963801, "no_caption_prob": 1.0129743714060169e-05}, {"id": 195, "seek": 130980, "start": 1309.8, "end": 1316.44, "text": " something like that so the cms gives you that data from the in the data source the data source", "tokens": [50364, 746, 411, 300, 370, 264, 269, 2592, 2709, 291, 300, 1412, 490, 264, 294, 264, 1412, 4009, 264, 1412, 4009, 50696, 50696, 2170, 300, 1412, 293, 300, 1412, 5314, 493, 294, 257, 361, 3015, 3991, 293, 370, 439, 295, 264, 1412, 300, 300, 2232, 6968, 51024, 51024, 8186, 3028, 1367, 3502, 322, 5314, 493, 294, 341, 361, 3015, 3991, 293, 806, 76, 7183, 437, 309, 775, 307, 309, 15136, 3781, 300, 51320, 51320, 361, 3015, 3991, 337, 291, 949, 309, 1709, 281, 300, 3028, 370, 370, 309, 2170, 293, 498, 291, 20076, 670, 257, 2113, 291, 393, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.07464438145703609, "compression_ratio": 2.005291005291005, "no_caption_prob": 4.6836736146360636e-05}, {"id": 196, "seek": 130980, "start": 1316.44, "end": 1323.0, "text": " gets that data and that data ends up in a json file and so all of the data that that uh blog", "tokens": [50364, 746, 411, 300, 370, 264, 269, 2592, 2709, 291, 300, 1412, 490, 264, 294, 264, 1412, 4009, 264, 1412, 4009, 50696, 50696, 2170, 300, 1412, 293, 300, 1412, 5314, 493, 294, 257, 361, 3015, 3991, 293, 370, 439, 295, 264, 1412, 300, 300, 2232, 6968, 51024, 51024, 8186, 3028, 1367, 3502, 322, 5314, 493, 294, 341, 361, 3015, 3991, 293, 806, 76, 7183, 437, 309, 775, 307, 309, 15136, 3781, 300, 51320, 51320, 361, 3015, 3991, 337, 291, 949, 309, 1709, 281, 300, 3028, 370, 370, 309, 2170, 293, 498, 291, 20076, 670, 257, 2113, 291, 393, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.07464438145703609, "compression_ratio": 2.005291005291005, "no_caption_prob": 4.6836736146360636e-05}, {"id": 197, "seek": 130980, "start": 1323.0, "end": 1328.9199999999998, "text": " index page depended on ends up in this json file and elm pages what it does is it fetches that", "tokens": [50364, 746, 411, 300, 370, 264, 269, 2592, 2709, 291, 300, 1412, 490, 264, 294, 264, 1412, 4009, 264, 1412, 4009, 50696, 50696, 2170, 300, 1412, 293, 300, 1412, 5314, 493, 294, 257, 361, 3015, 3991, 293, 370, 439, 295, 264, 1412, 300, 300, 2232, 6968, 51024, 51024, 8186, 3028, 1367, 3502, 322, 5314, 493, 294, 341, 361, 3015, 3991, 293, 806, 76, 7183, 437, 309, 775, 307, 309, 15136, 3781, 300, 51320, 51320, 361, 3015, 3991, 337, 291, 949, 309, 1709, 281, 300, 3028, 370, 370, 309, 2170, 293, 498, 291, 20076, 670, 257, 2113, 291, 393, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.07464438145703609, "compression_ratio": 2.005291005291005, "no_caption_prob": 4.6836736146360636e-05}, {"id": 198, "seek": 130980, "start": 1328.9199999999998, "end": 1336.76, "text": " json file for you before it goes to that page so so it gets and if you hover over a link you can", "tokens": [50364, 746, 411, 300, 370, 264, 269, 2592, 2709, 291, 300, 1412, 490, 264, 294, 264, 1412, 4009, 264, 1412, 4009, 50696, 50696, 2170, 300, 1412, 293, 300, 1412, 5314, 493, 294, 257, 361, 3015, 3991, 293, 370, 439, 295, 264, 1412, 300, 300, 2232, 6968, 51024, 51024, 8186, 3028, 1367, 3502, 322, 5314, 493, 294, 341, 361, 3015, 3991, 293, 806, 76, 7183, 437, 309, 775, 307, 309, 15136, 3781, 300, 51320, 51320, 361, 3015, 3991, 337, 291, 949, 309, 1709, 281, 300, 3028, 370, 370, 309, 2170, 293, 498, 291, 20076, 670, 257, 2113, 291, 393, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.07464438145703609, "compression_ratio": 2.005291005291005, "no_caption_prob": 4.6836736146360636e-05}, {"id": 199, "seek": 133676, "start": 1336.76, "end": 1341.56, "text": " look in your network tab and you can see when you hover over a link that it's going to go and fetch", "tokens": [50364, 574, 294, 428, 3209, 4421, 293, 291, 393, 536, 562, 291, 20076, 670, 257, 2113, 300, 309, 311, 516, 281, 352, 293, 23673, 50604, 50604, 264, 1412, 300, 309, 2203, 570, 309, 2673, 2516, 1296, 472, 281, 2331, 34184, 281, 1105, 1296, 264, 51004, 51004, 565, 428, 428, 28169, 18780, 264, 4458, 295, 257, 2113, 293, 264, 565, 291, 2052, 309, 570, 291, 2673, 51280, 51280, 500, 380, 2052, 309, 412, 264, 1400, 4691, 291, 2052, 309, 3030, 264, 2808, 293, 6255, 366, 2964, 754, 498, 51508, 51508, 291, 853, 281, 2052, 309, 2370, 291, 434, 1391, 406, 516, 281, 360, 309, 4663, 813, 2319, 34184, 293, 309, 4523, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07944615119326431, "compression_ratio": 1.9362549800796813, "no_caption_prob": 0.00031996029429137707}, {"id": 200, "seek": 133676, "start": 1341.56, "end": 1349.56, "text": " the data that it needs because it usually takes between one to 200 milliseconds to um between the", "tokens": [50364, 574, 294, 428, 3209, 4421, 293, 291, 393, 536, 562, 291, 20076, 670, 257, 2113, 300, 309, 311, 516, 281, 352, 293, 23673, 50604, 50604, 264, 1412, 300, 309, 2203, 570, 309, 2673, 2516, 1296, 472, 281, 2331, 34184, 281, 1105, 1296, 264, 51004, 51004, 565, 428, 428, 28169, 18780, 264, 4458, 295, 257, 2113, 293, 264, 565, 291, 2052, 309, 570, 291, 2673, 51280, 51280, 500, 380, 2052, 309, 412, 264, 1400, 4691, 291, 2052, 309, 3030, 264, 2808, 293, 6255, 366, 2964, 754, 498, 51508, 51508, 291, 853, 281, 2052, 309, 2370, 291, 434, 1391, 406, 516, 281, 360, 309, 4663, 813, 2319, 34184, 293, 309, 4523, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07944615119326431, "compression_ratio": 1.9362549800796813, "no_caption_prob": 0.00031996029429137707}, {"id": 201, "seek": 133676, "start": 1349.56, "end": 1355.08, "text": " time your your cursor enters the region of a link and the time you click it because you usually", "tokens": [50364, 574, 294, 428, 3209, 4421, 293, 291, 393, 536, 562, 291, 20076, 670, 257, 2113, 300, 309, 311, 516, 281, 352, 293, 23673, 50604, 50604, 264, 1412, 300, 309, 2203, 570, 309, 2673, 2516, 1296, 472, 281, 2331, 34184, 281, 1105, 1296, 264, 51004, 51004, 565, 428, 428, 28169, 18780, 264, 4458, 295, 257, 2113, 293, 264, 565, 291, 2052, 309, 570, 291, 2673, 51280, 51280, 500, 380, 2052, 309, 412, 264, 1400, 4691, 291, 2052, 309, 3030, 264, 2808, 293, 6255, 366, 2964, 754, 498, 51508, 51508, 291, 853, 281, 2052, 309, 2370, 291, 434, 1391, 406, 516, 281, 360, 309, 4663, 813, 2319, 34184, 293, 309, 4523, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07944615119326431, "compression_ratio": 1.9362549800796813, "no_caption_prob": 0.00031996029429137707}, {"id": 202, "seek": 133676, "start": 1355.08, "end": 1359.64, "text": " don't click it at the far edge you click it towards the middle and humans are slow even if", "tokens": [50364, 574, 294, 428, 3209, 4421, 293, 291, 393, 536, 562, 291, 20076, 670, 257, 2113, 300, 309, 311, 516, 281, 352, 293, 23673, 50604, 50604, 264, 1412, 300, 309, 2203, 570, 309, 2673, 2516, 1296, 472, 281, 2331, 34184, 281, 1105, 1296, 264, 51004, 51004, 565, 428, 428, 28169, 18780, 264, 4458, 295, 257, 2113, 293, 264, 565, 291, 2052, 309, 570, 291, 2673, 51280, 51280, 500, 380, 2052, 309, 412, 264, 1400, 4691, 291, 2052, 309, 3030, 264, 2808, 293, 6255, 366, 2964, 754, 498, 51508, 51508, 291, 853, 281, 2052, 309, 2370, 291, 434, 1391, 406, 516, 281, 360, 309, 4663, 813, 2319, 34184, 293, 309, 4523, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07944615119326431, "compression_ratio": 1.9362549800796813, "no_caption_prob": 0.00031996029429137707}, {"id": 203, "seek": 133676, "start": 1359.64, "end": 1364.12, "text": " you try to click it fast you're probably not going to do it faster than 100 milliseconds and it turns", "tokens": [50364, 574, 294, 428, 3209, 4421, 293, 291, 393, 536, 562, 291, 20076, 670, 257, 2113, 300, 309, 311, 516, 281, 352, 293, 23673, 50604, 50604, 264, 1412, 300, 309, 2203, 570, 309, 2673, 2516, 1296, 472, 281, 2331, 34184, 281, 1105, 1296, 264, 51004, 51004, 565, 428, 428, 28169, 18780, 264, 4458, 295, 257, 2113, 293, 264, 565, 291, 2052, 309, 570, 291, 2673, 51280, 51280, 500, 380, 2052, 309, 412, 264, 1400, 4691, 291, 2052, 309, 3030, 264, 2808, 293, 6255, 366, 2964, 754, 498, 51508, 51508, 291, 853, 281, 2052, 309, 2370, 291, 434, 1391, 406, 516, 281, 360, 309, 4663, 813, 2319, 34184, 293, 309, 4523, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.07944615119326431, "compression_ratio": 1.9362549800796813, "no_caption_prob": 0.00031996029429137707}, {"id": 204, "seek": 136412, "start": 1364.12, "end": 1370.12, "text": " out that's actually like enough lead time to in most cases make it feel pretty instantaneous to", "tokens": [50364, 484, 300, 311, 767, 411, 1547, 1477, 565, 281, 294, 881, 3331, 652, 309, 841, 1238, 45596, 281, 50664, 50664, 362, 300, 1412, 2435, 370, 300, 562, 562, 1105, 264, 4195, 18521, 322, 264, 3028, 309, 311, 1919, 293, 309, 775, 264, 51012, 51012, 2167, 3028, 6034, 2661, 370, 360, 291, 362, 257, 361, 3015, 3991, 337, 264, 1379, 3861, 420, 337, 1184, 51332, 51332, 3028, 309, 311, 7472, 538, 3028, 1338, 2293, 1338, 309, 311, 7472, 484, 538, 1184, 3028, 370, 309, 14847, 12668, 382, 2978, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.1021358888227861, "compression_ratio": 1.7443946188340806, "no_caption_prob": 5.390938531490974e-05}, {"id": 205, "seek": 136412, "start": 1370.12, "end": 1377.08, "text": " have that data available so that when when um the user clicks on the page it's ready and it does the", "tokens": [50364, 484, 300, 311, 767, 411, 1547, 1477, 565, 281, 294, 881, 3331, 652, 309, 841, 1238, 45596, 281, 50664, 50664, 362, 300, 1412, 2435, 370, 300, 562, 562, 1105, 264, 4195, 18521, 322, 264, 3028, 309, 311, 1919, 293, 309, 775, 264, 51012, 51012, 2167, 3028, 6034, 2661, 370, 360, 291, 362, 257, 361, 3015, 3991, 337, 264, 1379, 3861, 420, 337, 1184, 51332, 51332, 3028, 309, 311, 7472, 538, 3028, 1338, 2293, 1338, 309, 311, 7472, 484, 538, 1184, 3028, 370, 309, 14847, 12668, 382, 2978, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.1021358888227861, "compression_ratio": 1.7443946188340806, "no_caption_prob": 5.390938531490974e-05}, {"id": 206, "seek": 136412, "start": 1377.08, "end": 1383.4799999999998, "text": " single page transition quickly so do you have a json file for the whole application or for each", "tokens": [50364, 484, 300, 311, 767, 411, 1547, 1477, 565, 281, 294, 881, 3331, 652, 309, 841, 1238, 45596, 281, 50664, 50664, 362, 300, 1412, 2435, 370, 300, 562, 562, 1105, 264, 4195, 18521, 322, 264, 3028, 309, 311, 1919, 293, 309, 775, 264, 51012, 51012, 2167, 3028, 6034, 2661, 370, 360, 291, 362, 257, 361, 3015, 3991, 337, 264, 1379, 3861, 420, 337, 1184, 51332, 51332, 3028, 309, 311, 7472, 538, 3028, 1338, 2293, 1338, 309, 311, 7472, 484, 538, 1184, 3028, 370, 309, 14847, 12668, 382, 2978, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.1021358888227861, "compression_ratio": 1.7443946188340806, "no_caption_prob": 5.390938531490974e-05}, {"id": 207, "seek": 136412, "start": 1383.4799999999998, "end": 1391.3999999999999, "text": " page it's split by page yeah exactly yeah it's split out by each page so it lazy loads as needed", "tokens": [50364, 484, 300, 311, 767, 411, 1547, 1477, 565, 281, 294, 881, 3331, 652, 309, 841, 1238, 45596, 281, 50664, 50664, 362, 300, 1412, 2435, 370, 300, 562, 562, 1105, 264, 4195, 18521, 322, 264, 3028, 309, 311, 1919, 293, 309, 775, 264, 51012, 51012, 2167, 3028, 6034, 2661, 370, 360, 291, 362, 257, 361, 3015, 3991, 337, 264, 1379, 3861, 420, 337, 1184, 51332, 51332, 3028, 309, 311, 7472, 538, 3028, 1338, 2293, 1338, 309, 311, 7472, 484, 538, 1184, 3028, 370, 309, 14847, 12668, 382, 2978, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.1021358888227861, "compression_ratio": 1.7443946188340806, "no_caption_prob": 5.390938531490974e-05}, {"id": 208, "seek": 139140, "start": 1391.4, "end": 1396.92, "text": " for a page when you go to that page it gets the data it needs is that the only data that is being", "tokens": [50364, 337, 257, 3028, 562, 291, 352, 281, 300, 3028, 309, 2170, 264, 1412, 309, 2203, 307, 300, 264, 787, 1412, 300, 307, 885, 50640, 50640, 23673, 292, 572, 544, 42713, 572, 544, 269, 3810, 309, 309, 307, 293, 741, 914, 741, 576, 959, 281, 281, 362, 411, 3089, 30348, 457, 51068, 51068, 2232, 456, 366, 512, 4112, 300, 741, 393, 380, 534, 360, 300, 570, 264, 636, 264, 806, 76, 31958, 1985, 309, 51360, 51360, 576, 1105, 741, 1866, 341, 382, 257, 382, 257, 9026, 382, 257, 665, 1252, 741, 2067, 380, 411, 1954, 309, 820, 7472, 309, 493, 741, 390, 411, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06969181996471477, "compression_ratio": 1.8148148148148149, "no_caption_prob": 3.763578206417151e-05}, {"id": 209, "seek": 139140, "start": 1396.92, "end": 1405.48, "text": " fetched no more js no more css it it is and i mean i would love to to have like code splitting but", "tokens": [50364, 337, 257, 3028, 562, 291, 352, 281, 300, 3028, 309, 2170, 264, 1412, 309, 2203, 307, 300, 264, 787, 1412, 300, 307, 885, 50640, 50640, 23673, 292, 572, 544, 42713, 572, 544, 269, 3810, 309, 309, 307, 293, 741, 914, 741, 576, 959, 281, 281, 362, 411, 3089, 30348, 457, 51068, 51068, 2232, 456, 366, 512, 4112, 300, 741, 393, 380, 534, 360, 300, 570, 264, 636, 264, 806, 76, 31958, 1985, 309, 51360, 51360, 576, 1105, 741, 1866, 341, 382, 257, 382, 257, 9026, 382, 257, 665, 1252, 741, 2067, 380, 411, 1954, 309, 820, 7472, 309, 493, 741, 390, 411, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06969181996471477, "compression_ratio": 1.8148148148148149, "no_caption_prob": 3.763578206417151e-05}, {"id": 210, "seek": 139140, "start": 1405.48, "end": 1411.3200000000002, "text": " uh there are some reasons that i can't really do that because the way the elm compiler works it", "tokens": [50364, 337, 257, 3028, 562, 291, 352, 281, 300, 3028, 309, 2170, 264, 1412, 309, 2203, 307, 300, 264, 787, 1412, 300, 307, 885, 50640, 50640, 23673, 292, 572, 544, 42713, 572, 544, 269, 3810, 309, 309, 307, 293, 741, 914, 741, 576, 959, 281, 281, 362, 411, 3089, 30348, 457, 51068, 51068, 2232, 456, 366, 512, 4112, 300, 741, 393, 380, 534, 360, 300, 570, 264, 636, 264, 806, 76, 31958, 1985, 309, 51360, 51360, 576, 1105, 741, 1866, 341, 382, 257, 382, 257, 9026, 382, 257, 665, 1252, 741, 2067, 380, 411, 1954, 309, 820, 7472, 309, 493, 741, 390, 411, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06969181996471477, "compression_ratio": 1.8148148148148149, "no_caption_prob": 3.763578206417151e-05}, {"id": 211, "seek": 139140, "start": 1411.3200000000002, "end": 1419.64, "text": " would um i saw this as a as a bone as a good side i wasn't like oh it should split it up i was like", "tokens": [50364, 337, 257, 3028, 562, 291, 352, 281, 300, 3028, 309, 2170, 264, 1412, 309, 2203, 307, 300, 264, 787, 1412, 300, 307, 885, 50640, 50640, 23673, 292, 572, 544, 42713, 572, 544, 269, 3810, 309, 309, 307, 293, 741, 914, 741, 576, 959, 281, 281, 362, 411, 3089, 30348, 457, 51068, 51068, 2232, 456, 366, 512, 4112, 300, 741, 393, 380, 534, 360, 300, 570, 264, 636, 264, 806, 76, 31958, 1985, 309, 51360, 51360, 576, 1105, 741, 1866, 341, 382, 257, 382, 257, 9026, 382, 257, 665, 1252, 741, 2067, 380, 411, 1954, 309, 820, 7472, 309, 493, 741, 390, 411, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.06969181996471477, "compression_ratio": 1.8148148148148149, "no_caption_prob": 3.763578206417151e-05}, {"id": 212, "seek": 141964, "start": 1419.64, "end": 1425.48, "text": " it would be cool jason it would be cool i would love to be able to do the um to do the code", "tokens": [50364, 309, 576, 312, 1627, 361, 1258, 309, 576, 312, 1627, 741, 576, 959, 281, 312, 1075, 281, 360, 264, 1105, 281, 360, 264, 3089, 50656, 50656, 30348, 4111, 457, 456, 366, 512, 15705, 300, 741, 393, 380, 534, 10339, 309, 457, 741, 576, 959, 498, 50912, 50912, 300, 4111, 645, 746, 741, 727, 652, 764, 295, 294, 264, 2027, 457, 337, 586, 741, 914, 264, 24438, 11602, 366, 51200, 51200, 366, 1238, 10585, 370, 300, 311, 1392, 457, 1338, 309, 787, 15136, 3781, 300, 361, 3015, 3991, 293, 550, 586, 264, 1778, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05692481497923533, "compression_ratio": 1.853080568720379, "no_caption_prob": 2.4682221919647418e-05}, {"id": 213, "seek": 141964, "start": 1425.48, "end": 1430.6000000000001, "text": " splitting feature but there are some limitations that i can't really hack it but i would love if", "tokens": [50364, 309, 576, 312, 1627, 361, 1258, 309, 576, 312, 1627, 741, 576, 959, 281, 312, 1075, 281, 360, 264, 1105, 281, 360, 264, 3089, 50656, 50656, 30348, 4111, 457, 456, 366, 512, 15705, 300, 741, 393, 380, 534, 10339, 309, 457, 741, 576, 959, 498, 50912, 50912, 300, 4111, 645, 746, 741, 727, 652, 764, 295, 294, 264, 2027, 457, 337, 586, 741, 914, 264, 24438, 11602, 366, 51200, 51200, 366, 1238, 10585, 370, 300, 311, 1392, 457, 1338, 309, 787, 15136, 3781, 300, 361, 3015, 3991, 293, 550, 586, 264, 1778, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05692481497923533, "compression_ratio": 1.853080568720379, "no_caption_prob": 2.4682221919647418e-05}, {"id": 214, "seek": 141964, "start": 1430.6000000000001, "end": 1436.3600000000001, "text": " that feature were something i could make use of in the future but for now i mean the bundle sizes are", "tokens": [50364, 309, 576, 312, 1627, 361, 1258, 309, 576, 312, 1627, 741, 576, 959, 281, 312, 1075, 281, 360, 264, 1105, 281, 360, 264, 3089, 50656, 50656, 30348, 4111, 457, 456, 366, 512, 15705, 300, 741, 393, 380, 534, 10339, 309, 457, 741, 576, 959, 498, 50912, 50912, 300, 4111, 645, 746, 741, 727, 652, 764, 295, 294, 264, 2027, 457, 337, 586, 741, 914, 264, 24438, 11602, 366, 51200, 51200, 366, 1238, 10585, 370, 300, 311, 1392, 457, 1338, 309, 787, 15136, 3781, 300, 361, 3015, 3991, 293, 550, 586, 264, 1778, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05692481497923533, "compression_ratio": 1.853080568720379, "no_caption_prob": 2.4682221919647418e-05}, {"id": 215, "seek": 141964, "start": 1436.3600000000001, "end": 1444.5200000000002, "text": " are pretty reasonable so that's okay but yeah it only fetches that json file and then now the reason", "tokens": [50364, 309, 576, 312, 1627, 361, 1258, 309, 576, 312, 1627, 741, 576, 959, 281, 312, 1075, 281, 360, 264, 1105, 281, 360, 264, 3089, 50656, 50656, 30348, 4111, 457, 456, 366, 512, 15705, 300, 741, 393, 380, 534, 10339, 309, 457, 741, 576, 959, 498, 50912, 50912, 300, 4111, 645, 746, 741, 727, 652, 764, 295, 294, 264, 2027, 457, 337, 586, 741, 914, 264, 24438, 11602, 366, 51200, 51200, 366, 1238, 10585, 370, 300, 311, 1392, 457, 1338, 309, 787, 15136, 3781, 300, 361, 3015, 3991, 293, 550, 586, 264, 1778, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05692481497923533, "compression_ratio": 1.853080568720379, "no_caption_prob": 2.4682221919647418e-05}, {"id": 216, "seek": 144452, "start": 1444.52, "end": 1450.84, "text": " i think it might seem strange at first right because like wait a minute so it's still making", "tokens": [50364, 741, 519, 309, 1062, 1643, 5861, 412, 700, 558, 570, 411, 1699, 257, 3456, 370, 309, 311, 920, 1455, 50680, 50680, 613, 276, 83, 79, 12475, 558, 370, 437, 311, 264, 935, 11868, 341, 1333, 295, 19283, 293, 291, 458, 50948, 50948, 1419, 341, 1412, 2435, 412, 659, 15529, 597, 321, 2825, 466, 741, 519, 456, 311, 364, 4497, 51168, 51168, 5121, 597, 307, 733, 295, 411, 291, 645, 12075, 278, 412, 498, 428, 269, 2592, 307, 760, 428, 3621, 307, 920, 493, 51424, 51460, 457, 437, 498, 264, 276, 83, 79, 5308, 18199, 281, 483, 300, 361, 3015, 3991, 300, 309, 2203, 337, 428, 1412, 7139, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.03441081820307551, "compression_ratio": 1.7557251908396947, "no_caption_prob": 7.88905435911147e-06}, {"id": 217, "seek": 144452, "start": 1450.84, "end": 1456.2, "text": " these htp requests right so what's the point besides this sort of convenience and you know", "tokens": [50364, 741, 519, 309, 1062, 1643, 5861, 412, 700, 558, 570, 411, 1699, 257, 3456, 370, 309, 311, 920, 1455, 50680, 50680, 613, 276, 83, 79, 12475, 558, 370, 437, 311, 264, 935, 11868, 341, 1333, 295, 19283, 293, 291, 458, 50948, 50948, 1419, 341, 1412, 2435, 412, 659, 15529, 597, 321, 2825, 466, 741, 519, 456, 311, 364, 4497, 51168, 51168, 5121, 597, 307, 733, 295, 411, 291, 645, 12075, 278, 412, 498, 428, 269, 2592, 307, 760, 428, 3621, 307, 920, 493, 51424, 51460, 457, 437, 498, 264, 276, 83, 79, 5308, 18199, 281, 483, 300, 361, 3015, 3991, 300, 309, 2203, 337, 428, 1412, 7139, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.03441081820307551, "compression_ratio": 1.7557251908396947, "no_caption_prob": 7.88905435911147e-06}, {"id": 218, "seek": 144452, "start": 1456.2, "end": 1460.6, "text": " having this data available at pre render which we talked about i think there's an additional", "tokens": [50364, 741, 519, 309, 1062, 1643, 5861, 412, 700, 558, 570, 411, 1699, 257, 3456, 370, 309, 311, 920, 1455, 50680, 50680, 613, 276, 83, 79, 12475, 558, 370, 437, 311, 264, 935, 11868, 341, 1333, 295, 19283, 293, 291, 458, 50948, 50948, 1419, 341, 1412, 2435, 412, 659, 15529, 597, 321, 2825, 466, 741, 519, 456, 311, 364, 4497, 51168, 51168, 5121, 597, 307, 733, 295, 411, 291, 645, 12075, 278, 412, 498, 428, 269, 2592, 307, 760, 428, 3621, 307, 920, 493, 51424, 51460, 457, 437, 498, 264, 276, 83, 79, 5308, 18199, 281, 483, 300, 361, 3015, 3991, 300, 309, 2203, 337, 428, 1412, 7139, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.03441081820307551, "compression_ratio": 1.7557251908396947, "no_caption_prob": 7.88905435911147e-06}, {"id": 219, "seek": 144452, "start": 1460.6, "end": 1465.72, "text": " benefit which is kind of like you were hinting at if your cms is down your site is still up", "tokens": [50364, 741, 519, 309, 1062, 1643, 5861, 412, 700, 558, 570, 411, 1699, 257, 3456, 370, 309, 311, 920, 1455, 50680, 50680, 613, 276, 83, 79, 12475, 558, 370, 437, 311, 264, 935, 11868, 341, 1333, 295, 19283, 293, 291, 458, 50948, 50948, 1419, 341, 1412, 2435, 412, 659, 15529, 597, 321, 2825, 466, 741, 519, 456, 311, 364, 4497, 51168, 51168, 5121, 597, 307, 733, 295, 411, 291, 645, 12075, 278, 412, 498, 428, 269, 2592, 307, 760, 428, 3621, 307, 920, 493, 51424, 51460, 457, 437, 498, 264, 276, 83, 79, 5308, 18199, 281, 483, 300, 361, 3015, 3991, 300, 309, 2203, 337, 428, 1412, 7139, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.03441081820307551, "compression_ratio": 1.7557251908396947, "no_caption_prob": 7.88905435911147e-06}, {"id": 220, "seek": 144452, "start": 1466.44, "end": 1471.4, "text": " but what if the htp request fails to get that json file that it needs for your data sources", "tokens": [50364, 741, 519, 309, 1062, 1643, 5861, 412, 700, 558, 570, 411, 1699, 257, 3456, 370, 309, 311, 920, 1455, 50680, 50680, 613, 276, 83, 79, 12475, 558, 370, 437, 311, 264, 935, 11868, 341, 1333, 295, 19283, 293, 291, 458, 50948, 50948, 1419, 341, 1412, 2435, 412, 659, 15529, 597, 321, 2825, 466, 741, 519, 456, 311, 364, 4497, 51168, 51168, 5121, 597, 307, 733, 295, 411, 291, 645, 12075, 278, 412, 498, 428, 269, 2592, 307, 760, 428, 3621, 307, 920, 493, 51424, 51460, 457, 437, 498, 264, 276, 83, 79, 5308, 18199, 281, 483, 300, 361, 3015, 3991, 300, 309, 2203, 337, 428, 1412, 7139, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.03441081820307551, "compression_ratio": 1.7557251908396947, "no_caption_prob": 7.88905435911147e-06}, {"id": 221, "seek": 147140, "start": 1471.4, "end": 1477.24, "text": " for that page because that one is also hosted somewhere that can go down it's hosted somewhere", "tokens": [50364, 337, 300, 3028, 570, 300, 472, 307, 611, 19204, 4079, 300, 393, 352, 760, 309, 311, 19204, 4079, 50656, 50656, 300, 727, 352, 760, 457, 2041, 437, 370, 307, 264, 1472, 295, 428, 3861, 370, 264, 493, 3766, 16282, 50976, 50976, 10891, 436, 434, 516, 281, 312, 21952, 9408, 1214, 370, 498, 291, 434, 264, 17439, 366, 498, 51212, 51212, 291, 434, 2577, 257, 3028, 291, 434, 516, 281, 312, 1075, 281, 483, 300, 1412, 293, 611, 291, 434, 16058, 309, 322, 257, 269, 67, 77, 51516, 51516, 2035, 300, 7382, 337, 2701, 8982, 3209, 746, 411, 300, 4588, 8982, 1338, 1310, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.022715609028654278, "compression_ratio": 1.9387755102040816, "no_caption_prob": 4.264603558112867e-05}, {"id": 222, "seek": 147140, "start": 1477.24, "end": 1483.64, "text": " that could go down but guess what so is the rest of your application so the uptime characteristic", "tokens": [50364, 337, 300, 3028, 570, 300, 472, 307, 611, 19204, 4079, 300, 393, 352, 760, 309, 311, 19204, 4079, 50656, 50656, 300, 727, 352, 760, 457, 2041, 437, 370, 307, 264, 1472, 295, 428, 3861, 370, 264, 493, 3766, 16282, 50976, 50976, 10891, 436, 434, 516, 281, 312, 21952, 9408, 1214, 370, 498, 291, 434, 264, 17439, 366, 498, 51212, 51212, 291, 434, 2577, 257, 3028, 291, 434, 516, 281, 312, 1075, 281, 483, 300, 1412, 293, 611, 291, 434, 16058, 309, 322, 257, 269, 67, 77, 51516, 51516, 2035, 300, 7382, 337, 2701, 8982, 3209, 746, 411, 300, 4588, 8982, 1338, 1310, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.022715609028654278, "compression_ratio": 1.9387755102040816, "no_caption_prob": 4.264603558112867e-05}, {"id": 223, "seek": 147140, "start": 1483.64, "end": 1488.3600000000001, "text": " characteristics they're going to be tightly linked together so if you're the odds are if", "tokens": [50364, 337, 300, 3028, 570, 300, 472, 307, 611, 19204, 4079, 300, 393, 352, 760, 309, 311, 19204, 4079, 50656, 50656, 300, 727, 352, 760, 457, 2041, 437, 370, 307, 264, 1472, 295, 428, 3861, 370, 264, 493, 3766, 16282, 50976, 50976, 10891, 436, 434, 516, 281, 312, 21952, 9408, 1214, 370, 498, 291, 434, 264, 17439, 366, 498, 51212, 51212, 291, 434, 2577, 257, 3028, 291, 434, 516, 281, 312, 1075, 281, 483, 300, 1412, 293, 611, 291, 434, 16058, 309, 322, 257, 269, 67, 77, 51516, 51516, 2035, 300, 7382, 337, 2701, 8982, 3209, 746, 411, 300, 4588, 8982, 1338, 1310, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.022715609028654278, "compression_ratio": 1.9387755102040816, "no_caption_prob": 4.264603558112867e-05}, {"id": 224, "seek": 147140, "start": 1488.3600000000001, "end": 1494.44, "text": " you're seeing a page you're going to be able to get that data and also you're hosting it on a cdn", "tokens": [50364, 337, 300, 3028, 570, 300, 472, 307, 611, 19204, 4079, 300, 393, 352, 760, 309, 311, 19204, 4079, 50656, 50656, 300, 727, 352, 760, 457, 2041, 437, 370, 307, 264, 1472, 295, 428, 3861, 370, 264, 493, 3766, 16282, 50976, 50976, 10891, 436, 434, 516, 281, 312, 21952, 9408, 1214, 370, 498, 291, 434, 264, 17439, 366, 498, 51212, 51212, 291, 434, 2577, 257, 3028, 291, 434, 516, 281, 312, 1075, 281, 483, 300, 1412, 293, 611, 291, 434, 16058, 309, 322, 257, 269, 67, 77, 51516, 51516, 2035, 300, 7382, 337, 2701, 8982, 3209, 746, 411, 300, 4588, 8982, 1338, 1310, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.022715609028654278, "compression_ratio": 1.9387755102040816, "no_caption_prob": 4.264603558112867e-05}, {"id": 225, "seek": 147140, "start": 1494.44, "end": 1500.1200000000001, "text": " whatever that stands for content delivery network something like that cloud delivery yeah maybe", "tokens": [50364, 337, 300, 3028, 570, 300, 472, 307, 611, 19204, 4079, 300, 393, 352, 760, 309, 311, 19204, 4079, 50656, 50656, 300, 727, 352, 760, 457, 2041, 437, 370, 307, 264, 1472, 295, 428, 3861, 370, 264, 493, 3766, 16282, 50976, 50976, 10891, 436, 434, 516, 281, 312, 21952, 9408, 1214, 370, 498, 291, 434, 264, 17439, 366, 498, 51212, 51212, 291, 434, 2577, 257, 3028, 291, 434, 516, 281, 312, 1075, 281, 483, 300, 1412, 293, 611, 291, 434, 16058, 309, 322, 257, 269, 67, 77, 51516, 51516, 2035, 300, 7382, 337, 2701, 8982, 3209, 746, 411, 300, 4588, 8982, 1338, 1310, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.022715609028654278, "compression_ratio": 1.9387755102040816, "no_caption_prob": 4.264603558112867e-05}, {"id": 226, "seek": 150012, "start": 1500.12, "end": 1506.6, "text": " content delivery network so the idea of a cdn is that you have dumb hosting where it's just giving", "tokens": [50364, 2701, 8982, 3209, 370, 264, 1558, 295, 257, 269, 67, 77, 307, 300, 291, 362, 10316, 16058, 689, 309, 311, 445, 2902, 50688, 50688, 291, 7098, 309, 311, 406, 516, 807, 264, 1209, 8758, 295, 1417, 281, 257, 7154, 293, 300, 7154, 307, 13175, 51052, 51052, 3866, 12475, 293, 309, 575, 428, 3861, 9952, 293, 309, 575, 281, 352, 1401, 746, 490, 257, 51392, 51392, 8149, 309, 311, 445, 510, 311, 257, 3991, 510, 291, 352, 293, 294, 1186, 1670, 309, 311, 370, 2199, 309, 311, 445, 3760, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.016380972188452015, "compression_ratio": 1.8037383177570094, "no_caption_prob": 5.475742000271566e-05}, {"id": 227, "seek": 150012, "start": 1506.6, "end": 1513.8799999999999, "text": " you files it's not going through the complication of talking to a server and that server is handling", "tokens": [50364, 2701, 8982, 3209, 370, 264, 1558, 295, 257, 269, 67, 77, 307, 300, 291, 362, 10316, 16058, 689, 309, 311, 445, 2902, 50688, 50688, 291, 7098, 309, 311, 406, 516, 807, 264, 1209, 8758, 295, 1417, 281, 257, 7154, 293, 300, 7154, 307, 13175, 51052, 51052, 3866, 12475, 293, 309, 575, 428, 3861, 9952, 293, 309, 575, 281, 352, 1401, 746, 490, 257, 51392, 51392, 8149, 309, 311, 445, 510, 311, 257, 3991, 510, 291, 352, 293, 294, 1186, 1670, 309, 311, 370, 2199, 309, 311, 445, 3760, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.016380972188452015, "compression_ratio": 1.8037383177570094, "no_caption_prob": 5.475742000271566e-05}, {"id": 228, "seek": 150012, "start": 1513.8799999999999, "end": 1520.6799999999998, "text": " multiple requests and it has your application logic and it has to go read something from a", "tokens": [50364, 2701, 8982, 3209, 370, 264, 1558, 295, 257, 269, 67, 77, 307, 300, 291, 362, 10316, 16058, 689, 309, 311, 445, 2902, 50688, 50688, 291, 7098, 309, 311, 406, 516, 807, 264, 1209, 8758, 295, 1417, 281, 257, 7154, 293, 300, 7154, 307, 13175, 51052, 51052, 3866, 12475, 293, 309, 575, 428, 3861, 9952, 293, 309, 575, 281, 352, 1401, 746, 490, 257, 51392, 51392, 8149, 309, 311, 445, 510, 311, 257, 3991, 510, 291, 352, 293, 294, 1186, 1670, 309, 311, 370, 2199, 309, 311, 445, 3760, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.016380972188452015, "compression_ratio": 1.8037383177570094, "no_caption_prob": 5.475742000271566e-05}, {"id": 229, "seek": 150012, "start": 1520.6799999999998, "end": 1527.08, "text": " database it's just here's a file here you go and in fact since it's so simple it's just reading", "tokens": [50364, 2701, 8982, 3209, 370, 264, 1558, 295, 257, 269, 67, 77, 307, 300, 291, 362, 10316, 16058, 689, 309, 311, 445, 2902, 50688, 50688, 291, 7098, 309, 311, 406, 516, 807, 264, 1209, 8758, 295, 1417, 281, 257, 7154, 293, 300, 7154, 307, 13175, 51052, 51052, 3866, 12475, 293, 309, 575, 428, 3861, 9952, 293, 309, 575, 281, 352, 1401, 746, 490, 257, 51392, 51392, 8149, 309, 311, 445, 510, 311, 257, 3991, 510, 291, 352, 293, 294, 1186, 1670, 309, 311, 370, 2199, 309, 311, 445, 3760, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.016380972188452015, "compression_ratio": 1.8037383177570094, "no_caption_prob": 5.475742000271566e-05}, {"id": 230, "seek": 152708, "start": 1527.08, "end": 1533.72, "text": " files why don't we distribute those files across a lot of networks across the world so we can serve", "tokens": [50364, 7098, 983, 500, 380, 321, 20594, 729, 7098, 2108, 257, 688, 295, 9590, 2108, 264, 1002, 370, 321, 393, 4596, 50696, 50696, 309, 281, 291, 490, 264, 13699, 3209, 370, 498, 291, 434, 294, 361, 3140, 321, 434, 406, 516, 281, 4596, 309, 281, 291, 490, 264, 50976, 50976, 10648, 8684, 295, 16116, 2262, 293, 11964, 25650, 321, 393, 4596, 309, 493, 490, 264, 23831, 1412, 10898, 570, 309, 311, 51256, 51256, 445, 3736, 2902, 291, 257, 3991, 300, 311, 322, 264, 12355, 370, 309, 393, 360, 300, 4664, 19621, 300, 311, 51556, 51556, 411, 8148, 490, 264, 4691, 370, 4033, 456, 366, 5311, 281, 300, 406, 281, 2152, 300, 291, 393, 360, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.03278843154255141, "compression_ratio": 1.9182879377431907, "no_caption_prob": 2.04624066100223e-05}, {"id": 231, "seek": 152708, "start": 1533.72, "end": 1539.32, "text": " it to you from the closest network so if you're in japan we're not going to serve it to you from the", "tokens": [50364, 7098, 983, 500, 380, 321, 20594, 729, 7098, 2108, 257, 688, 295, 9590, 2108, 264, 1002, 370, 321, 393, 4596, 50696, 50696, 309, 281, 291, 490, 264, 13699, 3209, 370, 498, 291, 434, 294, 361, 3140, 321, 434, 406, 516, 281, 4596, 309, 281, 291, 490, 264, 50976, 50976, 10648, 8684, 295, 16116, 2262, 293, 11964, 25650, 321, 393, 4596, 309, 493, 490, 264, 23831, 1412, 10898, 570, 309, 311, 51256, 51256, 445, 3736, 2902, 291, 257, 3991, 300, 311, 322, 264, 12355, 370, 309, 393, 360, 300, 4664, 19621, 300, 311, 51556, 51556, 411, 8148, 490, 264, 4691, 370, 4033, 456, 366, 5311, 281, 300, 406, 281, 2152, 300, 291, 393, 360, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.03278843154255141, "compression_ratio": 1.9182879377431907, "no_caption_prob": 2.04624066100223e-05}, {"id": 232, "seek": 152708, "start": 1539.32, "end": 1544.9199999999998, "text": " east coast of america and vice versa we can serve it up from the nearest data centers because it's", "tokens": [50364, 7098, 983, 500, 380, 321, 20594, 729, 7098, 2108, 257, 688, 295, 9590, 2108, 264, 1002, 370, 321, 393, 4596, 50696, 50696, 309, 281, 291, 490, 264, 13699, 3209, 370, 498, 291, 434, 294, 361, 3140, 321, 434, 406, 516, 281, 4596, 309, 281, 291, 490, 264, 50976, 50976, 10648, 8684, 295, 16116, 2262, 293, 11964, 25650, 321, 393, 4596, 309, 493, 490, 264, 23831, 1412, 10898, 570, 309, 311, 51256, 51256, 445, 3736, 2902, 291, 257, 3991, 300, 311, 322, 264, 12355, 370, 309, 393, 360, 300, 4664, 19621, 300, 311, 51556, 51556, 411, 8148, 490, 264, 4691, 370, 4033, 456, 366, 5311, 281, 300, 406, 281, 2152, 300, 291, 393, 360, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.03278843154255141, "compression_ratio": 1.9182879377431907, "no_caption_prob": 2.04624066100223e-05}, {"id": 233, "seek": 152708, "start": 1544.9199999999998, "end": 1550.9199999999998, "text": " just literally giving you a file that's on the disk so it can do that extremely efficiently that's", "tokens": [50364, 7098, 983, 500, 380, 321, 20594, 729, 7098, 2108, 257, 688, 295, 9590, 2108, 264, 1002, 370, 321, 393, 4596, 50696, 50696, 309, 281, 291, 490, 264, 13699, 3209, 370, 498, 291, 434, 294, 361, 3140, 321, 434, 406, 516, 281, 4596, 309, 281, 291, 490, 264, 50976, 50976, 10648, 8684, 295, 16116, 2262, 293, 11964, 25650, 321, 393, 4596, 309, 493, 490, 264, 23831, 1412, 10898, 570, 309, 311, 51256, 51256, 445, 3736, 2902, 291, 257, 3991, 300, 311, 322, 264, 12355, 370, 309, 393, 360, 300, 4664, 19621, 300, 311, 51556, 51556, 411, 8148, 490, 264, 4691, 370, 4033, 456, 366, 5311, 281, 300, 406, 281, 2152, 300, 291, 393, 360, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.03278843154255141, "compression_ratio": 1.9182879377431907, "no_caption_prob": 2.04624066100223e-05}, {"id": 234, "seek": 152708, "start": 1550.9199999999998, "end": 1556.52, "text": " like serving from the edge so anyway there are benefits to that not to mention that you can do", "tokens": [50364, 7098, 983, 500, 380, 321, 20594, 729, 7098, 2108, 257, 688, 295, 9590, 2108, 264, 1002, 370, 321, 393, 4596, 50696, 50696, 309, 281, 291, 490, 264, 13699, 3209, 370, 498, 291, 434, 294, 361, 3140, 321, 434, 406, 516, 281, 4596, 309, 281, 291, 490, 264, 50976, 50976, 10648, 8684, 295, 16116, 2262, 293, 11964, 25650, 321, 393, 4596, 309, 493, 490, 264, 23831, 1412, 10898, 570, 309, 311, 51256, 51256, 445, 3736, 2902, 291, 257, 3991, 300, 311, 322, 264, 12355, 370, 309, 393, 360, 300, 4664, 19621, 300, 311, 51556, 51556, 411, 8148, 490, 264, 4691, 370, 4033, 456, 366, 5311, 281, 300, 406, 281, 2152, 300, 291, 393, 360, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.03278843154255141, "compression_ratio": 1.9182879377431907, "no_caption_prob": 2.04624066100223e-05}, {"id": 235, "seek": 155652, "start": 1556.52, "end": 1561.8799999999999, "text": " data source dot and then so you can get the listing of all of these things and then you can go get", "tokens": [50364, 1412, 4009, 5893, 293, 550, 370, 291, 393, 483, 264, 22161, 295, 439, 295, 613, 721, 293, 550, 291, 393, 352, 483, 50632, 50632, 1524, 493, 276, 83, 79, 12475, 337, 1184, 295, 729, 293, 300, 1412, 307, 439, 733, 295, 16743, 770, 666, 341, 361, 3015, 3991, 50988, 50988, 370, 754, 1673, 291, 4114, 293, 550, 293, 630, 439, 613, 1524, 322, 12475, 562, 309, 15182, 309, 309, 311, 51284, 51284, 439, 445, 456, 370, 309, 445, 1709, 293, 30028, 309, 309, 1177, 380, 643, 281, 1699, 337, 300, 27848, 295, 12475, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.05162378193176899, "compression_ratio": 1.8666666666666667, "no_caption_prob": 2.429941378068179e-05}, {"id": 236, "seek": 155652, "start": 1561.8799999999999, "end": 1569.0, "text": " follow up htp requests for each of those and that data is all kind of aggregated into this json file", "tokens": [50364, 1412, 4009, 5893, 293, 550, 370, 291, 393, 483, 264, 22161, 295, 439, 295, 613, 721, 293, 550, 291, 393, 352, 483, 50632, 50632, 1524, 493, 276, 83, 79, 12475, 337, 1184, 295, 729, 293, 300, 1412, 307, 439, 733, 295, 16743, 770, 666, 341, 361, 3015, 3991, 50988, 50988, 370, 754, 1673, 291, 4114, 293, 550, 293, 630, 439, 613, 1524, 322, 12475, 562, 309, 15182, 309, 309, 311, 51284, 51284, 439, 445, 456, 370, 309, 445, 1709, 293, 30028, 309, 309, 1177, 380, 643, 281, 1699, 337, 300, 27848, 295, 12475, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.05162378193176899, "compression_ratio": 1.8666666666666667, "no_caption_prob": 2.429941378068179e-05}, {"id": 237, "seek": 155652, "start": 1569.0, "end": 1574.92, "text": " so even though you wrote and then and did all these follow on requests when it builds it it's", "tokens": [50364, 1412, 4009, 5893, 293, 550, 370, 291, 393, 483, 264, 22161, 295, 439, 295, 613, 721, 293, 550, 291, 393, 352, 483, 50632, 50632, 1524, 493, 276, 83, 79, 12475, 337, 1184, 295, 729, 293, 300, 1412, 307, 439, 733, 295, 16743, 770, 666, 341, 361, 3015, 3991, 50988, 50988, 370, 754, 1673, 291, 4114, 293, 550, 293, 630, 439, 613, 1524, 322, 12475, 562, 309, 15182, 309, 309, 311, 51284, 51284, 439, 445, 456, 370, 309, 445, 1709, 293, 30028, 309, 309, 1177, 380, 643, 281, 1699, 337, 300, 27848, 295, 12475, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.05162378193176899, "compression_ratio": 1.8666666666666667, "no_caption_prob": 2.429941378068179e-05}, {"id": 238, "seek": 155652, "start": 1574.92, "end": 1580.92, "text": " all just there so it just goes and grabs it it doesn't need to wait for that waterfall of requests", "tokens": [50364, 1412, 4009, 5893, 293, 550, 370, 291, 393, 483, 264, 22161, 295, 439, 295, 613, 721, 293, 550, 291, 393, 352, 483, 50632, 50632, 1524, 493, 276, 83, 79, 12475, 337, 1184, 295, 729, 293, 300, 1412, 307, 439, 733, 295, 16743, 770, 666, 341, 361, 3015, 3991, 50988, 50988, 370, 754, 1673, 291, 4114, 293, 550, 293, 630, 439, 613, 1524, 322, 12475, 562, 309, 15182, 309, 309, 311, 51284, 51284, 439, 445, 456, 370, 309, 445, 1709, 293, 30028, 309, 309, 1177, 380, 643, 281, 1699, 337, 300, 27848, 295, 12475, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.05162378193176899, "compression_ratio": 1.8666666666666667, "no_caption_prob": 2.429941378068179e-05}, {"id": 239, "seek": 158092, "start": 1580.92, "end": 1588.52, "text": " so um so i think that's pretty cool also um the uh so elm pages you will probably notice if you", "tokens": [50364, 370, 1105, 370, 741, 519, 300, 311, 1238, 1627, 611, 1105, 264, 2232, 370, 806, 76, 7183, 291, 486, 1391, 3449, 498, 291, 50744, 50744, 498, 291, 862, 926, 365, 806, 76, 7183, 300, 456, 311, 341, 10088, 1219, 26941, 979, 19866, 370, 741, 356, 296, 630, 512, 51160, 51160, 4651, 589, 322, 300, 2232, 1338, 741, 356, 296, 3161, 9766, 307, 415, 274, 9349, 741, 519, 415, 311, 490, 989, 70, 2197, 1954, 1627, 1392, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.10453461408615113, "compression_ratio": 1.6298342541436464, "no_caption_prob": 6.501871393993497e-05}, {"id": 240, "seek": 158092, "start": 1588.52, "end": 1596.8400000000001, "text": " if you play around with elm pages that there's this module called optimized decoder so ilyas did some", "tokens": [50364, 370, 1105, 370, 741, 519, 300, 311, 1238, 1627, 611, 1105, 264, 2232, 370, 806, 76, 7183, 291, 486, 1391, 3449, 498, 291, 50744, 50744, 498, 291, 862, 926, 365, 806, 76, 7183, 300, 456, 311, 341, 10088, 1219, 26941, 979, 19866, 370, 741, 356, 296, 630, 512, 51160, 51160, 4651, 589, 322, 300, 2232, 1338, 741, 356, 296, 3161, 9766, 307, 415, 274, 9349, 741, 519, 415, 311, 490, 989, 70, 2197, 1954, 1627, 1392, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.10453461408615113, "compression_ratio": 1.6298342541436464, "no_caption_prob": 6.501871393993497e-05}, {"id": 241, "seek": 158092, "start": 1596.8400000000001, "end": 1604.68, "text": " incredible work on that uh yeah ilyas van pier is he dutch i think he's from belgium oh cool okay", "tokens": [50364, 370, 1105, 370, 741, 519, 300, 311, 1238, 1627, 611, 1105, 264, 2232, 370, 806, 76, 7183, 291, 486, 1391, 3449, 498, 291, 50744, 50744, 498, 291, 862, 926, 365, 806, 76, 7183, 300, 456, 311, 341, 10088, 1219, 26941, 979, 19866, 370, 741, 356, 296, 630, 512, 51160, 51160, 4651, 589, 322, 300, 2232, 1338, 741, 356, 296, 3161, 9766, 307, 415, 274, 9349, 741, 519, 415, 311, 490, 989, 70, 2197, 1954, 1627, 1392, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.10453461408615113, "compression_ratio": 1.6298342541436464, "no_caption_prob": 6.501871393993497e-05}, {"id": 242, "seek": 160468, "start": 1604.68, "end": 1611.3200000000002, "text": " or is dutch and uh well i'll leave the correct pronunciation to you but uh but yeah so i don't", "tokens": [50364, 420, 307, 274, 9349, 293, 2232, 731, 741, 603, 1856, 264, 3006, 23338, 281, 291, 457, 2232, 457, 1338, 370, 741, 500, 380, 50696, 50696, 1604, 321, 1907, 341, 1657, 264, 1036, 565, 2232, 321, 2825, 466, 322, 7183, 457, 1338, 741, 741, 1105, 741, 1866, 51000, 51000, 741, 356, 296, 311, 361, 3015, 979, 1429, 16197, 7372, 293, 5694, 300, 309, 309, 393, 12286, 291, 498, 291, 362, 44383, 361, 3015, 51400, 51428, 1412, 370, 498, 291, 498, 291, 362, 512, 361, 3015, 294, 257, 294, 257, 4134, 293, 291, 500, 380, 14732, 309, 550, 309, 309, 5112, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.07753095349061837, "compression_ratio": 1.761467889908257, "no_caption_prob": 3.269613080192357e-05}, {"id": 243, "seek": 160468, "start": 1611.3200000000002, "end": 1617.4, "text": " remember we told this story the last time uh we talked about on pages but yeah i i um i saw", "tokens": [50364, 420, 307, 274, 9349, 293, 2232, 731, 741, 603, 1856, 264, 3006, 23338, 281, 291, 457, 2232, 457, 1338, 370, 741, 500, 380, 50696, 50696, 1604, 321, 1907, 341, 1657, 264, 1036, 565, 2232, 321, 2825, 466, 322, 7183, 457, 1338, 741, 741, 1105, 741, 1866, 51000, 51000, 741, 356, 296, 311, 361, 3015, 979, 1429, 16197, 7372, 293, 5694, 300, 309, 309, 393, 12286, 291, 498, 291, 362, 44383, 361, 3015, 51400, 51428, 1412, 370, 498, 291, 498, 291, 362, 512, 361, 3015, 294, 257, 294, 257, 4134, 293, 291, 500, 380, 14732, 309, 550, 309, 309, 5112, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.07753095349061837, "compression_ratio": 1.761467889908257, "no_caption_prob": 3.269613080192357e-05}, {"id": 244, "seek": 160468, "start": 1617.4, "end": 1625.4, "text": " ilyas's json decode exploration package and noticed that it it can warn you if you have unused json", "tokens": [50364, 420, 307, 274, 9349, 293, 2232, 731, 741, 603, 1856, 264, 3006, 23338, 281, 291, 457, 2232, 457, 1338, 370, 741, 500, 380, 50696, 50696, 1604, 321, 1907, 341, 1657, 264, 1036, 565, 2232, 321, 2825, 466, 322, 7183, 457, 1338, 741, 741, 1105, 741, 1866, 51000, 51000, 741, 356, 296, 311, 361, 3015, 979, 1429, 16197, 7372, 293, 5694, 300, 309, 309, 393, 12286, 291, 498, 291, 362, 44383, 361, 3015, 51400, 51428, 1412, 370, 498, 291, 498, 291, 362, 512, 361, 3015, 294, 257, 294, 257, 4134, 293, 291, 500, 380, 14732, 309, 550, 309, 309, 5112, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.07753095349061837, "compression_ratio": 1.761467889908257, "no_caption_prob": 3.269613080192357e-05}, {"id": 245, "seek": 160468, "start": 1625.96, "end": 1632.1200000000001, "text": " data so if you if you have some json in a in a response and you don't consume it then it it tells", "tokens": [50364, 420, 307, 274, 9349, 293, 2232, 731, 741, 603, 1856, 264, 3006, 23338, 281, 291, 457, 2232, 457, 1338, 370, 741, 500, 380, 50696, 50696, 1604, 321, 1907, 341, 1657, 264, 1036, 565, 2232, 321, 2825, 466, 322, 7183, 457, 1338, 741, 741, 1105, 741, 1866, 51000, 51000, 741, 356, 296, 311, 361, 3015, 979, 1429, 16197, 7372, 293, 5694, 300, 309, 309, 393, 12286, 291, 498, 291, 362, 44383, 361, 3015, 51400, 51428, 1412, 370, 498, 291, 498, 291, 362, 512, 361, 3015, 294, 257, 294, 257, 4134, 293, 291, 500, 380, 14732, 309, 550, 309, 309, 5112, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.07753095349061837, "compression_ratio": 1.761467889908257, "no_caption_prob": 3.269613080192357e-05}, {"id": 246, "seek": 163212, "start": 1632.12, "end": 1637.0, "text": " you and gives you a warning and i'm like that's interesting because i've been thinking it would", "tokens": [50364, 291, 293, 2709, 291, 257, 9164, 293, 741, 478, 411, 300, 311, 1880, 570, 741, 600, 668, 1953, 309, 576, 50608, 50608, 312, 534, 1627, 281, 1066, 2837, 295, 264, 361, 3015, 300, 311, 1143, 293, 406, 293, 12828, 484, 264, 44383, 361, 3015, 1412, 50916, 50916, 293, 741, 741, 390, 445, 741, 445, 2082, 2980, 741, 356, 296, 293, 848, 741, 2441, 498, 300, 311, 1944, 293, 550, 3736, 411, 51184, 51184, 300, 912, 786, 415, 311, 411, 1954, 741, 3737, 926, 365, 309, 293, 291, 3879, 393, 293, 510, 309, 307, 51416, 51468, 1481, 597, 741, 1194, 390, 4651, 457, 1338, 370, 300, 311, 264, 34889, 295, 264, 26941, 979, 19866, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.03359126840901171, "compression_ratio": 1.8007662835249043, "no_caption_prob": 3.321217081975192e-05}, {"id": 247, "seek": 163212, "start": 1637.0, "end": 1643.1599999999999, "text": " be really cool to keep track of the json that's used and not and strip out the unused json data", "tokens": [50364, 291, 293, 2709, 291, 257, 9164, 293, 741, 478, 411, 300, 311, 1880, 570, 741, 600, 668, 1953, 309, 576, 50608, 50608, 312, 534, 1627, 281, 1066, 2837, 295, 264, 361, 3015, 300, 311, 1143, 293, 406, 293, 12828, 484, 264, 44383, 361, 3015, 1412, 50916, 50916, 293, 741, 741, 390, 445, 741, 445, 2082, 2980, 741, 356, 296, 293, 848, 741, 2441, 498, 300, 311, 1944, 293, 550, 3736, 411, 51184, 51184, 300, 912, 786, 415, 311, 411, 1954, 741, 3737, 926, 365, 309, 293, 291, 3879, 393, 293, 510, 309, 307, 51416, 51468, 1481, 597, 741, 1194, 390, 4651, 457, 1338, 370, 300, 311, 264, 34889, 295, 264, 26941, 979, 19866, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.03359126840901171, "compression_ratio": 1.8007662835249043, "no_caption_prob": 3.321217081975192e-05}, {"id": 248, "seek": 163212, "start": 1643.1599999999999, "end": 1648.52, "text": " and i i was just i just messaged ilyas and said i wonder if that's possible and then literally like", "tokens": [50364, 291, 293, 2709, 291, 257, 9164, 293, 741, 478, 411, 300, 311, 1880, 570, 741, 600, 668, 1953, 309, 576, 50608, 50608, 312, 534, 1627, 281, 1066, 2837, 295, 264, 361, 3015, 300, 311, 1143, 293, 406, 293, 12828, 484, 264, 44383, 361, 3015, 1412, 50916, 50916, 293, 741, 741, 390, 445, 741, 445, 2082, 2980, 741, 356, 296, 293, 848, 741, 2441, 498, 300, 311, 1944, 293, 550, 3736, 411, 51184, 51184, 300, 912, 786, 415, 311, 411, 1954, 741, 3737, 926, 365, 309, 293, 291, 3879, 393, 293, 510, 309, 307, 51416, 51468, 1481, 597, 741, 1194, 390, 4651, 457, 1338, 370, 300, 311, 264, 34889, 295, 264, 26941, 979, 19866, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.03359126840901171, "compression_ratio": 1.8007662835249043, "no_caption_prob": 3.321217081975192e-05}, {"id": 249, "seek": 163212, "start": 1648.52, "end": 1653.1599999999999, "text": " that same day he's like oh i played around with it and you totally can and here it is", "tokens": [50364, 291, 293, 2709, 291, 257, 9164, 293, 741, 478, 411, 300, 311, 1880, 570, 741, 600, 668, 1953, 309, 576, 50608, 50608, 312, 534, 1627, 281, 1066, 2837, 295, 264, 361, 3015, 300, 311, 1143, 293, 406, 293, 12828, 484, 264, 44383, 361, 3015, 1412, 50916, 50916, 293, 741, 741, 390, 445, 741, 445, 2082, 2980, 741, 356, 296, 293, 848, 741, 2441, 498, 300, 311, 1944, 293, 550, 3736, 411, 51184, 51184, 300, 912, 786, 415, 311, 411, 1954, 741, 3737, 926, 365, 309, 293, 291, 3879, 393, 293, 510, 309, 307, 51416, 51468, 1481, 597, 741, 1194, 390, 4651, 457, 1338, 370, 300, 311, 264, 34889, 295, 264, 26941, 979, 19866, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.03359126840901171, "compression_ratio": 1.8007662835249043, "no_caption_prob": 3.321217081975192e-05}, {"id": 250, "seek": 163212, "start": 1654.1999999999998, "end": 1659.1599999999999, "text": " nice which i thought was incredible but yeah so that's the backbone of the optimized decoder", "tokens": [50364, 291, 293, 2709, 291, 257, 9164, 293, 741, 478, 411, 300, 311, 1880, 570, 741, 600, 668, 1953, 309, 576, 50608, 50608, 312, 534, 1627, 281, 1066, 2837, 295, 264, 361, 3015, 300, 311, 1143, 293, 406, 293, 12828, 484, 264, 44383, 361, 3015, 1412, 50916, 50916, 293, 741, 741, 390, 445, 741, 445, 2082, 2980, 741, 356, 296, 293, 848, 741, 2441, 498, 300, 311, 1944, 293, 550, 3736, 411, 51184, 51184, 300, 912, 786, 415, 311, 411, 1954, 741, 3737, 926, 365, 309, 293, 291, 3879, 393, 293, 510, 309, 307, 51416, 51468, 1481, 597, 741, 1194, 390, 4651, 457, 1338, 370, 300, 311, 264, 34889, 295, 264, 26941, 979, 19866, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.03359126840901171, "compression_ratio": 1.8007662835249043, "no_caption_prob": 3.321217081975192e-05}, {"id": 251, "seek": 165916, "start": 1659.16, "end": 1665.96, "text": " api so what it does is it um when you're running it at at build time it's going to go to the extra", "tokens": [50364, 1882, 72, 370, 437, 309, 775, 307, 309, 1105, 562, 291, 434, 2614, 309, 412, 412, 1322, 565, 309, 311, 516, 281, 352, 281, 264, 2857, 50704, 50704, 4630, 597, 2232, 307, 257, 707, 857, 544, 5124, 813, 2614, 257, 17528, 361, 3015, 979, 19866, 309, 311, 516, 50924, 50924, 281, 352, 281, 264, 2857, 4630, 295, 5145, 2837, 295, 597, 361, 3015, 1412, 294, 294, 264, 361, 3015, 46115, 300, 291, 600, 51264, 51264, 21226, 1228, 257, 979, 19866, 370, 498, 291, 360, 979, 1429, 979, 1429, 5893, 2519, 1315, 586, 309, 3255, 300, 300, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.029934463500976564, "compression_ratio": 1.8894472361809045, "no_caption_prob": 8.349106792593375e-05}, {"id": 252, "seek": 165916, "start": 1665.96, "end": 1670.3600000000001, "text": " effort which uh is a little bit more expensive than running a vanilla json decoder it's going", "tokens": [50364, 1882, 72, 370, 437, 309, 775, 307, 309, 1105, 562, 291, 434, 2614, 309, 412, 412, 1322, 565, 309, 311, 516, 281, 352, 281, 264, 2857, 50704, 50704, 4630, 597, 2232, 307, 257, 707, 857, 544, 5124, 813, 2614, 257, 17528, 361, 3015, 979, 19866, 309, 311, 516, 50924, 50924, 281, 352, 281, 264, 2857, 4630, 295, 5145, 2837, 295, 597, 361, 3015, 1412, 294, 294, 264, 361, 3015, 46115, 300, 291, 600, 51264, 51264, 21226, 1228, 257, 979, 19866, 370, 498, 291, 360, 979, 1429, 979, 1429, 5893, 2519, 1315, 586, 309, 3255, 300, 300, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.029934463500976564, "compression_ratio": 1.8894472361809045, "no_caption_prob": 8.349106792593375e-05}, {"id": 253, "seek": 165916, "start": 1670.3600000000001, "end": 1677.16, "text": " to go to the extra effort of keeping track of which json data in in the json blob that you've", "tokens": [50364, 1882, 72, 370, 437, 309, 775, 307, 309, 1105, 562, 291, 434, 2614, 309, 412, 412, 1322, 565, 309, 311, 516, 281, 352, 281, 264, 2857, 50704, 50704, 4630, 597, 2232, 307, 257, 707, 857, 544, 5124, 813, 2614, 257, 17528, 361, 3015, 979, 19866, 309, 311, 516, 50924, 50924, 281, 352, 281, 264, 2857, 4630, 295, 5145, 2837, 295, 597, 361, 3015, 1412, 294, 294, 264, 361, 3015, 46115, 300, 291, 600, 51264, 51264, 21226, 1228, 257, 979, 19866, 370, 498, 291, 360, 979, 1429, 979, 1429, 5893, 2519, 1315, 586, 309, 3255, 300, 300, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.029934463500976564, "compression_ratio": 1.8894472361809045, "no_caption_prob": 8.349106792593375e-05}, {"id": 254, "seek": 165916, "start": 1677.16, "end": 1683.48, "text": " consumed using a decoder so if you do decode decode dot field name now it knows that that", "tokens": [50364, 1882, 72, 370, 437, 309, 775, 307, 309, 1105, 562, 291, 434, 2614, 309, 412, 412, 1322, 565, 309, 311, 516, 281, 352, 281, 264, 2857, 50704, 50704, 4630, 597, 2232, 307, 257, 707, 857, 544, 5124, 813, 2614, 257, 17528, 361, 3015, 979, 19866, 309, 311, 516, 50924, 50924, 281, 352, 281, 264, 2857, 4630, 295, 5145, 2837, 295, 597, 361, 3015, 1412, 294, 294, 264, 361, 3015, 46115, 300, 291, 600, 51264, 51264, 21226, 1228, 257, 979, 19866, 370, 498, 291, 360, 979, 1429, 979, 1429, 5893, 2519, 1315, 586, 309, 3255, 300, 300, 51580, 51580], "temperature": 0.0, "avg_logprob": -0.029934463500976564, "compression_ratio": 1.8894472361809045, "no_caption_prob": 8.349106792593375e-05}, {"id": 255, "seek": 168348, "start": 1683.48, "end": 1690.84, "text": " field has been consumed if you do you know decode dot index one it knows that array index was consumed", "tokens": [50364, 2519, 575, 668, 21226, 498, 291, 360, 291, 458, 979, 1429, 5893, 8186, 472, 309, 3255, 300, 10225, 8186, 390, 21226, 50732, 50732, 293, 309, 767, 486, 18184, 484, 604, 1412, 300, 309, 994, 380, 643, 281, 14732, 337, 1365, 370, 309, 311, 309, 311, 50956, 50956, 1238, 16950, 4878, 309, 311, 611, 1238, 2199, 597, 307, 983, 806, 76, 307, 4651, 570, 309, 51300, 51300, 575, 341, 34382, 293, 370, 291, 393, 652, 613, 3685, 295, 5028, 14455, 370, 300, 311, 2232, 309, 311, 884, 300, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.04216653698093289, "compression_ratio": 1.7354260089686098, "no_caption_prob": 4.331714808358811e-05}, {"id": 256, "seek": 168348, "start": 1690.84, "end": 1695.32, "text": " and it actually will null out any data that it didn't need to consume for example so it's it's", "tokens": [50364, 2519, 575, 668, 21226, 498, 291, 360, 291, 458, 979, 1429, 5893, 8186, 472, 309, 3255, 300, 10225, 8186, 390, 21226, 50732, 50732, 293, 309, 767, 486, 18184, 484, 604, 1412, 300, 309, 994, 380, 643, 281, 14732, 337, 1365, 370, 309, 311, 309, 311, 50956, 50956, 1238, 16950, 4878, 309, 311, 611, 1238, 2199, 597, 307, 983, 806, 76, 307, 4651, 570, 309, 51300, 51300, 575, 341, 34382, 293, 370, 291, 393, 652, 613, 3685, 295, 5028, 14455, 370, 300, 311, 2232, 309, 311, 884, 300, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.04216653698093289, "compression_ratio": 1.7354260089686098, "no_caption_prob": 4.331714808358811e-05}, {"id": 257, "seek": 168348, "start": 1695.32, "end": 1702.2, "text": " pretty sophisticated although it's also pretty simple which is why elm is incredible because it", "tokens": [50364, 2519, 575, 668, 21226, 498, 291, 360, 291, 458, 979, 1429, 5893, 8186, 472, 309, 3255, 300, 10225, 8186, 390, 21226, 50732, 50732, 293, 309, 767, 486, 18184, 484, 604, 1412, 300, 309, 994, 380, 643, 281, 14732, 337, 1365, 370, 309, 311, 309, 311, 50956, 50956, 1238, 16950, 4878, 309, 311, 611, 1238, 2199, 597, 307, 983, 806, 76, 307, 4651, 570, 309, 51300, 51300, 575, 341, 34382, 293, 370, 291, 393, 652, 613, 3685, 295, 5028, 14455, 370, 300, 311, 2232, 309, 311, 884, 300, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.04216653698093289, "compression_ratio": 1.7354260089686098, "no_caption_prob": 4.331714808358811e-05}, {"id": 258, "seek": 168348, "start": 1702.2, "end": 1708.04, "text": " has this purity and so you can make these kinds of optimizations so that's uh it's doing that", "tokens": [50364, 2519, 575, 668, 21226, 498, 291, 360, 291, 458, 979, 1429, 5893, 8186, 472, 309, 3255, 300, 10225, 8186, 390, 21226, 50732, 50732, 293, 309, 767, 486, 18184, 484, 604, 1412, 300, 309, 994, 380, 643, 281, 14732, 337, 1365, 370, 309, 311, 309, 311, 50956, 50956, 1238, 16950, 4878, 309, 311, 611, 1238, 2199, 597, 307, 983, 806, 76, 307, 4651, 570, 309, 51300, 51300, 575, 341, 34382, 293, 370, 291, 393, 652, 613, 3685, 295, 5028, 14455, 370, 300, 311, 2232, 309, 311, 884, 300, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.04216653698093289, "compression_ratio": 1.7354260089686098, "no_caption_prob": 4.331714808358811e-05}, {"id": 259, "seek": 170804, "start": 1708.04, "end": 1714.2, "text": " work in the build step in the in the runtime when the user is running it in their browser", "tokens": [50364, 589, 294, 264, 1322, 1823, 294, 264, 294, 264, 34474, 562, 264, 4195, 307, 2614, 309, 294, 641, 11185, 50672, 50672, 309, 445, 6676, 257, 17528, 361, 3015, 979, 19866, 337, 264, 3389, 370, 291, 500, 380, 35774, 264, 2063, 295, 2614, 51016, 51016, 300, 26941, 979, 19866, 457, 294, 264, 1322, 1823, 309, 9624, 484, 597, 361, 3015, 7909, 291, 1143, 293, 19842, 51348, 51348, 766, 604, 44383, 7909, 597, 307, 1238, 297, 37177, 370, 300, 300, 1487, 337, 1737, 309, 19842, 484, 264, 51580, 51616], "temperature": 0.0, "avg_logprob": -0.035466228978017746, "compression_ratio": 1.8507462686567164, "no_caption_prob": 5.561978105106391e-05}, {"id": 260, "seek": 170804, "start": 1714.2, "end": 1721.08, "text": " it just runs a vanilla json decoder for the performance so you don't incur the cost of running", "tokens": [50364, 589, 294, 264, 1322, 1823, 294, 264, 294, 264, 34474, 562, 264, 4195, 307, 2614, 309, 294, 641, 11185, 50672, 50672, 309, 445, 6676, 257, 17528, 361, 3015, 979, 19866, 337, 264, 3389, 370, 291, 500, 380, 35774, 264, 2063, 295, 2614, 51016, 51016, 300, 26941, 979, 19866, 457, 294, 264, 1322, 1823, 309, 9624, 484, 597, 361, 3015, 7909, 291, 1143, 293, 19842, 51348, 51348, 766, 604, 44383, 7909, 597, 307, 1238, 297, 37177, 370, 300, 300, 1487, 337, 1737, 309, 19842, 484, 264, 51580, 51616], "temperature": 0.0, "avg_logprob": -0.035466228978017746, "compression_ratio": 1.8507462686567164, "no_caption_prob": 5.561978105106391e-05}, {"id": 261, "seek": 170804, "start": 1721.08, "end": 1727.72, "text": " that optimized decoder but in the build step it figures out which json fields you used and strips", "tokens": [50364, 589, 294, 264, 1322, 1823, 294, 264, 294, 264, 34474, 562, 264, 4195, 307, 2614, 309, 294, 641, 11185, 50672, 50672, 309, 445, 6676, 257, 17528, 361, 3015, 979, 19866, 337, 264, 3389, 370, 291, 500, 380, 35774, 264, 2063, 295, 2614, 51016, 51016, 300, 26941, 979, 19866, 457, 294, 264, 1322, 1823, 309, 9624, 484, 597, 361, 3015, 7909, 291, 1143, 293, 19842, 51348, 51348, 766, 604, 44383, 7909, 597, 307, 1238, 297, 37177, 370, 300, 300, 1487, 337, 1737, 309, 19842, 484, 264, 51580, 51616], "temperature": 0.0, "avg_logprob": -0.035466228978017746, "compression_ratio": 1.8507462686567164, "no_caption_prob": 5.561978105106391e-05}, {"id": 262, "seek": 170804, "start": 1727.72, "end": 1732.36, "text": " off any unused fields which is pretty nifty so that that comes for free it strips out the", "tokens": [50364, 589, 294, 264, 1322, 1823, 294, 264, 294, 264, 34474, 562, 264, 4195, 307, 2614, 309, 294, 641, 11185, 50672, 50672, 309, 445, 6676, 257, 17528, 361, 3015, 979, 19866, 337, 264, 3389, 370, 291, 500, 380, 35774, 264, 2063, 295, 2614, 51016, 51016, 300, 26941, 979, 19866, 457, 294, 264, 1322, 1823, 309, 9624, 484, 597, 361, 3015, 7909, 291, 1143, 293, 19842, 51348, 51348, 766, 604, 44383, 7909, 597, 307, 1238, 297, 37177, 370, 300, 300, 1487, 337, 1737, 309, 19842, 484, 264, 51580, 51616], "temperature": 0.0, "avg_logprob": -0.035466228978017746, "compression_ratio": 1.8507462686567164, "no_caption_prob": 5.561978105106391e-05}, {"id": 263, "seek": 173236, "start": 1732.36, "end": 1739.3999999999999, "text": " unused fields from the json that you download when you hover a link when you go to a new page right", "tokens": [50364, 44383, 7909, 490, 264, 361, 3015, 300, 291, 5484, 562, 291, 20076, 257, 2113, 562, 291, 352, 281, 257, 777, 3028, 558, 50716, 50716, 1105, 490, 264, 361, 3015, 294, 257, 1412, 4009, 370, 597, 5314, 493, 885, 300, 361, 3015, 370, 1105, 293, 309, 486, 767, 1105, 51152, 51152, 2232, 309, 486, 767, 22183, 1214, 498, 370, 498, 291, 1027, 1105, 498, 291, 632, 257, 1412, 4009, 884, 364, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.19922645671947584, "compression_ratio": 1.7763975155279503, "no_caption_prob": 8.219751180149615e-05}, {"id": 264, "seek": 173236, "start": 1739.3999999999999, "end": 1748.12, "text": " um from the json in a data source so which ends up being that json so um and it will actually um", "tokens": [50364, 44383, 7909, 490, 264, 361, 3015, 300, 291, 5484, 562, 291, 20076, 257, 2113, 562, 291, 352, 281, 257, 777, 3028, 558, 50716, 50716, 1105, 490, 264, 361, 3015, 294, 257, 1412, 4009, 370, 597, 5314, 493, 885, 300, 361, 3015, 370, 1105, 293, 309, 486, 767, 1105, 51152, 51152, 2232, 309, 486, 767, 22183, 1214, 498, 370, 498, 291, 1027, 1105, 498, 291, 632, 257, 1412, 4009, 884, 364, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.19922645671947584, "compression_ratio": 1.7763975155279503, "no_caption_prob": 8.219751180149615e-05}, {"id": 265, "seek": 173236, "start": 1748.12, "end": 1754.76, "text": " uh it will actually merge together if so if you made um if you had a data source doing an", "tokens": [50364, 44383, 7909, 490, 264, 361, 3015, 300, 291, 5484, 562, 291, 20076, 257, 2113, 562, 291, 352, 281, 257, 777, 3028, 558, 50716, 50716, 1105, 490, 264, 361, 3015, 294, 257, 1412, 4009, 370, 597, 5314, 493, 885, 300, 361, 3015, 370, 1105, 293, 309, 486, 767, 1105, 51152, 51152, 2232, 309, 486, 767, 22183, 1214, 498, 370, 498, 291, 1027, 1105, 498, 291, 632, 257, 1412, 4009, 884, 364, 51484, 51484], "temperature": 0.0, "avg_logprob": -0.19922645671947584, "compression_ratio": 1.7763975155279503, "no_caption_prob": 8.219751180149615e-05}, {"id": 266, "seek": 175476, "start": 1754.76, "end": 1762.36, "text": " http request to the same url two different places and you consumed one field from one of those data", "tokens": [50364, 37428, 5308, 281, 264, 912, 4038, 75, 732, 819, 3190, 293, 291, 21226, 472, 2519, 490, 472, 295, 729, 1412, 50744, 50744, 7139, 293, 1071, 2519, 490, 264, 661, 1412, 4009, 293, 291, 630, 1412, 4009, 5893, 4471, 732, 293, 51008, 51008, 658, 729, 732, 3755, 295, 1412, 1214, 309, 311, 767, 516, 281, 4813, 300, 8944, 293, 51220, 51220, 445, 22183, 309, 666, 257, 2167, 1412, 4009, 365, 264, 21226, 1412, 291, 597, 291, 434, 2928, 570, 309, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.06505894373698407, "compression_ratio": 1.8529411764705883, "no_caption_prob": 2.710759872570634e-05}, {"id": 267, "seek": 175476, "start": 1762.36, "end": 1767.64, "text": " sources and another field from the other data source and you did data source dot map two and", "tokens": [50364, 37428, 5308, 281, 264, 912, 4038, 75, 732, 819, 3190, 293, 291, 21226, 472, 2519, 490, 472, 295, 729, 1412, 50744, 50744, 7139, 293, 1071, 2519, 490, 264, 661, 1412, 4009, 293, 291, 630, 1412, 4009, 5893, 4471, 732, 293, 51008, 51008, 658, 729, 732, 3755, 295, 1412, 1214, 309, 311, 767, 516, 281, 4813, 300, 8944, 293, 51220, 51220, 445, 22183, 309, 666, 257, 2167, 1412, 4009, 365, 264, 21226, 1412, 291, 597, 291, 434, 2928, 570, 309, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.06505894373698407, "compression_ratio": 1.8529411764705883, "no_caption_prob": 2.710759872570634e-05}, {"id": 268, "seek": 175476, "start": 1767.64, "end": 1771.8799999999999, "text": " got those two pieces of data together it's actually going to handle that correctly and", "tokens": [50364, 37428, 5308, 281, 264, 912, 4038, 75, 732, 819, 3190, 293, 291, 21226, 472, 2519, 490, 472, 295, 729, 1412, 50744, 50744, 7139, 293, 1071, 2519, 490, 264, 661, 1412, 4009, 293, 291, 630, 1412, 4009, 5893, 4471, 732, 293, 51008, 51008, 658, 729, 732, 3755, 295, 1412, 1214, 309, 311, 767, 516, 281, 4813, 300, 8944, 293, 51220, 51220, 445, 22183, 309, 666, 257, 2167, 1412, 4009, 365, 264, 21226, 1412, 291, 597, 291, 434, 2928, 570, 309, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.06505894373698407, "compression_ratio": 1.8529411764705883, "no_caption_prob": 2.710759872570634e-05}, {"id": 269, "seek": 175476, "start": 1771.8799999999999, "end": 1777.48, "text": " just merge it into a single data source with the consumed data you which you're welcome because it", "tokens": [50364, 37428, 5308, 281, 264, 912, 4038, 75, 732, 819, 3190, 293, 291, 21226, 472, 2519, 490, 472, 295, 729, 1412, 50744, 50744, 7139, 293, 1071, 2519, 490, 264, 661, 1412, 4009, 293, 291, 630, 1412, 4009, 5893, 4471, 732, 293, 51008, 51008, 658, 729, 732, 3755, 295, 1412, 1214, 309, 311, 767, 516, 281, 4813, 300, 8944, 293, 51220, 51220, 445, 22183, 309, 666, 257, 2167, 1412, 4009, 365, 264, 21226, 1412, 291, 597, 291, 434, 2928, 570, 309, 51500, 51500], "temperature": 0.0, "avg_logprob": -0.06505894373698407, "compression_ratio": 1.8529411764705883, "no_caption_prob": 2.710759872570634e-05}, {"id": 270, "seek": 177748, "start": 1777.48, "end": 1784.76, "text": " was a lot of work no i mean i did it because i couldn't couldn't help but but build these features", "tokens": [50364, 390, 257, 688, 295, 589, 572, 741, 914, 741, 630, 309, 570, 741, 2809, 380, 2809, 380, 854, 457, 457, 1322, 613, 4122, 50728, 50728, 570, 741, 741, 483, 534, 2919, 466, 552, 457, 1105, 457, 1338, 309, 309, 445, 309, 445, 1985, 382, 1400, 382, 291, 434, 51016, 51016, 5922, 457, 456, 366, 439, 613, 5028, 14455, 2737, 833, 264, 13376, 1338, 370, 456, 311, 472, 51232, 51232, 551, 300, 321, 2378, 380, 9828, 322, 3564, 307, 300, 1412, 7139, 366, 623, 77, 19634, 558, 2086, 281, 689, 436, 1361, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.05507685510735763, "compression_ratio": 1.757847533632287, "no_caption_prob": 2.668783417902887e-05}, {"id": 271, "seek": 177748, "start": 1784.76, "end": 1790.52, "text": " because i i get really excited about them but um but yeah it it just it just works as far as you're", "tokens": [50364, 390, 257, 688, 295, 589, 572, 741, 914, 741, 630, 309, 570, 741, 2809, 380, 2809, 380, 854, 457, 457, 1322, 613, 4122, 50728, 50728, 570, 741, 741, 483, 534, 2919, 466, 552, 457, 1105, 457, 1338, 309, 309, 445, 309, 445, 1985, 382, 1400, 382, 291, 434, 51016, 51016, 5922, 457, 456, 366, 439, 613, 5028, 14455, 2737, 833, 264, 13376, 1338, 370, 456, 311, 472, 51232, 51232, 551, 300, 321, 2378, 380, 9828, 322, 3564, 307, 300, 1412, 7139, 366, 623, 77, 19634, 558, 2086, 281, 689, 436, 1361, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.05507685510735763, "compression_ratio": 1.757847533632287, "no_caption_prob": 2.668783417902887e-05}, {"id": 272, "seek": 177748, "start": 1790.52, "end": 1794.84, "text": " concerned but there are all these optimizations happening under the hood yeah so there's one", "tokens": [50364, 390, 257, 688, 295, 589, 572, 741, 914, 741, 630, 309, 570, 741, 2809, 380, 2809, 380, 854, 457, 457, 1322, 613, 4122, 50728, 50728, 570, 741, 741, 483, 534, 2919, 466, 552, 457, 1105, 457, 1338, 309, 309, 445, 309, 445, 1985, 382, 1400, 382, 291, 434, 51016, 51016, 5922, 457, 456, 366, 439, 613, 5028, 14455, 2737, 833, 264, 13376, 1338, 370, 456, 311, 472, 51232, 51232, 551, 300, 321, 2378, 380, 9828, 322, 3564, 307, 300, 1412, 7139, 366, 623, 77, 19634, 558, 2086, 281, 689, 436, 1361, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.05507685510735763, "compression_ratio": 1.757847533632287, "no_caption_prob": 2.668783417902887e-05}, {"id": 273, "seek": 177748, "start": 1794.84, "end": 1801.72, "text": " thing that we haven't touched on upon is that data sources are agnostic right yes to where they came", "tokens": [50364, 390, 257, 688, 295, 589, 572, 741, 914, 741, 630, 309, 570, 741, 2809, 380, 2809, 380, 854, 457, 457, 1322, 613, 4122, 50728, 50728, 570, 741, 741, 483, 534, 2919, 466, 552, 457, 1105, 457, 1338, 309, 309, 445, 309, 445, 1985, 382, 1400, 382, 291, 434, 51016, 51016, 5922, 457, 456, 366, 439, 613, 5028, 14455, 2737, 833, 264, 13376, 1338, 370, 456, 311, 472, 51232, 51232, 551, 300, 321, 2378, 380, 9828, 322, 3564, 307, 300, 1412, 7139, 366, 623, 77, 19634, 558, 2086, 281, 689, 436, 1361, 51576, 51576], "temperature": 0.0, "avg_logprob": -0.05507685510735763, "compression_ratio": 1.757847533632287, "no_caption_prob": 2.668783417902887e-05}, {"id": 274, "seek": 180172, "start": 1801.72, "end": 1809.0, "text": " from yeah um you can have data sources for files data sources for http but what you get is data", "tokens": [50364, 490, 1338, 1105, 291, 393, 362, 1412, 7139, 337, 7098, 1412, 7139, 337, 37428, 457, 437, 291, 483, 307, 1412, 50728, 50728, 4009, 295, 1412, 293, 689, 309, 1361, 490, 420, 577, 291, 658, 309, 420, 577, 309, 390, 16894, 294, 264, 14991, 51060, 51060, 1177, 380, 1871, 370, 291, 393, 10432, 721, 293, 498, 291, 366, 498, 291, 362, 257, 6968, 689, 291, 362, 257, 688, 51424, 51424, 295, 1491, 5093, 7098, 293, 291, 366, 6186, 8754, 552, 472, 538, 472, 281, 257, 269, 2592, 291, 727, 291, 727, 362, 472, 1412, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05775941770101331, "compression_ratio": 1.9113300492610839, "no_caption_prob": 9.609547851141542e-05}, {"id": 275, "seek": 180172, "start": 1809.0, "end": 1815.64, "text": " source of data and where it came from or how you got it or how it was transformed in the meantime", "tokens": [50364, 490, 1338, 1105, 291, 393, 362, 1412, 7139, 337, 7098, 1412, 7139, 337, 37428, 457, 437, 291, 483, 307, 1412, 50728, 50728, 4009, 295, 1412, 293, 689, 309, 1361, 490, 420, 577, 291, 658, 309, 420, 577, 309, 390, 16894, 294, 264, 14991, 51060, 51060, 1177, 380, 1871, 370, 291, 393, 10432, 721, 293, 498, 291, 366, 498, 291, 362, 257, 6968, 689, 291, 362, 257, 688, 51424, 51424, 295, 1491, 5093, 7098, 293, 291, 366, 6186, 8754, 552, 472, 538, 472, 281, 257, 269, 2592, 291, 727, 291, 727, 362, 472, 1412, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05775941770101331, "compression_ratio": 1.9113300492610839, "no_caption_prob": 9.609547851141542e-05}, {"id": 276, "seek": 180172, "start": 1815.64, "end": 1822.92, "text": " doesn't matter so you can combine things and if you are if you have a blog where you have a lot", "tokens": [50364, 490, 1338, 1105, 291, 393, 362, 1412, 7139, 337, 7098, 1412, 7139, 337, 37428, 457, 437, 291, 483, 307, 1412, 50728, 50728, 4009, 295, 1412, 293, 689, 309, 1361, 490, 420, 577, 291, 658, 309, 420, 577, 309, 390, 16894, 294, 264, 14991, 51060, 51060, 1177, 380, 1871, 370, 291, 393, 10432, 721, 293, 498, 291, 366, 498, 291, 362, 257, 6968, 689, 291, 362, 257, 688, 51424, 51424, 295, 1491, 5093, 7098, 293, 291, 366, 6186, 8754, 552, 472, 538, 472, 281, 257, 269, 2592, 291, 727, 291, 727, 362, 472, 1412, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05775941770101331, "compression_ratio": 1.9113300492610839, "no_caption_prob": 9.609547851141542e-05}, {"id": 277, "seek": 180172, "start": 1822.92, "end": 1830.52, "text": " of markdown files and you are migrating them one by one to a cms you could you could have one data", "tokens": [50364, 490, 1338, 1105, 291, 393, 362, 1412, 7139, 337, 7098, 1412, 7139, 337, 37428, 457, 437, 291, 483, 307, 1412, 50728, 50728, 4009, 295, 1412, 293, 689, 309, 1361, 490, 420, 577, 291, 658, 309, 420, 577, 309, 390, 16894, 294, 264, 14991, 51060, 51060, 1177, 380, 1871, 370, 291, 393, 10432, 721, 293, 498, 291, 366, 498, 291, 362, 257, 6968, 689, 291, 362, 257, 688, 51424, 51424, 295, 1491, 5093, 7098, 293, 291, 366, 6186, 8754, 552, 472, 538, 472, 281, 257, 269, 2592, 291, 727, 291, 727, 362, 472, 1412, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.05775941770101331, "compression_ratio": 1.9113300492610839, "no_caption_prob": 9.609547851141542e-05}, {"id": 278, "seek": 183052, "start": 1830.52, "end": 1836.36, "text": " source for all the files one data source for the cms and then combine them maybe having one tick", "tokens": [50364, 4009, 337, 439, 264, 7098, 472, 1412, 4009, 337, 264, 269, 2592, 293, 550, 10432, 552, 1310, 1419, 472, 5204, 50656, 50656, 9365, 670, 1071, 1310, 293, 457, 550, 264, 1472, 295, 264, 9887, 307, 2232, 321, 500, 380, 1127, 689, 309, 51004, 51004, 1361, 490, 321, 393, 1066, 300, 1412, 411, 1392, 341, 1412, 4009, 1361, 490, 37428, 341, 472, 1361, 490, 7098, 51336, 51336, 321, 393, 1066, 300, 1412, 570, 321, 393, 4471, 321, 393, 917, 552, 439, 729, 1412, 457, 321, 500, 380, 362, 281, 1127, 51604, 51636], "temperature": 0.0, "avg_logprob": -0.08620569782872353, "compression_ratio": 1.9601990049751243, "no_caption_prob": 2.0462399334064685e-05}, {"id": 279, "seek": 183052, "start": 1836.36, "end": 1843.32, "text": " priority over another maybe and but then the rest of the transformation is uh we don't care where it", "tokens": [50364, 4009, 337, 439, 264, 7098, 472, 1412, 4009, 337, 264, 269, 2592, 293, 550, 10432, 552, 1310, 1419, 472, 5204, 50656, 50656, 9365, 670, 1071, 1310, 293, 457, 550, 264, 1472, 295, 264, 9887, 307, 2232, 321, 500, 380, 1127, 689, 309, 51004, 51004, 1361, 490, 321, 393, 1066, 300, 1412, 411, 1392, 341, 1412, 4009, 1361, 490, 37428, 341, 472, 1361, 490, 7098, 51336, 51336, 321, 393, 1066, 300, 1412, 570, 321, 393, 4471, 321, 393, 917, 552, 439, 729, 1412, 457, 321, 500, 380, 362, 281, 1127, 51604, 51636], "temperature": 0.0, "avg_logprob": -0.08620569782872353, "compression_ratio": 1.9601990049751243, "no_caption_prob": 2.0462399334064685e-05}, {"id": 280, "seek": 183052, "start": 1843.32, "end": 1849.96, "text": " came from we can keep that data like okay this data source came from http this one came from files", "tokens": [50364, 4009, 337, 439, 264, 7098, 472, 1412, 4009, 337, 264, 269, 2592, 293, 550, 10432, 552, 1310, 1419, 472, 5204, 50656, 50656, 9365, 670, 1071, 1310, 293, 457, 550, 264, 1472, 295, 264, 9887, 307, 2232, 321, 500, 380, 1127, 689, 309, 51004, 51004, 1361, 490, 321, 393, 1066, 300, 1412, 411, 1392, 341, 1412, 4009, 1361, 490, 37428, 341, 472, 1361, 490, 7098, 51336, 51336, 321, 393, 1066, 300, 1412, 570, 321, 393, 4471, 321, 393, 917, 552, 439, 729, 1412, 457, 321, 500, 380, 362, 281, 1127, 51604, 51636], "temperature": 0.0, "avg_logprob": -0.08620569782872353, "compression_ratio": 1.9601990049751243, "no_caption_prob": 2.0462399334064685e-05}, {"id": 281, "seek": 183052, "start": 1849.96, "end": 1855.32, "text": " we can keep that data because we can map we can end them all those data but we don't have to care", "tokens": [50364, 4009, 337, 439, 264, 7098, 472, 1412, 4009, 337, 264, 269, 2592, 293, 550, 10432, 552, 1310, 1419, 472, 5204, 50656, 50656, 9365, 670, 1071, 1310, 293, 457, 550, 264, 1472, 295, 264, 9887, 307, 2232, 321, 500, 380, 1127, 689, 309, 51004, 51004, 1361, 490, 321, 393, 1066, 300, 1412, 411, 1392, 341, 1412, 4009, 1361, 490, 37428, 341, 472, 1361, 490, 7098, 51336, 51336, 321, 393, 1066, 300, 1412, 570, 321, 393, 4471, 321, 393, 917, 552, 439, 729, 1412, 457, 321, 500, 380, 362, 281, 1127, 51604, 51636], "temperature": 0.0, "avg_logprob": -0.08620569782872353, "compression_ratio": 1.9601990049751243, "no_caption_prob": 2.0462399334064685e-05}, {"id": 282, "seek": 185532, "start": 1855.32, "end": 1861.56, "text": " and that is pretty nifty yeah i i agree that's that's my favorite part i mean that that's my", "tokens": [50364, 293, 300, 307, 1238, 297, 37177, 1338, 741, 741, 3986, 300, 311, 300, 311, 452, 2954, 644, 741, 914, 300, 300, 311, 452, 50676, 50676, 2954, 644, 295, 806, 76, 7183, 281, 385, 300, 311, 300, 311, 264, 1917, 295, 806, 76, 7183, 307, 307, 264, 264, 1412, 4009, 50924, 50924, 3410, 293, 264, 2848, 295, 49940, 552, 293, 40425, 552, 457, 411, 291, 584, 309, 311, 498, 291, 362, 51220, 51220, 257, 1412, 4009, 295, 1329, 295, 6968, 12300, 300, 311, 300, 311, 439, 309, 307, 558, 562, 291, 434, 1228, 300, 439, 291, 1127, 51548, 51548, 466, 307, 300, 291, 362, 257, 1329, 295, 6968, 12300, 291, 500, 380, 1127, 689, 309, 1361, 490, 806, 76, 7183, 1177, 380, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.06542761993408203, "compression_ratio": 2.091304347826087, "no_caption_prob": 7.966413249960169e-05}, {"id": 283, "seek": 185532, "start": 1861.56, "end": 1866.52, "text": " favorite part of elm pages to me that's that's the heart of elm pages is is the the data source", "tokens": [50364, 293, 300, 307, 1238, 297, 37177, 1338, 741, 741, 3986, 300, 311, 300, 311, 452, 2954, 644, 741, 914, 300, 300, 311, 452, 50676, 50676, 2954, 644, 295, 806, 76, 7183, 281, 385, 300, 311, 300, 311, 264, 1917, 295, 806, 76, 7183, 307, 307, 264, 264, 1412, 4009, 50924, 50924, 3410, 293, 264, 2848, 295, 49940, 552, 293, 40425, 552, 457, 411, 291, 584, 309, 311, 498, 291, 362, 51220, 51220, 257, 1412, 4009, 295, 1329, 295, 6968, 12300, 300, 311, 300, 311, 439, 309, 307, 558, 562, 291, 434, 1228, 300, 439, 291, 1127, 51548, 51548, 466, 307, 300, 291, 362, 257, 1329, 295, 6968, 12300, 291, 500, 380, 1127, 689, 309, 1361, 490, 806, 76, 7183, 1177, 380, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.06542761993408203, "compression_ratio": 2.091304347826087, "no_caption_prob": 7.966413249960169e-05}, {"id": 284, "seek": 185532, "start": 1866.52, "end": 1872.4399999999998, "text": " concept and the engine of resolving them and optimizing them but like you say it's if you have", "tokens": [50364, 293, 300, 307, 1238, 297, 37177, 1338, 741, 741, 3986, 300, 311, 300, 311, 452, 2954, 644, 741, 914, 300, 300, 311, 452, 50676, 50676, 2954, 644, 295, 806, 76, 7183, 281, 385, 300, 311, 300, 311, 264, 1917, 295, 806, 76, 7183, 307, 307, 264, 264, 1412, 4009, 50924, 50924, 3410, 293, 264, 2848, 295, 49940, 552, 293, 40425, 552, 457, 411, 291, 584, 309, 311, 498, 291, 362, 51220, 51220, 257, 1412, 4009, 295, 1329, 295, 6968, 12300, 300, 311, 300, 311, 439, 309, 307, 558, 562, 291, 434, 1228, 300, 439, 291, 1127, 51548, 51548, 466, 307, 300, 291, 362, 257, 1329, 295, 6968, 12300, 291, 500, 380, 1127, 689, 309, 1361, 490, 806, 76, 7183, 1177, 380, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.06542761993408203, "compression_ratio": 2.091304347826087, "no_caption_prob": 7.966413249960169e-05}, {"id": 285, "seek": 185532, "start": 1872.4399999999998, "end": 1879.0, "text": " a data source of list of blog posts that's that's all it is right when you're using that all you care", "tokens": [50364, 293, 300, 307, 1238, 297, 37177, 1338, 741, 741, 3986, 300, 311, 300, 311, 452, 2954, 644, 741, 914, 300, 300, 311, 452, 50676, 50676, 2954, 644, 295, 806, 76, 7183, 281, 385, 300, 311, 300, 311, 264, 1917, 295, 806, 76, 7183, 307, 307, 264, 264, 1412, 4009, 50924, 50924, 3410, 293, 264, 2848, 295, 49940, 552, 293, 40425, 552, 457, 411, 291, 584, 309, 311, 498, 291, 362, 51220, 51220, 257, 1412, 4009, 295, 1329, 295, 6968, 12300, 300, 311, 300, 311, 439, 309, 307, 558, 562, 291, 434, 1228, 300, 439, 291, 1127, 51548, 51548, 466, 307, 300, 291, 362, 257, 1329, 295, 6968, 12300, 291, 500, 380, 1127, 689, 309, 1361, 490, 806, 76, 7183, 1177, 380, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.06542761993408203, "compression_ratio": 2.091304347826087, "no_caption_prob": 7.966413249960169e-05}, {"id": 286, "seek": 185532, "start": 1879.0, "end": 1883.1599999999999, "text": " about is that you have a list of blog posts you don't care where it came from elm pages doesn't", "tokens": [50364, 293, 300, 307, 1238, 297, 37177, 1338, 741, 741, 3986, 300, 311, 300, 311, 452, 2954, 644, 741, 914, 300, 300, 311, 452, 50676, 50676, 2954, 644, 295, 806, 76, 7183, 281, 385, 300, 311, 300, 311, 264, 1917, 295, 806, 76, 7183, 307, 307, 264, 264, 1412, 4009, 50924, 50924, 3410, 293, 264, 2848, 295, 49940, 552, 293, 40425, 552, 457, 411, 291, 584, 309, 311, 498, 291, 362, 51220, 51220, 257, 1412, 4009, 295, 1329, 295, 6968, 12300, 300, 311, 300, 311, 439, 309, 307, 558, 562, 291, 434, 1228, 300, 439, 291, 1127, 51548, 51548, 466, 307, 300, 291, 362, 257, 1329, 295, 6968, 12300, 291, 500, 380, 1127, 689, 309, 1361, 490, 806, 76, 7183, 1177, 380, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.06542761993408203, "compression_ratio": 2.091304347826087, "no_caption_prob": 7.966413249960169e-05}, {"id": 287, "seek": 188316, "start": 1883.16, "end": 1887.5600000000002, "text": " care where it came from it'll take care of resolving and getting the data that as you", "tokens": [50364, 1127, 689, 309, 1361, 490, 309, 603, 747, 1127, 295, 49940, 293, 1242, 264, 1412, 300, 382, 291, 50584, 50584, 6786, 689, 291, 643, 281, 23673, 309, 490, 490, 2232, 291, 458, 23771, 309, 490, 7098, 293, 490, 269, 2592, 82, 50888, 50888, 291, 393, 754, 360, 1412, 4009, 5893, 7754, 293, 445, 483, 512, 1412, 294, 456, 382, 2232, 382, 527, 23274, 51144, 51144, 1391, 458, 321, 321, 411, 1228, 7754, 570, 7754, 309, 311, 257, 2141, 281, 2245, 309, 311, 264, 2141, 281, 51472, 51472, 2245, 256, 20832, 366, 322, 264, 636, 534, 572, 406, 534, 741, 20101, 406, 1939, 457, 436, 727, 312, 51816, 51852], "temperature": 0.0, "avg_logprob": -0.10274594913829457, "compression_ratio": 1.860655737704918, "no_caption_prob": 2.7967162168351933e-05}, {"id": 288, "seek": 188316, "start": 1887.5600000000002, "end": 1893.64, "text": " describe where you need to fetch it from from uh you know grabbing it from files and from cmss", "tokens": [50364, 1127, 689, 309, 1361, 490, 309, 603, 747, 1127, 295, 49940, 293, 1242, 264, 1412, 300, 382, 291, 50584, 50584, 6786, 689, 291, 643, 281, 23673, 309, 490, 490, 2232, 291, 458, 23771, 309, 490, 7098, 293, 490, 269, 2592, 82, 50888, 50888, 291, 393, 754, 360, 1412, 4009, 5893, 7754, 293, 445, 483, 512, 1412, 294, 456, 382, 2232, 382, 527, 23274, 51144, 51144, 1391, 458, 321, 321, 411, 1228, 7754, 570, 7754, 309, 311, 257, 2141, 281, 2245, 309, 311, 264, 2141, 281, 51472, 51472, 2245, 256, 20832, 366, 322, 264, 636, 534, 572, 406, 534, 741, 20101, 406, 1939, 457, 436, 727, 312, 51816, 51852], "temperature": 0.0, "avg_logprob": -0.10274594913829457, "compression_ratio": 1.860655737704918, "no_caption_prob": 2.7967162168351933e-05}, {"id": 289, "seek": 188316, "start": 1893.64, "end": 1898.76, "text": " you can even do data source dot succeed and just get some data in there as uh as our listeners", "tokens": [50364, 1127, 689, 309, 1361, 490, 309, 603, 747, 1127, 295, 49940, 293, 1242, 264, 1412, 300, 382, 291, 50584, 50584, 6786, 689, 291, 643, 281, 23673, 309, 490, 490, 2232, 291, 458, 23771, 309, 490, 7098, 293, 490, 269, 2592, 82, 50888, 50888, 291, 393, 754, 360, 1412, 4009, 5893, 7754, 293, 445, 483, 512, 1412, 294, 456, 382, 2232, 382, 527, 23274, 51144, 51144, 1391, 458, 321, 321, 411, 1228, 7754, 570, 7754, 309, 311, 257, 2141, 281, 2245, 309, 311, 264, 2141, 281, 51472, 51472, 2245, 256, 20832, 366, 322, 264, 636, 534, 572, 406, 534, 741, 20101, 406, 1939, 457, 436, 727, 312, 51816, 51852], "temperature": 0.0, "avg_logprob": -0.10274594913829457, "compression_ratio": 1.860655737704918, "no_caption_prob": 2.7967162168351933e-05}, {"id": 290, "seek": 188316, "start": 1898.76, "end": 1905.3200000000002, "text": " probably know we we like using succeed because succeed it's a key to success it's the key to", "tokens": [50364, 1127, 689, 309, 1361, 490, 309, 603, 747, 1127, 295, 49940, 293, 1242, 264, 1412, 300, 382, 291, 50584, 50584, 6786, 689, 291, 643, 281, 23673, 309, 490, 490, 2232, 291, 458, 23771, 309, 490, 7098, 293, 490, 269, 2592, 82, 50888, 50888, 291, 393, 754, 360, 1412, 4009, 5893, 7754, 293, 445, 483, 512, 1412, 294, 456, 382, 2232, 382, 527, 23274, 51144, 51144, 1391, 458, 321, 321, 411, 1228, 7754, 570, 7754, 309, 311, 257, 2141, 281, 2245, 309, 311, 264, 2141, 281, 51472, 51472, 2245, 256, 20832, 366, 322, 264, 636, 534, 572, 406, 534, 741, 20101, 406, 1939, 457, 436, 727, 312, 51816, 51852], "temperature": 0.0, "avg_logprob": -0.10274594913829457, "compression_ratio": 1.860655737704918, "no_caption_prob": 2.7967162168351933e-05}, {"id": 291, "seek": 188316, "start": 1905.3200000000002, "end": 1912.2, "text": " success t shirts are on the way really no not really i lied not yet but they could be", "tokens": [50364, 1127, 689, 309, 1361, 490, 309, 603, 747, 1127, 295, 49940, 293, 1242, 264, 1412, 300, 382, 291, 50584, 50584, 6786, 689, 291, 643, 281, 23673, 309, 490, 490, 2232, 291, 458, 23771, 309, 490, 7098, 293, 490, 269, 2592, 82, 50888, 50888, 291, 393, 754, 360, 1412, 4009, 5893, 7754, 293, 445, 483, 512, 1412, 294, 456, 382, 2232, 382, 527, 23274, 51144, 51144, 1391, 458, 321, 321, 411, 1228, 7754, 570, 7754, 309, 311, 257, 2141, 281, 2245, 309, 311, 264, 2141, 281, 51472, 51472, 2245, 256, 20832, 366, 322, 264, 636, 534, 572, 406, 534, 741, 20101, 406, 1939, 457, 436, 727, 312, 51816, 51852], "temperature": 0.0, "avg_logprob": -0.10274594913829457, "compression_ratio": 1.860655737704918, "no_caption_prob": 2.7967162168351933e-05}, {"id": 292, "seek": 191220, "start": 1912.2, "end": 1917.32, "text": " so yeah that's that's the beauty of it yeah so data sources some come from files i come from", "tokens": [50364, 370, 1338, 300, 311, 300, 311, 264, 6643, 295, 309, 1338, 370, 1412, 7139, 512, 808, 490, 7098, 741, 808, 490, 50620, 50620, 37428, 2086, 457, 1564, 309, 311, 1190, 1338, 309, 767, 808, 490, 361, 3015, 7098, 300, 311, 558, 300, 311, 2074, 370, 50944, 50944, 2293, 300, 311, 558, 1338, 370, 754, 411, 370, 562, 291, 483, 2232, 1868, 1871, 1228, 257, 1412, 4009, 437, 311, 51284, 51284, 767, 884, 307, 309, 311, 370, 437, 437, 806, 76, 7183, 307, 534, 884, 833, 264, 13376, 307, 309, 311, 1333, 295, 411, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.1416218452846881, "compression_ratio": 1.984375, "no_caption_prob": 9.223395863955375e-06}, {"id": 293, "seek": 191220, "start": 1917.32, "end": 1923.8, "text": " http yes but once it's run yeah it actually come from json files that's right that's true so", "tokens": [50364, 370, 1338, 300, 311, 300, 311, 264, 6643, 295, 309, 1338, 370, 1412, 7139, 512, 808, 490, 7098, 741, 808, 490, 50620, 50620, 37428, 2086, 457, 1564, 309, 311, 1190, 1338, 309, 767, 808, 490, 361, 3015, 7098, 300, 311, 558, 300, 311, 2074, 370, 50944, 50944, 2293, 300, 311, 558, 1338, 370, 754, 411, 370, 562, 291, 483, 2232, 1868, 1871, 1228, 257, 1412, 4009, 437, 311, 51284, 51284, 767, 884, 307, 309, 311, 370, 437, 437, 806, 76, 7183, 307, 534, 884, 833, 264, 13376, 307, 309, 311, 1333, 295, 411, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.1416218452846881, "compression_ratio": 1.984375, "no_caption_prob": 9.223395863955375e-06}, {"id": 294, "seek": 191220, "start": 1923.8, "end": 1930.6000000000001, "text": " exactly that's right yeah so even like so when you get uh front matter using a data source what's", "tokens": [50364, 370, 1338, 300, 311, 300, 311, 264, 6643, 295, 309, 1338, 370, 1412, 7139, 512, 808, 490, 7098, 741, 808, 490, 50620, 50620, 37428, 2086, 457, 1564, 309, 311, 1190, 1338, 309, 767, 808, 490, 361, 3015, 7098, 300, 311, 558, 300, 311, 2074, 370, 50944, 50944, 2293, 300, 311, 558, 1338, 370, 754, 411, 370, 562, 291, 483, 2232, 1868, 1871, 1228, 257, 1412, 4009, 437, 311, 51284, 51284, 767, 884, 307, 309, 311, 370, 437, 437, 806, 76, 7183, 307, 534, 884, 833, 264, 13376, 307, 309, 311, 1333, 295, 411, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.1416218452846881, "compression_ratio": 1.984375, "no_caption_prob": 9.223395863955375e-06}, {"id": 295, "seek": 191220, "start": 1930.6000000000001, "end": 1937.48, "text": " actually doing is it's so what what elm pages is really doing under the hood is it's sort of like", "tokens": [50364, 370, 1338, 300, 311, 300, 311, 264, 6643, 295, 309, 1338, 370, 1412, 7139, 512, 808, 490, 7098, 741, 808, 490, 50620, 50620, 37428, 2086, 457, 1564, 309, 311, 1190, 1338, 309, 767, 808, 490, 361, 3015, 7098, 300, 311, 558, 300, 311, 2074, 370, 50944, 50944, 2293, 300, 311, 558, 1338, 370, 754, 411, 370, 562, 291, 483, 2232, 1868, 1871, 1228, 257, 1412, 4009, 437, 311, 51284, 51284, 767, 884, 307, 309, 311, 370, 437, 437, 806, 76, 7183, 307, 534, 884, 833, 264, 13376, 307, 309, 311, 1333, 295, 411, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.1416218452846881, "compression_ratio": 1.984375, "no_caption_prob": 9.223395863955375e-06}, {"id": 296, "seek": 193748, "start": 1937.48, "end": 1946.04, "text": " this this runtime for for an elm build step and that runtime is using node js so it's using node", "tokens": [50364, 341, 341, 34474, 337, 337, 364, 806, 76, 1322, 1823, 293, 300, 34474, 307, 1228, 9984, 42713, 370, 309, 311, 1228, 9984, 50792, 50792, 42713, 281, 1401, 7098, 558, 806, 76, 393, 380, 1401, 7098, 293, 309, 15700, 729, 7098, 498, 291, 584, 291, 528, 281, 1401, 51080, 51080, 257, 3991, 293, 291, 528, 281, 1401, 1080, 1868, 1871, 437, 309, 311, 884, 307, 309, 311, 1105, 309, 311, 767, 2232, 21156, 278, 51352, 51352, 300, 1868, 1871, 293, 300, 288, 335, 75, 666, 361, 3015, 293, 550, 309, 2709, 300, 281, 291, 370, 291, 393, 360, 257, 361, 3015, 51576, 51576, 979, 19866, 370, 291, 500, 380, 362, 281, 3292, 466, 884, 288, 335, 75, 21156, 278, 420, 604, 295, 300, 291, 445, 483, 361, 3015, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07758223555470241, "compression_ratio": 2.0606060606060606, "no_caption_prob": 1.5445877579622902e-05}, {"id": 297, "seek": 193748, "start": 1946.04, "end": 1951.8, "text": " js to read files right elm can't read files and it reads those files if you say you want to read", "tokens": [50364, 341, 341, 34474, 337, 337, 364, 806, 76, 1322, 1823, 293, 300, 34474, 307, 1228, 9984, 42713, 370, 309, 311, 1228, 9984, 50792, 50792, 42713, 281, 1401, 7098, 558, 806, 76, 393, 380, 1401, 7098, 293, 309, 15700, 729, 7098, 498, 291, 584, 291, 528, 281, 1401, 51080, 51080, 257, 3991, 293, 291, 528, 281, 1401, 1080, 1868, 1871, 437, 309, 311, 884, 307, 309, 311, 1105, 309, 311, 767, 2232, 21156, 278, 51352, 51352, 300, 1868, 1871, 293, 300, 288, 335, 75, 666, 361, 3015, 293, 550, 309, 2709, 300, 281, 291, 370, 291, 393, 360, 257, 361, 3015, 51576, 51576, 979, 19866, 370, 291, 500, 380, 362, 281, 3292, 466, 884, 288, 335, 75, 21156, 278, 420, 604, 295, 300, 291, 445, 483, 361, 3015, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07758223555470241, "compression_ratio": 2.0606060606060606, "no_caption_prob": 1.5445877579622902e-05}, {"id": 298, "seek": 193748, "start": 1951.8, "end": 1957.24, "text": " a file and you want to read its front matter what it's doing is it's um it's actually uh parsing", "tokens": [50364, 341, 341, 34474, 337, 337, 364, 806, 76, 1322, 1823, 293, 300, 34474, 307, 1228, 9984, 42713, 370, 309, 311, 1228, 9984, 50792, 50792, 42713, 281, 1401, 7098, 558, 806, 76, 393, 380, 1401, 7098, 293, 309, 15700, 729, 7098, 498, 291, 584, 291, 528, 281, 1401, 51080, 51080, 257, 3991, 293, 291, 528, 281, 1401, 1080, 1868, 1871, 437, 309, 311, 884, 307, 309, 311, 1105, 309, 311, 767, 2232, 21156, 278, 51352, 51352, 300, 1868, 1871, 293, 300, 288, 335, 75, 666, 361, 3015, 293, 550, 309, 2709, 300, 281, 291, 370, 291, 393, 360, 257, 361, 3015, 51576, 51576, 979, 19866, 370, 291, 500, 380, 362, 281, 3292, 466, 884, 288, 335, 75, 21156, 278, 420, 604, 295, 300, 291, 445, 483, 361, 3015, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07758223555470241, "compression_ratio": 2.0606060606060606, "no_caption_prob": 1.5445877579622902e-05}, {"id": 299, "seek": 193748, "start": 1957.24, "end": 1961.72, "text": " that front matter and that yaml into json and then it gives that to you so you can do a json", "tokens": [50364, 341, 341, 34474, 337, 337, 364, 806, 76, 1322, 1823, 293, 300, 34474, 307, 1228, 9984, 42713, 370, 309, 311, 1228, 9984, 50792, 50792, 42713, 281, 1401, 7098, 558, 806, 76, 393, 380, 1401, 7098, 293, 309, 15700, 729, 7098, 498, 291, 584, 291, 528, 281, 1401, 51080, 51080, 257, 3991, 293, 291, 528, 281, 1401, 1080, 1868, 1871, 437, 309, 311, 884, 307, 309, 311, 1105, 309, 311, 767, 2232, 21156, 278, 51352, 51352, 300, 1868, 1871, 293, 300, 288, 335, 75, 666, 361, 3015, 293, 550, 309, 2709, 300, 281, 291, 370, 291, 393, 360, 257, 361, 3015, 51576, 51576, 979, 19866, 370, 291, 500, 380, 362, 281, 3292, 466, 884, 288, 335, 75, 21156, 278, 420, 604, 295, 300, 291, 445, 483, 361, 3015, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07758223555470241, "compression_ratio": 2.0606060606060606, "no_caption_prob": 1.5445877579622902e-05}, {"id": 300, "seek": 193748, "start": 1961.72, "end": 1966.3600000000001, "text": " decoder so you don't have to worry about doing yaml parsing or any of that you just get json", "tokens": [50364, 341, 341, 34474, 337, 337, 364, 806, 76, 1322, 1823, 293, 300, 34474, 307, 1228, 9984, 42713, 370, 309, 311, 1228, 9984, 50792, 50792, 42713, 281, 1401, 7098, 558, 806, 76, 393, 380, 1401, 7098, 293, 309, 15700, 729, 7098, 498, 291, 584, 291, 528, 281, 1401, 51080, 51080, 257, 3991, 293, 291, 528, 281, 1401, 1080, 1868, 1871, 437, 309, 311, 884, 307, 309, 311, 1105, 309, 311, 767, 2232, 21156, 278, 51352, 51352, 300, 1868, 1871, 293, 300, 288, 335, 75, 666, 361, 3015, 293, 550, 309, 2709, 300, 281, 291, 370, 291, 393, 360, 257, 361, 3015, 51576, 51576, 979, 19866, 370, 291, 500, 380, 362, 281, 3292, 466, 884, 288, 335, 75, 21156, 278, 420, 604, 295, 300, 291, 445, 483, 361, 3015, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.07758223555470241, "compression_ratio": 2.0606060606060606, "no_caption_prob": 1.5445877579622902e-05}, {"id": 301, "seek": 196636, "start": 1966.36, "end": 1971.8, "text": " and in fact you can use an optimized json decoder because if there's some yaml in the front matter", "tokens": [50364, 293, 294, 1186, 291, 393, 764, 364, 26941, 361, 3015, 979, 19866, 570, 498, 456, 311, 512, 288, 335, 75, 294, 264, 1868, 1871, 50636, 50636, 300, 291, 500, 380, 764, 550, 309, 311, 445, 516, 281, 483, 33221, 1314, 498, 309, 311, 364, 44383, 3061, 2519, 2232, 293, 50924, 50952, 370, 341, 307, 472, 295, 264, 534, 955, 2962, 294, 806, 76, 7183, 568, 13, 15, 611, 307, 300, 534, 1105, 806, 76, 7183, 51336, 51364, 456, 311, 1570, 281, 309, 586, 309, 311, 439, 445, 1333, 295, 1412, 7139, 300, 311, 439, 309, 307, 300, 311, 577, 291, 1401, 7098, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11220689089793079, "compression_ratio": 1.7123893805309736, "no_caption_prob": 2.4682225557626225e-05}, {"id": 302, "seek": 196636, "start": 1971.8, "end": 1977.56, "text": " that you don't use then it's just going to get stripped away if it's an unused fail field uh and", "tokens": [50364, 293, 294, 1186, 291, 393, 764, 364, 26941, 361, 3015, 979, 19866, 570, 498, 456, 311, 512, 288, 335, 75, 294, 264, 1868, 1871, 50636, 50636, 300, 291, 500, 380, 764, 550, 309, 311, 445, 516, 281, 483, 33221, 1314, 498, 309, 311, 364, 44383, 3061, 2519, 2232, 293, 50924, 50952, 370, 341, 307, 472, 295, 264, 534, 955, 2962, 294, 806, 76, 7183, 568, 13, 15, 611, 307, 300, 534, 1105, 806, 76, 7183, 51336, 51364, 456, 311, 1570, 281, 309, 586, 309, 311, 439, 445, 1333, 295, 1412, 7139, 300, 311, 439, 309, 307, 300, 311, 577, 291, 1401, 7098, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11220689089793079, "compression_ratio": 1.7123893805309736, "no_caption_prob": 2.4682225557626225e-05}, {"id": 303, "seek": 196636, "start": 1978.12, "end": 1985.8, "text": " so this is one of the really big changes in elm pages 2.0 also is that really um elm pages", "tokens": [50364, 293, 294, 1186, 291, 393, 764, 364, 26941, 361, 3015, 979, 19866, 570, 498, 456, 311, 512, 288, 335, 75, 294, 264, 1868, 1871, 50636, 50636, 300, 291, 500, 380, 764, 550, 309, 311, 445, 516, 281, 483, 33221, 1314, 498, 309, 311, 364, 44383, 3061, 2519, 2232, 293, 50924, 50952, 370, 341, 307, 472, 295, 264, 534, 955, 2962, 294, 806, 76, 7183, 568, 13, 15, 611, 307, 300, 534, 1105, 806, 76, 7183, 51336, 51364, 456, 311, 1570, 281, 309, 586, 309, 311, 439, 445, 1333, 295, 1412, 7139, 300, 311, 439, 309, 307, 300, 311, 577, 291, 1401, 7098, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11220689089793079, "compression_ratio": 1.7123893805309736, "no_caption_prob": 2.4682225557626225e-05}, {"id": 304, "seek": 196636, "start": 1986.36, "end": 1991.8799999999999, "text": " there's less to it now it's all just sort of data sources that's all it is that's how you read files", "tokens": [50364, 293, 294, 1186, 291, 393, 764, 364, 26941, 361, 3015, 979, 19866, 570, 498, 456, 311, 512, 288, 335, 75, 294, 264, 1868, 1871, 50636, 50636, 300, 291, 500, 380, 764, 550, 309, 311, 445, 516, 281, 483, 33221, 1314, 498, 309, 311, 364, 44383, 3061, 2519, 2232, 293, 50924, 50952, 370, 341, 307, 472, 295, 264, 534, 955, 2962, 294, 806, 76, 7183, 568, 13, 15, 611, 307, 300, 534, 1105, 806, 76, 7183, 51336, 51364, 456, 311, 1570, 281, 309, 586, 309, 311, 439, 445, 1333, 295, 1412, 7139, 300, 311, 439, 309, 307, 300, 311, 577, 291, 1401, 7098, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11220689089793079, "compression_ratio": 1.7123893805309736, "no_caption_prob": 2.4682225557626225e-05}, {"id": 305, "seek": 199188, "start": 1991.88, "end": 1999.0, "text": " that's how you get a listing of files that's how you um define routes that's that's what you do for", "tokens": [50364, 300, 311, 577, 291, 483, 257, 22161, 295, 7098, 300, 311, 577, 291, 1105, 6964, 18242, 300, 311, 300, 311, 437, 291, 360, 337, 50720, 50720, 1203, 293, 293, 370, 498, 291, 1223, 1412, 7139, 731, 550, 291, 1223, 806, 76, 3028, 382, 731, 50932, 50932, 300, 311, 264, 472, 3410, 300, 291, 534, 643, 281, 1963, 294, 3701, 281, 1223, 806, 76, 7183, 51212, 51212, 1338, 437, 741, 478, 27798, 307, 300, 257, 688, 295, 264, 3089, 300, 291, 4114, 949, 293, 300, 291, 829, 294, 294, 309, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.1181259052727812, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.3631157344207168e-05}, {"id": 306, "seek": 199188, "start": 1999.0, "end": 2003.24, "text": " everything and and so if you understand data sources well then you understand elm page as well", "tokens": [50364, 300, 311, 577, 291, 483, 257, 22161, 295, 7098, 300, 311, 577, 291, 1105, 6964, 18242, 300, 311, 300, 311, 437, 291, 360, 337, 50720, 50720, 1203, 293, 293, 370, 498, 291, 1223, 1412, 7139, 731, 550, 291, 1223, 806, 76, 3028, 382, 731, 50932, 50932, 300, 311, 264, 472, 3410, 300, 291, 534, 643, 281, 1963, 294, 3701, 281, 1223, 806, 76, 7183, 51212, 51212, 1338, 437, 741, 478, 27798, 307, 300, 257, 688, 295, 264, 3089, 300, 291, 4114, 949, 293, 300, 291, 829, 294, 294, 309, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.1181259052727812, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.3631157344207168e-05}, {"id": 307, "seek": 199188, "start": 2003.24, "end": 2008.8400000000001, "text": " that's the one concept that you really need to invest in understanding to understand elm pages", "tokens": [50364, 300, 311, 577, 291, 483, 257, 22161, 295, 7098, 300, 311, 577, 291, 1105, 6964, 18242, 300, 311, 300, 311, 437, 291, 360, 337, 50720, 50720, 1203, 293, 293, 370, 498, 291, 1223, 1412, 7139, 731, 550, 291, 1223, 806, 76, 3028, 382, 731, 50932, 50932, 300, 311, 264, 472, 3410, 300, 291, 534, 643, 281, 1963, 294, 3701, 281, 1223, 806, 76, 7183, 51212, 51212, 1338, 437, 741, 478, 27798, 307, 300, 257, 688, 295, 264, 3089, 300, 291, 4114, 949, 293, 300, 291, 829, 294, 294, 309, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.1181259052727812, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.3631157344207168e-05}, {"id": 308, "seek": 199188, "start": 2008.8400000000001, "end": 2015.5600000000002, "text": " yeah what i'm imagining is that a lot of the code that you wrote before and that you put in in it", "tokens": [50364, 300, 311, 577, 291, 483, 257, 22161, 295, 7098, 300, 311, 577, 291, 1105, 6964, 18242, 300, 311, 300, 311, 437, 291, 360, 337, 50720, 50720, 1203, 293, 293, 370, 498, 291, 1223, 1412, 7139, 731, 550, 291, 1223, 806, 76, 3028, 382, 731, 50932, 50932, 300, 311, 264, 472, 3410, 300, 291, 534, 643, 281, 1963, 294, 3701, 281, 1223, 806, 76, 7183, 51212, 51212, 1338, 437, 741, 478, 27798, 307, 300, 257, 688, 295, 264, 3089, 300, 291, 4114, 949, 293, 300, 291, 829, 294, 294, 309, 51548, 51548], "temperature": 0.0, "avg_logprob": -0.1181259052727812, "compression_ratio": 1.9744897959183674, "no_caption_prob": 1.3631157344207168e-05}, {"id": 309, "seek": 201556, "start": 2015.56, "end": 2022.28, "text": " update message and stuff is now put into the data sources so like you you could be a data source", "tokens": [50364, 5623, 3636, 293, 1507, 307, 586, 829, 666, 264, 1412, 7139, 370, 411, 291, 291, 727, 312, 257, 1412, 4009, 50700, 50700, 5844, 586, 1338, 3879, 1338, 300, 311, 558, 370, 411, 365, 365, 806, 76, 7183, 502, 13, 15, 456, 645, 411, 257, 1916, 51144, 51144, 295, 4497, 10392, 293, 309, 311, 309, 311, 1238, 1627, 570, 741, 767, 411, 7261, 257, 688, 295, 3089, 51468, 51468, 516, 291, 458, 6186, 8754, 490, 490, 264, 502, 13, 15, 3089, 3096, 281, 264, 281, 264, 568, 13, 15, 2154, 1124, 257, 688, 295, 3089, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10040690947552117, "compression_ratio": 1.7579908675799087, "no_caption_prob": 1.6187212168006226e-05}, {"id": 310, "seek": 201556, "start": 2022.28, "end": 2031.1599999999999, "text": " expert now yeah totally yeah that's right so like with with elm pages 1.0 there were like a couple", "tokens": [50364, 5623, 3636, 293, 1507, 307, 586, 829, 666, 264, 1412, 7139, 370, 411, 291, 291, 727, 312, 257, 1412, 4009, 50700, 50700, 5844, 586, 1338, 3879, 1338, 300, 311, 558, 370, 411, 365, 365, 806, 76, 7183, 502, 13, 15, 456, 645, 411, 257, 1916, 51144, 51144, 295, 4497, 10392, 293, 309, 311, 309, 311, 1238, 1627, 570, 741, 767, 411, 7261, 257, 688, 295, 3089, 51468, 51468, 516, 291, 458, 6186, 8754, 490, 490, 264, 502, 13, 15, 3089, 3096, 281, 264, 281, 264, 568, 13, 15, 2154, 1124, 257, 688, 295, 3089, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10040690947552117, "compression_ratio": 1.7579908675799087, "no_caption_prob": 1.6187212168006226e-05}, {"id": 311, "seek": 201556, "start": 2031.1599999999999, "end": 2037.6399999999999, "text": " of additional concepts and it's it's pretty cool because i actually like removed a lot of code", "tokens": [50364, 5623, 3636, 293, 1507, 307, 586, 829, 666, 264, 1412, 7139, 370, 411, 291, 291, 727, 312, 257, 1412, 4009, 50700, 50700, 5844, 586, 1338, 3879, 1338, 300, 311, 558, 370, 411, 365, 365, 806, 76, 7183, 502, 13, 15, 456, 645, 411, 257, 1916, 51144, 51144, 295, 4497, 10392, 293, 309, 311, 309, 311, 1238, 1627, 570, 741, 767, 411, 7261, 257, 688, 295, 3089, 51468, 51468, 516, 291, 458, 6186, 8754, 490, 490, 264, 502, 13, 15, 3089, 3096, 281, 264, 281, 264, 568, 13, 15, 2154, 1124, 257, 688, 295, 3089, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10040690947552117, "compression_ratio": 1.7579908675799087, "no_caption_prob": 1.6187212168006226e-05}, {"id": 312, "seek": 201556, "start": 2037.6399999999999, "end": 2044.44, "text": " going you know migrating from from the 1.0 code base to the to the 2.0 internals a lot of code", "tokens": [50364, 5623, 3636, 293, 1507, 307, 586, 829, 666, 264, 1412, 7139, 370, 411, 291, 291, 727, 312, 257, 1412, 4009, 50700, 50700, 5844, 586, 1338, 3879, 1338, 300, 311, 558, 370, 411, 365, 365, 806, 76, 7183, 502, 13, 15, 456, 645, 411, 257, 1916, 51144, 51144, 295, 4497, 10392, 293, 309, 311, 309, 311, 1238, 1627, 570, 741, 767, 411, 7261, 257, 688, 295, 3089, 51468, 51468, 516, 291, 458, 6186, 8754, 490, 490, 264, 502, 13, 15, 3089, 3096, 281, 264, 281, 264, 568, 13, 15, 2154, 1124, 257, 688, 295, 3089, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.10040690947552117, "compression_ratio": 1.7579908675799087, "no_caption_prob": 1.6187212168006226e-05}, {"id": 313, "seek": 204444, "start": 2044.44, "end": 2052.12, "text": " went away you mean from projects that use the elm pages or inside elm pages uh well both but uh but", "tokens": [50364, 1437, 1314, 291, 914, 490, 4455, 300, 764, 264, 806, 76, 7183, 420, 1854, 806, 76, 7183, 2232, 731, 1293, 457, 2232, 457, 50748, 50748, 741, 478, 4124, 466, 264, 2154, 1124, 597, 741, 519, 307, 534, 1627, 570, 291, 393, 360, 544, 365, 309, 457, 50992, 50992, 264, 2154, 1124, 366, 767, 1570, 3997, 570, 309, 311, 445, 1228, 341, 3410, 295, 257, 1412, 4009, 281, 51248, 51248, 360, 544, 721, 370, 775, 300, 914, 300, 309, 311, 3571, 337, 45627, 281, 281, 854, 484, 2232, 1391, 370, 370, 51604, 51680], "temperature": 0.0, "avg_logprob": -0.11330830797236016, "compression_ratio": 1.751111111111111, "no_caption_prob": 9.460565343033522e-05}, {"id": 314, "seek": 204444, "start": 2052.12, "end": 2057.0, "text": " i'm speaking about the internals which i think is really cool because you can do more with it but", "tokens": [50364, 1437, 1314, 291, 914, 490, 4455, 300, 764, 264, 806, 76, 7183, 420, 1854, 806, 76, 7183, 2232, 731, 1293, 457, 2232, 457, 50748, 50748, 741, 478, 4124, 466, 264, 2154, 1124, 597, 741, 519, 307, 534, 1627, 570, 291, 393, 360, 544, 365, 309, 457, 50992, 50992, 264, 2154, 1124, 366, 767, 1570, 3997, 570, 309, 311, 445, 1228, 341, 3410, 295, 257, 1412, 4009, 281, 51248, 51248, 360, 544, 721, 370, 775, 300, 914, 300, 309, 311, 3571, 337, 45627, 281, 281, 854, 484, 2232, 1391, 370, 370, 51604, 51680], "temperature": 0.0, "avg_logprob": -0.11330830797236016, "compression_ratio": 1.751111111111111, "no_caption_prob": 9.460565343033522e-05}, {"id": 315, "seek": 204444, "start": 2057.0, "end": 2062.12, "text": " the internals are actually less complex because it's just using this concept of a data source to", "tokens": [50364, 1437, 1314, 291, 914, 490, 4455, 300, 764, 264, 806, 76, 7183, 420, 1854, 806, 76, 7183, 2232, 731, 1293, 457, 2232, 457, 50748, 50748, 741, 478, 4124, 466, 264, 2154, 1124, 597, 741, 519, 307, 534, 1627, 570, 291, 393, 360, 544, 365, 309, 457, 50992, 50992, 264, 2154, 1124, 366, 767, 1570, 3997, 570, 309, 311, 445, 1228, 341, 3410, 295, 257, 1412, 4009, 281, 51248, 51248, 360, 544, 721, 370, 775, 300, 914, 300, 309, 311, 3571, 337, 45627, 281, 281, 854, 484, 2232, 1391, 370, 370, 51604, 51680], "temperature": 0.0, "avg_logprob": -0.11330830797236016, "compression_ratio": 1.751111111111111, "no_caption_prob": 9.460565343033522e-05}, {"id": 316, "seek": 204444, "start": 2062.12, "end": 2069.2400000000002, "text": " do more things so does that mean that it's easier for contributors to to help out uh probably so so", "tokens": [50364, 1437, 1314, 291, 914, 490, 4455, 300, 764, 264, 806, 76, 7183, 420, 1854, 806, 76, 7183, 2232, 731, 1293, 457, 2232, 457, 50748, 50748, 741, 478, 4124, 466, 264, 2154, 1124, 597, 741, 519, 307, 534, 1627, 570, 291, 393, 360, 544, 365, 309, 457, 50992, 50992, 264, 2154, 1124, 366, 767, 1570, 3997, 570, 309, 311, 445, 1228, 341, 3410, 295, 257, 1412, 4009, 281, 51248, 51248, 360, 544, 721, 370, 775, 300, 914, 300, 309, 311, 3571, 337, 45627, 281, 281, 854, 484, 2232, 1391, 370, 370, 51604, 51680], "temperature": 0.0, "avg_logprob": -0.11330830797236016, "compression_ratio": 1.751111111111111, "no_caption_prob": 9.460565343033522e-05}, {"id": 317, "seek": 206924, "start": 2069.24, "end": 2076.52, "text": " so one thing that is sort of on my mind for data sources is the idea so so we've got we've got", "tokens": [50364, 370, 472, 551, 300, 307, 1333, 295, 322, 452, 1575, 337, 1412, 7139, 307, 264, 1558, 370, 370, 321, 600, 658, 321, 600, 658, 50728, 50728, 819, 3467, 295, 1412, 7139, 321, 600, 658, 276, 83, 79, 1412, 7139, 597, 321, 600, 2825, 466, 291, 291, 50996, 50996, 976, 364, 276, 83, 79, 291, 458, 291, 6786, 364, 276, 83, 79, 5308, 281, 2042, 293, 257, 979, 19866, 281, 764, 293, 291, 600, 658, 51308, 51308, 300, 1412, 291, 393, 360, 2232, 3991, 1401, 1412, 4009, 370, 291, 393, 360, 1412, 4009, 5893, 3991, 293, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.11830059844668549, "compression_ratio": 1.9841269841269842, "no_caption_prob": 9.169528493657708e-05}, {"id": 318, "seek": 206924, "start": 2076.52, "end": 2081.8799999999997, "text": " different types of data sources we've got htp data sources which we've talked about you you", "tokens": [50364, 370, 472, 551, 300, 307, 1333, 295, 322, 452, 1575, 337, 1412, 7139, 307, 264, 1558, 370, 370, 321, 600, 658, 321, 600, 658, 50728, 50728, 819, 3467, 295, 1412, 7139, 321, 600, 658, 276, 83, 79, 1412, 7139, 597, 321, 600, 2825, 466, 291, 291, 50996, 50996, 976, 364, 276, 83, 79, 291, 458, 291, 6786, 364, 276, 83, 79, 5308, 281, 2042, 293, 257, 979, 19866, 281, 764, 293, 291, 600, 658, 51308, 51308, 300, 1412, 291, 393, 360, 2232, 3991, 1401, 1412, 4009, 370, 291, 393, 360, 1412, 4009, 5893, 3991, 293, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.11830059844668549, "compression_ratio": 1.9841269841269842, "no_caption_prob": 9.169528493657708e-05}, {"id": 319, "seek": 206924, "start": 2081.8799999999997, "end": 2088.12, "text": " give an htp you know you describe an htp request to perform and a decoder to use and you've got", "tokens": [50364, 370, 472, 551, 300, 307, 1333, 295, 322, 452, 1575, 337, 1412, 7139, 307, 264, 1558, 370, 370, 321, 600, 658, 321, 600, 658, 50728, 50728, 819, 3467, 295, 1412, 7139, 321, 600, 658, 276, 83, 79, 1412, 7139, 597, 321, 600, 2825, 466, 291, 291, 50996, 50996, 976, 364, 276, 83, 79, 291, 458, 291, 6786, 364, 276, 83, 79, 5308, 281, 2042, 293, 257, 979, 19866, 281, 764, 293, 291, 600, 658, 51308, 51308, 300, 1412, 291, 393, 360, 2232, 3991, 1401, 1412, 4009, 370, 291, 393, 360, 1412, 4009, 5893, 3991, 293, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.11830059844668549, "compression_ratio": 1.9841269841269842, "no_caption_prob": 9.169528493657708e-05}, {"id": 320, "seek": 206924, "start": 2088.12, "end": 2096.3599999999997, "text": " that data you can do uh file read data source so you can do data source dot file and you can", "tokens": [50364, 370, 472, 551, 300, 307, 1333, 295, 322, 452, 1575, 337, 1412, 7139, 307, 264, 1558, 370, 370, 321, 600, 658, 321, 600, 658, 50728, 50728, 819, 3467, 295, 1412, 7139, 321, 600, 658, 276, 83, 79, 1412, 7139, 597, 321, 600, 2825, 466, 291, 291, 50996, 50996, 976, 364, 276, 83, 79, 291, 458, 291, 6786, 364, 276, 83, 79, 5308, 281, 2042, 293, 257, 979, 19866, 281, 764, 293, 291, 600, 658, 51308, 51308, 300, 1412, 291, 393, 360, 2232, 3991, 1401, 1412, 4009, 370, 291, 393, 360, 1412, 4009, 5893, 3991, 293, 291, 393, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.11830059844668549, "compression_ratio": 1.9841269841269842, "no_caption_prob": 9.169528493657708e-05}, {"id": 321, "seek": 209636, "start": 2096.36, "end": 2102.84, "text": " do the data source dot file dot only front matter and give it a decoder to get the title and", "tokens": [50364, 360, 264, 1412, 4009, 5893, 3991, 5893, 787, 1868, 1871, 293, 976, 309, 257, 979, 19866, 281, 483, 264, 4876, 293, 50688, 50688, 3855, 490, 257, 6968, 2183, 337, 1365, 291, 393, 360, 1412, 4009, 5893, 3991, 5893, 1772, 1553, 1868, 50984, 50984, 1871, 293, 309, 486, 976, 291, 1203, 457, 729, 721, 1296, 264, 15508, 8240, 279, 412, 264, 1192, 295, 264, 51252, 51252, 3991, 370, 291, 291, 393, 291, 393, 1401, 294, 613, 7098, 293, 2232, 456, 311, 611, 257, 1412, 4009, 5893, 16125, 1882, 72, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09742271381875743, "compression_ratio": 1.9246231155778895, "no_caption_prob": 4.133336915401742e-05}, {"id": 322, "seek": 209636, "start": 2102.84, "end": 2108.76, "text": " description from a blog post for example you can do data source dot file dot body without front", "tokens": [50364, 360, 264, 1412, 4009, 5893, 3991, 5893, 787, 1868, 1871, 293, 976, 309, 257, 979, 19866, 281, 483, 264, 4876, 293, 50688, 50688, 3855, 490, 257, 6968, 2183, 337, 1365, 291, 393, 360, 1412, 4009, 5893, 3991, 5893, 1772, 1553, 1868, 50984, 50984, 1871, 293, 309, 486, 976, 291, 1203, 457, 729, 721, 1296, 264, 15508, 8240, 279, 412, 264, 1192, 295, 264, 51252, 51252, 3991, 370, 291, 291, 393, 291, 393, 1401, 294, 613, 7098, 293, 2232, 456, 311, 611, 257, 1412, 4009, 5893, 16125, 1882, 72, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09742271381875743, "compression_ratio": 1.9246231155778895, "no_caption_prob": 4.133336915401742e-05}, {"id": 323, "seek": 209636, "start": 2108.76, "end": 2114.1200000000003, "text": " matter and it will give you everything but those things between the triple dashes at the top of the", "tokens": [50364, 360, 264, 1412, 4009, 5893, 3991, 5893, 787, 1868, 1871, 293, 976, 309, 257, 979, 19866, 281, 483, 264, 4876, 293, 50688, 50688, 3855, 490, 257, 6968, 2183, 337, 1365, 291, 393, 360, 1412, 4009, 5893, 3991, 5893, 1772, 1553, 1868, 50984, 50984, 1871, 293, 309, 486, 976, 291, 1203, 457, 729, 721, 1296, 264, 15508, 8240, 279, 412, 264, 1192, 295, 264, 51252, 51252, 3991, 370, 291, 291, 393, 291, 393, 1401, 294, 613, 7098, 293, 2232, 456, 311, 611, 257, 1412, 4009, 5893, 16125, 1882, 72, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09742271381875743, "compression_ratio": 1.9246231155778895, "no_caption_prob": 4.133336915401742e-05}, {"id": 324, "seek": 209636, "start": 2114.1200000000003, "end": 2122.36, "text": " file so you you can you can read in these files and uh there's also a data source dot glob api", "tokens": [50364, 360, 264, 1412, 4009, 5893, 3991, 5893, 787, 1868, 1871, 293, 976, 309, 257, 979, 19866, 281, 483, 264, 4876, 293, 50688, 50688, 3855, 490, 257, 6968, 2183, 337, 1365, 291, 393, 360, 1412, 4009, 5893, 3991, 5893, 1772, 1553, 1868, 50984, 50984, 1871, 293, 309, 486, 976, 291, 1203, 457, 729, 721, 1296, 264, 15508, 8240, 279, 412, 264, 1192, 295, 264, 51252, 51252, 3991, 370, 291, 291, 393, 291, 393, 1401, 294, 613, 7098, 293, 2232, 456, 311, 611, 257, 1412, 4009, 5893, 16125, 1882, 72, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.09742271381875743, "compression_ratio": 1.9246231155778895, "no_caption_prob": 4.133336915401742e-05}, {"id": 325, "seek": 212236, "start": 2122.36, "end": 2128.2000000000003, "text": " which allows you to depend on data that is just describing which files are on the file system so", "tokens": [50364, 597, 4045, 291, 281, 5672, 322, 1412, 300, 307, 445, 16141, 597, 7098, 366, 322, 264, 3991, 1185, 370, 50656, 50656, 498, 291, 1415, 281, 352, 281, 257, 10820, 293, 584, 4177, 741, 528, 741, 528, 257, 3028, 337, 633, 2232, 420, 291, 458, 360, 364, 360, 364, 50996, 50996, 8186, 3028, 295, 6968, 12300, 293, 2602, 295, 885, 19204, 322, 257, 269, 2592, 309, 311, 2654, 1491, 5093, 7098, 294, 428, 51316, 51316, 6968, 10820, 293, 370, 291, 727, 360, 2232, 1412, 4009, 5893, 16125, 295, 1105, 291, 458, 295, 8659, 6968, 3249, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09902313777378627, "compression_ratio": 1.7522522522522523, "no_caption_prob": 1.0129623660759535e-05}, {"id": 326, "seek": 212236, "start": 2128.2000000000003, "end": 2135.0, "text": " if you wanted to go to a folder and say hey i want i want a page for every uh or you know do an do an", "tokens": [50364, 597, 4045, 291, 281, 5672, 322, 1412, 300, 307, 445, 16141, 597, 7098, 366, 322, 264, 3991, 1185, 370, 50656, 50656, 498, 291, 1415, 281, 352, 281, 257, 10820, 293, 584, 4177, 741, 528, 741, 528, 257, 3028, 337, 633, 2232, 420, 291, 458, 360, 364, 360, 364, 50996, 50996, 8186, 3028, 295, 6968, 12300, 293, 2602, 295, 885, 19204, 322, 257, 269, 2592, 309, 311, 2654, 1491, 5093, 7098, 294, 428, 51316, 51316, 6968, 10820, 293, 370, 291, 727, 360, 2232, 1412, 4009, 5893, 16125, 295, 1105, 291, 458, 295, 8659, 6968, 3249, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09902313777378627, "compression_ratio": 1.7522522522522523, "no_caption_prob": 1.0129623660759535e-05}, {"id": 327, "seek": 212236, "start": 2135.0, "end": 2141.4, "text": " index page of blog posts and instead of being hosted on a cms it's local markdown files in your", "tokens": [50364, 597, 4045, 291, 281, 5672, 322, 1412, 300, 307, 445, 16141, 597, 7098, 366, 322, 264, 3991, 1185, 370, 50656, 50656, 498, 291, 1415, 281, 352, 281, 257, 10820, 293, 584, 4177, 741, 528, 741, 528, 257, 3028, 337, 633, 2232, 420, 291, 458, 360, 364, 360, 364, 50996, 50996, 8186, 3028, 295, 6968, 12300, 293, 2602, 295, 885, 19204, 322, 257, 269, 2592, 309, 311, 2654, 1491, 5093, 7098, 294, 428, 51316, 51316, 6968, 10820, 293, 370, 291, 727, 360, 2232, 1412, 4009, 5893, 16125, 295, 1105, 291, 458, 295, 8659, 6968, 3249, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09902313777378627, "compression_ratio": 1.7522522522522523, "no_caption_prob": 1.0129623660759535e-05}, {"id": 328, "seek": 212236, "start": 2141.4, "end": 2149.7200000000003, "text": " blog folder and so you could do uh data source dot glob of um you know of effectively blogging", "tokens": [50364, 597, 4045, 291, 281, 5672, 322, 1412, 300, 307, 445, 16141, 597, 7098, 366, 322, 264, 3991, 1185, 370, 50656, 50656, 498, 291, 1415, 281, 352, 281, 257, 10820, 293, 584, 4177, 741, 528, 741, 528, 257, 3028, 337, 633, 2232, 420, 291, 458, 360, 364, 360, 364, 50996, 50996, 8186, 3028, 295, 6968, 12300, 293, 2602, 295, 885, 19204, 322, 257, 269, 2592, 309, 311, 2654, 1491, 5093, 7098, 294, 428, 51316, 51316, 6968, 10820, 293, 370, 291, 727, 360, 2232, 1412, 4009, 5893, 16125, 295, 1105, 291, 458, 295, 8659, 6968, 3249, 51732, 51732], "temperature": 0.0, "avg_logprob": -0.09902313777378627, "compression_ratio": 1.7522522522522523, "no_caption_prob": 1.0129623660759535e-05}, {"id": 329, "seek": 214972, "start": 2149.72, "end": 2156.6, "text": " slash star dot md and then uh that data source is going to be you know a list of strings of those", "tokens": [50364, 17330, 3543, 5893, 275, 67, 293, 550, 2232, 300, 1412, 4009, 307, 516, 281, 312, 291, 458, 257, 1329, 295, 13985, 295, 729, 50708, 50708, 1105, 295, 729, 7098, 457, 370, 1936, 437, 437, 257, 1412, 4009, 307, 307, 309, 311, 257, 636, 295, 1419, 291, 458, 51112, 51112, 1419, 341, 1412, 2435, 337, 264, 1333, 295, 659, 3157, 5574, 300, 309, 311, 309, 311, 456, 322, 5883, 15529, 51420, 51420, 337, 264, 659, 28748, 276, 83, 15480, 309, 311, 456, 337, 264, 1378, 382, 321, 600, 2825, 466, 457, 309, 311, 534, 445, 411, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.09435310749092488, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.2805302503693383e-05}, {"id": 330, "seek": 214972, "start": 2156.6, "end": 2164.68, "text": " um of those files but so basically what what a data source is is it's a way of having you know", "tokens": [50364, 17330, 3543, 5893, 275, 67, 293, 550, 2232, 300, 1412, 4009, 307, 516, 281, 312, 291, 458, 257, 1329, 295, 13985, 295, 729, 50708, 50708, 1105, 295, 729, 7098, 457, 370, 1936, 437, 437, 257, 1412, 4009, 307, 307, 309, 311, 257, 636, 295, 1419, 291, 458, 51112, 51112, 1419, 341, 1412, 2435, 337, 264, 1333, 295, 659, 3157, 5574, 300, 309, 311, 309, 311, 456, 322, 5883, 15529, 51420, 51420, 337, 264, 659, 28748, 276, 83, 15480, 309, 311, 456, 337, 264, 1378, 382, 321, 600, 2825, 466, 457, 309, 311, 534, 445, 411, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.09435310749092488, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.2805302503693383e-05}, {"id": 331, "seek": 214972, "start": 2164.68, "end": 2170.8399999999997, "text": " having this data available for the sort of pre init phase that it's it's there on initial render", "tokens": [50364, 17330, 3543, 5893, 275, 67, 293, 550, 2232, 300, 1412, 4009, 307, 516, 281, 312, 291, 458, 257, 1329, 295, 13985, 295, 729, 50708, 50708, 1105, 295, 729, 7098, 457, 370, 1936, 437, 437, 257, 1412, 4009, 307, 307, 309, 311, 257, 636, 295, 1419, 291, 458, 51112, 51112, 1419, 341, 1412, 2435, 337, 264, 1333, 295, 659, 3157, 5574, 300, 309, 311, 309, 311, 456, 322, 5883, 15529, 51420, 51420, 337, 264, 659, 28748, 276, 83, 15480, 309, 311, 456, 337, 264, 1378, 382, 321, 600, 2825, 466, 457, 309, 311, 534, 445, 411, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.09435310749092488, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.2805302503693383e-05}, {"id": 332, "seek": 214972, "start": 2170.8399999999997, "end": 2175.56, "text": " for the pre rendered html it's there for the head as we've talked about but it's really just like", "tokens": [50364, 17330, 3543, 5893, 275, 67, 293, 550, 2232, 300, 1412, 4009, 307, 516, 281, 312, 291, 458, 257, 1329, 295, 13985, 295, 729, 50708, 50708, 1105, 295, 729, 7098, 457, 370, 1936, 437, 437, 257, 1412, 4009, 307, 307, 309, 311, 257, 636, 295, 1419, 291, 458, 51112, 51112, 1419, 341, 1412, 2435, 337, 264, 1333, 295, 659, 3157, 5574, 300, 309, 311, 309, 311, 456, 322, 5883, 15529, 51420, 51420, 337, 264, 659, 28748, 276, 83, 15480, 309, 311, 456, 337, 264, 1378, 382, 321, 600, 2825, 466, 457, 309, 311, 534, 445, 411, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.09435310749092488, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.2805302503693383e-05}, {"id": 333, "seek": 217556, "start": 2175.56, "end": 2181.24, "text": " as you said it's just json data and you can map it all together and you've got got that data when", "tokens": [50364, 382, 291, 848, 309, 311, 445, 361, 3015, 1412, 293, 291, 393, 4471, 309, 439, 1214, 293, 291, 600, 658, 658, 300, 1412, 562, 50648, 50648, 291, 352, 281, 257, 777, 3028, 472, 295, 264, 721, 741, 600, 668, 1953, 466, 307, 257, 1333, 295, 1105, 1419, 257, 7513, 50964, 50964, 337, 17827, 2375, 4476, 411, 257, 361, 37331, 5944, 2436, 689, 291, 362, 512, 361, 3015, 1412, 293, 498, 291, 51356, 51356, 519, 466, 437, 257, 2436, 307, 294, 806, 76, 291, 2845, 361, 3015, 484, 293, 291, 4774, 361, 3015, 646, 807, 18160, 300, 311, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.05577038302279935, "compression_ratio": 1.7853881278538812, "no_caption_prob": 2.3922744730953127e-05}, {"id": 334, "seek": 217556, "start": 2181.24, "end": 2187.56, "text": " you go to a new page one of the things i've been thinking about is a sort of um having a mechanism", "tokens": [50364, 382, 291, 848, 309, 311, 445, 361, 3015, 1412, 293, 291, 393, 4471, 309, 439, 1214, 293, 291, 600, 658, 658, 300, 1412, 562, 50648, 50648, 291, 352, 281, 257, 777, 3028, 472, 295, 264, 721, 741, 600, 668, 1953, 466, 307, 257, 1333, 295, 1105, 1419, 257, 7513, 50964, 50964, 337, 17827, 2375, 4476, 411, 257, 361, 37331, 5944, 2436, 689, 291, 362, 512, 361, 3015, 1412, 293, 498, 291, 51356, 51356, 519, 466, 437, 257, 2436, 307, 294, 806, 76, 291, 2845, 361, 3015, 484, 293, 291, 4774, 361, 3015, 646, 807, 18160, 300, 311, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.05577038302279935, "compression_ratio": 1.7853881278538812, "no_caption_prob": 2.3922744730953127e-05}, {"id": 335, "seek": 217556, "start": 2187.56, "end": 2195.4, "text": " for defining custom essentially like a javascript port where you have some json data and if you", "tokens": [50364, 382, 291, 848, 309, 311, 445, 361, 3015, 1412, 293, 291, 393, 4471, 309, 439, 1214, 293, 291, 600, 658, 658, 300, 1412, 562, 50648, 50648, 291, 352, 281, 257, 777, 3028, 472, 295, 264, 721, 741, 600, 668, 1953, 466, 307, 257, 1333, 295, 1105, 1419, 257, 7513, 50964, 50964, 337, 17827, 2375, 4476, 411, 257, 361, 37331, 5944, 2436, 689, 291, 362, 512, 361, 3015, 1412, 293, 498, 291, 51356, 51356, 519, 466, 437, 257, 2436, 307, 294, 806, 76, 291, 2845, 361, 3015, 484, 293, 291, 4774, 361, 3015, 646, 807, 18160, 300, 311, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.05577038302279935, "compression_ratio": 1.7853881278538812, "no_caption_prob": 2.3922744730953127e-05}, {"id": 336, "seek": 217556, "start": 2195.4, "end": 2202.44, "text": " think about what a port is in elm you send json out and you receive json back through ports that's", "tokens": [50364, 382, 291, 848, 309, 311, 445, 361, 3015, 1412, 293, 291, 393, 4471, 309, 439, 1214, 293, 291, 600, 658, 658, 300, 1412, 562, 50648, 50648, 291, 352, 281, 257, 777, 3028, 472, 295, 264, 721, 741, 600, 668, 1953, 466, 307, 257, 1333, 295, 1105, 1419, 257, 7513, 50964, 50964, 337, 17827, 2375, 4476, 411, 257, 361, 37331, 5944, 2436, 689, 291, 362, 512, 361, 3015, 1412, 293, 498, 291, 51356, 51356, 519, 466, 437, 257, 2436, 307, 294, 806, 76, 291, 2845, 361, 3015, 484, 293, 291, 4774, 361, 3015, 646, 807, 18160, 300, 311, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.05577038302279935, "compression_ratio": 1.7853881278538812, "no_caption_prob": 2.3922744730953127e-05}, {"id": 337, "seek": 220244, "start": 2202.44, "end": 2207.96, "text": " what ports are in elm that's actually not that different than what a data source is a data source", "tokens": [50364, 437, 18160, 366, 294, 806, 76, 300, 311, 767, 406, 300, 819, 813, 437, 257, 1412, 4009, 307, 257, 1412, 4009, 50640, 50640, 833, 264, 13376, 307, 7750, 361, 3015, 281, 6786, 4177, 510, 311, 1105, 510, 311, 341, 3991, 741, 528, 281, 1401, 420, 50944, 50944, 510, 311, 341, 16125, 5102, 293, 550, 309, 14790, 646, 1412, 293, 833, 264, 13376, 309, 307, 1228, 18160, 365, 51252, 51252, 264, 806, 76, 7183, 34474, 457, 291, 500, 380, 362, 281, 3292, 466, 300, 1823, 500, 380, 980, 2878, 293, 2232, 370, 731, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05854875842730204, "compression_ratio": 1.8066037735849056, "no_caption_prob": 3.591154018067755e-05}, {"id": 338, "seek": 220244, "start": 2207.96, "end": 2214.04, "text": " under the hood is sending json to describe hey here's um here's this file i want to read or", "tokens": [50364, 437, 18160, 366, 294, 806, 76, 300, 311, 767, 406, 300, 819, 813, 437, 257, 1412, 4009, 307, 257, 1412, 4009, 50640, 50640, 833, 264, 13376, 307, 7750, 361, 3015, 281, 6786, 4177, 510, 311, 1105, 510, 311, 341, 3991, 741, 528, 281, 1401, 420, 50944, 50944, 510, 311, 341, 16125, 5102, 293, 550, 309, 14790, 646, 1412, 293, 833, 264, 13376, 309, 307, 1228, 18160, 365, 51252, 51252, 264, 806, 76, 7183, 34474, 457, 291, 500, 380, 362, 281, 3292, 466, 300, 1823, 500, 380, 980, 2878, 293, 2232, 370, 731, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05854875842730204, "compression_ratio": 1.8066037735849056, "no_caption_prob": 3.591154018067755e-05}, {"id": 339, "seek": 220244, "start": 2214.04, "end": 2220.2000000000003, "text": " here's this glob pattern and then it sends back data and under the hood it is using ports with", "tokens": [50364, 437, 18160, 366, 294, 806, 76, 300, 311, 767, 406, 300, 819, 813, 437, 257, 1412, 4009, 307, 257, 1412, 4009, 50640, 50640, 833, 264, 13376, 307, 7750, 361, 3015, 281, 6786, 4177, 510, 311, 1105, 510, 311, 341, 3991, 741, 528, 281, 1401, 420, 50944, 50944, 510, 311, 341, 16125, 5102, 293, 550, 309, 14790, 646, 1412, 293, 833, 264, 13376, 309, 307, 1228, 18160, 365, 51252, 51252, 264, 806, 76, 7183, 34474, 457, 291, 500, 380, 362, 281, 3292, 466, 300, 1823, 500, 380, 980, 2878, 293, 2232, 370, 731, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05854875842730204, "compression_ratio": 1.8066037735849056, "no_caption_prob": 3.591154018067755e-05}, {"id": 340, "seek": 220244, "start": 2220.2000000000003, "end": 2227.32, "text": " the elm pages runtime but you don't have to worry about that step don't tell anyone and uh so well", "tokens": [50364, 437, 18160, 366, 294, 806, 76, 300, 311, 767, 406, 300, 819, 813, 437, 257, 1412, 4009, 307, 257, 1412, 4009, 50640, 50640, 833, 264, 13376, 307, 7750, 361, 3015, 281, 6786, 4177, 510, 311, 1105, 510, 311, 341, 3991, 741, 528, 281, 1401, 420, 50944, 50944, 510, 311, 341, 16125, 5102, 293, 550, 309, 14790, 646, 1412, 293, 833, 264, 13376, 309, 307, 1228, 18160, 365, 51252, 51252, 264, 806, 76, 7183, 34474, 457, 291, 500, 380, 362, 281, 3292, 466, 300, 1823, 500, 380, 980, 2878, 293, 2232, 370, 731, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.05854875842730204, "compression_ratio": 1.8066037735849056, "no_caption_prob": 3.591154018067755e-05}, {"id": 341, "seek": 222732, "start": 2227.32, "end": 2236.2000000000003, "text": " what if you could write custom ports and say hey when when this message comes in just like you", "tokens": [50364, 437, 498, 291, 727, 2464, 2375, 18160, 293, 584, 4177, 562, 562, 341, 3636, 1487, 294, 445, 411, 291, 50808, 50808, 2464, 257, 361, 37331, 5944, 2436, 2845, 341, 1412, 646, 370, 1310, 291, 528, 281, 584, 510, 311, 257, 364, 297, 14395, 7372, 51140, 51140, 300, 741, 362, 8899, 293, 309, 291, 458, 3255, 1589, 309, 311, 411, 257, 8149, 295, 565, 16025, 51412, 51412, 300, 44375, 456, 645, 257, 2459, 295, 552, 281, 2826, 490, 364, 297, 14395, 293, 741, 1415, 300, 420, 741, 528, 281, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.07953699775364088, "compression_ratio": 1.75, "no_caption_prob": 5.56188533664681e-05}, {"id": 342, "seek": 222732, "start": 2236.2000000000003, "end": 2242.84, "text": " write a javascript port send this data back so maybe you want to say here's a an npm package", "tokens": [50364, 437, 498, 291, 727, 2464, 2375, 18160, 293, 584, 4177, 562, 562, 341, 3636, 1487, 294, 445, 411, 291, 50808, 50808, 2464, 257, 361, 37331, 5944, 2436, 2845, 341, 1412, 646, 370, 1310, 291, 528, 281, 584, 510, 311, 257, 364, 297, 14395, 7372, 51140, 51140, 300, 741, 362, 8899, 293, 309, 291, 458, 3255, 1589, 309, 311, 411, 257, 8149, 295, 565, 16025, 51412, 51412, 300, 44375, 456, 645, 257, 2459, 295, 552, 281, 2826, 490, 364, 297, 14395, 293, 741, 1415, 300, 420, 741, 528, 281, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.07953699775364088, "compression_ratio": 1.75, "no_caption_prob": 5.56188533664681e-05}, {"id": 343, "seek": 222732, "start": 2242.84, "end": 2248.28, "text": " that i have installed and it you know knows information it's like a database of time zones", "tokens": [50364, 437, 498, 291, 727, 2464, 2375, 18160, 293, 584, 4177, 562, 562, 341, 3636, 1487, 294, 445, 411, 291, 50808, 50808, 2464, 257, 361, 37331, 5944, 2436, 2845, 341, 1412, 646, 370, 1310, 291, 528, 281, 584, 510, 311, 257, 364, 297, 14395, 7372, 51140, 51140, 300, 741, 362, 8899, 293, 309, 291, 458, 3255, 1589, 309, 311, 411, 257, 8149, 295, 565, 16025, 51412, 51412, 300, 44375, 456, 645, 257, 2459, 295, 552, 281, 2826, 490, 364, 297, 14395, 293, 741, 1415, 300, 420, 741, 528, 281, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.07953699775364088, "compression_ratio": 1.75, "no_caption_prob": 5.56188533664681e-05}, {"id": 344, "seek": 222732, "start": 2248.28, "end": 2253.48, "text": " that conveniently there were a million of them to choose from an npm and i wanted that or i want to", "tokens": [50364, 437, 498, 291, 727, 2464, 2375, 18160, 293, 584, 4177, 562, 562, 341, 3636, 1487, 294, 445, 411, 291, 50808, 50808, 2464, 257, 361, 37331, 5944, 2436, 2845, 341, 1412, 646, 370, 1310, 291, 528, 281, 584, 510, 311, 257, 364, 297, 14395, 7372, 51140, 51140, 300, 741, 362, 8899, 293, 309, 291, 458, 3255, 1589, 309, 311, 411, 257, 8149, 295, 565, 16025, 51412, 51412, 300, 44375, 456, 645, 257, 2459, 295, 552, 281, 2826, 490, 364, 297, 14395, 293, 741, 1415, 300, 420, 741, 528, 281, 51672, 51672], "temperature": 0.0, "avg_logprob": -0.07953699775364088, "compression_ratio": 1.75, "no_caption_prob": 5.56188533664681e-05}, {"id": 345, "seek": 225348, "start": 2253.48, "end": 2261.48, "text": " run a shell command that generates this svg image and so you can take that that json is the input", "tokens": [50364, 1190, 257, 8720, 5622, 300, 23815, 341, 17342, 70, 3256, 293, 370, 291, 393, 747, 300, 300, 361, 3015, 307, 264, 4846, 50764, 50764, 293, 264, 5598, 307, 291, 458, 3410, 671, 291, 434, 15957, 20458, 1105, 2902, 264, 912, 1412, 337, 257, 51104, 51104, 2212, 4846, 558, 445, 411, 364, 37428, 5308, 281, 364, 1882, 72, 754, 498, 300, 311, 12120, 406, 2074, 291, 362, 51488, 51488, 281, 3410, 671, 519, 295, 309, 382, 411, 16694, 19020, 13460, 257, 2167, 7684, 370, 291, 393, 584, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1913164774576823, "compression_ratio": 1.7432432432432432, "no_caption_prob": 6.604777445318177e-05}, {"id": 346, "seek": 225348, "start": 2261.48, "end": 2268.28, "text": " and the output is you know conceptually you're deterministically um giving the same data for a", "tokens": [50364, 1190, 257, 8720, 5622, 300, 23815, 341, 17342, 70, 3256, 293, 370, 291, 393, 747, 300, 300, 361, 3015, 307, 264, 4846, 50764, 50764, 293, 264, 5598, 307, 291, 458, 3410, 671, 291, 434, 15957, 20458, 1105, 2902, 264, 912, 1412, 337, 257, 51104, 51104, 2212, 4846, 558, 445, 411, 364, 37428, 5308, 281, 364, 1882, 72, 754, 498, 300, 311, 12120, 406, 2074, 291, 362, 51488, 51488, 281, 3410, 671, 519, 295, 309, 382, 411, 16694, 19020, 13460, 257, 2167, 7684, 370, 291, 393, 584, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1913164774576823, "compression_ratio": 1.7432432432432432, "no_caption_prob": 6.604777445318177e-05}, {"id": 347, "seek": 225348, "start": 2268.28, "end": 2275.96, "text": " given input right just like an http request to an api even if that's technically not true you have", "tokens": [50364, 1190, 257, 8720, 5622, 300, 23815, 341, 17342, 70, 3256, 293, 370, 291, 393, 747, 300, 300, 361, 3015, 307, 264, 4846, 50764, 50764, 293, 264, 5598, 307, 291, 458, 3410, 671, 291, 434, 15957, 20458, 1105, 2902, 264, 912, 1412, 337, 257, 51104, 51104, 2212, 4846, 558, 445, 411, 364, 37428, 5308, 281, 364, 1882, 72, 754, 498, 300, 311, 12120, 406, 2074, 291, 362, 51488, 51488, 281, 3410, 671, 519, 295, 309, 382, 411, 16694, 19020, 13460, 257, 2167, 7684, 370, 291, 393, 584, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1913164774576823, "compression_ratio": 1.7432432432432432, "no_caption_prob": 6.604777445318177e-05}, {"id": 348, "seek": 225348, "start": 2275.96, "end": 2281.32, "text": " to conceptually think of it as like declaratively representing a single resource so you can say", "tokens": [50364, 1190, 257, 8720, 5622, 300, 23815, 341, 17342, 70, 3256, 293, 370, 291, 393, 747, 300, 300, 361, 3015, 307, 264, 4846, 50764, 50764, 293, 264, 5598, 307, 291, 458, 3410, 671, 291, 434, 15957, 20458, 1105, 2902, 264, 912, 1412, 337, 257, 51104, 51104, 2212, 4846, 558, 445, 411, 364, 37428, 5308, 281, 364, 1882, 72, 754, 498, 300, 311, 12120, 406, 2074, 291, 362, 51488, 51488, 281, 3410, 671, 519, 295, 309, 382, 411, 16694, 19020, 13460, 257, 2167, 7684, 370, 291, 393, 584, 51756, 51756], "temperature": 0.0, "avg_logprob": -0.1913164774576823, "compression_ratio": 1.7432432432432432, "no_caption_prob": 6.604777445318177e-05}, {"id": 349, "seek": 228132, "start": 2281.32, "end": 2287.2400000000002, "text": " hey you know you're deterministically representing a single resource so anyway that's that's something", "tokens": [50364, 4177, 291, 458, 291, 434, 15957, 20458, 13460, 257, 2167, 7684, 370, 4033, 300, 311, 300, 311, 746, 50660, 50660, 322, 452, 1575, 307, 257, 1333, 295, 1228, 300, 912, 1412, 4009, 7513, 382, 257, 636, 281, 2845, 646, 361, 3015, 1412, 50984, 50984, 490, 613, 1333, 295, 361, 37331, 5944, 18160, 370, 300, 291, 727, 360, 721, 411, 2614, 8720, 16901, 420, 51272, 51272, 2035, 2375, 721, 291, 2978, 281, 360, 281, 483, 300, 1412, 1338, 1338, 264, 264, 2734, 365, 18160, 307, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.22221604260531339, "compression_ratio": 1.746606334841629, "no_caption_prob": 2.7968508220510557e-05}, {"id": 350, "seek": 228132, "start": 2287.2400000000002, "end": 2293.7200000000003, "text": " on my mind is a sort of using that same data source mechanism as a way to send back json data", "tokens": [50364, 4177, 291, 458, 291, 434, 15957, 20458, 13460, 257, 2167, 7684, 370, 4033, 300, 311, 300, 311, 746, 50660, 50660, 322, 452, 1575, 307, 257, 1333, 295, 1228, 300, 912, 1412, 4009, 7513, 382, 257, 636, 281, 2845, 646, 361, 3015, 1412, 50984, 50984, 490, 613, 1333, 295, 361, 37331, 5944, 18160, 370, 300, 291, 727, 360, 721, 411, 2614, 8720, 16901, 420, 51272, 51272, 2035, 2375, 721, 291, 2978, 281, 360, 281, 483, 300, 1412, 1338, 1338, 264, 264, 2734, 365, 18160, 307, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.22221604260531339, "compression_ratio": 1.746606334841629, "no_caption_prob": 2.7968508220510557e-05}, {"id": 351, "seek": 228132, "start": 2293.7200000000003, "end": 2299.48, "text": " from these sort of javascript ports so that you could do things like running shell commands or", "tokens": [50364, 4177, 291, 458, 291, 434, 15957, 20458, 13460, 257, 2167, 7684, 370, 4033, 300, 311, 300, 311, 746, 50660, 50660, 322, 452, 1575, 307, 257, 1333, 295, 1228, 300, 912, 1412, 4009, 7513, 382, 257, 636, 281, 2845, 646, 361, 3015, 1412, 50984, 50984, 490, 613, 1333, 295, 361, 37331, 5944, 18160, 370, 300, 291, 727, 360, 721, 411, 2614, 8720, 16901, 420, 51272, 51272, 2035, 2375, 721, 291, 2978, 281, 360, 281, 483, 300, 1412, 1338, 1338, 264, 264, 2734, 365, 18160, 307, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.22221604260531339, "compression_ratio": 1.746606334841629, "no_caption_prob": 2.7968508220510557e-05}, {"id": 352, "seek": 228132, "start": 2299.48, "end": 2305.4, "text": " whatever custom things you needed to do to get that data yeah yeah the the issue with ports is", "tokens": [50364, 4177, 291, 458, 291, 434, 15957, 20458, 13460, 257, 2167, 7684, 370, 4033, 300, 311, 300, 311, 746, 50660, 50660, 322, 452, 1575, 307, 257, 1333, 295, 1228, 300, 912, 1412, 4009, 7513, 382, 257, 636, 281, 2845, 646, 361, 3015, 1412, 50984, 50984, 490, 613, 1333, 295, 361, 37331, 5944, 18160, 370, 300, 291, 727, 360, 721, 411, 2614, 8720, 16901, 420, 51272, 51272, 2035, 2375, 721, 291, 2978, 281, 360, 281, 483, 300, 1412, 1338, 1338, 264, 264, 2734, 365, 18160, 307, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.22221604260531339, "compression_ratio": 1.746606334841629, "no_caption_prob": 2.7968508220510557e-05}, {"id": 353, "seek": 230540, "start": 2305.4, "end": 2312.2000000000003, "text": " to to get a result always just like with http you're right expected to get a result at some", "tokens": [50364, 281, 281, 483, 257, 1874, 1009, 445, 411, 365, 37428, 291, 434, 558, 5176, 281, 483, 257, 1874, 412, 512, 50704, 50704, 2793, 1338, 457, 570, 291, 362, 257, 1322, 1823, 291, 727, 7263, 584, 1392, 498, 741, 2378, 380, 658, 50968, 50968, 1340, 934, 2031, 3949, 291, 291, 652, 257, 1322, 7763, 2293, 293, 291, 393, 1884, 364, 37765, 51308, 51308, 886, 689, 291, 584, 411, 4177, 510, 311, 1105, 291, 458, 291, 434, 799, 483, 257, 2167, 2436, 300, 2436, 2709, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.04160280885367558, "compression_ratio": 1.6923076923076923, "no_caption_prob": 7.721631118329242e-05}, {"id": 354, "seek": 230540, "start": 2312.2000000000003, "end": 2317.48, "text": " points yeah but because you have a build step you could potentially say okay if i haven't got", "tokens": [50364, 281, 281, 483, 257, 1874, 1009, 445, 411, 365, 37428, 291, 434, 558, 5176, 281, 483, 257, 1874, 412, 512, 50704, 50704, 2793, 1338, 457, 570, 291, 362, 257, 1322, 1823, 291, 727, 7263, 584, 1392, 498, 741, 2378, 380, 658, 50968, 50968, 1340, 934, 2031, 3949, 291, 291, 652, 257, 1322, 7763, 2293, 293, 291, 393, 1884, 364, 37765, 51308, 51308, 886, 689, 291, 584, 411, 4177, 510, 311, 1105, 291, 458, 291, 434, 799, 483, 257, 2167, 2436, 300, 2436, 2709, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.04160280885367558, "compression_ratio": 1.6923076923076923, "no_caption_prob": 7.721631118329242e-05}, {"id": 355, "seek": 230540, "start": 2317.48, "end": 2324.28, "text": " anything after x seconds you you make a build failure exactly and you can create an abstraction", "tokens": [50364, 281, 281, 483, 257, 1874, 1009, 445, 411, 365, 37428, 291, 434, 558, 5176, 281, 483, 257, 1874, 412, 512, 50704, 50704, 2793, 1338, 457, 570, 291, 362, 257, 1322, 1823, 291, 727, 7263, 584, 1392, 498, 741, 2378, 380, 658, 50968, 50968, 1340, 934, 2031, 3949, 291, 291, 652, 257, 1322, 7763, 2293, 293, 291, 393, 1884, 364, 37765, 51308, 51308, 886, 689, 291, 584, 411, 4177, 510, 311, 1105, 291, 458, 291, 434, 799, 483, 257, 2167, 2436, 300, 2436, 2709, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.04160280885367558, "compression_ratio": 1.6923076923076923, "no_caption_prob": 7.721631118329242e-05}, {"id": 356, "seek": 230540, "start": 2324.28, "end": 2330.28, "text": " too where you say like hey here's um you know you're gonna get a single port that port gives", "tokens": [50364, 281, 281, 483, 257, 1874, 1009, 445, 411, 365, 37428, 291, 434, 558, 5176, 281, 483, 257, 1874, 412, 512, 50704, 50704, 2793, 1338, 457, 570, 291, 362, 257, 1322, 1823, 291, 727, 7263, 584, 1392, 498, 741, 2378, 380, 658, 50968, 50968, 1340, 934, 2031, 3949, 291, 291, 652, 257, 1322, 7763, 2293, 293, 291, 393, 1884, 364, 37765, 51308, 51308, 886, 689, 291, 584, 411, 4177, 510, 311, 1105, 291, 458, 291, 434, 799, 483, 257, 2167, 2436, 300, 2436, 2709, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.04160280885367558, "compression_ratio": 1.6923076923076923, "no_caption_prob": 7.721631118329242e-05}, {"id": 357, "seek": 233028, "start": 2330.28, "end": 2338.2000000000003, "text": " you some json data and you respond to that json data however you define so you you have a tag or", "tokens": [50364, 291, 512, 361, 3015, 1412, 293, 291, 4196, 281, 300, 361, 3015, 1412, 4461, 291, 6964, 370, 291, 291, 362, 257, 6162, 420, 50760, 50760, 2035, 291, 727, 764, 287, 76, 1373, 12729, 293, 1105, 293, 293, 2736, 291, 458, 362, 341, 4364, 365, 1803, 51120, 51120, 300, 498, 741, 483, 341, 2010, 295, 1412, 741, 478, 799, 360, 341, 2010, 295, 551, 293, 370, 291, 727, 1936, 362, 445, 51348, 51348, 411, 364, 382, 34015, 2445, 300, 2709, 646, 1412, 293, 309, 311, 516, 281, 312, 1190, 412, 264, 1322, 1823, 293, 1564, 51592, 51592, 428, 287, 24223, 307, 484, 456, 885, 1143, 538, 257, 4195, 309, 311, 406, 884, 604, 295, 300, 570, 309, 311, 1217, 20772, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.0601195126045041, "compression_ratio": 1.857677902621723, "no_caption_prob": 3.3213251299457625e-05}, {"id": 358, "seek": 233028, "start": 2338.2000000000003, "end": 2345.4, "text": " whatever you could use lmts interrupt and um and and return you know have this contract with yourself", "tokens": [50364, 291, 512, 361, 3015, 1412, 293, 291, 4196, 281, 300, 361, 3015, 1412, 4461, 291, 6964, 370, 291, 291, 362, 257, 6162, 420, 50760, 50760, 2035, 291, 727, 764, 287, 76, 1373, 12729, 293, 1105, 293, 293, 2736, 291, 458, 362, 341, 4364, 365, 1803, 51120, 51120, 300, 498, 741, 483, 341, 2010, 295, 1412, 741, 478, 799, 360, 341, 2010, 295, 551, 293, 370, 291, 727, 1936, 362, 445, 51348, 51348, 411, 364, 382, 34015, 2445, 300, 2709, 646, 1412, 293, 309, 311, 516, 281, 312, 1190, 412, 264, 1322, 1823, 293, 1564, 51592, 51592, 428, 287, 24223, 307, 484, 456, 885, 1143, 538, 257, 4195, 309, 311, 406, 884, 604, 295, 300, 570, 309, 311, 1217, 20772, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.0601195126045041, "compression_ratio": 1.857677902621723, "no_caption_prob": 3.3213251299457625e-05}, {"id": 359, "seek": 233028, "start": 2345.4, "end": 2349.96, "text": " that if i get this type of data i'm gonna do this type of thing and so you could basically have just", "tokens": [50364, 291, 512, 361, 3015, 1412, 293, 291, 4196, 281, 300, 361, 3015, 1412, 4461, 291, 6964, 370, 291, 291, 362, 257, 6162, 420, 50760, 50760, 2035, 291, 727, 764, 287, 76, 1373, 12729, 293, 1105, 293, 293, 2736, 291, 458, 362, 341, 4364, 365, 1803, 51120, 51120, 300, 498, 741, 483, 341, 2010, 295, 1412, 741, 478, 799, 360, 341, 2010, 295, 551, 293, 370, 291, 727, 1936, 362, 445, 51348, 51348, 411, 364, 382, 34015, 2445, 300, 2709, 646, 1412, 293, 309, 311, 516, 281, 312, 1190, 412, 264, 1322, 1823, 293, 1564, 51592, 51592, 428, 287, 24223, 307, 484, 456, 885, 1143, 538, 257, 4195, 309, 311, 406, 884, 604, 295, 300, 570, 309, 311, 1217, 20772, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.0601195126045041, "compression_ratio": 1.857677902621723, "no_caption_prob": 3.3213251299457625e-05}, {"id": 360, "seek": 233028, "start": 2349.96, "end": 2354.84, "text": " like an async function that gives back data and it's going to be run at the build step and once", "tokens": [50364, 291, 512, 361, 3015, 1412, 293, 291, 4196, 281, 300, 361, 3015, 1412, 4461, 291, 6964, 370, 291, 291, 362, 257, 6162, 420, 50760, 50760, 2035, 291, 727, 764, 287, 76, 1373, 12729, 293, 1105, 293, 293, 2736, 291, 458, 362, 341, 4364, 365, 1803, 51120, 51120, 300, 498, 741, 483, 341, 2010, 295, 1412, 741, 478, 799, 360, 341, 2010, 295, 551, 293, 370, 291, 727, 1936, 362, 445, 51348, 51348, 411, 364, 382, 34015, 2445, 300, 2709, 646, 1412, 293, 309, 311, 516, 281, 312, 1190, 412, 264, 1322, 1823, 293, 1564, 51592, 51592, 428, 287, 24223, 307, 484, 456, 885, 1143, 538, 257, 4195, 309, 311, 406, 884, 604, 295, 300, 570, 309, 311, 1217, 20772, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.0601195126045041, "compression_ratio": 1.857677902621723, "no_caption_prob": 3.3213251299457625e-05}, {"id": 361, "seek": 233028, "start": 2354.84, "end": 2359.96, "text": " your lmap is out there being used by a user it's not doing any of that because it's already resolved", "tokens": [50364, 291, 512, 361, 3015, 1412, 293, 291, 4196, 281, 300, 361, 3015, 1412, 4461, 291, 6964, 370, 291, 291, 362, 257, 6162, 420, 50760, 50760, 2035, 291, 727, 764, 287, 76, 1373, 12729, 293, 1105, 293, 293, 2736, 291, 458, 362, 341, 4364, 365, 1803, 51120, 51120, 300, 498, 741, 483, 341, 2010, 295, 1412, 741, 478, 799, 360, 341, 2010, 295, 551, 293, 370, 291, 727, 1936, 362, 445, 51348, 51348, 411, 364, 382, 34015, 2445, 300, 2709, 646, 1412, 293, 309, 311, 516, 281, 312, 1190, 412, 264, 1322, 1823, 293, 1564, 51592, 51592, 428, 287, 24223, 307, 484, 456, 885, 1143, 538, 257, 4195, 309, 311, 406, 884, 604, 295, 300, 570, 309, 311, 1217, 20772, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.0601195126045041, "compression_ratio": 1.857677902621723, "no_caption_prob": 3.3213251299457625e-05}, {"id": 362, "seek": 235996, "start": 2359.96, "end": 2366.44, "text": " it in the content json so we talked about deploying to cdn because what you build gets deployed to", "tokens": [50364, 309, 294, 264, 2701, 361, 3015, 370, 321, 2825, 466, 34198, 281, 269, 67, 77, 570, 437, 291, 1322, 2170, 17826, 281, 50688, 50688, 428, 269, 67, 77, 393, 291, 10515, 352, 466, 577, 300, 1985, 293, 577, 3997, 300, 307, 988, 1338, 370, 291, 4476, 51012, 51040, 370, 287, 76, 7183, 568, 13, 15, 2232, 456, 307, 364, 3157, 5622, 370, 291, 727, 445, 360, 291, 458, 33808, 87, 287, 76, 7183, 3157, 498, 2232, 498, 51480, 51480, 287, 76, 7183, 307, 2232, 498, 568, 13, 15, 307, 6572, 538, 264, 565, 341, 307, 4736, 550, 309, 576, 445, 312, 33808, 87, 287, 76, 7183, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10136174288662997, "compression_ratio": 1.7699115044247788, "no_caption_prob": 4.3317500967532396e-05}, {"id": 363, "seek": 235996, "start": 2366.44, "end": 2372.92, "text": " your cdn can you briefly go about how that works and how complex that is sure yeah so you essentially", "tokens": [50364, 309, 294, 264, 2701, 361, 3015, 370, 321, 2825, 466, 34198, 281, 269, 67, 77, 570, 437, 291, 1322, 2170, 17826, 281, 50688, 50688, 428, 269, 67, 77, 393, 291, 10515, 352, 466, 577, 300, 1985, 293, 577, 3997, 300, 307, 988, 1338, 370, 291, 4476, 51012, 51040, 370, 287, 76, 7183, 568, 13, 15, 2232, 456, 307, 364, 3157, 5622, 370, 291, 727, 445, 360, 291, 458, 33808, 87, 287, 76, 7183, 3157, 498, 2232, 498, 51480, 51480, 287, 76, 7183, 307, 2232, 498, 568, 13, 15, 307, 6572, 538, 264, 565, 341, 307, 4736, 550, 309, 576, 445, 312, 33808, 87, 287, 76, 7183, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10136174288662997, "compression_ratio": 1.7699115044247788, "no_caption_prob": 4.3317500967532396e-05}, {"id": 364, "seek": 235996, "start": 2373.48, "end": 2382.28, "text": " so lm pages 2.0 uh there is an init command so you could just do you know npx lm pages init if uh if", "tokens": [50364, 309, 294, 264, 2701, 361, 3015, 370, 321, 2825, 466, 34198, 281, 269, 67, 77, 570, 437, 291, 1322, 2170, 17826, 281, 50688, 50688, 428, 269, 67, 77, 393, 291, 10515, 352, 466, 577, 300, 1985, 293, 577, 3997, 300, 307, 988, 1338, 370, 291, 4476, 51012, 51040, 370, 287, 76, 7183, 568, 13, 15, 2232, 456, 307, 364, 3157, 5622, 370, 291, 727, 445, 360, 291, 458, 33808, 87, 287, 76, 7183, 3157, 498, 2232, 498, 51480, 51480, 287, 76, 7183, 307, 2232, 498, 568, 13, 15, 307, 6572, 538, 264, 565, 341, 307, 4736, 550, 309, 576, 445, 312, 33808, 87, 287, 76, 7183, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10136174288662997, "compression_ratio": 1.7699115044247788, "no_caption_prob": 4.3317500967532396e-05}, {"id": 365, "seek": 235996, "start": 2382.28, "end": 2388.36, "text": " lm pages is uh if 2.0 is published by the time this is released then it would just be npx lm pages", "tokens": [50364, 309, 294, 264, 2701, 361, 3015, 370, 321, 2825, 466, 34198, 281, 269, 67, 77, 570, 437, 291, 1322, 2170, 17826, 281, 50688, 50688, 428, 269, 67, 77, 393, 291, 10515, 352, 466, 577, 300, 1985, 293, 577, 3997, 300, 307, 988, 1338, 370, 291, 4476, 51012, 51040, 370, 287, 76, 7183, 568, 13, 15, 2232, 456, 307, 364, 3157, 5622, 370, 291, 727, 445, 360, 291, 458, 33808, 87, 287, 76, 7183, 3157, 498, 2232, 498, 51480, 51480, 287, 76, 7183, 307, 2232, 498, 568, 13, 15, 307, 6572, 538, 264, 565, 341, 307, 4736, 550, 309, 576, 445, 312, 33808, 87, 287, 76, 7183, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.10136174288662997, "compression_ratio": 1.7699115044247788, "no_caption_prob": 4.3317500967532396e-05}, {"id": 366, "seek": 238836, "start": 2388.36, "end": 2393.88, "text": " init if it's not then i believe in you dylan you can do it i believe in me too yeah i've got four", "tokens": [50364, 3157, 498, 309, 311, 406, 550, 741, 1697, 294, 291, 274, 24691, 291, 393, 360, 309, 741, 1697, 294, 385, 886, 1338, 741, 600, 658, 1451, 50640, 50640, 3259, 291, 2140, 293, 458, 1968, 415, 20263, 420, 406, 300, 311, 2074, 1338, 2232, 370, 457, 1338, 731, 741, 603, 741, 603, 51100, 51100, 829, 264, 9415, 10060, 294, 264, 855, 5570, 370, 550, 291, 600, 658, 257, 25204, 287, 76, 724, 287, 76, 7183, 51436, 51436, 3861, 293, 2232, 291, 458, 498, 291, 434, 34198, 309, 281, 2533, 75, 2505, 291, 393, 297, 14395, 3625, 264, 2533, 75, 2505, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1068418188002503, "compression_ratio": 1.7716894977168949, "no_caption_prob": 4.6110450057312846e-05}, {"id": 367, "seek": 238836, "start": 2393.88, "end": 2403.08, "text": " weeks you listen and know whether he succeeded or not that's true yeah uh so but yeah well i'll i'll", "tokens": [50364, 3157, 498, 309, 311, 406, 550, 741, 1697, 294, 291, 274, 24691, 291, 393, 360, 309, 741, 1697, 294, 385, 886, 1338, 741, 600, 658, 1451, 50640, 50640, 3259, 291, 2140, 293, 458, 1968, 415, 20263, 420, 406, 300, 311, 2074, 1338, 2232, 370, 457, 1338, 731, 741, 603, 741, 603, 51100, 51100, 829, 264, 9415, 10060, 294, 264, 855, 5570, 370, 550, 291, 600, 658, 257, 25204, 287, 76, 724, 287, 76, 7183, 51436, 51436, 3861, 293, 2232, 291, 458, 498, 291, 434, 34198, 309, 281, 2533, 75, 2505, 291, 393, 297, 14395, 3625, 264, 2533, 75, 2505, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1068418188002503, "compression_ratio": 1.7716894977168949, "no_caption_prob": 4.6110450057312846e-05}, {"id": 368, "seek": 238836, "start": 2403.08, "end": 2409.8, "text": " put the instructions regardless in the show notes so then you've got a skeleton lm app lm pages", "tokens": [50364, 3157, 498, 309, 311, 406, 550, 741, 1697, 294, 291, 274, 24691, 291, 393, 360, 309, 741, 1697, 294, 385, 886, 1338, 741, 600, 658, 1451, 50640, 50640, 3259, 291, 2140, 293, 458, 1968, 415, 20263, 420, 406, 300, 311, 2074, 1338, 2232, 370, 457, 1338, 731, 741, 603, 741, 603, 51100, 51100, 829, 264, 9415, 10060, 294, 264, 855, 5570, 370, 550, 291, 600, 658, 257, 25204, 287, 76, 724, 287, 76, 7183, 51436, 51436, 3861, 293, 2232, 291, 458, 498, 291, 434, 34198, 309, 281, 2533, 75, 2505, 291, 393, 297, 14395, 3625, 264, 2533, 75, 2505, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1068418188002503, "compression_ratio": 1.7716894977168949, "no_caption_prob": 4.6110450057312846e-05}, {"id": 369, "seek": 238836, "start": 2409.8, "end": 2415.88, "text": " application and uh you know if you're deploying it to netlify you can npm install the netlify", "tokens": [50364, 3157, 498, 309, 311, 406, 550, 741, 1697, 294, 291, 274, 24691, 291, 393, 360, 309, 741, 1697, 294, 385, 886, 1338, 741, 600, 658, 1451, 50640, 50640, 3259, 291, 2140, 293, 458, 1968, 415, 20263, 420, 406, 300, 311, 2074, 1338, 2232, 370, 457, 1338, 731, 741, 603, 741, 603, 51100, 51100, 829, 264, 9415, 10060, 294, 264, 855, 5570, 370, 550, 291, 600, 658, 257, 25204, 287, 76, 724, 287, 76, 7183, 51436, 51436, 3861, 293, 2232, 291, 458, 498, 291, 434, 34198, 309, 281, 2533, 75, 2505, 291, 393, 297, 14395, 3625, 264, 2533, 75, 2505, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1068418188002503, "compression_ratio": 1.7716894977168949, "no_caption_prob": 4.6110450057312846e-05}, {"id": 370, "seek": 241588, "start": 2415.88, "end": 2422.92, "text": " cli and then netlify init to get a netlify.toml configuration file that's going to have a command", "tokens": [50364, 596, 72, 293, 550, 2533, 75, 2505, 3157, 281, 483, 257, 2533, 75, 2505, 13, 83, 298, 75, 11694, 3991, 300, 311, 516, 281, 362, 257, 5622, 50716, 50716, 337, 264, 5622, 741, 519, 309, 297, 14395, 3625, 82, 337, 291, 287, 76, 7183, 2232, 7733, 366, 516, 281, 3651, 364, 297, 14395, 51020, 51020, 3625, 570, 570, 287, 76, 7183, 307, 364, 297, 14395, 33621, 293, 550, 1105, 293, 550, 291, 360, 287, 76, 291, 51348, 51348, 458, 287, 76, 7183, 1322, 293, 309, 23815, 264, 7098, 281, 257, 1483, 10820, 1105, 294, 428, 2533, 75, 2505, 6662, 291, 393, 980, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.07309490779660782, "compression_ratio": 1.8725490196078431, "no_caption_prob": 4.539540168480016e-05}, {"id": 371, "seek": 241588, "start": 2422.92, "end": 2429.0, "text": " for the command i think it npm installs for you lm pages uh apps are going to require an npm", "tokens": [50364, 596, 72, 293, 550, 2533, 75, 2505, 3157, 281, 483, 257, 2533, 75, 2505, 13, 83, 298, 75, 11694, 3991, 300, 311, 516, 281, 362, 257, 5622, 50716, 50716, 337, 264, 5622, 741, 519, 309, 297, 14395, 3625, 82, 337, 291, 287, 76, 7183, 2232, 7733, 366, 516, 281, 3651, 364, 297, 14395, 51020, 51020, 3625, 570, 570, 287, 76, 7183, 307, 364, 297, 14395, 33621, 293, 550, 1105, 293, 550, 291, 360, 287, 76, 291, 51348, 51348, 458, 287, 76, 7183, 1322, 293, 309, 23815, 264, 7098, 281, 257, 1483, 10820, 1105, 294, 428, 2533, 75, 2505, 6662, 291, 393, 980, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.07309490779660782, "compression_ratio": 1.8725490196078431, "no_caption_prob": 4.539540168480016e-05}, {"id": 372, "seek": 241588, "start": 2429.0, "end": 2435.56, "text": " install because because lm pages is an npm dependency and then um and then you do lm you", "tokens": [50364, 596, 72, 293, 550, 2533, 75, 2505, 3157, 281, 483, 257, 2533, 75, 2505, 13, 83, 298, 75, 11694, 3991, 300, 311, 516, 281, 362, 257, 5622, 50716, 50716, 337, 264, 5622, 741, 519, 309, 297, 14395, 3625, 82, 337, 291, 287, 76, 7183, 2232, 7733, 366, 516, 281, 3651, 364, 297, 14395, 51020, 51020, 3625, 570, 570, 287, 76, 7183, 307, 364, 297, 14395, 33621, 293, 550, 1105, 293, 550, 291, 360, 287, 76, 291, 51348, 51348, 458, 287, 76, 7183, 1322, 293, 309, 23815, 264, 7098, 281, 257, 1483, 10820, 1105, 294, 428, 2533, 75, 2505, 6662, 291, 393, 980, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.07309490779660782, "compression_ratio": 1.8725490196078431, "no_caption_prob": 4.539540168480016e-05}, {"id": 373, "seek": 241588, "start": 2435.56, "end": 2442.6, "text": " know lm pages build and it generates the files to a dist folder um in your netlify config you can tell", "tokens": [50364, 596, 72, 293, 550, 2533, 75, 2505, 3157, 281, 483, 257, 2533, 75, 2505, 13, 83, 298, 75, 11694, 3991, 300, 311, 516, 281, 362, 257, 5622, 50716, 50716, 337, 264, 5622, 741, 519, 309, 297, 14395, 3625, 82, 337, 291, 287, 76, 7183, 2232, 7733, 366, 516, 281, 3651, 364, 297, 14395, 51020, 51020, 3625, 570, 570, 287, 76, 7183, 307, 364, 297, 14395, 33621, 293, 550, 1105, 293, 550, 291, 360, 287, 76, 291, 51348, 51348, 458, 287, 76, 7183, 1322, 293, 309, 23815, 264, 7098, 281, 257, 1483, 10820, 1105, 294, 428, 2533, 75, 2505, 6662, 291, 393, 980, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.07309490779660782, "compression_ratio": 1.8725490196078431, "no_caption_prob": 4.539540168480016e-05}, {"id": 374, "seek": 244260, "start": 2442.6, "end": 2447.08, "text": " it that the folder to publish is your dist folder and then you push that up to netlify and it's gonna", "tokens": [50364, 309, 300, 264, 10820, 281, 11374, 307, 428, 1483, 10820, 293, 550, 291, 2944, 300, 493, 281, 2533, 75, 2505, 293, 309, 311, 799, 50588, 50616, 1190, 287, 76, 7183, 1322, 293, 11374, 264, 1483, 10820, 293, 586, 291, 600, 658, 364, 287, 76, 7183, 724, 1392, 741, 3811, 291, 50904, 50904, 920, 643, 281, 1465, 493, 337, 2533, 75, 2505, 1310, 1689, 264, 1737, 12362, 307, 1596, 14537, 370, 498, 291, 434, 2390, 51284, 51284, 257, 18240, 1716, 10486, 366, 291, 291, 1582, 380, 362, 281, 1689, 457, 456, 366, 3195, 295, 665, 16058, 11330, 51556, 51556, 484, 456, 293, 2533, 75, 2505, 741, 600, 668, 588, 588, 2055, 365, 1338, 300, 311, 437, 741, 764, 611, 337, 452, 23407, 293, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04610415110512385, "compression_ratio": 1.8308823529411764, "no_caption_prob": 1.1125465789518785e-05}, {"id": 375, "seek": 244260, "start": 2447.64, "end": 2453.4, "text": " run lm pages build and publish the dist folder and now you've got an lm pages app okay i imagine you", "tokens": [50364, 309, 300, 264, 10820, 281, 11374, 307, 428, 1483, 10820, 293, 550, 291, 2944, 300, 493, 281, 2533, 75, 2505, 293, 309, 311, 799, 50588, 50616, 1190, 287, 76, 7183, 1322, 293, 11374, 264, 1483, 10820, 293, 586, 291, 600, 658, 364, 287, 76, 7183, 724, 1392, 741, 3811, 291, 50904, 50904, 920, 643, 281, 1465, 493, 337, 2533, 75, 2505, 1310, 1689, 264, 1737, 12362, 307, 1596, 14537, 370, 498, 291, 434, 2390, 51284, 51284, 257, 18240, 1716, 10486, 366, 291, 291, 1582, 380, 362, 281, 1689, 457, 456, 366, 3195, 295, 665, 16058, 11330, 51556, 51556, 484, 456, 293, 2533, 75, 2505, 741, 600, 668, 588, 588, 2055, 365, 1338, 300, 311, 437, 741, 764, 611, 337, 452, 23407, 293, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04610415110512385, "compression_ratio": 1.8308823529411764, "no_caption_prob": 1.1125465789518785e-05}, {"id": 376, "seek": 244260, "start": 2453.4, "end": 2461.0, "text": " still need to sign up for netlify maybe pay the free tier is quite generous so if you're building", "tokens": [50364, 309, 300, 264, 10820, 281, 11374, 307, 428, 1483, 10820, 293, 550, 291, 2944, 300, 493, 281, 2533, 75, 2505, 293, 309, 311, 799, 50588, 50616, 1190, 287, 76, 7183, 1322, 293, 11374, 264, 1483, 10820, 293, 586, 291, 600, 658, 364, 287, 76, 7183, 724, 1392, 741, 3811, 291, 50904, 50904, 920, 643, 281, 1465, 493, 337, 2533, 75, 2505, 1310, 1689, 264, 1737, 12362, 307, 1596, 14537, 370, 498, 291, 434, 2390, 51284, 51284, 257, 18240, 1716, 10486, 366, 291, 291, 1582, 380, 362, 281, 1689, 457, 456, 366, 3195, 295, 665, 16058, 11330, 51556, 51556, 484, 456, 293, 2533, 75, 2505, 741, 600, 668, 588, 588, 2055, 365, 1338, 300, 311, 437, 741, 764, 611, 337, 452, 23407, 293, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04610415110512385, "compression_ratio": 1.8308823529411764, "no_caption_prob": 1.1125465789518785e-05}, {"id": 377, "seek": 244260, "start": 2461.0, "end": 2466.44, "text": " a hobby project chances are you you won't have to pay but there are lots of good hosting providers", "tokens": [50364, 309, 300, 264, 10820, 281, 11374, 307, 428, 1483, 10820, 293, 550, 291, 2944, 300, 493, 281, 2533, 75, 2505, 293, 309, 311, 799, 50588, 50616, 1190, 287, 76, 7183, 1322, 293, 11374, 264, 1483, 10820, 293, 586, 291, 600, 658, 364, 287, 76, 7183, 724, 1392, 741, 3811, 291, 50904, 50904, 920, 643, 281, 1465, 493, 337, 2533, 75, 2505, 1310, 1689, 264, 1737, 12362, 307, 1596, 14537, 370, 498, 291, 434, 2390, 51284, 51284, 257, 18240, 1716, 10486, 366, 291, 291, 1582, 380, 362, 281, 1689, 457, 456, 366, 3195, 295, 665, 16058, 11330, 51556, 51556, 484, 456, 293, 2533, 75, 2505, 741, 600, 668, 588, 588, 2055, 365, 1338, 300, 311, 437, 741, 764, 611, 337, 452, 23407, 293, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04610415110512385, "compression_ratio": 1.8308823529411764, "no_caption_prob": 1.1125465789518785e-05}, {"id": 378, "seek": 244260, "start": 2466.44, "end": 2471.7999999999997, "text": " out there and netlify i've been very very happy with yeah that's what i use also for my plugin and", "tokens": [50364, 309, 300, 264, 10820, 281, 11374, 307, 428, 1483, 10820, 293, 550, 291, 2944, 300, 493, 281, 2533, 75, 2505, 293, 309, 311, 799, 50588, 50616, 1190, 287, 76, 7183, 1322, 293, 11374, 264, 1483, 10820, 293, 586, 291, 600, 658, 364, 287, 76, 7183, 724, 1392, 741, 3811, 291, 50904, 50904, 920, 643, 281, 1465, 493, 337, 2533, 75, 2505, 1310, 1689, 264, 1737, 12362, 307, 1596, 14537, 370, 498, 291, 434, 2390, 51284, 51284, 257, 18240, 1716, 10486, 366, 291, 291, 1582, 380, 362, 281, 1689, 457, 456, 366, 3195, 295, 665, 16058, 11330, 51556, 51556, 484, 456, 293, 2533, 75, 2505, 741, 600, 668, 588, 588, 2055, 365, 1338, 300, 311, 437, 741, 764, 611, 337, 452, 23407, 293, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04610415110512385, "compression_ratio": 1.8308823529411764, "no_caption_prob": 1.1125465789518785e-05}, {"id": 379, "seek": 247180, "start": 2471.8, "end": 2478.52, "text": " i don't think i've paid anything except the domain name obviously all right so lm pages 2.0 is", "tokens": [50364, 741, 500, 380, 519, 741, 600, 4835, 1340, 3993, 264, 9274, 1315, 2745, 439, 558, 370, 287, 76, 7183, 568, 13, 15, 307, 50700, 50700, 18587, 813, 287, 79, 1660, 472, 337, 264, 561, 567, 366, 1228, 309, 1217, 2232, 486, 264, 17011, 312, 2252, 51000, 51000, 420, 360, 291, 362, 604, 6082, 322, 577, 281, 360, 300, 1338, 300, 311, 257, 665, 1168, 370, 731, 370, 456, 366, 257, 1326, 51292, 51324, 10392, 300, 1310, 321, 820, 1105, 5366, 700, 300, 321, 2378, 380, 2825, 466, 1939, 370, 365, 287, 76, 7183, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.07396620819249104, "compression_ratio": 1.634453781512605, "no_caption_prob": 3.9441536500817165e-05}, {"id": 380, "seek": 247180, "start": 2478.52, "end": 2484.52, "text": " simpler than lpages one for the people who are using it already uh will the migration be difficult", "tokens": [50364, 741, 500, 380, 519, 741, 600, 4835, 1340, 3993, 264, 9274, 1315, 2745, 439, 558, 370, 287, 76, 7183, 568, 13, 15, 307, 50700, 50700, 18587, 813, 287, 79, 1660, 472, 337, 264, 561, 567, 366, 1228, 309, 1217, 2232, 486, 264, 17011, 312, 2252, 51000, 51000, 420, 360, 291, 362, 604, 6082, 322, 577, 281, 360, 300, 1338, 300, 311, 257, 665, 1168, 370, 731, 370, 456, 366, 257, 1326, 51292, 51324, 10392, 300, 1310, 321, 820, 1105, 5366, 700, 300, 321, 2378, 380, 2825, 466, 1939, 370, 365, 287, 76, 7183, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.07396620819249104, "compression_ratio": 1.634453781512605, "no_caption_prob": 3.9441536500817165e-05}, {"id": 381, "seek": 247180, "start": 2484.52, "end": 2490.36, "text": " or do you have any tips on how to do that yeah that's a good question so well so there are a few", "tokens": [50364, 741, 500, 380, 519, 741, 600, 4835, 1340, 3993, 264, 9274, 1315, 2745, 439, 558, 370, 287, 76, 7183, 568, 13, 15, 307, 50700, 50700, 18587, 813, 287, 79, 1660, 472, 337, 264, 561, 567, 366, 1228, 309, 1217, 2232, 486, 264, 17011, 312, 2252, 51000, 51000, 420, 360, 291, 362, 604, 6082, 322, 577, 281, 360, 300, 1338, 300, 311, 257, 665, 1168, 370, 731, 370, 456, 366, 257, 1326, 51292, 51324, 10392, 300, 1310, 321, 820, 1105, 5366, 700, 300, 321, 2378, 380, 2825, 466, 1939, 370, 365, 287, 76, 7183, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.07396620819249104, "compression_ratio": 1.634453781512605, "no_caption_prob": 3.9441536500817165e-05}, {"id": 382, "seek": 247180, "start": 2491.0, "end": 2496.44, "text": " concepts that maybe we should um introduce first that we haven't talked about yet so with lm pages", "tokens": [50364, 741, 500, 380, 519, 741, 600, 4835, 1340, 3993, 264, 9274, 1315, 2745, 439, 558, 370, 287, 76, 7183, 568, 13, 15, 307, 50700, 50700, 18587, 813, 287, 79, 1660, 472, 337, 264, 561, 567, 366, 1228, 309, 1217, 2232, 486, 264, 17011, 312, 2252, 51000, 51000, 420, 360, 291, 362, 604, 6082, 322, 577, 281, 360, 300, 1338, 300, 311, 257, 665, 1168, 370, 731, 370, 456, 366, 257, 1326, 51292, 51324, 10392, 300, 1310, 321, 820, 1105, 5366, 700, 300, 321, 2378, 380, 2825, 466, 1939, 370, 365, 287, 76, 7183, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.07396620819249104, "compression_ratio": 1.634453781512605, "no_caption_prob": 3.9441536500817165e-05}, {"id": 383, "seek": 249644, "start": 2496.44, "end": 2503.88, "text": " 2.0 they're um so very similar if you've used lm spa then these patterns are going to feel very", "tokens": [50364, 568, 13, 15, 436, 434, 1105, 370, 588, 2531, 498, 291, 600, 1143, 287, 76, 637, 64, 550, 613, 8294, 366, 516, 281, 841, 588, 50736, 50736, 4963, 1105, 741, 658, 257, 688, 295, 10249, 490, 367, 6277, 311, 3109, 281, 341, 370, 456, 307, 257, 2232, 4009, 17330, 3028, 51124, 51124, 10820, 3028, 365, 257, 4238, 280, 370, 498, 291, 362, 257, 3028, 5893, 6968, 5893, 806, 76, 291, 458, 3028, 5893, 6968, 10088, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10066205640382404, "compression_ratio": 1.5913978494623655, "no_caption_prob": 0.00021993355767335743}, {"id": 384, "seek": 249644, "start": 2503.88, "end": 2511.64, "text": " familiar um i got a lot of inspiration from ryan's approach to this so there is a uh source slash page", "tokens": [50364, 568, 13, 15, 436, 434, 1105, 370, 588, 2531, 498, 291, 600, 1143, 287, 76, 637, 64, 550, 613, 8294, 366, 516, 281, 841, 588, 50736, 50736, 4963, 1105, 741, 658, 257, 688, 295, 10249, 490, 367, 6277, 311, 3109, 281, 341, 370, 456, 307, 257, 2232, 4009, 17330, 3028, 51124, 51124, 10820, 3028, 365, 257, 4238, 280, 370, 498, 291, 362, 257, 3028, 5893, 6968, 5893, 806, 76, 291, 458, 3028, 5893, 6968, 10088, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10066205640382404, "compression_ratio": 1.5913978494623655, "no_caption_prob": 0.00021993355767335743}, {"id": 385, "seek": 249644, "start": 2511.64, "end": 2519.56, "text": " folder page with a capital p so if you have a page dot blog dot elm you know page dot blog module", "tokens": [50364, 568, 13, 15, 436, 434, 1105, 370, 588, 2531, 498, 291, 600, 1143, 287, 76, 637, 64, 550, 613, 8294, 366, 516, 281, 841, 588, 50736, 50736, 4963, 1105, 741, 658, 257, 688, 295, 10249, 490, 367, 6277, 311, 3109, 281, 341, 370, 456, 307, 257, 2232, 4009, 17330, 3028, 51124, 51124, 10820, 3028, 365, 257, 4238, 280, 370, 498, 291, 362, 257, 3028, 5893, 6968, 5893, 806, 76, 291, 458, 3028, 5893, 6968, 10088, 51520, 51520], "temperature": 0.0, "avg_logprob": -0.10066205640382404, "compression_ratio": 1.5913978494623655, "no_caption_prob": 0.00021993355767335743}, {"id": 386, "seek": 251956, "start": 2519.56, "end": 2527.16, "text": " like like we described before it's a file based router so page dot blog corresponds to slash blog", "tokens": [50364, 411, 411, 321, 7619, 949, 309, 311, 257, 3991, 2361, 22492, 370, 3028, 5893, 6968, 23249, 281, 17330, 6968, 50744, 50744, 3028, 5893, 8186, 23249, 281, 264, 5593, 3028, 17330, 293, 291, 393, 360, 257, 8546, 2232, 7955, 19904, 293, 370, 51188, 51188, 291, 727, 360, 1105, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 576, 6805, 281, 17330, 6968, 17330, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.03727354425372499, "compression_ratio": 1.8427672955974843, "no_caption_prob": 4.611038457369432e-05}, {"id": 387, "seek": 251956, "start": 2527.16, "end": 2536.04, "text": " page dot index corresponds to the root page slash and you can do a dynamic uh route segments and so", "tokens": [50364, 411, 411, 321, 7619, 949, 309, 311, 257, 3991, 2361, 22492, 370, 3028, 5893, 6968, 23249, 281, 17330, 6968, 50744, 50744, 3028, 5893, 8186, 23249, 281, 264, 5593, 3028, 17330, 293, 291, 393, 360, 257, 8546, 2232, 7955, 19904, 293, 370, 51188, 51188, 291, 727, 360, 1105, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 576, 6805, 281, 17330, 6968, 17330, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.03727354425372499, "compression_ratio": 1.8427672955974843, "no_caption_prob": 4.611038457369432e-05}, {"id": 388, "seek": 251956, "start": 2536.04, "end": 2544.84, "text": " you could do um page dot blog dot slug underscore and that would correspond to slash blog slash", "tokens": [50364, 411, 411, 321, 7619, 949, 309, 311, 257, 3991, 2361, 22492, 370, 3028, 5893, 6968, 23249, 281, 17330, 6968, 50744, 50744, 3028, 5893, 8186, 23249, 281, 264, 5593, 3028, 17330, 293, 291, 393, 360, 257, 8546, 2232, 7955, 19904, 293, 370, 51188, 51188, 291, 727, 360, 1105, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 576, 6805, 281, 17330, 6968, 17330, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.03727354425372499, "compression_ratio": 1.8427672955974843, "no_caption_prob": 4.611038457369432e-05}, {"id": 389, "seek": 254484, "start": 2544.84, "end": 2549.96, "text": " sometimes they write it as colon slug meaning that it's a dynamic segment that could it's a", "tokens": [50364, 2171, 436, 2464, 309, 382, 8255, 1061, 697, 3620, 300, 309, 311, 257, 8546, 9469, 300, 727, 309, 311, 257, 50620, 50620, 1081, 20480, 727, 312, 1340, 370, 17330, 6968, 17330, 7751, 370, 264, 636, 300, 300, 300, 1985, 307, 700, 295, 50964, 50964, 439, 1105, 291, 393, 764, 806, 76, 7183, 909, 370, 291, 727, 584, 806, 76, 7183, 909, 6968, 365, 257, 4238, 272, 293, 300, 311, 51324, 51324, 516, 281, 909, 4009, 3028, 17330, 6968, 5893, 806, 76, 291, 727, 360, 806, 76, 7183, 909, 6968, 5893, 1061, 697, 37556, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.055247773829194685, "compression_ratio": 1.8823529411764706, "no_caption_prob": 5.390846490627155e-05}, {"id": 390, "seek": 254484, "start": 2549.96, "end": 2556.84, "text": " placeholder could be anything so slash blog slash hello so the way that that that works is first of", "tokens": [50364, 2171, 436, 2464, 309, 382, 8255, 1061, 697, 3620, 300, 309, 311, 257, 8546, 9469, 300, 727, 309, 311, 257, 50620, 50620, 1081, 20480, 727, 312, 1340, 370, 17330, 6968, 17330, 7751, 370, 264, 636, 300, 300, 300, 1985, 307, 700, 295, 50964, 50964, 439, 1105, 291, 393, 764, 806, 76, 7183, 909, 370, 291, 727, 584, 806, 76, 7183, 909, 6968, 365, 257, 4238, 272, 293, 300, 311, 51324, 51324, 516, 281, 909, 4009, 3028, 17330, 6968, 5893, 806, 76, 291, 727, 360, 806, 76, 7183, 909, 6968, 5893, 1061, 697, 37556, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.055247773829194685, "compression_ratio": 1.8823529411764706, "no_caption_prob": 5.390846490627155e-05}, {"id": 391, "seek": 254484, "start": 2556.84, "end": 2564.04, "text": " all um you can use elm pages add so you could say elm pages add blog with a capital b and that's", "tokens": [50364, 2171, 436, 2464, 309, 382, 8255, 1061, 697, 3620, 300, 309, 311, 257, 8546, 9469, 300, 727, 309, 311, 257, 50620, 50620, 1081, 20480, 727, 312, 1340, 370, 17330, 6968, 17330, 7751, 370, 264, 636, 300, 300, 300, 1985, 307, 700, 295, 50964, 50964, 439, 1105, 291, 393, 764, 806, 76, 7183, 909, 370, 291, 727, 584, 806, 76, 7183, 909, 6968, 365, 257, 4238, 272, 293, 300, 311, 51324, 51324, 516, 281, 909, 4009, 3028, 17330, 6968, 5893, 806, 76, 291, 727, 360, 806, 76, 7183, 909, 6968, 5893, 1061, 697, 37556, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.055247773829194685, "compression_ratio": 1.8823529411764706, "no_caption_prob": 5.390846490627155e-05}, {"id": 392, "seek": 254484, "start": 2564.04, "end": 2572.76, "text": " going to add source page slash blog dot elm you could do elm pages add blog dot slug underscore", "tokens": [50364, 2171, 436, 2464, 309, 382, 8255, 1061, 697, 3620, 300, 309, 311, 257, 8546, 9469, 300, 727, 309, 311, 257, 50620, 50620, 1081, 20480, 727, 312, 1340, 370, 17330, 6968, 17330, 7751, 370, 264, 636, 300, 300, 300, 1985, 307, 700, 295, 50964, 50964, 439, 1105, 291, 393, 764, 806, 76, 7183, 909, 370, 291, 727, 584, 806, 76, 7183, 909, 6968, 365, 257, 4238, 272, 293, 300, 311, 51324, 51324, 516, 281, 909, 4009, 3028, 17330, 6968, 5893, 806, 76, 291, 727, 360, 806, 76, 7183, 909, 6968, 5893, 1061, 697, 37556, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.055247773829194685, "compression_ratio": 1.8823529411764706, "no_caption_prob": 5.390846490627155e-05}, {"id": 393, "seek": 257276, "start": 2572.76, "end": 2579.1600000000003, "text": " and that's going to give you the uh the route corresponding to slash blog slash colon slug", "tokens": [50364, 293, 300, 311, 516, 281, 976, 291, 264, 2232, 264, 7955, 11760, 281, 17330, 6968, 17330, 8255, 1061, 697, 50684, 50684, 370, 300, 311, 300, 311, 264, 700, 551, 281, 458, 1296, 806, 76, 7183, 502, 13, 15, 293, 568, 13, 15, 307, 300, 1379, 8657, 307, 51032, 51032, 819, 300, 456, 311, 257, 3991, 2361, 22492, 293, 370, 294, 502, 13, 15, 264, 18242, 645, 2232, 2361, 322, 7098, 294, 428, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.032461113051364295, "compression_ratio": 1.6946107784431137, "no_caption_prob": 5.01466320201871e-06}, {"id": 394, "seek": 257276, "start": 2579.1600000000003, "end": 2586.1200000000003, "text": " so that's that's the first thing to know between elm pages 1.0 and 2.0 is that whole setup is", "tokens": [50364, 293, 300, 311, 516, 281, 976, 291, 264, 2232, 264, 7955, 11760, 281, 17330, 6968, 17330, 8255, 1061, 697, 50684, 50684, 370, 300, 311, 300, 311, 264, 700, 551, 281, 458, 1296, 806, 76, 7183, 502, 13, 15, 293, 568, 13, 15, 307, 300, 1379, 8657, 307, 51032, 51032, 819, 300, 456, 311, 257, 3991, 2361, 22492, 293, 370, 294, 502, 13, 15, 264, 18242, 645, 2232, 2361, 322, 7098, 294, 428, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.032461113051364295, "compression_ratio": 1.6946107784431137, "no_caption_prob": 5.01466320201871e-06}, {"id": 395, "seek": 257276, "start": 2586.1200000000003, "end": 2595.2400000000002, "text": " different that there's a file based router and so in 1.0 the routes were uh based on files in your", "tokens": [50364, 293, 300, 311, 516, 281, 976, 291, 264, 2232, 264, 7955, 11760, 281, 17330, 6968, 17330, 8255, 1061, 697, 50684, 50684, 370, 300, 311, 300, 311, 264, 700, 551, 281, 458, 1296, 806, 76, 7183, 502, 13, 15, 293, 568, 13, 15, 307, 300, 1379, 8657, 307, 51032, 51032, 819, 300, 456, 311, 257, 3991, 2361, 22492, 293, 370, 294, 502, 13, 15, 264, 18242, 645, 2232, 2361, 322, 7098, 294, 428, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.032461113051364295, "compression_ratio": 1.6946107784431137, "no_caption_prob": 5.01466320201871e-06}, {"id": 396, "seek": 259524, "start": 2595.24, "end": 2602.8399999999997, "text": " content folder usually they were um markdown files and uh so if you had uh content slash blog slash", "tokens": [50364, 2701, 10820, 2673, 436, 645, 1105, 1491, 5093, 7098, 293, 2232, 370, 498, 291, 632, 2232, 2701, 17330, 6968, 17330, 50744, 50744, 7751, 5893, 275, 67, 550, 291, 576, 483, 257, 11760, 7955, 6968, 17330, 7751, 1338, 1392, 300, 311, 437, 741, 51020, 51020, 362, 294, 452, 6968, 382, 731, 293, 300, 307, 406, 516, 281, 312, 264, 1389, 294, 806, 76, 7183, 568, 13, 15, 558, 370, 291, 393, 51320, 51356, 1322, 300, 14980, 1228, 264, 2390, 8474, 365, 568, 13, 15, 420, 291, 393, 360, 1340, 1646, 291, 727, 2232, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06662007669607799, "compression_ratio": 1.7333333333333334, "no_caption_prob": 2.3551780031993985e-05}, {"id": 397, "seek": 259524, "start": 2602.8399999999997, "end": 2608.3599999999997, "text": " hello dot md then you would get a corresponding route blog slash hello yeah okay that's what i", "tokens": [50364, 2701, 10820, 2673, 436, 645, 1105, 1491, 5093, 7098, 293, 2232, 370, 498, 291, 632, 2232, 2701, 17330, 6968, 17330, 50744, 50744, 7751, 5893, 275, 67, 550, 291, 576, 483, 257, 11760, 7955, 6968, 17330, 7751, 1338, 1392, 300, 311, 437, 741, 51020, 51020, 362, 294, 452, 6968, 382, 731, 293, 300, 307, 406, 516, 281, 312, 264, 1389, 294, 806, 76, 7183, 568, 13, 15, 558, 370, 291, 393, 51320, 51356, 1322, 300, 14980, 1228, 264, 2390, 8474, 365, 568, 13, 15, 420, 291, 393, 360, 1340, 1646, 291, 727, 2232, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06662007669607799, "compression_ratio": 1.7333333333333334, "no_caption_prob": 2.3551780031993985e-05}, {"id": 398, "seek": 259524, "start": 2608.3599999999997, "end": 2614.3599999999997, "text": " have in my blog as well and that is not going to be the case in elm pages 2.0 right so you can", "tokens": [50364, 2701, 10820, 2673, 436, 645, 1105, 1491, 5093, 7098, 293, 2232, 370, 498, 291, 632, 2232, 2701, 17330, 6968, 17330, 50744, 50744, 7751, 5893, 275, 67, 550, 291, 576, 483, 257, 11760, 7955, 6968, 17330, 7751, 1338, 1392, 300, 311, 437, 741, 51020, 51020, 362, 294, 452, 6968, 382, 731, 293, 300, 307, 406, 516, 281, 312, 264, 1389, 294, 806, 76, 7183, 568, 13, 15, 558, 370, 291, 393, 51320, 51356, 1322, 300, 14980, 1228, 264, 2390, 8474, 365, 568, 13, 15, 420, 291, 393, 360, 1340, 1646, 291, 727, 2232, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06662007669607799, "compression_ratio": 1.7333333333333334, "no_caption_prob": 2.3551780031993985e-05}, {"id": 399, "seek": 259524, "start": 2615.08, "end": 2621.72, "text": " build that functionality using the building blocks with 2.0 or you can do anything else you could uh", "tokens": [50364, 2701, 10820, 2673, 436, 645, 1105, 1491, 5093, 7098, 293, 2232, 370, 498, 291, 632, 2232, 2701, 17330, 6968, 17330, 50744, 50744, 7751, 5893, 275, 67, 550, 291, 576, 483, 257, 11760, 7955, 6968, 17330, 7751, 1338, 1392, 300, 311, 437, 741, 51020, 51020, 362, 294, 452, 6968, 382, 731, 293, 300, 307, 406, 516, 281, 312, 264, 1389, 294, 806, 76, 7183, 568, 13, 15, 558, 370, 291, 393, 51320, 51356, 1322, 300, 14980, 1228, 264, 2390, 8474, 365, 568, 13, 15, 420, 291, 393, 360, 1340, 1646, 291, 727, 2232, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.06662007669607799, "compression_ratio": 1.7333333333333334, "no_caption_prob": 2.3551780031993985e-05}, {"id": 400, "seek": 262172, "start": 2621.72, "end": 2628.12, "text": " have your blog post coming from a cms with with uh 1.0 you couldn't um there wasn't a way to", "tokens": [50364, 362, 428, 6968, 2183, 1348, 490, 257, 269, 2592, 365, 365, 2232, 502, 13, 15, 291, 2809, 380, 1105, 456, 2067, 380, 257, 636, 281, 50684, 50716, 362, 257, 1412, 4009, 6997, 597, 13437, 18242, 291, 645, 516, 281, 362, 370, 294, 3037, 472, 1338, 291, 51048, 51048, 632, 13437, 276, 83, 79, 2086, 281, 483, 1412, 490, 8320, 3593, 293, 291, 632, 264, 3991, 2361, 32722, 51400, 51400, 558, 457, 309, 390, 12658, 760, 3991, 2361, 32722, 370, 309, 390, 257, 472, 281, 472, 18350, 1296, 257, 257, 4038, 75, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.07485347547029195, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.7968768335995264e-05}, {"id": 401, "seek": 262172, "start": 2628.7599999999998, "end": 2635.3999999999996, "text": " have a data source determine which static routes you were going to have so in version one yeah you", "tokens": [50364, 362, 428, 6968, 2183, 1348, 490, 257, 269, 2592, 365, 365, 2232, 502, 13, 15, 291, 2809, 380, 1105, 456, 2067, 380, 257, 636, 281, 50684, 50716, 362, 257, 1412, 4009, 6997, 597, 13437, 18242, 291, 645, 516, 281, 362, 370, 294, 3037, 472, 1338, 291, 51048, 51048, 632, 13437, 276, 83, 79, 2086, 281, 483, 1412, 490, 8320, 3593, 293, 291, 632, 264, 3991, 2361, 32722, 51400, 51400, 558, 457, 309, 390, 12658, 760, 3991, 2361, 32722, 370, 309, 390, 257, 472, 281, 472, 18350, 1296, 257, 257, 4038, 75, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.07485347547029195, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.7968768335995264e-05}, {"id": 402, "seek": 262172, "start": 2635.3999999999996, "end": 2642.4399999999996, "text": " had static htp yes to get data from external resources and you had the file based routing", "tokens": [50364, 362, 428, 6968, 2183, 1348, 490, 257, 269, 2592, 365, 365, 2232, 502, 13, 15, 291, 2809, 380, 1105, 456, 2067, 380, 257, 636, 281, 50684, 50716, 362, 257, 1412, 4009, 6997, 597, 13437, 18242, 291, 645, 516, 281, 362, 370, 294, 3037, 472, 1338, 291, 51048, 51048, 632, 13437, 276, 83, 79, 2086, 281, 483, 1412, 490, 8320, 3593, 293, 291, 632, 264, 3991, 2361, 32722, 51400, 51400, 558, 457, 309, 390, 12658, 760, 3991, 2361, 32722, 370, 309, 390, 257, 472, 281, 472, 18350, 1296, 257, 257, 4038, 75, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.07485347547029195, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.7968768335995264e-05}, {"id": 403, "seek": 262172, "start": 2642.4399999999996, "end": 2650.9199999999996, "text": " right but it was marked down file based routing so it was a one to one mapping between a a url", "tokens": [50364, 362, 428, 6968, 2183, 1348, 490, 257, 269, 2592, 365, 365, 2232, 502, 13, 15, 291, 2809, 380, 1105, 456, 2067, 380, 257, 636, 281, 50684, 50716, 362, 257, 1412, 4009, 6997, 597, 13437, 18242, 291, 645, 516, 281, 362, 370, 294, 3037, 472, 1338, 291, 51048, 51048, 632, 13437, 276, 83, 79, 2086, 281, 483, 1412, 490, 8320, 3593, 293, 291, 632, 264, 3991, 2361, 32722, 51400, 51400, 558, 457, 309, 390, 12658, 760, 3991, 2361, 32722, 370, 309, 390, 257, 472, 281, 472, 18350, 1296, 257, 257, 4038, 75, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.07485347547029195, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.7968768335995264e-05}, {"id": 404, "seek": 265092, "start": 2650.92, "end": 2657.48, "text": " and a file whereas in elm pages 2.0 it's a one to one mapping between a route and a module", "tokens": [50364, 293, 257, 3991, 9735, 294, 806, 76, 7183, 568, 13, 15, 309, 311, 257, 472, 281, 472, 18350, 1296, 257, 7955, 293, 257, 10088, 50692, 50692, 293, 562, 741, 584, 7955, 741, 914, 6968, 17330, 8546, 1061, 697, 307, 257, 7955, 406, 6968, 17330, 7751, 300, 311, 257, 4038, 75, 51164, 51164, 309, 311, 257, 3028, 370, 294, 502, 13, 15, 472, 3991, 294, 428, 2701, 10820, 1491, 5093, 3991, 2673, 390, 472, 4038, 75, 294, 568, 13, 15, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.04676720894962908, "compression_ratio": 1.630057803468208, "no_caption_prob": 1.341978077107342e-05}, {"id": 405, "seek": 265092, "start": 2657.48, "end": 2666.92, "text": " and when i say route i mean blog slash dynamic slug is a route not blog slash hello that's a url", "tokens": [50364, 293, 257, 3991, 9735, 294, 806, 76, 7183, 568, 13, 15, 309, 311, 257, 472, 281, 472, 18350, 1296, 257, 7955, 293, 257, 10088, 50692, 50692, 293, 562, 741, 584, 7955, 741, 914, 6968, 17330, 8546, 1061, 697, 307, 257, 7955, 406, 6968, 17330, 7751, 300, 311, 257, 4038, 75, 51164, 51164, 309, 311, 257, 3028, 370, 294, 502, 13, 15, 472, 3991, 294, 428, 2701, 10820, 1491, 5093, 3991, 2673, 390, 472, 4038, 75, 294, 568, 13, 15, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.04676720894962908, "compression_ratio": 1.630057803468208, "no_caption_prob": 1.341978077107342e-05}, {"id": 406, "seek": 265092, "start": 2666.92, "end": 2675.4, "text": " it's a page so in 1.0 one file in your content folder markdown file usually was one url in 2.0", "tokens": [50364, 293, 257, 3991, 9735, 294, 806, 76, 7183, 568, 13, 15, 309, 311, 257, 472, 281, 472, 18350, 1296, 257, 7955, 293, 257, 10088, 50692, 50692, 293, 562, 741, 584, 7955, 741, 914, 6968, 17330, 8546, 1061, 697, 307, 257, 7955, 406, 6968, 17330, 7751, 300, 311, 257, 4038, 75, 51164, 51164, 309, 311, 257, 3028, 370, 294, 502, 13, 15, 472, 3991, 294, 428, 2701, 10820, 1491, 5093, 3991, 2673, 390, 472, 4038, 75, 294, 568, 13, 15, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.04676720894962908, "compression_ratio": 1.630057803468208, "no_caption_prob": 1.341978077107342e-05}, {"id": 407, "seek": 267540, "start": 2675.4, "end": 2682.92, "text": " it's a module page dot blog dot slug underscore and that's that route which actually gives you", "tokens": [50364, 309, 311, 257, 10088, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 311, 300, 7955, 597, 767, 2709, 291, 50740, 50740, 3866, 7183, 293, 370, 498, 291, 1415, 281, 13799, 300, 281, 806, 76, 7183, 568, 13, 15, 370, 294, 806, 76, 7183, 568, 13, 15, 291, 362, 51124, 51124, 613, 3028, 16679, 588, 2531, 281, 2232, 613, 3028, 16679, 294, 806, 76, 637, 64, 370, 498, 291, 434, 17827, 257, 659, 51488, 51488, 28748, 7955, 597, 307, 437, 321, 600, 668, 1417, 466, 341, 1379, 565, 293, 26927, 2232, 300, 311, 406, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.04479965385125608, "compression_ratio": 1.820754716981132, "no_caption_prob": 2.4299555661855265e-05}, {"id": 408, "seek": 267540, "start": 2682.92, "end": 2690.6, "text": " multiple pages and so if you wanted to translate that to elm pages 2.0 so in elm pages 2.0 you have", "tokens": [50364, 309, 311, 257, 10088, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 311, 300, 7955, 597, 767, 2709, 291, 50740, 50740, 3866, 7183, 293, 370, 498, 291, 1415, 281, 13799, 300, 281, 806, 76, 7183, 568, 13, 15, 370, 294, 806, 76, 7183, 568, 13, 15, 291, 362, 51124, 51124, 613, 3028, 16679, 588, 2531, 281, 2232, 613, 3028, 16679, 294, 806, 76, 637, 64, 370, 498, 291, 434, 17827, 257, 659, 51488, 51488, 28748, 7955, 597, 307, 437, 321, 600, 668, 1417, 466, 341, 1379, 565, 293, 26927, 2232, 300, 311, 406, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.04479965385125608, "compression_ratio": 1.820754716981132, "no_caption_prob": 2.4299555661855265e-05}, {"id": 409, "seek": 267540, "start": 2690.6, "end": 2697.88, "text": " these page modules very similar to uh these page modules in elm spa so if you're defining a pre", "tokens": [50364, 309, 311, 257, 10088, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 311, 300, 7955, 597, 767, 2709, 291, 50740, 50740, 3866, 7183, 293, 370, 498, 291, 1415, 281, 13799, 300, 281, 806, 76, 7183, 568, 13, 15, 370, 294, 806, 76, 7183, 568, 13, 15, 291, 362, 51124, 51124, 613, 3028, 16679, 588, 2531, 281, 2232, 613, 3028, 16679, 294, 806, 76, 637, 64, 370, 498, 291, 434, 17827, 257, 659, 51488, 51488, 28748, 7955, 597, 307, 437, 321, 600, 668, 1417, 466, 341, 1379, 565, 293, 26927, 2232, 300, 311, 406, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.04479965385125608, "compression_ratio": 1.820754716981132, "no_caption_prob": 2.4299555661855265e-05}, {"id": 410, "seek": 267540, "start": 2697.88, "end": 2705.08, "text": " rendered route which is what we've been talking about this whole time and spoiler uh that's not", "tokens": [50364, 309, 311, 257, 10088, 3028, 5893, 6968, 5893, 1061, 697, 37556, 293, 300, 311, 300, 7955, 597, 767, 2709, 291, 50740, 50740, 3866, 7183, 293, 370, 498, 291, 1415, 281, 13799, 300, 281, 806, 76, 7183, 568, 13, 15, 370, 294, 806, 76, 7183, 568, 13, 15, 291, 362, 51124, 51124, 613, 3028, 16679, 588, 2531, 281, 2232, 613, 3028, 16679, 294, 806, 76, 637, 64, 370, 498, 291, 434, 17827, 257, 659, 51488, 51488, 28748, 7955, 597, 307, 437, 321, 600, 668, 1417, 466, 341, 1379, 565, 293, 26927, 2232, 300, 311, 406, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.04479965385125608, "compression_ratio": 1.820754716981132, "no_caption_prob": 2.4299555661855265e-05}, {"id": 411, "seek": 270508, "start": 2705.08, "end": 2711.48, "text": " the only thing it's it's sort of in an alpha phase but um i i do have some sort of alpha phase", "tokens": [50364, 264, 787, 551, 309, 311, 309, 311, 1333, 295, 294, 364, 8961, 5574, 457, 1105, 741, 741, 360, 362, 512, 1333, 295, 8961, 5574, 50684, 50684, 14980, 337, 884, 1333, 295, 7154, 1832, 293, 322, 4733, 322, 4733, 18242, 597, 321, 393, 483, 666, 50984, 50984, 300, 311, 257, 1379, 406, 511, 393, 295, 28271, 439, 558, 457, 718, 311, 445, 1879, 322, 659, 28748, 18242, 337, 586, 51236, 51236, 597, 307, 264, 2306, 300, 366, 2232, 264, 276, 83, 15480, 307, 659, 28748, 412, 1322, 565, 293, 370, 1105, 370, 281, 360, 300, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.03838452271052769, "compression_ratio": 1.8269230769230769, "no_caption_prob": 1.568926018080674e-05}, {"id": 412, "seek": 270508, "start": 2711.48, "end": 2717.48, "text": " functionality for doing sort of serverless and on demand on demand routes which we can get into", "tokens": [50364, 264, 787, 551, 309, 311, 309, 311, 1333, 295, 294, 364, 8961, 5574, 457, 1105, 741, 741, 360, 362, 512, 1333, 295, 8961, 5574, 50684, 50684, 14980, 337, 884, 1333, 295, 7154, 1832, 293, 322, 4733, 322, 4733, 18242, 597, 321, 393, 483, 666, 50984, 50984, 300, 311, 257, 1379, 406, 511, 393, 295, 28271, 439, 558, 457, 718, 311, 445, 1879, 322, 659, 28748, 18242, 337, 586, 51236, 51236, 597, 307, 264, 2306, 300, 366, 2232, 264, 276, 83, 15480, 307, 659, 28748, 412, 1322, 565, 293, 370, 1105, 370, 281, 360, 300, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.03838452271052769, "compression_ratio": 1.8269230769230769, "no_caption_prob": 1.568926018080674e-05}, {"id": 413, "seek": 270508, "start": 2717.48, "end": 2722.52, "text": " that's a whole nother can of worms all right but let's just focus on pre rendered routes for now", "tokens": [50364, 264, 787, 551, 309, 311, 309, 311, 1333, 295, 294, 364, 8961, 5574, 457, 1105, 741, 741, 360, 362, 512, 1333, 295, 8961, 5574, 50684, 50684, 14980, 337, 884, 1333, 295, 7154, 1832, 293, 322, 4733, 322, 4733, 18242, 597, 321, 393, 483, 666, 50984, 50984, 300, 311, 257, 1379, 406, 511, 393, 295, 28271, 439, 558, 457, 718, 311, 445, 1879, 322, 659, 28748, 18242, 337, 586, 51236, 51236, 597, 307, 264, 2306, 300, 366, 2232, 264, 276, 83, 15480, 307, 659, 28748, 412, 1322, 565, 293, 370, 1105, 370, 281, 360, 300, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.03838452271052769, "compression_ratio": 1.8269230769230769, "no_caption_prob": 1.568926018080674e-05}, {"id": 414, "seek": 270508, "start": 2722.52, "end": 2729.56, "text": " which is the ones that are uh the html is pre rendered at build time and so um so to do that", "tokens": [50364, 264, 787, 551, 309, 311, 309, 311, 1333, 295, 294, 364, 8961, 5574, 457, 1105, 741, 741, 360, 362, 512, 1333, 295, 8961, 5574, 50684, 50684, 14980, 337, 884, 1333, 295, 7154, 1832, 293, 322, 4733, 322, 4733, 18242, 597, 321, 393, 483, 666, 50984, 50984, 300, 311, 257, 1379, 406, 511, 393, 295, 28271, 439, 558, 457, 718, 311, 445, 1879, 322, 659, 28748, 18242, 337, 586, 51236, 51236, 597, 307, 264, 2306, 300, 366, 2232, 264, 276, 83, 15480, 307, 659, 28748, 412, 1322, 565, 293, 370, 1105, 370, 281, 360, 300, 51588, 51588], "temperature": 0.0, "avg_logprob": -0.03838452271052769, "compression_ratio": 1.8269230769230769, "no_caption_prob": 1.568926018080674e-05}, {"id": 415, "seek": 272956, "start": 2729.56, "end": 2736.12, "text": " you've got so you've got a top level page which is just like your your main in a in a regular elm", "tokens": [50364, 291, 600, 658, 370, 291, 600, 658, 257, 1192, 1496, 3028, 597, 307, 445, 411, 428, 428, 2135, 294, 257, 294, 257, 3890, 806, 76, 50692, 50692, 3861, 457, 309, 311, 264, 3028, 337, 1184, 3028, 10088, 370, 1184, 3028, 10088, 1278, 4201, 341, 1192, 1496, 3126, 51008, 51008, 1389, 280, 3028, 2158, 370, 498, 291, 360, 3028, 5893, 659, 15529, 291, 976, 309, 1378, 597, 6653, 291, 1105, 291, 458, 360, 264, 51416, 51416, 369, 78, 1412, 300, 321, 2825, 466, 291, 976, 309, 1412, 300, 321, 2825, 466, 293, 300, 1412, 307, 516, 281, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03302414894104004, "compression_ratio": 1.8985507246376812, "no_caption_prob": 4.133365655434318e-05}, {"id": 416, "seek": 272956, "start": 2736.12, "end": 2742.44, "text": " application but it's the page for each page module so each page module exposes this top level lower", "tokens": [50364, 291, 600, 658, 370, 291, 600, 658, 257, 1192, 1496, 3028, 597, 307, 445, 411, 428, 428, 2135, 294, 257, 294, 257, 3890, 806, 76, 50692, 50692, 3861, 457, 309, 311, 264, 3028, 337, 1184, 3028, 10088, 370, 1184, 3028, 10088, 1278, 4201, 341, 1192, 1496, 3126, 51008, 51008, 1389, 280, 3028, 2158, 370, 498, 291, 360, 3028, 5893, 659, 15529, 291, 976, 309, 1378, 597, 6653, 291, 1105, 291, 458, 360, 264, 51416, 51416, 369, 78, 1412, 300, 321, 2825, 466, 291, 976, 309, 1412, 300, 321, 2825, 466, 293, 300, 1412, 307, 516, 281, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03302414894104004, "compression_ratio": 1.8985507246376812, "no_caption_prob": 4.133365655434318e-05}, {"id": 417, "seek": 272956, "start": 2742.44, "end": 2750.6, "text": " case p page value so if you do page dot pre render you give it head which lets you um you know do the", "tokens": [50364, 291, 600, 658, 370, 291, 600, 658, 257, 1192, 1496, 3028, 597, 307, 445, 411, 428, 428, 2135, 294, 257, 294, 257, 3890, 806, 76, 50692, 50692, 3861, 457, 309, 311, 264, 3028, 337, 1184, 3028, 10088, 370, 1184, 3028, 10088, 1278, 4201, 341, 1192, 1496, 3126, 51008, 51008, 1389, 280, 3028, 2158, 370, 498, 291, 360, 3028, 5893, 659, 15529, 291, 976, 309, 1378, 597, 6653, 291, 1105, 291, 458, 360, 264, 51416, 51416, 369, 78, 1412, 300, 321, 2825, 466, 291, 976, 309, 1412, 300, 321, 2825, 466, 293, 300, 1412, 307, 516, 281, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03302414894104004, "compression_ratio": 1.8985507246376812, "no_caption_prob": 4.133365655434318e-05}, {"id": 418, "seek": 272956, "start": 2750.6, "end": 2755.0, "text": " seo data that we talked about you give it data that we talked about and that data is going to", "tokens": [50364, 291, 600, 658, 370, 291, 600, 658, 257, 1192, 1496, 3028, 597, 307, 445, 411, 428, 428, 2135, 294, 257, 294, 257, 3890, 806, 76, 50692, 50692, 3861, 457, 309, 311, 264, 3028, 337, 1184, 3028, 10088, 370, 1184, 3028, 10088, 1278, 4201, 341, 1192, 1496, 3126, 51008, 51008, 1389, 280, 3028, 2158, 370, 498, 291, 360, 3028, 5893, 659, 15529, 291, 976, 309, 1378, 597, 6653, 291, 1105, 291, 458, 360, 264, 51416, 51416, 369, 78, 1412, 300, 321, 2825, 466, 291, 976, 309, 1412, 300, 321, 2825, 466, 293, 300, 1412, 307, 516, 281, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03302414894104004, "compression_ratio": 1.8985507246376812, "no_caption_prob": 4.133365655434318e-05}, {"id": 419, "seek": 275500, "start": 2755.0, "end": 2761.8, "text": " be the data source it resolves that is available before init and then you've got routes so routes", "tokens": [50364, 312, 264, 1412, 4009, 309, 7923, 977, 300, 307, 2435, 949, 3157, 293, 550, 291, 600, 658, 18242, 370, 18242, 50704, 50736, 366, 264, 2232, 264, 18242, 300, 291, 434, 516, 281, 659, 15529, 370, 337, 257, 6968, 2183, 689, 775, 300, 7955, 51004, 51004, 808, 490, 370, 586, 577, 576, 291, 577, 576, 291, 6786, 18242, 498, 787, 456, 390, 512, 16694, 1166, 51292, 51292, 636, 281, 6786, 512, 1412, 291, 2978, 281, 5448, 281, 6964, 428, 18242, 1338, 498, 787, 321, 632, 257, 512, 733, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03191220105349363, "compression_ratio": 1.861244019138756, "no_caption_prob": 6.14411374044721e-06}, {"id": 420, "seek": 275500, "start": 2762.44, "end": 2767.8, "text": " are the uh the routes that you're going to pre render so for a blog post where does that route", "tokens": [50364, 312, 264, 1412, 4009, 309, 7923, 977, 300, 307, 2435, 949, 3157, 293, 550, 291, 600, 658, 18242, 370, 18242, 50704, 50736, 366, 264, 2232, 264, 18242, 300, 291, 434, 516, 281, 659, 15529, 370, 337, 257, 6968, 2183, 689, 775, 300, 7955, 51004, 51004, 808, 490, 370, 586, 577, 576, 291, 577, 576, 291, 6786, 18242, 498, 787, 456, 390, 512, 16694, 1166, 51292, 51292, 636, 281, 6786, 512, 1412, 291, 2978, 281, 5448, 281, 6964, 428, 18242, 1338, 498, 787, 321, 632, 257, 512, 733, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03191220105349363, "compression_ratio": 1.861244019138756, "no_caption_prob": 6.14411374044721e-06}, {"id": 421, "seek": 275500, "start": 2767.8, "end": 2773.56, "text": " come from so now how would you how would you describe routes if only there was some declarative", "tokens": [50364, 312, 264, 1412, 4009, 309, 7923, 977, 300, 307, 2435, 949, 3157, 293, 550, 291, 600, 658, 18242, 370, 18242, 50704, 50736, 366, 264, 2232, 264, 18242, 300, 291, 434, 516, 281, 659, 15529, 370, 337, 257, 6968, 2183, 689, 775, 300, 7955, 51004, 51004, 808, 490, 370, 586, 577, 576, 291, 577, 576, 291, 6786, 18242, 498, 787, 456, 390, 512, 16694, 1166, 51292, 51292, 636, 281, 6786, 512, 1412, 291, 2978, 281, 5448, 281, 6964, 428, 18242, 1338, 498, 787, 321, 632, 257, 512, 733, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03191220105349363, "compression_ratio": 1.861244019138756, "no_caption_prob": 6.14411374044721e-06}, {"id": 422, "seek": 275500, "start": 2773.56, "end": 2780.44, "text": " way to describe some data you needed to gather to define your routes yeah if only we had a some kind", "tokens": [50364, 312, 264, 1412, 4009, 309, 7923, 977, 300, 307, 2435, 949, 3157, 293, 550, 291, 600, 658, 18242, 370, 18242, 50704, 50736, 366, 264, 2232, 264, 18242, 300, 291, 434, 516, 281, 659, 15529, 370, 337, 257, 6968, 2183, 689, 775, 300, 7955, 51004, 51004, 808, 490, 370, 586, 577, 576, 291, 577, 576, 291, 6786, 18242, 498, 787, 456, 390, 512, 16694, 1166, 51292, 51292, 636, 281, 6786, 512, 1412, 291, 2978, 281, 5448, 281, 6964, 428, 18242, 1338, 498, 787, 321, 632, 257, 512, 733, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.03191220105349363, "compression_ratio": 1.861244019138756, "no_caption_prob": 6.14411374044721e-06}, {"id": 423, "seek": 278044, "start": 2780.44, "end": 2787.0, "text": " of data source yeah if you could like get some source of data declaratively yeah so it uses the", "tokens": [50364, 295, 1412, 4009, 1338, 498, 291, 727, 411, 483, 512, 4009, 295, 1412, 16694, 19020, 1338, 370, 309, 4960, 264, 50692, 50692, 1412, 4009, 1882, 72, 370, 257, 7955, 307, 257, 1412, 4009, 295, 1329, 295, 7955, 971, 4070, 370, 1105, 586, 7955, 971, 4070, 366, 51128, 51160, 264, 7955, 971, 4070, 366, 2584, 2361, 322, 428, 3028, 10088, 311, 1315, 570, 309, 311, 257, 3991, 2361, 51488, 51488, 32722, 2361, 322, 264, 1315, 295, 264, 10088, 370, 370, 337, 527, 1365, 295, 3028, 5893, 6968, 5893, 1061, 697, 37556, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.06716642481215457, "compression_ratio": 1.9095477386934674, "no_caption_prob": 2.3552107450086623e-05}, {"id": 424, "seek": 278044, "start": 2787.0, "end": 2795.7200000000003, "text": " data source api so a route is a data source of list of route params so um now route params are", "tokens": [50364, 295, 1412, 4009, 1338, 498, 291, 727, 411, 483, 512, 4009, 295, 1412, 16694, 19020, 1338, 370, 309, 4960, 264, 50692, 50692, 1412, 4009, 1882, 72, 370, 257, 7955, 307, 257, 1412, 4009, 295, 1329, 295, 7955, 971, 4070, 370, 1105, 586, 7955, 971, 4070, 366, 51128, 51160, 264, 7955, 971, 4070, 366, 2584, 2361, 322, 428, 3028, 10088, 311, 1315, 570, 309, 311, 257, 3991, 2361, 51488, 51488, 32722, 2361, 322, 264, 1315, 295, 264, 10088, 370, 370, 337, 527, 1365, 295, 3028, 5893, 6968, 5893, 1061, 697, 37556, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.06716642481215457, "compression_ratio": 1.9095477386934674, "no_caption_prob": 2.3552107450086623e-05}, {"id": 425, "seek": 278044, "start": 2796.36, "end": 2802.92, "text": " the route params are completely based on your page module's name because it's a file based", "tokens": [50364, 295, 1412, 4009, 1338, 498, 291, 727, 411, 483, 512, 4009, 295, 1412, 16694, 19020, 1338, 370, 309, 4960, 264, 50692, 50692, 1412, 4009, 1882, 72, 370, 257, 7955, 307, 257, 1412, 4009, 295, 1329, 295, 7955, 971, 4070, 370, 1105, 586, 7955, 971, 4070, 366, 51128, 51160, 264, 7955, 971, 4070, 366, 2584, 2361, 322, 428, 3028, 10088, 311, 1315, 570, 309, 311, 257, 3991, 2361, 51488, 51488, 32722, 2361, 322, 264, 1315, 295, 264, 10088, 370, 370, 337, 527, 1365, 295, 3028, 5893, 6968, 5893, 1061, 697, 37556, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.06716642481215457, "compression_ratio": 1.9095477386934674, "no_caption_prob": 2.3552107450086623e-05}, {"id": 426, "seek": 278044, "start": 2802.92, "end": 2809.64, "text": " routing based on the name of the module so so for our example of page dot blog dot slug underscore", "tokens": [50364, 295, 1412, 4009, 1338, 498, 291, 727, 411, 483, 512, 4009, 295, 1412, 16694, 19020, 1338, 370, 309, 4960, 264, 50692, 50692, 1412, 4009, 1882, 72, 370, 257, 7955, 307, 257, 1412, 4009, 295, 1329, 295, 7955, 971, 4070, 370, 1105, 586, 7955, 971, 4070, 366, 51128, 51160, 264, 7955, 971, 4070, 366, 2584, 2361, 322, 428, 3028, 10088, 311, 1315, 570, 309, 311, 257, 3991, 2361, 51488, 51488, 32722, 2361, 322, 264, 1315, 295, 264, 10088, 370, 370, 337, 527, 1365, 295, 3028, 5893, 6968, 5893, 1061, 697, 37556, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.06716642481215457, "compression_ratio": 1.9095477386934674, "no_caption_prob": 2.3552107450086623e-05}, {"id": 427, "seek": 280964, "start": 2809.64, "end": 2816.6, "text": " the route params are a record with lowercase slug equals string with no underscore so", "tokens": [50364, 264, 7955, 971, 4070, 366, 257, 2136, 365, 3126, 9765, 1061, 697, 6915, 6798, 365, 572, 37556, 370, 50712, 50744, 729, 8546, 19904, 366, 16805, 666, 666, 7909, 294, 428, 7955, 971, 4070, 2136, 498, 456, 366, 51140, 51140, 572, 8546, 7955, 19904, 550, 264, 7955, 971, 4070, 366, 6707, 411, 337, 3028, 5893, 6968, 370, 264, 18242, 51456, 51456, 291, 445, 360, 257, 1412, 4009, 295, 295, 729, 7955, 295, 257, 1329, 295, 7955, 971, 4070, 370, 337, 1365, 51712, 51764], "temperature": 0.0, "avg_logprob": -0.04874372482299805, "compression_ratio": 1.8704663212435233, "no_caption_prob": 5.507557489181636e-06}, {"id": 428, "seek": 280964, "start": 2817.24, "end": 2825.16, "text": " those dynamic segments are translated into into fields in your route params record if there are", "tokens": [50364, 264, 7955, 971, 4070, 366, 257, 2136, 365, 3126, 9765, 1061, 697, 6915, 6798, 365, 572, 37556, 370, 50712, 50744, 729, 8546, 19904, 366, 16805, 666, 666, 7909, 294, 428, 7955, 971, 4070, 2136, 498, 456, 366, 51140, 51140, 572, 8546, 7955, 19904, 550, 264, 7955, 971, 4070, 366, 6707, 411, 337, 3028, 5893, 6968, 370, 264, 18242, 51456, 51456, 291, 445, 360, 257, 1412, 4009, 295, 295, 729, 7955, 295, 257, 1329, 295, 7955, 971, 4070, 370, 337, 1365, 51712, 51764], "temperature": 0.0, "avg_logprob": -0.04874372482299805, "compression_ratio": 1.8704663212435233, "no_caption_prob": 5.507557489181636e-06}, {"id": 429, "seek": 280964, "start": 2825.16, "end": 2831.48, "text": " no dynamic route segments then the route params are empty like for page dot blog so the routes", "tokens": [50364, 264, 7955, 971, 4070, 366, 257, 2136, 365, 3126, 9765, 1061, 697, 6915, 6798, 365, 572, 37556, 370, 50712, 50744, 729, 8546, 19904, 366, 16805, 666, 666, 7909, 294, 428, 7955, 971, 4070, 2136, 498, 456, 366, 51140, 51140, 572, 8546, 7955, 19904, 550, 264, 7955, 971, 4070, 366, 6707, 411, 337, 3028, 5893, 6968, 370, 264, 18242, 51456, 51456, 291, 445, 360, 257, 1412, 4009, 295, 295, 729, 7955, 295, 257, 1329, 295, 7955, 971, 4070, 370, 337, 1365, 51712, 51764], "temperature": 0.0, "avg_logprob": -0.04874372482299805, "compression_ratio": 1.8704663212435233, "no_caption_prob": 5.507557489181636e-06}, {"id": 430, "seek": 280964, "start": 2831.48, "end": 2836.6, "text": " you just do a data source of of those route of a list of route params so for example", "tokens": [50364, 264, 7955, 971, 4070, 366, 257, 2136, 365, 3126, 9765, 1061, 697, 6915, 6798, 365, 572, 37556, 370, 50712, 50744, 729, 8546, 19904, 366, 16805, 666, 666, 7909, 294, 428, 7955, 971, 4070, 2136, 498, 456, 366, 51140, 51140, 572, 8546, 7955, 19904, 550, 264, 7955, 971, 4070, 366, 6707, 411, 337, 3028, 5893, 6968, 370, 264, 18242, 51456, 51456, 291, 445, 360, 257, 1412, 4009, 295, 295, 729, 7955, 295, 257, 1329, 295, 7955, 971, 4070, 370, 337, 1365, 51712, 51764], "temperature": 0.0, "avg_logprob": -0.04874372482299805, "compression_ratio": 1.8704663212435233, "no_caption_prob": 5.507557489181636e-06}, {"id": 431, "seek": 283660, "start": 2836.6, "end": 2843.88, "text": " uh we could say routes equals data source dot succeed and then a record slug equals hello", "tokens": [50364, 2232, 321, 727, 584, 18242, 6915, 1412, 4009, 5893, 7754, 293, 550, 257, 2136, 1061, 697, 6915, 7751, 50728, 50760, 293, 586, 562, 291, 352, 281, 291, 458, 562, 291, 1190, 264, 1905, 7154, 806, 76, 7183, 1905, 293, 352, 281, 352, 281, 264, 51096, 51096, 11185, 1269, 309, 493, 352, 281, 17330, 6968, 17330, 7751, 309, 311, 516, 281, 312, 22407, 428, 3028, 498, 291, 352, 281, 51420, 51420, 17330, 6968, 17330, 1242, 1409, 365, 806, 76, 7183, 309, 311, 516, 281, 976, 291, 257, 3356, 19, 3028, 293, 309, 311, 767, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.10840763013387464, "compression_ratio": 1.8585365853658538, "no_caption_prob": 5.562011938309297e-05}, {"id": 432, "seek": 283660, "start": 2844.52, "end": 2851.24, "text": " and now when you go to you know when you run the dev server elm pages dev and go to go to the", "tokens": [50364, 2232, 321, 727, 584, 18242, 6915, 1412, 4009, 5893, 7754, 293, 550, 257, 2136, 1061, 697, 6915, 7751, 50728, 50760, 293, 586, 562, 291, 352, 281, 291, 458, 562, 291, 1190, 264, 1905, 7154, 806, 76, 7183, 1905, 293, 352, 281, 352, 281, 264, 51096, 51096, 11185, 1269, 309, 493, 352, 281, 17330, 6968, 17330, 7751, 309, 311, 516, 281, 312, 22407, 428, 3028, 498, 291, 352, 281, 51420, 51420, 17330, 6968, 17330, 1242, 1409, 365, 806, 76, 7183, 309, 311, 516, 281, 976, 291, 257, 3356, 19, 3028, 293, 309, 311, 767, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.10840763013387464, "compression_ratio": 1.8585365853658538, "no_caption_prob": 5.562011938309297e-05}, {"id": 433, "seek": 283660, "start": 2851.24, "end": 2857.72, "text": " browser open it up go to slash blog slash hello it's going to be rendering your page if you go to", "tokens": [50364, 2232, 321, 727, 584, 18242, 6915, 1412, 4009, 5893, 7754, 293, 550, 257, 2136, 1061, 697, 6915, 7751, 50728, 50760, 293, 586, 562, 291, 352, 281, 291, 458, 562, 291, 1190, 264, 1905, 7154, 806, 76, 7183, 1905, 293, 352, 281, 352, 281, 264, 51096, 51096, 11185, 1269, 309, 493, 352, 281, 17330, 6968, 17330, 7751, 309, 311, 516, 281, 312, 22407, 428, 3028, 498, 291, 352, 281, 51420, 51420, 17330, 6968, 17330, 1242, 1409, 365, 806, 76, 7183, 309, 311, 516, 281, 976, 291, 257, 3356, 19, 3028, 293, 309, 311, 767, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.10840763013387464, "compression_ratio": 1.8585365853658538, "no_caption_prob": 5.562011938309297e-05}, {"id": 434, "seek": 283660, "start": 2857.72, "end": 2863.48, "text": " slash blog slash getting started with elm pages it's going to give you a 404 page and it's actually", "tokens": [50364, 2232, 321, 727, 584, 18242, 6915, 1412, 4009, 5893, 7754, 293, 550, 257, 2136, 1061, 697, 6915, 7751, 50728, 50760, 293, 586, 562, 291, 352, 281, 291, 458, 562, 291, 1190, 264, 1905, 7154, 806, 76, 7183, 1905, 293, 352, 281, 352, 281, 264, 51096, 51096, 11185, 1269, 309, 493, 352, 281, 17330, 6968, 17330, 7751, 309, 311, 516, 281, 312, 22407, 428, 3028, 498, 291, 352, 281, 51420, 51420, 17330, 6968, 17330, 1242, 1409, 365, 806, 76, 7183, 309, 311, 516, 281, 976, 291, 257, 3356, 19, 3028, 293, 309, 311, 767, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.10840763013387464, "compression_ratio": 1.8585365853658538, "no_caption_prob": 5.562011938309297e-05}, {"id": 435, "seek": 286348, "start": 2863.48, "end": 2869.72, "text": " uh i i put a lot of love into that 404 page to to actually like give you feedback saying hey this", "tokens": [50364, 2232, 741, 741, 829, 257, 688, 295, 959, 666, 300, 3356, 19, 3028, 281, 281, 767, 411, 976, 291, 5824, 1566, 4177, 341, 50676, 50676, 21447, 341, 7955, 457, 309, 994, 380, 2995, 604, 295, 264, 18242, 337, 341, 2010, 295, 3028, 264, 659, 28748, 51008, 51008, 18242, 293, 300, 311, 983, 741, 478, 4099, 291, 257, 3356, 19, 2232, 293, 550, 309, 311, 516, 281, 1329, 484, 264, 18242, 597, 51276, 51276, 321, 787, 7642, 7751, 382, 257, 7955, 1338, 787, 264, 1905, 7154, 558, 787, 264, 1905, 7154, 457, 1338, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.09502511223157246, "compression_ratio": 1.7522935779816513, "no_caption_prob": 2.4299715732922778e-05}, {"id": 436, "seek": 286348, "start": 2869.72, "end": 2876.36, "text": " matched this route but it didn't match any of the routes for this type of page the pre rendered", "tokens": [50364, 2232, 741, 741, 829, 257, 688, 295, 959, 666, 300, 3356, 19, 3028, 281, 281, 767, 411, 976, 291, 5824, 1566, 4177, 341, 50676, 50676, 21447, 341, 7955, 457, 309, 994, 380, 2995, 604, 295, 264, 18242, 337, 341, 2010, 295, 3028, 264, 659, 28748, 51008, 51008, 18242, 293, 300, 311, 983, 741, 478, 4099, 291, 257, 3356, 19, 2232, 293, 550, 309, 311, 516, 281, 1329, 484, 264, 18242, 597, 51276, 51276, 321, 787, 7642, 7751, 382, 257, 7955, 1338, 787, 264, 1905, 7154, 558, 787, 264, 1905, 7154, 457, 1338, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.09502511223157246, "compression_ratio": 1.7522935779816513, "no_caption_prob": 2.4299715732922778e-05}, {"id": 437, "seek": 286348, "start": 2876.36, "end": 2881.72, "text": " routes and that's why i'm showing you a 404 uh and then it's going to list out the routes which", "tokens": [50364, 2232, 741, 741, 829, 257, 688, 295, 959, 666, 300, 3356, 19, 3028, 281, 281, 767, 411, 976, 291, 5824, 1566, 4177, 341, 50676, 50676, 21447, 341, 7955, 457, 309, 994, 380, 2995, 604, 295, 264, 18242, 337, 341, 2010, 295, 3028, 264, 659, 28748, 51008, 51008, 18242, 293, 300, 311, 983, 741, 478, 4099, 291, 257, 3356, 19, 2232, 293, 550, 309, 311, 516, 281, 1329, 484, 264, 18242, 597, 51276, 51276, 321, 787, 7642, 7751, 382, 257, 7955, 1338, 787, 264, 1905, 7154, 558, 787, 264, 1905, 7154, 457, 1338, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.09502511223157246, "compression_ratio": 1.7522935779816513, "no_caption_prob": 2.4299715732922778e-05}, {"id": 438, "seek": 286348, "start": 2881.72, "end": 2887.4, "text": " we only defined hello as a route yeah only the dev server right only the dev server but yeah", "tokens": [50364, 2232, 741, 741, 829, 257, 688, 295, 959, 666, 300, 3356, 19, 3028, 281, 281, 767, 411, 976, 291, 5824, 1566, 4177, 341, 50676, 50676, 21447, 341, 7955, 457, 309, 994, 380, 2995, 604, 295, 264, 18242, 337, 341, 2010, 295, 3028, 264, 659, 28748, 51008, 51008, 18242, 293, 300, 311, 983, 741, 478, 4099, 291, 257, 3356, 19, 2232, 293, 550, 309, 311, 516, 281, 1329, 484, 264, 18242, 597, 51276, 51276, 321, 787, 7642, 7751, 382, 257, 7955, 1338, 787, 264, 1905, 7154, 558, 787, 264, 1905, 7154, 457, 1338, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.09502511223157246, "compression_ratio": 1.7522935779816513, "no_caption_prob": 2.4299715732922778e-05}, {"id": 439, "seek": 288740, "start": 2887.4, "end": 2893.96, "text": " i've seen a screenshot and it looks pretty cool again about trying to give the best air feedback", "tokens": [50364, 741, 600, 1612, 257, 27712, 293, 309, 1542, 1238, 1627, 797, 466, 1382, 281, 976, 264, 1151, 1988, 5824, 50692, 50692, 281, 264, 4195, 570, 456, 311, 370, 867, 721, 300, 393, 352, 2085, 411, 437, 1412, 7139, 366, 291, 51000, 51000, 23673, 278, 577, 307, 309, 33318, 437, 307, 264, 16505, 1412, 4009, 2086, 293, 291, 500, 380, 291, 458, 382, 257, 4195, 51360, 51360, 291, 291, 500, 380, 3361, 264, 2290, 498, 264, 2290, 1177, 380, 976, 291, 5824, 291, 434, 406, 516, 281, 3361, 309, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.09412323910257091, "compression_ratio": 1.780373831775701, "no_caption_prob": 6.302454130491242e-05}, {"id": 440, "seek": 288740, "start": 2893.96, "end": 2900.12, "text": " to the user because there's so many things that can go wrong like what data sources are you", "tokens": [50364, 741, 600, 1612, 257, 27712, 293, 309, 1542, 1238, 1627, 797, 466, 1382, 281, 976, 264, 1151, 1988, 5824, 50692, 50692, 281, 264, 4195, 570, 456, 311, 370, 867, 721, 300, 393, 352, 2085, 411, 437, 1412, 7139, 366, 291, 51000, 51000, 23673, 278, 577, 307, 309, 33318, 437, 307, 264, 16505, 1412, 4009, 2086, 293, 291, 500, 380, 291, 458, 382, 257, 4195, 51360, 51360, 291, 291, 500, 380, 3361, 264, 2290, 498, 264, 2290, 1177, 380, 976, 291, 5824, 291, 434, 406, 516, 281, 3361, 309, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.09412323910257091, "compression_ratio": 1.780373831775701, "no_caption_prob": 6.302454130491242e-05}, {"id": 441, "seek": 288740, "start": 2900.12, "end": 2907.32, "text": " fetching how is it mapped what is the resulting data source yes and you don't you know as a user", "tokens": [50364, 741, 600, 1612, 257, 27712, 293, 309, 1542, 1238, 1627, 797, 466, 1382, 281, 976, 264, 1151, 1988, 5824, 50692, 50692, 281, 264, 4195, 570, 456, 311, 370, 867, 721, 300, 393, 352, 2085, 411, 437, 1412, 7139, 366, 291, 51000, 51000, 23673, 278, 577, 307, 309, 33318, 437, 307, 264, 16505, 1412, 4009, 2086, 293, 291, 500, 380, 291, 458, 382, 257, 4195, 51360, 51360, 291, 291, 500, 380, 3361, 264, 2290, 498, 264, 2290, 1177, 380, 976, 291, 5824, 291, 434, 406, 516, 281, 3361, 309, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.09412323910257091, "compression_ratio": 1.780373831775701, "no_caption_prob": 6.302454130491242e-05}, {"id": 442, "seek": 288740, "start": 2907.32, "end": 2912.28, "text": " you you don't trust the tool if the tool doesn't give you feedback you're not going to trust it", "tokens": [50364, 741, 600, 1612, 257, 27712, 293, 309, 1542, 1238, 1627, 797, 466, 1382, 281, 976, 264, 1151, 1988, 5824, 50692, 50692, 281, 264, 4195, 570, 456, 311, 370, 867, 721, 300, 393, 352, 2085, 411, 437, 1412, 7139, 366, 291, 51000, 51000, 23673, 278, 577, 307, 309, 33318, 437, 307, 264, 16505, 1412, 4009, 2086, 293, 291, 500, 380, 291, 458, 382, 257, 4195, 51360, 51360, 291, 291, 500, 380, 3361, 264, 2290, 498, 264, 2290, 1177, 380, 976, 291, 5824, 291, 434, 406, 516, 281, 3361, 309, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.09412323910257091, "compression_ratio": 1.780373831775701, "no_caption_prob": 6.302454130491242e-05}, {"id": 443, "seek": 291228, "start": 2912.28, "end": 2917.4, "text": " it doesn't matter there's no way to earn a user's trust if you don't give them feedback you can't", "tokens": [50364, 309, 1177, 380, 1871, 456, 311, 572, 636, 281, 6012, 257, 4195, 311, 3361, 498, 291, 500, 380, 976, 552, 5824, 291, 393, 380, 50620, 50620, 445, 584, 3361, 385, 741, 478, 884, 264, 558, 551, 570, 498, 291, 434, 406, 2902, 552, 5824, 50876, 50876, 5824, 7829, 3361, 293, 498, 498, 264, 2232, 498, 264, 1905, 7154, 307, 1009, 558, 293, 575, 572, 15120, 294, 309, 51224, 51224, 293, 307, 588, 8398, 293, 25628, 82, 13038, 11694, 2962, 293, 7183, 1319, 420, 2035, 51548, 51548, 309, 767, 1177, 380, 1871, 498, 309, 311, 406, 2902, 5824, 291, 434, 920, 406, 516, 281, 3361, 309, 370, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06841521263122559, "compression_ratio": 1.937759336099585, "no_caption_prob": 0.0002491877239663154}, {"id": 444, "seek": 291228, "start": 2917.4, "end": 2922.52, "text": " just say trust me i'm doing the right thing because if you're not giving them feedback", "tokens": [50364, 309, 1177, 380, 1871, 456, 311, 572, 636, 281, 6012, 257, 4195, 311, 3361, 498, 291, 500, 380, 976, 552, 5824, 291, 393, 380, 50620, 50620, 445, 584, 3361, 385, 741, 478, 884, 264, 558, 551, 570, 498, 291, 434, 406, 2902, 552, 5824, 50876, 50876, 5824, 7829, 3361, 293, 498, 498, 264, 2232, 498, 264, 1905, 7154, 307, 1009, 558, 293, 575, 572, 15120, 294, 309, 51224, 51224, 293, 307, 588, 8398, 293, 25628, 82, 13038, 11694, 2962, 293, 7183, 1319, 420, 2035, 51548, 51548, 309, 767, 1177, 380, 1871, 498, 309, 311, 406, 2902, 5824, 291, 434, 920, 406, 516, 281, 3361, 309, 370, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06841521263122559, "compression_ratio": 1.937759336099585, "no_caption_prob": 0.0002491877239663154}, {"id": 445, "seek": 291228, "start": 2922.52, "end": 2929.48, "text": " feedback creates trust and if if the uh if the dev server is always right and has no bugs in it", "tokens": [50364, 309, 1177, 380, 1871, 456, 311, 572, 636, 281, 6012, 257, 4195, 311, 3361, 498, 291, 500, 380, 976, 552, 5824, 291, 393, 380, 50620, 50620, 445, 584, 3361, 385, 741, 478, 884, 264, 558, 551, 570, 498, 291, 434, 406, 2902, 552, 5824, 50876, 50876, 5824, 7829, 3361, 293, 498, 498, 264, 2232, 498, 264, 1905, 7154, 307, 1009, 558, 293, 575, 572, 15120, 294, 309, 51224, 51224, 293, 307, 588, 8398, 293, 25628, 82, 13038, 11694, 2962, 293, 7183, 1319, 420, 2035, 51548, 51548, 309, 767, 1177, 380, 1871, 498, 309, 311, 406, 2902, 5824, 291, 434, 920, 406, 516, 281, 3361, 309, 370, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06841521263122559, "compression_ratio": 1.937759336099585, "no_caption_prob": 0.0002491877239663154}, {"id": 446, "seek": 291228, "start": 2929.48, "end": 2935.96, "text": " and is very consistent and reloads anytime configuration changes and pages change or whatever", "tokens": [50364, 309, 1177, 380, 1871, 456, 311, 572, 636, 281, 6012, 257, 4195, 311, 3361, 498, 291, 500, 380, 976, 552, 5824, 291, 393, 380, 50620, 50620, 445, 584, 3361, 385, 741, 478, 884, 264, 558, 551, 570, 498, 291, 434, 406, 2902, 552, 5824, 50876, 50876, 5824, 7829, 3361, 293, 498, 498, 264, 2232, 498, 264, 1905, 7154, 307, 1009, 558, 293, 575, 572, 15120, 294, 309, 51224, 51224, 293, 307, 588, 8398, 293, 25628, 82, 13038, 11694, 2962, 293, 7183, 1319, 420, 2035, 51548, 51548, 309, 767, 1177, 380, 1871, 498, 309, 311, 406, 2902, 5824, 291, 434, 920, 406, 516, 281, 3361, 309, 370, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06841521263122559, "compression_ratio": 1.937759336099585, "no_caption_prob": 0.0002491877239663154}, {"id": 447, "seek": 291228, "start": 2935.96, "end": 2939.5600000000004, "text": " it actually doesn't matter if it's not giving feedback you're still not going to trust it so", "tokens": [50364, 309, 1177, 380, 1871, 456, 311, 572, 636, 281, 6012, 257, 4195, 311, 3361, 498, 291, 500, 380, 976, 552, 5824, 291, 393, 380, 50620, 50620, 445, 584, 3361, 385, 741, 478, 884, 264, 558, 551, 570, 498, 291, 434, 406, 2902, 552, 5824, 50876, 50876, 5824, 7829, 3361, 293, 498, 498, 264, 2232, 498, 264, 1905, 7154, 307, 1009, 558, 293, 575, 572, 15120, 294, 309, 51224, 51224, 293, 307, 588, 8398, 293, 25628, 82, 13038, 11694, 2962, 293, 7183, 1319, 420, 2035, 51548, 51548, 309, 767, 1177, 380, 1871, 498, 309, 311, 406, 2902, 5824, 291, 434, 920, 406, 516, 281, 3361, 309, 370, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06841521263122559, "compression_ratio": 1.937759336099585, "no_caption_prob": 0.0002491877239663154}, {"id": 448, "seek": 293956, "start": 2939.56, "end": 2945.32, "text": " yeah i i i really like that as a user i like using it and getting that feedback this is how you know", "tokens": [50364, 1338, 741, 741, 741, 534, 411, 300, 382, 257, 4195, 741, 411, 1228, 309, 293, 1242, 300, 5824, 341, 307, 577, 291, 458, 50652, 50652, 300, 274, 24691, 767, 12310, 466, 291, 4195, 411, 437, 415, 445, 848, 300, 390, 702, 702, 1917, 300, 311, 50972, 50972, 445, 15232, 702, 959, 309, 311, 257, 959, 5063, 300, 390, 300, 390, 452, 959, 5063, 281, 264, 4195, 1105, 1338, 51284, 51284, 300, 311, 577, 291, 1884, 18242, 586, 498, 291, 1415, 281, 1884, 18242, 281, 2995, 264, 371, 16, 5223, 295, 806, 76, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11586220065752666, "compression_ratio": 1.8829268292682926, "no_caption_prob": 4.264618837623857e-05}, {"id": 449, "seek": 293956, "start": 2945.32, "end": 2951.72, "text": " that dylan actually cares about you user like what he just said that was his his heart that's", "tokens": [50364, 1338, 741, 741, 741, 534, 411, 300, 382, 257, 4195, 741, 411, 1228, 309, 293, 1242, 300, 5824, 341, 307, 577, 291, 458, 50652, 50652, 300, 274, 24691, 767, 12310, 466, 291, 4195, 411, 437, 415, 445, 848, 300, 390, 702, 702, 1917, 300, 311, 50972, 50972, 445, 15232, 702, 959, 309, 311, 257, 959, 5063, 300, 390, 300, 390, 452, 959, 5063, 281, 264, 4195, 1105, 1338, 51284, 51284, 300, 311, 577, 291, 1884, 18242, 586, 498, 291, 1415, 281, 1884, 18242, 281, 2995, 264, 371, 16, 5223, 295, 806, 76, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11586220065752666, "compression_ratio": 1.8829268292682926, "no_caption_prob": 4.264618837623857e-05}, {"id": 450, "seek": 293956, "start": 2951.72, "end": 2957.96, "text": " just spreading his love it's a love letter that was that was my love letter to the user um yeah", "tokens": [50364, 1338, 741, 741, 741, 534, 411, 300, 382, 257, 4195, 741, 411, 1228, 309, 293, 1242, 300, 5824, 341, 307, 577, 291, 458, 50652, 50652, 300, 274, 24691, 767, 12310, 466, 291, 4195, 411, 437, 415, 445, 848, 300, 390, 702, 702, 1917, 300, 311, 50972, 50972, 445, 15232, 702, 959, 309, 311, 257, 959, 5063, 300, 390, 300, 390, 452, 959, 5063, 281, 264, 4195, 1105, 1338, 51284, 51284, 300, 311, 577, 291, 1884, 18242, 586, 498, 291, 1415, 281, 1884, 18242, 281, 2995, 264, 371, 16, 5223, 295, 806, 76, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11586220065752666, "compression_ratio": 1.8829268292682926, "no_caption_prob": 4.264618837623857e-05}, {"id": 451, "seek": 293956, "start": 2957.96, "end": 2965.08, "text": " that's how you create routes now if you wanted to create routes to match the v1 behavior of elm", "tokens": [50364, 1338, 741, 741, 741, 534, 411, 300, 382, 257, 4195, 741, 411, 1228, 309, 293, 1242, 300, 5824, 341, 307, 577, 291, 458, 50652, 50652, 300, 274, 24691, 767, 12310, 466, 291, 4195, 411, 437, 415, 445, 848, 300, 390, 702, 702, 1917, 300, 311, 50972, 50972, 445, 15232, 702, 959, 309, 311, 257, 959, 5063, 300, 390, 300, 390, 452, 959, 5063, 281, 264, 4195, 1105, 1338, 51284, 51284, 300, 311, 577, 291, 1884, 18242, 586, 498, 291, 1415, 281, 1884, 18242, 281, 2995, 264, 371, 16, 5223, 295, 806, 76, 51640, 51640], "temperature": 0.0, "avg_logprob": -0.11586220065752666, "compression_ratio": 1.8829268292682926, "no_caption_prob": 4.264618837623857e-05}, {"id": 452, "seek": 296508, "start": 2965.08, "end": 2972.2799999999997, "text": " pages what you would do is um so v1 there was the content folder so you you would create a glob", "tokens": [50364, 7183, 437, 291, 576, 360, 307, 1105, 370, 371, 16, 456, 390, 264, 2701, 10820, 370, 291, 291, 576, 1884, 257, 16125, 50724, 50724, 5102, 281, 1105, 281, 2995, 264, 2701, 10820, 370, 370, 586, 264, 636, 264, 16125, 1985, 291, 360, 291, 393, 360, 741, 51148, 51148, 500, 380, 528, 281, 483, 886, 26132, 3004, 760, 538, 309, 457, 291, 393, 574, 412, 264, 1882, 72, 45623, 337, 309, 293, 741, 519, 264, 51420, 51420, 264, 45623, 366, 1238, 4961, 457, 291, 393, 360, 16125, 5893, 2995, 322, 257, 20411, 411, 2701, 17330, 550, 291, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.08974903106689452, "compression_ratio": 1.8421052631578947, "no_caption_prob": 7.84289586590603e-05}, {"id": 453, "seek": 296508, "start": 2972.2799999999997, "end": 2980.7599999999998, "text": " pattern to um to match the content folder so so now the way the glob works you do you can do i", "tokens": [50364, 7183, 437, 291, 576, 360, 307, 1105, 370, 371, 16, 456, 390, 264, 2701, 10820, 370, 291, 291, 576, 1884, 257, 16125, 50724, 50724, 5102, 281, 1105, 281, 2995, 264, 2701, 10820, 370, 370, 586, 264, 636, 264, 16125, 1985, 291, 360, 291, 393, 360, 741, 51148, 51148, 500, 380, 528, 281, 483, 886, 26132, 3004, 760, 538, 309, 457, 291, 393, 574, 412, 264, 1882, 72, 45623, 337, 309, 293, 741, 519, 264, 51420, 51420, 264, 45623, 366, 1238, 4961, 457, 291, 393, 360, 16125, 5893, 2995, 322, 257, 20411, 411, 2701, 17330, 550, 291, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.08974903106689452, "compression_ratio": 1.8421052631578947, "no_caption_prob": 7.84289586590603e-05}, {"id": 454, "seek": 296508, "start": 2980.7599999999998, "end": 2986.2, "text": " don't want to get too bogged down by it but you can look at the api docs for it and i think the", "tokens": [50364, 7183, 437, 291, 576, 360, 307, 1105, 370, 371, 16, 456, 390, 264, 2701, 10820, 370, 291, 291, 576, 1884, 257, 16125, 50724, 50724, 5102, 281, 1105, 281, 2995, 264, 2701, 10820, 370, 370, 586, 264, 636, 264, 16125, 1985, 291, 360, 291, 393, 360, 741, 51148, 51148, 500, 380, 528, 281, 483, 886, 26132, 3004, 760, 538, 309, 457, 291, 393, 574, 412, 264, 1882, 72, 45623, 337, 309, 293, 741, 519, 264, 51420, 51420, 264, 45623, 366, 1238, 4961, 457, 291, 393, 360, 16125, 5893, 2995, 322, 257, 20411, 411, 2701, 17330, 550, 291, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.08974903106689452, "compression_ratio": 1.8421052631578947, "no_caption_prob": 7.84289586590603e-05}, {"id": 455, "seek": 296508, "start": 2986.2, "end": 2992.2799999999997, "text": " the docs are pretty helpful but you can do glob dot match on a literal like content slash then you", "tokens": [50364, 7183, 437, 291, 576, 360, 307, 1105, 370, 371, 16, 456, 390, 264, 2701, 10820, 370, 291, 291, 576, 1884, 257, 16125, 50724, 50724, 5102, 281, 1105, 281, 2995, 264, 2701, 10820, 370, 370, 586, 264, 636, 264, 16125, 1985, 291, 360, 291, 393, 360, 741, 51148, 51148, 500, 380, 528, 281, 483, 886, 26132, 3004, 760, 538, 309, 457, 291, 393, 574, 412, 264, 1882, 72, 45623, 337, 309, 293, 741, 519, 264, 51420, 51420, 264, 45623, 366, 1238, 4961, 457, 291, 393, 360, 16125, 5893, 2995, 322, 257, 20411, 411, 2701, 17330, 550, 291, 51724, 51724], "temperature": 0.0, "avg_logprob": -0.08974903106689452, "compression_ratio": 1.8421052631578947, "no_caption_prob": 7.84289586590603e-05}, {"id": 456, "seek": 299228, "start": 2992.28, "end": 2998.6000000000004, "text": " like content slash then you can do glob dot capture to pull a piece in so it's sort of this", "tokens": [50364, 411, 2701, 17330, 550, 291, 393, 360, 16125, 5893, 7983, 281, 2235, 257, 2522, 294, 370, 309, 311, 1333, 295, 341, 50680, 50680, 1105, 309, 311, 588, 2531, 281, 264, 806, 76, 21156, 260, 1882, 72, 1105, 264, 21156, 260, 1882, 72, 575, 291, 458, 11240, 6915, 293, 11240, 5893, 51056, 51056, 293, 729, 366, 729, 6805, 281, 16125, 5893, 2995, 420, 257, 16125, 5893, 7983, 307, 264, 11240, 6915, 300, 51404, 51404, 18109, 264, 551, 293, 16125, 5893, 2995, 307, 10344, 281, 11240, 5893, 597, 5335, 2706, 5335, 2706, 264, 551, 1338, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.061473300776530786, "compression_ratio": 1.9292929292929293, "no_caption_prob": 1.0129886504728347e-05}, {"id": 457, "seek": 299228, "start": 2998.6000000000004, "end": 3006.1200000000003, "text": " um it's very similar to the elm parser api um the parser api has you know pipe equals and pipe dot", "tokens": [50364, 411, 2701, 17330, 550, 291, 393, 360, 16125, 5893, 7983, 281, 2235, 257, 2522, 294, 370, 309, 311, 1333, 295, 341, 50680, 50680, 1105, 309, 311, 588, 2531, 281, 264, 806, 76, 21156, 260, 1882, 72, 1105, 264, 21156, 260, 1882, 72, 575, 291, 458, 11240, 6915, 293, 11240, 5893, 51056, 51056, 293, 729, 366, 729, 6805, 281, 16125, 5893, 2995, 420, 257, 16125, 5893, 7983, 307, 264, 11240, 6915, 300, 51404, 51404, 18109, 264, 551, 293, 16125, 5893, 2995, 307, 10344, 281, 11240, 5893, 597, 5335, 2706, 5335, 2706, 264, 551, 1338, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.061473300776530786, "compression_ratio": 1.9292929292929293, "no_caption_prob": 1.0129886504728347e-05}, {"id": 458, "seek": 299228, "start": 3006.1200000000003, "end": 3013.0800000000004, "text": " and those are those correspond to glob dot match or a glob dot capture is the pipe equals that", "tokens": [50364, 411, 2701, 17330, 550, 291, 393, 360, 16125, 5893, 7983, 281, 2235, 257, 2522, 294, 370, 309, 311, 1333, 295, 341, 50680, 50680, 1105, 309, 311, 588, 2531, 281, 264, 806, 76, 21156, 260, 1882, 72, 1105, 264, 21156, 260, 1882, 72, 575, 291, 458, 11240, 6915, 293, 11240, 5893, 51056, 51056, 293, 729, 366, 729, 6805, 281, 16125, 5893, 2995, 420, 257, 16125, 5893, 7983, 307, 264, 11240, 6915, 300, 51404, 51404, 18109, 264, 551, 293, 16125, 5893, 2995, 307, 10344, 281, 11240, 5893, 597, 5335, 2706, 5335, 2706, 264, 551, 1338, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.061473300776530786, "compression_ratio": 1.9292929292929293, "no_caption_prob": 1.0129886504728347e-05}, {"id": 459, "seek": 299228, "start": 3013.0800000000004, "end": 3021.8, "text": " eats the thing and glob dot match is equivalent to pipe dot which ignores ignores the thing yeah", "tokens": [50364, 411, 2701, 17330, 550, 291, 393, 360, 16125, 5893, 7983, 281, 2235, 257, 2522, 294, 370, 309, 311, 1333, 295, 341, 50680, 50680, 1105, 309, 311, 588, 2531, 281, 264, 806, 76, 21156, 260, 1882, 72, 1105, 264, 21156, 260, 1882, 72, 575, 291, 458, 11240, 6915, 293, 11240, 5893, 51056, 51056, 293, 729, 366, 729, 6805, 281, 16125, 5893, 2995, 420, 257, 16125, 5893, 7983, 307, 264, 11240, 6915, 300, 51404, 51404, 18109, 264, 551, 293, 16125, 5893, 2995, 307, 10344, 281, 11240, 5893, 597, 5335, 2706, 5335, 2706, 264, 551, 1338, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.061473300776530786, "compression_ratio": 1.9292929292929293, "no_caption_prob": 1.0129886504728347e-05}, {"id": 460, "seek": 302180, "start": 3021.8, "end": 3026.52, "text": " so anyway you you create a glob pattern you can extract the information you want from it so if", "tokens": [50364, 370, 4033, 291, 291, 1884, 257, 16125, 5102, 291, 393, 8947, 264, 1589, 291, 528, 490, 309, 370, 498, 50600, 50600, 291, 445, 528, 281, 483, 264, 1061, 697, 291, 393, 498, 291, 528, 281, 483, 264, 1577, 3100, 291, 393, 483, 300, 457, 370, 291, 50872, 50872, 483, 300, 16125, 5102, 293, 291, 498, 291, 645, 281, 747, 2232, 498, 291, 645, 281, 445, 7983, 264, 1061, 697, 644, 370, 51176, 51176, 300, 1355, 337, 2701, 17330, 291, 434, 445, 516, 281, 2995, 300, 337, 264, 291, 434, 516, 281, 360, 257, 4868, 2920, 51456, 51456, 300, 291, 7983, 264, 3543, 644, 293, 550, 264, 5893, 275, 67, 644, 291, 434, 445, 516, 281, 2995, 597, 1355, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.024971576987719925, "compression_ratio": 2.1990950226244346, "no_caption_prob": 2.144448626495432e-05}, {"id": 461, "seek": 302180, "start": 3026.52, "end": 3031.96, "text": " you just want to get the slug you can if you want to get the full path you can get that but so you", "tokens": [50364, 370, 4033, 291, 291, 1884, 257, 16125, 5102, 291, 393, 8947, 264, 1589, 291, 528, 490, 309, 370, 498, 50600, 50600, 291, 445, 528, 281, 483, 264, 1061, 697, 291, 393, 498, 291, 528, 281, 483, 264, 1577, 3100, 291, 393, 483, 300, 457, 370, 291, 50872, 50872, 483, 300, 16125, 5102, 293, 291, 498, 291, 645, 281, 747, 2232, 498, 291, 645, 281, 445, 7983, 264, 1061, 697, 644, 370, 51176, 51176, 300, 1355, 337, 2701, 17330, 291, 434, 445, 516, 281, 2995, 300, 337, 264, 291, 434, 516, 281, 360, 257, 4868, 2920, 51456, 51456, 300, 291, 7983, 264, 3543, 644, 293, 550, 264, 5893, 275, 67, 644, 291, 434, 445, 516, 281, 2995, 597, 1355, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.024971576987719925, "compression_ratio": 2.1990950226244346, "no_caption_prob": 2.144448626495432e-05}, {"id": 462, "seek": 302180, "start": 3031.96, "end": 3038.04, "text": " get that glob pattern and you if you were to take uh if you were to just capture the slug part so", "tokens": [50364, 370, 4033, 291, 291, 1884, 257, 16125, 5102, 291, 393, 8947, 264, 1589, 291, 528, 490, 309, 370, 498, 50600, 50600, 291, 445, 528, 281, 483, 264, 1061, 697, 291, 393, 498, 291, 528, 281, 483, 264, 1577, 3100, 291, 393, 483, 300, 457, 370, 291, 50872, 50872, 483, 300, 16125, 5102, 293, 291, 498, 291, 645, 281, 747, 2232, 498, 291, 645, 281, 445, 7983, 264, 1061, 697, 644, 370, 51176, 51176, 300, 1355, 337, 2701, 17330, 291, 434, 445, 516, 281, 2995, 300, 337, 264, 291, 434, 516, 281, 360, 257, 4868, 2920, 51456, 51456, 300, 291, 7983, 264, 3543, 644, 293, 550, 264, 5893, 275, 67, 644, 291, 434, 445, 516, 281, 2995, 597, 1355, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.024971576987719925, "compression_ratio": 2.1990950226244346, "no_caption_prob": 2.144448626495432e-05}, {"id": 463, "seek": 302180, "start": 3038.04, "end": 3043.6400000000003, "text": " that means for content slash you're just going to match that for the you're going to do a wild card", "tokens": [50364, 370, 4033, 291, 291, 1884, 257, 16125, 5102, 291, 393, 8947, 264, 1589, 291, 528, 490, 309, 370, 498, 50600, 50600, 291, 445, 528, 281, 483, 264, 1061, 697, 291, 393, 498, 291, 528, 281, 483, 264, 1577, 3100, 291, 393, 483, 300, 457, 370, 291, 50872, 50872, 483, 300, 16125, 5102, 293, 291, 498, 291, 645, 281, 747, 2232, 498, 291, 645, 281, 445, 7983, 264, 1061, 697, 644, 370, 51176, 51176, 300, 1355, 337, 2701, 17330, 291, 434, 445, 516, 281, 2995, 300, 337, 264, 291, 434, 516, 281, 360, 257, 4868, 2920, 51456, 51456, 300, 291, 7983, 264, 3543, 644, 293, 550, 264, 5893, 275, 67, 644, 291, 434, 445, 516, 281, 2995, 597, 1355, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.024971576987719925, "compression_ratio": 2.1990950226244346, "no_caption_prob": 2.144448626495432e-05}, {"id": 464, "seek": 302180, "start": 3043.6400000000003, "end": 3049.2400000000002, "text": " that you capture the star part and then the dot md part you're just going to match which means", "tokens": [50364, 370, 4033, 291, 291, 1884, 257, 16125, 5102, 291, 393, 8947, 264, 1589, 291, 528, 490, 309, 370, 498, 50600, 50600, 291, 445, 528, 281, 483, 264, 1061, 697, 291, 393, 498, 291, 528, 281, 483, 264, 1577, 3100, 291, 393, 483, 300, 457, 370, 291, 50872, 50872, 483, 300, 16125, 5102, 293, 291, 498, 291, 645, 281, 747, 2232, 498, 291, 645, 281, 445, 7983, 264, 1061, 697, 644, 370, 51176, 51176, 300, 1355, 337, 2701, 17330, 291, 434, 445, 516, 281, 2995, 300, 337, 264, 291, 434, 516, 281, 360, 257, 4868, 2920, 51456, 51456, 300, 291, 7983, 264, 3543, 644, 293, 550, 264, 5893, 275, 67, 644, 291, 434, 445, 516, 281, 2995, 597, 1355, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.024971576987719925, "compression_ratio": 2.1990950226244346, "no_caption_prob": 2.144448626495432e-05}, {"id": 465, "seek": 304924, "start": 3049.24, "end": 3056.2799999999997, "text": " you match against it but you don't get that data what that means is you've got the slug yeah so", "tokens": [50364, 291, 2995, 1970, 309, 457, 291, 500, 380, 483, 300, 1412, 437, 300, 1355, 307, 291, 600, 658, 264, 1061, 697, 1338, 370, 50716, 50716, 291, 434, 2390, 257, 16125, 5102, 411, 445, 264, 636, 291, 576, 2010, 309, 294, 257, 14709, 411, 2232, 2701, 50992, 50992, 17330, 3543, 3543, 420, 3543, 17330, 572, 2701, 17330, 3543, 5893, 275, 67, 293, 370, 291, 434, 2390, 257, 16125, 293, 51432, 51432, 291, 434, 611, 1566, 341, 341, 510, 307, 437, 741, 478, 767, 15365, 466, 741, 1127, 466, 264, 3543, 644, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07093038457505246, "compression_ratio": 1.9, "no_caption_prob": 1.4738783647771925e-05}, {"id": 466, "seek": 304924, "start": 3056.2799999999997, "end": 3061.7999999999997, "text": " you're building a glob pattern like just the way you would type it in a terminal like uh content", "tokens": [50364, 291, 2995, 1970, 309, 457, 291, 500, 380, 483, 300, 1412, 437, 300, 1355, 307, 291, 600, 658, 264, 1061, 697, 1338, 370, 50716, 50716, 291, 434, 2390, 257, 16125, 5102, 411, 445, 264, 636, 291, 576, 2010, 309, 294, 257, 14709, 411, 2232, 2701, 50992, 50992, 17330, 3543, 3543, 420, 3543, 17330, 572, 2701, 17330, 3543, 5893, 275, 67, 293, 370, 291, 434, 2390, 257, 16125, 293, 51432, 51432, 291, 434, 611, 1566, 341, 341, 510, 307, 437, 741, 478, 767, 15365, 466, 741, 1127, 466, 264, 3543, 644, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07093038457505246, "compression_ratio": 1.9, "no_caption_prob": 1.4738783647771925e-05}, {"id": 467, "seek": 304924, "start": 3061.7999999999997, "end": 3070.6, "text": " slash star star or star slash no content slash star dot md and so you're building a glob and", "tokens": [50364, 291, 2995, 1970, 309, 457, 291, 500, 380, 483, 300, 1412, 437, 300, 1355, 307, 291, 600, 658, 264, 1061, 697, 1338, 370, 50716, 50716, 291, 434, 2390, 257, 16125, 5102, 411, 445, 264, 636, 291, 576, 2010, 309, 294, 257, 14709, 411, 2232, 2701, 50992, 50992, 17330, 3543, 3543, 420, 3543, 17330, 572, 2701, 17330, 3543, 5893, 275, 67, 293, 370, 291, 434, 2390, 257, 16125, 293, 51432, 51432, 291, 434, 611, 1566, 341, 341, 510, 307, 437, 741, 478, 767, 15365, 466, 741, 1127, 466, 264, 3543, 644, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07093038457505246, "compression_ratio": 1.9, "no_caption_prob": 1.4738783647771925e-05}, {"id": 468, "seek": 304924, "start": 3070.6, "end": 3076.9199999999996, "text": " you're also saying this this here is what i'm actually caring about i care about the star part", "tokens": [50364, 291, 2995, 1970, 309, 457, 291, 500, 380, 483, 300, 1412, 437, 300, 1355, 307, 291, 600, 658, 264, 1061, 697, 1338, 370, 50716, 50716, 291, 434, 2390, 257, 16125, 5102, 411, 445, 264, 636, 291, 576, 2010, 309, 294, 257, 14709, 411, 2232, 2701, 50992, 50992, 17330, 3543, 3543, 420, 3543, 17330, 572, 2701, 17330, 3543, 5893, 275, 67, 293, 370, 291, 434, 2390, 257, 16125, 293, 51432, 51432, 291, 434, 611, 1566, 341, 341, 510, 307, 437, 741, 478, 767, 15365, 466, 741, 1127, 466, 264, 3543, 644, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07093038457505246, "compression_ratio": 1.9, "no_caption_prob": 1.4738783647771925e-05}, {"id": 469, "seek": 307692, "start": 3076.92, "end": 3082.84, "text": " maybe i care about the content part maybe i don't um and then then you have a you transform that", "tokens": [50364, 1310, 741, 1127, 466, 264, 2701, 644, 1310, 741, 500, 380, 1105, 293, 550, 550, 291, 362, 257, 291, 4088, 300, 50660, 50660, 281, 257, 1412, 4009, 2293, 550, 291, 1338, 550, 291, 584, 281, 1412, 4009, 300, 311, 558, 291, 393, 360, 16125, 50892, 50892, 5893, 281, 1412, 4009, 293, 300, 733, 295, 2572, 5660, 264, 16125, 2709, 291, 264, 1412, 4009, 293, 1338, 293, 797, 51152, 51152, 291, 458, 437, 291, 434, 16141, 456, 300, 311, 300, 311, 48377, 500, 380, 29562, 370, 291, 483, 445, 264, 51332, 51332, 1412, 291, 528, 2831, 813, 445, 1566, 510, 311, 452, 16125, 976, 385, 264, 1329, 295, 14324, 7098, 597, 291, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.0487814944723378, "compression_ratio": 1.9958677685950412, "no_caption_prob": 1.406384490110213e-05}, {"id": 470, "seek": 307692, "start": 3082.84, "end": 3087.48, "text": " to a data source exactly then you yeah then you say to data source that's right you can do glob", "tokens": [50364, 1310, 741, 1127, 466, 264, 2701, 644, 1310, 741, 500, 380, 1105, 293, 550, 550, 291, 362, 257, 291, 4088, 300, 50660, 50660, 281, 257, 1412, 4009, 2293, 550, 291, 1338, 550, 291, 584, 281, 1412, 4009, 300, 311, 558, 291, 393, 360, 16125, 50892, 50892, 5893, 281, 1412, 4009, 293, 300, 733, 295, 2572, 5660, 264, 16125, 2709, 291, 264, 1412, 4009, 293, 1338, 293, 797, 51152, 51152, 291, 458, 437, 291, 434, 16141, 456, 300, 311, 300, 311, 48377, 500, 380, 29562, 370, 291, 483, 445, 264, 51332, 51332, 1412, 291, 528, 2831, 813, 445, 1566, 510, 311, 452, 16125, 976, 385, 264, 1329, 295, 14324, 7098, 597, 291, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.0487814944723378, "compression_ratio": 1.9958677685950412, "no_caption_prob": 1.406384490110213e-05}, {"id": 471, "seek": 307692, "start": 3087.48, "end": 3092.6800000000003, "text": " dot to data source and that kind of finalizes the glob gives you the data source and yeah and again", "tokens": [50364, 1310, 741, 1127, 466, 264, 2701, 644, 1310, 741, 500, 380, 1105, 293, 550, 550, 291, 362, 257, 291, 4088, 300, 50660, 50660, 281, 257, 1412, 4009, 2293, 550, 291, 1338, 550, 291, 584, 281, 1412, 4009, 300, 311, 558, 291, 393, 360, 16125, 50892, 50892, 5893, 281, 1412, 4009, 293, 300, 733, 295, 2572, 5660, 264, 16125, 2709, 291, 264, 1412, 4009, 293, 1338, 293, 797, 51152, 51152, 291, 458, 437, 291, 434, 16141, 456, 300, 311, 300, 311, 48377, 500, 380, 29562, 370, 291, 483, 445, 264, 51332, 51332, 1412, 291, 528, 2831, 813, 445, 1566, 510, 311, 452, 16125, 976, 385, 264, 1329, 295, 14324, 7098, 597, 291, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.0487814944723378, "compression_ratio": 1.9958677685950412, "no_caption_prob": 1.406384490110213e-05}, {"id": 472, "seek": 307692, "start": 3092.6800000000003, "end": 3096.28, "text": " you know what you're describing there that's that's parse don't validate so you get just the", "tokens": [50364, 1310, 741, 1127, 466, 264, 2701, 644, 1310, 741, 500, 380, 1105, 293, 550, 550, 291, 362, 257, 291, 4088, 300, 50660, 50660, 281, 257, 1412, 4009, 2293, 550, 291, 1338, 550, 291, 584, 281, 1412, 4009, 300, 311, 558, 291, 393, 360, 16125, 50892, 50892, 5893, 281, 1412, 4009, 293, 300, 733, 295, 2572, 5660, 264, 16125, 2709, 291, 264, 1412, 4009, 293, 1338, 293, 797, 51152, 51152, 291, 458, 437, 291, 434, 16141, 456, 300, 311, 300, 311, 48377, 500, 380, 29562, 370, 291, 483, 445, 264, 51332, 51332, 1412, 291, 528, 2831, 813, 445, 1566, 510, 311, 452, 16125, 976, 385, 264, 1329, 295, 14324, 7098, 597, 291, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.0487814944723378, "compression_ratio": 1.9958677685950412, "no_caption_prob": 1.406384490110213e-05}, {"id": 473, "seek": 307692, "start": 3096.28, "end": 3101.8, "text": " data you want rather than just saying here's my glob give me the list of matching files which you", "tokens": [50364, 1310, 741, 1127, 466, 264, 2701, 644, 1310, 741, 500, 380, 1105, 293, 550, 550, 291, 362, 257, 291, 4088, 300, 50660, 50660, 281, 257, 1412, 4009, 2293, 550, 291, 1338, 550, 291, 584, 281, 1412, 4009, 300, 311, 558, 291, 393, 360, 16125, 50892, 50892, 5893, 281, 1412, 4009, 293, 300, 733, 295, 2572, 5660, 264, 16125, 2709, 291, 264, 1412, 4009, 293, 1338, 293, 797, 51152, 51152, 291, 458, 437, 291, 434, 16141, 456, 300, 311, 300, 311, 48377, 500, 380, 29562, 370, 291, 483, 445, 264, 51332, 51332, 1412, 291, 528, 2831, 813, 445, 1566, 510, 311, 452, 16125, 976, 385, 264, 1329, 295, 14324, 7098, 597, 291, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.0487814944723378, "compression_ratio": 1.9958677685950412, "no_caption_prob": 1.406384490110213e-05}, {"id": 474, "seek": 310180, "start": 3101.8, "end": 3107.48, "text": " just built up but then you have to strip off the stuff afterwards again that you already sort of", "tokens": [50364, 445, 3094, 493, 457, 550, 291, 362, 281, 12828, 766, 264, 1507, 10543, 797, 300, 291, 1217, 1333, 295, 50648, 50648, 291, 632, 309, 294, 341, 1481, 10654, 7877, 689, 291, 445, 727, 362, 848, 741, 528, 341, 1412, 731, 291, 50904, 50904, 393, 445, 360, 300, 370, 550, 291, 393, 2232, 291, 393, 4471, 1184, 295, 729, 370, 291, 727, 360, 411, 1412, 4009, 5893, 51188, 51188, 4471, 293, 550, 34153, 1329, 5893, 4471, 1085, 582, 4070, 293, 300, 576, 1261, 1184, 295, 729, 666, 264, 1085, 582, 4070, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.04220420756238572, "compression_ratio": 1.916256157635468, "no_caption_prob": 2.753498120000586e-05}, {"id": 475, "seek": 310180, "start": 3107.48, "end": 3112.6000000000004, "text": " you had it in this nice neat format where you just could have said i want this data well you", "tokens": [50364, 445, 3094, 493, 457, 550, 291, 362, 281, 12828, 766, 264, 1507, 10543, 797, 300, 291, 1217, 1333, 295, 50648, 50648, 291, 632, 309, 294, 341, 1481, 10654, 7877, 689, 291, 445, 727, 362, 848, 741, 528, 341, 1412, 731, 291, 50904, 50904, 393, 445, 360, 300, 370, 550, 291, 393, 2232, 291, 393, 4471, 1184, 295, 729, 370, 291, 727, 360, 411, 1412, 4009, 5893, 51188, 51188, 4471, 293, 550, 34153, 1329, 5893, 4471, 1085, 582, 4070, 293, 300, 576, 1261, 1184, 295, 729, 666, 264, 1085, 582, 4070, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.04220420756238572, "compression_ratio": 1.916256157635468, "no_caption_prob": 2.753498120000586e-05}, {"id": 476, "seek": 310180, "start": 3112.6000000000004, "end": 3118.28, "text": " can just do that so then you can uh you can map each of those so you could do like data source dot", "tokens": [50364, 445, 3094, 493, 457, 550, 291, 362, 281, 12828, 766, 264, 1507, 10543, 797, 300, 291, 1217, 1333, 295, 50648, 50648, 291, 632, 309, 294, 341, 1481, 10654, 7877, 689, 291, 445, 727, 362, 848, 741, 528, 341, 1412, 731, 291, 50904, 50904, 393, 445, 360, 300, 370, 550, 291, 393, 2232, 291, 393, 4471, 1184, 295, 729, 370, 291, 727, 360, 411, 1412, 4009, 5893, 51188, 51188, 4471, 293, 550, 34153, 1329, 5893, 4471, 1085, 582, 4070, 293, 300, 576, 1261, 1184, 295, 729, 666, 264, 1085, 582, 4070, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.04220420756238572, "compression_ratio": 1.916256157635468, "no_caption_prob": 2.753498120000586e-05}, {"id": 477, "seek": 310180, "start": 3118.28, "end": 3124.6800000000003, "text": " map and then parentheses list dot map rep prams and that would turn each of those into the rep prams", "tokens": [50364, 445, 3094, 493, 457, 550, 291, 362, 281, 12828, 766, 264, 1507, 10543, 797, 300, 291, 1217, 1333, 295, 50648, 50648, 291, 632, 309, 294, 341, 1481, 10654, 7877, 689, 291, 445, 727, 362, 848, 741, 528, 341, 1412, 731, 291, 50904, 50904, 393, 445, 360, 300, 370, 550, 291, 393, 2232, 291, 393, 4471, 1184, 295, 729, 370, 291, 727, 360, 411, 1412, 4009, 5893, 51188, 51188, 4471, 293, 550, 34153, 1329, 5893, 4471, 1085, 582, 4070, 293, 300, 576, 1261, 1184, 295, 729, 666, 264, 1085, 582, 4070, 51508, 51508], "temperature": 0.0, "avg_logprob": -0.04220420756238572, "compression_ratio": 1.916256157635468, "no_caption_prob": 2.753498120000586e-05}, {"id": 478, "seek": 312468, "start": 3124.68, "end": 3132.2, "text": " because the rep prams is a record you know it's a record constructor that takes a single string", "tokens": [50364, 570, 264, 1085, 582, 4070, 307, 257, 2136, 291, 458, 309, 311, 257, 2136, 47479, 300, 2516, 257, 2167, 6798, 50740, 50740, 300, 311, 799, 300, 311, 799, 312, 428, 1061, 697, 370, 586, 291, 600, 445, 7642, 257, 16125, 1412, 4009, 300, 311, 51028, 51028, 799, 6805, 281, 439, 295, 264, 7098, 294, 264, 2701, 10820, 586, 291, 12075, 292, 412, 264, 3834, 3543, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04903979577879975, "compression_ratio": 1.7177914110429449, "no_caption_prob": 3.76349562429823e-05}, {"id": 479, "seek": 312468, "start": 3132.2, "end": 3137.96, "text": " that's gonna that's gonna be your slug so now you've just defined a glob data source that's", "tokens": [50364, 570, 264, 1085, 582, 4070, 307, 257, 2136, 291, 458, 309, 311, 257, 2136, 47479, 300, 2516, 257, 2167, 6798, 50740, 50740, 300, 311, 799, 300, 311, 799, 312, 428, 1061, 697, 370, 586, 291, 600, 445, 7642, 257, 16125, 1412, 4009, 300, 311, 51028, 51028, 799, 6805, 281, 439, 295, 264, 7098, 294, 264, 2701, 10820, 586, 291, 12075, 292, 412, 264, 3834, 3543, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04903979577879975, "compression_ratio": 1.7177914110429449, "no_caption_prob": 3.76349562429823e-05}, {"id": 480, "seek": 312468, "start": 3137.96, "end": 3146.68, "text": " gonna correspond to all of the files in the content folder now you hinted at the double star", "tokens": [50364, 570, 264, 1085, 582, 4070, 307, 257, 2136, 291, 458, 309, 311, 257, 2136, 47479, 300, 2516, 257, 2167, 6798, 50740, 50740, 300, 311, 799, 300, 311, 799, 312, 428, 1061, 697, 370, 586, 291, 600, 445, 7642, 257, 16125, 1412, 4009, 300, 311, 51028, 51028, 799, 6805, 281, 439, 295, 264, 7098, 294, 264, 2701, 10820, 586, 291, 12075, 292, 412, 264, 3834, 3543, 51464, 51464], "temperature": 0.0, "avg_logprob": -0.04903979577879975, "compression_ratio": 1.7177914110429449, "no_caption_prob": 3.76349562429823e-05}, {"id": 481, "seek": 314668, "start": 3146.68, "end": 3155.56, "text": " and you can do a recursive wildcard and so if you if you really wanted to just exactly match", "tokens": [50364, 293, 291, 393, 360, 257, 20560, 488, 4868, 22259, 293, 370, 498, 291, 498, 291, 534, 1415, 281, 445, 2293, 2995, 50808, 50808, 264, 806, 76, 7183, 371, 16, 5223, 291, 727, 764, 300, 281, 1884, 257, 16125, 5102, 300, 10676, 633, 15646, 292, 51224, 51224, 3991, 294, 264, 2701, 10820, 293, 293, 300, 311, 516, 281, 312, 439, 295, 428, 18242, 293, 291, 727, 767, 764, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.039764676295535664, "compression_ratio": 1.6, "no_caption_prob": 6.747973657184048e-06}, {"id": 482, "seek": 314668, "start": 3155.56, "end": 3163.8799999999997, "text": " the elm pages v1 behavior you could use that to create a glob pattern that matches every nested", "tokens": [50364, 293, 291, 393, 360, 257, 20560, 488, 4868, 22259, 293, 370, 498, 291, 498, 291, 534, 1415, 281, 445, 2293, 2995, 50808, 50808, 264, 806, 76, 7183, 371, 16, 5223, 291, 727, 764, 300, 281, 1884, 257, 16125, 5102, 300, 10676, 633, 15646, 292, 51224, 51224, 3991, 294, 264, 2701, 10820, 293, 293, 300, 311, 516, 281, 312, 439, 295, 428, 18242, 293, 291, 727, 767, 764, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.039764676295535664, "compression_ratio": 1.6, "no_caption_prob": 6.747973657184048e-06}, {"id": 483, "seek": 314668, "start": 3163.8799999999997, "end": 3171.3199999999997, "text": " file in the content folder and and that's going to be all of your routes and you could actually use", "tokens": [50364, 293, 291, 393, 360, 257, 20560, 488, 4868, 22259, 293, 370, 498, 291, 498, 291, 534, 1415, 281, 445, 2293, 2995, 50808, 50808, 264, 806, 76, 7183, 371, 16, 5223, 291, 727, 764, 300, 281, 1884, 257, 16125, 5102, 300, 10676, 633, 15646, 292, 51224, 51224, 3991, 294, 264, 2701, 10820, 293, 293, 300, 311, 516, 281, 312, 439, 295, 428, 18242, 293, 291, 727, 767, 764, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.039764676295535664, "compression_ratio": 1.6, "no_caption_prob": 6.747973657184048e-06}, {"id": 484, "seek": 317132, "start": 3171.32, "end": 3179.56, "text": " the um uh so elm pages the file based router we kind of hinted at this last time with ryan that", "tokens": [50364, 264, 1105, 2232, 370, 806, 76, 7183, 264, 3991, 2361, 22492, 321, 733, 295, 12075, 292, 412, 341, 1036, 565, 365, 367, 6277, 300, 50776, 50828, 2232, 806, 76, 7183, 575, 341, 1333, 295, 2232, 2121, 4111, 295, 264, 4732, 267, 32722, 370, 498, 291, 1415, 281, 498, 291, 51180, 51180, 1415, 281, 4908, 362, 2293, 264, 5223, 300, 806, 76, 7183, 472, 632, 337, 1080, 337, 1080, 18242, 689, 51504, 51504, 264, 2701, 10820, 307, 3838, 3149, 340, 986, 294, 264, 4038, 11784, 294, 428, 3861, 300, 311, 437, 291, 576, 360, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.06452527488629843, "compression_ratio": 1.7897196261682242, "no_caption_prob": 2.9772407287964597e-05}, {"id": 485, "seek": 317132, "start": 3180.6000000000004, "end": 3187.6400000000003, "text": " uh elm pages has this sort of uh special feature of the splat routing so if you wanted to if you", "tokens": [50364, 264, 1105, 2232, 370, 806, 76, 7183, 264, 3991, 2361, 22492, 321, 733, 295, 12075, 292, 412, 341, 1036, 565, 365, 367, 6277, 300, 50776, 50828, 2232, 806, 76, 7183, 575, 341, 1333, 295, 2232, 2121, 4111, 295, 264, 4732, 267, 32722, 370, 498, 291, 1415, 281, 498, 291, 51180, 51180, 1415, 281, 4908, 362, 2293, 264, 5223, 300, 806, 76, 7183, 472, 632, 337, 1080, 337, 1080, 18242, 689, 51504, 51504, 264, 2701, 10820, 307, 3838, 3149, 340, 986, 294, 264, 4038, 11784, 294, 428, 3861, 300, 311, 437, 291, 576, 360, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.06452527488629843, "compression_ratio": 1.7897196261682242, "no_caption_prob": 2.9772407287964597e-05}, {"id": 486, "seek": 317132, "start": 3187.6400000000003, "end": 3194.1200000000003, "text": " wanted to truly have exactly the behavior that elm pages one had for its for its routes where", "tokens": [50364, 264, 1105, 2232, 370, 806, 76, 7183, 264, 3991, 2361, 22492, 321, 733, 295, 12075, 292, 412, 341, 1036, 565, 365, 367, 6277, 300, 50776, 50828, 2232, 806, 76, 7183, 575, 341, 1333, 295, 2232, 2121, 4111, 295, 264, 4732, 267, 32722, 370, 498, 291, 1415, 281, 498, 291, 51180, 51180, 1415, 281, 4908, 362, 2293, 264, 5223, 300, 806, 76, 7183, 472, 632, 337, 1080, 337, 1080, 18242, 689, 51504, 51504, 264, 2701, 10820, 307, 3838, 3149, 340, 986, 294, 264, 4038, 11784, 294, 428, 3861, 300, 311, 437, 291, 576, 360, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.06452527488629843, "compression_ratio": 1.7897196261682242, "no_caption_prob": 2.9772407287964597e-05}, {"id": 487, "seek": 317132, "start": 3194.1200000000003, "end": 3199.48, "text": " the content folder is directly mirrored in the urls in your application that's what you would do", "tokens": [50364, 264, 1105, 2232, 370, 806, 76, 7183, 264, 3991, 2361, 22492, 321, 733, 295, 12075, 292, 412, 341, 1036, 565, 365, 367, 6277, 300, 50776, 50828, 2232, 806, 76, 7183, 575, 341, 1333, 295, 2232, 2121, 4111, 295, 264, 4732, 267, 32722, 370, 498, 291, 1415, 281, 498, 291, 51180, 51180, 1415, 281, 4908, 362, 2293, 264, 5223, 300, 806, 76, 7183, 472, 632, 337, 1080, 337, 1080, 18242, 689, 51504, 51504, 264, 2701, 10820, 307, 3838, 3149, 340, 986, 294, 264, 4038, 11784, 294, 428, 3861, 300, 311, 437, 291, 576, 360, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.06452527488629843, "compression_ratio": 1.7897196261682242, "no_caption_prob": 2.9772407287964597e-05}, {"id": 488, "seek": 319948, "start": 3199.48, "end": 3205.96, "text": " you would create a splat route so you can do elm pages add all uppercase splat splat is in all", "tokens": [50364, 291, 576, 1884, 257, 4732, 267, 7955, 370, 291, 393, 360, 806, 76, 7183, 909, 439, 11775, 2869, 651, 4732, 267, 4732, 267, 307, 294, 439, 50688, 50688, 11775, 2869, 651, 264, 661, 8546, 7955, 19904, 366, 4238, 406, 439, 11775, 2869, 651, 370, 439, 11775, 2869, 651, 4732, 267, 51000, 51000, 293, 291, 727, 360, 3834, 37556, 597, 307, 516, 281, 312, 364, 17312, 4732, 267, 597, 1355, 309, 311, 611, 516, 51300, 51300, 281, 2995, 264, 1192, 1496, 5593, 7955, 1392, 437, 775, 4732, 1720, 914, 437, 775, 309, 808, 490, 456, 366, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.05747062028056443, "compression_ratio": 1.8829268292682926, "no_caption_prob": 5.7385823311051354e-05}, {"id": 489, "seek": 319948, "start": 3205.96, "end": 3212.2, "text": " uppercase the other dynamic route segments are capital not all uppercase so all uppercase splat", "tokens": [50364, 291, 576, 1884, 257, 4732, 267, 7955, 370, 291, 393, 360, 806, 76, 7183, 909, 439, 11775, 2869, 651, 4732, 267, 4732, 267, 307, 294, 439, 50688, 50688, 11775, 2869, 651, 264, 661, 8546, 7955, 19904, 366, 4238, 406, 439, 11775, 2869, 651, 370, 439, 11775, 2869, 651, 4732, 267, 51000, 51000, 293, 291, 727, 360, 3834, 37556, 597, 307, 516, 281, 312, 364, 17312, 4732, 267, 597, 1355, 309, 311, 611, 516, 51300, 51300, 281, 2995, 264, 1192, 1496, 5593, 7955, 1392, 437, 775, 4732, 1720, 914, 437, 775, 309, 808, 490, 456, 366, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.05747062028056443, "compression_ratio": 1.8829268292682926, "no_caption_prob": 5.7385823311051354e-05}, {"id": 490, "seek": 319948, "start": 3212.2, "end": 3218.2, "text": " and you could do double underscore which is going to be an optional splat which means it's also going", "tokens": [50364, 291, 576, 1884, 257, 4732, 267, 7955, 370, 291, 393, 360, 806, 76, 7183, 909, 439, 11775, 2869, 651, 4732, 267, 4732, 267, 307, 294, 439, 50688, 50688, 11775, 2869, 651, 264, 661, 8546, 7955, 19904, 366, 4238, 406, 439, 11775, 2869, 651, 370, 439, 11775, 2869, 651, 4732, 267, 51000, 51000, 293, 291, 727, 360, 3834, 37556, 597, 307, 516, 281, 312, 364, 17312, 4732, 267, 597, 1355, 309, 311, 611, 516, 51300, 51300, 281, 2995, 264, 1192, 1496, 5593, 7955, 1392, 437, 775, 4732, 1720, 914, 437, 775, 309, 808, 490, 456, 366, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.05747062028056443, "compression_ratio": 1.8829268292682926, "no_caption_prob": 5.7385823311051354e-05}, {"id": 491, "seek": 319948, "start": 3218.2, "end": 3225.32, "text": " to match the top level root route okay what does splats mean what does it come from there are", "tokens": [50364, 291, 576, 1884, 257, 4732, 267, 7955, 370, 291, 393, 360, 806, 76, 7183, 909, 439, 11775, 2869, 651, 4732, 267, 4732, 267, 307, 294, 439, 50688, 50688, 11775, 2869, 651, 264, 661, 8546, 7955, 19904, 366, 4238, 406, 439, 11775, 2869, 651, 370, 439, 11775, 2869, 651, 4732, 267, 51000, 51000, 293, 291, 727, 360, 3834, 37556, 597, 307, 516, 281, 312, 364, 17312, 4732, 267, 597, 1355, 309, 311, 611, 516, 51300, 51300, 281, 2995, 264, 1192, 1496, 5593, 7955, 1392, 437, 775, 4732, 1720, 914, 437, 775, 309, 808, 490, 456, 366, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.05747062028056443, "compression_ratio": 1.8829268292682926, "no_caption_prob": 5.7385823311051354e-05}, {"id": 492, "seek": 322532, "start": 3225.32, "end": 3231.48, "text": " different terms for this sometimes people um sometimes people use the term like rest params", "tokens": [50364, 819, 2115, 337, 341, 2171, 561, 1105, 2171, 561, 764, 264, 1433, 411, 1472, 971, 4070, 50672, 50672, 411, 294, 257, 291, 458, 294, 512, 9410, 8650, 291, 393, 362, 257, 7006, 1230, 295, 12869, 1374, 50988, 50988, 3882, 82, 293, 550, 291, 291, 483, 729, 382, 364, 10225, 2232, 2533, 75, 2505, 311, 29066, 18242, 764, 264, 1433, 4732, 267, 281, 51360, 51360, 584, 2035, 1487, 934, 341, 445, 7983, 309, 976, 309, 976, 309, 281, 385, 294, 257, 1329, 370, 456, 366, 819, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.04119562299064036, "compression_ratio": 1.761467889908257, "no_caption_prob": 4.6836561523377895e-05}, {"id": 493, "seek": 322532, "start": 3231.48, "end": 3237.8, "text": " like in a you know in some programming languages you can have a variable number of arguments var", "tokens": [50364, 819, 2115, 337, 341, 2171, 561, 1105, 2171, 561, 764, 264, 1433, 411, 1472, 971, 4070, 50672, 50672, 411, 294, 257, 291, 458, 294, 512, 9410, 8650, 291, 393, 362, 257, 7006, 1230, 295, 12869, 1374, 50988, 50988, 3882, 82, 293, 550, 291, 291, 483, 729, 382, 364, 10225, 2232, 2533, 75, 2505, 311, 29066, 18242, 764, 264, 1433, 4732, 267, 281, 51360, 51360, 584, 2035, 1487, 934, 341, 445, 7983, 309, 976, 309, 976, 309, 281, 385, 294, 257, 1329, 370, 456, 366, 819, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.04119562299064036, "compression_ratio": 1.761467889908257, "no_caption_prob": 4.6836561523377895e-05}, {"id": 494, "seek": 322532, "start": 3237.8, "end": 3245.2400000000002, "text": " args and then you you get those as an array uh netlify's redirect routes use the term splat to", "tokens": [50364, 819, 2115, 337, 341, 2171, 561, 1105, 2171, 561, 764, 264, 1433, 411, 1472, 971, 4070, 50672, 50672, 411, 294, 257, 291, 458, 294, 512, 9410, 8650, 291, 393, 362, 257, 7006, 1230, 295, 12869, 1374, 50988, 50988, 3882, 82, 293, 550, 291, 291, 483, 729, 382, 364, 10225, 2232, 2533, 75, 2505, 311, 29066, 18242, 764, 264, 1433, 4732, 267, 281, 51360, 51360, 584, 2035, 1487, 934, 341, 445, 7983, 309, 976, 309, 976, 309, 281, 385, 294, 257, 1329, 370, 456, 366, 819, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.04119562299064036, "compression_ratio": 1.761467889908257, "no_caption_prob": 4.6836561523377895e-05}, {"id": 495, "seek": 322532, "start": 3245.2400000000002, "end": 3250.44, "text": " say whatever comes after this just capture it give it give it to me in a list so there are different", "tokens": [50364, 819, 2115, 337, 341, 2171, 561, 1105, 2171, 561, 764, 264, 1433, 411, 1472, 971, 4070, 50672, 50672, 411, 294, 257, 291, 458, 294, 512, 9410, 8650, 291, 393, 362, 257, 7006, 1230, 295, 12869, 1374, 50988, 50988, 3882, 82, 293, 550, 291, 291, 483, 729, 382, 364, 10225, 2232, 2533, 75, 2505, 311, 29066, 18242, 764, 264, 1433, 4732, 267, 281, 51360, 51360, 584, 2035, 1487, 934, 341, 445, 7983, 309, 976, 309, 976, 309, 281, 385, 294, 257, 1329, 370, 456, 366, 819, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.04119562299064036, "compression_ratio": 1.761467889908257, "no_caption_prob": 4.6836561523377895e-05}, {"id": 496, "seek": 325044, "start": 3250.44, "end": 3256.68, "text": " terms that are used for it but splat is just like you know uh similar to like the um like you know", "tokens": [50364, 2115, 300, 366, 1143, 337, 309, 457, 4732, 267, 307, 445, 411, 291, 458, 2232, 2531, 281, 411, 264, 1105, 411, 291, 458, 50676, 50676, 11437, 1696, 5755, 361, 37331, 5944, 5498, 309, 3974, 2171, 3974, 12973, 5893, 5893, 5893, 2232, 309, 311, 1936, 445, 51000, 51000, 411, 976, 385, 1203, 300, 1487, 934, 341, 1338, 293, 741, 603, 741, 603, 4813, 309, 6063, 1338, 2293, 51340, 51340, 741, 603, 741, 603, 1061, 20130, 493, 439, 729, 4190, 370, 300, 311, 1105, 300, 311, 437, 4732, 267, 775, 307, 337, 264, 1105, 370, 6968, 5893, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07367166365035857, "compression_ratio": 1.7818181818181817, "no_caption_prob": 0.00010553655010880902}, {"id": 497, "seek": 325044, "start": 3256.68, "end": 3263.16, "text": " ecma script javascript calls it spread sometimes spread operator dot dot dot uh it's basically just", "tokens": [50364, 2115, 300, 366, 1143, 337, 309, 457, 4732, 267, 307, 445, 411, 291, 458, 2232, 2531, 281, 411, 264, 1105, 411, 291, 458, 50676, 50676, 11437, 1696, 5755, 361, 37331, 5944, 5498, 309, 3974, 2171, 3974, 12973, 5893, 5893, 5893, 2232, 309, 311, 1936, 445, 51000, 51000, 411, 976, 385, 1203, 300, 1487, 934, 341, 1338, 293, 741, 603, 741, 603, 4813, 309, 6063, 1338, 2293, 51340, 51340, 741, 603, 741, 603, 1061, 20130, 493, 439, 729, 4190, 370, 300, 311, 1105, 300, 311, 437, 4732, 267, 775, 307, 337, 264, 1105, 370, 6968, 5893, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07367166365035857, "compression_ratio": 1.7818181818181817, "no_caption_prob": 0.00010553655010880902}, {"id": 498, "seek": 325044, "start": 3263.16, "end": 3269.96, "text": " like give me everything that comes after this yeah and i'll i'll handle it somehow yeah exactly", "tokens": [50364, 2115, 300, 366, 1143, 337, 309, 457, 4732, 267, 307, 445, 411, 291, 458, 2232, 2531, 281, 411, 264, 1105, 411, 291, 458, 50676, 50676, 11437, 1696, 5755, 361, 37331, 5944, 5498, 309, 3974, 2171, 3974, 12973, 5893, 5893, 5893, 2232, 309, 311, 1936, 445, 51000, 51000, 411, 976, 385, 1203, 300, 1487, 934, 341, 1338, 293, 741, 603, 741, 603, 4813, 309, 6063, 1338, 2293, 51340, 51340, 741, 603, 741, 603, 1061, 20130, 493, 439, 729, 4190, 370, 300, 311, 1105, 300, 311, 437, 4732, 267, 775, 307, 337, 264, 1105, 370, 6968, 5893, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07367166365035857, "compression_ratio": 1.7818181818181817, "no_caption_prob": 0.00010553655010880902}, {"id": 499, "seek": 325044, "start": 3269.96, "end": 3278.12, "text": " i'll i'll slurp up all those values so that's um that's what splat does is for the um so blog dot", "tokens": [50364, 2115, 300, 366, 1143, 337, 309, 457, 4732, 267, 307, 445, 411, 291, 458, 2232, 2531, 281, 411, 264, 1105, 411, 291, 458, 50676, 50676, 11437, 1696, 5755, 361, 37331, 5944, 5498, 309, 3974, 2171, 3974, 12973, 5893, 5893, 5893, 2232, 309, 311, 1936, 445, 51000, 51000, 411, 976, 385, 1203, 300, 1487, 934, 341, 1338, 293, 741, 603, 741, 603, 4813, 309, 6063, 1338, 2293, 51340, 51340, 741, 603, 741, 603, 1061, 20130, 493, 439, 729, 4190, 370, 300, 311, 1105, 300, 311, 437, 4732, 267, 775, 307, 337, 264, 1105, 370, 6968, 5893, 51748, 51748], "temperature": 0.0, "avg_logprob": -0.07367166365035857, "compression_ratio": 1.7818181818181817, "no_caption_prob": 0.00010553655010880902}, {"id": 500, "seek": 327812, "start": 3278.12, "end": 3287.64, "text": " slug underscore is gonna match exactly one segment after blog so if you do blog slash hello slash", "tokens": [50364, 1061, 697, 37556, 307, 799, 2995, 2293, 472, 9469, 934, 6968, 370, 498, 291, 360, 6968, 17330, 7751, 17330, 50840, 50840, 1002, 309, 311, 406, 516, 281, 2995, 300, 457, 498, 291, 630, 257, 4732, 267, 7955, 550, 309, 311, 516, 281, 2995, 309, 311, 309, 311, 51176, 51176, 516, 516, 281, 2995, 1340, 370, 291, 393, 291, 393, 767, 360, 291, 727, 360, 411, 3028, 5893, 6968, 5893, 51480, 51480], "temperature": 0.0, "avg_logprob": -0.05156260973786655, "compression_ratio": 1.8427672955974843, "no_caption_prob": 6.502609903691337e-05}, {"id": 501, "seek": 327812, "start": 3287.64, "end": 3294.3599999999997, "text": " world it's not going to match that but if you did a splat route then it's going to match it's it's", "tokens": [50364, 1061, 697, 37556, 307, 799, 2995, 2293, 472, 9469, 934, 6968, 370, 498, 291, 360, 6968, 17330, 7751, 17330, 50840, 50840, 1002, 309, 311, 406, 516, 281, 2995, 300, 457, 498, 291, 630, 257, 4732, 267, 7955, 550, 309, 311, 516, 281, 2995, 309, 311, 309, 311, 51176, 51176, 516, 516, 281, 2995, 1340, 370, 291, 393, 291, 393, 767, 360, 291, 727, 360, 411, 3028, 5893, 6968, 5893, 51480, 51480], "temperature": 0.0, "avg_logprob": -0.05156260973786655, "compression_ratio": 1.8427672955974843, "no_caption_prob": 6.502609903691337e-05}, {"id": 502, "seek": 327812, "start": 3294.3599999999997, "end": 3300.44, "text": " going going to match anything so you can you can actually do you could do like page dot blog dot", "tokens": [50364, 1061, 697, 37556, 307, 799, 2995, 2293, 472, 9469, 934, 6968, 370, 498, 291, 360, 6968, 17330, 7751, 17330, 50840, 50840, 1002, 309, 311, 406, 516, 281, 2995, 300, 457, 498, 291, 630, 257, 4732, 267, 7955, 550, 309, 311, 516, 281, 2995, 309, 311, 309, 311, 51176, 51176, 516, 516, 281, 2995, 1340, 370, 291, 393, 291, 393, 767, 360, 291, 727, 360, 411, 3028, 5893, 6968, 5893, 51480, 51480], "temperature": 0.0, "avg_logprob": -0.05156260973786655, "compression_ratio": 1.8427672955974843, "no_caption_prob": 6.502609903691337e-05}, {"id": 503, "seek": 330044, "start": 3300.44, "end": 3308.12, "text": " all uppercase splat underscore and that would match blog slash hello world it wouldn't match", "tokens": [50364, 439, 11775, 2869, 651, 4732, 267, 37556, 293, 300, 576, 2995, 6968, 17330, 7751, 1002, 309, 2759, 380, 2995, 50748, 50748, 17330, 6968, 570, 321, 630, 257, 2167, 37556, 370, 309, 311, 257, 4739, 4732, 267, 264, 3834, 37556, 51116, 51116, 307, 364, 17312, 370, 309, 311, 264, 912, 365, 1105, 411, 337, 1365, 294, 264, 806, 76, 7183, 568, 13, 15, 45623, 741, 362, 257, 7955, 51444, 51444], "temperature": 0.0, "avg_logprob": -0.02992534637451172, "compression_ratio": 1.654970760233918, "no_caption_prob": 1.8058251953334548e-05}, {"id": 504, "seek": 330044, "start": 3308.12, "end": 3315.48, "text": " slash blog because we did a single underscore so it's a required splat the double underscore", "tokens": [50364, 439, 11775, 2869, 651, 4732, 267, 37556, 293, 300, 576, 2995, 6968, 17330, 7751, 1002, 309, 2759, 380, 2995, 50748, 50748, 17330, 6968, 570, 321, 630, 257, 2167, 37556, 370, 309, 311, 257, 4739, 4732, 267, 264, 3834, 37556, 51116, 51116, 307, 364, 17312, 370, 309, 311, 264, 912, 365, 1105, 411, 337, 1365, 294, 264, 806, 76, 7183, 568, 13, 15, 45623, 741, 362, 257, 7955, 51444, 51444], "temperature": 0.0, "avg_logprob": -0.02992534637451172, "compression_ratio": 1.654970760233918, "no_caption_prob": 1.8058251953334548e-05}, {"id": 505, "seek": 330044, "start": 3315.48, "end": 3322.04, "text": " is an optional so it's the same with um like for example in the elm pages 2.0 docs i have a route", "tokens": [50364, 439, 11775, 2869, 651, 4732, 267, 37556, 293, 300, 576, 2995, 6968, 17330, 7751, 1002, 309, 2759, 380, 2995, 50748, 50748, 17330, 6968, 570, 321, 630, 257, 2167, 37556, 370, 309, 311, 257, 4739, 4732, 267, 264, 3834, 37556, 51116, 51116, 307, 364, 17312, 370, 309, 311, 264, 912, 365, 1105, 411, 337, 1365, 294, 264, 806, 76, 7183, 568, 13, 15, 45623, 741, 362, 257, 7955, 51444, 51444], "temperature": 0.0, "avg_logprob": -0.02992534637451172, "compression_ratio": 1.654970760233918, "no_caption_prob": 1.8058251953334548e-05}, {"id": 506, "seek": 332204, "start": 3322.04, "end": 3330.52, "text": " that is um docs it's page dot docs dot section underscore underscore the reason i do that is", "tokens": [50364, 300, 307, 1105, 45623, 309, 311, 3028, 5893, 45623, 5893, 3541, 37556, 37556, 264, 1778, 741, 360, 300, 307, 50788, 50788, 570, 498, 291, 352, 281, 498, 291, 352, 281, 17330, 45623, 17330, 437, 307, 806, 76, 7183, 550, 309, 3110, 291, 264, 437, 307, 51152, 51152, 806, 76, 7183, 45623, 3541, 457, 498, 291, 352, 281, 17330, 45623, 741, 767, 611, 528, 300, 281, 855, 291, 437, 307, 806, 76, 51492, 51492, 7183, 370, 741, 528, 264, 912, 3028, 10088, 281, 312, 6250, 337, 22407, 293, 4099, 264, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.04202200776787214, "compression_ratio": 2.106145251396648, "no_caption_prob": 6.438955097110011e-06}, {"id": 507, "seek": 332204, "start": 3330.52, "end": 3337.8, "text": " because if you go to if you go to slash docs slash what is elm pages then it shows you the what is", "tokens": [50364, 300, 307, 1105, 45623, 309, 311, 3028, 5893, 45623, 5893, 3541, 37556, 37556, 264, 1778, 741, 360, 300, 307, 50788, 50788, 570, 498, 291, 352, 281, 498, 291, 352, 281, 17330, 45623, 17330, 437, 307, 806, 76, 7183, 550, 309, 3110, 291, 264, 437, 307, 51152, 51152, 806, 76, 7183, 45623, 3541, 457, 498, 291, 352, 281, 17330, 45623, 741, 767, 611, 528, 300, 281, 855, 291, 437, 307, 806, 76, 51492, 51492, 7183, 370, 741, 528, 264, 912, 3028, 10088, 281, 312, 6250, 337, 22407, 293, 4099, 264, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.04202200776787214, "compression_ratio": 2.106145251396648, "no_caption_prob": 6.438955097110011e-06}, {"id": 508, "seek": 332204, "start": 3337.8, "end": 3344.6, "text": " elm pages docs section but if you go to slash docs i actually also want that to show you what is elm", "tokens": [50364, 300, 307, 1105, 45623, 309, 311, 3028, 5893, 45623, 5893, 3541, 37556, 37556, 264, 1778, 741, 360, 300, 307, 50788, 50788, 570, 498, 291, 352, 281, 498, 291, 352, 281, 17330, 45623, 17330, 437, 307, 806, 76, 7183, 550, 309, 3110, 291, 264, 437, 307, 51152, 51152, 806, 76, 7183, 45623, 3541, 457, 498, 291, 352, 281, 17330, 45623, 741, 767, 611, 528, 300, 281, 855, 291, 437, 307, 806, 76, 51492, 51492, 7183, 370, 741, 528, 264, 912, 3028, 10088, 281, 312, 6250, 337, 22407, 293, 4099, 264, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.04202200776787214, "compression_ratio": 2.106145251396648, "no_caption_prob": 6.438955097110011e-06}, {"id": 509, "seek": 332204, "start": 3344.6, "end": 3350.12, "text": " pages so i want the same page module to be responsible for rendering and showing the", "tokens": [50364, 300, 307, 1105, 45623, 309, 311, 3028, 5893, 45623, 5893, 3541, 37556, 37556, 264, 1778, 741, 360, 300, 307, 50788, 50788, 570, 498, 291, 352, 281, 498, 291, 352, 281, 17330, 45623, 17330, 437, 307, 806, 76, 7183, 550, 309, 3110, 291, 264, 437, 307, 51152, 51152, 806, 76, 7183, 45623, 3541, 457, 498, 291, 352, 281, 17330, 45623, 741, 767, 611, 528, 300, 281, 855, 291, 437, 307, 806, 76, 51492, 51492, 7183, 370, 741, 528, 264, 912, 3028, 10088, 281, 312, 6250, 337, 22407, 293, 4099, 264, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.04202200776787214, "compression_ratio": 2.106145251396648, "no_caption_prob": 6.438955097110011e-06}, {"id": 510, "seek": 335012, "start": 3350.12, "end": 3355.3199999999997, "text": " metadata and everything so i want to use the same page module for both of those routes whereas in", "tokens": [50364, 26603, 293, 1203, 370, 741, 528, 281, 764, 264, 912, 3028, 10088, 337, 1293, 295, 729, 18242, 9735, 294, 50624, 50624, 264, 1389, 295, 411, 3028, 5893, 6968, 300, 311, 257, 3879, 4994, 3028, 22161, 31038, 5347, 281, 3028, 5893, 50924, 50924, 6968, 5893, 1061, 697, 37556, 370, 741, 528, 729, 281, 312, 4994, 3028, 16679, 370, 300, 370, 300, 311, 264, 51184, 51184, 17312, 3834, 37556, 412, 264, 917, 295, 257, 9469, 1392, 370, 741, 3811, 300, 498, 498, 6063, 1105, 732, 18242, 51540, 51572], "temperature": 0.0, "avg_logprob": -0.03387690403244712, "compression_ratio": 1.8254716981132075, "no_caption_prob": 1.9832914404105395e-05}, {"id": 511, "seek": 335012, "start": 3355.3199999999997, "end": 3361.3199999999997, "text": " the case of like page dot blog that's a totally separate page listing blogs compared to page dot", "tokens": [50364, 26603, 293, 1203, 370, 741, 528, 281, 764, 264, 912, 3028, 10088, 337, 1293, 295, 729, 18242, 9735, 294, 50624, 50624, 264, 1389, 295, 411, 3028, 5893, 6968, 300, 311, 257, 3879, 4994, 3028, 22161, 31038, 5347, 281, 3028, 5893, 50924, 50924, 6968, 5893, 1061, 697, 37556, 370, 741, 528, 729, 281, 312, 4994, 3028, 16679, 370, 300, 370, 300, 311, 264, 51184, 51184, 17312, 3834, 37556, 412, 264, 917, 295, 257, 9469, 1392, 370, 741, 3811, 300, 498, 498, 6063, 1105, 732, 18242, 51540, 51572], "temperature": 0.0, "avg_logprob": -0.03387690403244712, "compression_ratio": 1.8254716981132075, "no_caption_prob": 1.9832914404105395e-05}, {"id": 512, "seek": 335012, "start": 3361.3199999999997, "end": 3366.52, "text": " blog dot slug underscore so i want those to be separate page modules so that so that's the", "tokens": [50364, 26603, 293, 1203, 370, 741, 528, 281, 764, 264, 912, 3028, 10088, 337, 1293, 295, 729, 18242, 9735, 294, 50624, 50624, 264, 1389, 295, 411, 3028, 5893, 6968, 300, 311, 257, 3879, 4994, 3028, 22161, 31038, 5347, 281, 3028, 5893, 50924, 50924, 6968, 5893, 1061, 697, 37556, 370, 741, 528, 729, 281, 312, 4994, 3028, 16679, 370, 300, 370, 300, 311, 264, 51184, 51184, 17312, 3834, 37556, 412, 264, 917, 295, 257, 9469, 1392, 370, 741, 3811, 300, 498, 498, 6063, 1105, 732, 18242, 51540, 51572], "temperature": 0.0, "avg_logprob": -0.03387690403244712, "compression_ratio": 1.8254716981132075, "no_caption_prob": 1.9832914404105395e-05}, {"id": 513, "seek": 335012, "start": 3366.52, "end": 3373.64, "text": " optional double underscore at the end of a segment okay so i imagine that if if somehow um two routes", "tokens": [50364, 26603, 293, 1203, 370, 741, 528, 281, 764, 264, 912, 3028, 10088, 337, 1293, 295, 729, 18242, 9735, 294, 50624, 50624, 264, 1389, 295, 411, 3028, 5893, 6968, 300, 311, 257, 3879, 4994, 3028, 22161, 31038, 5347, 281, 3028, 5893, 50924, 50924, 6968, 5893, 1061, 697, 37556, 370, 741, 528, 729, 281, 312, 4994, 3028, 16679, 370, 300, 370, 300, 311, 264, 51184, 51184, 17312, 3834, 37556, 412, 264, 917, 295, 257, 9469, 1392, 370, 741, 3811, 300, 498, 498, 6063, 1105, 732, 18242, 51540, 51572], "temperature": 0.0, "avg_logprob": -0.03387690403244712, "compression_ratio": 1.8254716981132075, "no_caption_prob": 1.9832914404105395e-05}, {"id": 514, "seek": 337364, "start": 3373.64, "end": 3380.2799999999997, "text": " or two modules cover the same route like yeah uh then you have a build failure well it's actually", "tokens": [50364, 420, 732, 16679, 2060, 264, 912, 7955, 411, 1338, 2232, 550, 291, 362, 257, 1322, 7763, 731, 309, 311, 767, 50696, 50696, 799, 445, 2232, 309, 15957, 20458, 486, 2995, 18242, 293, 291, 393, 8576, 18242, 293, 264, 544, 51048, 51048, 2685, 472, 486, 747, 16969, 655, 370, 411, 337, 1365, 498, 291, 632, 291, 291, 727, 362, 4732, 267, 18242, 51388, 51388, 293, 291, 727, 611, 362, 257, 6968, 7955, 370, 498, 291, 362, 411, 257, 1192, 1496, 4732, 267, 300, 311, 799, 2995, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.09541797637939453, "compression_ratio": 1.8357487922705313, "no_caption_prob": 7.030841516098008e-05}, {"id": 515, "seek": 337364, "start": 3380.2799999999997, "end": 3387.3199999999997, "text": " gonna just uh it deterministically will match routes and you can shadow routes and the more", "tokens": [50364, 420, 732, 16679, 2060, 264, 912, 7955, 411, 1338, 2232, 550, 291, 362, 257, 1322, 7763, 731, 309, 311, 767, 50696, 50696, 799, 445, 2232, 309, 15957, 20458, 486, 2995, 18242, 293, 291, 393, 8576, 18242, 293, 264, 544, 51048, 51048, 2685, 472, 486, 747, 16969, 655, 370, 411, 337, 1365, 498, 291, 632, 291, 291, 727, 362, 4732, 267, 18242, 51388, 51388, 293, 291, 727, 611, 362, 257, 6968, 7955, 370, 498, 291, 362, 411, 257, 1192, 1496, 4732, 267, 300, 311, 799, 2995, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.09541797637939453, "compression_ratio": 1.8357487922705313, "no_caption_prob": 7.030841516098008e-05}, {"id": 516, "seek": 337364, "start": 3387.3199999999997, "end": 3394.12, "text": " specific one will take precedence so like for example if you had you you could have splat routes", "tokens": [50364, 420, 732, 16679, 2060, 264, 912, 7955, 411, 1338, 2232, 550, 291, 362, 257, 1322, 7763, 731, 309, 311, 767, 50696, 50696, 799, 445, 2232, 309, 15957, 20458, 486, 2995, 18242, 293, 291, 393, 8576, 18242, 293, 264, 544, 51048, 51048, 2685, 472, 486, 747, 16969, 655, 370, 411, 337, 1365, 498, 291, 632, 291, 291, 727, 362, 4732, 267, 18242, 51388, 51388, 293, 291, 727, 611, 362, 257, 6968, 7955, 370, 498, 291, 362, 411, 257, 1192, 1496, 4732, 267, 300, 311, 799, 2995, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.09541797637939453, "compression_ratio": 1.8357487922705313, "no_caption_prob": 7.030841516098008e-05}, {"id": 517, "seek": 337364, "start": 3394.12, "end": 3400.6, "text": " and you could also have a blog route so if you have like a top level splat that's gonna match", "tokens": [50364, 420, 732, 16679, 2060, 264, 912, 7955, 411, 1338, 2232, 550, 291, 362, 257, 1322, 7763, 731, 309, 311, 767, 50696, 50696, 799, 445, 2232, 309, 15957, 20458, 486, 2995, 18242, 293, 291, 393, 8576, 18242, 293, 264, 544, 51048, 51048, 2685, 472, 486, 747, 16969, 655, 370, 411, 337, 1365, 498, 291, 632, 291, 291, 727, 362, 4732, 267, 18242, 51388, 51388, 293, 291, 727, 611, 362, 257, 6968, 7955, 370, 498, 291, 362, 411, 257, 1192, 1496, 4732, 267, 300, 311, 799, 2995, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.09541797637939453, "compression_ratio": 1.8357487922705313, "no_caption_prob": 7.030841516098008e-05}, {"id": 518, "seek": 340060, "start": 3400.6, "end": 3408.2799999999997, "text": " slash about slash you know 2021 conference event slash whatever you could handle all of those with", "tokens": [50364, 17330, 466, 17330, 291, 458, 7201, 7586, 2280, 17330, 2035, 291, 727, 4813, 439, 295, 729, 365, 50748, 50748, 4732, 267, 4461, 291, 434, 1242, 8660, 729, 7183, 293, 641, 1412, 2909, 457, 550, 291, 727, 611, 51028, 51028, 4682, 362, 257, 1105, 257, 6968, 3028, 3028, 5893, 6968, 293, 300, 300, 2516, 16969, 655, 570, 300, 307, 257, 51452, 51452, 2685, 7955, 300, 291, 7642, 370, 1105, 1338, 370, 291, 370, 264, 7955, 300, 291, 300, 309, 21156, 279, 666, 293, 538, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.07433592039963295, "compression_ratio": 1.7889908256880733, "no_caption_prob": 6.144127382867737e-06}, {"id": 519, "seek": 340060, "start": 3408.2799999999997, "end": 3413.88, "text": " splat however you're getting wherever those pages and their data lives but then you could also", "tokens": [50364, 17330, 466, 17330, 291, 458, 7201, 7586, 2280, 17330, 2035, 291, 727, 4813, 439, 295, 729, 365, 50748, 50748, 4732, 267, 4461, 291, 434, 1242, 8660, 729, 7183, 293, 641, 1412, 2909, 457, 550, 291, 727, 611, 51028, 51028, 4682, 362, 257, 1105, 257, 6968, 3028, 3028, 5893, 6968, 293, 300, 300, 2516, 16969, 655, 570, 300, 307, 257, 51452, 51452, 2685, 7955, 300, 291, 7642, 370, 1105, 1338, 370, 291, 370, 264, 7955, 300, 291, 300, 309, 21156, 279, 666, 293, 538, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.07433592039963295, "compression_ratio": 1.7889908256880733, "no_caption_prob": 6.144127382867737e-06}, {"id": 520, "seek": 340060, "start": 3413.88, "end": 3422.36, "text": " specifically have a um a blog page page dot blog and that that takes precedence because that is a", "tokens": [50364, 17330, 466, 17330, 291, 458, 7201, 7586, 2280, 17330, 2035, 291, 727, 4813, 439, 295, 729, 365, 50748, 50748, 4732, 267, 4461, 291, 434, 1242, 8660, 729, 7183, 293, 641, 1412, 2909, 457, 550, 291, 727, 611, 51028, 51028, 4682, 362, 257, 1105, 257, 6968, 3028, 3028, 5893, 6968, 293, 300, 300, 2516, 16969, 655, 570, 300, 307, 257, 51452, 51452, 2685, 7955, 300, 291, 7642, 370, 1105, 1338, 370, 291, 370, 264, 7955, 300, 291, 300, 309, 21156, 279, 666, 293, 538, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.07433592039963295, "compression_ratio": 1.7889908256880733, "no_caption_prob": 6.144127382867737e-06}, {"id": 521, "seek": 340060, "start": 3422.36, "end": 3429.72, "text": " specific route that you defined so um yeah so you so the route that you that it parses into and by", "tokens": [50364, 17330, 466, 17330, 291, 458, 7201, 7586, 2280, 17330, 2035, 291, 727, 4813, 439, 295, 729, 365, 50748, 50748, 4732, 267, 4461, 291, 434, 1242, 8660, 729, 7183, 293, 641, 1412, 2909, 457, 550, 291, 727, 611, 51028, 51028, 4682, 362, 257, 1105, 257, 6968, 3028, 3028, 5893, 6968, 293, 300, 300, 2516, 16969, 655, 570, 300, 307, 257, 51452, 51452, 2685, 7955, 300, 291, 7642, 370, 1105, 1338, 370, 291, 370, 264, 7955, 300, 291, 300, 309, 21156, 279, 666, 293, 538, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.07433592039963295, "compression_ratio": 1.7889908256880733, "no_caption_prob": 6.144127382867737e-06}, {"id": 522, "seek": 342972, "start": 3429.72, "end": 3435.3999999999996, "text": " the way there's a there's a route module that's generated so so elm pages just like lmspa you you", "tokens": [50364, 264, 636, 456, 311, 257, 456, 311, 257, 7955, 10088, 300, 311, 10833, 370, 370, 806, 76, 7183, 445, 411, 287, 2592, 4306, 291, 291, 50648, 50648, 483, 257, 10833, 7955, 10088, 300, 575, 341, 7955, 2375, 2010, 293, 291, 393, 764, 300, 281, 411, 2232, 50924, 50924, 37648, 5030, 2113, 281, 7183, 370, 264, 2685, 507, 307, 15957, 3142, 293, 309, 1177, 380, 5672, 322, 597, 51284, 51284, 18242, 291, 600, 7642, 370, 411, 337, 1365, 498, 291, 632, 257, 4732, 267, 7955, 293, 291, 848, 337, 300, 4732, 267, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.09640088332326789, "compression_ratio": 1.7981220657276995, "no_caption_prob": 9.818171747610904e-06}, {"id": 523, "seek": 342972, "start": 3435.3999999999996, "end": 3440.9199999999996, "text": " get a generated route module that has this route custom type and you can use that to like uh", "tokens": [50364, 264, 636, 456, 311, 257, 456, 311, 257, 7955, 10088, 300, 311, 10833, 370, 370, 806, 76, 7183, 445, 411, 287, 2592, 4306, 291, 291, 50648, 50648, 483, 257, 10833, 7955, 10088, 300, 575, 341, 7955, 2375, 2010, 293, 291, 393, 764, 300, 281, 411, 2232, 50924, 50924, 37648, 5030, 2113, 281, 7183, 370, 264, 2685, 507, 307, 15957, 3142, 293, 309, 1177, 380, 5672, 322, 597, 51284, 51284, 18242, 291, 600, 7642, 370, 411, 337, 1365, 498, 291, 632, 257, 4732, 267, 7955, 293, 291, 848, 337, 300, 4732, 267, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.09640088332326789, "compression_ratio": 1.7981220657276995, "no_caption_prob": 9.818171747610904e-06}, {"id": 524, "seek": 342972, "start": 3440.9199999999996, "end": 3448.12, "text": " programmatically link to pages so the specificity is deterministic and it doesn't depend on which", "tokens": [50364, 264, 636, 456, 311, 257, 456, 311, 257, 7955, 10088, 300, 311, 10833, 370, 370, 806, 76, 7183, 445, 411, 287, 2592, 4306, 291, 291, 50648, 50648, 483, 257, 10833, 7955, 10088, 300, 575, 341, 7955, 2375, 2010, 293, 291, 393, 764, 300, 281, 411, 2232, 50924, 50924, 37648, 5030, 2113, 281, 7183, 370, 264, 2685, 507, 307, 15957, 3142, 293, 309, 1177, 380, 5672, 322, 597, 51284, 51284, 18242, 291, 600, 7642, 370, 411, 337, 1365, 498, 291, 632, 257, 4732, 267, 7955, 293, 291, 848, 337, 300, 4732, 267, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.09640088332326789, "compression_ratio": 1.7981220657276995, "no_caption_prob": 9.818171747610904e-06}, {"id": 525, "seek": 342972, "start": 3448.12, "end": 3454.2799999999997, "text": " routes you've defined so like for example if you had a splat route and you said for that splat", "tokens": [50364, 264, 636, 456, 311, 257, 456, 311, 257, 7955, 10088, 300, 311, 10833, 370, 370, 806, 76, 7183, 445, 411, 287, 2592, 4306, 291, 291, 50648, 50648, 483, 257, 10833, 7955, 10088, 300, 575, 341, 7955, 2375, 2010, 293, 291, 393, 764, 300, 281, 411, 2232, 50924, 50924, 37648, 5030, 2113, 281, 7183, 370, 264, 2685, 507, 307, 15957, 3142, 293, 309, 1177, 380, 5672, 322, 597, 51284, 51284, 18242, 291, 600, 7642, 370, 411, 337, 1365, 498, 291, 632, 257, 4732, 267, 7955, 293, 291, 848, 337, 300, 4732, 267, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.09640088332326789, "compression_ratio": 1.7981220657276995, "no_caption_prob": 9.818171747610904e-06}, {"id": 526, "seek": 345428, "start": 3454.28, "end": 3461.88, "text": " route you're going to handle a route of blog but then you also have a blog route page dot blog", "tokens": [50364, 7955, 291, 434, 516, 281, 4813, 257, 7955, 295, 6968, 457, 550, 291, 611, 362, 257, 6968, 7955, 3028, 5893, 6968, 50744, 50744, 731, 264, 264, 6968, 7955, 307, 445, 1009, 516, 281, 2995, 293, 309, 1177, 380, 5672, 322, 1968, 322, 2035, 51064, 51064, 1646, 604, 661, 18242, 362, 370, 264, 264, 264, 18242, 300, 291, 603, 48377, 666, 307, 15957, 3142, 2361, 322, 51340, 51340, 264, 2685, 507, 295, 18242, 1338, 457, 741, 1391, 820, 4682, 498, 291, 362, 732, 14324, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.08330541917647438, "compression_ratio": 1.8365384615384615, "no_caption_prob": 5.0641890993574634e-05}, {"id": 527, "seek": 345428, "start": 3461.88, "end": 3468.28, "text": " well the the blog route is just always going to match and it doesn't depend on whether on whatever", "tokens": [50364, 7955, 291, 434, 516, 281, 4813, 257, 7955, 295, 6968, 457, 550, 291, 611, 362, 257, 6968, 7955, 3028, 5893, 6968, 50744, 50744, 731, 264, 264, 6968, 7955, 307, 445, 1009, 516, 281, 2995, 293, 309, 1177, 380, 5672, 322, 1968, 322, 2035, 51064, 51064, 1646, 604, 661, 18242, 362, 370, 264, 264, 264, 18242, 300, 291, 603, 48377, 666, 307, 15957, 3142, 2361, 322, 51340, 51340, 264, 2685, 507, 295, 18242, 1338, 457, 741, 1391, 820, 4682, 498, 291, 362, 732, 14324, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.08330541917647438, "compression_ratio": 1.8365384615384615, "no_caption_prob": 5.0641890993574634e-05}, {"id": 528, "seek": 345428, "start": 3468.28, "end": 3473.8, "text": " else any other routes have so the the the routes that you'll parse into is deterministic based on", "tokens": [50364, 7955, 291, 434, 516, 281, 4813, 257, 7955, 295, 6968, 457, 550, 291, 611, 362, 257, 6968, 7955, 3028, 5893, 6968, 50744, 50744, 731, 264, 264, 6968, 7955, 307, 445, 1009, 516, 281, 2995, 293, 309, 1177, 380, 5672, 322, 1968, 322, 2035, 51064, 51064, 1646, 604, 661, 18242, 362, 370, 264, 264, 264, 18242, 300, 291, 603, 48377, 666, 307, 15957, 3142, 2361, 322, 51340, 51340, 264, 2685, 507, 295, 18242, 1338, 457, 741, 1391, 820, 4682, 498, 291, 362, 732, 14324, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.08330541917647438, "compression_ratio": 1.8365384615384615, "no_caption_prob": 5.0641890993574634e-05}, {"id": 529, "seek": 345428, "start": 3473.8, "end": 3479.4, "text": " the specificity of routes yeah but i probably should specifically if you have two matching", "tokens": [50364, 7955, 291, 434, 516, 281, 4813, 257, 7955, 295, 6968, 457, 550, 291, 611, 362, 257, 6968, 7955, 3028, 5893, 6968, 50744, 50744, 731, 264, 264, 6968, 7955, 307, 445, 1009, 516, 281, 2995, 293, 309, 1177, 380, 5672, 322, 1968, 322, 2035, 51064, 51064, 1646, 604, 661, 18242, 362, 370, 264, 264, 264, 18242, 300, 291, 603, 48377, 666, 307, 15957, 3142, 2361, 322, 51340, 51340, 264, 2685, 507, 295, 18242, 1338, 457, 741, 1391, 820, 4682, 498, 291, 362, 732, 14324, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.08330541917647438, "compression_ratio": 1.8365384615384615, "no_caption_prob": 5.0641890993574634e-05}, {"id": 530, "seek": 347940, "start": 3479.4, "end": 3485.2400000000002, "text": " routes i should give a build error for that specific case but but in terms of um like i think", "tokens": [50364, 18242, 741, 820, 976, 257, 1322, 6713, 337, 300, 2685, 1389, 457, 457, 294, 2115, 295, 1105, 411, 741, 519, 50656, 50656, 341, 307, 445, 257, 4961, 3410, 281, 1066, 294, 1575, 300, 264, 2232, 437, 437, 257, 7955, 10676, 307, 406, 2361, 50968, 50968, 322, 2232, 264, 2685, 18242, 291, 362, 309, 311, 2361, 322, 264, 2685, 507, 295, 264, 3028, 16679, 370, 291, 458, 51356, 51356, 437, 257, 7955, 486, 979, 1429, 281, 10060, 295, 597, 18242, 366, 659, 28748, 420, 2514, 294, 428, 724, 498, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.07095194381216298, "compression_ratio": 1.794392523364486, "no_caption_prob": 4.610934047377668e-05}, {"id": 531, "seek": 347940, "start": 3485.2400000000002, "end": 3491.48, "text": " this is just a helpful concept to keep in mind that the uh what what a route matches is not based", "tokens": [50364, 18242, 741, 820, 976, 257, 1322, 6713, 337, 300, 2685, 1389, 457, 457, 294, 2115, 295, 1105, 411, 741, 519, 50656, 50656, 341, 307, 445, 257, 4961, 3410, 281, 1066, 294, 1575, 300, 264, 2232, 437, 437, 257, 7955, 10676, 307, 406, 2361, 50968, 50968, 322, 2232, 264, 2685, 18242, 291, 362, 309, 311, 2361, 322, 264, 2685, 507, 295, 264, 3028, 16679, 370, 291, 458, 51356, 51356, 437, 257, 7955, 486, 979, 1429, 281, 10060, 295, 597, 18242, 366, 659, 28748, 420, 2514, 294, 428, 724, 498, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.07095194381216298, "compression_ratio": 1.794392523364486, "no_caption_prob": 4.610934047377668e-05}, {"id": 532, "seek": 347940, "start": 3491.48, "end": 3499.2400000000002, "text": " on uh the specific routes you have it's based on the specificity of the page modules so you know", "tokens": [50364, 18242, 741, 820, 976, 257, 1322, 6713, 337, 300, 2685, 1389, 457, 457, 294, 2115, 295, 1105, 411, 741, 519, 50656, 50656, 341, 307, 445, 257, 4961, 3410, 281, 1066, 294, 1575, 300, 264, 2232, 437, 437, 257, 7955, 10676, 307, 406, 2361, 50968, 50968, 322, 2232, 264, 2685, 18242, 291, 362, 309, 311, 2361, 322, 264, 2685, 507, 295, 264, 3028, 16679, 370, 291, 458, 51356, 51356, 437, 257, 7955, 486, 979, 1429, 281, 10060, 295, 597, 18242, 366, 659, 28748, 420, 2514, 294, 428, 724, 498, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.07095194381216298, "compression_ratio": 1.794392523364486, "no_caption_prob": 4.610934047377668e-05}, {"id": 533, "seek": 347940, "start": 3499.2400000000002, "end": 3506.52, "text": " what a route will decode to regardless of which routes are pre rendered or exist in your app if", "tokens": [50364, 18242, 741, 820, 976, 257, 1322, 6713, 337, 300, 2685, 1389, 457, 457, 294, 2115, 295, 1105, 411, 741, 519, 50656, 50656, 341, 307, 445, 257, 4961, 3410, 281, 1066, 294, 1575, 300, 264, 2232, 437, 437, 257, 7955, 10676, 307, 406, 2361, 50968, 50968, 322, 2232, 264, 2685, 18242, 291, 362, 309, 311, 2361, 322, 264, 2685, 507, 295, 264, 3028, 16679, 370, 291, 458, 51356, 51356, 437, 257, 7955, 486, 979, 1429, 281, 10060, 295, 597, 18242, 366, 659, 28748, 420, 2514, 294, 428, 724, 498, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.07095194381216298, "compression_ratio": 1.794392523364486, "no_caption_prob": 4.610934047377668e-05}, {"id": 534, "seek": 350652, "start": 3506.52, "end": 3513.72, "text": " that makes sense distilled is not yet in on pages right it is oh it's it's fully stable so uh i've", "tokens": [50364, 300, 1669, 2020, 1483, 6261, 307, 406, 1939, 294, 322, 7183, 558, 309, 307, 1954, 309, 311, 309, 311, 4498, 8351, 370, 2232, 741, 600, 50724, 50724, 1612, 291, 751, 466, 264, 3410, 295, 1483, 6261, 2232, 1412, 393, 291, 2903, 437, 300, 307, 1338, 370, 294, 51072, 51072, 29834, 411, 958, 25530, 293, 257, 688, 295, 613, 361, 37331, 5944, 2361, 13437, 3621, 29834, 420, 361, 76, 372, 501, 51388, 51388, 29834, 264, 636, 300, 291, 483, 1412, 281, 264, 3028, 307, 291, 576, 584, 411, 294, 958, 25530, 291, 1116, 584, 483, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189465191899514, "compression_ratio": 1.7627906976744185, "no_caption_prob": 2.7534610126167536e-05}, {"id": 535, "seek": 350652, "start": 3513.72, "end": 3520.68, "text": " seen you talk about the concept of distilled uh data can you explain what that is yeah so in", "tokens": [50364, 300, 1669, 2020, 1483, 6261, 307, 406, 1939, 294, 322, 7183, 558, 309, 307, 1954, 309, 311, 309, 311, 4498, 8351, 370, 2232, 741, 600, 50724, 50724, 1612, 291, 751, 466, 264, 3410, 295, 1483, 6261, 2232, 1412, 393, 291, 2903, 437, 300, 307, 1338, 370, 294, 51072, 51072, 29834, 411, 958, 25530, 293, 257, 688, 295, 613, 361, 37331, 5944, 2361, 13437, 3621, 29834, 420, 361, 76, 372, 501, 51388, 51388, 29834, 264, 636, 300, 291, 483, 1412, 281, 264, 3028, 307, 291, 576, 584, 411, 294, 958, 25530, 291, 1116, 584, 483, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189465191899514, "compression_ratio": 1.7627906976744185, "no_caption_prob": 2.7534610126167536e-05}, {"id": 536, "seek": 350652, "start": 3520.68, "end": 3527.0, "text": " frameworks like nextjs and a lot of these javascript based static site frameworks or jmstack", "tokens": [50364, 300, 1669, 2020, 1483, 6261, 307, 406, 1939, 294, 322, 7183, 558, 309, 307, 1954, 309, 311, 309, 311, 4498, 8351, 370, 2232, 741, 600, 50724, 50724, 1612, 291, 751, 466, 264, 3410, 295, 1483, 6261, 2232, 1412, 393, 291, 2903, 437, 300, 307, 1338, 370, 294, 51072, 51072, 29834, 411, 958, 25530, 293, 257, 688, 295, 613, 361, 37331, 5944, 2361, 13437, 3621, 29834, 420, 361, 76, 372, 501, 51388, 51388, 29834, 264, 636, 300, 291, 483, 1412, 281, 264, 3028, 307, 291, 576, 584, 411, 294, 958, 25530, 291, 1116, 584, 483, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189465191899514, "compression_ratio": 1.7627906976744185, "no_caption_prob": 2.7534610126167536e-05}, {"id": 537, "seek": 350652, "start": 3527.0, "end": 3534.52, "text": " frameworks the way that you get data to the page is you would say like in nextjs you'd say get", "tokens": [50364, 300, 1669, 2020, 1483, 6261, 307, 406, 1939, 294, 322, 7183, 558, 309, 307, 1954, 309, 311, 309, 311, 4498, 8351, 370, 2232, 741, 600, 50724, 50724, 1612, 291, 751, 466, 264, 3410, 295, 1483, 6261, 2232, 1412, 393, 291, 2903, 437, 300, 307, 1338, 370, 294, 51072, 51072, 29834, 411, 958, 25530, 293, 257, 688, 295, 613, 361, 37331, 5944, 2361, 13437, 3621, 29834, 420, 361, 76, 372, 501, 51388, 51388, 29834, 264, 636, 300, 291, 483, 1412, 281, 264, 3028, 307, 291, 576, 584, 411, 294, 958, 25530, 291, 1116, 584, 483, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.14189465191899514, "compression_ratio": 1.7627906976744185, "no_caption_prob": 2.7534610126167536e-05}, {"id": 538, "seek": 353452, "start": 3534.52, "end": 3542.36, "text": " static props and then you have an async function you make http requests you read files you glob", "tokens": [50364, 13437, 26173, 293, 550, 291, 362, 364, 382, 34015, 2445, 291, 652, 37428, 12475, 291, 1401, 7098, 291, 16125, 50756, 50756, 291, 2035, 439, 613, 721, 300, 1412, 7139, 360, 797, 412, 1322, 565, 1338, 300, 311, 558, 370, 365, 51036, 51036, 958, 25530, 309, 309, 311, 516, 281, 360, 512, 10247, 1333, 295, 13437, 2232, 9887, 295, 264, 428, 3089, 293, 309, 51408, 51408, 767, 37741, 4936, 264, 3166, 295, 264, 3089, 300, 309, 311, 516, 281, 1190, 322, 264, 7154, 293, 300, 309, 311, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.09546309577094184, "compression_ratio": 1.7285067873303168, "no_caption_prob": 3.373576691956259e-05}, {"id": 539, "seek": 353452, "start": 3542.36, "end": 3547.96, "text": " you whatever all these things that data sources do again at build time yeah that's right so with", "tokens": [50364, 13437, 26173, 293, 550, 291, 362, 364, 382, 34015, 2445, 291, 652, 37428, 12475, 291, 1401, 7098, 291, 16125, 50756, 50756, 291, 2035, 439, 613, 721, 300, 1412, 7139, 360, 797, 412, 1322, 565, 1338, 300, 311, 558, 370, 365, 51036, 51036, 958, 25530, 309, 309, 311, 516, 281, 360, 512, 10247, 1333, 295, 13437, 2232, 9887, 295, 264, 428, 3089, 293, 309, 51408, 51408, 767, 37741, 4936, 264, 3166, 295, 264, 3089, 300, 309, 311, 516, 281, 1190, 322, 264, 7154, 293, 300, 309, 311, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.09546309577094184, "compression_ratio": 1.7285067873303168, "no_caption_prob": 3.373576691956259e-05}, {"id": 540, "seek": 353452, "start": 3547.96, "end": 3555.4, "text": " nextjs it it's going to do some fancy sort of static uh transformation of the your code and it", "tokens": [50364, 13437, 26173, 293, 550, 291, 362, 364, 382, 34015, 2445, 291, 652, 37428, 12475, 291, 1401, 7098, 291, 16125, 50756, 50756, 291, 2035, 439, 613, 721, 300, 1412, 7139, 360, 797, 412, 1322, 565, 1338, 300, 311, 558, 370, 365, 51036, 51036, 958, 25530, 309, 309, 311, 516, 281, 360, 512, 10247, 1333, 295, 13437, 2232, 9887, 295, 264, 428, 3089, 293, 309, 51408, 51408, 767, 37741, 4936, 264, 3166, 295, 264, 3089, 300, 309, 311, 516, 281, 1190, 322, 264, 7154, 293, 300, 309, 311, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.09546309577094184, "compression_ratio": 1.7285067873303168, "no_caption_prob": 3.373576691956259e-05}, {"id": 541, "seek": 353452, "start": 3555.4, "end": 3561.08, "text": " actually splits apart the parts of the code that it's going to run on the server and that it's", "tokens": [50364, 13437, 26173, 293, 550, 291, 362, 364, 382, 34015, 2445, 291, 652, 37428, 12475, 291, 1401, 7098, 291, 16125, 50756, 50756, 291, 2035, 439, 613, 721, 300, 1412, 7139, 360, 797, 412, 1322, 565, 1338, 300, 311, 558, 370, 365, 51036, 51036, 958, 25530, 309, 309, 311, 516, 281, 360, 512, 10247, 1333, 295, 13437, 2232, 9887, 295, 264, 428, 3089, 293, 309, 51408, 51408, 767, 37741, 4936, 264, 3166, 295, 264, 3089, 300, 309, 311, 516, 281, 1190, 322, 264, 7154, 293, 300, 309, 311, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.09546309577094184, "compression_ratio": 1.7285067873303168, "no_caption_prob": 3.373576691956259e-05}, {"id": 542, "seek": 356108, "start": 3561.08, "end": 3567.96, "text": " going to run on the client and get static props is going to be run on the server or whether that's", "tokens": [50364, 516, 281, 1190, 322, 264, 6423, 293, 483, 13437, 26173, 307, 516, 281, 312, 1190, 322, 264, 7154, 420, 1968, 300, 311, 50708, 50708, 257, 1322, 7154, 420, 257, 7154, 1832, 2445, 420, 2035, 309, 815, 312, 293, 370, 1105, 370, 483, 13437, 26173, 51068, 51068, 291, 483, 439, 341, 1412, 293, 550, 291, 291, 976, 309, 257, 17436, 22395, 361, 3015, 2657, 293, 300, 311, 264, 1412, 300, 51468, 51468, 2170, 2279, 281, 264, 3028, 370, 498, 291, 1415, 281, 7472, 484, 1412, 291, 727, 360, 2035, 3997, 589, 291, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.07078825298108553, "compression_ratio": 1.8509615384615385, "no_caption_prob": 5.22492264281027e-05}, {"id": 543, "seek": 356108, "start": 3567.96, "end": 3575.16, "text": " a build server or a serverless function or whatever it may be and so um so get static props", "tokens": [50364, 516, 281, 1190, 322, 264, 6423, 293, 483, 13437, 26173, 307, 516, 281, 312, 1190, 322, 264, 7154, 420, 1968, 300, 311, 50708, 50708, 257, 1322, 7154, 420, 257, 7154, 1832, 2445, 420, 2035, 309, 815, 312, 293, 370, 1105, 370, 483, 13437, 26173, 51068, 51068, 291, 483, 439, 341, 1412, 293, 550, 291, 291, 976, 309, 257, 17436, 22395, 361, 3015, 2657, 293, 300, 311, 264, 1412, 300, 51468, 51468, 2170, 2279, 281, 264, 3028, 370, 498, 291, 1415, 281, 7472, 484, 1412, 291, 727, 360, 2035, 3997, 589, 291, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.07078825298108553, "compression_ratio": 1.8509615384615385, "no_caption_prob": 5.22492264281027e-05}, {"id": 544, "seek": 356108, "start": 3575.16, "end": 3583.16, "text": " you get all this data and then you you give it a serializable json object and that's the data that", "tokens": [50364, 516, 281, 1190, 322, 264, 6423, 293, 483, 13437, 26173, 307, 516, 281, 312, 1190, 322, 264, 7154, 420, 1968, 300, 311, 50708, 50708, 257, 1322, 7154, 420, 257, 7154, 1832, 2445, 420, 2035, 309, 815, 312, 293, 370, 1105, 370, 483, 13437, 26173, 51068, 51068, 291, 483, 439, 341, 1412, 293, 550, 291, 291, 976, 309, 257, 17436, 22395, 361, 3015, 2657, 293, 300, 311, 264, 1412, 300, 51468, 51468, 2170, 2279, 281, 264, 3028, 370, 498, 291, 1415, 281, 7472, 484, 1412, 291, 727, 360, 2035, 3997, 589, 291, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.07078825298108553, "compression_ratio": 1.8509615384615385, "no_caption_prob": 5.22492264281027e-05}, {"id": 545, "seek": 356108, "start": 3583.16, "end": 3589.3199999999997, "text": " gets sent to the page so if you wanted to split out data you could do whatever complex work you", "tokens": [50364, 516, 281, 1190, 322, 264, 6423, 293, 483, 13437, 26173, 307, 516, 281, 312, 1190, 322, 264, 7154, 420, 1968, 300, 311, 50708, 50708, 257, 1322, 7154, 420, 257, 7154, 1832, 2445, 420, 2035, 309, 815, 312, 293, 370, 1105, 370, 483, 13437, 26173, 51068, 51068, 291, 483, 439, 341, 1412, 293, 550, 291, 291, 976, 309, 257, 17436, 22395, 361, 3015, 2657, 293, 300, 311, 264, 1412, 300, 51468, 51468, 2170, 2279, 281, 264, 3028, 370, 498, 291, 1415, 281, 7472, 484, 1412, 291, 727, 360, 2035, 3997, 589, 291, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.07078825298108553, "compression_ratio": 1.8509615384615385, "no_caption_prob": 5.22492264281027e-05}, {"id": 546, "seek": 358932, "start": 3589.32, "end": 3596.44, "text": " wanted to to do http requests and read files and then you could just say oh here's this prop the", "tokens": [50364, 1415, 281, 281, 360, 37428, 12475, 293, 1401, 7098, 293, 550, 291, 727, 445, 584, 1954, 510, 311, 341, 2365, 264, 50720, 50720, 1230, 295, 6968, 12300, 307, 23777, 457, 291, 727, 445, 584, 6968, 2183, 1207, 8255, 23777, 586, 300, 311, 264, 51060, 51060, 1412, 300, 3110, 493, 322, 264, 6423, 24438, 558, 1338, 309, 1177, 380, 1871, 2035, 661, 1412, 1361, 51316, 51316, 949, 300, 365, 264, 1412, 4009, 1882, 72, 293, 806, 76, 7183, 309, 311, 767, 5145, 2837, 295, 437, 1412, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.08791792258787691, "compression_ratio": 1.709090909090909, "no_caption_prob": 0.0001253267255378887}, {"id": 547, "seek": 358932, "start": 3596.44, "end": 3603.2400000000002, "text": " number of blog posts is 5000 but you could just say blog post count colon 5000 now that's the", "tokens": [50364, 1415, 281, 281, 360, 37428, 12475, 293, 1401, 7098, 293, 550, 291, 727, 445, 584, 1954, 510, 311, 341, 2365, 264, 50720, 50720, 1230, 295, 6968, 12300, 307, 23777, 457, 291, 727, 445, 584, 6968, 2183, 1207, 8255, 23777, 586, 300, 311, 264, 51060, 51060, 1412, 300, 3110, 493, 322, 264, 6423, 24438, 558, 1338, 309, 1177, 380, 1871, 2035, 661, 1412, 1361, 51316, 51316, 949, 300, 365, 264, 1412, 4009, 1882, 72, 293, 806, 76, 7183, 309, 311, 767, 5145, 2837, 295, 437, 1412, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.08791792258787691, "compression_ratio": 1.709090909090909, "no_caption_prob": 0.0001253267255378887}, {"id": 548, "seek": 358932, "start": 3603.2400000000002, "end": 3608.36, "text": " data that shows up on the client bundle right yeah it doesn't matter whatever other data came", "tokens": [50364, 1415, 281, 281, 360, 37428, 12475, 293, 1401, 7098, 293, 550, 291, 727, 445, 584, 1954, 510, 311, 341, 2365, 264, 50720, 50720, 1230, 295, 6968, 12300, 307, 23777, 457, 291, 727, 445, 584, 6968, 2183, 1207, 8255, 23777, 586, 300, 311, 264, 51060, 51060, 1412, 300, 3110, 493, 322, 264, 6423, 24438, 558, 1338, 309, 1177, 380, 1871, 2035, 661, 1412, 1361, 51316, 51316, 949, 300, 365, 264, 1412, 4009, 1882, 72, 293, 806, 76, 7183, 309, 311, 767, 5145, 2837, 295, 437, 1412, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.08791792258787691, "compression_ratio": 1.709090909090909, "no_caption_prob": 0.0001253267255378887}, {"id": 549, "seek": 358932, "start": 3608.36, "end": 3616.04, "text": " before that with the data source api and elm pages it's actually keeping track of what data", "tokens": [50364, 1415, 281, 281, 360, 37428, 12475, 293, 1401, 7098, 293, 550, 291, 727, 445, 584, 1954, 510, 311, 341, 2365, 264, 50720, 50720, 1230, 295, 6968, 12300, 307, 23777, 457, 291, 727, 445, 584, 6968, 2183, 1207, 8255, 23777, 586, 300, 311, 264, 51060, 51060, 1412, 300, 3110, 493, 322, 264, 6423, 24438, 558, 1338, 309, 1177, 380, 1871, 2035, 661, 1412, 1361, 51316, 51316, 949, 300, 365, 264, 1412, 4009, 1882, 72, 293, 806, 76, 7183, 309, 311, 767, 5145, 2837, 295, 437, 1412, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.08791792258787691, "compression_ratio": 1.709090909090909, "no_caption_prob": 0.0001253267255378887}, {"id": 550, "seek": 361604, "start": 3616.04, "end": 3621.72, "text": " you depended on and just pulling in that data for all your data sources for that page right", "tokens": [50364, 291, 1367, 3502, 322, 293, 445, 8407, 294, 300, 1412, 337, 439, 428, 1412, 7139, 337, 300, 3028, 558, 50648, 50676, 1338, 293, 309, 8137, 309, 666, 264, 361, 3015, 3991, 558, 2293, 19842, 760, 257, 857, 457, 309, 19842, 309, 760, 50972, 50972, 2293, 370, 498, 291, 366, 5413, 322, 512, 361, 3015, 7909, 293, 406, 2357, 309, 311, 516, 281, 747, 1127, 295, 51256, 51256, 787, 1419, 264, 1412, 291, 5672, 322, 294, 264, 24438, 597, 307, 869, 457, 2171, 498, 291, 528, 281, 1207, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.08628799103118562, "compression_ratio": 1.7867298578199051, "no_caption_prob": 1.952552338480018e-05}, {"id": 551, "seek": 361604, "start": 3622.2799999999997, "end": 3628.2, "text": " yeah and it puts it into the json file right exactly strips down a bit but it strips it down", "tokens": [50364, 291, 1367, 3502, 322, 293, 445, 8407, 294, 300, 1412, 337, 439, 428, 1412, 7139, 337, 300, 3028, 558, 50648, 50676, 1338, 293, 309, 8137, 309, 666, 264, 361, 3015, 3991, 558, 2293, 19842, 760, 257, 857, 457, 309, 19842, 309, 760, 50972, 50972, 2293, 370, 498, 291, 366, 5413, 322, 512, 361, 3015, 7909, 293, 406, 2357, 309, 311, 516, 281, 747, 1127, 295, 51256, 51256, 787, 1419, 264, 1412, 291, 5672, 322, 294, 264, 24438, 597, 307, 869, 457, 2171, 498, 291, 528, 281, 1207, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.08628799103118562, "compression_ratio": 1.7867298578199051, "no_caption_prob": 1.952552338480018e-05}, {"id": 552, "seek": 361604, "start": 3628.2, "end": 3633.88, "text": " exactly so if you are depending on some json fields and not others it's going to take care of", "tokens": [50364, 291, 1367, 3502, 322, 293, 445, 8407, 294, 300, 1412, 337, 439, 428, 1412, 7139, 337, 300, 3028, 558, 50648, 50676, 1338, 293, 309, 8137, 309, 666, 264, 361, 3015, 3991, 558, 2293, 19842, 760, 257, 857, 457, 309, 19842, 309, 760, 50972, 50972, 2293, 370, 498, 291, 366, 5413, 322, 512, 361, 3015, 7909, 293, 406, 2357, 309, 311, 516, 281, 747, 1127, 295, 51256, 51256, 787, 1419, 264, 1412, 291, 5672, 322, 294, 264, 24438, 597, 307, 869, 457, 2171, 498, 291, 528, 281, 1207, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.08628799103118562, "compression_ratio": 1.7867298578199051, "no_caption_prob": 1.952552338480018e-05}, {"id": 553, "seek": 361604, "start": 3633.88, "end": 3641.4, "text": " only having the data you depend on in the bundle which is great but sometimes if you want to count", "tokens": [50364, 291, 1367, 3502, 322, 293, 445, 8407, 294, 300, 1412, 337, 439, 428, 1412, 7139, 337, 300, 3028, 558, 50648, 50676, 1338, 293, 309, 8137, 309, 666, 264, 361, 3015, 3991, 558, 2293, 19842, 760, 257, 857, 457, 309, 19842, 309, 760, 50972, 50972, 2293, 370, 498, 291, 366, 5413, 322, 512, 361, 3015, 7909, 293, 406, 2357, 309, 311, 516, 281, 747, 1127, 295, 51256, 51256, 787, 1419, 264, 1412, 291, 5672, 322, 294, 264, 24438, 597, 307, 869, 457, 2171, 498, 291, 528, 281, 1207, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.08628799103118562, "compression_ratio": 1.7867298578199051, "no_caption_prob": 1.952552338480018e-05}, {"id": 554, "seek": 364140, "start": 3641.4, "end": 3647.7200000000003, "text": " count count the number of posts you don't want all of that data so there are many many cases", "tokens": [50364, 1207, 1207, 264, 1230, 295, 12300, 291, 500, 380, 528, 439, 295, 300, 1412, 370, 456, 366, 867, 867, 3331, 50680, 50680, 689, 689, 291, 1062, 528, 341, 291, 458, 741, 741, 600, 668, 1105, 2390, 411, 257, 4562, 7431, 337, 2059, 51004, 51044, 300, 4960, 646, 15400, 293, 370, 264, 646, 15400, 2837, 633, 2167, 2232, 633, 2167, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.06496704192388625, "compression_ratio": 1.7267080745341614, "no_caption_prob": 3.169160117977299e-05}, {"id": 555, "seek": 364140, "start": 3647.7200000000003, "end": 3654.2000000000003, "text": " where where you might want this you know i i've been um building like a digital garden for myself", "tokens": [50364, 1207, 1207, 264, 1230, 295, 12300, 291, 500, 380, 528, 439, 295, 300, 1412, 370, 456, 366, 867, 867, 3331, 50680, 50680, 689, 689, 291, 1062, 528, 341, 291, 458, 741, 741, 600, 668, 1105, 2390, 411, 257, 4562, 7431, 337, 2059, 51004, 51044, 300, 4960, 646, 15400, 293, 370, 264, 646, 15400, 2837, 633, 2167, 2232, 633, 2167, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.06496704192388625, "compression_ratio": 1.7267080745341614, "no_caption_prob": 3.169160117977299e-05}, {"id": 556, "seek": 364140, "start": 3655.0, "end": 3663.88, "text": " that uses back references and so the back references track every single uh every single", "tokens": [50364, 1207, 1207, 264, 1230, 295, 12300, 291, 500, 380, 528, 439, 295, 300, 1412, 370, 456, 366, 867, 867, 3331, 50680, 50680, 689, 689, 291, 1062, 528, 341, 291, 458, 741, 741, 600, 668, 1105, 2390, 411, 257, 4562, 7431, 337, 2059, 51004, 51044, 300, 4960, 646, 15400, 293, 370, 264, 646, 15400, 2837, 633, 2167, 2232, 633, 2167, 51488, 51488], "temperature": 0.0, "avg_logprob": -0.06496704192388625, "compression_ratio": 1.7267080745341614, "no_caption_prob": 3.169160117977299e-05}, {"id": 557, "seek": 366388, "start": 3663.88, "end": 3671.8, "text": " post that refers back to the current post and so you know that can now that what that means", "tokens": [50364, 2183, 300, 14942, 646, 281, 264, 2190, 2183, 293, 370, 291, 458, 300, 393, 586, 300, 437, 300, 1355, 50760, 50760, 307, 300, 309, 311, 411, 257, 309, 311, 411, 257, 16125, 1412, 4009, 281, 1329, 484, 439, 264, 12300, 293, 550, 309, 311, 257, 1524, 51104, 51104, 493, 291, 458, 1412, 4009, 5893, 293, 550, 337, 1184, 295, 729, 2232, 360, 257, 1412, 4009, 5893, 3991, 5893, 293, 550, 51408, 51408, 1401, 264, 3991, 498, 741, 645, 281, 445, 718, 300, 1412, 2232, 855, 493, 294, 264, 24438, 550, 309, 576, 312, 8407, 294, 51720, 51748], "temperature": 0.0, "avg_logprob": -0.03763950713957199, "compression_ratio": 1.9642857142857142, "no_caption_prob": 6.4388996179332025e-06}, {"id": 558, "seek": 366388, "start": 3671.8, "end": 3678.6800000000003, "text": " is that it's like a it's like a glob data source to list out all the posts and then it's a follow", "tokens": [50364, 2183, 300, 14942, 646, 281, 264, 2190, 2183, 293, 370, 291, 458, 300, 393, 586, 300, 437, 300, 1355, 50760, 50760, 307, 300, 309, 311, 411, 257, 309, 311, 411, 257, 16125, 1412, 4009, 281, 1329, 484, 439, 264, 12300, 293, 550, 309, 311, 257, 1524, 51104, 51104, 493, 291, 458, 1412, 4009, 5893, 293, 550, 337, 1184, 295, 729, 2232, 360, 257, 1412, 4009, 5893, 3991, 5893, 293, 550, 51408, 51408, 1401, 264, 3991, 498, 741, 645, 281, 445, 718, 300, 1412, 2232, 855, 493, 294, 264, 24438, 550, 309, 576, 312, 8407, 294, 51720, 51748], "temperature": 0.0, "avg_logprob": -0.03763950713957199, "compression_ratio": 1.9642857142857142, "no_caption_prob": 6.4388996179332025e-06}, {"id": 559, "seek": 366388, "start": 3678.6800000000003, "end": 3684.76, "text": " up you know data source dot and then for each of those uh do a data source dot file dot and then", "tokens": [50364, 2183, 300, 14942, 646, 281, 264, 2190, 2183, 293, 370, 291, 458, 300, 393, 586, 300, 437, 300, 1355, 50760, 50760, 307, 300, 309, 311, 411, 257, 309, 311, 411, 257, 16125, 1412, 4009, 281, 1329, 484, 439, 264, 12300, 293, 550, 309, 311, 257, 1524, 51104, 51104, 493, 291, 458, 1412, 4009, 5893, 293, 550, 337, 1184, 295, 729, 2232, 360, 257, 1412, 4009, 5893, 3991, 5893, 293, 550, 51408, 51408, 1401, 264, 3991, 498, 741, 645, 281, 445, 718, 300, 1412, 2232, 855, 493, 294, 264, 24438, 550, 309, 576, 312, 8407, 294, 51720, 51748], "temperature": 0.0, "avg_logprob": -0.03763950713957199, "compression_ratio": 1.9642857142857142, "no_caption_prob": 6.4388996179332025e-06}, {"id": 560, "seek": 366388, "start": 3684.76, "end": 3691.0, "text": " read the file if i were to just let that data uh show up in the bundle then it would be pulling in", "tokens": [50364, 2183, 300, 14942, 646, 281, 264, 2190, 2183, 293, 370, 291, 458, 300, 393, 586, 300, 437, 300, 1355, 50760, 50760, 307, 300, 309, 311, 411, 257, 309, 311, 411, 257, 16125, 1412, 4009, 281, 1329, 484, 439, 264, 12300, 293, 550, 309, 311, 257, 1524, 51104, 51104, 493, 291, 458, 1412, 4009, 5893, 293, 550, 337, 1184, 295, 729, 2232, 360, 257, 1412, 4009, 5893, 3991, 5893, 293, 550, 51408, 51408, 1401, 264, 3991, 498, 741, 645, 281, 445, 718, 300, 1412, 2232, 855, 493, 294, 264, 24438, 550, 309, 576, 312, 8407, 294, 51720, 51748], "temperature": 0.0, "avg_logprob": -0.03763950713957199, "compression_ratio": 1.9642857142857142, "no_caption_prob": 6.4388996179332025e-06}, {"id": 561, "seek": 369100, "start": 3691.0, "end": 3696.84, "text": " 50 plus pages of markdown files or however large the the number of files grows to which is not good", "tokens": [50364, 2625, 1804, 7183, 295, 1491, 5093, 7098, 420, 4461, 2416, 264, 264, 1230, 295, 7098, 13156, 281, 597, 307, 406, 665, 50656, 50656, 293, 309, 311, 406, 406, 2978, 570, 439, 741, 643, 307, 741, 643, 281, 458, 337, 1184, 3028, 775, 309, 2864, 646, 281, 50996, 50996, 341, 3028, 420, 767, 741, 500, 380, 754, 643, 281, 458, 300, 741, 445, 643, 257, 1329, 295, 7183, 300, 2864, 646, 51212, 51212, 370, 309, 727, 312, 1045, 1045, 13985, 257, 1329, 295, 1045, 13985, 2831, 813, 2625, 1491, 5093, 7098, 365, 439, 295, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0899501977507601, "compression_ratio": 1.8497652582159625, "no_caption_prob": 2.753522312559653e-05}, {"id": 562, "seek": 369100, "start": 3696.84, "end": 3703.64, "text": " and it's not not needed because all i need is i need to know for each page does it refer back to", "tokens": [50364, 2625, 1804, 7183, 295, 1491, 5093, 7098, 420, 4461, 2416, 264, 264, 1230, 295, 7098, 13156, 281, 597, 307, 406, 665, 50656, 50656, 293, 309, 311, 406, 406, 2978, 570, 439, 741, 643, 307, 741, 643, 281, 458, 337, 1184, 3028, 775, 309, 2864, 646, 281, 50996, 50996, 341, 3028, 420, 767, 741, 500, 380, 754, 643, 281, 458, 300, 741, 445, 643, 257, 1329, 295, 7183, 300, 2864, 646, 51212, 51212, 370, 309, 727, 312, 1045, 1045, 13985, 257, 1329, 295, 1045, 13985, 2831, 813, 2625, 1491, 5093, 7098, 365, 439, 295, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0899501977507601, "compression_ratio": 1.8497652582159625, "no_caption_prob": 2.753522312559653e-05}, {"id": 563, "seek": 369100, "start": 3703.64, "end": 3707.96, "text": " this page or actually i don't even need to know that i just need a list of pages that refer back", "tokens": [50364, 2625, 1804, 7183, 295, 1491, 5093, 7098, 420, 4461, 2416, 264, 264, 1230, 295, 7098, 13156, 281, 597, 307, 406, 665, 50656, 50656, 293, 309, 311, 406, 406, 2978, 570, 439, 741, 643, 307, 741, 643, 281, 458, 337, 1184, 3028, 775, 309, 2864, 646, 281, 50996, 50996, 341, 3028, 420, 767, 741, 500, 380, 754, 643, 281, 458, 300, 741, 445, 643, 257, 1329, 295, 7183, 300, 2864, 646, 51212, 51212, 370, 309, 727, 312, 1045, 1045, 13985, 257, 1329, 295, 1045, 13985, 2831, 813, 2625, 1491, 5093, 7098, 365, 439, 295, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0899501977507601, "compression_ratio": 1.8497652582159625, "no_caption_prob": 2.753522312559653e-05}, {"id": 564, "seek": 369100, "start": 3707.96, "end": 3715.72, "text": " so it could be three three strings a list of three strings rather than 50 markdown files with all of", "tokens": [50364, 2625, 1804, 7183, 295, 1491, 5093, 7098, 420, 4461, 2416, 264, 264, 1230, 295, 7098, 13156, 281, 597, 307, 406, 665, 50656, 50656, 293, 309, 311, 406, 406, 2978, 570, 439, 741, 643, 307, 741, 643, 281, 458, 337, 1184, 3028, 775, 309, 2864, 646, 281, 50996, 50996, 341, 3028, 420, 767, 741, 500, 380, 754, 643, 281, 458, 300, 741, 445, 643, 257, 1329, 295, 7183, 300, 2864, 646, 51212, 51212, 370, 309, 727, 312, 1045, 1045, 13985, 257, 1329, 295, 1045, 13985, 2831, 813, 2625, 1491, 5093, 7098, 365, 439, 295, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.0899501977507601, "compression_ratio": 1.8497652582159625, "no_caption_prob": 2.753522312559653e-05}, {"id": 565, "seek": 371572, "start": 3715.72, "end": 3723.24, "text": " their contents so with the distil api that's that's what that's for and it's the distil api", "tokens": [50364, 641, 15768, 370, 365, 264, 1483, 388, 1882, 72, 300, 311, 300, 311, 437, 300, 311, 337, 293, 309, 311, 264, 1483, 388, 1882, 72, 50740, 50776, 6653, 291, 589, 294, 544, 295, 341, 636, 300, 300, 411, 958, 42713, 483, 13437, 26173, 1985, 689, 291, 445, 584, 51132, 51132, 510, 311, 264, 1412, 652, 988, 341, 1412, 307, 456, 337, 264, 3028, 281, 15529, 365, 293, 370, 42923, 370, 741, 1027, 51468, 51468, 411, 257, 1916, 295, 42923, 854, 433, 42923, 3089, 66, 293, 42923, 17436, 1125, 3089, 66, 293, 729, 366, 337, 2232, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15151741528751875, "compression_ratio": 1.900990099009901, "no_caption_prob": 6.013685560901649e-05}, {"id": 566, "seek": 371572, "start": 3723.9599999999996, "end": 3731.08, "text": " lets you work in more of this way that that like next js get static props works where you just say", "tokens": [50364, 641, 15768, 370, 365, 264, 1483, 388, 1882, 72, 300, 311, 300, 311, 437, 300, 311, 337, 293, 309, 311, 264, 1483, 388, 1882, 72, 50740, 50776, 6653, 291, 589, 294, 544, 295, 341, 636, 300, 300, 411, 958, 42713, 483, 13437, 26173, 1985, 689, 291, 445, 584, 51132, 51132, 510, 311, 264, 1412, 652, 988, 341, 1412, 307, 456, 337, 264, 3028, 281, 15529, 365, 293, 370, 42923, 370, 741, 1027, 51468, 51468, 411, 257, 1916, 295, 42923, 854, 433, 42923, 3089, 66, 293, 42923, 17436, 1125, 3089, 66, 293, 729, 366, 337, 2232, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15151741528751875, "compression_ratio": 1.900990099009901, "no_caption_prob": 6.013685560901649e-05}, {"id": 567, "seek": 371572, "start": 3731.08, "end": 3737.7999999999997, "text": " here's the data make sure this data is there for the page to render with and so distill so i made", "tokens": [50364, 641, 15768, 370, 365, 264, 1483, 388, 1882, 72, 300, 311, 300, 311, 437, 300, 311, 337, 293, 309, 311, 264, 1483, 388, 1882, 72, 50740, 50776, 6653, 291, 589, 294, 544, 295, 341, 636, 300, 300, 411, 958, 42713, 483, 13437, 26173, 1985, 689, 291, 445, 584, 51132, 51132, 510, 311, 264, 1412, 652, 988, 341, 1412, 307, 456, 337, 264, 3028, 281, 15529, 365, 293, 370, 42923, 370, 741, 1027, 51468, 51468, 411, 257, 1916, 295, 42923, 854, 433, 42923, 3089, 66, 293, 42923, 17436, 1125, 3089, 66, 293, 729, 366, 337, 2232, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15151741528751875, "compression_ratio": 1.900990099009901, "no_caption_prob": 6.013685560901649e-05}, {"id": 568, "seek": 371572, "start": 3737.7999999999997, "end": 3745.24, "text": " like a couple of distill helpers distill codec and distill serialize codec and those are for uh", "tokens": [50364, 641, 15768, 370, 365, 264, 1483, 388, 1882, 72, 300, 311, 300, 311, 437, 300, 311, 337, 293, 309, 311, 264, 1483, 388, 1882, 72, 50740, 50776, 6653, 291, 589, 294, 544, 295, 341, 636, 300, 300, 411, 958, 42713, 483, 13437, 26173, 1985, 689, 291, 445, 584, 51132, 51132, 510, 311, 264, 1412, 652, 988, 341, 1412, 307, 456, 337, 264, 3028, 281, 15529, 365, 293, 370, 42923, 370, 741, 1027, 51468, 51468, 411, 257, 1916, 295, 42923, 854, 433, 42923, 3089, 66, 293, 42923, 17436, 1125, 3089, 66, 293, 729, 366, 337, 2232, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.15151741528751875, "compression_ratio": 1.900990099009901, "no_caption_prob": 6.013685560901649e-05}, {"id": 569, "seek": 374524, "start": 3745.24, "end": 3753.72, "text": " mini bills codec package and the siri and martin stewart's serialize package elm serialize and you", "tokens": [50364, 8382, 12433, 3089, 66, 7372, 293, 264, 4735, 72, 293, 12396, 259, 22654, 446, 311, 17436, 1125, 7372, 806, 76, 17436, 1125, 293, 291, 50788, 50788, 458, 264, 264, 1778, 436, 434, 3089, 14368, 307, 570, 264, 636, 281, 920, 1985, 307, 291, 643, 281, 2924, 264, 1412, 51140, 51140, 4009, 577, 281, 1261, 300, 666, 512, 361, 3015, 300, 309, 311, 516, 281, 4090, 294, 264, 361, 3015, 337, 300, 3028, 370, 291, 51428, 51428, 643, 281, 2058, 1429, 309, 291, 643, 281, 2924, 309, 577, 281, 2058, 1429, 309, 281, 829, 309, 666, 264, 361, 3015, 3991, 293, 291, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.12438626970563615, "compression_ratio": 1.935323383084577, "no_caption_prob": 2.7968415452050976e-05}, {"id": 570, "seek": 374524, "start": 3753.72, "end": 3760.7599999999998, "text": " know the the reason they're codecs is because the way to still works is you need to teach the data", "tokens": [50364, 8382, 12433, 3089, 66, 7372, 293, 264, 4735, 72, 293, 12396, 259, 22654, 446, 311, 17436, 1125, 7372, 806, 76, 17436, 1125, 293, 291, 50788, 50788, 458, 264, 264, 1778, 436, 434, 3089, 14368, 307, 570, 264, 636, 281, 920, 1985, 307, 291, 643, 281, 2924, 264, 1412, 51140, 51140, 4009, 577, 281, 1261, 300, 666, 512, 361, 3015, 300, 309, 311, 516, 281, 4090, 294, 264, 361, 3015, 337, 300, 3028, 370, 291, 51428, 51428, 643, 281, 2058, 1429, 309, 291, 643, 281, 2924, 309, 577, 281, 2058, 1429, 309, 281, 829, 309, 666, 264, 361, 3015, 3991, 293, 291, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.12438626970563615, "compression_ratio": 1.935323383084577, "no_caption_prob": 2.7968415452050976e-05}, {"id": 571, "seek": 374524, "start": 3760.7599999999998, "end": 3766.52, "text": " source how to turn that into some json that it's going to include in the json for that page so you", "tokens": [50364, 8382, 12433, 3089, 66, 7372, 293, 264, 4735, 72, 293, 12396, 259, 22654, 446, 311, 17436, 1125, 7372, 806, 76, 17436, 1125, 293, 291, 50788, 50788, 458, 264, 264, 1778, 436, 434, 3089, 14368, 307, 570, 264, 636, 281, 920, 1985, 307, 291, 643, 281, 2924, 264, 1412, 51140, 51140, 4009, 577, 281, 1261, 300, 666, 512, 361, 3015, 300, 309, 311, 516, 281, 4090, 294, 264, 361, 3015, 337, 300, 3028, 370, 291, 51428, 51428, 643, 281, 2058, 1429, 309, 291, 643, 281, 2924, 309, 577, 281, 2058, 1429, 309, 281, 829, 309, 666, 264, 361, 3015, 3991, 293, 291, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.12438626970563615, "compression_ratio": 1.935323383084577, "no_caption_prob": 2.7968415452050976e-05}, {"id": 572, "seek": 374524, "start": 3766.52, "end": 3771.08, "text": " need to encode it you need to teach it how to encode it to put it into the json file and you", "tokens": [50364, 8382, 12433, 3089, 66, 7372, 293, 264, 4735, 72, 293, 12396, 259, 22654, 446, 311, 17436, 1125, 7372, 806, 76, 17436, 1125, 293, 291, 50788, 50788, 458, 264, 264, 1778, 436, 434, 3089, 14368, 307, 570, 264, 636, 281, 920, 1985, 307, 291, 643, 281, 2924, 264, 1412, 51140, 51140, 4009, 577, 281, 1261, 300, 666, 512, 361, 3015, 300, 309, 311, 516, 281, 4090, 294, 264, 361, 3015, 337, 300, 3028, 370, 291, 51428, 51428, 643, 281, 2058, 1429, 309, 291, 643, 281, 2924, 309, 577, 281, 2058, 1429, 309, 281, 829, 309, 666, 264, 361, 3015, 3991, 293, 291, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.12438626970563615, "compression_ratio": 1.935323383084577, "no_caption_prob": 2.7968415452050976e-05}, {"id": 573, "seek": 377108, "start": 3771.08, "end": 3775.4, "text": " need to teach it how to decode it to take it out of the json file it turns out codecs are really", "tokens": [50364, 643, 281, 2924, 309, 577, 281, 979, 1429, 309, 281, 747, 309, 484, 295, 264, 361, 3015, 3991, 309, 4523, 484, 3089, 14368, 366, 534, 50580, 50580, 665, 337, 300, 4878, 767, 309, 1177, 380, 534, 1871, 570, 309, 311, 1009, 516, 281, 2058, 1429, 309, 293, 50976, 50976, 1190, 264, 979, 19866, 370, 291, 434, 767, 1128, 1242, 264, 1412, 949, 309, 1437, 807, 264, 2058, 1429, 979, 1429, 51308, 51308, 6586, 370, 498, 291, 630, 309, 294, 257, 2107, 44788, 3089, 66, 6700, 309, 767, 1177, 380, 1871, 570, 291, 434, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.06608208430182073, "compression_ratio": 1.8497652582159625, "no_caption_prob": 4.98577173857484e-05}, {"id": 574, "seek": 377108, "start": 3775.4, "end": 3783.3199999999997, "text": " good for that although actually it doesn't really matter because it's always going to encode it and", "tokens": [50364, 643, 281, 2924, 309, 577, 281, 979, 1429, 309, 281, 747, 309, 484, 295, 264, 361, 3015, 3991, 309, 4523, 484, 3089, 14368, 366, 534, 50580, 50580, 665, 337, 300, 4878, 767, 309, 1177, 380, 534, 1871, 570, 309, 311, 1009, 516, 281, 2058, 1429, 309, 293, 50976, 50976, 1190, 264, 979, 19866, 370, 291, 434, 767, 1128, 1242, 264, 1412, 949, 309, 1437, 807, 264, 2058, 1429, 979, 1429, 51308, 51308, 6586, 370, 498, 291, 630, 309, 294, 257, 2107, 44788, 3089, 66, 6700, 309, 767, 1177, 380, 1871, 570, 291, 434, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.06608208430182073, "compression_ratio": 1.8497652582159625, "no_caption_prob": 4.98577173857484e-05}, {"id": 575, "seek": 377108, "start": 3783.3199999999997, "end": 3789.96, "text": " run the decoder so you're actually never getting the data before it went through the encode decode", "tokens": [50364, 643, 281, 2924, 309, 577, 281, 979, 1429, 309, 281, 747, 309, 484, 295, 264, 361, 3015, 3991, 309, 4523, 484, 3089, 14368, 366, 534, 50580, 50580, 665, 337, 300, 4878, 767, 309, 1177, 380, 534, 1871, 570, 309, 311, 1009, 516, 281, 2058, 1429, 309, 293, 50976, 50976, 1190, 264, 979, 19866, 370, 291, 434, 767, 1128, 1242, 264, 1412, 949, 309, 1437, 807, 264, 2058, 1429, 979, 1429, 51308, 51308, 6586, 370, 498, 291, 630, 309, 294, 257, 2107, 44788, 3089, 66, 6700, 309, 767, 1177, 380, 1871, 570, 291, 434, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.06608208430182073, "compression_ratio": 1.8497652582159625, "no_caption_prob": 4.98577173857484e-05}, {"id": 576, "seek": 377108, "start": 3789.96, "end": 3795.96, "text": " cycle so if you did it in a non reversible codec fashion it actually doesn't matter because you're", "tokens": [50364, 643, 281, 2924, 309, 577, 281, 979, 1429, 309, 281, 747, 309, 484, 295, 264, 361, 3015, 3991, 309, 4523, 484, 3089, 14368, 366, 534, 50580, 50580, 665, 337, 300, 4878, 767, 309, 1177, 380, 534, 1871, 570, 309, 311, 1009, 516, 281, 2058, 1429, 309, 293, 50976, 50976, 1190, 264, 979, 19866, 370, 291, 434, 767, 1128, 1242, 264, 1412, 949, 309, 1437, 807, 264, 2058, 1429, 979, 1429, 51308, 51308, 6586, 370, 498, 291, 630, 309, 294, 257, 2107, 44788, 3089, 66, 6700, 309, 767, 1177, 380, 1871, 570, 291, 434, 51608, 51608], "temperature": 0.0, "avg_logprob": -0.06608208430182073, "compression_ratio": 1.8497652582159625, "no_caption_prob": 4.98577173857484e-05}, {"id": 577, "seek": 379596, "start": 3795.96, "end": 3801.2400000000002, "text": " you're not going to see the data without being encoded and decoded whether it's in the dev server", "tokens": [50364, 291, 434, 406, 516, 281, 536, 264, 1412, 1553, 885, 2058, 12340, 293, 979, 12340, 1968, 309, 311, 294, 264, 1905, 7154, 50628, 50628, 420, 264, 1322, 420, 2035, 300, 311, 1391, 437, 291, 528, 294, 881, 3331, 370, 1105, 457, 291, 393, 445, 764, 264, 50884, 50884, 2295, 1496, 42923, 498, 291, 528, 281, 2893, 257, 2445, 281, 2058, 1429, 264, 361, 3015, 293, 257, 2445, 281, 979, 1429, 281, 51144, 51144, 361, 3015, 337, 2035, 1778, 457, 472, 534, 1627, 551, 466, 42923, 307, 300, 370, 337, 472, 551, 2232, 51432, 51432, 291, 458, 498, 291, 1415, 281, 483, 300, 1329, 295, 646, 15400, 291, 727, 360, 291, 458, 42923, 3089, 66, 420, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.08043758809065618, "compression_ratio": 1.9325396825396826, "no_caption_prob": 7.141233800211921e-05}, {"id": 578, "seek": 379596, "start": 3801.2400000000002, "end": 3806.36, "text": " or the build or whatever that's probably what you want in most cases so um but you can just use the", "tokens": [50364, 291, 434, 406, 516, 281, 536, 264, 1412, 1553, 885, 2058, 12340, 293, 979, 12340, 1968, 309, 311, 294, 264, 1905, 7154, 50628, 50628, 420, 264, 1322, 420, 2035, 300, 311, 1391, 437, 291, 528, 294, 881, 3331, 370, 1105, 457, 291, 393, 445, 764, 264, 50884, 50884, 2295, 1496, 42923, 498, 291, 528, 281, 2893, 257, 2445, 281, 2058, 1429, 264, 361, 3015, 293, 257, 2445, 281, 979, 1429, 281, 51144, 51144, 361, 3015, 337, 2035, 1778, 457, 472, 534, 1627, 551, 466, 42923, 307, 300, 370, 337, 472, 551, 2232, 51432, 51432, 291, 458, 498, 291, 1415, 281, 483, 300, 1329, 295, 646, 15400, 291, 727, 360, 291, 458, 42923, 3089, 66, 420, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.08043758809065618, "compression_ratio": 1.9325396825396826, "no_caption_prob": 7.141233800211921e-05}, {"id": 579, "seek": 379596, "start": 3806.36, "end": 3811.56, "text": " low level distill if you want to provide a function to encode the json and a function to decode to", "tokens": [50364, 291, 434, 406, 516, 281, 536, 264, 1412, 1553, 885, 2058, 12340, 293, 979, 12340, 1968, 309, 311, 294, 264, 1905, 7154, 50628, 50628, 420, 264, 1322, 420, 2035, 300, 311, 1391, 437, 291, 528, 294, 881, 3331, 370, 1105, 457, 291, 393, 445, 764, 264, 50884, 50884, 2295, 1496, 42923, 498, 291, 528, 281, 2893, 257, 2445, 281, 2058, 1429, 264, 361, 3015, 293, 257, 2445, 281, 979, 1429, 281, 51144, 51144, 361, 3015, 337, 2035, 1778, 457, 472, 534, 1627, 551, 466, 42923, 307, 300, 370, 337, 472, 551, 2232, 51432, 51432, 291, 458, 498, 291, 1415, 281, 483, 300, 1329, 295, 646, 15400, 291, 727, 360, 291, 458, 42923, 3089, 66, 420, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.08043758809065618, "compression_ratio": 1.9325396825396826, "no_caption_prob": 7.141233800211921e-05}, {"id": 580, "seek": 379596, "start": 3811.56, "end": 3817.32, "text": " json for whatever reason but one really cool thing about distill is that so for one thing uh", "tokens": [50364, 291, 434, 406, 516, 281, 536, 264, 1412, 1553, 885, 2058, 12340, 293, 979, 12340, 1968, 309, 311, 294, 264, 1905, 7154, 50628, 50628, 420, 264, 1322, 420, 2035, 300, 311, 1391, 437, 291, 528, 294, 881, 3331, 370, 1105, 457, 291, 393, 445, 764, 264, 50884, 50884, 2295, 1496, 42923, 498, 291, 528, 281, 2893, 257, 2445, 281, 2058, 1429, 264, 361, 3015, 293, 257, 2445, 281, 979, 1429, 281, 51144, 51144, 361, 3015, 337, 2035, 1778, 457, 472, 534, 1627, 551, 466, 42923, 307, 300, 370, 337, 472, 551, 2232, 51432, 51432, 291, 458, 498, 291, 1415, 281, 483, 300, 1329, 295, 646, 15400, 291, 727, 360, 291, 458, 42923, 3089, 66, 420, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.08043758809065618, "compression_ratio": 1.9325396825396826, "no_caption_prob": 7.141233800211921e-05}, {"id": 581, "seek": 379596, "start": 3817.32, "end": 3822.04, "text": " you know if you wanted to get that list of back references you could do you know distill codec or", "tokens": [50364, 291, 434, 406, 516, 281, 536, 264, 1412, 1553, 885, 2058, 12340, 293, 979, 12340, 1968, 309, 311, 294, 264, 1905, 7154, 50628, 50628, 420, 264, 1322, 420, 2035, 300, 311, 1391, 437, 291, 528, 294, 881, 3331, 370, 1105, 457, 291, 393, 445, 764, 264, 50884, 50884, 2295, 1496, 42923, 498, 291, 528, 281, 2893, 257, 2445, 281, 2058, 1429, 264, 361, 3015, 293, 257, 2445, 281, 979, 1429, 281, 51144, 51144, 361, 3015, 337, 2035, 1778, 457, 472, 534, 1627, 551, 466, 42923, 307, 300, 370, 337, 472, 551, 2232, 51432, 51432, 291, 458, 498, 291, 1415, 281, 483, 300, 1329, 295, 646, 15400, 291, 727, 360, 291, 458, 42923, 3089, 66, 420, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.08043758809065618, "compression_ratio": 1.9325396825396826, "no_caption_prob": 7.141233800211921e-05}, {"id": 582, "seek": 382204, "start": 3822.04, "end": 3826.68, "text": " distill serialized code so it's you know data source dot distill codec or data source dot distill", "tokens": [50364, 42923, 17436, 1602, 3089, 370, 309, 311, 291, 458, 1412, 4009, 5893, 42923, 3089, 66, 420, 1412, 4009, 5893, 42923, 50596, 50596, 17436, 1602, 3089, 66, 293, 550, 291, 976, 309, 257, 3845, 2141, 370, 321, 727, 584, 411, 646, 15400, 294, 341, 1389, 50984, 50984, 293, 550, 300, 311, 445, 257, 6798, 293, 550, 321, 976, 309, 257, 3089, 66, 1670, 264, 264, 1412, 4009, 300, 321, 6678, 51340, 51340, 412, 294, 264, 5021, 493, 1826, 341, 935, 390, 257, 1329, 295, 6798, 309, 390, 1412, 4009, 1329, 295, 6798, 550, 321, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09530446947235421, "compression_ratio": 2.0358974358974358, "no_caption_prob": 1.2411271200107876e-05}, {"id": 583, "seek": 382204, "start": 3826.68, "end": 3834.44, "text": " serialized codec and then you give it a unique key so we could say like back references in this case", "tokens": [50364, 42923, 17436, 1602, 3089, 370, 309, 311, 291, 458, 1412, 4009, 5893, 42923, 3089, 66, 420, 1412, 4009, 5893, 42923, 50596, 50596, 17436, 1602, 3089, 66, 293, 550, 291, 976, 309, 257, 3845, 2141, 370, 321, 727, 584, 411, 646, 15400, 294, 341, 1389, 50984, 50984, 293, 550, 300, 311, 445, 257, 6798, 293, 550, 321, 976, 309, 257, 3089, 66, 1670, 264, 264, 1412, 4009, 300, 321, 6678, 51340, 51340, 412, 294, 264, 5021, 493, 1826, 341, 935, 390, 257, 1329, 295, 6798, 309, 390, 1412, 4009, 1329, 295, 6798, 550, 321, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09530446947235421, "compression_ratio": 2.0358974358974358, "no_caption_prob": 1.2411271200107876e-05}, {"id": 584, "seek": 382204, "start": 3834.44, "end": 3841.56, "text": " and then that's just a string and then we give it a codec since the the data source that we arrived", "tokens": [50364, 42923, 17436, 1602, 3089, 370, 309, 311, 291, 458, 1412, 4009, 5893, 42923, 3089, 66, 420, 1412, 4009, 5893, 42923, 50596, 50596, 17436, 1602, 3089, 66, 293, 550, 291, 976, 309, 257, 3845, 2141, 370, 321, 727, 584, 411, 646, 15400, 294, 341, 1389, 50984, 50984, 293, 550, 300, 311, 445, 257, 6798, 293, 550, 321, 976, 309, 257, 3089, 66, 1670, 264, 264, 1412, 4009, 300, 321, 6678, 51340, 51340, 412, 294, 264, 5021, 493, 1826, 341, 935, 390, 257, 1329, 295, 6798, 309, 390, 1412, 4009, 1329, 295, 6798, 550, 321, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09530446947235421, "compression_ratio": 2.0358974358974358, "no_caption_prob": 1.2411271200107876e-05}, {"id": 585, "seek": 382204, "start": 3841.56, "end": 3847.32, "text": " at in the chain up until this point was a list of string it was data source list of string then we", "tokens": [50364, 42923, 17436, 1602, 3089, 370, 309, 311, 291, 458, 1412, 4009, 5893, 42923, 3089, 66, 420, 1412, 4009, 5893, 42923, 50596, 50596, 17436, 1602, 3089, 66, 293, 550, 291, 976, 309, 257, 3845, 2141, 370, 321, 727, 584, 411, 646, 15400, 294, 341, 1389, 50984, 50984, 293, 550, 300, 311, 445, 257, 6798, 293, 550, 321, 976, 309, 257, 3089, 66, 1670, 264, 264, 1412, 4009, 300, 321, 6678, 51340, 51340, 412, 294, 264, 5021, 493, 1826, 341, 935, 390, 257, 1329, 295, 6798, 309, 390, 1412, 4009, 1329, 295, 6798, 550, 321, 51628, 51628], "temperature": 0.0, "avg_logprob": -0.09530446947235421, "compression_ratio": 2.0358974358974358, "no_caption_prob": 1.2411271200107876e-05}, {"id": 586, "seek": 384732, "start": 3847.32, "end": 3853.4, "text": " just need a codec of type list of string so we could just say codec dot list codec dot string", "tokens": [50364, 445, 643, 257, 3089, 66, 295, 2010, 1329, 295, 6798, 370, 321, 727, 445, 584, 3089, 66, 5893, 1329, 3089, 66, 5893, 6798, 50668, 50668, 420, 17436, 1602, 5893, 1329, 17436, 1602, 5893, 6798, 5413, 322, 597, 7372, 291, 528, 281, 764, 456, 50876, 50876, 293, 300, 311, 309, 586, 309, 307, 586, 309, 311, 516, 281, 12828, 760, 445, 300, 1412, 281, 257, 1329, 295, 13985, 370, 498, 51172, 51172, 291, 574, 294, 428, 361, 3015, 337, 300, 3028, 300, 311, 437, 291, 603, 536, 611, 2232, 604, 24903, 300, 1361, 51476, 51476, 949, 300, 307, 406, 10332, 294, 264, 6423, 1252, 294, 264, 11185, 309, 311, 787, 1096, 294, 264, 1322, 1823, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.057819285635220805, "compression_ratio": 1.9146341463414633, "no_caption_prob": 6.10843999311328e-05}, {"id": 587, "seek": 384732, "start": 3853.4, "end": 3857.56, "text": " or serialized dot list serialized dot string depending on which package you want to use there", "tokens": [50364, 445, 643, 257, 3089, 66, 295, 2010, 1329, 295, 6798, 370, 321, 727, 445, 584, 3089, 66, 5893, 1329, 3089, 66, 5893, 6798, 50668, 50668, 420, 17436, 1602, 5893, 1329, 17436, 1602, 5893, 6798, 5413, 322, 597, 7372, 291, 528, 281, 764, 456, 50876, 50876, 293, 300, 311, 309, 586, 309, 307, 586, 309, 311, 516, 281, 12828, 760, 445, 300, 1412, 281, 257, 1329, 295, 13985, 370, 498, 51172, 51172, 291, 574, 294, 428, 361, 3015, 337, 300, 3028, 300, 311, 437, 291, 603, 536, 611, 2232, 604, 24903, 300, 1361, 51476, 51476, 949, 300, 307, 406, 10332, 294, 264, 6423, 1252, 294, 264, 11185, 309, 311, 787, 1096, 294, 264, 1322, 1823, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.057819285635220805, "compression_ratio": 1.9146341463414633, "no_caption_prob": 6.10843999311328e-05}, {"id": 588, "seek": 384732, "start": 3857.56, "end": 3863.48, "text": " and that's it now it is now it's going to strip down just that data to a list of strings so if", "tokens": [50364, 445, 643, 257, 3089, 66, 295, 2010, 1329, 295, 6798, 370, 321, 727, 445, 584, 3089, 66, 5893, 1329, 3089, 66, 5893, 6798, 50668, 50668, 420, 17436, 1602, 5893, 1329, 17436, 1602, 5893, 6798, 5413, 322, 597, 7372, 291, 528, 281, 764, 456, 50876, 50876, 293, 300, 311, 309, 586, 309, 307, 586, 309, 311, 516, 281, 12828, 760, 445, 300, 1412, 281, 257, 1329, 295, 13985, 370, 498, 51172, 51172, 291, 574, 294, 428, 361, 3015, 337, 300, 3028, 300, 311, 437, 291, 603, 536, 611, 2232, 604, 24903, 300, 1361, 51476, 51476, 949, 300, 307, 406, 10332, 294, 264, 6423, 1252, 294, 264, 11185, 309, 311, 787, 1096, 294, 264, 1322, 1823, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.057819285635220805, "compression_ratio": 1.9146341463414633, "no_caption_prob": 6.10843999311328e-05}, {"id": 589, "seek": 384732, "start": 3863.48, "end": 3869.56, "text": " you look in your json for that page that's what you'll see also uh any computation that came", "tokens": [50364, 445, 643, 257, 3089, 66, 295, 2010, 1329, 295, 6798, 370, 321, 727, 445, 584, 3089, 66, 5893, 1329, 3089, 66, 5893, 6798, 50668, 50668, 420, 17436, 1602, 5893, 1329, 17436, 1602, 5893, 6798, 5413, 322, 597, 7372, 291, 528, 281, 764, 456, 50876, 50876, 293, 300, 311, 309, 586, 309, 307, 586, 309, 311, 516, 281, 12828, 760, 445, 300, 1412, 281, 257, 1329, 295, 13985, 370, 498, 51172, 51172, 291, 574, 294, 428, 361, 3015, 337, 300, 3028, 300, 311, 437, 291, 603, 536, 611, 2232, 604, 24903, 300, 1361, 51476, 51476, 949, 300, 307, 406, 10332, 294, 264, 6423, 1252, 294, 264, 11185, 309, 311, 787, 1096, 294, 264, 1322, 1823, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.057819285635220805, "compression_ratio": 1.9146341463414633, "no_caption_prob": 6.10843999311328e-05}, {"id": 590, "seek": 384732, "start": 3869.56, "end": 3875.0800000000004, "text": " before that is not performed in the client side in the browser it's only done in the build step", "tokens": [50364, 445, 643, 257, 3089, 66, 295, 2010, 1329, 295, 6798, 370, 321, 727, 445, 584, 3089, 66, 5893, 1329, 3089, 66, 5893, 6798, 50668, 50668, 420, 17436, 1602, 5893, 1329, 17436, 1602, 5893, 6798, 5413, 322, 597, 7372, 291, 528, 281, 764, 456, 50876, 50876, 293, 300, 311, 309, 586, 309, 307, 586, 309, 311, 516, 281, 12828, 760, 445, 300, 1412, 281, 257, 1329, 295, 13985, 370, 498, 51172, 51172, 291, 574, 294, 428, 361, 3015, 337, 300, 3028, 300, 311, 437, 291, 603, 536, 611, 2232, 604, 24903, 300, 1361, 51476, 51476, 949, 300, 307, 406, 10332, 294, 264, 6423, 1252, 294, 264, 11185, 309, 311, 787, 1096, 294, 264, 1322, 1823, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.057819285635220805, "compression_ratio": 1.9146341463414633, "no_caption_prob": 6.10843999311328e-05}, {"id": 591, "seek": 387508, "start": 3875.08, "end": 3881.72, "text": " which is also cool so if you wanted to compute some fibonacci number and then distill that into", "tokens": [50364, 597, 307, 611, 1627, 370, 498, 291, 1415, 281, 14722, 512, 13116, 266, 43870, 1230, 293, 550, 42923, 300, 666, 50696, 50696, 364, 560, 291, 727, 360, 300, 293, 309, 2759, 380, 767, 1190, 264, 13116, 266, 43870, 3089, 294, 264, 11185, 370, 300, 50988, 50988, 9870, 493, 512, 764, 3331, 293, 309, 311, 257, 665, 551, 281, 362, 294, 428, 40167, 370, 498, 291, 498, 291, 434, 21814, 51212, 51244, 2416, 361, 3015, 7098, 300, 300, 311, 437, 291, 1116, 528, 281, 2524, 337, 293, 741, 478, 1953, 466, 2098, 281, 281, 976, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.08402132501407546, "compression_ratio": 1.751131221719457, "no_caption_prob": 5.9204958233749494e-05}, {"id": 592, "seek": 387508, "start": 3881.72, "end": 3887.56, "text": " an int you could do that and it wouldn't actually run the fibonacci code in the browser so that", "tokens": [50364, 597, 307, 611, 1627, 370, 498, 291, 1415, 281, 14722, 512, 13116, 266, 43870, 1230, 293, 550, 42923, 300, 666, 50696, 50696, 364, 560, 291, 727, 360, 300, 293, 309, 2759, 380, 767, 1190, 264, 13116, 266, 43870, 3089, 294, 264, 11185, 370, 300, 50988, 50988, 9870, 493, 512, 764, 3331, 293, 309, 311, 257, 665, 551, 281, 362, 294, 428, 40167, 370, 498, 291, 498, 291, 434, 21814, 51212, 51244, 2416, 361, 3015, 7098, 300, 300, 311, 437, 291, 1116, 528, 281, 2524, 337, 293, 741, 478, 1953, 466, 2098, 281, 281, 976, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.08402132501407546, "compression_ratio": 1.751131221719457, "no_caption_prob": 5.9204958233749494e-05}, {"id": 593, "seek": 387508, "start": 3887.56, "end": 3892.04, "text": " opens up some use cases and it's a good thing to have in your toolkit so if you if you're noticing", "tokens": [50364, 597, 307, 611, 1627, 370, 498, 291, 1415, 281, 14722, 512, 13116, 266, 43870, 1230, 293, 550, 42923, 300, 666, 50696, 50696, 364, 560, 291, 727, 360, 300, 293, 309, 2759, 380, 767, 1190, 264, 13116, 266, 43870, 3089, 294, 264, 11185, 370, 300, 50988, 50988, 9870, 493, 512, 764, 3331, 293, 309, 311, 257, 665, 551, 281, 362, 294, 428, 40167, 370, 498, 291, 498, 291, 434, 21814, 51212, 51244, 2416, 361, 3015, 7098, 300, 300, 311, 437, 291, 1116, 528, 281, 2524, 337, 293, 741, 478, 1953, 466, 2098, 281, 281, 976, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.08402132501407546, "compression_ratio": 1.751131221719457, "no_caption_prob": 5.9204958233749494e-05}, {"id": 594, "seek": 387508, "start": 3892.68, "end": 3900.52, "text": " large json files that that's what you'd want to reach for and i'm thinking about ways to to give", "tokens": [50364, 597, 307, 611, 1627, 370, 498, 291, 1415, 281, 14722, 512, 13116, 266, 43870, 1230, 293, 550, 42923, 300, 666, 50696, 50696, 364, 560, 291, 727, 360, 300, 293, 309, 2759, 380, 767, 1190, 264, 13116, 266, 43870, 3089, 294, 264, 11185, 370, 300, 50988, 50988, 9870, 493, 512, 764, 3331, 293, 309, 311, 257, 665, 551, 281, 362, 294, 428, 40167, 370, 498, 291, 498, 291, 434, 21814, 51212, 51244, 2416, 361, 3015, 7098, 300, 300, 311, 437, 291, 1116, 528, 281, 2524, 337, 293, 741, 478, 1953, 466, 2098, 281, 281, 976, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.08402132501407546, "compression_ratio": 1.751131221719457, "no_caption_prob": 5.9204958233749494e-05}, {"id": 595, "seek": 390052, "start": 3900.52, "end": 3906.36, "text": " some some nice feedback to tell you if your json files are getting large just to as a feedback", "tokens": [50364, 512, 512, 1481, 5824, 281, 980, 291, 498, 428, 361, 3015, 7098, 366, 1242, 2416, 445, 281, 382, 257, 5824, 50656, 50656, 7513, 370, 741, 1062, 360, 300, 294, 264, 1905, 7154, 7154, 293, 420, 264, 1322, 5622, 300, 1116, 312, 1627, 50964, 50964, 1338, 370, 1105, 741, 600, 2351, 341, 1168, 294, 1830, 264, 700, 3500, 611, 2232, 457, 562, 576, 309, 652, 2020, 51332, 51332, 337, 1580, 281, 2826, 806, 76, 7183, 670, 257, 3890, 806, 76, 1716, 741, 519, 309, 311, 3163, 291, 434, 14329, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.11848945203034775, "compression_ratio": 1.6452991452991452, "no_caption_prob": 2.7968368158326484e-05}, {"id": 596, "seek": 390052, "start": 3906.36, "end": 3912.52, "text": " mechanism so i might do that in the dev server server and or the build command that'd be cool", "tokens": [50364, 512, 512, 1481, 5824, 281, 980, 291, 498, 428, 361, 3015, 7098, 366, 1242, 2416, 445, 281, 382, 257, 5824, 50656, 50656, 7513, 370, 741, 1062, 360, 300, 294, 264, 1905, 7154, 7154, 293, 420, 264, 1322, 5622, 300, 1116, 312, 1627, 50964, 50964, 1338, 370, 1105, 741, 600, 2351, 341, 1168, 294, 1830, 264, 700, 3500, 611, 2232, 457, 562, 576, 309, 652, 2020, 51332, 51332, 337, 1580, 281, 2826, 806, 76, 7183, 670, 257, 3890, 806, 76, 1716, 741, 519, 309, 311, 3163, 291, 434, 14329, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.11848945203034775, "compression_ratio": 1.6452991452991452, "no_caption_prob": 2.7968368158326484e-05}, {"id": 597, "seek": 390052, "start": 3912.52, "end": 3919.88, "text": " yeah so um i've asked this question in during the first episode also uh but when would it make sense", "tokens": [50364, 512, 512, 1481, 5824, 281, 980, 291, 498, 428, 361, 3015, 7098, 366, 1242, 2416, 445, 281, 382, 257, 5824, 50656, 50656, 7513, 370, 741, 1062, 360, 300, 294, 264, 1905, 7154, 7154, 293, 420, 264, 1322, 5622, 300, 1116, 312, 1627, 50964, 50964, 1338, 370, 1105, 741, 600, 2351, 341, 1168, 294, 1830, 264, 700, 3500, 611, 2232, 457, 562, 576, 309, 652, 2020, 51332, 51332, 337, 1580, 281, 2826, 806, 76, 7183, 670, 257, 3890, 806, 76, 1716, 741, 519, 309, 311, 3163, 291, 434, 14329, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.11848945203034775, "compression_ratio": 1.6452991452991452, "no_caption_prob": 2.7968368158326484e-05}, {"id": 598, "seek": 390052, "start": 3919.88, "end": 3924.92, "text": " for someone to choose elm pages over a regular elm project i think it's worth you're addressing", "tokens": [50364, 512, 512, 1481, 5824, 281, 980, 291, 498, 428, 361, 3015, 7098, 366, 1242, 2416, 445, 281, 382, 257, 5824, 50656, 50656, 7513, 370, 741, 1062, 360, 300, 294, 264, 1905, 7154, 7154, 293, 420, 264, 1322, 5622, 300, 1116, 312, 1627, 50964, 50964, 1338, 370, 1105, 741, 600, 2351, 341, 1168, 294, 1830, 264, 700, 3500, 611, 2232, 457, 562, 576, 309, 652, 2020, 51332, 51332, 337, 1580, 281, 2826, 806, 76, 7183, 670, 257, 3890, 806, 76, 1716, 741, 519, 309, 311, 3163, 291, 434, 14329, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.11848945203034775, "compression_ratio": 1.6452991452991452, "no_caption_prob": 2.7968368158326484e-05}, {"id": 599, "seek": 392492, "start": 3924.92, "end": 3932.2000000000003, "text": " you're addressing this question i don't know if your answer changed well certainly uh the the", "tokens": [50364, 291, 434, 14329, 341, 1168, 741, 500, 380, 458, 498, 428, 1867, 3105, 731, 3297, 2232, 264, 264, 50728, 50728, 721, 300, 291, 393, 360, 365, 806, 76, 7183, 568, 13, 15, 366, 257, 688, 544, 11358, 293, 309, 311, 309, 311, 445, 5101, 51064, 51064, 1813, 544, 14442, 457, 741, 914, 498, 291, 434, 406, 498, 291, 362, 572, 764, 294, 659, 22407, 7183, 550, 291, 51492, 51492, 458, 983, 576, 291, 659, 15529, 7183, 498, 291, 498, 291, 434, 406, 1228, 1412, 7139, 550, 983, 576, 291, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04265311712859779, "compression_ratio": 1.75, "no_caption_prob": 0.00010719593410613015}, {"id": 600, "seek": 392492, "start": 3932.2000000000003, "end": 3938.92, "text": " things that you can do with elm pages 2.0 are a lot more flexible and it's it's just generally", "tokens": [50364, 291, 434, 14329, 341, 1168, 741, 500, 380, 458, 498, 428, 1867, 3105, 731, 3297, 2232, 264, 264, 50728, 50728, 721, 300, 291, 393, 360, 365, 806, 76, 7183, 568, 13, 15, 366, 257, 688, 544, 11358, 293, 309, 311, 309, 311, 445, 5101, 51064, 51064, 1813, 544, 14442, 457, 741, 914, 498, 291, 434, 406, 498, 291, 362, 572, 764, 294, 659, 22407, 7183, 550, 291, 51492, 51492, 458, 983, 576, 291, 659, 15529, 7183, 498, 291, 498, 291, 434, 406, 1228, 1412, 7139, 550, 983, 576, 291, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04265311712859779, "compression_ratio": 1.75, "no_caption_prob": 0.00010719593410613015}, {"id": 601, "seek": 392492, "start": 3938.92, "end": 3947.48, "text": " become more mature but i mean if you're not if you have no use in pre rendering pages then you", "tokens": [50364, 291, 434, 14329, 341, 1168, 741, 500, 380, 458, 498, 428, 1867, 3105, 731, 3297, 2232, 264, 264, 50728, 50728, 721, 300, 291, 393, 360, 365, 806, 76, 7183, 568, 13, 15, 366, 257, 688, 544, 11358, 293, 309, 311, 309, 311, 445, 5101, 51064, 51064, 1813, 544, 14442, 457, 741, 914, 498, 291, 434, 406, 498, 291, 362, 572, 764, 294, 659, 22407, 7183, 550, 291, 51492, 51492, 458, 983, 576, 291, 659, 15529, 7183, 498, 291, 498, 291, 434, 406, 1228, 1412, 7139, 550, 983, 576, 291, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04265311712859779, "compression_ratio": 1.75, "no_caption_prob": 0.00010719593410613015}, {"id": 602, "seek": 392492, "start": 3947.48, "end": 3954.12, "text": " know why would you pre render pages if you if you're not using data sources then why would you", "tokens": [50364, 291, 434, 14329, 341, 1168, 741, 500, 380, 458, 498, 428, 1867, 3105, 731, 3297, 2232, 264, 264, 50728, 50728, 721, 300, 291, 393, 360, 365, 806, 76, 7183, 568, 13, 15, 366, 257, 688, 544, 11358, 293, 309, 311, 309, 311, 445, 5101, 51064, 51064, 1813, 544, 14442, 457, 741, 914, 498, 291, 434, 406, 498, 291, 362, 572, 764, 294, 659, 22407, 7183, 550, 291, 51492, 51492, 458, 983, 576, 291, 659, 15529, 7183, 498, 291, 498, 291, 434, 406, 1228, 1412, 7139, 550, 983, 576, 291, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.04265311712859779, "compression_ratio": 1.75, "no_caption_prob": 0.00010719593410613015}, {"id": 603, "seek": 395412, "start": 3954.12, "end": 3959.08, "text": " use elm pages you know that that's sort of my thinking on it is like if you're like oh wow data", "tokens": [50364, 764, 806, 76, 7183, 291, 458, 300, 300, 311, 1333, 295, 452, 1953, 322, 309, 307, 411, 498, 291, 434, 411, 1954, 6076, 1412, 50612, 50612, 7139, 300, 311, 869, 586, 741, 393, 362, 341, 1412, 456, 293, 1105, 741, 393, 519, 466, 341, 341, 1412, 50952, 50952, 885, 456, 337, 341, 3028, 1553, 1419, 281, 352, 807, 264, 1379, 5623, 3636, 6586, 293, 439, 51228, 51228, 295, 300, 293, 309, 311, 16694, 1166, 1412, 293, 300, 300, 37765, 1985, 534, 731, 337, 341, 764, 1389, 51488, 51488, 550, 806, 76, 7183, 1062, 312, 257, 665, 3318, 498, 498, 309, 311, 411, 741, 500, 380, 534, 643, 341, 1412, 4009, 551, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.03992666990860649, "compression_ratio": 1.8991935483870968, "no_caption_prob": 4.092863491678145e-06}, {"id": 604, "seek": 395412, "start": 3959.08, "end": 3965.88, "text": " sources that's great now i can have this data there and um i can think about this this data", "tokens": [50364, 764, 806, 76, 7183, 291, 458, 300, 300, 311, 1333, 295, 452, 1953, 322, 309, 307, 411, 498, 291, 434, 411, 1954, 6076, 1412, 50612, 50612, 7139, 300, 311, 869, 586, 741, 393, 362, 341, 1412, 456, 293, 1105, 741, 393, 519, 466, 341, 341, 1412, 50952, 50952, 885, 456, 337, 341, 3028, 1553, 1419, 281, 352, 807, 264, 1379, 5623, 3636, 6586, 293, 439, 51228, 51228, 295, 300, 293, 309, 311, 16694, 1166, 1412, 293, 300, 300, 37765, 1985, 534, 731, 337, 341, 764, 1389, 51488, 51488, 550, 806, 76, 7183, 1062, 312, 257, 665, 3318, 498, 498, 309, 311, 411, 741, 500, 380, 534, 643, 341, 1412, 4009, 551, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.03992666990860649, "compression_ratio": 1.8991935483870968, "no_caption_prob": 4.092863491678145e-06}, {"id": 605, "seek": 395412, "start": 3965.88, "end": 3971.4, "text": " being there for this page without having to go through the whole update message cycle and all", "tokens": [50364, 764, 806, 76, 7183, 291, 458, 300, 300, 311, 1333, 295, 452, 1953, 322, 309, 307, 411, 498, 291, 434, 411, 1954, 6076, 1412, 50612, 50612, 7139, 300, 311, 869, 586, 741, 393, 362, 341, 1412, 456, 293, 1105, 741, 393, 519, 466, 341, 341, 1412, 50952, 50952, 885, 456, 337, 341, 3028, 1553, 1419, 281, 352, 807, 264, 1379, 5623, 3636, 6586, 293, 439, 51228, 51228, 295, 300, 293, 309, 311, 16694, 1166, 1412, 293, 300, 300, 37765, 1985, 534, 731, 337, 341, 764, 1389, 51488, 51488, 550, 806, 76, 7183, 1062, 312, 257, 665, 3318, 498, 498, 309, 311, 411, 741, 500, 380, 534, 643, 341, 1412, 4009, 551, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.03992666990860649, "compression_ratio": 1.8991935483870968, "no_caption_prob": 4.092863491678145e-06}, {"id": 606, "seek": 395412, "start": 3971.4, "end": 3976.6, "text": " of that and it's declarative data and that that abstraction works really well for this use case", "tokens": [50364, 764, 806, 76, 7183, 291, 458, 300, 300, 311, 1333, 295, 452, 1953, 322, 309, 307, 411, 498, 291, 434, 411, 1954, 6076, 1412, 50612, 50612, 7139, 300, 311, 869, 586, 741, 393, 362, 341, 1412, 456, 293, 1105, 741, 393, 519, 466, 341, 341, 1412, 50952, 50952, 885, 456, 337, 341, 3028, 1553, 1419, 281, 352, 807, 264, 1379, 5623, 3636, 6586, 293, 439, 51228, 51228, 295, 300, 293, 309, 311, 16694, 1166, 1412, 293, 300, 300, 37765, 1985, 534, 731, 337, 341, 764, 1389, 51488, 51488, 550, 806, 76, 7183, 1062, 312, 257, 665, 3318, 498, 498, 309, 311, 411, 741, 500, 380, 534, 643, 341, 1412, 4009, 551, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.03992666990860649, "compression_ratio": 1.8991935483870968, "no_caption_prob": 4.092863491678145e-06}, {"id": 607, "seek": 395412, "start": 3976.6, "end": 3982.2, "text": " then elm pages might be a good fit if if it's like i don't really need this data source thing", "tokens": [50364, 764, 806, 76, 7183, 291, 458, 300, 300, 311, 1333, 295, 452, 1953, 322, 309, 307, 411, 498, 291, 434, 411, 1954, 6076, 1412, 50612, 50612, 7139, 300, 311, 869, 586, 741, 393, 362, 341, 1412, 456, 293, 1105, 741, 393, 519, 466, 341, 341, 1412, 50952, 50952, 885, 456, 337, 341, 3028, 1553, 1419, 281, 352, 807, 264, 1379, 5623, 3636, 6586, 293, 439, 51228, 51228, 295, 300, 293, 309, 311, 16694, 1166, 1412, 293, 300, 300, 37765, 1985, 534, 731, 337, 341, 764, 1389, 51488, 51488, 550, 806, 76, 7183, 1062, 312, 257, 665, 3318, 498, 498, 309, 311, 411, 741, 500, 380, 534, 643, 341, 1412, 4009, 551, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.03992666990860649, "compression_ratio": 1.8991935483870968, "no_caption_prob": 4.092863491678145e-06}, {"id": 608, "seek": 398220, "start": 3982.2, "end": 3987.56, "text": " then what then why are you using elm pages that's that's sort of my rule of thumb yeah if so if you", "tokens": [50364, 550, 437, 550, 983, 366, 291, 1228, 806, 76, 7183, 300, 311, 300, 311, 1333, 295, 452, 4978, 295, 9298, 1338, 498, 370, 498, 291, 50632, 50632, 500, 380, 362, 604, 1412, 281, 659, 15529, 1338, 291, 764, 257, 3890, 806, 76, 3861, 1338, 420, 806, 76, 637, 64, 1062, 312, 50964, 50964, 257, 869, 3318, 1338, 370, 1105, 1338, 370, 291, 458, 300, 300, 311, 799, 3928, 281, 312, 411, 2701, 7533, 293, 51244, 51244, 586, 741, 741, 534, 360, 1697, 300, 1105, 2701, 7533, 9948, 665, 2093, 14281, 82, 300, 311, 445, 746, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.061003497152617485, "compression_ratio": 1.7880184331797235, "no_caption_prob": 3.219158679712564e-05}, {"id": 609, "seek": 398220, "start": 3987.56, "end": 3994.2, "text": " don't have any data to pre render yeah you use a regular elm application yeah or elm spa might be", "tokens": [50364, 550, 437, 550, 983, 366, 291, 1228, 806, 76, 7183, 300, 311, 300, 311, 1333, 295, 452, 4978, 295, 9298, 1338, 498, 370, 498, 291, 50632, 50632, 500, 380, 362, 604, 1412, 281, 659, 15529, 1338, 291, 764, 257, 3890, 806, 76, 3861, 1338, 420, 806, 76, 637, 64, 1062, 312, 50964, 50964, 257, 869, 3318, 1338, 370, 1105, 1338, 370, 291, 458, 300, 300, 311, 799, 3928, 281, 312, 411, 2701, 7533, 293, 51244, 51244, 586, 741, 741, 534, 360, 1697, 300, 1105, 2701, 7533, 9948, 665, 2093, 14281, 82, 300, 311, 445, 746, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.061003497152617485, "compression_ratio": 1.7880184331797235, "no_caption_prob": 3.219158679712564e-05}, {"id": 610, "seek": 398220, "start": 3994.2, "end": 3999.7999999999997, "text": " a great fit yeah so um yeah so you know that that's gonna tend to be like content sites and", "tokens": [50364, 550, 437, 550, 983, 366, 291, 1228, 806, 76, 7183, 300, 311, 300, 311, 1333, 295, 452, 4978, 295, 9298, 1338, 498, 370, 498, 291, 50632, 50632, 500, 380, 362, 604, 1412, 281, 659, 15529, 1338, 291, 764, 257, 3890, 806, 76, 3861, 1338, 420, 806, 76, 637, 64, 1062, 312, 50964, 50964, 257, 869, 3318, 1338, 370, 1105, 1338, 370, 291, 458, 300, 300, 311, 799, 3928, 281, 312, 411, 2701, 7533, 293, 51244, 51244, 586, 741, 741, 534, 360, 1697, 300, 1105, 2701, 7533, 9948, 665, 2093, 14281, 82, 300, 311, 445, 746, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.061003497152617485, "compression_ratio": 1.7880184331797235, "no_caption_prob": 3.219158679712564e-05}, {"id": 611, "seek": 398220, "start": 3999.7999999999997, "end": 4006.7599999999998, "text": " now i i really do believe that um content sites deserve good social previews that's just something", "tokens": [50364, 550, 437, 550, 983, 366, 291, 1228, 806, 76, 7183, 300, 311, 300, 311, 1333, 295, 452, 4978, 295, 9298, 1338, 498, 370, 498, 291, 50632, 50632, 500, 380, 362, 604, 1412, 281, 659, 15529, 1338, 291, 764, 257, 3890, 806, 76, 3861, 1338, 420, 806, 76, 637, 64, 1062, 312, 50964, 50964, 257, 869, 3318, 1338, 370, 1105, 1338, 370, 291, 458, 300, 300, 311, 799, 3928, 281, 312, 411, 2701, 7533, 293, 51244, 51244, 586, 741, 741, 534, 360, 1697, 300, 1105, 2701, 7533, 9948, 665, 2093, 14281, 82, 300, 311, 445, 746, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.061003497152617485, "compression_ratio": 1.7880184331797235, "no_caption_prob": 3.219158679712564e-05}, {"id": 612, "seek": 400676, "start": 4006.76, "end": 4013.48, "text": " i i believe like to me it's super anti climactic if if i put some love into like writing a blog", "tokens": [50364, 741, 741, 1697, 411, 281, 385, 309, 311, 1687, 6061, 5644, 19892, 498, 498, 741, 829, 512, 959, 666, 411, 3579, 257, 6968, 50700, 50700, 2183, 420, 746, 293, 550, 2073, 309, 322, 21439, 293, 309, 311, 411, 35759, 806, 76, 13, 1112, 17330, 6968, 17330, 50980, 50980, 2035, 393, 291, 1767, 1590, 12166, 7350, 412, 385, 1767, 741, 528, 264, 959, 741, 829, 666, 264, 51432, 51432, 12300, 281, 312, 15502, 294, 411, 257, 29079, 1237, 2093, 14281, 293, 912, 337, 257, 6370, 3028, 420, 51792, 51824], "temperature": 0.0, "avg_logprob": -0.05820215013292101, "compression_ratio": 1.7117117117117118, "no_caption_prob": 5.064163269707933e-05}, {"id": 613, "seek": 400676, "start": 4013.48, "end": 4019.0800000000004, "text": " post or something and then share it on twitter and it's like incremental elm.com slash blog slash", "tokens": [50364, 741, 741, 1697, 411, 281, 385, 309, 311, 1687, 6061, 5644, 19892, 498, 498, 741, 829, 512, 959, 666, 411, 3579, 257, 6968, 50700, 50700, 2183, 420, 746, 293, 550, 2073, 309, 322, 21439, 293, 309, 311, 411, 35759, 806, 76, 13, 1112, 17330, 6968, 17330, 50980, 50980, 2035, 393, 291, 1767, 1590, 12166, 7350, 412, 385, 1767, 741, 528, 264, 959, 741, 829, 666, 264, 51432, 51432, 12300, 281, 312, 15502, 294, 411, 257, 29079, 1237, 2093, 14281, 293, 912, 337, 257, 6370, 3028, 420, 51792, 51824], "temperature": 0.0, "avg_logprob": -0.05820215013292101, "compression_ratio": 1.7117117117117118, "no_caption_prob": 5.064163269707933e-05}, {"id": 614, "seek": 400676, "start": 4019.0800000000004, "end": 4028.1200000000003, "text": " whatever can you please stop pointing fingers at me please i want the love i put into the", "tokens": [50364, 741, 741, 1697, 411, 281, 385, 309, 311, 1687, 6061, 5644, 19892, 498, 498, 741, 829, 512, 959, 666, 411, 3579, 257, 6968, 50700, 50700, 2183, 420, 746, 293, 550, 2073, 309, 322, 21439, 293, 309, 311, 411, 35759, 806, 76, 13, 1112, 17330, 6968, 17330, 50980, 50980, 2035, 393, 291, 1767, 1590, 12166, 7350, 412, 385, 1767, 741, 528, 264, 959, 741, 829, 666, 264, 51432, 51432, 12300, 281, 312, 15502, 294, 411, 257, 29079, 1237, 2093, 14281, 293, 912, 337, 257, 6370, 3028, 420, 51792, 51824], "temperature": 0.0, "avg_logprob": -0.05820215013292101, "compression_ratio": 1.7117117117117118, "no_caption_prob": 5.064163269707933e-05}, {"id": 615, "seek": 400676, "start": 4028.1200000000003, "end": 4035.32, "text": " posts to be reflected in like a polished looking social preview and same for a marketing page or", "tokens": [50364, 741, 741, 1697, 411, 281, 385, 309, 311, 1687, 6061, 5644, 19892, 498, 498, 741, 829, 512, 959, 666, 411, 3579, 257, 6968, 50700, 50700, 2183, 420, 746, 293, 550, 2073, 309, 322, 21439, 293, 309, 311, 411, 35759, 806, 76, 13, 1112, 17330, 6968, 17330, 50980, 50980, 2035, 393, 291, 1767, 1590, 12166, 7350, 412, 385, 1767, 741, 528, 264, 959, 741, 829, 666, 264, 51432, 51432, 12300, 281, 312, 15502, 294, 411, 257, 29079, 1237, 2093, 14281, 293, 912, 337, 257, 6370, 3028, 420, 51792, 51824], "temperature": 0.0, "avg_logprob": -0.05820215013292101, "compression_ratio": 1.7117117117117118, "no_caption_prob": 5.064163269707933e-05}, {"id": 616, "seek": 403532, "start": 4035.32, "end": 4043.0, "text": " a restaurant you know restaurant menu you know site or a film festival site or whatever it might", "tokens": [50364, 257, 6383, 291, 458, 6383, 6510, 291, 458, 3621, 420, 257, 2007, 12091, 3621, 420, 2035, 309, 1062, 50748, 50748, 312, 411, 613, 1333, 295, 1105, 2701, 2361, 7533, 741, 741, 519, 9948, 1481, 14281, 82, 293, 611, 411, 741, 519, 51136, 51136, 291, 393, 13982, 411, 806, 76, 7183, 412, 1080, 4965, 307, 2902, 291, 341, 2290, 337, 337, 8407, 294, 341, 1412, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.08972991214079015, "compression_ratio": 1.7176470588235293, "no_caption_prob": 5.014673206460429e-06}, {"id": 617, "seek": 403532, "start": 4043.0, "end": 4050.76, "text": " be like these sort of um content based sites i i think deserve nice previews and also like i think", "tokens": [50364, 257, 6383, 291, 458, 6383, 6510, 291, 458, 3621, 420, 257, 2007, 12091, 3621, 420, 2035, 309, 1062, 50748, 50748, 312, 411, 613, 1333, 295, 1105, 2701, 2361, 7533, 741, 741, 519, 9948, 1481, 14281, 82, 293, 611, 411, 741, 519, 51136, 51136, 291, 393, 13982, 411, 806, 76, 7183, 412, 1080, 4965, 307, 2902, 291, 341, 2290, 337, 337, 8407, 294, 341, 1412, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.08972991214079015, "compression_ratio": 1.7176470588235293, "no_caption_prob": 5.014673206460429e-06}, {"id": 618, "seek": 403532, "start": 4050.76, "end": 4059.0800000000004, "text": " you can leverage like elm pages at its core is giving you this tool for for pulling in this data", "tokens": [50364, 257, 6383, 291, 458, 6383, 6510, 291, 458, 3621, 420, 257, 2007, 12091, 3621, 420, 2035, 309, 1062, 50748, 50748, 312, 411, 613, 1333, 295, 1105, 2701, 2361, 7533, 741, 741, 519, 9948, 1481, 14281, 82, 293, 611, 411, 741, 519, 51136, 51136, 291, 393, 13982, 411, 806, 76, 7183, 412, 1080, 4965, 307, 2902, 291, 341, 2290, 337, 337, 8407, 294, 341, 1412, 51552, 51552], "temperature": 0.0, "avg_logprob": -0.08972991214079015, "compression_ratio": 1.7176470588235293, "no_caption_prob": 5.014673206460429e-06}, {"id": 619, "seek": 405908, "start": 4059.08, "end": 4066.68, "text": " into nice typed elm data that you can use on your pages and like i just think elm is a very good", "tokens": [50364, 666, 1481, 33941, 806, 76, 1412, 300, 291, 393, 764, 322, 428, 7183, 293, 411, 741, 445, 519, 806, 76, 307, 257, 588, 665, 50744, 50744, 2290, 337, 300, 411, 806, 76, 575, 364, 4651, 2010, 1185, 309, 311, 370, 1481, 411, 27210, 1412, 293, 51088, 51088, 8437, 1412, 926, 293, 21156, 278, 1412, 558, 300, 311, 411, 300, 311, 437, 311, 2243, 466, 806, 76, 411, 604, 411, 51464, 51464, 754, 2618, 567, 311, 406, 3718, 322, 806, 76, 307, 411, 1338, 741, 534, 411, 884, 300, 1333, 295, 551, 365, 806, 76, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.08267157418387276, "compression_ratio": 1.8341232227488151, "no_caption_prob": 8.480415999656543e-05}, {"id": 620, "seek": 405908, "start": 4066.68, "end": 4073.56, "text": " tool for that like elm has an incredible type system it's so nice like transforming data and", "tokens": [50364, 666, 1481, 33941, 806, 76, 1412, 300, 291, 393, 764, 322, 428, 7183, 293, 411, 741, 445, 519, 806, 76, 307, 257, 588, 665, 50744, 50744, 2290, 337, 300, 411, 806, 76, 575, 364, 4651, 2010, 1185, 309, 311, 370, 1481, 411, 27210, 1412, 293, 51088, 51088, 8437, 1412, 926, 293, 21156, 278, 1412, 558, 300, 311, 411, 300, 311, 437, 311, 2243, 466, 806, 76, 411, 604, 411, 51464, 51464, 754, 2618, 567, 311, 406, 3718, 322, 806, 76, 307, 411, 1338, 741, 534, 411, 884, 300, 1333, 295, 551, 365, 806, 76, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.08267157418387276, "compression_ratio": 1.8341232227488151, "no_caption_prob": 8.480415999656543e-05}, {"id": 621, "seek": 405908, "start": 4073.56, "end": 4081.08, "text": " passing data around and parsing data right that's like that's what's amazing about elm like any like", "tokens": [50364, 666, 1481, 33941, 806, 76, 1412, 300, 291, 393, 764, 322, 428, 7183, 293, 411, 741, 445, 519, 806, 76, 307, 257, 588, 665, 50744, 50744, 2290, 337, 300, 411, 806, 76, 575, 364, 4651, 2010, 1185, 309, 311, 370, 1481, 411, 27210, 1412, 293, 51088, 51088, 8437, 1412, 926, 293, 21156, 278, 1412, 558, 300, 311, 411, 300, 311, 437, 311, 2243, 466, 806, 76, 411, 604, 411, 51464, 51464, 754, 2618, 567, 311, 406, 3718, 322, 806, 76, 307, 411, 1338, 741, 534, 411, 884, 300, 1333, 295, 551, 365, 806, 76, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.08267157418387276, "compression_ratio": 1.8341232227488151, "no_caption_prob": 8.480415999656543e-05}, {"id": 622, "seek": 405908, "start": 4081.08, "end": 4086.2, "text": " even somebody who's not sold on elm is like yeah i really like doing that sort of thing with elm", "tokens": [50364, 666, 1481, 33941, 806, 76, 1412, 300, 291, 393, 764, 322, 428, 7183, 293, 411, 741, 445, 519, 806, 76, 307, 257, 588, 665, 50744, 50744, 2290, 337, 300, 411, 806, 76, 575, 364, 4651, 2010, 1185, 309, 311, 370, 1481, 411, 27210, 1412, 293, 51088, 51088, 8437, 1412, 926, 293, 21156, 278, 1412, 558, 300, 311, 411, 300, 311, 437, 311, 2243, 466, 806, 76, 411, 604, 411, 51464, 51464, 754, 2618, 567, 311, 406, 3718, 322, 806, 76, 307, 411, 1338, 741, 534, 411, 884, 300, 1333, 295, 551, 365, 806, 76, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.08267157418387276, "compression_ratio": 1.8341232227488151, "no_caption_prob": 8.480415999656543e-05}, {"id": 623, "seek": 408620, "start": 4086.2, "end": 4092.04, "text": " you know that you hear that sometimes like well that's sort of what what data sources are really", "tokens": [50364, 291, 458, 300, 291, 1568, 300, 2171, 411, 731, 300, 311, 1333, 295, 437, 437, 1412, 7139, 366, 534, 50656, 50656, 665, 412, 307, 8295, 291, 764, 1412, 300, 636, 411, 456, 311, 572, 4295, 9505, 75, 37765, 570, 321, 600, 50944, 50944, 632, 746, 709, 1101, 813, 257, 2654, 4295, 9505, 75, 8149, 337, 1242, 7098, 293, 1507, 321, 600, 658, 806, 76, 51244, 51244, 293, 806, 76, 311, 2010, 1185, 293, 806, 76, 311, 5824, 15902, 370, 741, 1116, 709, 2831, 764, 300, 586, 300, 848, 741, 741, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10118662042820707, "compression_ratio": 1.7741935483870968, "no_caption_prob": 3.024049692612607e-05}, {"id": 624, "seek": 408620, "start": 4092.04, "end": 4097.8, "text": " good at is letting you use data that way like there's no graph ql abstraction because we've", "tokens": [50364, 291, 458, 300, 291, 1568, 300, 2171, 411, 731, 300, 311, 1333, 295, 437, 437, 1412, 7139, 366, 534, 50656, 50656, 665, 412, 307, 8295, 291, 764, 1412, 300, 636, 411, 456, 311, 572, 4295, 9505, 75, 37765, 570, 321, 600, 50944, 50944, 632, 746, 709, 1101, 813, 257, 2654, 4295, 9505, 75, 8149, 337, 1242, 7098, 293, 1507, 321, 600, 658, 806, 76, 51244, 51244, 293, 806, 76, 311, 2010, 1185, 293, 806, 76, 311, 5824, 15902, 370, 741, 1116, 709, 2831, 764, 300, 586, 300, 848, 741, 741, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10118662042820707, "compression_ratio": 1.7741935483870968, "no_caption_prob": 3.024049692612607e-05}, {"id": 625, "seek": 408620, "start": 4097.8, "end": 4103.8, "text": " had something much better than a local graph ql database for getting files and stuff we've got elm", "tokens": [50364, 291, 458, 300, 291, 1568, 300, 2171, 411, 731, 300, 311, 1333, 295, 437, 437, 1412, 7139, 366, 534, 50656, 50656, 665, 412, 307, 8295, 291, 764, 1412, 300, 636, 411, 456, 311, 572, 4295, 9505, 75, 37765, 570, 321, 600, 50944, 50944, 632, 746, 709, 1101, 813, 257, 2654, 4295, 9505, 75, 8149, 337, 1242, 7098, 293, 1507, 321, 600, 658, 806, 76, 51244, 51244, 293, 806, 76, 311, 2010, 1185, 293, 806, 76, 311, 5824, 15902, 370, 741, 1116, 709, 2831, 764, 300, 586, 300, 848, 741, 741, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10118662042820707, "compression_ratio": 1.7741935483870968, "no_caption_prob": 3.024049692612607e-05}, {"id": 626, "seek": 408620, "start": 4103.8, "end": 4110.2, "text": " and elm's type system and elm's feedback mechanisms so i'd much rather use that now that said i i", "tokens": [50364, 291, 458, 300, 291, 1568, 300, 2171, 411, 731, 300, 311, 1333, 295, 437, 437, 1412, 7139, 366, 534, 50656, 50656, 665, 412, 307, 8295, 291, 764, 1412, 300, 636, 411, 456, 311, 572, 4295, 9505, 75, 37765, 570, 321, 600, 50944, 50944, 632, 746, 709, 1101, 813, 257, 2654, 4295, 9505, 75, 8149, 337, 1242, 7098, 293, 1507, 321, 600, 658, 806, 76, 51244, 51244, 293, 806, 76, 311, 2010, 1185, 293, 806, 76, 311, 5824, 15902, 370, 741, 1116, 709, 2831, 764, 300, 586, 300, 848, 741, 741, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.10118662042820707, "compression_ratio": 1.7741935483870968, "no_caption_prob": 3.024049692612607e-05}, {"id": 627, "seek": 411020, "start": 4110.2, "end": 4116.92, "text": " absolutely use graph ql and elm graph ql to like fetch data from cmss like uh like sanity or", "tokens": [50364, 3122, 764, 4295, 9505, 75, 293, 806, 76, 4295, 9505, 75, 281, 411, 23673, 1412, 490, 269, 2592, 82, 411, 2232, 411, 47892, 420, 50700, 50700, 2701, 906, 300, 19219, 4295, 9505, 75, 1882, 271, 570, 983, 406, 360, 291, 362, 257, 4295, 9505, 75, 1412, 4009, 1338, 2232, 51068, 51068, 731, 1105, 370, 2232, 806, 76, 4295, 9505, 75, 4960, 411, 17528, 361, 3015, 979, 378, 433, 406, 26941, 979, 378, 433, 293, 291, 393, 764, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.09523074420881861, "compression_ratio": 1.7546012269938651, "no_caption_prob": 0.00010070503049064428}, {"id": 628, "seek": 411020, "start": 4116.92, "end": 4124.28, "text": " contentful that expose graph ql apis because why not do you have a graph ql data source yeah uh", "tokens": [50364, 3122, 764, 4295, 9505, 75, 293, 806, 76, 4295, 9505, 75, 281, 411, 23673, 1412, 490, 269, 2592, 82, 411, 2232, 411, 47892, 420, 50700, 50700, 2701, 906, 300, 19219, 4295, 9505, 75, 1882, 271, 570, 983, 406, 360, 291, 362, 257, 4295, 9505, 75, 1412, 4009, 1338, 2232, 51068, 51068, 731, 1105, 370, 2232, 806, 76, 4295, 9505, 75, 4960, 411, 17528, 361, 3015, 979, 378, 433, 406, 26941, 979, 378, 433, 293, 291, 393, 764, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.09523074420881861, "compression_ratio": 1.7546012269938651, "no_caption_prob": 0.00010070503049064428}, {"id": 629, "seek": 411020, "start": 4124.28, "end": 4132.76, "text": " well um so uh elm graph ql uses like vanilla json decoders not optimized decoders and you can use", "tokens": [50364, 3122, 764, 4295, 9505, 75, 293, 806, 76, 4295, 9505, 75, 281, 411, 23673, 1412, 490, 269, 2592, 82, 411, 2232, 411, 47892, 420, 50700, 50700, 2701, 906, 300, 19219, 4295, 9505, 75, 1882, 271, 570, 983, 406, 360, 291, 362, 257, 4295, 9505, 75, 1412, 4009, 1338, 2232, 51068, 51068, 731, 1105, 370, 2232, 806, 76, 4295, 9505, 75, 4960, 411, 17528, 361, 3015, 979, 378, 433, 406, 26941, 979, 378, 433, 293, 291, 393, 764, 51492, 51492], "temperature": 0.0, "avg_logprob": -0.09523074420881861, "compression_ratio": 1.7546012269938651, "no_caption_prob": 0.00010070503049064428}, {"id": 630, "seek": 413276, "start": 4132.76, "end": 4140.280000000001, "text": " that with um with um with elm pages um you just have to use these unoptimized requests but they", "tokens": [50364, 300, 365, 1105, 365, 1105, 365, 806, 76, 7183, 1105, 291, 445, 362, 281, 764, 613, 517, 5747, 332, 1602, 12475, 457, 436, 50740, 50740, 366, 26941, 294, 257, 819, 636, 558, 2293, 558, 2086, 2293, 570, 4295, 9505, 75, 1217, 1333, 51132, 51132, 295, 775, 341, 1412, 30348, 538, 12678, 2293, 264, 1412, 291, 16436, 370, 309, 576, 309, 576, 312, 51412, 51412, 19350, 337, 300, 370, 1338, 1392, 1338, 370, 300, 1985, 1596, 9594, 370, 741, 741, 393, 741, 603, 2073, 257, 707, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.061028576968760975, "compression_ratio": 1.7488584474885844, "no_caption_prob": 9.08022775547579e-06}, {"id": 631, "seek": 413276, "start": 4140.280000000001, "end": 4148.12, "text": " are optimized in a different way right exactly right yes exactly because graph ql already sort", "tokens": [50364, 300, 365, 1105, 365, 1105, 365, 806, 76, 7183, 1105, 291, 445, 362, 281, 764, 613, 517, 5747, 332, 1602, 12475, 457, 436, 50740, 50740, 366, 26941, 294, 257, 819, 636, 558, 2293, 558, 2086, 2293, 570, 4295, 9505, 75, 1217, 1333, 51132, 51132, 295, 775, 341, 1412, 30348, 538, 12678, 2293, 264, 1412, 291, 16436, 370, 309, 576, 309, 576, 312, 51412, 51412, 19350, 337, 300, 370, 1338, 1392, 1338, 370, 300, 1985, 1596, 9594, 370, 741, 741, 393, 741, 603, 2073, 257, 707, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.061028576968760975, "compression_ratio": 1.7488584474885844, "no_caption_prob": 9.08022775547579e-06}, {"id": 632, "seek": 413276, "start": 4148.12, "end": 4153.72, "text": " of does this data splitting by returning exactly the data you requested so it would it would be", "tokens": [50364, 300, 365, 1105, 365, 1105, 365, 806, 76, 7183, 1105, 291, 445, 362, 281, 764, 613, 517, 5747, 332, 1602, 12475, 457, 436, 50740, 50740, 366, 26941, 294, 257, 819, 636, 558, 2293, 558, 2086, 2293, 570, 4295, 9505, 75, 1217, 1333, 51132, 51132, 295, 775, 341, 1412, 30348, 538, 12678, 2293, 264, 1412, 291, 16436, 370, 309, 576, 309, 576, 312, 51412, 51412, 19350, 337, 300, 370, 1338, 1392, 1338, 370, 300, 1985, 1596, 9594, 370, 741, 741, 393, 741, 603, 2073, 257, 707, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.061028576968760975, "compression_ratio": 1.7488584474885844, "no_caption_prob": 9.08022775547579e-06}, {"id": 633, "seek": 413276, "start": 4153.72, "end": 4159.64, "text": " unnecessary for that so yeah okay yeah so that works quite nicely so i i can i'll share a little", "tokens": [50364, 300, 365, 1105, 365, 1105, 365, 806, 76, 7183, 1105, 291, 445, 362, 281, 764, 613, 517, 5747, 332, 1602, 12475, 457, 436, 50740, 50740, 366, 26941, 294, 257, 819, 636, 558, 2293, 558, 2086, 2293, 570, 4295, 9505, 75, 1217, 1333, 51132, 51132, 295, 775, 341, 1412, 30348, 538, 12678, 2293, 264, 1412, 291, 16436, 370, 309, 576, 309, 576, 312, 51412, 51412, 19350, 337, 300, 370, 1338, 1392, 1338, 370, 300, 1985, 1596, 9594, 370, 741, 741, 393, 741, 603, 2073, 257, 707, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.061028576968760975, "compression_ratio": 1.7488584474885844, "no_caption_prob": 9.08022775547579e-06}, {"id": 634, "seek": 415964, "start": 4159.64, "end": 4165.64, "text": " link to like a snippet that i have for just performing and decoding that using a data source", "tokens": [50364, 2113, 281, 411, 257, 35623, 302, 300, 741, 362, 337, 445, 10205, 293, 979, 8616, 300, 1228, 257, 1412, 4009, 50664, 50664, 457, 309, 1985, 1985, 588, 9594, 457, 983, 457, 983, 576, 291, 764, 364, 37765, 411, 300, 741, 519, 51012, 51012, 300, 291, 458, 29834, 411, 290, 1720, 2322, 361, 82, 337, 1365, 764, 341, 4295, 9505, 75, 37765, 570, 309, 311, 51332, 51332, 257, 33941, 636, 295, 1242, 1412, 457, 806, 76, 741, 2809, 380, 1029, 337, 257, 1101, 636, 295, 6260, 365, 3467, 1412, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09142159379046896, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.5464996724622324e-05}, {"id": 635, "seek": 415964, "start": 4165.64, "end": 4172.6, "text": " but it works works very nicely but why but why would you use an abstraction like that i think", "tokens": [50364, 2113, 281, 411, 257, 35623, 302, 300, 741, 362, 337, 445, 10205, 293, 979, 8616, 300, 1228, 257, 1412, 4009, 50664, 50664, 457, 309, 1985, 1985, 588, 9594, 457, 983, 457, 983, 576, 291, 764, 364, 37765, 411, 300, 741, 519, 51012, 51012, 300, 291, 458, 29834, 411, 290, 1720, 2322, 361, 82, 337, 1365, 764, 341, 4295, 9505, 75, 37765, 570, 309, 311, 51332, 51332, 257, 33941, 636, 295, 1242, 1412, 457, 806, 76, 741, 2809, 380, 1029, 337, 257, 1101, 636, 295, 6260, 365, 3467, 1412, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09142159379046896, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.5464996724622324e-05}, {"id": 636, "seek": 415964, "start": 4172.6, "end": 4179.0, "text": " that you know frameworks like gatsby js for example use this graph ql abstraction because it's", "tokens": [50364, 2113, 281, 411, 257, 35623, 302, 300, 741, 362, 337, 445, 10205, 293, 979, 8616, 300, 1228, 257, 1412, 4009, 50664, 50664, 457, 309, 1985, 1985, 588, 9594, 457, 983, 457, 983, 576, 291, 764, 364, 37765, 411, 300, 741, 519, 51012, 51012, 300, 291, 458, 29834, 411, 290, 1720, 2322, 361, 82, 337, 1365, 764, 341, 4295, 9505, 75, 37765, 570, 309, 311, 51332, 51332, 257, 33941, 636, 295, 1242, 1412, 457, 806, 76, 741, 2809, 380, 1029, 337, 257, 1101, 636, 295, 6260, 365, 3467, 1412, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09142159379046896, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.5464996724622324e-05}, {"id": 637, "seek": 415964, "start": 4179.0, "end": 4184.84, "text": " a typed way of getting data but elm i couldn't ask for a better way of dealing with types data", "tokens": [50364, 2113, 281, 411, 257, 35623, 302, 300, 741, 362, 337, 445, 10205, 293, 979, 8616, 300, 1228, 257, 1412, 4009, 50664, 50664, 457, 309, 1985, 1985, 588, 9594, 457, 983, 457, 983, 576, 291, 764, 364, 37765, 411, 300, 741, 519, 51012, 51012, 300, 291, 458, 29834, 411, 290, 1720, 2322, 361, 82, 337, 1365, 764, 341, 4295, 9505, 75, 37765, 570, 309, 311, 51332, 51332, 257, 33941, 636, 295, 1242, 1412, 457, 806, 76, 741, 2809, 380, 1029, 337, 257, 1101, 636, 295, 6260, 365, 3467, 1412, 51624, 51624], "temperature": 0.0, "avg_logprob": -0.09142159379046896, "compression_ratio": 1.7488372093023257, "no_caption_prob": 2.5464996724622324e-05}, {"id": 638, "seek": 418484, "start": 4184.84, "end": 4191.32, "text": " than elm so yeah one of the principles of elm pages is to let elm shine and so anyway if you", "tokens": [50364, 813, 806, 76, 370, 1338, 472, 295, 264, 9156, 295, 806, 76, 7183, 307, 281, 718, 806, 76, 12207, 293, 370, 4033, 498, 291, 50688, 50728, 498, 291, 915, 300, 16694, 19020, 16141, 264, 1412, 300, 428, 3028, 5946, 322, 293, 27210, 51048, 51048, 300, 293, 1419, 309, 2435, 322, 3028, 3677, 307, 257, 4420, 37765, 550, 10486, 366, 806, 76, 7183, 51368, 51368, 486, 1391, 312, 257, 1238, 665, 3318, 1338, 741, 519, 445, 6370, 7533, 294, 2674, 498, 291, 498, 291, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.04031479495695268, "compression_ratio": 1.7429906542056075, "no_caption_prob": 2.1111700334586203e-05}, {"id": 639, "seek": 418484, "start": 4192.12, "end": 4198.52, "text": " if you find that declaratively describing the data that your page depends on and transforming", "tokens": [50364, 813, 806, 76, 370, 1338, 472, 295, 264, 9156, 295, 806, 76, 7183, 307, 281, 718, 806, 76, 12207, 293, 370, 4033, 498, 291, 50688, 50728, 498, 291, 915, 300, 16694, 19020, 16141, 264, 1412, 300, 428, 3028, 5946, 322, 293, 27210, 51048, 51048, 300, 293, 1419, 309, 2435, 322, 3028, 3677, 307, 257, 4420, 37765, 550, 10486, 366, 806, 76, 7183, 51368, 51368, 486, 1391, 312, 257, 1238, 665, 3318, 1338, 741, 519, 445, 6370, 7533, 294, 2674, 498, 291, 498, 291, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.04031479495695268, "compression_ratio": 1.7429906542056075, "no_caption_prob": 2.1111700334586203e-05}, {"id": 640, "seek": 418484, "start": 4198.52, "end": 4204.92, "text": " that and having it available on page load is a useful abstraction then chances are elm pages", "tokens": [50364, 813, 806, 76, 370, 1338, 472, 295, 264, 9156, 295, 806, 76, 7183, 307, 281, 718, 806, 76, 12207, 293, 370, 4033, 498, 291, 50688, 50728, 498, 291, 915, 300, 16694, 19020, 16141, 264, 1412, 300, 428, 3028, 5946, 322, 293, 27210, 51048, 51048, 300, 293, 1419, 309, 2435, 322, 3028, 3677, 307, 257, 4420, 37765, 550, 10486, 366, 806, 76, 7183, 51368, 51368, 486, 1391, 312, 257, 1238, 665, 3318, 1338, 741, 519, 445, 6370, 7533, 294, 2674, 498, 291, 498, 291, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.04031479495695268, "compression_ratio": 1.7429906542056075, "no_caption_prob": 2.1111700334586203e-05}, {"id": 641, "seek": 418484, "start": 4204.92, "end": 4210.4400000000005, "text": " will probably be a pretty good fit yeah i think just marketing sites in general if you if you", "tokens": [50364, 813, 806, 76, 370, 1338, 472, 295, 264, 9156, 295, 806, 76, 7183, 307, 281, 718, 806, 76, 12207, 293, 370, 4033, 498, 291, 50688, 50728, 498, 291, 915, 300, 16694, 19020, 16141, 264, 1412, 300, 428, 3028, 5946, 322, 293, 27210, 51048, 51048, 300, 293, 1419, 309, 2435, 322, 3028, 3677, 307, 257, 4420, 37765, 550, 10486, 366, 806, 76, 7183, 51368, 51368, 486, 1391, 312, 257, 1238, 665, 3318, 1338, 741, 519, 445, 6370, 7533, 294, 2674, 498, 291, 498, 291, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.04031479495695268, "compression_ratio": 1.7429906542056075, "no_caption_prob": 2.1111700334586203e-05}, {"id": 642, "seek": 421044, "start": 4210.44, "end": 4216.36, "text": " want to reuse like the same uh ui elements uh yeah can be a good fit even if you don't have", "tokens": [50364, 528, 281, 26225, 411, 264, 912, 2232, 344, 72, 4959, 2232, 1338, 393, 312, 257, 665, 3318, 754, 498, 291, 500, 380, 362, 50660, 50660, 604, 2701, 570, 412, 1935, 321, 603, 483, 1105, 2232, 659, 22407, 293, 4412, 1101, 369, 78, 16367, 1338, 51052, 51052, 370, 300, 311, 4420, 754, 498, 291, 500, 380, 362, 604, 1412, 7139, 281, 281, 23673, 490, 291, 393, 1338, 360, 2232, 1412, 51392, 51392, 4009, 5893, 7754, 281, 362, 281, 362, 13437, 1412, 7139, 558, 1338, 420, 445, 2232, 1152, 3089, 264, 1412, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10307796965254114, "compression_ratio": 1.8018867924528301, "no_caption_prob": 1.5206472198769916e-05}, {"id": 643, "seek": 421044, "start": 4216.36, "end": 4224.2, "text": " any content because at least we'll get um uh pre rendering and therefore better seo metrics yeah", "tokens": [50364, 528, 281, 26225, 411, 264, 912, 2232, 344, 72, 4959, 2232, 1338, 393, 312, 257, 665, 3318, 754, 498, 291, 500, 380, 362, 50660, 50660, 604, 2701, 570, 412, 1935, 321, 603, 483, 1105, 2232, 659, 22407, 293, 4412, 1101, 369, 78, 16367, 1338, 51052, 51052, 370, 300, 311, 4420, 754, 498, 291, 500, 380, 362, 604, 1412, 7139, 281, 281, 23673, 490, 291, 393, 1338, 360, 2232, 1412, 51392, 51392, 4009, 5893, 7754, 281, 362, 281, 362, 13437, 1412, 7139, 558, 1338, 420, 445, 2232, 1152, 3089, 264, 1412, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10307796965254114, "compression_ratio": 1.8018867924528301, "no_caption_prob": 1.5206472198769916e-05}, {"id": 644, "seek": 421044, "start": 4224.2, "end": 4231.0, "text": " so that's useful even if you don't have any data sources to to fetch from you can yeah do uh data", "tokens": [50364, 528, 281, 26225, 411, 264, 912, 2232, 344, 72, 4959, 2232, 1338, 393, 312, 257, 665, 3318, 754, 498, 291, 500, 380, 362, 50660, 50660, 604, 2701, 570, 412, 1935, 321, 603, 483, 1105, 2232, 659, 22407, 293, 4412, 1101, 369, 78, 16367, 1338, 51052, 51052, 370, 300, 311, 4420, 754, 498, 291, 500, 380, 362, 604, 1412, 7139, 281, 281, 23673, 490, 291, 393, 1338, 360, 2232, 1412, 51392, 51392, 4009, 5893, 7754, 281, 362, 281, 362, 13437, 1412, 7139, 558, 1338, 420, 445, 2232, 1152, 3089, 264, 1412, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10307796965254114, "compression_ratio": 1.8018867924528301, "no_caption_prob": 1.5206472198769916e-05}, {"id": 645, "seek": 421044, "start": 4231.0, "end": 4236.679999999999, "text": " source dot succeed to have to have static data sources right yeah or just uh hard code the data", "tokens": [50364, 528, 281, 26225, 411, 264, 912, 2232, 344, 72, 4959, 2232, 1338, 393, 312, 257, 665, 3318, 754, 498, 291, 500, 380, 362, 50660, 50660, 604, 2701, 570, 412, 1935, 321, 603, 483, 1105, 2232, 659, 22407, 293, 4412, 1101, 369, 78, 16367, 1338, 51052, 51052, 370, 300, 311, 4420, 754, 498, 291, 500, 380, 362, 604, 1412, 7139, 281, 281, 23673, 490, 291, 393, 1338, 360, 2232, 1412, 51392, 51392, 4009, 5893, 7754, 281, 362, 281, 362, 13437, 1412, 7139, 558, 1338, 420, 445, 2232, 1152, 3089, 264, 1412, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10307796965254114, "compression_ratio": 1.8018867924528301, "no_caption_prob": 1.5206472198769916e-05}, {"id": 646, "seek": 423668, "start": 4236.68, "end": 4240.92, "text": " into your views or whatever it might be yeah absolutely that's that's true that's true right", "tokens": [50364, 666, 428, 6809, 420, 2035, 309, 1062, 312, 1338, 3122, 300, 311, 300, 311, 2074, 300, 311, 2074, 558, 50576, 50576, 457, 498, 291, 500, 380, 643, 659, 22407, 420, 1412, 7139, 550, 1391, 406, 437, 291, 643, 1338, 50776, 50812, 457, 1338, 741, 1604, 300, 321, 2825, 412, 472, 295, 452, 3894, 2237, 466, 1228, 806, 76, 293, 472, 295, 264, 51076, 51076, 7389, 390, 369, 78, 370, 806, 76, 7183, 6063, 39890, 300, 1338, 1338, 411, 291, 500, 380, 643, 369, 78, 291, 458, 291, 2232, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06245113455730936, "compression_ratio": 1.7699530516431925, "no_caption_prob": 5.307346873451024e-05}, {"id": 647, "seek": 423668, "start": 4240.92, "end": 4244.92, "text": " but if you don't need pre rendering or data sources then probably not what you need yeah", "tokens": [50364, 666, 428, 6809, 420, 2035, 309, 1062, 312, 1338, 3122, 300, 311, 300, 311, 2074, 300, 311, 2074, 558, 50576, 50576, 457, 498, 291, 500, 380, 643, 659, 22407, 420, 1412, 7139, 550, 1391, 406, 437, 291, 643, 1338, 50776, 50812, 457, 1338, 741, 1604, 300, 321, 2825, 412, 472, 295, 452, 3894, 2237, 466, 1228, 806, 76, 293, 472, 295, 264, 51076, 51076, 7389, 390, 369, 78, 370, 806, 76, 7183, 6063, 39890, 300, 1338, 1338, 411, 291, 500, 380, 643, 369, 78, 291, 458, 291, 2232, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06245113455730936, "compression_ratio": 1.7699530516431925, "no_caption_prob": 5.307346873451024e-05}, {"id": 648, "seek": 423668, "start": 4245.64, "end": 4250.92, "text": " but yeah i remember that we talked at one of my previous company about using elm and one of the", "tokens": [50364, 666, 428, 6809, 420, 2035, 309, 1062, 312, 1338, 3122, 300, 311, 300, 311, 2074, 300, 311, 2074, 558, 50576, 50576, 457, 498, 291, 500, 380, 643, 659, 22407, 420, 1412, 7139, 550, 1391, 406, 437, 291, 643, 1338, 50776, 50812, 457, 1338, 741, 1604, 300, 321, 2825, 412, 472, 295, 452, 3894, 2237, 466, 1228, 806, 76, 293, 472, 295, 264, 51076, 51076, 7389, 390, 369, 78, 370, 806, 76, 7183, 6063, 39890, 300, 1338, 1338, 411, 291, 500, 380, 643, 369, 78, 291, 458, 291, 2232, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06245113455730936, "compression_ratio": 1.7699530516431925, "no_caption_prob": 5.307346873451024e-05}, {"id": 649, "seek": 423668, "start": 4250.92, "end": 4260.68, "text": " concerns was seo so elm pages somehow solves that yeah yeah like you don't need seo you know you uh", "tokens": [50364, 666, 428, 6809, 420, 2035, 309, 1062, 312, 1338, 3122, 300, 311, 300, 311, 2074, 300, 311, 2074, 558, 50576, 50576, 457, 498, 291, 500, 380, 643, 659, 22407, 420, 1412, 7139, 550, 1391, 406, 437, 291, 643, 1338, 50776, 50812, 457, 1338, 741, 1604, 300, 321, 2825, 412, 472, 295, 452, 3894, 2237, 466, 1228, 806, 76, 293, 472, 295, 264, 51076, 51076, 7389, 390, 369, 78, 370, 806, 76, 7183, 6063, 39890, 300, 1338, 1338, 411, 291, 500, 380, 643, 369, 78, 291, 458, 291, 2232, 51564, 51564], "temperature": 0.0, "avg_logprob": -0.06245113455730936, "compression_ratio": 1.7699530516431925, "no_caption_prob": 5.307346873451024e-05}, {"id": 650, "seek": 426068, "start": 4260.68, "end": 4266.68, "text": " if it's like internal user authenticated pages no yeah yeah then you don't need it it's not going to", "tokens": [50364, 498, 309, 311, 411, 6920, 4195, 9214, 3587, 7183, 572, 1338, 1338, 550, 291, 500, 380, 643, 309, 309, 311, 406, 516, 281, 50664, 50664, 854, 291, 484, 456, 370, 369, 78, 307, 291, 458, 741, 914, 472, 472, 4978, 295, 9298, 300, 561, 2171, 764, 337, 50964, 50964, 7872, 372, 501, 7533, 885, 257, 665, 11532, 337, 7872, 372, 501, 307, 360, 360, 561, 536, 264, 912, 2701, 562, 436, 352, 51268, 51268, 281, 264, 3028, 293, 291, 393, 1333, 295, 11985, 309, 365, 512, 4195, 2685, 2701, 498, 2618, 311, 27231, 294, 51564, 51592], "temperature": 0.0, "avg_logprob": -0.05737836020333426, "compression_ratio": 1.7412280701754386, "no_caption_prob": 2.1111773094162345e-05}, {"id": 651, "seek": 426068, "start": 4266.68, "end": 4272.68, "text": " help you out there so seo is you know i mean one one rule of thumb that people sometimes use for", "tokens": [50364, 498, 309, 311, 411, 6920, 4195, 9214, 3587, 7183, 572, 1338, 1338, 550, 291, 500, 380, 643, 309, 309, 311, 406, 516, 281, 50664, 50664, 854, 291, 484, 456, 370, 369, 78, 307, 291, 458, 741, 914, 472, 472, 4978, 295, 9298, 300, 561, 2171, 764, 337, 50964, 50964, 7872, 372, 501, 7533, 885, 257, 665, 11532, 337, 7872, 372, 501, 307, 360, 360, 561, 536, 264, 912, 2701, 562, 436, 352, 51268, 51268, 281, 264, 3028, 293, 291, 393, 1333, 295, 11985, 309, 365, 512, 4195, 2685, 2701, 498, 2618, 311, 27231, 294, 51564, 51592], "temperature": 0.0, "avg_logprob": -0.05737836020333426, "compression_ratio": 1.7412280701754386, "no_caption_prob": 2.1111773094162345e-05}, {"id": 652, "seek": 426068, "start": 4272.68, "end": 4278.76, "text": " jamstack sites being a good candidate for jamstack is do do people see the same content when they go", "tokens": [50364, 498, 309, 311, 411, 6920, 4195, 9214, 3587, 7183, 572, 1338, 1338, 550, 291, 500, 380, 643, 309, 309, 311, 406, 516, 281, 50664, 50664, 854, 291, 484, 456, 370, 369, 78, 307, 291, 458, 741, 914, 472, 472, 4978, 295, 9298, 300, 561, 2171, 764, 337, 50964, 50964, 7872, 372, 501, 7533, 885, 257, 665, 11532, 337, 7872, 372, 501, 307, 360, 360, 561, 536, 264, 912, 2701, 562, 436, 352, 51268, 51268, 281, 264, 3028, 293, 291, 393, 1333, 295, 11985, 309, 365, 512, 4195, 2685, 2701, 498, 2618, 311, 27231, 294, 51564, 51592], "temperature": 0.0, "avg_logprob": -0.05737836020333426, "compression_ratio": 1.7412280701754386, "no_caption_prob": 2.1111773094162345e-05}, {"id": 653, "seek": 426068, "start": 4278.76, "end": 4284.68, "text": " to the page and you can sort of enhance it with some user specific content if somebody's logged in", "tokens": [50364, 498, 309, 311, 411, 6920, 4195, 9214, 3587, 7183, 572, 1338, 1338, 550, 291, 500, 380, 643, 309, 309, 311, 406, 516, 281, 50664, 50664, 854, 291, 484, 456, 370, 369, 78, 307, 291, 458, 741, 914, 472, 472, 4978, 295, 9298, 300, 561, 2171, 764, 337, 50964, 50964, 7872, 372, 501, 7533, 885, 257, 665, 11532, 337, 7872, 372, 501, 307, 360, 360, 561, 536, 264, 912, 2701, 562, 436, 352, 51268, 51268, 281, 264, 3028, 293, 291, 393, 1333, 295, 11985, 309, 365, 512, 4195, 2685, 2701, 498, 2618, 311, 27231, 294, 51564, 51592], "temperature": 0.0, "avg_logprob": -0.05737836020333426, "compression_ratio": 1.7412280701754386, "no_caption_prob": 2.1111773094162345e-05}, {"id": 654, "seek": 428468, "start": 4284.68, "end": 4292.04, "text": " but they're seeing an ecommerce page and they can see their shopping cart items but otherwise it's", "tokens": [50364, 457, 436, 434, 2577, 364, 308, 26926, 3028, 293, 436, 393, 536, 641, 8688, 5467, 4754, 457, 5911, 309, 311, 50732, 50732, 264, 912, 1900, 3028, 337, 2201, 293, 575, 264, 912, 14228, 337, 2201, 420, 2035, 309, 815, 312, 50968, 50968, 293, 293, 729, 721, 534, 643, 281, 362, 369, 78, 293, 291, 528, 281, 362, 665, 700, 4225, 1413, 382, 731, 51264, 51264, 1392, 741, 519, 309, 311, 565, 281, 281, 1998, 370, 806, 76, 7183, 307, 257, 1716, 300, 2516, 1412, 7139, 295, 604, 1333, 51704, 51720], "temperature": 0.0, "avg_logprob": -0.13004573531772778, "compression_ratio": 1.760180995475113, "no_caption_prob": 3.8227510231081396e-05}, {"id": 655, "seek": 428468, "start": 4292.04, "end": 4296.76, "text": " the same exact page for everybody and has the same inventory for everybody or whatever it may be", "tokens": [50364, 457, 436, 434, 2577, 364, 308, 26926, 3028, 293, 436, 393, 536, 641, 8688, 5467, 4754, 457, 5911, 309, 311, 50732, 50732, 264, 912, 1900, 3028, 337, 2201, 293, 575, 264, 912, 14228, 337, 2201, 420, 2035, 309, 815, 312, 50968, 50968, 293, 293, 729, 721, 534, 643, 281, 362, 369, 78, 293, 291, 528, 281, 362, 665, 700, 4225, 1413, 382, 731, 51264, 51264, 1392, 741, 519, 309, 311, 565, 281, 281, 1998, 370, 806, 76, 7183, 307, 257, 1716, 300, 2516, 1412, 7139, 295, 604, 1333, 51704, 51720], "temperature": 0.0, "avg_logprob": -0.13004573531772778, "compression_ratio": 1.760180995475113, "no_caption_prob": 3.8227510231081396e-05}, {"id": 656, "seek": 428468, "start": 4296.76, "end": 4302.68, "text": " and and those things really need to have seo and you want to have good first paint times as well", "tokens": [50364, 457, 436, 434, 2577, 364, 308, 26926, 3028, 293, 436, 393, 536, 641, 8688, 5467, 4754, 457, 5911, 309, 311, 50732, 50732, 264, 912, 1900, 3028, 337, 2201, 293, 575, 264, 912, 14228, 337, 2201, 420, 2035, 309, 815, 312, 50968, 50968, 293, 293, 729, 721, 534, 643, 281, 362, 369, 78, 293, 291, 528, 281, 362, 665, 700, 4225, 1413, 382, 731, 51264, 51264, 1392, 741, 519, 309, 311, 565, 281, 281, 1998, 370, 806, 76, 7183, 307, 257, 1716, 300, 2516, 1412, 7139, 295, 604, 1333, 51704, 51720], "temperature": 0.0, "avg_logprob": -0.13004573531772778, "compression_ratio": 1.760180995475113, "no_caption_prob": 3.8227510231081396e-05}, {"id": 657, "seek": 428468, "start": 4302.68, "end": 4311.4800000000005, "text": " okay i think it's time to to close so elm pages is a project that takes data sources of any sort", "tokens": [50364, 457, 436, 434, 2577, 364, 308, 26926, 3028, 293, 436, 393, 536, 641, 8688, 5467, 4754, 457, 5911, 309, 311, 50732, 50732, 264, 912, 1900, 3028, 337, 2201, 293, 575, 264, 912, 14228, 337, 2201, 420, 2035, 309, 815, 312, 50968, 50968, 293, 293, 729, 721, 534, 643, 281, 362, 369, 78, 293, 291, 528, 281, 362, 665, 700, 4225, 1413, 382, 731, 51264, 51264, 1392, 741, 519, 309, 311, 565, 281, 281, 1998, 370, 806, 76, 7183, 307, 257, 1716, 300, 2516, 1412, 7139, 295, 604, 1333, 51704, 51720], "temperature": 0.0, "avg_logprob": -0.13004573531772778, "compression_ratio": 1.760180995475113, "no_caption_prob": 3.8227510231081396e-05}, {"id": 658, "seek": 431148, "start": 4311.48, "end": 4321.5599999999995, "text": " and builds static html files rss feeds css files javascript files and therefore elm applications", "tokens": [50364, 293, 15182, 13437, 276, 83, 15480, 7098, 367, 3810, 23712, 269, 3810, 7098, 361, 37331, 5944, 7098, 293, 4412, 806, 76, 5821, 50868, 50920, 300, 291, 7274, 281, 257, 269, 67, 77, 293, 498, 412, 512, 498, 412, 604, 935, 291, 362, 746, 300, 2067, 380, 382, 5176, 51332, 51332, 291, 483, 257, 1322, 6713, 293, 1830, 264, 806, 76, 3861, 291, 920, 362, 806, 76, 337, 439, 264, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1675372058398103, "compression_ratio": 1.7329192546583851, "no_caption_prob": 2.355148535571061e-05}, {"id": 659, "seek": 431148, "start": 4322.599999999999, "end": 4330.839999999999, "text": " that you deploy to a cdn and if at some if at any point you have something that wasn't as expected", "tokens": [50364, 293, 15182, 13437, 276, 83, 15480, 7098, 367, 3810, 23712, 269, 3810, 7098, 361, 37331, 5944, 7098, 293, 4412, 806, 76, 5821, 50868, 50920, 300, 291, 7274, 281, 257, 269, 67, 77, 293, 498, 412, 512, 498, 412, 604, 935, 291, 362, 746, 300, 2067, 380, 382, 5176, 51332, 51332, 291, 483, 257, 1322, 6713, 293, 1830, 264, 806, 76, 3861, 291, 920, 362, 806, 76, 337, 439, 264, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1675372058398103, "compression_ratio": 1.7329192546583851, "no_caption_prob": 2.355148535571061e-05}, {"id": 660, "seek": 431148, "start": 4330.839999999999, "end": 4336.599999999999, "text": " you get a build error and during the elm application you still have elm for all the", "tokens": [50364, 293, 15182, 13437, 276, 83, 15480, 7098, 367, 3810, 23712, 269, 3810, 7098, 361, 37331, 5944, 7098, 293, 4412, 806, 76, 5821, 50868, 50920, 300, 291, 7274, 281, 257, 269, 67, 77, 293, 498, 412, 512, 498, 412, 604, 935, 291, 362, 746, 300, 2067, 380, 382, 5176, 51332, 51332, 291, 483, 257, 1322, 6713, 293, 1830, 264, 806, 76, 3861, 291, 920, 362, 806, 76, 337, 439, 264, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.1675372058398103, "compression_ratio": 1.7329192546583851, "no_caption_prob": 2.355148535571061e-05}, {"id": 661, "seek": 433660, "start": 4336.6, "end": 4344.200000000001, "text": " nice things that it has is that a okay summary i'd say so yeah that's a great summary now there", "tokens": [50364, 1481, 721, 300, 309, 575, 307, 300, 257, 1392, 12691, 741, 1116, 584, 370, 1338, 300, 311, 257, 869, 12691, 586, 456, 50744, 50744, 366, 2940, 721, 321, 994, 380, 483, 281, 2557, 322, 965, 370, 321, 1062, 643, 281, 360, 364, 806, 76, 7183, 568, 13, 15, 644, 568, 51064, 51064, 3500, 2232, 445, 281, 9961, 493, 527, 2232, 9668, 295, 36553, 337, 806, 76, 7183, 4077, 9313, 257, 707, 51396, 51396], "temperature": 0.0, "avg_logprob": -0.11902566274007162, "compression_ratio": 1.6077348066298343, "no_caption_prob": 1.221874754264718e-05}, {"id": 662, "seek": 433660, "start": 4344.200000000001, "end": 4350.6, "text": " are several things we didn't get to touch on today so we might need to do an elm pages 2.0 part 2", "tokens": [50364, 1481, 721, 300, 309, 575, 307, 300, 257, 1392, 12691, 741, 1116, 584, 370, 1338, 300, 311, 257, 869, 12691, 586, 456, 50744, 50744, 366, 2940, 721, 321, 994, 380, 483, 281, 2557, 322, 965, 370, 321, 1062, 643, 281, 360, 364, 806, 76, 7183, 568, 13, 15, 644, 568, 51064, 51064, 3500, 2232, 445, 281, 9961, 493, 527, 2232, 9668, 295, 36553, 337, 806, 76, 7183, 4077, 9313, 257, 707, 51396, 51396], "temperature": 0.0, "avg_logprob": -0.11902566274007162, "compression_ratio": 1.6077348066298343, "no_caption_prob": 1.221874754264718e-05}, {"id": 663, "seek": 433660, "start": 4350.6, "end": 4357.240000000001, "text": " episode uh just to bump up our uh percentage of downloads for elm pages related episodes a little", "tokens": [50364, 1481, 721, 300, 309, 575, 307, 300, 257, 1392, 12691, 741, 1116, 584, 370, 1338, 300, 311, 257, 869, 12691, 586, 456, 50744, 50744, 366, 2940, 721, 321, 994, 380, 483, 281, 2557, 322, 965, 370, 321, 1062, 643, 281, 360, 364, 806, 76, 7183, 568, 13, 15, 644, 568, 51064, 51064, 3500, 2232, 445, 281, 9961, 493, 527, 2232, 9668, 295, 36553, 337, 806, 76, 7183, 4077, 9313, 257, 707, 51396, 51396], "temperature": 0.0, "avg_logprob": -0.11902566274007162, "compression_ratio": 1.6077348066298343, "no_caption_prob": 1.221874754264718e-05}, {"id": 664, "seek": 435724, "start": 4357.24, "end": 4368.36, "text": " bit but um take that elm ui uh we didn't talk about sort of uh the the api routes and you know", "tokens": [50364, 857, 457, 1105, 747, 300, 806, 76, 344, 72, 2232, 321, 994, 380, 751, 466, 1333, 295, 2232, 264, 264, 1882, 72, 18242, 293, 291, 458, 50920, 50920, 3991, 5125, 644, 295, 309, 321, 994, 380, 751, 466, 7154, 1832, 293, 322, 4733, 597, 307, 544, 8961, 370, 51168, 51168, 1310, 562, 300, 11652, 5660, 321, 393, 32676, 300, 457, 1338, 300, 2232, 300, 311, 534, 264, 1917, 295, 806, 76, 51396, 51396, 7183, 741, 519, 321, 5343, 309, 1238, 731, 293, 291, 291, 829, 257, 688, 295, 4630, 293, 959, 666, 264, 1905, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.09525230952671596, "compression_ratio": 1.7710280373831775, "no_caption_prob": 2.212495201092679e-05}, {"id": 665, "seek": 435724, "start": 4368.36, "end": 4373.32, "text": " file generation part of it we didn't talk about serverless and on demand which is more alpha so", "tokens": [50364, 857, 457, 1105, 747, 300, 806, 76, 344, 72, 2232, 321, 994, 380, 751, 466, 1333, 295, 2232, 264, 264, 1882, 72, 18242, 293, 291, 458, 50920, 50920, 3991, 5125, 644, 295, 309, 321, 994, 380, 751, 466, 7154, 1832, 293, 322, 4733, 597, 307, 544, 8961, 370, 51168, 51168, 1310, 562, 300, 11652, 5660, 321, 393, 32676, 300, 457, 1338, 300, 2232, 300, 311, 534, 264, 1917, 295, 806, 76, 51396, 51396, 7183, 741, 519, 321, 5343, 309, 1238, 731, 293, 291, 291, 829, 257, 688, 295, 4630, 293, 959, 666, 264, 1905, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.09525230952671596, "compression_ratio": 1.7710280373831775, "no_caption_prob": 2.212495201092679e-05}, {"id": 666, "seek": 435724, "start": 4373.32, "end": 4377.88, "text": " maybe when that stabilizes we can revisit that but yeah that uh that's really the heart of elm", "tokens": [50364, 857, 457, 1105, 747, 300, 806, 76, 344, 72, 2232, 321, 994, 380, 751, 466, 1333, 295, 2232, 264, 264, 1882, 72, 18242, 293, 291, 458, 50920, 50920, 3991, 5125, 644, 295, 309, 321, 994, 380, 751, 466, 7154, 1832, 293, 322, 4733, 597, 307, 544, 8961, 370, 51168, 51168, 1310, 562, 300, 11652, 5660, 321, 393, 32676, 300, 457, 1338, 300, 2232, 300, 311, 534, 264, 1917, 295, 806, 76, 51396, 51396, 7183, 741, 519, 321, 5343, 309, 1238, 731, 293, 291, 291, 829, 257, 688, 295, 4630, 293, 959, 666, 264, 1905, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.09525230952671596, "compression_ratio": 1.7710280373831775, "no_caption_prob": 2.212495201092679e-05}, {"id": 667, "seek": 435724, "start": 4377.88, "end": 4383.48, "text": " pages i think we covered it pretty well and you you put a lot of effort and love into the dev", "tokens": [50364, 857, 457, 1105, 747, 300, 806, 76, 344, 72, 2232, 321, 994, 380, 751, 466, 1333, 295, 2232, 264, 264, 1882, 72, 18242, 293, 291, 458, 50920, 50920, 3991, 5125, 644, 295, 309, 321, 994, 380, 751, 466, 7154, 1832, 293, 322, 4733, 597, 307, 544, 8961, 370, 51168, 51168, 1310, 562, 300, 11652, 5660, 321, 393, 32676, 300, 457, 1338, 300, 2232, 300, 311, 534, 264, 1917, 295, 806, 76, 51396, 51396, 7183, 741, 519, 321, 5343, 309, 1238, 731, 293, 291, 291, 829, 257, 688, 295, 4630, 293, 959, 666, 264, 1905, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.09525230952671596, "compression_ratio": 1.7710280373831775, "no_caption_prob": 2.212495201092679e-05}, {"id": 668, "seek": 438348, "start": 4383.48, "end": 4388.919999999999, "text": " experience also we didn't talk too much about it but from what i can see without having tried it", "tokens": [50364, 1752, 611, 321, 994, 380, 751, 886, 709, 466, 309, 457, 490, 437, 741, 393, 536, 1553, 1419, 3031, 309, 50636, 50636, 886, 709, 309, 534, 1542, 411, 291, 829, 257, 688, 295, 959, 666, 300, 370, 300, 311, 1309, 291, 1338, 1338, 572, 50984, 50984, 300, 311, 300, 311, 2074, 741, 1105, 741, 478, 534, 10587, 365, 264, 9482, 294, 1186, 411, 264, 1379, 16197, 51316, 51316, 295, 806, 76, 7183, 568, 13, 15, 4283, 365, 1382, 281, 1105, 2232, 15340, 337, 1771, 567, 311, 668, 411, 534, 3476, 445, 411, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0998343030611674, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.3735050237737596e-05}, {"id": 669, "seek": 438348, "start": 4388.919999999999, "end": 4395.879999999999, "text": " too much it really looks like you put a lot of love into that so that's thank you yeah yeah no", "tokens": [50364, 1752, 611, 321, 994, 380, 751, 886, 709, 466, 309, 457, 490, 437, 741, 393, 536, 1553, 1419, 3031, 309, 50636, 50636, 886, 709, 309, 534, 1542, 411, 291, 829, 257, 688, 295, 959, 666, 300, 370, 300, 311, 1309, 291, 1338, 1338, 572, 50984, 50984, 300, 311, 300, 311, 2074, 741, 1105, 741, 478, 534, 10587, 365, 264, 9482, 294, 1186, 411, 264, 1379, 16197, 51316, 51316, 295, 806, 76, 7183, 568, 13, 15, 4283, 365, 1382, 281, 1105, 2232, 15340, 337, 1771, 567, 311, 668, 411, 534, 3476, 445, 411, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0998343030611674, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.3735050237737596e-05}, {"id": 670, "seek": 438348, "start": 4395.879999999999, "end": 4402.5199999999995, "text": " that's that's true i um i'm really pleased with the architecture in fact like the whole exploration", "tokens": [50364, 1752, 611, 321, 994, 380, 751, 886, 709, 466, 309, 457, 490, 437, 741, 393, 536, 1553, 1419, 3031, 309, 50636, 50636, 886, 709, 309, 534, 1542, 411, 291, 829, 257, 688, 295, 959, 666, 300, 370, 300, 311, 1309, 291, 1338, 1338, 572, 50984, 50984, 300, 311, 300, 311, 2074, 741, 1105, 741, 478, 534, 10587, 365, 264, 9482, 294, 1186, 411, 264, 1379, 16197, 51316, 51316, 295, 806, 76, 7183, 568, 13, 15, 4283, 365, 1382, 281, 1105, 2232, 15340, 337, 1771, 567, 311, 668, 411, 534, 3476, 445, 411, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0998343030611674, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.3735050237737596e-05}, {"id": 671, "seek": 438348, "start": 4402.5199999999995, "end": 4411.5599999999995, "text": " of elm pages 2.0 began with trying to um uh sev forno who's been like really awesome just like", "tokens": [50364, 1752, 611, 321, 994, 380, 751, 886, 709, 466, 309, 457, 490, 437, 741, 393, 536, 1553, 1419, 3031, 309, 50636, 50636, 886, 709, 309, 534, 1542, 411, 291, 829, 257, 688, 295, 959, 666, 300, 370, 300, 311, 1309, 291, 1338, 1338, 572, 50984, 50984, 300, 311, 300, 311, 2074, 741, 1105, 741, 478, 534, 10587, 365, 264, 9482, 294, 1186, 411, 264, 1379, 16197, 51316, 51316, 295, 806, 76, 7183, 568, 13, 15, 4283, 365, 1382, 281, 1105, 2232, 15340, 337, 1771, 567, 311, 668, 411, 534, 3476, 445, 411, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.0998343030611674, "compression_ratio": 1.7004405286343611, "no_caption_prob": 3.3735050237737596e-05}, {"id": 672, "seek": 441156, "start": 4411.56, "end": 4418.280000000001, "text": " discussing all these ideas of directions elm pages can go with me um was sort of saying like hey i", "tokens": [50364, 10850, 439, 613, 3487, 295, 11095, 806, 76, 7183, 393, 352, 365, 385, 1105, 390, 1333, 295, 1566, 411, 4177, 741, 50700, 50700, 2441, 498, 806, 76, 7183, 727, 360, 7154, 1832, 22407, 741, 519, 300, 311, 689, 264, 806, 76, 7183, 568, 13, 15, 16197, 51020, 51020, 1409, 570, 300, 4590, 493, 885, 257, 7410, 23229, 2406, 6527, 597, 2232, 741, 741, 2928, 309, 390, 4651, 293, 51324, 51324, 2232, 741, 4590, 493, 2390, 300, 293, 1566, 411, 1954, 291, 767, 393, 293, 767, 586, 300, 741, 362, 341, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.06070985185339096, "compression_ratio": 1.7400881057268722, "no_caption_prob": 2.7533516913536005e-05}, {"id": 673, "seek": 441156, "start": 4418.280000000001, "end": 4424.68, "text": " wonder if elm pages could do serverless rendering i think that's where the elm pages 2.0 exploration", "tokens": [50364, 10850, 439, 613, 3487, 295, 11095, 806, 76, 7183, 393, 352, 365, 385, 1105, 390, 1333, 295, 1566, 411, 4177, 741, 50700, 50700, 2441, 498, 806, 76, 7183, 727, 360, 7154, 1832, 22407, 741, 519, 300, 311, 689, 264, 806, 76, 7183, 568, 13, 15, 16197, 51020, 51020, 1409, 570, 300, 4590, 493, 885, 257, 7410, 23229, 2406, 6527, 597, 2232, 741, 741, 2928, 309, 390, 4651, 293, 51324, 51324, 2232, 741, 4590, 493, 2390, 300, 293, 1566, 411, 1954, 291, 767, 393, 293, 767, 586, 300, 741, 362, 341, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.06070985185339096, "compression_ratio": 1.7400881057268722, "no_caption_prob": 2.7533516913536005e-05}, {"id": 674, "seek": 441156, "start": 4424.68, "end": 4430.76, "text": " started because that ended up being a giant nerd snipe which uh i i welcome it was incredible and", "tokens": [50364, 10850, 439, 613, 3487, 295, 11095, 806, 76, 7183, 393, 352, 365, 385, 1105, 390, 1333, 295, 1566, 411, 4177, 741, 50700, 50700, 2441, 498, 806, 76, 7183, 727, 360, 7154, 1832, 22407, 741, 519, 300, 311, 689, 264, 806, 76, 7183, 568, 13, 15, 16197, 51020, 51020, 1409, 570, 300, 4590, 493, 885, 257, 7410, 23229, 2406, 6527, 597, 2232, 741, 741, 2928, 309, 390, 4651, 293, 51324, 51324, 2232, 741, 4590, 493, 2390, 300, 293, 1566, 411, 1954, 291, 767, 393, 293, 767, 586, 300, 741, 362, 341, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.06070985185339096, "compression_ratio": 1.7400881057268722, "no_caption_prob": 2.7533516913536005e-05}, {"id": 675, "seek": 441156, "start": 4430.76, "end": 4437.4800000000005, "text": " uh i ended up building that and saying like oh you actually can and actually now that i have this", "tokens": [50364, 10850, 439, 613, 3487, 295, 11095, 806, 76, 7183, 393, 352, 365, 385, 1105, 390, 1333, 295, 1566, 411, 4177, 741, 50700, 50700, 2441, 498, 806, 76, 7183, 727, 360, 7154, 1832, 22407, 741, 519, 300, 311, 689, 264, 806, 76, 7183, 568, 13, 15, 16197, 51020, 51020, 1409, 570, 300, 4590, 493, 885, 257, 7410, 23229, 2406, 6527, 597, 2232, 741, 741, 2928, 309, 390, 4651, 293, 51324, 51324, 2232, 741, 4590, 493, 2390, 300, 293, 1566, 411, 1954, 291, 767, 393, 293, 767, 586, 300, 741, 362, 341, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.06070985185339096, "compression_ratio": 1.7400881057268722, "no_caption_prob": 2.7533516913536005e-05}, {"id": 676, "seek": 443748, "start": 4437.48, "end": 4444.28, "text": " mechanism for give me a single page and i will render that page instead of doing like full", "tokens": [50364, 7513, 337, 976, 385, 257, 2167, 3028, 293, 741, 486, 15529, 300, 3028, 2602, 295, 884, 411, 1577, 50704, 50704, 15182, 293, 22407, 1203, 731, 4177, 300, 311, 534, 1627, 337, 257, 1905, 7154, 570, 321, 393, 659, 50964, 50964, 15529, 7183, 294, 264, 1905, 7154, 293, 321, 393, 360, 1203, 294, 341, 1333, 295, 445, 294, 565, 6700, 51224, 51224, 2831, 813, 2232, 370, 291, 458, 294, 294, 264, 3758, 295, 3873, 411, 371, 83, 293, 5756, 9539, 445, 588, 12910, 51564, 51564, 884, 264, 7285, 2372, 295, 589, 281, 976, 291, 2368, 25628, 82, 293, 1507, 411, 300, 293, 370, 4033, 1338, 264, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.052149798891959934, "compression_ratio": 1.8503937007874016, "no_caption_prob": 2.977114672830794e-05}, {"id": 677, "seek": 443748, "start": 4444.28, "end": 4449.48, "text": " builds and rendering everything well hey that's really cool for a dev server because we can pre", "tokens": [50364, 7513, 337, 976, 385, 257, 2167, 3028, 293, 741, 486, 15529, 300, 3028, 2602, 295, 884, 411, 1577, 50704, 50704, 15182, 293, 22407, 1203, 731, 4177, 300, 311, 534, 1627, 337, 257, 1905, 7154, 570, 321, 393, 659, 50964, 50964, 15529, 7183, 294, 264, 1905, 7154, 293, 321, 393, 360, 1203, 294, 341, 1333, 295, 445, 294, 565, 6700, 51224, 51224, 2831, 813, 2232, 370, 291, 458, 294, 294, 264, 3758, 295, 3873, 411, 371, 83, 293, 5756, 9539, 445, 588, 12910, 51564, 51564, 884, 264, 7285, 2372, 295, 589, 281, 976, 291, 2368, 25628, 82, 293, 1507, 411, 300, 293, 370, 4033, 1338, 264, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.052149798891959934, "compression_ratio": 1.8503937007874016, "no_caption_prob": 2.977114672830794e-05}, {"id": 678, "seek": 443748, "start": 4449.48, "end": 4454.679999999999, "text": " render pages in the dev server and we can do everything in this sort of just in time fashion", "tokens": [50364, 7513, 337, 976, 385, 257, 2167, 3028, 293, 741, 486, 15529, 300, 3028, 2602, 295, 884, 411, 1577, 50704, 50704, 15182, 293, 22407, 1203, 731, 4177, 300, 311, 534, 1627, 337, 257, 1905, 7154, 570, 321, 393, 659, 50964, 50964, 15529, 7183, 294, 264, 1905, 7154, 293, 321, 393, 360, 1203, 294, 341, 1333, 295, 445, 294, 565, 6700, 51224, 51224, 2831, 813, 2232, 370, 291, 458, 294, 294, 264, 3758, 295, 3873, 411, 371, 83, 293, 5756, 9539, 445, 588, 12910, 51564, 51564, 884, 264, 7285, 2372, 295, 589, 281, 976, 291, 2368, 25628, 82, 293, 1507, 411, 300, 293, 370, 4033, 1338, 264, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.052149798891959934, "compression_ratio": 1.8503937007874016, "no_caption_prob": 2.977114672830794e-05}, {"id": 679, "seek": 443748, "start": 4454.679999999999, "end": 4461.48, "text": " rather than uh so you know in in the style of tools like vt and snowpack just very rapidly", "tokens": [50364, 7513, 337, 976, 385, 257, 2167, 3028, 293, 741, 486, 15529, 300, 3028, 2602, 295, 884, 411, 1577, 50704, 50704, 15182, 293, 22407, 1203, 731, 4177, 300, 311, 534, 1627, 337, 257, 1905, 7154, 570, 321, 393, 659, 50964, 50964, 15529, 7183, 294, 264, 1905, 7154, 293, 321, 393, 360, 1203, 294, 341, 1333, 295, 445, 294, 565, 6700, 51224, 51224, 2831, 813, 2232, 370, 291, 458, 294, 294, 264, 3758, 295, 3873, 411, 371, 83, 293, 5756, 9539, 445, 588, 12910, 51564, 51564, 884, 264, 7285, 2372, 295, 589, 281, 976, 291, 2368, 25628, 82, 293, 1507, 411, 300, 293, 370, 4033, 1338, 264, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.052149798891959934, "compression_ratio": 1.8503937007874016, "no_caption_prob": 2.977114672830794e-05}, {"id": 680, "seek": 443748, "start": 4461.48, "end": 4466.04, "text": " doing the minimum amount of work to give you hot reloads and stuff like that and so anyway yeah the", "tokens": [50364, 7513, 337, 976, 385, 257, 2167, 3028, 293, 741, 486, 15529, 300, 3028, 2602, 295, 884, 411, 1577, 50704, 50704, 15182, 293, 22407, 1203, 731, 4177, 300, 311, 534, 1627, 337, 257, 1905, 7154, 570, 321, 393, 659, 50964, 50964, 15529, 7183, 294, 264, 1905, 7154, 293, 321, 393, 360, 1203, 294, 341, 1333, 295, 445, 294, 565, 6700, 51224, 51224, 2831, 813, 2232, 370, 291, 458, 294, 294, 264, 3758, 295, 3873, 411, 371, 83, 293, 5756, 9539, 445, 588, 12910, 51564, 51564, 884, 264, 7285, 2372, 295, 589, 281, 976, 291, 2368, 25628, 82, 293, 1507, 411, 300, 293, 370, 4033, 1338, 264, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.052149798891959934, "compression_ratio": 1.8503937007874016, "no_caption_prob": 2.977114672830794e-05}, {"id": 681, "seek": 446604, "start": 4466.04, "end": 4472.36, "text": " the the architecture um i'm very pleased with and and i've tried to make the performance really", "tokens": [50364, 264, 264, 9482, 1105, 741, 478, 588, 10587, 365, 293, 293, 741, 600, 3031, 281, 652, 264, 3389, 534, 50680, 50708, 3449, 1188, 2370, 293, 309, 311, 309, 311, 2633, 534, 1481, 281, 589, 365, 439, 558, 370, 577, 360, 561, 483, 1409, 50952, 50952, 365, 264, 806, 76, 7183, 2232, 1520, 484, 264, 45623, 456, 311, 257, 4451, 3211, 3621, 337, 568, 13, 15, 293, 3917, 264, 806, 76, 7183, 51332, 51332, 2269, 322, 29767, 741, 478, 1009, 2055, 281, 1867, 1651, 456, 611, 741, 603, 2113, 281, 512, 2232, 7533, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05667291581630707, "compression_ratio": 1.670995670995671, "no_caption_prob": 6.604462396353483e-05}, {"id": 682, "seek": 446604, "start": 4472.92, "end": 4477.8, "text": " noticeably fast and it's it's feeling really nice to work with all right so how do people get started", "tokens": [50364, 264, 264, 9482, 1105, 741, 478, 588, 10587, 365, 293, 293, 741, 600, 3031, 281, 652, 264, 3389, 534, 50680, 50708, 3449, 1188, 2370, 293, 309, 311, 309, 311, 2633, 534, 1481, 281, 589, 365, 439, 558, 370, 577, 360, 561, 483, 1409, 50952, 50952, 365, 264, 806, 76, 7183, 2232, 1520, 484, 264, 45623, 456, 311, 257, 4451, 3211, 3621, 337, 568, 13, 15, 293, 3917, 264, 806, 76, 7183, 51332, 51332, 2269, 322, 29767, 741, 478, 1009, 2055, 281, 1867, 1651, 456, 611, 741, 603, 2113, 281, 512, 2232, 7533, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05667291581630707, "compression_ratio": 1.670995670995671, "no_caption_prob": 6.604462396353483e-05}, {"id": 683, "seek": 446604, "start": 4477.8, "end": 4485.4, "text": " with the elm pages uh check out the docs there's a fresh doc site for 2.0 and join the elm pages", "tokens": [50364, 264, 264, 9482, 1105, 741, 478, 588, 10587, 365, 293, 293, 741, 600, 3031, 281, 652, 264, 3389, 534, 50680, 50708, 3449, 1188, 2370, 293, 309, 311, 309, 311, 2633, 534, 1481, 281, 589, 365, 439, 558, 370, 577, 360, 561, 483, 1409, 50952, 50952, 365, 264, 806, 76, 7183, 2232, 1520, 484, 264, 45623, 456, 311, 257, 4451, 3211, 3621, 337, 568, 13, 15, 293, 3917, 264, 806, 76, 7183, 51332, 51332, 2269, 322, 29767, 741, 478, 1009, 2055, 281, 1867, 1651, 456, 611, 741, 603, 2113, 281, 512, 2232, 7533, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05667291581630707, "compression_ratio": 1.670995670995671, "no_caption_prob": 6.604462396353483e-05}, {"id": 684, "seek": 446604, "start": 4485.4, "end": 4492.04, "text": " channel on slack i'm always happy to answer questions there also i'll link to some uh sites", "tokens": [50364, 264, 264, 9482, 1105, 741, 478, 588, 10587, 365, 293, 293, 741, 600, 3031, 281, 652, 264, 3389, 534, 50680, 50708, 3449, 1188, 2370, 293, 309, 311, 309, 311, 2633, 534, 1481, 281, 589, 365, 439, 558, 370, 577, 360, 561, 483, 1409, 50952, 50952, 365, 264, 806, 76, 7183, 2232, 1520, 484, 264, 45623, 456, 311, 257, 4451, 3211, 3621, 337, 568, 13, 15, 293, 3917, 264, 806, 76, 7183, 51332, 51332, 2269, 322, 29767, 741, 478, 1009, 2055, 281, 1867, 1651, 456, 611, 741, 603, 2113, 281, 512, 2232, 7533, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.05667291581630707, "compression_ratio": 1.670995670995671, "no_caption_prob": 6.604462396353483e-05}, {"id": 685, "seek": 449204, "start": 4492.04, "end": 4500.04, "text": " using elm pages 2.0 and some code bases uh i haven't upgraded uh elm radio to 2.0 yet but i", "tokens": [50364, 1228, 806, 76, 7183, 568, 13, 15, 293, 512, 3089, 17949, 2232, 741, 2378, 380, 24133, 2232, 806, 76, 6477, 281, 568, 13, 15, 1939, 457, 741, 50764, 50764, 486, 2321, 457, 35759, 806, 76, 293, 264, 806, 76, 7183, 3211, 3621, 366, 294, 568, 13, 15, 370, 456, 311, 729, 366, 512, 51100, 51100, 3089, 17949, 291, 393, 747, 257, 574, 412, 886, 437, 307, 264, 2113, 337, 264, 806, 76, 7183, 14333, 731, 11926, 51368, 51368, 300, 309, 311, 6572, 2232, 538, 264, 565, 341, 3500, 1709, 1621, 2232, 300, 576, 312, 806, 76, 7183, 806, 76, 7183, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.05859106779098511, "compression_ratio": 1.8056872037914693, "no_caption_prob": 2.0784202206414193e-05}, {"id": 686, "seek": 449204, "start": 4500.04, "end": 4506.76, "text": " will soon but incremental elm and the elm pages doc site are in 2.0 so there's those are some", "tokens": [50364, 1228, 806, 76, 7183, 568, 13, 15, 293, 512, 3089, 17949, 2232, 741, 2378, 380, 24133, 2232, 806, 76, 6477, 281, 568, 13, 15, 1939, 457, 741, 50764, 50764, 486, 2321, 457, 35759, 806, 76, 293, 264, 806, 76, 7183, 3211, 3621, 366, 294, 568, 13, 15, 370, 456, 311, 729, 366, 512, 51100, 51100, 3089, 17949, 291, 393, 747, 257, 574, 412, 886, 437, 307, 264, 2113, 337, 264, 806, 76, 7183, 14333, 731, 11926, 51368, 51368, 300, 309, 311, 6572, 2232, 538, 264, 565, 341, 3500, 1709, 1621, 2232, 300, 576, 312, 806, 76, 7183, 806, 76, 7183, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.05859106779098511, "compression_ratio": 1.8056872037914693, "no_caption_prob": 2.0784202206414193e-05}, {"id": 687, "seek": 449204, "start": 4506.76, "end": 4512.12, "text": " code bases you can take a look at too what is the link for the elm pages documentation well assuming", "tokens": [50364, 1228, 806, 76, 7183, 568, 13, 15, 293, 512, 3089, 17949, 2232, 741, 2378, 380, 24133, 2232, 806, 76, 6477, 281, 568, 13, 15, 1939, 457, 741, 50764, 50764, 486, 2321, 457, 35759, 806, 76, 293, 264, 806, 76, 7183, 3211, 3621, 366, 294, 568, 13, 15, 370, 456, 311, 729, 366, 512, 51100, 51100, 3089, 17949, 291, 393, 747, 257, 574, 412, 886, 437, 307, 264, 2113, 337, 264, 806, 76, 7183, 14333, 731, 11926, 51368, 51368, 300, 309, 311, 6572, 2232, 538, 264, 565, 341, 3500, 1709, 1621, 2232, 300, 576, 312, 806, 76, 7183, 806, 76, 7183, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.05859106779098511, "compression_ratio": 1.8056872037914693, "no_caption_prob": 2.0784202206414193e-05}, {"id": 688, "seek": 449204, "start": 4512.12, "end": 4519.08, "text": " that it's published uh by the time this episode goes live uh that would be elm pages elm pages", "tokens": [50364, 1228, 806, 76, 7183, 568, 13, 15, 293, 512, 3089, 17949, 2232, 741, 2378, 380, 24133, 2232, 806, 76, 6477, 281, 568, 13, 15, 1939, 457, 741, 50764, 50764, 486, 2321, 457, 35759, 806, 76, 293, 264, 806, 76, 7183, 3211, 3621, 366, 294, 568, 13, 15, 370, 456, 311, 729, 366, 512, 51100, 51100, 3089, 17949, 291, 393, 747, 257, 574, 412, 886, 437, 307, 264, 2113, 337, 264, 806, 76, 7183, 14333, 731, 11926, 51368, 51368, 300, 309, 311, 6572, 2232, 538, 264, 565, 341, 3500, 1709, 1621, 2232, 300, 576, 312, 806, 76, 7183, 806, 76, 7183, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.05859106779098511, "compression_ratio": 1.8056872037914693, "no_caption_prob": 2.0784202206414193e-05}, {"id": 689, "seek": 451908, "start": 4519.08, "end": 4524.36, "text": " dot com slash docs all right well all right i still have plenty of questions like i know", "tokens": [50364, 5893, 395, 17330, 45623, 439, 558, 731, 439, 558, 741, 920, 362, 7140, 295, 1651, 411, 741, 458, 50628, 50656, 731, 741, 519, 321, 434, 484, 295, 565, 1338, 1338, 741, 519, 2232, 731, 718, 311, 718, 311, 32676, 341, 472, 2232, 50948, 50980, 562, 321, 600, 658, 512, 777, 1507, 281, 751, 466, 510, 300, 3263, 665, 51144, 51144], "temperature": 0.0, "avg_logprob": -0.09469323004445722, "compression_ratio": 1.609271523178808, "no_caption_prob": 0.00019402649195399135}, {"id": 690, "seek": 451908, "start": 4524.92, "end": 4530.76, "text": " well i think we're out of time yeah yeah i think uh well let's let's revisit this one uh", "tokens": [50364, 5893, 395, 17330, 45623, 439, 558, 731, 439, 558, 741, 920, 362, 7140, 295, 1651, 411, 741, 458, 50628, 50656, 731, 741, 519, 321, 434, 484, 295, 565, 1338, 1338, 741, 519, 2232, 731, 718, 311, 718, 311, 32676, 341, 472, 2232, 50948, 50980, 562, 321, 600, 658, 512, 777, 1507, 281, 751, 466, 510, 300, 3263, 665, 51144, 51144], "temperature": 0.0, "avg_logprob": -0.09469323004445722, "compression_ratio": 1.609271523178808, "no_caption_prob": 0.00019402649195399135}, {"id": 691, "seek": 451908, "start": 4531.4, "end": 4534.68, "text": " when we've got some new stuff to talk about here that sounds good", "tokens": [50364, 5893, 395, 17330, 45623, 439, 558, 731, 439, 558, 741, 920, 362, 7140, 295, 1651, 411, 741, 458, 50628, 50656, 731, 741, 519, 321, 434, 484, 295, 565, 1338, 1338, 741, 519, 2232, 731, 718, 311, 718, 311, 32676, 341, 472, 2232, 50948, 50980, 562, 321, 600, 658, 512, 777, 1507, 281, 751, 466, 510, 300, 3263, 665, 51144, 51144], "temperature": 0.0, "avg_logprob": -0.09469323004445722, "compression_ratio": 1.609271523178808, "no_caption_prob": 0.00019402649195399135}, {"id": 692, "seek": 453468, "start": 4534.68, "end": 4549.8, "text": " all right well until until next time until next time", "tokens": [50364, 439, 558, 731, 1826, 1826, 958, 565, 1826, 958, 565, 51120], "temperature": 0.0, "avg_logprob": -0.2828646989969107, "compression_ratio": 1.368421052631579, "no_caption_prob": 4.131688183406368e-05}], "language": "en"}