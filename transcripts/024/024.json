{"text": " Hello, Yaron. Hello, Dillon. And again, today we're joined by a special guest, Aaron Vonderhaar. Welcome Aaron. Hey, how's it going? It's going well. Thank you for joining us. You want to say a quick hello and tell us a little bit about yourself? Sure. I am Aaron Vonderhaar. I have been, I guess, a full stack developer my whole professional career and did a lot of mobile iOS and Android development in the past and have been doing Elm, I guess it's almost eight years ago now that I started writing Elm format and was working at KnowRedDNK for about four and a half years doing Elm there and now doing some Elm consulting work. Okay. You're hired. Perfect. Great. Yeah. And we had a lot of fun discussing Elm format in our last episode and it's fun to have you on to discuss another tool of yours. So today we're going to be doing a deep dive on Elm program test. So let's start with the definition. What is Elm program test? Yeah. So Elm program test came about as filling a gap for me in doing Elm development and doing it in a test driven development style way of being able to write high level tests that are written basically from the perspective of a user or an outside entity interacting with your Elm program. And it basically gives a nice high level API to write Elm tests in that fashion. In practice, I found the main benefit that that gives you is the ability to have test coverage that is resilient to refactorings and specifically like significant refactorings if you need to restructure how your application works. If you're converting like a single page app into a spa app, bigger things like that, or even just like sophisticated new features or changing workflows for your users, the tests that you write with Elm program tests tend to give you test coverage that allows you to do safe refactorings that are much larger than refactorings you'd have coverage for using normal unit tests. You mentioned that you were writing Elm tests. So this works with the regular Elm test binary, right? Yep, exactly. This is basically just a sophisticated set of helper functions that can be used with normal Elm tests. Right. So just to give like a high level overview of like, what the actual wiring looks like, you pass in an init update and view function to Elm program tests. So that's how it works is it's actually simulating, initializing and going through the updates and responding to events in the view. Yep, exactly. Essentially I'm program test was extracted from some helper functions that I started like adding throughout no red inks, a test code. And the very first version of that basically just looked like we were creating a model, piping it through a bunch of update calls to the update function with different messages. And eventually that got fancier where I realized, Oh, we can use the HTML testing features of Elm test so that we can actually inspect the view that is based on the current state of the model and make sure that the view has ways to interact that we expect to produce the message that we want to feed through the update loop. So essentially that's the complexity in Elm program test is creating an API that essentially is speaks in a different language than view model update, which is like the technical implementation of how Elm programs are written. And Elm program test lets you use functions like, Oh, click the button with this label or pretend that this HTTP request you made came back with this error code, things like that. Right. So let's talk a little bit about some use cases and when somebody would use this compared to a regular test. So we covered test driven development and Elm test in general in our Elm test episode, but this is something different. This is a higher level form of testing. And so when would you reach for this rather than a more vanilla unit test? Sure. So something you two talked about in your previous episode was about the testing pyramid and kind of the different layers of that. I guess there's a couple of things that the main thing is that if you're happy with unit tests you have Elm program test isn't trying to stop you from writing unit tests that you're already happy with. Elm program test provides the level above that and in particular, if you look at end to end tests using something like Cypress or Selenium web driver based testing, my hope has been that Elm program test will allow you to write tests in the same language as those where you're talking about what the user does, what they see on the screen. But if you take the assumption that you trust the Elm compiler and the Elm packages to actually do what their documentation says they do when they're compiled and running in a browser, if you can trust Elm as a framework to do those things, then you can use on program test to write tests that cover those same high level features, but that run much faster are completely not flaky, completely deterministic. Yeah, no, if you can exercise some functionality at a low unit level, then that's ideal. But that doesn't always give you confidence. So if you, you know, one of the rules of thumb that I try to follow is the more high level my testing becomes, the less comprehensive it should be. So if I'm noticing that I'm trying to exercise every combination possible in every edge case, and it's in a high level test, then I'm thinking there's something that either needs to be split out into a module that's testable or simply exists that way, but isn't being properly unit tested to give me confidence because that's really not, it's going to be extremely verbose to have to create a whole test scenario where you're describing clicking through things and all these permutations. Because you know, just mathematically, if you think about a higher level test, you're putting more pieces together. So there are more variables, there are more things operating together on that page. And so if you try to exhaustively check them, now you've got a combinatoric explosion. And it's just not going to be effective, because you can't do that. But you can at the unit level and you want to. So that's one thing I try to pay attention to. But then, like, so why not just test everything in isolated unit tests, right? And the reason for that is that you don't get the same confidence about things interacting together and about the system functioning at a high level. Like what is the user's experience when they come in and they click on byproduct? Do you get money? That's an important thing to know. And a unit test might tell you that the credit card information is being validated correctly. It strips out white space appropriately, formats it, gives the right client side validation. That would be a great unit test. But is it making the right API request and handling the response, showing error messages? You want to know that when a user goes to do some important business flow, that you want confidence that it's actually going to do that. And unit tests don't necessarily give you that. Yeah, that's exactly right. And in Elm, being a statically typed and strongly typed language as well, the compiler gives you a lot of protection for some types of refactorings. But Elm program test is really at the level that you can't get type safety because it's looking at like, oh, when you have this sequence of events happening in this order, something goes wrong. And especially like in Haskell, you can get a bit fancier with types. But in Elm, you like definitely can't write a type for your update function that says that, oh, once this message happens, you can never get these initialization messages anymore. You only get this later class of messages. So Elm program test allows you to kind of in a more natural language, I would say, than writing unit tests allows you to get coverage of those things. I don't know if you've ever ended up with tests where you're trying to like initialize a model, send it through a bunch of update calls, and then check the state of the model at the end. You can definitely write those as unit tests. But I find that it's often very verbose. And you have to end up putting a whole bunch of like, fake data and things that are really implementation details. Whereas when you write a test of that nature, what you want to be thinking about is, okay, what is the flow of events? And you don't want to care about how to construct the record of the data that represents the JSON that comes from this endpoint and all those lower level details. So you say that those tests are supposed to be easy to read. Have you looked at Cucumber? Or are you inspired by Cucumber and those kinds of testing frameworks? Like I think it's BDD? Yeah, I've been really interested in those techniques. There's a talk called something like test driven development the way it was meant to be done by Matt Wynn from and is probably like 15 years old now. So L program test, I think is a layer that's needed if you wanted to write tests in that style. Because that BDD approach is really that you develop a domain specific like application specific language to write these high level tests in, whereas talking about things that are relevant to your business domain, like in no red ink, it would be like talking about teachers and classes and assignments and creating new assignments. Yeah, I think that's that's kind of just like a higher level DSL on top of like to implement some of those features like to implement or in a BDD style test, you might say when the user logs in, and then dot dot dot other stuff to implement that how does the user login step of your BDD testing, you would, I think, ideally use something like program test to say, Okay, click the login button, then fill in the name of the current user fill in the password of the current user, click this other thing, then simulate the back end responding to the post request with an okay status. So that's kind of implementation specific. But the way I just described those steps is still high level, it doesn't depend on the details of how the form validation is implemented, or how they like what UI framework they use to create the form. So on program test is kind of high level for the technical side, but it's still lower level than something like cucumber tests, I have an opinion about cucumber, which is that now I may be totally wrong, or, you know, reasonable people may disagree, but I'll share my opinion for what it's worth. So what you were just discussing there, Aaron, with it being elm program test being a high level way to express a flow that's not necessarily as coupled to the actual technical implementation, not being as likely to change if you change implementation details, right? In my mind, that is exactly what I want. And the cucumber part of writing it in in actual plain language, I don't like and that's what cucumbers for anyone who's not familiar with the Gherkin cucumber syntax, the sort of idea of, you know, one of the concepts of behavior driven development BDD is that you actually have customers or customer, you know, product managers, that type of thing, in their writing cases, and it's not code, it's just text. And you use regular expression, or various forms of parsing to do like language parsing and say, when I log in as email address, and then you use some regex to capture that email address and then log in. And in my in my experience, that just creates a layer of indirection that doesn't make it any more high level, it actually just makes it more confusing what's going on. If you're, if you are not a programmer, and you're writing that, to me, it doesn't seem like it's making it any easier just because it's an English language, because it's still a specific syntax that you have to write, it's just one that's been built with this layer of indirection of regular expression, capturing and stuff. But you still have to know how to formulate a valid one that the regular expression will capture and what it's going to do with that. And to me, that that's not any easier than just writing high level instructions that say, go to, you know, maybe you have to like learn what the pipe operator is, and then you have to like learn a few of these things. But then you just say, click this thing, do this thing, do this thing. So you know, it's sort of like AppleScript went this route to of like, if we write it like English, it will be easy for people to write, but it's actually not because it creates this layer of abstraction that just makes it harder to understand what it's actually going to do and how it's going to interpret it. Kind of sounds like graphical codes, like, like dark, for instance, where you connect things visually, like, yeah, but you have more rules, like, do you, do you know more people who can write code that compiles or more people who can write English perfectly grammatically? Exactly. That's going to be interpreted by a specific set of code instructions, and if it doesn't fit that format, it won't do what's intended. And how do you debug that? So it's just adding a layer of indirection. So anyway, for what it's worth, I'm very happy with just the high level way of expressing things with Elm program tests. I think it's, I think it's really good. And I really enjoy being able to like, you know, write tests from the user's perspective. I know a lot of French developers who would be better off writing code than English. So well, so to just one thought on top of that is that I think in practice, especially if you have a large application and you start using Elm program test that ideally you'll end up with a module or maybe some different modules of helper functions that build on top of Elm program test, some application specific helpers like the login example that we said, or maybe in the ed tech domain, creating an assignment, which might do a whole bunch of steps like, Oh, click the whatever the button to go to the create assignment page, fill out all this data, click Submit, simulate the response. So you can still have some of those benefits of having even higher level concepts. And Elm program test is kind of like a support layer that does all of the generic stuff, basically all of the reusable things about writing high level tests on program tests does so that as an app developer, you can write your app specific tests much more quickly and efficiently and correctly, which I guess is a point we should get to at some at some point of all the things that Elm program test does behind the scenes. Right, right. And to that point of doing it correctly, I think that that's a really key point that, you know, having this encapsulated in this library, I'm sure you could, you know, call the update function yourself from an Elm test, but you don't have the same level of confidence that things are actually being wired up in a way that's equivalent to what's going to happen when you do browser dot application or whatever type of program you're creating. So there's a lot of value to having that encapsulated in something that you can trust to be equivalent so that you know you're not you're testing something that's realistic and going to reflect the reality. Yeah. And to hit on that, just a little bit more about the types of refactorings that these programs written in Elm program tests can help you refactor. These are things like, oh, you have this set of messages and you want to change what the messages are so that you can whatever centralize your logic, maybe in a certain way in your update function and extract some data type specific functions that are then used rather than having all that logic in your update function. That's the type of refactoring that is very tedious to do if you don't have these high level tests, because essentially what you have is a bunch of unit tests calling an update function that are written in the language of that module that knows about its messages, knows about its internal model. And now you want all those unit tests to move to a different module that's specific to this smaller data type doesn't know anything about messages. So if you have the high level test coverage, you have some safety. And if you don't have these higher level tests, you basically have to translate all your tests and move them over, which is, I don't know, that's that's one of the things I I fear the most when I'm doing coding. Right. And one example is like form validation is actually something fairly common and also something that you tend to do incompletely the first time you implement it like, oh, we'll just need to validate a few things, we'll move on. And then over time, you need to add more validations, maybe at some point, you end up extracting a validation helper module or using some package to help you with validation. Those again, are things that can completely change the flow of events. Like maybe you used to validate things on when the message happened, but now you're switching to store the unvalidated data in your model and validating it when you send the form and showing error messages in a different way. Those are changes that ideally should be simple to make. But if you're writing unit tests, they become extremely tedious, because those unit tests that touch your update function or directly refer to messages are extremely brittle to those kind of changes. Right. So if you were doing something like an optimistic update in the UI where you're interacting with server responses, you would have to fill in a lot of the pieces to simulate that in a plain old unit test. But if you're driving it through on program tests, then you can say, click this button, you know, enter this information, hit send, simulate a server response and make assertions about the view while it's loading before the server responses come back. So you can you can decouple it and and not rely on wiring it in a very specific way that you can't trust as much. So yeah, there's a lot of value to that. Yep. One thing I don't think we wrap this up yet, but you had mentioned earlier, Dillon, about using unit tests to cover all the different edge cases and combinations. And I would definitely agree with that. I tend to start with maybe like a happy path program test. Then you can jump down and do unit tests for all your edge cases. That's cool. So you like to do like a more outside in approach? Yeah, yeah, exactly. That's cool. Because that so that's a really interesting topic that, you know, in the sort of test driven development world, there, there are a lot of conversations about do you do you write a unit test first, and then work your way up to building to fitting that unit into the application, which is in a way, you know, that's delayed integration, you haven't fit the piece into the hole. So you spend time building up all these different cases and then fit it into the hole. And you don't know if it's actually going going to solve the problem that you set out to solve when you built that unit. So you don't know if it's going to fit fitting fitting and integrating the piece into the hole is the hard and risky part. So the sooner you can do that, the better the outside in school of thought is more that start with building something end to end. And it starts with testing from the outside in from the user's perspective, and then builds the unit as needed. But it sort of uses more of a fake it till you make it approach, like you said, sort of getting that happy path. So that's more the approach that you like to take. Well, that's interesting. I don't know that I have a specific preference for either of those in Elm. But I do tend to kind of write the high level test first, and then often I'll comment it out or stash it or something and build those smaller pieces, then bring back the failing high level test and plug the pieces in. I think I would tend to do that most of the time. However, there are cases if I'm not sure how things will be structured that I would write the failing high level test implemented, like do the fake it till you make it and just write a really simple thing where it's like hard coded to always show the stuff that's needed to make it pass refactor. I think there is a pitfall in doing that approach with on program tests that you can often skip the refactoring step, or you can end up with working stuff that you've refactored, but you haven't exactly extracted the coherent modules yet. And you can end up with kind of a mess relying on only on program test if you aren't disciplined about looking for the smaller pieces that you're going to pull out and write lower level tests for those pieces. Because when you use a regular Elm test, you tested an API and then by using that API, you can kind of feel the pains with it. But with Elm program tests, you don't feel those pains because those APIs are technical detail and you can forget it. Is that what you meant? That they are a technical detail. Yeah, sort of. I think that tell me if this is related to what you're saying, like in Elm in I think the preferred way and the way people are settling on is that if you have smaller pieces of your own program, especially if they're related to view stuff or update logic, there's a lot of different patterns you can use. Like you may have a module that just has a function that returns HTML, or you might have one that has a full update function that can produce commands or somewhere in between where maybe it returns like some specific set of things that can result from its actions or special functions to process the messages it can produce. I think like that's a case where Elm program tests can be used to write unit tests for modules like that that are not completely programs in the full architecture sense of the word, but are also more complicated than just some functions. However, Elm program test doesn't let you interact directly with its API. So in like, and as you two talked about in your previous episode, writing tests in in test driven development, or test driven design, I almost said, it's like a design tool. And I think Elm program test doesn't really give you those design tool benefits, because yeah, I think you're not working directly with the API, but it does help you. It gives you other benefits, the test coverage we talked about that lets you do bigger refactoring safely. And it also helps you think about the user perspective more if you're really doing user centered design. And a process like that, it can really help get developers aligned with the kind of product level thinking as well. But for designing an API, Elm program test really doesn't provide those benefits of testing. Right, it's almost like the, you know, user interface based testing in Elm program test keeps you honest about making sure that you're designing something that's going to have a nice experience for from the user's perspective. And doing unit level tests with Elm test helps keep you honest that the API you've designed is going to be nice to work with because that's the direct thing that you're exercising and getting feedback on. So you sort of want a mix of those high level and low level tests to make sure those things are both being designed nicely. It's really nice that you can write both using Elm tests that you don't have to write unit tests in Elm and integration tests using JavaScript, using Cypress, for instance. Even though that's an amazing tool, but that's a different thing. Yeah, which is really one of the it's really leveraging the strength of Elm in that everything in Elm is pure functions. There's a virtual DOM, which is essentially a data structure. The commands and subscriptions are essentially just data that represents what the runtime is going to do. So program test essentially is simulating or like reimplementing in Elm in kind of a test specific way, the runtime of Elm where it's creating a model, it's, it's maintaining it, if there's external effects, it's like keeping track of those. Remembering what things are in progress, what are waiting for responses, and can render the view from the current state at any time. So yeah, it's all of that is possible and like was relatively easy to implement. I mean, it's a lot of work, but it, it was easy to implement compared to other language. Like actually, I've worked on similar test frameworks for Android, the Robo electric framework at Pivotal Labs, we started writing a similar framework for iOS, which I think never got finished. I've like done similar things in the past and it's like, this is by far the easiest to write in the most sophisticated of any similar attempts I've worked on. That's cool. It's like a, it's like a pure Elm implementation of simulating the Elm architecture and the Elm runtime. Yep, exactly. So let's, let's get into a couple of things. So first of all, I think we, we should, we should make it clear we've sort of implied this but not said it explicitly. You can simulate HTTP requests with Elm program tests. And that's one of the really killer features because you know, you would be hard pressed to find, find a way to do that if you were sort of rolling your own thing. It's really something you're, you're going to have to do a lot of work to get that same result otherwise with that Elm program test. So there's an API where you can sort of expect a certain HTTP requests to be performed. You can say simulate responding with this HTTP response with this status code, and then continue to make assertions in your, in your view after that. Yeah. So just to compare what that would look like without Elm program test, you could do things like that. But you would in the first place be like saying call update with this exact message with all this data. Right. And then you would just add it to the specific message type for your application. Yes, exactly. And you also wouldn't buy like, it starts to get extremely tedious going that manual route, which is what I started with before I extracted on program test is that, okay, well, maybe you also want coverage to make sure that the message that produced the HTTP requests happened, because like, maybe you whatever disconnect the code that makes the button appear that lets people initiate the request, or maybe the validation failed, and the request wasn't even sent, things like that, Elm program test handles for you. And then also, if your test fails, having a nice error message about what is happening is another part that is a lot of tedious work to do on your own, which Elm program test provides for you. So if you say, Oh, simulate the response to this endpoint, and it was a timeout error, if that request wasn't made on program test will say, Oh, that request was never made. Here's the list of requests that were made. In contrast, if you were just doing it manually sending the message, there's no guarantee that like, maybe the message was sent, maybe it wasn't, you haven't validated it, validated it all you know is like, maybe there was a typo in the URL, and it didn't match for that reason. So that's, I guess, something I take pride in, in Elm program test. It's like, yeah, it's, it's a centralized place where and hopefully other people can contribute to this to to have a nice error messages for these cases that like, ideally, you want to have this, but you'd never have time to do that work to do that on your own, if you didn't have this reusable package, right? Instead of everybody individually building their own thing and taking their time to do that, hopefully, you know, you've, you've done the bulk of the work, but hopefully others can then invest some of that time they would have spent rolling their own thing to improving this community resource. Yeah, so there's a whole bunch of stuff. So on program test, like you mentioned, can do simulations of HTTP responses, it can partially do the simulation of time passing, like if you have tasks that have delays, it can simulate that and you say like, Oh, advanced time by this much, and it'll trigger all the all the delayed tasks, you can simulate ports, both incoming and outgoing ports, and you can simulate some of the browser and Dom API, that's an area I still need to improve quite a bit. So what is it that you can't simulate with Elm program test at the moment? Let's see. So specific things like browser focus, like focusing on particular IDs in the DOM viewport scrolling is something that I haven't touched on. There's some things related to time, I think, like the subscriptions for time, like time dot every aren't implemented, but I would like to implement. I think that's, that's the basics of it. I don't know if there's any other kind of niche packages, I guess, like the file and bytes API is something that I haven't looked at yet. But those are things that like, kind of the internals are set up where a lot of that stuff could be implemented. You just have to think about, okay, what's the API of different error conditions that people may want to simulate in tests? What's the internal model that would represent this? What do we want the error messages to look like? So those are definitely things I'd love to have contributions for if someone needs those features for testing whatever their application is. So there's nothing really blocking those things from existing. It's just more time and money, or more time. Yeah, it's free. I'd say there's one, like some of the things like, okay, keyboard focus is something that ideally you'd want to be able to simulate, but the logic that browsers use to maintain that is so complicated. Yeah, I don't know if that could ever be safely done. Maybe I like that's something I'd love to be able to simulate here. But it's also of like, limited use. Like that's the point where maybe you just have to track things manually and say, okay, well, here's the state of the DOM. Here's what's going to happen. Let's like hack together a test that gets things into that state. Yeah. Or there at some points, you should probably just use a better tool, like Cypress, a tool more suited to the task. Yeah, I mean, Elm program test is not, it seems like Elm program test is not intending to be something that is actually performing HTTP requests, actually sending ports and executing JavaScript. And that's like, you know, by design, which, so sometimes I, you know, it's, it gets a little confusing, but people use different terms for this. I think of it as like end to end testing versus integration testing, where, you know, I would, I would consider Elm program test to be an integration testing framework. It's not ever going to make an HTTP request, which is a feature or a bug depending on what you're trying to do, right? It is, you have to pick the appropriate testing level and you have to keep that in mind, but obviously it's going to be faster. It's going to be more deterministic if you're not actually making HTTP requests, right? So you need to have an awareness of what the tool is suited for and use it for those effects. So, so like I want, I wanted to make the API a little more concrete for people maybe. So like when it comes to like simulating HTTP effects, so essentially you have this sort of program test data type. If you think about, if you think about the Elm language, it is not a dynamic language. It is a static language. It's not a language where you can go in and tweak the internals of something, reach in and change global variables or, or that sort of thing. So everything needs to be sort of injected rather than reached in and modified. If it was a language like Ruby or JavaScript, a lot of these frameworks work by, you know, monkey patching, you know, in Ruby you can like override existing classes and actually reach in and modify them. Elm doesn't work that way. Monkey patching is not a thing in Elm language. And so, but everything is pure functions. And so the way that that works in, in Elm is you, you pass, you pass things in explicitly and effects are actually just a type of data. And so when you're simulating HTTP effects, what you do is you have this program test. So an Elm, an Elm test case is just, it's just a single expectation ultimately under the hood. And you know, it's just this one expectation type and a program test sort of builds up this program test and you sort of chain on a sequence of things. So it's inherently a sort of imperative flow that you're describing. The user goes in and does this and does this and does this, but you're actually building up a single expectation that describes that sequence of events. So it's a single pipeline and you can chain on. So you sort of initialize your program test and give it your update function, your view function, your init function, all that it needs to sort of create its mini simulation of the Elm runtime. And then you can simulate HTTP requests and say you expect to get a particular HTTP request and it's going to essentially mock that out. Yeah. Let me just like, as Elm programmers, we like to think about the data types. So actually this program test type is pretty straightforward. You can think of it as a result. It's like either in an error state or in a success state. In the error state, there's kind of a whole different set of different kinds of errors. Like it's maybe we failed because we expected an HTTP request. Here's the function that you were trying to call. Here's this, here's the data of other requests that were in flight at the time. Basically whatever's needed to produce a nice error message. And in the success case, we've got the current model of your program. And then we have some other state about the world of like what HTTP requests are in flight, what delayed effects are you like scheduled in time? What ports exist? What outstanding like browser requests have been triggered? So it's, it's really just a data structure like that. And then the functions that you call like click button, all it does is it's going to render the view based on the current state of the model. Look for the button that you wanted to click, grab the message from that, call the update function. So I guess the update and view functions are also stored in program test. But yeah, if you like a lot of it, you can kind of understand if you think about that as the data structure of what's in there. It's just a result with your program state, the functions for your program and information about external effects that are in flight. Right. And there's a, there's one convention that maybe is like a little tidbit that might be helpful to talk about for people. There's a convention of like these insure function calls and expect function calls. So you can insure that an HTTP request was made. So there's program test dot insure HTTP request, and then there's program test dot expect HTTP request. You want to talk about that distinction? This is one of the rough edges with the API here, because there's a school of testing thought where you should have one expectation per test, and that should be the end of your test. So those are the primary functions here, the functions that take your program test value and return an expectation that basically ends your test. However, when you're writing these high level things, a lot of times you want these intermediate assertions. Like, oh, your first step in your test is to have the user log in. Well, maybe you're not on a page that has the login form, so you need to fail there with an error message. So there's basically a copy of all the expect functions have an insure function that basically does the same thing, but it returns a program test so that you can do an intermediate assertion, continue your test and get to the end. I wish there was a way to unify those into a single check, but I haven't come up with a good API design approach to do that. It almost seems like it could be like a builder pattern where you just only have either, you know, pick a keyword, insure or expect, but only have the current behavior of insure, which means that you can keep chaining things on. And then at the end, you say to expectation, and that takes the whole test scenario and turns it into a single expectation, which is the same as currently what expect HTTP request does versus insure. Yeah. So you can write your tests in that way. There's a program test.done, which is the final step. But I didn't want that to be the recommended approach because I think the thought of like having a single expectation is, in my opinion, the preferred way to think about your tests. So I didn't want to like make that recommended way be the second class citizen in terms of how the API was designed. Gotcha. But then, so like if you wanted to, oh, okay. So there are also like simulate forms. Okay. So, so there's like insure HTTP request and that's sort of making an expectation and continuing on kind of what you're recommending against. You're saying maybe this is a smell and if you have too many insurers, maybe think about the way you're splitting up your test cases. If you're inserting too much. Yeah, I'm kind of on the fence about that because I think like we were saying earlier, you don't want a ton of these high level tests to check every edge case. You kind of want to go through your happy path, which is going to do a lot of things. So you tend to want to assert things along the way. Having intermediate assertions also helps you with debugging when something goes wrong. You can kind of tell what step failed. So yeah, that's something I wish I had a better answer for that. But unfortunately you kind of learn that thing that's specific to on program tests. If you have expect and insure, they're basically the same thing that you use throughout your tests. Yeah. I mean, in a way there are implicit expectations in certain things. If you say click button with text, then you're asserting that there's a button with that text and it will fail, right? Yes, exactly. You don't have to say expect. So that in your book wouldn't count as like too many assertions in the test. It's just... In fact, yeah, those are things where on program tests is helping you get a nicer error message when something goes wrong. So actually like I think you could probably realistically use a rule saying that your normal tests should never use the insure functions. But if you're writing application specific helper functions for your tests, like you're writing a helper function that's like to the login form, you can use insure functions in that helper function, but then your actual test will just call that login thing. It's essentially a higher level version of the click button type helper. And then your actual test only has expect at the end. That's very cool. Tell me if you want to work on that rule with me. Yeah. Because I could be on review rule. That sounds great. Yeah, so just to reiterate what you're saying here, like when you say click text and we're saying there's an inherent expectation and clicking the text because you're asserting that that text exists on the page, that you're saying that you could use, if that didn't exist as a building block, you could create that your own building block like that where you say log user in. And if there's no login button, you could create the validation that that exists in your own helpers and use insure in that context. Yep, exactly. And for instance, the the API of own program test actually enforces certain best practices like it has a click button function that you can call, but it can only click things that are actually buttons or that are divs that have accessibility attributes that indicate their buttons. So if for whatever reason, your program is just a bunch of divs with on click handlers, the built in click button function in on program test is not going to work. I could make it work, but I've chosen not to. But you can always write your own helper function that uses the like, find DOM element and do this with it to kind of build your own helper functions that are needed to do whatever you want that your app needs. Yeah, that's an amazing feature. So I guess we should maybe talk about some more of the rough edges. Sure. So program test, I think the big one, which is kind of the most unfortunately, the most complicated thing is if you're if you're testing a program where you want to test these external effects and simulate HTTP responses, or simulate interacting with your JavaScript ports, things like that, there's a limitation in in Elm at the moment where there's these data types command and subscription, or sub that in theory, like, theoretically, those things just are a piece of data that represents some effect that the on runtime is going to perform on your behalf. So in on program test, I need to take a command that your program produces and know was there an HTTP request made in that command and all the various different commands. So unfortunately, that's not possible in Elm at the moment. So well, okay, so I know that Evan has had a concern. And this is a similar reason to why the HTML type is not directly inspectable or destructurable is that Evan's been conservative about allowing for those kinds of destructurings in an attempt to prevent packages getting published that do extremely complicated or like not explicit things. So I think it's about the explicit as of Elm. So there's no internal technical reason they couldn't be inspectable. And I think it's something that like, it's not even a decision that they should never be inspectable. But it's that in production code, I think specifically, Evan has wanted to avoid allowing the use of packages that can like take a command and transform it into some other command, which could allow for things like oh, sending all of your HTTP requests, if you're using this caching package, it transforms all your HTTP requests to go to some other server and redirect all your private information to a man in the middle attack or something like that. Right. Yeah. So I think like, my understanding is it's something that Evan would be open to and does make sense, but only in the context of testing, and he would not want an API that's usable in production code to be able to inspect at that level. And you couldn't do a test that says this HTTP request, so HTTP.get with a URL, and then say expect equals to something else? In general, no, because so HTTP specifically, there are functions in that HTTP request type. And most commands in fact, do have fun, like even your port commands, which are the simplest ones, there's a function that takes the port value and turns it into a message. Yeah, functions pretty much everywhere. I guess functions can be equivalent by reference, but it gets to the area where it's like not entirely reliable. I believe Elm will, if you say function one double equals function two, if it's the exact same reference, then it will equal true. And otherwise, it will crash the program. It'll give a runtime exception. Yeah. I think that's one of the things that they want to change in Elm 0.20. Not getting those crashes when you compare functions or JSON regexes. Yeah, maybe. Well, the regex one has been fixed, but I think the idea maybe would be to somehow disallow comparison of functions or something. So we should talk a little bit about the effect pattern and how it relates to Elm program test. Yeah, that's where we're going with that is to work around that is that I've had to, you basically have to refactor your program first to define your own data type that represents the effects you're going to produce. Then you have in production, a function that turns those effects into commands. And in the test side, you have basically a parallel function that does the exact same thing but it just returns a different type, which is this simulated effect type that's specific to Elm program test. So like, HTTP dot get is not inspectable. But if you had your own, you know, version of simulating an effect, so you have, like, you click a button and it says, you know, that button fetches the latest to do items. So you have like an effect fetch to dos. So instead of that just being a command, HTTP dot get slash to dos dot JSON or something, it's going to be an effect called fetch to dos. Your update function is going to be wrapped in a little helper that is actually your the direct update function you you write is going to be returning a model comma effect. And then you're going to have to translate that effect in your main production code into HTTP dot get slash to dos for the fetch to dos effects type. So it's just a custom type type effects equals fetch to dos and then all the other possible effects. But then in the test one, you write a translator that turns that effects not into HTTP dot get but into simulated effects dot HTTP dot get. So it's a drop in replacement except instead of importing HTTP, you're importing simulated effect dot HTTP as HTTP. Otherwise it's the same API, but it gives you something that you can inspect in on program test. Yep. And unfortunately, the HTTP package has a similar restriction where you can't inspect the HTTP body type or the HTTP expect type that's used for parsing. Maybe you can inspect body. But anyway, there's kind of this chain of things where you can't if you have an HTTP expect type that like represents the decoder and all of that, you can't actually use that for anything directly. So that's another thing that I have to have a parallel version that's used in the test. So just to run through how I think about doing that in the least annoying way possible is you want to you have to look at the function that you're calling in the real world that is producing the command. So in your example, HTTP dot get returns a command. So your effect type should really just take the parameters to that. So a little different than what you were saying you were saying you could have a fetch to do is effect. I think it's actually better to keep your effect type more generic where it's just representing the functions that are going to get called. So you'd have I'd recommend like it doesn't reflect the message type. It's more akin to the command type, but it's an indirect a level of indirection. So you can translate it into a simulated or a real command. Yeah. So like get takes the URL as a string. It takes the HTTP expect, which again, we we have to fake. So then to create your expect, there's like the JSON body or expect JSON or whatever. So the parameters to the to that is what you'd stick in your effect type. So then on the real side, you just call HTTP get with the parameters and build it up. And then the simulated version should look exactly the same because there's a whole bunch of like there's simulated effect that HTTP which is a module. It has exactly the same API as the API as the HTTP module. It just returns simulated effects instead of commands. So it's basically a bunch of boilerplate. That's pretty annoying and takes up a whole lot of documentation of Elm program. But theoretically, it's possible to remove that limitation. It's kind of like a detailed project. If anyone out there is looking to help with this, ideally, on program tests shouldn't need any of this, it should just be able to inspect your commands and read the data without you having to do anything to your program to be able to start using it. That would be a game changer. Yeah, I've actually in Elm 18. I prototyped a package that could do that and it needs kind of some integration with the test runner itself to swap test only JavaScript to make that possible. But ideally, it should happen. It just hasn't had a chance to get implemented yet. I'm wondering whether the effect pattern still has some merits if you're able to do that, or if it's just uses boilerplates when we get to that point. Yeah, I think like this is, it's a question that I've seen asked more on the Haskell side of things. Where in Haskell, there's a type called IO, which basically is similar to Elm's command, where it's saying that this can have external effects of any type. But then if you're really into the strong typing and limiting the scope, letting your types limit the scope of what functions can do, then you look at saying I want a function that like can't do everything, but it can it's allowed to talk to the database, let's say and it can maybe it's allowed to send log information, but it can't do anything else like it can't read and write from the terminal console. It can't I don't know what other effects are I can't like sleep the computer or call the halt command, whatever. So in that environment, there's a lot of conversation about the best way to model that. And this effect approach is one style of that where you can have a data type that represents just the limited set of things that are allowed, you can end up with a whole bunch of different types that represent different contexts that are allowed. So you could do a similar thing in in which personally, I think has an occasional use where you maybe have some complicated UI component that wants to like ask for certain things like maybe it needs to trigger a focus event somewhere else in the DOM. So it but you don't want to allow it to make HTTP requests. So you could do something like that where that module defines a type of things that the parent component should do on its behalf. And that makes sense. But I think as a general, like, I think it makes sense in specific cases where you have a component that like very clearly needs that responsibility. But as a general pattern, I think it just gets overly complicated. And in Elm program test, I would avoid even using that pattern at all if it were possible to do. Yeah, that makes sense. I mean, it could potentially have the same benefit of, you know, how type signatures in Elm allow you to reason about what's going on. Is this changing the whole model? Is that even possible? Or is it narrowed down into, oh, this can only change this one data type. So if I'm looking at this one piece of the model changing, I can narrow my focus and ignore these areas of code. You know, you can use the effect pattern to do similar things. But it's so, as you're saying, it's sort of so heavyweight to do that, that it might not be worth the benefit because managed effects in Elm are already so cleanly isolated that it's in a pretty good state as it is. I've thought about using a pattern like this for a sort of plugin architecture for authors creating packages for Elm pages, because if you're performing a static HTTP request or, you know, things like that, if you set up a package that generates an RSS feed, it would be nice to know, is it allowed to make HTTP requests or not and be able to explicitly give it permission for what it can do. There are other ways to achieve that effect, though. Like you could just not perform any requests that it performs except a particular wrapped type and you have to pass in the request it can perform. So you could pass in a reference to HTTP. And anyway, there are other ways to achieve that effect. Yeah. And one other use of that pattern is if you need to process those effects in different ways in different contexts. So an example would maybe you have some kind of like, admin tool that lets you like, configure the forms. And actually, we did this at No Red Ink, we had an assignment that students could do. And normally it would like, you know, send data to the back end, here's the work they've done, get data from other students. But we also wanted a preview mode where teachers could play around with the assignment, and also like simulate other students doing work that would like get sent to you and things like that. So that was a case where having an effect type as data was useful, because we can interpret those effects in different ways in the real mode for the students doing the work, we would send the HTTP requests in the preview mode, we have a different interpreter that basically like uses a fake preview data structure. And we can trigger different effects from like an extra panel of buttons for the teacher to explore. So that's that's a case where you need this pattern, but also a relatively rare one, like occasionally, you'll be doing where you need that capability, but not often. That's cool. I can imagine like wanting to have like security audit log or something of all of the particular effects that have been performed. And so you could have a loggable chain of those things and be able to trace them. That's that's a really interesting thing to think about. So okay, so I want to I want to loop back and talk a little bit more about this thing you brought up with the effect pattern with Elm program test where you're describing using the effects type that you define as a sort of equivalent of a command. So you've got like type effects equals and then you can have no effect, which would be the equivalent of command dot none. And then you can have sort of instead of get to do's that specific message to make that HTTP request for getting to do's, you're saying you could have a more general one. And so you can have like a get data effect that has that takes a URL as part of its payload of that constructor and it takes a decoder. So there's an example that we'll link to in the show notes from the Elm program test examples folder that sort of shows effects using HTTP simulations. But how do you avoid having type variables in your effect type or or do you just have to bite the bullet and have a get data for every specific data type that gets returned? Yeah, because right, you need different like in one case, maybe you have one request where you have a decoder that decodes users and in another request, you have a decoder that decodes account information or yeah, to do to do it. Exactly. Yeah, so I need to I need to make a good example. The example we're like to is kind of written as the simple way to do things and straightforward. So there's not a ton of discussion, because the HTTP API in Elm is unfortunately a bit tedious to work with. There's a whole bunch of different types and like if you're doing if you're making tasks versus commands, there's different there's like the expect type, but then there's also some other type that I'm forgetting the name of. So anyway, there is a way to deal with that. The way you end up doing it is the effect type would have for instance, like an HTTP request constructor, right, it would have the payload that it need the headers have the method and the way you end up doing it is you have a decoder that decodes messages. And then you also have a separate function that takes an HTTP error and returns a message. And then you also have the body that takes a JSON value. So you basically like hidden all of your request specific types behind JSON and behind message. So that tedious to call directly, but then you make a helper function that can that basically does take the decoder of type a, the function of type a to message or alternatively the function of result HTTP error a to message, and then it builds the actual parameters to the effect based on those and it would be like composing the decoder with the function that takes the a value and turns it into a message and ends up just storing the decoder of message in the effect type. So that's that's the trick you can use to essentially hide things that like in Haskell, you could deal with that with rank two types and things like that. But in now, you have to have a helper function that has those extra parameters, but then collapses them and return something that doesn't care about those parameters anymore. Mm hmm. Cool. Yeah, I have I have an example that I can link to. I don't I don't think there's an example of this in the own program test examples at the moment, but I've got an example that I can link to that uses that pattern that you just described. So yeah, that's sort of the conclusion I came to as well that you essentially the the trick is that you're using instead of the specific types you're decoding to, you're decoding everything to a JSON decode value, and then you're having a function that takes that JSON, JSON decode value and turns it into a message. Hard to wrap your brain around, but yeah. Yeah. And finally, it's like way more tedious than I would like because the HTTP API just has a kind of convoluted way of dealing with errors, depending on your exact call. So but again, this is something that would just completely go away once the work to like directly work with commands under test is done. So yeah, again, if anyone wants to help get you, it would be incredible, easier to finish that work than to figure out all the stuff we were just talking about, about how to deal with the current API in your tests. So we've gone pretty in depth on the effect pattern, why that's needed. We've talked about simulating effects and the APIs for that. We've talked about the testing pyramid, when to use unit tests versus high level tests. Let's sort of do a quick round of best practices and tips and tricks to, you know, using Elm program test effectively. Sure. So one thing we didn't, we didn't touch on a lot, but kind of a huge amount of work is behind the scenes in Elm program test is the types of error messages that can report about your view. So for instance, if you say click a button with this label, it will look for buttons in a whole bunch of different ways. Like it'll check for accessibility tags, it'll check for things that are actual buttons, it'll check for a button that has an image with all text in it of that text. So I don't know if this is a best practice so much as just the best practice is to use Elm program test. It can help encourage you to write code in an accessible way. Like another thing it will do is verify that you have a label for your checkbox. If you want to click a checkbox and make sure that the label is hooked up in a way that actually works, which there's like three different ways to do it, but you can also make mistakes and have it not actually work in the browser. Yeah, no, those are great tips. I mean, I think those are good debugging tips for just how to understand if things aren't wired up, what should you be learning more about or double checking that you've done correctly? Do you have any opinion on how to select tags or elements? So you say, select them by label, select them by text, but I know that a lot of people like to use end to end tests ID. So a specific attribute, for instance, at Humio, we call it end to end dash ID, and we only use those for tests. Yeah. So I think like the goal of Elm program test is to avoid needing those things in a lot of cases, specifically like with buttons. Elm program test is smart enough to be able to search for the labels. And there's like five different ways a button could get label text. And Elm program test does that in a reusable way. So I think often a lot of the reason that people add those IDs is because the testing framework they're using isn't smart enough to find the thing by the label, all the different ways that labels can be attached. So it's just easier to start attaching IDs everywhere. So if you're using Elm program test, I think a lot of those cases, you won't need those IDs because Elm program test is smart enough to find what you mean by some user viewable information that's on the page. However, there are some limitations to that. Yeah. I think one reason that I heard also is that people don't want to have their test fail when the text of the button changes. You consider that as part of the spec from what I'm hearing? Yeah. I mean, I would say the approach I'd recommend in Elm program test if you wanted that type of safety is to define some constants somewhere that have the text. And then you can refer to that both in your test and in the real code. Right. Because you are sharing code between your... It's just Elm code between the tests and the code. Yeah. I'd say like that, the reason for that is because of my goal of wanting the tests to read like something that a user could understand, or maybe someone understands what HTTP requests are, but they can read it and see like, oh yeah, we're clicking the go back button or whatever. So that if you look at it, basically the scenario that in the workflow that you're testing is clearly visible and readable as opposed to being hidden behind button IDs. However, like if someone really wanted to have an ID focus thing, they could make a test module of helper functions that do that. Like there's some lower level things in Elm program test where you could implement the set of helper functions that you want for your application if the ones that Elm program test provides do some preferences that you don't really want. But I think in general, like I'd like to see more focus on thinking from the user perspective and haven't in practice seen a lot of issues with text labels changing where it was hard to replace. You just go and change it or extract a variable in a constant if that's something that you have happening a lot. So for the, we talked about these sort of effect handlers that are taking your custom type representing the effects in your application and turning it into a real command and a simulated command or a simulated effect. How do we keep those in sync? Because so like one thing that I think can be helpful is, you know, kind of like I hinted at earlier, import simulated effect.http as HTTP. If you import it with that import alias, then the handler function in your test code and your production code will look exactly the same. Yes. Yeah, that's exactly right. And all the simulated effect dot whatever modules in program test, if you look in the docs, it says, this is meant to be an exact parallel of this real module. So that's really the key as we talked about briefly earlier, the constructors in your custom effect type should basically, like, ideally just be the parameters that you're directly going to pass to the function that that produces the command. It almost seems like that could be an opportunity in people's like build or test setup scripts to just, I don't know, have certain modules where you define your real effect handlers. And then you could just derive it from a pretty simple like copy paste of that module and then amend the imports of HTTP to import simulated effect dot HTTP as HTTP. So that could be an interesting thing to explore too. Yes, but we're starting to get to the level of effort where personally, like, you're going to invest doing that work for your application. Yeah. You're getting in touch with me and working out a plan where we can actually get rid of the need for this effect type completely. That'd be so great. I get the feeling that you want some contributions. Yeah, well, yeah, there's just a whole handful of things that I can see the potential for the API from program tests to be even nicer than it is and much easier to understand. So yeah, there's a couple big projects that if folks are interested in, get in touch with me although it would require a bit of commitment to kind of work through some design issues and get this implemented. So getting rid of the need for that effect wrapper is the big one. Adding support for more commands that aren't currently represented as simulated effects, like keyboard focus, the viewport scrolling, things like that. If folks are interested in helping with that, I'd love to hear from them. And it seems like you track these as issues in the GitHub. Is that the place to look for them? Yeah, partly. Certainly if there's something that's missing, either if you are going to work on contributing to it or not open a GitHub issue if there isn't one already. But also not everything is in there. Some of the bigger projects I haven't tracked there yet, not because I don't want them there just because I don't have enough clear information that I want to put down yet. But yeah, that another big one is that the test dot html module that's part of the Elm test package has some missing features and is really composable in a nice way. So there's some improvements there that could allow the simplification of some of the Elm program test stuff. Like currently, if you click a link, you have to both provide the text of the link and the URL that it's supposed to be. But theoretically, you should be able Elm program tests should be able to get the URL from the virtual top. But it's just not possible the way that test dot html is implemented right now. So that's another kind of big project. But if anyone's excited about it, I'd love to chat about it. And small stuff is like you're interested this morning, if you have any improvements to the documentation, or even just issues about some part of the documentation that is unclear, file an issue about it or make a PR with improvements. If anyone's been using Elm program test, or is going through the process of learning it and is inspired to write a blog post, that would be really useful because I've put a lot of work into the documentation, but also I wrote it so I don't really have that perspective of someone coming to try to use it. Some more examples of that would be would be great to have. Awesome. So let's give people some resources to get started here. So you mentioned the docs that you wrote, which are very thorough and well worth a read. Even if another blog post would be helpful, they've got a lot of really good information. So check out the guidebook, which is in the show notes, and just the Elm documentation for the package itself. Also be sure to, you know, there's a lot going on in the HTML test assertion helpers in the Elm test package. So we've got a link to that in the show notes as well. Definitely check out that and familiarize yourself with the API. And any other resources? Is the Elm test Slack channel a good place to ask questions or discuss that? Yeah, I think that actually is a good place. Is it the testing channel? Oh, yeah, just called test. It's called hashtag testing in the Elm Slack. On the docs, I did want to mention two big thanks to some of my former, you know, Red Ink colleagues, specifically Katie Hughes and Michael Hadley and Brooke Angel, who helped review the documentation, give suggestions, helped me improve that when I did the big 3.0 release. Great stuff. And Vanessa also gave a really great talk about writing testable Elm. She talked quite a bit about using Elm program tests and some of the accessibility features that you were discussing, too. So that's worth a watch as well. So cool. Well, I mean, there's so much more we could get into, so many great details to talk about here. But this was a lot of fun. Thank you so much for chatting with us, Aaron. Yeah, thanks for having me. And until next time, talk to you later. You're in. See you. You", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Yaron.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 2, "seek": 0, "start": 2.0, "end": 8.36, "text": " And again, today we're joined by a special guest, Aaron Vonderhaar.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 3, "seek": 0, "start": 8.36, "end": 9.36, "text": " Welcome Aaron.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 4, "seek": 0, "start": 9.36, "end": 10.36, "text": " Hey, how's it going?", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 5, "seek": 0, "start": 10.36, "end": 11.36, "text": " It's going well.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 6, "seek": 0, "start": 11.36, "end": 12.52, "text": " Thank you for joining us.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 7, "seek": 0, "start": 12.52, "end": 16.28, "text": " You want to say a quick hello and tell us a little bit about yourself?", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 8, "seek": 0, "start": 16.28, "end": 17.28, "text": " Sure.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 9, "seek": 0, "start": 17.28, "end": 19.36, "text": " I am Aaron Vonderhaar.", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 10, "seek": 0, "start": 19.36, "end": 27.560000000000002, "text": " I have been, I guess, a full stack developer my whole professional career and did a lot", "tokens": [50364, 2425, 11, 398, 6372, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 400, 797, 11, 965, 321, 434, 6869, 538, 257, 2121, 8341, 11, 14018, 691, 8548, 1641, 289, 13, 50782, 50782, 4027, 14018, 13, 50832, 50832, 1911, 11, 577, 311, 309, 516, 30, 50882, 50882, 467, 311, 516, 731, 13, 50932, 50932, 1044, 291, 337, 5549, 505, 13, 50990, 50990, 509, 528, 281, 584, 257, 1702, 7751, 293, 980, 505, 257, 707, 857, 466, 1803, 30, 51178, 51178, 4894, 13, 51228, 51228, 286, 669, 14018, 691, 8548, 1641, 289, 13, 51332, 51332, 286, 362, 668, 11, 286, 2041, 11, 257, 1577, 8630, 10754, 452, 1379, 4843, 3988, 293, 630, 257, 688, 51742, 51742], "temperature": 0.0, "avg_logprob": -0.1880761007977347, "compression_ratio": 1.5146443514644352, "no_caption_prob": 0.7206557989120483}, {"id": 11, "seek": 2756, "start": 27.56, "end": 32.68, "text": " of mobile iOS and Android development in the past and have been doing Elm, I guess it's", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 12, "seek": 2756, "start": 32.68, "end": 39.519999999999996, "text": " almost eight years ago now that I started writing Elm format and was working at KnowRedDNK", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 13, "seek": 2756, "start": 39.519999999999996, "end": 44.8, "text": " for about four and a half years doing Elm there and now doing some Elm consulting work.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 14, "seek": 2756, "start": 44.8, "end": 45.8, "text": " Okay.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 15, "seek": 2756, "start": 45.8, "end": 46.8, "text": " You're hired.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 16, "seek": 2756, "start": 46.8, "end": 47.8, "text": " Perfect.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 17, "seek": 2756, "start": 47.8, "end": 48.8, "text": " Great.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 18, "seek": 2756, "start": 48.8, "end": 49.8, "text": " Yeah.", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 19, "seek": 2756, "start": 49.8, "end": 55.32, "text": " And we had a lot of fun discussing Elm format in our last episode and it's fun to have you", "tokens": [50364, 295, 6013, 17430, 293, 8853, 3250, 294, 264, 1791, 293, 362, 668, 884, 2699, 76, 11, 286, 2041, 309, 311, 50620, 50620, 1920, 3180, 924, 2057, 586, 300, 286, 1409, 3579, 2699, 76, 7877, 293, 390, 1364, 412, 10265, 20544, 35, 45, 42, 50962, 50962, 337, 466, 1451, 293, 257, 1922, 924, 884, 2699, 76, 456, 293, 586, 884, 512, 2699, 76, 23682, 589, 13, 51226, 51226, 1033, 13, 51276, 51276, 509, 434, 13144, 13, 51326, 51326, 10246, 13, 51376, 51376, 3769, 13, 51426, 51426, 865, 13, 51476, 51476, 400, 321, 632, 257, 688, 295, 1019, 10850, 2699, 76, 7877, 294, 527, 1036, 3500, 293, 309, 311, 1019, 281, 362, 291, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.1678865847380265, "compression_ratio": 1.5896414342629481, "no_caption_prob": 0.0001397943269694224}, {"id": 20, "seek": 5532, "start": 55.32, "end": 59.6, "text": " on to discuss another tool of yours.", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 21, "seek": 5532, "start": 59.6, "end": 63.8, "text": " So today we're going to be doing a deep dive on Elm program test.", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 22, "seek": 5532, "start": 63.8, "end": 66.92, "text": " So let's start with the definition.", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 23, "seek": 5532, "start": 66.92, "end": 68.76, "text": " What is Elm program test?", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 24, "seek": 5532, "start": 68.76, "end": 69.76, "text": " Yeah.", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 25, "seek": 5532, "start": 69.76, "end": 75.36, "text": " So Elm program test came about as filling a gap for me in doing Elm development and", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 26, "seek": 5532, "start": 75.36, "end": 81.32, "text": " doing it in a test driven development style way of being able to write high level tests", "tokens": [50364, 322, 281, 2248, 1071, 2290, 295, 6342, 13, 50578, 50578, 407, 965, 321, 434, 516, 281, 312, 884, 257, 2452, 9192, 322, 2699, 76, 1461, 1500, 13, 50788, 50788, 407, 718, 311, 722, 365, 264, 7123, 13, 50944, 50944, 708, 307, 2699, 76, 1461, 1500, 30, 51036, 51036, 865, 13, 51086, 51086, 407, 2699, 76, 1461, 1500, 1361, 466, 382, 10623, 257, 7417, 337, 385, 294, 884, 2699, 76, 3250, 293, 51366, 51366, 884, 309, 294, 257, 1500, 9555, 3250, 3758, 636, 295, 885, 1075, 281, 2464, 1090, 1496, 6921, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.10064014475396339, "compression_ratio": 1.6764705882352942, "no_caption_prob": 2.2826894564786926e-05}, {"id": 27, "seek": 8132, "start": 81.32, "end": 87.8, "text": " that are written basically from the perspective of a user or an outside entity interacting", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 28, "seek": 8132, "start": 87.8, "end": 89.08, "text": " with your Elm program.", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 29, "seek": 8132, "start": 89.08, "end": 94.83999999999999, "text": " And it basically gives a nice high level API to write Elm tests in that fashion.", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 30, "seek": 8132, "start": 94.83999999999999, "end": 100.08, "text": " In practice, I found the main benefit that that gives you is the ability to have test", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 31, "seek": 8132, "start": 100.08, "end": 106.08, "text": " coverage that is resilient to refactorings and specifically like significant refactorings", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 32, "seek": 8132, "start": 106.08, "end": 109.35999999999999, "text": " if you need to restructure how your application works.", "tokens": [50364, 300, 366, 3720, 1936, 490, 264, 4585, 295, 257, 4195, 420, 364, 2380, 13977, 18017, 50688, 50688, 365, 428, 2699, 76, 1461, 13, 50752, 50752, 400, 309, 1936, 2709, 257, 1481, 1090, 1496, 9362, 281, 2464, 2699, 76, 6921, 294, 300, 6700, 13, 51040, 51040, 682, 3124, 11, 286, 1352, 264, 2135, 5121, 300, 300, 2709, 291, 307, 264, 3485, 281, 362, 1500, 51302, 51302, 9645, 300, 307, 23699, 281, 1895, 15104, 1109, 293, 4682, 411, 4776, 1895, 15104, 1109, 51602, 51602, 498, 291, 643, 281, 1472, 2885, 577, 428, 3861, 1985, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.0714365575731415, "compression_ratio": 1.6536964980544746, "no_caption_prob": 1.1842442290799227e-05}, {"id": 33, "seek": 10936, "start": 109.36, "end": 114.28, "text": " If you're converting like a single page app into a spa app, bigger things like that, or", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 34, "seek": 10936, "start": 114.28, "end": 119.52, "text": " even just like sophisticated new features or changing workflows for your users, the", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 35, "seek": 10936, "start": 119.52, "end": 124.0, "text": " tests that you write with Elm program tests tend to give you test coverage that allows", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 36, "seek": 10936, "start": 124.0, "end": 128.64, "text": " you to do safe refactorings that are much larger than refactorings you'd have coverage", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 37, "seek": 10936, "start": 128.64, "end": 131.74, "text": " for using normal unit tests.", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 38, "seek": 10936, "start": 131.74, "end": 134.84, "text": " You mentioned that you were writing Elm tests.", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 39, "seek": 10936, "start": 134.84, "end": 138.92000000000002, "text": " So this works with the regular Elm test binary, right?", "tokens": [50364, 759, 291, 434, 29942, 411, 257, 2167, 3028, 724, 666, 257, 32543, 724, 11, 3801, 721, 411, 300, 11, 420, 50610, 50610, 754, 445, 411, 16950, 777, 4122, 420, 4473, 43461, 337, 428, 5022, 11, 264, 50872, 50872, 6921, 300, 291, 2464, 365, 2699, 76, 1461, 6921, 3928, 281, 976, 291, 1500, 9645, 300, 4045, 51096, 51096, 291, 281, 360, 3273, 1895, 15104, 1109, 300, 366, 709, 4833, 813, 1895, 15104, 1109, 291, 1116, 362, 9645, 51328, 51328, 337, 1228, 2710, 4985, 6921, 13, 51483, 51483, 509, 2835, 300, 291, 645, 3579, 2699, 76, 6921, 13, 51638, 51638, 407, 341, 1985, 365, 264, 3890, 2699, 76, 1500, 17434, 11, 558, 30, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.09692198711892833, "compression_ratio": 1.75, "no_caption_prob": 1.7778307665139437e-05}, {"id": 40, "seek": 13892, "start": 138.92, "end": 140.11999999999998, "text": " Yep, exactly.", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 41, "seek": 13892, "start": 140.11999999999998, "end": 144.64, "text": " This is basically just a sophisticated set of helper functions that can be used with", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 42, "seek": 13892, "start": 144.64, "end": 146.39999999999998, "text": " normal Elm tests.", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 43, "seek": 13892, "start": 146.39999999999998, "end": 147.6, "text": " Right.", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 44, "seek": 13892, "start": 147.6, "end": 154.11999999999998, "text": " So just to give like a high level overview of like, what the actual wiring looks like,", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 45, "seek": 13892, "start": 154.11999999999998, "end": 159.67999999999998, "text": " you pass in an init update and view function to Elm program tests.", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 46, "seek": 13892, "start": 159.67999999999998, "end": 165.56, "text": " So that's how it works is it's actually simulating, initializing and going through the updates", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 47, "seek": 13892, "start": 165.56, "end": 168.44, "text": " and responding to events in the view.", "tokens": [50364, 7010, 11, 2293, 13, 50424, 50424, 639, 307, 1936, 445, 257, 16950, 992, 295, 36133, 6828, 300, 393, 312, 1143, 365, 50650, 50650, 2710, 2699, 76, 6921, 13, 50738, 50738, 1779, 13, 50798, 50798, 407, 445, 281, 976, 411, 257, 1090, 1496, 12492, 295, 411, 11, 437, 264, 3539, 27520, 1542, 411, 11, 51124, 51124, 291, 1320, 294, 364, 3157, 5623, 293, 1910, 2445, 281, 2699, 76, 1461, 6921, 13, 51402, 51402, 407, 300, 311, 577, 309, 1985, 307, 309, 311, 767, 1034, 12162, 11, 5883, 3319, 293, 516, 807, 264, 9205, 51696, 51696, 293, 16670, 281, 3931, 294, 264, 1910, 13, 51840, 51840], "temperature": 0.0, "avg_logprob": -0.14923649913859818, "compression_ratio": 1.6205533596837944, "no_caption_prob": 5.955074811936356e-06}, {"id": 48, "seek": 16844, "start": 168.44, "end": 169.92, "text": " Yep, exactly.", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 49, "seek": 16844, "start": 169.92, "end": 175.4, "text": " Essentially I'm program test was extracted from some helper functions that I started", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 50, "seek": 16844, "start": 175.4, "end": 179.42, "text": " like adding throughout no red inks, a test code.", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 51, "seek": 16844, "start": 179.42, "end": 184.56, "text": " And the very first version of that basically just looked like we were creating a model,", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 52, "seek": 16844, "start": 184.56, "end": 189.26, "text": " piping it through a bunch of update calls to the update function with different messages.", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 53, "seek": 16844, "start": 189.26, "end": 195.28, "text": " And eventually that got fancier where I realized, Oh, we can use the HTML testing features of", "tokens": [50364, 7010, 11, 2293, 13, 50438, 50438, 23596, 286, 478, 1461, 1500, 390, 34086, 490, 512, 36133, 6828, 300, 286, 1409, 50712, 50712, 411, 5127, 3710, 572, 2182, 294, 1694, 11, 257, 1500, 3089, 13, 50913, 50913, 400, 264, 588, 700, 3037, 295, 300, 1936, 445, 2956, 411, 321, 645, 4084, 257, 2316, 11, 51170, 51170, 35204, 309, 807, 257, 3840, 295, 5623, 5498, 281, 264, 5623, 2445, 365, 819, 7897, 13, 51405, 51405, 400, 4728, 300, 658, 3429, 27674, 689, 286, 5334, 11, 876, 11, 321, 393, 764, 264, 17995, 4997, 4122, 295, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.14409195024942614, "compression_ratio": 1.5692883895131087, "no_caption_prob": 2.212467006756924e-05}, {"id": 54, "seek": 19528, "start": 195.28, "end": 201.04, "text": " Elm test so that we can actually inspect the view that is based on the current state of", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 55, "seek": 19528, "start": 201.04, "end": 206.32, "text": " the model and make sure that the view has ways to interact that we expect to produce", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 56, "seek": 19528, "start": 206.32, "end": 209.08, "text": " the message that we want to feed through the update loop.", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 57, "seek": 19528, "start": 209.08, "end": 214.48, "text": " So essentially that's the complexity in Elm program test is creating an API that essentially", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 58, "seek": 19528, "start": 214.48, "end": 220.44, "text": " is speaks in a different language than view model update, which is like the technical", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 59, "seek": 19528, "start": 220.44, "end": 223.32, "text": " implementation of how Elm programs are written.", "tokens": [50364, 2699, 76, 1500, 370, 300, 321, 393, 767, 15018, 264, 1910, 300, 307, 2361, 322, 264, 2190, 1785, 295, 50652, 50652, 264, 2316, 293, 652, 988, 300, 264, 1910, 575, 2098, 281, 4648, 300, 321, 2066, 281, 5258, 50916, 50916, 264, 3636, 300, 321, 528, 281, 3154, 807, 264, 5623, 6367, 13, 51054, 51054, 407, 4476, 300, 311, 264, 14024, 294, 2699, 76, 1461, 1500, 307, 4084, 364, 9362, 300, 4476, 51324, 51324, 307, 10789, 294, 257, 819, 2856, 813, 1910, 2316, 5623, 11, 597, 307, 411, 264, 6191, 51622, 51622, 11420, 295, 577, 2699, 76, 4268, 366, 3720, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09014665163480319, "compression_ratio": 1.7576923076923077, "no_caption_prob": 7.527779871452367e-06}, {"id": 60, "seek": 22332, "start": 223.32, "end": 228.0, "text": " And Elm program test lets you use functions like, Oh, click the button with this label", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 61, "seek": 22332, "start": 228.0, "end": 233.98, "text": " or pretend that this HTTP request you made came back with this error code, things like", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 62, "seek": 22332, "start": 233.98, "end": 234.98, "text": " that.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 63, "seek": 22332, "start": 234.98, "end": 235.98, "text": " Right.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 64, "seek": 22332, "start": 235.98, "end": 240.88, "text": " So let's talk a little bit about some use cases and when somebody would use this compared", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 65, "seek": 22332, "start": 240.88, "end": 242.16, "text": " to a regular test.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 66, "seek": 22332, "start": 242.16, "end": 247.88, "text": " So we covered test driven development and Elm test in general in our Elm test episode,", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 67, "seek": 22332, "start": 247.88, "end": 249.7, "text": " but this is something different.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 68, "seek": 22332, "start": 249.7, "end": 252.12, "text": " This is a higher level form of testing.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 6653, 291, 764, 6828, 411, 11, 876, 11, 2052, 264, 2960, 365, 341, 7645, 50598, 50598, 420, 11865, 300, 341, 33283, 5308, 291, 1027, 1361, 646, 365, 341, 6713, 3089, 11, 721, 411, 50897, 50897, 300, 13, 50947, 50947, 1779, 13, 50997, 50997, 407, 718, 311, 751, 257, 707, 857, 466, 512, 764, 3331, 293, 562, 2618, 576, 764, 341, 5347, 51242, 51242, 281, 257, 3890, 1500, 13, 51306, 51306, 407, 321, 5343, 1500, 9555, 3250, 293, 2699, 76, 1500, 294, 2674, 294, 527, 2699, 76, 1500, 3500, 11, 51592, 51592, 457, 341, 307, 746, 819, 13, 51683, 51683, 639, 307, 257, 2946, 1496, 1254, 295, 4997, 13, 51804, 51804], "temperature": 0.0, "avg_logprob": -0.09612755897717598, "compression_ratio": 1.6485507246376812, "no_caption_prob": 2.840856359398458e-05}, {"id": 69, "seek": 25212, "start": 252.12, "end": 257.68, "text": " And so when would you reach for this rather than a more vanilla unit test?", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 70, "seek": 25212, "start": 257.68, "end": 258.68, "text": " Sure.", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 71, "seek": 25212, "start": 258.68, "end": 264.68, "text": " So something you two talked about in your previous episode was about the testing pyramid", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 72, "seek": 25212, "start": 264.68, "end": 266.48, "text": " and kind of the different layers of that.", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 73, "seek": 25212, "start": 266.48, "end": 271.52, "text": " I guess there's a couple of things that the main thing is that if you're happy with unit", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 74, "seek": 25212, "start": 271.52, "end": 276.78000000000003, "text": " tests you have Elm program test isn't trying to stop you from writing unit tests that you're", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 75, "seek": 25212, "start": 276.78000000000003, "end": 277.92, "text": " already happy with.", "tokens": [50364, 400, 370, 562, 576, 291, 2524, 337, 341, 2831, 813, 257, 544, 17528, 4985, 1500, 30, 50642, 50642, 4894, 13, 50692, 50692, 407, 746, 291, 732, 2825, 466, 294, 428, 3894, 3500, 390, 466, 264, 4997, 25950, 50992, 50992, 293, 733, 295, 264, 819, 7914, 295, 300, 13, 51082, 51082, 286, 2041, 456, 311, 257, 1916, 295, 721, 300, 264, 2135, 551, 307, 300, 498, 291, 434, 2055, 365, 4985, 51334, 51334, 6921, 291, 362, 2699, 76, 1461, 1500, 1943, 380, 1382, 281, 1590, 291, 490, 3579, 4985, 6921, 300, 291, 434, 51597, 51597, 1217, 2055, 365, 13, 51654, 51654], "temperature": 0.0, "avg_logprob": -0.14197693619073606, "compression_ratio": 1.6926229508196722, "no_caption_prob": 2.282725654367823e-05}, {"id": 76, "seek": 27792, "start": 277.92, "end": 284.76, "text": " Elm program test provides the level above that and in particular, if you look at end", "tokens": [50364, 2699, 76, 1461, 1500, 6417, 264, 1496, 3673, 300, 293, 294, 1729, 11, 498, 291, 574, 412, 917, 50706, 50706, 281, 917, 6921, 1228, 746, 411, 10295, 11637, 420, 10736, 268, 2197, 3670, 6787, 2361, 4997, 11, 452, 1454, 51031, 51031, 575, 668, 300, 2699, 76, 1461, 1500, 486, 2089, 291, 281, 2464, 6921, 294, 264, 912, 2856, 382, 51271, 51271, 729, 689, 291, 434, 1417, 466, 437, 264, 4195, 775, 11, 437, 436, 536, 322, 264, 2568, 13, 51518, 51518, 583, 498, 291, 747, 264, 15302, 300, 291, 3361, 264, 2699, 76, 31958, 293, 264, 2699, 76, 17401, 281, 767, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08485544295538039, "compression_ratio": 1.7125984251968505, "no_caption_prob": 7.483689114451408e-05}, {"id": 77, "seek": 27792, "start": 284.76, "end": 291.26, "text": " to end tests using something like Cypress or Selenium web driver based testing, my hope", "tokens": [50364, 2699, 76, 1461, 1500, 6417, 264, 1496, 3673, 300, 293, 294, 1729, 11, 498, 291, 574, 412, 917, 50706, 50706, 281, 917, 6921, 1228, 746, 411, 10295, 11637, 420, 10736, 268, 2197, 3670, 6787, 2361, 4997, 11, 452, 1454, 51031, 51031, 575, 668, 300, 2699, 76, 1461, 1500, 486, 2089, 291, 281, 2464, 6921, 294, 264, 912, 2856, 382, 51271, 51271, 729, 689, 291, 434, 1417, 466, 437, 264, 4195, 775, 11, 437, 436, 536, 322, 264, 2568, 13, 51518, 51518, 583, 498, 291, 747, 264, 15302, 300, 291, 3361, 264, 2699, 76, 31958, 293, 264, 2699, 76, 17401, 281, 767, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08485544295538039, "compression_ratio": 1.7125984251968505, "no_caption_prob": 7.483689114451408e-05}, {"id": 78, "seek": 27792, "start": 291.26, "end": 296.06, "text": " has been that Elm program test will allow you to write tests in the same language as", "tokens": [50364, 2699, 76, 1461, 1500, 6417, 264, 1496, 3673, 300, 293, 294, 1729, 11, 498, 291, 574, 412, 917, 50706, 50706, 281, 917, 6921, 1228, 746, 411, 10295, 11637, 420, 10736, 268, 2197, 3670, 6787, 2361, 4997, 11, 452, 1454, 51031, 51031, 575, 668, 300, 2699, 76, 1461, 1500, 486, 2089, 291, 281, 2464, 6921, 294, 264, 912, 2856, 382, 51271, 51271, 729, 689, 291, 434, 1417, 466, 437, 264, 4195, 775, 11, 437, 436, 536, 322, 264, 2568, 13, 51518, 51518, 583, 498, 291, 747, 264, 15302, 300, 291, 3361, 264, 2699, 76, 31958, 293, 264, 2699, 76, 17401, 281, 767, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08485544295538039, "compression_ratio": 1.7125984251968505, "no_caption_prob": 7.483689114451408e-05}, {"id": 79, "seek": 27792, "start": 296.06, "end": 301.0, "text": " those where you're talking about what the user does, what they see on the screen.", "tokens": [50364, 2699, 76, 1461, 1500, 6417, 264, 1496, 3673, 300, 293, 294, 1729, 11, 498, 291, 574, 412, 917, 50706, 50706, 281, 917, 6921, 1228, 746, 411, 10295, 11637, 420, 10736, 268, 2197, 3670, 6787, 2361, 4997, 11, 452, 1454, 51031, 51031, 575, 668, 300, 2699, 76, 1461, 1500, 486, 2089, 291, 281, 2464, 6921, 294, 264, 912, 2856, 382, 51271, 51271, 729, 689, 291, 434, 1417, 466, 437, 264, 4195, 775, 11, 437, 436, 536, 322, 264, 2568, 13, 51518, 51518, 583, 498, 291, 747, 264, 15302, 300, 291, 3361, 264, 2699, 76, 31958, 293, 264, 2699, 76, 17401, 281, 767, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08485544295538039, "compression_ratio": 1.7125984251968505, "no_caption_prob": 7.483689114451408e-05}, {"id": 80, "seek": 27792, "start": 301.0, "end": 307.12, "text": " But if you take the assumption that you trust the Elm compiler and the Elm packages to actually", "tokens": [50364, 2699, 76, 1461, 1500, 6417, 264, 1496, 3673, 300, 293, 294, 1729, 11, 498, 291, 574, 412, 917, 50706, 50706, 281, 917, 6921, 1228, 746, 411, 10295, 11637, 420, 10736, 268, 2197, 3670, 6787, 2361, 4997, 11, 452, 1454, 51031, 51031, 575, 668, 300, 2699, 76, 1461, 1500, 486, 2089, 291, 281, 2464, 6921, 294, 264, 912, 2856, 382, 51271, 51271, 729, 689, 291, 434, 1417, 466, 437, 264, 4195, 775, 11, 437, 436, 536, 322, 264, 2568, 13, 51518, 51518, 583, 498, 291, 747, 264, 15302, 300, 291, 3361, 264, 2699, 76, 31958, 293, 264, 2699, 76, 17401, 281, 767, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.08485544295538039, "compression_ratio": 1.7125984251968505, "no_caption_prob": 7.483689114451408e-05}, {"id": 81, "seek": 30712, "start": 307.12, "end": 312.12, "text": " do what their documentation says they do when they're compiled and running in a browser,", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 82, "seek": 30712, "start": 312.12, "end": 317.02, "text": " if you can trust Elm as a framework to do those things, then you can use on program", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 83, "seek": 30712, "start": 317.02, "end": 323.2, "text": " test to write tests that cover those same high level features, but that run much faster", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 84, "seek": 30712, "start": 323.2, "end": 326.16, "text": " are completely not flaky, completely deterministic.", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 85, "seek": 30712, "start": 326.16, "end": 333.84000000000003, "text": " Yeah, no, if you can exercise some functionality at a low unit level, then that's ideal.", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 86, "seek": 30712, "start": 333.84000000000003, "end": 336.0, "text": " But that doesn't always give you confidence.", "tokens": [50364, 360, 437, 641, 14333, 1619, 436, 360, 562, 436, 434, 36548, 293, 2614, 294, 257, 11185, 11, 50614, 50614, 498, 291, 393, 3361, 2699, 76, 382, 257, 8388, 281, 360, 729, 721, 11, 550, 291, 393, 764, 322, 1461, 50859, 50859, 1500, 281, 2464, 6921, 300, 2060, 729, 912, 1090, 1496, 4122, 11, 457, 300, 1190, 709, 4663, 51168, 51168, 366, 2584, 406, 932, 15681, 11, 2584, 15957, 3142, 13, 51316, 51316, 865, 11, 572, 11, 498, 291, 393, 5380, 512, 14980, 412, 257, 2295, 4985, 1496, 11, 550, 300, 311, 7157, 13, 51700, 51700, 583, 300, 1177, 380, 1009, 976, 291, 6687, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.11244719999807852, "compression_ratio": 1.6704119850187267, "no_caption_prob": 4.133182665100321e-05}, {"id": 87, "seek": 33600, "start": 336.0, "end": 342.42, "text": " So if you, you know, one of the rules of thumb that I try to follow is the more high level", "tokens": [50364, 407, 498, 291, 11, 291, 458, 11, 472, 295, 264, 4474, 295, 9298, 300, 286, 853, 281, 1524, 307, 264, 544, 1090, 1496, 50685, 50685, 452, 4997, 3643, 11, 264, 1570, 13914, 309, 820, 312, 13, 50932, 50932, 407, 498, 286, 478, 21814, 300, 286, 478, 1382, 281, 5380, 633, 6562, 1944, 294, 633, 4691, 1389, 11, 51336, 51336, 293, 309, 311, 294, 257, 1090, 1496, 1500, 11, 550, 286, 478, 1953, 456, 311, 746, 300, 2139, 2203, 281, 312, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09211969943273635, "compression_ratio": 1.6435643564356435, "no_caption_prob": 1.1125259334221482e-05}, {"id": 88, "seek": 33600, "start": 342.42, "end": 347.36, "text": " my testing becomes, the less comprehensive it should be.", "tokens": [50364, 407, 498, 291, 11, 291, 458, 11, 472, 295, 264, 4474, 295, 9298, 300, 286, 853, 281, 1524, 307, 264, 544, 1090, 1496, 50685, 50685, 452, 4997, 3643, 11, 264, 1570, 13914, 309, 820, 312, 13, 50932, 50932, 407, 498, 286, 478, 21814, 300, 286, 478, 1382, 281, 5380, 633, 6562, 1944, 294, 633, 4691, 1389, 11, 51336, 51336, 293, 309, 311, 294, 257, 1090, 1496, 1500, 11, 550, 286, 478, 1953, 456, 311, 746, 300, 2139, 2203, 281, 312, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09211969943273635, "compression_ratio": 1.6435643564356435, "no_caption_prob": 1.1125259334221482e-05}, {"id": 89, "seek": 33600, "start": 347.36, "end": 355.44, "text": " So if I'm noticing that I'm trying to exercise every combination possible in every edge case,", "tokens": [50364, 407, 498, 291, 11, 291, 458, 11, 472, 295, 264, 4474, 295, 9298, 300, 286, 853, 281, 1524, 307, 264, 544, 1090, 1496, 50685, 50685, 452, 4997, 3643, 11, 264, 1570, 13914, 309, 820, 312, 13, 50932, 50932, 407, 498, 286, 478, 21814, 300, 286, 478, 1382, 281, 5380, 633, 6562, 1944, 294, 633, 4691, 1389, 11, 51336, 51336, 293, 309, 311, 294, 257, 1090, 1496, 1500, 11, 550, 286, 478, 1953, 456, 311, 746, 300, 2139, 2203, 281, 312, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09211969943273635, "compression_ratio": 1.6435643564356435, "no_caption_prob": 1.1125259334221482e-05}, {"id": 90, "seek": 33600, "start": 355.44, "end": 360.2, "text": " and it's in a high level test, then I'm thinking there's something that either needs to be", "tokens": [50364, 407, 498, 291, 11, 291, 458, 11, 472, 295, 264, 4474, 295, 9298, 300, 286, 853, 281, 1524, 307, 264, 544, 1090, 1496, 50685, 50685, 452, 4997, 3643, 11, 264, 1570, 13914, 309, 820, 312, 13, 50932, 50932, 407, 498, 286, 478, 21814, 300, 286, 478, 1382, 281, 5380, 633, 6562, 1944, 294, 633, 4691, 1389, 11, 51336, 51336, 293, 309, 311, 294, 257, 1090, 1496, 1500, 11, 550, 286, 478, 1953, 456, 311, 746, 300, 2139, 2203, 281, 312, 51574, 51574], "temperature": 0.0, "avg_logprob": -0.09211969943273635, "compression_ratio": 1.6435643564356435, "no_caption_prob": 1.1125259334221482e-05}, {"id": 91, "seek": 36020, "start": 360.2, "end": 366.15999999999997, "text": " split out into a module that's testable or simply exists that way, but isn't being properly", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 92, "seek": 36020, "start": 366.15999999999997, "end": 371.2, "text": " unit tested to give me confidence because that's really not, it's going to be extremely", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 93, "seek": 36020, "start": 371.2, "end": 378.0, "text": " verbose to have to create a whole test scenario where you're describing clicking through things", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 94, "seek": 36020, "start": 378.0, "end": 380.52, "text": " and all these permutations.", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 95, "seek": 36020, "start": 380.52, "end": 386.36, "text": " Because you know, just mathematically, if you think about a higher level test, you're", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 96, "seek": 36020, "start": 386.36, "end": 388.44, "text": " putting more pieces together.", "tokens": [50364, 7472, 484, 666, 257, 10088, 300, 311, 1500, 712, 420, 2935, 8198, 300, 636, 11, 457, 1943, 380, 885, 6108, 50662, 50662, 4985, 8246, 281, 976, 385, 6687, 570, 300, 311, 534, 406, 11, 309, 311, 516, 281, 312, 4664, 50914, 50914, 9595, 541, 281, 362, 281, 1884, 257, 1379, 1500, 9005, 689, 291, 434, 16141, 9697, 807, 721, 51254, 51254, 293, 439, 613, 4784, 325, 763, 13, 51380, 51380, 1436, 291, 458, 11, 445, 44003, 11, 498, 291, 519, 466, 257, 2946, 1496, 1500, 11, 291, 434, 51672, 51672, 3372, 544, 3755, 1214, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.1082511381669478, "compression_ratio": 1.63671875, "no_caption_prob": 0.00014424567052628845}, {"id": 97, "seek": 38844, "start": 388.44, "end": 392.96, "text": " So there are more variables, there are more things operating together on that page.", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 98, "seek": 38844, "start": 392.96, "end": 399.48, "text": " And so if you try to exhaustively check them, now you've got a combinatoric explosion.", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 99, "seek": 38844, "start": 399.48, "end": 403.28, "text": " And it's just not going to be effective, because you can't do that.", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 100, "seek": 38844, "start": 403.28, "end": 405.8, "text": " But you can at the unit level and you want to.", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 101, "seek": 38844, "start": 405.8, "end": 409.6, "text": " So that's one thing I try to pay attention to.", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 102, "seek": 38844, "start": 409.6, "end": 415.04, "text": " But then, like, so why not just test everything in isolated unit tests, right?", "tokens": [50364, 407, 456, 366, 544, 9102, 11, 456, 366, 544, 721, 7447, 1214, 322, 300, 3028, 13, 50590, 50590, 400, 370, 498, 291, 853, 281, 14687, 3413, 1520, 552, 11, 586, 291, 600, 658, 257, 2512, 31927, 299, 15673, 13, 50916, 50916, 400, 309, 311, 445, 406, 516, 281, 312, 4942, 11, 570, 291, 393, 380, 360, 300, 13, 51106, 51106, 583, 291, 393, 412, 264, 4985, 1496, 293, 291, 528, 281, 13, 51232, 51232, 407, 300, 311, 472, 551, 286, 853, 281, 1689, 3202, 281, 13, 51422, 51422, 583, 550, 11, 411, 11, 370, 983, 406, 445, 1500, 1203, 294, 14621, 4985, 6921, 11, 558, 30, 51694, 51694], "temperature": 0.0, "avg_logprob": -0.10892125043002042, "compression_ratio": 1.6639676113360324, "no_caption_prob": 2.684173750822083e-06}, {"id": 103, "seek": 41504, "start": 415.04, "end": 421.08000000000004, "text": " And the reason for that is that you don't get the same confidence about things interacting", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 104, "seek": 41504, "start": 421.08000000000004, "end": 425.08000000000004, "text": " together and about the system functioning at a high level.", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 105, "seek": 41504, "start": 425.08000000000004, "end": 430.8, "text": " Like what is the user's experience when they come in and they click on byproduct?", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 106, "seek": 41504, "start": 430.8, "end": 432.12, "text": " Do you get money?", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 107, "seek": 41504, "start": 432.12, "end": 433.12, "text": " That's an important thing to know.", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 108, "seek": 41504, "start": 433.12, "end": 439.88, "text": " And a unit test might tell you that the credit card information is being validated correctly.", "tokens": [50364, 400, 264, 1778, 337, 300, 307, 300, 291, 500, 380, 483, 264, 912, 6687, 466, 721, 18017, 50666, 50666, 1214, 293, 466, 264, 1185, 18483, 412, 257, 1090, 1496, 13, 50866, 50866, 1743, 437, 307, 264, 4195, 311, 1752, 562, 436, 808, 294, 293, 436, 2052, 322, 538, 33244, 30, 51152, 51152, 1144, 291, 483, 1460, 30, 51218, 51218, 663, 311, 364, 1021, 551, 281, 458, 13, 51268, 51268, 400, 257, 4985, 1500, 1062, 980, 291, 300, 264, 5397, 2920, 1589, 307, 885, 40693, 8944, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.11907898585001628, "compression_ratio": 1.588235294117647, "no_caption_prob": 2.3922846594359726e-05}, {"id": 109, "seek": 43988, "start": 439.88, "end": 445.36, "text": " It strips out white space appropriately, formats it, gives the right client side validation.", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 110, "seek": 43988, "start": 445.36, "end": 447.15999999999997, "text": " That would be a great unit test.", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 111, "seek": 43988, "start": 447.15999999999997, "end": 452.84, "text": " But is it making the right API request and handling the response, showing error messages?", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 112, "seek": 43988, "start": 452.84, "end": 458.56, "text": " You want to know that when a user goes to do some important business flow, that you", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 113, "seek": 43988, "start": 458.56, "end": 461.12, "text": " want confidence that it's actually going to do that.", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 114, "seek": 43988, "start": 461.12, "end": 463.71999999999997, "text": " And unit tests don't necessarily give you that.", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 115, "seek": 43988, "start": 463.71999999999997, "end": 465.74, "text": " Yeah, that's exactly right.", "tokens": [50364, 467, 19842, 484, 2418, 1901, 23505, 11, 25879, 309, 11, 2709, 264, 558, 6423, 1252, 24071, 13, 50638, 50638, 663, 576, 312, 257, 869, 4985, 1500, 13, 50728, 50728, 583, 307, 309, 1455, 264, 558, 9362, 5308, 293, 13175, 264, 4134, 11, 4099, 6713, 7897, 30, 51012, 51012, 509, 528, 281, 458, 300, 562, 257, 4195, 1709, 281, 360, 512, 1021, 1606, 3095, 11, 300, 291, 51298, 51298, 528, 6687, 300, 309, 311, 767, 516, 281, 360, 300, 13, 51426, 51426, 400, 4985, 6921, 500, 380, 4725, 976, 291, 300, 13, 51556, 51556, 865, 11, 300, 311, 2293, 558, 13, 51657, 51657], "temperature": 0.0, "avg_logprob": -0.09889112069056584, "compression_ratio": 1.6150943396226416, "no_caption_prob": 4.0061444451566786e-05}, {"id": 116, "seek": 46574, "start": 465.74, "end": 471.04, "text": " And in Elm, being a statically typed and strongly typed language as well, the compiler gives", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 117, "seek": 46574, "start": 471.04, "end": 475.46000000000004, "text": " you a lot of protection for some types of refactorings.", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 118, "seek": 46574, "start": 475.46000000000004, "end": 481.68, "text": " But Elm program test is really at the level that you can't get type safety because it's", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 119, "seek": 46574, "start": 481.68, "end": 487.28000000000003, "text": " looking at like, oh, when you have this sequence of events happening in this order, something", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 120, "seek": 46574, "start": 487.28000000000003, "end": 488.40000000000003, "text": " goes wrong.", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 121, "seek": 46574, "start": 488.40000000000003, "end": 493.12, "text": " And especially like in Haskell, you can get a bit fancier with types.", "tokens": [50364, 400, 294, 2699, 76, 11, 885, 257, 2219, 984, 33941, 293, 10613, 33941, 2856, 382, 731, 11, 264, 31958, 2709, 50629, 50629, 291, 257, 688, 295, 6334, 337, 512, 3467, 295, 1895, 15104, 1109, 13, 50850, 50850, 583, 2699, 76, 1461, 1500, 307, 534, 412, 264, 1496, 300, 291, 393, 380, 483, 2010, 4514, 570, 309, 311, 51161, 51161, 1237, 412, 411, 11, 1954, 11, 562, 291, 362, 341, 8310, 295, 3931, 2737, 294, 341, 1668, 11, 746, 51441, 51441, 1709, 2085, 13, 51497, 51497, 400, 2318, 411, 294, 8646, 43723, 11, 291, 393, 483, 257, 857, 3429, 27674, 365, 3467, 13, 51733, 51733], "temperature": 0.0, "avg_logprob": -0.08067159832648511, "compression_ratio": 1.609375, "no_caption_prob": 4.757193892146461e-05}, {"id": 122, "seek": 49312, "start": 493.12, "end": 498.68, "text": " But in Elm, you like definitely can't write a type for your update function that says", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 123, "seek": 49312, "start": 498.68, "end": 504.38, "text": " that, oh, once this message happens, you can never get these initialization messages anymore.", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 124, "seek": 49312, "start": 504.38, "end": 506.88, "text": " You only get this later class of messages.", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 125, "seek": 49312, "start": 506.88, "end": 513.46, "text": " So Elm program test allows you to kind of in a more natural language, I would say, than", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 126, "seek": 49312, "start": 513.46, "end": 517.2, "text": " writing unit tests allows you to get coverage of those things.", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 127, "seek": 49312, "start": 517.2, "end": 522.08, "text": " I don't know if you've ever ended up with tests where you're trying to like initialize", "tokens": [50364, 583, 294, 2699, 76, 11, 291, 411, 2138, 393, 380, 2464, 257, 2010, 337, 428, 5623, 2445, 300, 1619, 50642, 50642, 300, 11, 1954, 11, 1564, 341, 3636, 2314, 11, 291, 393, 1128, 483, 613, 5883, 2144, 7897, 3602, 13, 50927, 50927, 509, 787, 483, 341, 1780, 1508, 295, 7897, 13, 51052, 51052, 407, 2699, 76, 1461, 1500, 4045, 291, 281, 733, 295, 294, 257, 544, 3303, 2856, 11, 286, 576, 584, 11, 813, 51381, 51381, 3579, 4985, 6921, 4045, 291, 281, 483, 9645, 295, 729, 721, 13, 51568, 51568, 286, 500, 380, 458, 498, 291, 600, 1562, 4590, 493, 365, 6921, 689, 291, 434, 1382, 281, 411, 5883, 1125, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.09878751687836229, "compression_ratio": 1.6788321167883211, "no_caption_prob": 3.340498324178043e-06}, {"id": 128, "seek": 52208, "start": 522.08, "end": 526.32, "text": " a model, send it through a bunch of update calls, and then check the state of the model", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 129, "seek": 52208, "start": 526.32, "end": 527.32, "text": " at the end.", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 130, "seek": 52208, "start": 527.32, "end": 529.6, "text": " You can definitely write those as unit tests.", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 131, "seek": 52208, "start": 529.6, "end": 532.1600000000001, "text": " But I find that it's often very verbose.", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 132, "seek": 52208, "start": 532.1600000000001, "end": 537.6, "text": " And you have to end up putting a whole bunch of like, fake data and things that are really", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 133, "seek": 52208, "start": 537.6, "end": 539.36, "text": " implementation details.", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 134, "seek": 52208, "start": 539.36, "end": 543.84, "text": " Whereas when you write a test of that nature, what you want to be thinking about is, okay,", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 135, "seek": 52208, "start": 543.84, "end": 545.7, "text": " what is the flow of events?", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 136, "seek": 52208, "start": 545.7, "end": 550.62, "text": " And you don't want to care about how to construct the record of the data that represents the", "tokens": [50364, 257, 2316, 11, 2845, 309, 807, 257, 3840, 295, 5623, 5498, 11, 293, 550, 1520, 264, 1785, 295, 264, 2316, 50576, 50576, 412, 264, 917, 13, 50626, 50626, 509, 393, 2138, 2464, 729, 382, 4985, 6921, 13, 50740, 50740, 583, 286, 915, 300, 309, 311, 2049, 588, 9595, 541, 13, 50868, 50868, 400, 291, 362, 281, 917, 493, 3372, 257, 1379, 3840, 295, 411, 11, 7592, 1412, 293, 721, 300, 366, 534, 51140, 51140, 11420, 4365, 13, 51228, 51228, 13813, 562, 291, 2464, 257, 1500, 295, 300, 3687, 11, 437, 291, 528, 281, 312, 1953, 466, 307, 11, 1392, 11, 51452, 51452, 437, 307, 264, 3095, 295, 3931, 30, 51545, 51545, 400, 291, 500, 380, 528, 281, 1127, 466, 577, 281, 7690, 264, 2136, 295, 264, 1412, 300, 8855, 264, 51791, 51791], "temperature": 0.0, "avg_logprob": -0.08850193735378892, "compression_ratio": 1.7389830508474575, "no_caption_prob": 2.4299206415889785e-05}, {"id": 137, "seek": 55062, "start": 550.62, "end": 555.58, "text": " JSON that comes from this endpoint and all those lower level details.", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 138, "seek": 55062, "start": 555.58, "end": 558.68, "text": " So you say that those tests are supposed to be easy to read.", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 139, "seek": 55062, "start": 558.68, "end": 560.72, "text": " Have you looked at Cucumber?", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 140, "seek": 55062, "start": 560.72, "end": 565.22, "text": " Or are you inspired by Cucumber and those kinds of testing frameworks?", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 141, "seek": 55062, "start": 565.22, "end": 566.84, "text": " Like I think it's BDD?", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 142, "seek": 55062, "start": 566.84, "end": 571.96, "text": " Yeah, I've been really interested in those techniques.", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 143, "seek": 55062, "start": 571.96, "end": 576.36, "text": " There's a talk called something like test driven development the way it was meant to", "tokens": [50364, 31828, 300, 1487, 490, 341, 35795, 293, 439, 729, 3126, 1496, 4365, 13, 50612, 50612, 407, 291, 584, 300, 729, 6921, 366, 3442, 281, 312, 1858, 281, 1401, 13, 50767, 50767, 3560, 291, 2956, 412, 383, 1311, 4182, 30, 50869, 50869, 1610, 366, 291, 7547, 538, 383, 1311, 4182, 293, 729, 3685, 295, 4997, 29834, 30, 51094, 51094, 1743, 286, 519, 309, 311, 363, 20818, 30, 51175, 51175, 865, 11, 286, 600, 668, 534, 3102, 294, 729, 7512, 13, 51431, 51431, 821, 311, 257, 751, 1219, 746, 411, 1500, 9555, 3250, 264, 636, 309, 390, 4140, 281, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.15426930342570389, "compression_ratio": 1.53515625, "no_caption_prob": 6.854266757727601e-06}, {"id": 144, "seek": 57636, "start": 576.36, "end": 580.84, "text": " be done by Matt Wynn from and is probably like 15 years old now.", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 145, "seek": 57636, "start": 580.84, "end": 587.48, "text": " So L program test, I think is a layer that's needed if you wanted to write tests in that", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 146, "seek": 57636, "start": 587.48, "end": 588.48, "text": " style.", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 147, "seek": 57636, "start": 588.48, "end": 594.02, "text": " Because that BDD approach is really that you develop a domain specific like application", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 148, "seek": 57636, "start": 594.02, "end": 600.54, "text": " specific language to write these high level tests in, whereas talking about things that", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 149, "seek": 57636, "start": 600.54, "end": 604.48, "text": " are relevant to your business domain, like in no red ink, it would be like talking about", "tokens": [50364, 312, 1096, 538, 7397, 343, 48959, 490, 293, 307, 1391, 411, 2119, 924, 1331, 586, 13, 50588, 50588, 407, 441, 1461, 1500, 11, 286, 519, 307, 257, 4583, 300, 311, 2978, 498, 291, 1415, 281, 2464, 6921, 294, 300, 50920, 50920, 3758, 13, 50970, 50970, 1436, 300, 363, 20818, 3109, 307, 534, 300, 291, 1499, 257, 9274, 2685, 411, 3861, 51247, 51247, 2685, 2856, 281, 2464, 613, 1090, 1496, 6921, 294, 11, 9735, 1417, 466, 721, 300, 51573, 51573, 366, 7340, 281, 428, 1606, 9274, 11, 411, 294, 572, 2182, 11276, 11, 309, 576, 312, 411, 1417, 466, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.14969791150560566, "compression_ratio": 1.640926640926641, "no_caption_prob": 4.757304486702196e-05}, {"id": 150, "seek": 60448, "start": 604.48, "end": 607.9200000000001, "text": " teachers and classes and assignments and creating new assignments.", "tokens": [50364, 6023, 293, 5359, 293, 22546, 293, 4084, 777, 22546, 13, 50536, 50536, 865, 11, 286, 519, 300, 311, 300, 311, 733, 295, 445, 411, 257, 2946, 1496, 15816, 43, 322, 1192, 295, 411, 281, 4445, 50826, 50826, 512, 295, 729, 4122, 411, 281, 4445, 420, 294, 257, 363, 20818, 3758, 1500, 11, 291, 1062, 584, 562, 264, 51139, 51139, 4195, 20820, 294, 11, 293, 550, 5893, 5893, 5893, 661, 1507, 281, 4445, 300, 577, 775, 264, 4195, 24276, 51445, 51445, 1823, 295, 428, 363, 20818, 4997, 11, 291, 576, 11, 286, 519, 11, 22915, 764, 746, 411, 1461, 1500, 281, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.14381418778346136, "compression_ratio": 1.7932489451476794, "no_caption_prob": 8.800907380646095e-06}, {"id": 151, "seek": 60448, "start": 607.9200000000001, "end": 613.72, "text": " Yeah, I think that's that's kind of just like a higher level DSL on top of like to implement", "tokens": [50364, 6023, 293, 5359, 293, 22546, 293, 4084, 777, 22546, 13, 50536, 50536, 865, 11, 286, 519, 300, 311, 300, 311, 733, 295, 445, 411, 257, 2946, 1496, 15816, 43, 322, 1192, 295, 411, 281, 4445, 50826, 50826, 512, 295, 729, 4122, 411, 281, 4445, 420, 294, 257, 363, 20818, 3758, 1500, 11, 291, 1062, 584, 562, 264, 51139, 51139, 4195, 20820, 294, 11, 293, 550, 5893, 5893, 5893, 661, 1507, 281, 4445, 300, 577, 775, 264, 4195, 24276, 51445, 51445, 1823, 295, 428, 363, 20818, 4997, 11, 291, 576, 11, 286, 519, 11, 22915, 764, 746, 411, 1461, 1500, 281, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.14381418778346136, "compression_ratio": 1.7932489451476794, "no_caption_prob": 8.800907380646095e-06}, {"id": 152, "seek": 60448, "start": 613.72, "end": 619.98, "text": " some of those features like to implement or in a BDD style test, you might say when the", "tokens": [50364, 6023, 293, 5359, 293, 22546, 293, 4084, 777, 22546, 13, 50536, 50536, 865, 11, 286, 519, 300, 311, 300, 311, 733, 295, 445, 411, 257, 2946, 1496, 15816, 43, 322, 1192, 295, 411, 281, 4445, 50826, 50826, 512, 295, 729, 4122, 411, 281, 4445, 420, 294, 257, 363, 20818, 3758, 1500, 11, 291, 1062, 584, 562, 264, 51139, 51139, 4195, 20820, 294, 11, 293, 550, 5893, 5893, 5893, 661, 1507, 281, 4445, 300, 577, 775, 264, 4195, 24276, 51445, 51445, 1823, 295, 428, 363, 20818, 4997, 11, 291, 576, 11, 286, 519, 11, 22915, 764, 746, 411, 1461, 1500, 281, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.14381418778346136, "compression_ratio": 1.7932489451476794, "no_caption_prob": 8.800907380646095e-06}, {"id": 153, "seek": 60448, "start": 619.98, "end": 626.1, "text": " user logs in, and then dot dot dot other stuff to implement that how does the user login", "tokens": [50364, 6023, 293, 5359, 293, 22546, 293, 4084, 777, 22546, 13, 50536, 50536, 865, 11, 286, 519, 300, 311, 300, 311, 733, 295, 445, 411, 257, 2946, 1496, 15816, 43, 322, 1192, 295, 411, 281, 4445, 50826, 50826, 512, 295, 729, 4122, 411, 281, 4445, 420, 294, 257, 363, 20818, 3758, 1500, 11, 291, 1062, 584, 562, 264, 51139, 51139, 4195, 20820, 294, 11, 293, 550, 5893, 5893, 5893, 661, 1507, 281, 4445, 300, 577, 775, 264, 4195, 24276, 51445, 51445, 1823, 295, 428, 363, 20818, 4997, 11, 291, 576, 11, 286, 519, 11, 22915, 764, 746, 411, 1461, 1500, 281, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.14381418778346136, "compression_ratio": 1.7932489451476794, "no_caption_prob": 8.800907380646095e-06}, {"id": 154, "seek": 60448, "start": 626.1, "end": 633.66, "text": " step of your BDD testing, you would, I think, ideally use something like program test to", "tokens": [50364, 6023, 293, 5359, 293, 22546, 293, 4084, 777, 22546, 13, 50536, 50536, 865, 11, 286, 519, 300, 311, 300, 311, 733, 295, 445, 411, 257, 2946, 1496, 15816, 43, 322, 1192, 295, 411, 281, 4445, 50826, 50826, 512, 295, 729, 4122, 411, 281, 4445, 420, 294, 257, 363, 20818, 3758, 1500, 11, 291, 1062, 584, 562, 264, 51139, 51139, 4195, 20820, 294, 11, 293, 550, 5893, 5893, 5893, 661, 1507, 281, 4445, 300, 577, 775, 264, 4195, 24276, 51445, 51445, 1823, 295, 428, 363, 20818, 4997, 11, 291, 576, 11, 286, 519, 11, 22915, 764, 746, 411, 1461, 1500, 281, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.14381418778346136, "compression_ratio": 1.7932489451476794, "no_caption_prob": 8.800907380646095e-06}, {"id": 155, "seek": 63366, "start": 633.66, "end": 639.48, "text": " say, Okay, click the login button, then fill in the name of the current user fill in the", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 156, "seek": 63366, "start": 639.48, "end": 644.8399999999999, "text": " password of the current user, click this other thing, then simulate the back end responding", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 157, "seek": 63366, "start": 644.8399999999999, "end": 647.98, "text": " to the post request with an okay status.", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 158, "seek": 63366, "start": 647.98, "end": 650.4599999999999, "text": " So that's kind of implementation specific.", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 159, "seek": 63366, "start": 650.4599999999999, "end": 655.1999999999999, "text": " But the way I just described those steps is still high level, it doesn't depend on the", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 160, "seek": 63366, "start": 655.1999999999999, "end": 661.6999999999999, "text": " details of how the form validation is implemented, or how they like what UI framework they use", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 161, "seek": 63366, "start": 661.6999999999999, "end": 663.64, "text": " to create the form.", "tokens": [50364, 584, 11, 1033, 11, 2052, 264, 24276, 2960, 11, 550, 2836, 294, 264, 1315, 295, 264, 2190, 4195, 2836, 294, 264, 50655, 50655, 11524, 295, 264, 2190, 4195, 11, 2052, 341, 661, 551, 11, 550, 27817, 264, 646, 917, 16670, 50923, 50923, 281, 264, 2183, 5308, 365, 364, 1392, 6558, 13, 51080, 51080, 407, 300, 311, 733, 295, 11420, 2685, 13, 51204, 51204, 583, 264, 636, 286, 445, 7619, 729, 4439, 307, 920, 1090, 1496, 11, 309, 1177, 380, 5672, 322, 264, 51441, 51441, 4365, 295, 577, 264, 1254, 24071, 307, 12270, 11, 420, 577, 436, 411, 437, 15682, 8388, 436, 764, 51766, 51766, 281, 1884, 264, 1254, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.09222758132799537, "compression_ratio": 1.7323420074349443, "no_caption_prob": 6.8542071858246345e-06}, {"id": 162, "seek": 66364, "start": 663.64, "end": 667.86, "text": " So on program test is kind of high level for the technical side, but it's still lower level", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 163, "seek": 66364, "start": 667.86, "end": 669.8, "text": " than something like cucumber tests,", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 164, "seek": 66364, "start": 669.8, "end": 675.92, "text": " I have an opinion about cucumber, which is that now I may be totally wrong, or, you know,", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 165, "seek": 66364, "start": 675.92, "end": 679.72, "text": " reasonable people may disagree, but I'll share my opinion for what it's worth.", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 166, "seek": 66364, "start": 679.72, "end": 684.54, "text": " So what you were just discussing there, Aaron, with it being elm program test being a high", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 167, "seek": 66364, "start": 684.54, "end": 692.06, "text": " level way to express a flow that's not necessarily as coupled to the actual technical implementation,", "tokens": [50364, 407, 322, 1461, 1500, 307, 733, 295, 1090, 1496, 337, 264, 6191, 1252, 11, 457, 309, 311, 920, 3126, 1496, 50575, 50575, 813, 746, 411, 28725, 6921, 11, 50672, 50672, 286, 362, 364, 4800, 466, 28725, 11, 597, 307, 300, 586, 286, 815, 312, 3879, 2085, 11, 420, 11, 291, 458, 11, 50978, 50978, 10585, 561, 815, 14091, 11, 457, 286, 603, 2073, 452, 4800, 337, 437, 309, 311, 3163, 13, 51168, 51168, 407, 437, 291, 645, 445, 10850, 456, 11, 14018, 11, 365, 309, 885, 806, 76, 1461, 1500, 885, 257, 1090, 51409, 51409, 1496, 636, 281, 5109, 257, 3095, 300, 311, 406, 4725, 382, 29482, 281, 264, 3539, 6191, 11420, 11, 51785, 51785], "temperature": 0.0, "avg_logprob": -0.12856519324147803, "compression_ratio": 1.686206896551724, "no_caption_prob": 1.6028026266212692e-06}, {"id": 168, "seek": 69206, "start": 692.06, "end": 695.7199999999999, "text": " not being as likely to change if you change implementation details, right?", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 169, "seek": 69206, "start": 695.7199999999999, "end": 698.8, "text": " In my mind, that is exactly what I want.", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 170, "seek": 69206, "start": 698.8, "end": 704.76, "text": " And the cucumber part of writing it in in actual plain language, I don't like and that's", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 171, "seek": 69206, "start": 704.76, "end": 709.8399999999999, "text": " what cucumbers for anyone who's not familiar with the Gherkin cucumber syntax, the sort", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 172, "seek": 69206, "start": 709.8399999999999, "end": 714.3199999999999, "text": " of idea of, you know, one of the concepts of behavior driven development BDD is that", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 173, "seek": 69206, "start": 714.3199999999999, "end": 720.04, "text": " you actually have customers or customer, you know, product managers, that type of thing,", "tokens": [50364, 406, 885, 382, 3700, 281, 1319, 498, 291, 1319, 11420, 4365, 11, 558, 30, 50547, 50547, 682, 452, 1575, 11, 300, 307, 2293, 437, 286, 528, 13, 50701, 50701, 400, 264, 28725, 644, 295, 3579, 309, 294, 294, 3539, 11121, 2856, 11, 286, 500, 380, 411, 293, 300, 311, 50999, 50999, 437, 43354, 337, 2878, 567, 311, 406, 4963, 365, 264, 460, 511, 5843, 28725, 28431, 11, 264, 1333, 51253, 51253, 295, 1558, 295, 11, 291, 458, 11, 472, 295, 264, 10392, 295, 5223, 9555, 3250, 363, 20818, 307, 300, 51477, 51477, 291, 767, 362, 4581, 420, 5474, 11, 291, 458, 11, 1674, 14084, 11, 300, 2010, 295, 551, 11, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.11027556971499794, "compression_ratio": 1.6823104693140793, "no_caption_prob": 1.8631100829225034e-05}, {"id": 174, "seek": 72004, "start": 720.04, "end": 725.7199999999999, "text": " in their writing cases, and it's not code, it's just text.", "tokens": [50364, 294, 641, 3579, 3331, 11, 293, 309, 311, 406, 3089, 11, 309, 311, 445, 2487, 13, 50648, 50648, 400, 291, 764, 3890, 6114, 11, 420, 3683, 6422, 295, 21156, 278, 281, 360, 411, 2856, 21156, 278, 50996, 50996, 293, 584, 11, 562, 286, 3565, 294, 382, 3796, 2985, 11, 293, 550, 291, 764, 512, 319, 432, 87, 281, 7983, 300, 3796, 51318, 51318, 2985, 293, 550, 3565, 294, 13, 51406, 51406, 400, 294, 452, 294, 452, 1752, 11, 300, 445, 7829, 257, 4583, 295, 1016, 621, 882, 300, 1177, 380, 652, 309, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10233465830485027, "compression_ratio": 1.6842105263157894, "no_caption_prob": 3.763457789318636e-05}, {"id": 175, "seek": 72004, "start": 725.7199999999999, "end": 732.68, "text": " And you use regular expression, or various forms of parsing to do like language parsing", "tokens": [50364, 294, 641, 3579, 3331, 11, 293, 309, 311, 406, 3089, 11, 309, 311, 445, 2487, 13, 50648, 50648, 400, 291, 764, 3890, 6114, 11, 420, 3683, 6422, 295, 21156, 278, 281, 360, 411, 2856, 21156, 278, 50996, 50996, 293, 584, 11, 562, 286, 3565, 294, 382, 3796, 2985, 11, 293, 550, 291, 764, 512, 319, 432, 87, 281, 7983, 300, 3796, 51318, 51318, 2985, 293, 550, 3565, 294, 13, 51406, 51406, 400, 294, 452, 294, 452, 1752, 11, 300, 445, 7829, 257, 4583, 295, 1016, 621, 882, 300, 1177, 380, 652, 309, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10233465830485027, "compression_ratio": 1.6842105263157894, "no_caption_prob": 3.763457789318636e-05}, {"id": 176, "seek": 72004, "start": 732.68, "end": 739.12, "text": " and say, when I log in as email address, and then you use some regex to capture that email", "tokens": [50364, 294, 641, 3579, 3331, 11, 293, 309, 311, 406, 3089, 11, 309, 311, 445, 2487, 13, 50648, 50648, 400, 291, 764, 3890, 6114, 11, 420, 3683, 6422, 295, 21156, 278, 281, 360, 411, 2856, 21156, 278, 50996, 50996, 293, 584, 11, 562, 286, 3565, 294, 382, 3796, 2985, 11, 293, 550, 291, 764, 512, 319, 432, 87, 281, 7983, 300, 3796, 51318, 51318, 2985, 293, 550, 3565, 294, 13, 51406, 51406, 400, 294, 452, 294, 452, 1752, 11, 300, 445, 7829, 257, 4583, 295, 1016, 621, 882, 300, 1177, 380, 652, 309, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10233465830485027, "compression_ratio": 1.6842105263157894, "no_caption_prob": 3.763457789318636e-05}, {"id": 177, "seek": 72004, "start": 739.12, "end": 740.88, "text": " address and then log in.", "tokens": [50364, 294, 641, 3579, 3331, 11, 293, 309, 311, 406, 3089, 11, 309, 311, 445, 2487, 13, 50648, 50648, 400, 291, 764, 3890, 6114, 11, 420, 3683, 6422, 295, 21156, 278, 281, 360, 411, 2856, 21156, 278, 50996, 50996, 293, 584, 11, 562, 286, 3565, 294, 382, 3796, 2985, 11, 293, 550, 291, 764, 512, 319, 432, 87, 281, 7983, 300, 3796, 51318, 51318, 2985, 293, 550, 3565, 294, 13, 51406, 51406, 400, 294, 452, 294, 452, 1752, 11, 300, 445, 7829, 257, 4583, 295, 1016, 621, 882, 300, 1177, 380, 652, 309, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10233465830485027, "compression_ratio": 1.6842105263157894, "no_caption_prob": 3.763457789318636e-05}, {"id": 178, "seek": 72004, "start": 740.88, "end": 748.36, "text": " And in my in my experience, that just creates a layer of indirection that doesn't make it", "tokens": [50364, 294, 641, 3579, 3331, 11, 293, 309, 311, 406, 3089, 11, 309, 311, 445, 2487, 13, 50648, 50648, 400, 291, 764, 3890, 6114, 11, 420, 3683, 6422, 295, 21156, 278, 281, 360, 411, 2856, 21156, 278, 50996, 50996, 293, 584, 11, 562, 286, 3565, 294, 382, 3796, 2985, 11, 293, 550, 291, 764, 512, 319, 432, 87, 281, 7983, 300, 3796, 51318, 51318, 2985, 293, 550, 3565, 294, 13, 51406, 51406, 400, 294, 452, 294, 452, 1752, 11, 300, 445, 7829, 257, 4583, 295, 1016, 621, 882, 300, 1177, 380, 652, 309, 51780, 51780], "temperature": 0.0, "avg_logprob": -0.10233465830485027, "compression_ratio": 1.6842105263157894, "no_caption_prob": 3.763457789318636e-05}, {"id": 179, "seek": 74836, "start": 748.36, "end": 752.32, "text": " any more high level, it actually just makes it more confusing what's going on.", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 180, "seek": 74836, "start": 752.32, "end": 757.92, "text": " If you're, if you are not a programmer, and you're writing that, to me, it doesn't seem", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 181, "seek": 74836, "start": 757.92, "end": 761.6, "text": " like it's making it any easier just because it's an English language, because it's still", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 182, "seek": 74836, "start": 761.6, "end": 766.96, "text": " a specific syntax that you have to write, it's just one that's been built with this", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 183, "seek": 74836, "start": 766.96, "end": 770.92, "text": " layer of indirection of regular expression, capturing and stuff.", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 184, "seek": 74836, "start": 770.92, "end": 774.9200000000001, "text": " But you still have to know how to formulate a valid one that the regular expression will", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 185, "seek": 74836, "start": 774.9200000000001, "end": 777.48, "text": " capture and what it's going to do with that.", "tokens": [50364, 604, 544, 1090, 1496, 11, 309, 767, 445, 1669, 309, 544, 13181, 437, 311, 516, 322, 13, 50562, 50562, 759, 291, 434, 11, 498, 291, 366, 406, 257, 32116, 11, 293, 291, 434, 3579, 300, 11, 281, 385, 11, 309, 1177, 380, 1643, 50842, 50842, 411, 309, 311, 1455, 309, 604, 3571, 445, 570, 309, 311, 364, 3669, 2856, 11, 570, 309, 311, 920, 51026, 51026, 257, 2685, 28431, 300, 291, 362, 281, 2464, 11, 309, 311, 445, 472, 300, 311, 668, 3094, 365, 341, 51294, 51294, 4583, 295, 1016, 621, 882, 295, 3890, 6114, 11, 23384, 293, 1507, 13, 51492, 51492, 583, 291, 920, 362, 281, 458, 577, 281, 47881, 257, 7363, 472, 300, 264, 3890, 6114, 486, 51692, 51692, 7983, 293, 437, 309, 311, 516, 281, 360, 365, 300, 13, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08980903905980728, "compression_ratio": 1.7755775577557755, "no_caption_prob": 6.81425808579661e-05}, {"id": 186, "seek": 77748, "start": 777.48, "end": 782.36, "text": " And to me, that that's not any easier than just writing high level instructions that", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 187, "seek": 77748, "start": 782.36, "end": 786.84, "text": " say, go to, you know, maybe you have to like learn what the pipe operator is, and then", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 188, "seek": 77748, "start": 786.84, "end": 788.52, "text": " you have to like learn a few of these things.", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 189, "seek": 77748, "start": 788.52, "end": 792.4200000000001, "text": " But then you just say, click this thing, do this thing, do this thing.", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 190, "seek": 77748, "start": 792.4200000000001, "end": 798.2, "text": " So you know, it's sort of like AppleScript went this route to of like, if we write it", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 191, "seek": 77748, "start": 798.2, "end": 803.16, "text": " like English, it will be easy for people to write, but it's actually not because it creates", "tokens": [50364, 400, 281, 385, 11, 300, 300, 311, 406, 604, 3571, 813, 445, 3579, 1090, 1496, 9415, 300, 50608, 50608, 584, 11, 352, 281, 11, 291, 458, 11, 1310, 291, 362, 281, 411, 1466, 437, 264, 11240, 12973, 307, 11, 293, 550, 50832, 50832, 291, 362, 281, 411, 1466, 257, 1326, 295, 613, 721, 13, 50916, 50916, 583, 550, 291, 445, 584, 11, 2052, 341, 551, 11, 360, 341, 551, 11, 360, 341, 551, 13, 51111, 51111, 407, 291, 458, 11, 309, 311, 1333, 295, 411, 6373, 14237, 1437, 341, 7955, 281, 295, 411, 11, 498, 321, 2464, 309, 51400, 51400, 411, 3669, 11, 309, 486, 312, 1858, 337, 561, 281, 2464, 11, 457, 309, 311, 767, 406, 570, 309, 7829, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.12699201799208118, "compression_ratio": 1.8274509803921568, "no_caption_prob": 1.618723945284728e-05}, {"id": 192, "seek": 80316, "start": 803.16, "end": 807.48, "text": " this layer of abstraction that just makes it harder to understand what it's actually", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 193, "seek": 80316, "start": 807.48, "end": 809.76, "text": " going to do and how it's going to interpret it.", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 194, "seek": 80316, "start": 809.76, "end": 816.56, "text": " Kind of sounds like graphical codes, like, like dark, for instance, where you connect", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 195, "seek": 80316, "start": 816.56, "end": 821.52, "text": " things visually, like, yeah, but you have more rules, like, do you, do you know more", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 196, "seek": 80316, "start": 821.52, "end": 826.0799999999999, "text": " people who can write code that compiles or more people who can write English perfectly", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 197, "seek": 80316, "start": 826.0799999999999, "end": 827.0799999999999, "text": " grammatically?", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 198, "seek": 80316, "start": 827.0799999999999, "end": 828.0799999999999, "text": " Exactly.", "tokens": [50364, 341, 4583, 295, 37765, 300, 445, 1669, 309, 6081, 281, 1223, 437, 309, 311, 767, 50580, 50580, 516, 281, 360, 293, 577, 309, 311, 516, 281, 7302, 309, 13, 50694, 50694, 9242, 295, 3263, 411, 35942, 14211, 11, 411, 11, 411, 2877, 11, 337, 5197, 11, 689, 291, 1745, 51034, 51034, 721, 19622, 11, 411, 11, 1338, 11, 457, 291, 362, 544, 4474, 11, 411, 11, 360, 291, 11, 360, 291, 458, 544, 51282, 51282, 561, 567, 393, 2464, 3089, 300, 715, 4680, 420, 544, 561, 567, 393, 2464, 3669, 6239, 51510, 51510, 17570, 5030, 30, 51560, 51560, 7587, 13, 51610, 51610], "temperature": 0.0, "avg_logprob": -0.18638000121483436, "compression_ratio": 1.7107438016528926, "no_caption_prob": 1.5689363863202743e-05}, {"id": 199, "seek": 82808, "start": 828.08, "end": 833.24, "text": " That's going to be interpreted by a specific set of code instructions, and if it doesn't", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 200, "seek": 82808, "start": 833.24, "end": 835.84, "text": " fit that format, it won't do what's intended.", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 201, "seek": 82808, "start": 835.84, "end": 836.84, "text": " And how do you debug that?", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 202, "seek": 82808, "start": 836.84, "end": 838.64, "text": " So it's just adding a layer of indirection.", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 203, "seek": 82808, "start": 838.64, "end": 844.32, "text": " So anyway, for what it's worth, I'm very happy with just the high level way of expressing", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 204, "seek": 82808, "start": 844.32, "end": 845.5600000000001, "text": " things with Elm program tests.", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 205, "seek": 82808, "start": 845.5600000000001, "end": 847.1800000000001, "text": " I think it's, I think it's really good.", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 206, "seek": 82808, "start": 847.1800000000001, "end": 853.12, "text": " And I really enjoy being able to like, you know, write tests from the user's perspective.", "tokens": [50364, 663, 311, 516, 281, 312, 26749, 538, 257, 2685, 992, 295, 3089, 9415, 11, 293, 498, 309, 1177, 380, 50622, 50622, 3318, 300, 7877, 11, 309, 1582, 380, 360, 437, 311, 10226, 13, 50752, 50752, 400, 577, 360, 291, 24083, 300, 30, 50802, 50802, 407, 309, 311, 445, 5127, 257, 4583, 295, 1016, 621, 882, 13, 50892, 50892, 407, 4033, 11, 337, 437, 309, 311, 3163, 11, 286, 478, 588, 2055, 365, 445, 264, 1090, 1496, 636, 295, 22171, 51176, 51176, 721, 365, 2699, 76, 1461, 6921, 13, 51238, 51238, 286, 519, 309, 311, 11, 286, 519, 309, 311, 534, 665, 13, 51319, 51319, 400, 286, 534, 2103, 885, 1075, 281, 411, 11, 291, 458, 11, 2464, 6921, 490, 264, 4195, 311, 4585, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.099062979221344, "compression_ratio": 1.6462093862815885, "no_caption_prob": 9.313581540482119e-05}, {"id": 207, "seek": 85312, "start": 853.12, "end": 859.12, "text": " I know a lot of French developers who would be better off writing code than English.", "tokens": [50364, 286, 458, 257, 688, 295, 5522, 8849, 567, 576, 312, 1101, 766, 3579, 3089, 813, 3669, 13, 50664, 50664, 407, 731, 11, 370, 281, 445, 472, 1194, 322, 1192, 295, 300, 307, 300, 286, 519, 294, 3124, 11, 2318, 51040, 51040, 498, 291, 362, 257, 2416, 3861, 293, 291, 722, 1228, 2699, 76, 1461, 1500, 300, 22915, 291, 603, 51321, 51321, 917, 493, 365, 257, 10088, 420, 1310, 512, 819, 16679, 295, 36133, 6828, 300, 1322, 322, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.09571525785658094, "compression_ratio": 1.5353982300884956, "no_caption_prob": 1.4970439224271104e-05}, {"id": 208, "seek": 85312, "start": 859.12, "end": 866.64, "text": " So well, so to just one thought on top of that is that I think in practice, especially", "tokens": [50364, 286, 458, 257, 688, 295, 5522, 8849, 567, 576, 312, 1101, 766, 3579, 3089, 813, 3669, 13, 50664, 50664, 407, 731, 11, 370, 281, 445, 472, 1194, 322, 1192, 295, 300, 307, 300, 286, 519, 294, 3124, 11, 2318, 51040, 51040, 498, 291, 362, 257, 2416, 3861, 293, 291, 722, 1228, 2699, 76, 1461, 1500, 300, 22915, 291, 603, 51321, 51321, 917, 493, 365, 257, 10088, 420, 1310, 512, 819, 16679, 295, 36133, 6828, 300, 1322, 322, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.09571525785658094, "compression_ratio": 1.5353982300884956, "no_caption_prob": 1.4970439224271104e-05}, {"id": 209, "seek": 85312, "start": 866.64, "end": 872.26, "text": " if you have a large application and you start using Elm program test that ideally you'll", "tokens": [50364, 286, 458, 257, 688, 295, 5522, 8849, 567, 576, 312, 1101, 766, 3579, 3089, 813, 3669, 13, 50664, 50664, 407, 731, 11, 370, 281, 445, 472, 1194, 322, 1192, 295, 300, 307, 300, 286, 519, 294, 3124, 11, 2318, 51040, 51040, 498, 291, 362, 257, 2416, 3861, 293, 291, 722, 1228, 2699, 76, 1461, 1500, 300, 22915, 291, 603, 51321, 51321, 917, 493, 365, 257, 10088, 420, 1310, 512, 819, 16679, 295, 36133, 6828, 300, 1322, 322, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.09571525785658094, "compression_ratio": 1.5353982300884956, "no_caption_prob": 1.4970439224271104e-05}, {"id": 210, "seek": 85312, "start": 872.26, "end": 878.84, "text": " end up with a module or maybe some different modules of helper functions that build on", "tokens": [50364, 286, 458, 257, 688, 295, 5522, 8849, 567, 576, 312, 1101, 766, 3579, 3089, 813, 3669, 13, 50664, 50664, 407, 731, 11, 370, 281, 445, 472, 1194, 322, 1192, 295, 300, 307, 300, 286, 519, 294, 3124, 11, 2318, 51040, 51040, 498, 291, 362, 257, 2416, 3861, 293, 291, 722, 1228, 2699, 76, 1461, 1500, 300, 22915, 291, 603, 51321, 51321, 917, 493, 365, 257, 10088, 420, 1310, 512, 819, 16679, 295, 36133, 6828, 300, 1322, 322, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.09571525785658094, "compression_ratio": 1.5353982300884956, "no_caption_prob": 1.4970439224271104e-05}, {"id": 211, "seek": 87884, "start": 878.84, "end": 885.12, "text": " top of Elm program test, some application specific helpers like the login example that", "tokens": [50364, 1192, 295, 2699, 76, 1461, 1500, 11, 512, 3861, 2685, 854, 433, 411, 264, 24276, 1365, 300, 50678, 50678, 321, 848, 11, 420, 1310, 294, 264, 1257, 7553, 9274, 11, 4084, 364, 15187, 11, 597, 1062, 360, 257, 1379, 3840, 50974, 50974, 295, 4439, 411, 11, 876, 11, 2052, 264, 2035, 264, 2960, 281, 352, 281, 264, 1884, 15187, 3028, 11, 51252, 51252, 2836, 484, 439, 341, 1412, 11, 2052, 8511, 3508, 11, 27817, 264, 4134, 13, 51442, 51442, 407, 291, 393, 920, 362, 512, 295, 729, 5311, 295, 1419, 754, 2946, 1496, 10392, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11904635573878433, "compression_ratio": 1.607843137254902, "no_caption_prob": 1.5934980183374137e-05}, {"id": 212, "seek": 87884, "start": 885.12, "end": 891.0400000000001, "text": " we said, or maybe in the ed tech domain, creating an assignment, which might do a whole bunch", "tokens": [50364, 1192, 295, 2699, 76, 1461, 1500, 11, 512, 3861, 2685, 854, 433, 411, 264, 24276, 1365, 300, 50678, 50678, 321, 848, 11, 420, 1310, 294, 264, 1257, 7553, 9274, 11, 4084, 364, 15187, 11, 597, 1062, 360, 257, 1379, 3840, 50974, 50974, 295, 4439, 411, 11, 876, 11, 2052, 264, 2035, 264, 2960, 281, 352, 281, 264, 1884, 15187, 3028, 11, 51252, 51252, 2836, 484, 439, 341, 1412, 11, 2052, 8511, 3508, 11, 27817, 264, 4134, 13, 51442, 51442, 407, 291, 393, 920, 362, 512, 295, 729, 5311, 295, 1419, 754, 2946, 1496, 10392, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11904635573878433, "compression_ratio": 1.607843137254902, "no_caption_prob": 1.5934980183374137e-05}, {"id": 213, "seek": 87884, "start": 891.0400000000001, "end": 896.6, "text": " of steps like, Oh, click the whatever the button to go to the create assignment page,", "tokens": [50364, 1192, 295, 2699, 76, 1461, 1500, 11, 512, 3861, 2685, 854, 433, 411, 264, 24276, 1365, 300, 50678, 50678, 321, 848, 11, 420, 1310, 294, 264, 1257, 7553, 9274, 11, 4084, 364, 15187, 11, 597, 1062, 360, 257, 1379, 3840, 50974, 50974, 295, 4439, 411, 11, 876, 11, 2052, 264, 2035, 264, 2960, 281, 352, 281, 264, 1884, 15187, 3028, 11, 51252, 51252, 2836, 484, 439, 341, 1412, 11, 2052, 8511, 3508, 11, 27817, 264, 4134, 13, 51442, 51442, 407, 291, 393, 920, 362, 512, 295, 729, 5311, 295, 1419, 754, 2946, 1496, 10392, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11904635573878433, "compression_ratio": 1.607843137254902, "no_caption_prob": 1.5934980183374137e-05}, {"id": 214, "seek": 87884, "start": 896.6, "end": 900.4, "text": " fill out all this data, click Submit, simulate the response.", "tokens": [50364, 1192, 295, 2699, 76, 1461, 1500, 11, 512, 3861, 2685, 854, 433, 411, 264, 24276, 1365, 300, 50678, 50678, 321, 848, 11, 420, 1310, 294, 264, 1257, 7553, 9274, 11, 4084, 364, 15187, 11, 597, 1062, 360, 257, 1379, 3840, 50974, 50974, 295, 4439, 411, 11, 876, 11, 2052, 264, 2035, 264, 2960, 281, 352, 281, 264, 1884, 15187, 3028, 11, 51252, 51252, 2836, 484, 439, 341, 1412, 11, 2052, 8511, 3508, 11, 27817, 264, 4134, 13, 51442, 51442, 407, 291, 393, 920, 362, 512, 295, 729, 5311, 295, 1419, 754, 2946, 1496, 10392, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11904635573878433, "compression_ratio": 1.607843137254902, "no_caption_prob": 1.5934980183374137e-05}, {"id": 215, "seek": 87884, "start": 900.4, "end": 905.84, "text": " So you can still have some of those benefits of having even higher level concepts.", "tokens": [50364, 1192, 295, 2699, 76, 1461, 1500, 11, 512, 3861, 2685, 854, 433, 411, 264, 24276, 1365, 300, 50678, 50678, 321, 848, 11, 420, 1310, 294, 264, 1257, 7553, 9274, 11, 4084, 364, 15187, 11, 597, 1062, 360, 257, 1379, 3840, 50974, 50974, 295, 4439, 411, 11, 876, 11, 2052, 264, 2035, 264, 2960, 281, 352, 281, 264, 1884, 15187, 3028, 11, 51252, 51252, 2836, 484, 439, 341, 1412, 11, 2052, 8511, 3508, 11, 27817, 264, 4134, 13, 51442, 51442, 407, 291, 393, 920, 362, 512, 295, 729, 5311, 295, 1419, 754, 2946, 1496, 10392, 13, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.11904635573878433, "compression_ratio": 1.607843137254902, "no_caption_prob": 1.5934980183374137e-05}, {"id": 216, "seek": 90584, "start": 905.84, "end": 911.6800000000001, "text": " And Elm program test is kind of like a support layer that does all of the generic stuff,", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 217, "seek": 90584, "start": 911.6800000000001, "end": 916.4, "text": " basically all of the reusable things about writing high level tests on program tests", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 218, "seek": 90584, "start": 916.4, "end": 921.48, "text": " does so that as an app developer, you can write your app specific tests much more quickly", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 219, "seek": 90584, "start": 921.48, "end": 926.7800000000001, "text": " and efficiently and correctly, which I guess is a point we should get to at some at some", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 220, "seek": 90584, "start": 926.7800000000001, "end": 931.1600000000001, "text": " point of all the things that Elm program test does behind the scenes.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 221, "seek": 90584, "start": 931.1600000000001, "end": 932.1600000000001, "text": " Right, right.", "tokens": [50364, 400, 2699, 76, 1461, 1500, 307, 733, 295, 411, 257, 1406, 4583, 300, 775, 439, 295, 264, 19577, 1507, 11, 50656, 50656, 1936, 439, 295, 264, 41807, 721, 466, 3579, 1090, 1496, 6921, 322, 1461, 6921, 50892, 50892, 775, 370, 300, 382, 364, 724, 10754, 11, 291, 393, 2464, 428, 724, 2685, 6921, 709, 544, 2661, 51146, 51146, 293, 19621, 293, 8944, 11, 597, 286, 2041, 307, 257, 935, 321, 820, 483, 281, 412, 512, 412, 512, 51411, 51411, 935, 295, 439, 264, 721, 300, 2699, 76, 1461, 1500, 775, 2261, 264, 8026, 13, 51630, 51630, 1779, 11, 558, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.15423002609839806, "compression_ratio": 1.744, "no_caption_prob": 2.9310087484191172e-05}, {"id": 222, "seek": 93216, "start": 932.16, "end": 937.24, "text": " And to that point of doing it correctly, I think that that's a really key point that,", "tokens": [50364, 400, 281, 300, 935, 295, 884, 309, 8944, 11, 286, 519, 300, 300, 311, 257, 534, 2141, 935, 300, 11, 50618, 50618, 291, 458, 11, 1419, 341, 38745, 6987, 294, 341, 6405, 11, 286, 478, 988, 291, 727, 11, 291, 458, 11, 818, 50882, 50882, 264, 5623, 2445, 1803, 490, 364, 2699, 76, 1500, 11, 457, 291, 500, 380, 362, 264, 912, 1496, 295, 6687, 51160, 51160, 300, 721, 366, 767, 885, 27415, 493, 294, 257, 636, 300, 311, 10344, 281, 437, 311, 516, 281, 51428, 51428, 1051, 562, 291, 360, 11185, 5893, 3861, 420, 2035, 2010, 295, 1461, 291, 434, 4084, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.08226652234514183, "compression_ratio": 1.6704545454545454, "no_caption_prob": 3.7051089748274535e-05}, {"id": 223, "seek": 93216, "start": 937.24, "end": 942.52, "text": " you know, having this encapsulated in this library, I'm sure you could, you know, call", "tokens": [50364, 400, 281, 300, 935, 295, 884, 309, 8944, 11, 286, 519, 300, 300, 311, 257, 534, 2141, 935, 300, 11, 50618, 50618, 291, 458, 11, 1419, 341, 38745, 6987, 294, 341, 6405, 11, 286, 478, 988, 291, 727, 11, 291, 458, 11, 818, 50882, 50882, 264, 5623, 2445, 1803, 490, 364, 2699, 76, 1500, 11, 457, 291, 500, 380, 362, 264, 912, 1496, 295, 6687, 51160, 51160, 300, 721, 366, 767, 885, 27415, 493, 294, 257, 636, 300, 311, 10344, 281, 437, 311, 516, 281, 51428, 51428, 1051, 562, 291, 360, 11185, 5893, 3861, 420, 2035, 2010, 295, 1461, 291, 434, 4084, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.08226652234514183, "compression_ratio": 1.6704545454545454, "no_caption_prob": 3.7051089748274535e-05}, {"id": 224, "seek": 93216, "start": 942.52, "end": 948.0799999999999, "text": " the update function yourself from an Elm test, but you don't have the same level of confidence", "tokens": [50364, 400, 281, 300, 935, 295, 884, 309, 8944, 11, 286, 519, 300, 300, 311, 257, 534, 2141, 935, 300, 11, 50618, 50618, 291, 458, 11, 1419, 341, 38745, 6987, 294, 341, 6405, 11, 286, 478, 988, 291, 727, 11, 291, 458, 11, 818, 50882, 50882, 264, 5623, 2445, 1803, 490, 364, 2699, 76, 1500, 11, 457, 291, 500, 380, 362, 264, 912, 1496, 295, 6687, 51160, 51160, 300, 721, 366, 767, 885, 27415, 493, 294, 257, 636, 300, 311, 10344, 281, 437, 311, 516, 281, 51428, 51428, 1051, 562, 291, 360, 11185, 5893, 3861, 420, 2035, 2010, 295, 1461, 291, 434, 4084, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.08226652234514183, "compression_ratio": 1.6704545454545454, "no_caption_prob": 3.7051089748274535e-05}, {"id": 225, "seek": 93216, "start": 948.0799999999999, "end": 953.4399999999999, "text": " that things are actually being wired up in a way that's equivalent to what's going to", "tokens": [50364, 400, 281, 300, 935, 295, 884, 309, 8944, 11, 286, 519, 300, 300, 311, 257, 534, 2141, 935, 300, 11, 50618, 50618, 291, 458, 11, 1419, 341, 38745, 6987, 294, 341, 6405, 11, 286, 478, 988, 291, 727, 11, 291, 458, 11, 818, 50882, 50882, 264, 5623, 2445, 1803, 490, 364, 2699, 76, 1500, 11, 457, 291, 500, 380, 362, 264, 912, 1496, 295, 6687, 51160, 51160, 300, 721, 366, 767, 885, 27415, 493, 294, 257, 636, 300, 311, 10344, 281, 437, 311, 516, 281, 51428, 51428, 1051, 562, 291, 360, 11185, 5893, 3861, 420, 2035, 2010, 295, 1461, 291, 434, 4084, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.08226652234514183, "compression_ratio": 1.6704545454545454, "no_caption_prob": 3.7051089748274535e-05}, {"id": 226, "seek": 93216, "start": 953.4399999999999, "end": 958.5799999999999, "text": " happen when you do browser dot application or whatever type of program you're creating.", "tokens": [50364, 400, 281, 300, 935, 295, 884, 309, 8944, 11, 286, 519, 300, 300, 311, 257, 534, 2141, 935, 300, 11, 50618, 50618, 291, 458, 11, 1419, 341, 38745, 6987, 294, 341, 6405, 11, 286, 478, 988, 291, 727, 11, 291, 458, 11, 818, 50882, 50882, 264, 5623, 2445, 1803, 490, 364, 2699, 76, 1500, 11, 457, 291, 500, 380, 362, 264, 912, 1496, 295, 6687, 51160, 51160, 300, 721, 366, 767, 885, 27415, 493, 294, 257, 636, 300, 311, 10344, 281, 437, 311, 516, 281, 51428, 51428, 1051, 562, 291, 360, 11185, 5893, 3861, 420, 2035, 2010, 295, 1461, 291, 434, 4084, 13, 51685, 51685], "temperature": 0.0, "avg_logprob": -0.08226652234514183, "compression_ratio": 1.6704545454545454, "no_caption_prob": 3.7051089748274535e-05}, {"id": 227, "seek": 95858, "start": 958.58, "end": 964.0, "text": " So there's a lot of value to having that encapsulated in something that you can trust to be equivalent", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 228, "seek": 95858, "start": 964.0, "end": 968.4000000000001, "text": " so that you know you're not you're testing something that's realistic and going to reflect", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 229, "seek": 95858, "start": 968.4000000000001, "end": 969.4000000000001, "text": " the reality.", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 230, "seek": 95858, "start": 969.4000000000001, "end": 970.4000000000001, "text": " Yeah.", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 231, "seek": 95858, "start": 970.4000000000001, "end": 974.72, "text": " And to hit on that, just a little bit more about the types of refactorings that these", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 232, "seek": 95858, "start": 974.72, "end": 978.1600000000001, "text": " programs written in Elm program tests can help you refactor.", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 233, "seek": 95858, "start": 978.1600000000001, "end": 983.4000000000001, "text": " These are things like, oh, you have this set of messages and you want to change what the", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 234, "seek": 95858, "start": 983.4000000000001, "end": 988.36, "text": " messages are so that you can whatever centralize your logic, maybe in a certain way in your", "tokens": [50364, 407, 456, 311, 257, 688, 295, 2158, 281, 1419, 300, 38745, 6987, 294, 746, 300, 291, 393, 3361, 281, 312, 10344, 50635, 50635, 370, 300, 291, 458, 291, 434, 406, 291, 434, 4997, 746, 300, 311, 12465, 293, 516, 281, 5031, 50855, 50855, 264, 4103, 13, 50905, 50905, 865, 13, 50955, 50955, 400, 281, 2045, 322, 300, 11, 445, 257, 707, 857, 544, 466, 264, 3467, 295, 1895, 15104, 1109, 300, 613, 51171, 51171, 4268, 3720, 294, 2699, 76, 1461, 6921, 393, 854, 291, 1895, 15104, 13, 51343, 51343, 1981, 366, 721, 411, 11, 1954, 11, 291, 362, 341, 992, 295, 7897, 293, 291, 528, 281, 1319, 437, 264, 51605, 51605, 7897, 366, 370, 300, 291, 393, 2035, 5777, 1125, 428, 9952, 11, 1310, 294, 257, 1629, 636, 294, 428, 51853, 51853], "temperature": 0.0, "avg_logprob": -0.11056984004689686, "compression_ratio": 1.8243243243243243, "no_caption_prob": 1.2411142051860224e-05}, {"id": 235, "seek": 98836, "start": 988.36, "end": 994.52, "text": " update function and extract some data type specific functions that are then used rather", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 236, "seek": 98836, "start": 994.52, "end": 997.54, "text": " than having all that logic in your update function.", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 237, "seek": 98836, "start": 997.54, "end": 1001.48, "text": " That's the type of refactoring that is very tedious to do if you don't have these high", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 238, "seek": 98836, "start": 1001.48, "end": 1006.64, "text": " level tests, because essentially what you have is a bunch of unit tests calling an update", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 239, "seek": 98836, "start": 1006.64, "end": 1012.48, "text": " function that are written in the language of that module that knows about its messages,", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 240, "seek": 98836, "start": 1012.48, "end": 1014.72, "text": " knows about its internal model.", "tokens": [50364, 5623, 2445, 293, 8947, 512, 1412, 2010, 2685, 6828, 300, 366, 550, 1143, 2831, 50672, 50672, 813, 1419, 439, 300, 9952, 294, 428, 5623, 2445, 13, 50823, 50823, 663, 311, 264, 2010, 295, 1895, 578, 3662, 300, 307, 588, 38284, 281, 360, 498, 291, 500, 380, 362, 613, 1090, 51020, 51020, 1496, 6921, 11, 570, 4476, 437, 291, 362, 307, 257, 3840, 295, 4985, 6921, 5141, 364, 5623, 51278, 51278, 2445, 300, 366, 3720, 294, 264, 2856, 295, 300, 10088, 300, 3255, 466, 1080, 7897, 11, 51570, 51570, 3255, 466, 1080, 6920, 2316, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.07028569493974958, "compression_ratio": 1.8166666666666667, "no_caption_prob": 3.0241113563533872e-05}, {"id": 241, "seek": 101472, "start": 1014.72, "end": 1019.6800000000001, "text": " And now you want all those unit tests to move to a different module that's specific to this", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 242, "seek": 101472, "start": 1019.6800000000001, "end": 1023.12, "text": " smaller data type doesn't know anything about messages.", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 243, "seek": 101472, "start": 1023.12, "end": 1026.76, "text": " So if you have the high level test coverage, you have some safety.", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 244, "seek": 101472, "start": 1026.76, "end": 1031.38, "text": " And if you don't have these higher level tests, you basically have to translate all your tests", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 245, "seek": 101472, "start": 1031.38, "end": 1036.84, "text": " and move them over, which is, I don't know, that's that's one of the things I I fear the", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 246, "seek": 101472, "start": 1036.84, "end": 1039.3600000000001, "text": " most when I'm doing coding.", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 247, "seek": 101472, "start": 1039.3600000000001, "end": 1040.3600000000001, "text": " Right.", "tokens": [50364, 400, 586, 291, 528, 439, 729, 4985, 6921, 281, 1286, 281, 257, 819, 10088, 300, 311, 2685, 281, 341, 50612, 50612, 4356, 1412, 2010, 1177, 380, 458, 1340, 466, 7897, 13, 50784, 50784, 407, 498, 291, 362, 264, 1090, 1496, 1500, 9645, 11, 291, 362, 512, 4514, 13, 50966, 50966, 400, 498, 291, 500, 380, 362, 613, 2946, 1496, 6921, 11, 291, 1936, 362, 281, 13799, 439, 428, 6921, 51197, 51197, 293, 1286, 552, 670, 11, 597, 307, 11, 286, 500, 380, 458, 11, 300, 311, 300, 311, 472, 295, 264, 721, 286, 286, 4240, 264, 51470, 51470, 881, 562, 286, 478, 884, 17720, 13, 51596, 51596, 1779, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.12178482629556571, "compression_ratio": 1.7250996015936255, "no_caption_prob": 5.422100912255701e-06}, {"id": 248, "seek": 104036, "start": 1040.36, "end": 1044.9599999999998, "text": " And one example is like form validation is actually something fairly common and also", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 249, "seek": 104036, "start": 1044.9599999999998, "end": 1050.36, "text": " something that you tend to do incompletely the first time you implement it like, oh,", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 250, "seek": 104036, "start": 1050.36, "end": 1053.4599999999998, "text": " we'll just need to validate a few things, we'll move on.", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 251, "seek": 104036, "start": 1053.4599999999998, "end": 1057.9399999999998, "text": " And then over time, you need to add more validations, maybe at some point, you end up extracting", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 252, "seek": 104036, "start": 1057.9399999999998, "end": 1063.6599999999999, "text": " a validation helper module or using some package to help you with validation.", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 253, "seek": 104036, "start": 1063.6599999999999, "end": 1068.28, "text": " Those again, are things that can completely change the flow of events.", "tokens": [50364, 400, 472, 1365, 307, 411, 1254, 24071, 307, 767, 746, 6457, 2689, 293, 611, 50594, 50594, 746, 300, 291, 3928, 281, 360, 14036, 14657, 736, 264, 700, 565, 291, 4445, 309, 411, 11, 1954, 11, 50864, 50864, 321, 603, 445, 643, 281, 29562, 257, 1326, 721, 11, 321, 603, 1286, 322, 13, 51019, 51019, 400, 550, 670, 565, 11, 291, 643, 281, 909, 544, 7363, 763, 11, 1310, 412, 512, 935, 11, 291, 917, 493, 49844, 51243, 51243, 257, 24071, 36133, 10088, 420, 1228, 512, 7372, 281, 854, 291, 365, 24071, 13, 51529, 51529, 3950, 797, 11, 366, 721, 300, 393, 2584, 1319, 264, 3095, 295, 3931, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.15470988409859793, "compression_ratio": 1.8153846153846154, "no_caption_prob": 4.3997304601361975e-05}, {"id": 254, "seek": 106828, "start": 1068.28, "end": 1073.08, "text": " Like maybe you used to validate things on when the message happened, but now you're", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 255, "seek": 106828, "start": 1073.08, "end": 1077.8, "text": " switching to store the unvalidated data in your model and validating it when you send", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 256, "seek": 106828, "start": 1077.8, "end": 1080.96, "text": " the form and showing error messages in a different way.", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 257, "seek": 106828, "start": 1080.96, "end": 1084.52, "text": " Those are changes that ideally should be simple to make.", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 258, "seek": 106828, "start": 1084.52, "end": 1090.26, "text": " But if you're writing unit tests, they become extremely tedious, because those unit tests", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 259, "seek": 106828, "start": 1090.26, "end": 1095.6, "text": " that touch your update function or directly refer to messages are extremely brittle to", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 260, "seek": 106828, "start": 1095.6, "end": 1096.6, "text": " those kind of changes.", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 261, "seek": 106828, "start": 1096.6, "end": 1097.6, "text": " Right.", "tokens": [50364, 1743, 1310, 291, 1143, 281, 29562, 721, 322, 562, 264, 3636, 2011, 11, 457, 586, 291, 434, 50604, 50604, 16493, 281, 3531, 264, 517, 3337, 327, 770, 1412, 294, 428, 2316, 293, 7363, 990, 309, 562, 291, 2845, 50840, 50840, 264, 1254, 293, 4099, 6713, 7897, 294, 257, 819, 636, 13, 50998, 50998, 3950, 366, 2962, 300, 22915, 820, 312, 2199, 281, 652, 13, 51176, 51176, 583, 498, 291, 434, 3579, 4985, 6921, 11, 436, 1813, 4664, 38284, 11, 570, 729, 4985, 6921, 51463, 51463, 300, 2557, 428, 5623, 2445, 420, 3838, 2864, 281, 7897, 366, 4664, 49325, 281, 51730, 51730, 729, 733, 295, 2962, 13, 51780, 51780, 1779, 13, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.09802241074411493, "compression_ratio": 1.7526881720430108, "no_caption_prob": 9.761010005604476e-05}, {"id": 262, "seek": 109760, "start": 1097.6, "end": 1102.24, "text": " So if you were doing something like an optimistic update in the UI where you're interacting", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 263, "seek": 109760, "start": 1102.24, "end": 1108.28, "text": " with server responses, you would have to fill in a lot of the pieces to simulate that in", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 264, "seek": 109760, "start": 1108.28, "end": 1109.54, "text": " a plain old unit test.", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 265, "seek": 109760, "start": 1109.54, "end": 1114.9199999999998, "text": " But if you're driving it through on program tests, then you can say, click this button,", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 266, "seek": 109760, "start": 1114.9199999999998, "end": 1120.2199999999998, "text": " you know, enter this information, hit send, simulate a server response and make assertions", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 267, "seek": 109760, "start": 1120.2199999999998, "end": 1124.56, "text": " about the view while it's loading before the server responses come back.", "tokens": [50364, 407, 498, 291, 645, 884, 746, 411, 364, 19397, 5623, 294, 264, 15682, 689, 291, 434, 18017, 50596, 50596, 365, 7154, 13019, 11, 291, 576, 362, 281, 2836, 294, 257, 688, 295, 264, 3755, 281, 27817, 300, 294, 50898, 50898, 257, 11121, 1331, 4985, 1500, 13, 50961, 50961, 583, 498, 291, 434, 4840, 309, 807, 322, 1461, 6921, 11, 550, 291, 393, 584, 11, 2052, 341, 2960, 11, 51230, 51230, 291, 458, 11, 3242, 341, 1589, 11, 2045, 2845, 11, 27817, 257, 7154, 4134, 293, 652, 19810, 626, 51495, 51495, 466, 264, 1910, 1339, 309, 311, 15114, 949, 264, 7154, 13019, 808, 646, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.10484178860982259, "compression_ratio": 1.7041198501872659, "no_caption_prob": 5.143961971043609e-05}, {"id": 268, "seek": 112456, "start": 1124.56, "end": 1130.8799999999999, "text": " So you can you can decouple it and and not rely on wiring it in a very specific way that", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 269, "seek": 112456, "start": 1130.8799999999999, "end": 1132.44, "text": " you can't trust as much.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 270, "seek": 112456, "start": 1132.44, "end": 1134.56, "text": " So yeah, there's a lot of value to that.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 271, "seek": 112456, "start": 1134.56, "end": 1135.56, "text": " Yep.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 272, "seek": 112456, "start": 1135.56, "end": 1139.6799999999998, "text": " One thing I don't think we wrap this up yet, but you had mentioned earlier, Dillon, about", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 273, "seek": 112456, "start": 1139.6799999999998, "end": 1144.36, "text": " using unit tests to cover all the different edge cases and combinations.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 274, "seek": 112456, "start": 1144.36, "end": 1147.24, "text": " And I would definitely agree with that.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 275, "seek": 112456, "start": 1147.24, "end": 1152.28, "text": " I tend to start with maybe like a happy path program test.", "tokens": [50364, 407, 291, 393, 291, 393, 979, 263, 781, 309, 293, 293, 406, 10687, 322, 27520, 309, 294, 257, 588, 2685, 636, 300, 50680, 50680, 291, 393, 380, 3361, 382, 709, 13, 50758, 50758, 407, 1338, 11, 456, 311, 257, 688, 295, 2158, 281, 300, 13, 50864, 50864, 7010, 13, 50914, 50914, 1485, 551, 286, 500, 380, 519, 321, 7019, 341, 493, 1939, 11, 457, 291, 632, 2835, 3071, 11, 28160, 11, 466, 51120, 51120, 1228, 4985, 6921, 281, 2060, 439, 264, 819, 4691, 3331, 293, 21267, 13, 51354, 51354, 400, 286, 576, 2138, 3986, 365, 300, 13, 51498, 51498, 286, 3928, 281, 722, 365, 1310, 411, 257, 2055, 3100, 1461, 1500, 13, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.15339364676639952, "compression_ratio": 1.5671641791044777, "no_caption_prob": 1.428521045454545e-05}, {"id": 276, "seek": 115228, "start": 1152.28, "end": 1155.82, "text": " Then you can jump down and do unit tests for all your edge cases.", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 277, "seek": 115228, "start": 1155.82, "end": 1156.82, "text": " That's cool.", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 278, "seek": 115228, "start": 1156.82, "end": 1159.08, "text": " So you like to do like a more outside in approach?", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 279, "seek": 115228, "start": 1159.08, "end": 1161.48, "text": " Yeah, yeah, exactly.", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 280, "seek": 115228, "start": 1161.48, "end": 1162.48, "text": " That's cool.", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 281, "seek": 115228, "start": 1162.48, "end": 1166.98, "text": " Because that so that's a really interesting topic that, you know, in the sort of test", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 282, "seek": 115228, "start": 1166.98, "end": 1171.96, "text": " driven development world, there, there are a lot of conversations about do you do you", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 283, "seek": 115228, "start": 1171.96, "end": 1179.16, "text": " write a unit test first, and then work your way up to building to fitting that unit into", "tokens": [50364, 1396, 291, 393, 3012, 760, 293, 360, 4985, 6921, 337, 439, 428, 4691, 3331, 13, 50541, 50541, 663, 311, 1627, 13, 50591, 50591, 407, 291, 411, 281, 360, 411, 257, 544, 2380, 294, 3109, 30, 50704, 50704, 865, 11, 1338, 11, 2293, 13, 50824, 50824, 663, 311, 1627, 13, 50874, 50874, 1436, 300, 370, 300, 311, 257, 534, 1880, 4829, 300, 11, 291, 458, 11, 294, 264, 1333, 295, 1500, 51099, 51099, 9555, 3250, 1002, 11, 456, 11, 456, 366, 257, 688, 295, 7315, 466, 360, 291, 360, 291, 51348, 51348, 2464, 257, 4985, 1500, 700, 11, 293, 550, 589, 428, 636, 493, 281, 2390, 281, 15669, 300, 4985, 666, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1368036855731094, "compression_ratio": 1.6758893280632412, "no_caption_prob": 4.222792085784022e-06}, {"id": 284, "seek": 117916, "start": 1179.16, "end": 1184.68, "text": " the application, which is in a way, you know, that's delayed integration, you haven't fit", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 285, "seek": 117916, "start": 1184.68, "end": 1186.72, "text": " the piece into the hole.", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 286, "seek": 117916, "start": 1186.72, "end": 1191.6000000000001, "text": " So you spend time building up all these different cases and then fit it into the hole.", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 287, "seek": 117916, "start": 1191.6000000000001, "end": 1195.5, "text": " And you don't know if it's actually going going to solve the problem that you set out", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 288, "seek": 117916, "start": 1195.5, "end": 1197.2, "text": " to solve when you built that unit.", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 289, "seek": 117916, "start": 1197.2, "end": 1200.4, "text": " So you don't know if it's going to fit fitting fitting and integrating the piece into the", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 290, "seek": 117916, "start": 1200.4, "end": 1202.3200000000002, "text": " hole is the hard and risky part.", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 291, "seek": 117916, "start": 1202.3200000000002, "end": 1206.5600000000002, "text": " So the sooner you can do that, the better the outside in school of thought is more that", "tokens": [50364, 264, 3861, 11, 597, 307, 294, 257, 636, 11, 291, 458, 11, 300, 311, 20268, 10980, 11, 291, 2378, 380, 3318, 50640, 50640, 264, 2522, 666, 264, 5458, 13, 50742, 50742, 407, 291, 3496, 565, 2390, 493, 439, 613, 819, 3331, 293, 550, 3318, 309, 666, 264, 5458, 13, 50986, 50986, 400, 291, 500, 380, 458, 498, 309, 311, 767, 516, 516, 281, 5039, 264, 1154, 300, 291, 992, 484, 51181, 51181, 281, 5039, 562, 291, 3094, 300, 4985, 13, 51266, 51266, 407, 291, 500, 380, 458, 498, 309, 311, 516, 281, 3318, 15669, 15669, 293, 26889, 264, 2522, 666, 264, 51426, 51426, 5458, 307, 264, 1152, 293, 21137, 644, 13, 51522, 51522, 407, 264, 15324, 291, 393, 360, 300, 11, 264, 1101, 264, 2380, 294, 1395, 295, 1194, 307, 544, 300, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08280604025896858, "compression_ratio": 1.9523809523809523, "no_caption_prob": 4.6835724788252264e-05}, {"id": 292, "seek": 120656, "start": 1206.56, "end": 1210.3999999999999, "text": " start with building something end to end.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 293, "seek": 120656, "start": 1210.3999999999999, "end": 1215.76, "text": " And it starts with testing from the outside in from the user's perspective, and then builds", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 294, "seek": 120656, "start": 1215.76, "end": 1216.76, "text": " the unit as needed.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 295, "seek": 120656, "start": 1216.76, "end": 1221.06, "text": " But it sort of uses more of a fake it till you make it approach, like you said, sort", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 296, "seek": 120656, "start": 1221.06, "end": 1222.84, "text": " of getting that happy path.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 297, "seek": 120656, "start": 1222.84, "end": 1224.6399999999999, "text": " So that's more the approach that you like to take.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 298, "seek": 120656, "start": 1224.6399999999999, "end": 1225.6399999999999, "text": " Well, that's interesting.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 299, "seek": 120656, "start": 1225.6399999999999, "end": 1231.1, "text": " I don't know that I have a specific preference for either of those in Elm.", "tokens": [50364, 722, 365, 2390, 746, 917, 281, 917, 13, 50556, 50556, 400, 309, 3719, 365, 4997, 490, 264, 2380, 294, 490, 264, 4195, 311, 4585, 11, 293, 550, 15182, 50824, 50824, 264, 4985, 382, 2978, 13, 50874, 50874, 583, 309, 1333, 295, 4960, 544, 295, 257, 7592, 309, 4288, 291, 652, 309, 3109, 11, 411, 291, 848, 11, 1333, 51089, 51089, 295, 1242, 300, 2055, 3100, 13, 51178, 51178, 407, 300, 311, 544, 264, 3109, 300, 291, 411, 281, 747, 13, 51268, 51268, 1042, 11, 300, 311, 1880, 13, 51318, 51318, 286, 500, 380, 458, 300, 286, 362, 257, 2685, 17502, 337, 2139, 295, 729, 294, 2699, 76, 13, 51591, 51591], "temperature": 0.0, "avg_logprob": -0.08752592120851789, "compression_ratio": 1.7131147540983607, "no_caption_prob": 5.014679572923342e-06}, {"id": 300, "seek": 123110, "start": 1231.1, "end": 1237.36, "text": " But I do tend to kind of write the high level test first, and then often I'll comment it", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 301, "seek": 123110, "start": 1237.36, "end": 1243.02, "text": " out or stash it or something and build those smaller pieces, then bring back the failing", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 302, "seek": 123110, "start": 1243.02, "end": 1245.26, "text": " high level test and plug the pieces in.", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 303, "seek": 123110, "start": 1245.26, "end": 1249.08, "text": " I think I would tend to do that most of the time.", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 304, "seek": 123110, "start": 1249.08, "end": 1253.32, "text": " However, there are cases if I'm not sure how things will be structured that I would write", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 305, "seek": 123110, "start": 1253.32, "end": 1258.26, "text": " the failing high level test implemented, like do the fake it till you make it and just write", "tokens": [50364, 583, 286, 360, 3928, 281, 733, 295, 2464, 264, 1090, 1496, 1500, 700, 11, 293, 550, 2049, 286, 603, 2871, 309, 50677, 50677, 484, 420, 342, 1299, 309, 420, 746, 293, 1322, 729, 4356, 3755, 11, 550, 1565, 646, 264, 18223, 50960, 50960, 1090, 1496, 1500, 293, 5452, 264, 3755, 294, 13, 51072, 51072, 286, 519, 286, 576, 3928, 281, 360, 300, 881, 295, 264, 565, 13, 51263, 51263, 2908, 11, 456, 366, 3331, 498, 286, 478, 406, 988, 577, 721, 486, 312, 18519, 300, 286, 576, 2464, 51475, 51475, 264, 18223, 1090, 1496, 1500, 12270, 11, 411, 360, 264, 7592, 309, 4288, 291, 652, 309, 293, 445, 2464, 51722, 51722], "temperature": 0.0, "avg_logprob": -0.09866966821451102, "compression_ratio": 1.8, "no_caption_prob": 1.3006550034333486e-05}, {"id": 306, "seek": 125826, "start": 1258.26, "end": 1262.3, "text": " a really simple thing where it's like hard coded to always show the stuff that's needed", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 307, "seek": 125826, "start": 1262.3, "end": 1264.58, "text": " to make it pass refactor.", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 308, "seek": 125826, "start": 1264.58, "end": 1270.46, "text": " I think there is a pitfall in doing that approach with on program tests that you can often skip", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 309, "seek": 125826, "start": 1270.46, "end": 1276.48, "text": " the refactoring step, or you can end up with working stuff that you've refactored, but", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 310, "seek": 125826, "start": 1276.48, "end": 1280.8, "text": " you haven't exactly extracted the coherent modules yet.", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 311, "seek": 125826, "start": 1280.8, "end": 1286.94, "text": " And you can end up with kind of a mess relying on only on program test if you aren't disciplined", "tokens": [50364, 257, 534, 2199, 551, 689, 309, 311, 411, 1152, 34874, 281, 1009, 855, 264, 1507, 300, 311, 2978, 50566, 50566, 281, 652, 309, 1320, 1895, 15104, 13, 50680, 50680, 286, 519, 456, 307, 257, 10147, 6691, 294, 884, 300, 3109, 365, 322, 1461, 6921, 300, 291, 393, 2049, 10023, 50974, 50974, 264, 1895, 578, 3662, 1823, 11, 420, 291, 393, 917, 493, 365, 1364, 1507, 300, 291, 600, 1895, 578, 2769, 11, 457, 51275, 51275, 291, 2378, 380, 2293, 34086, 264, 36239, 16679, 1939, 13, 51491, 51491, 400, 291, 393, 917, 493, 365, 733, 295, 257, 2082, 24140, 322, 787, 322, 1461, 1500, 498, 291, 3212, 380, 40061, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.10667811972754342, "compression_ratio": 1.7817460317460319, "no_caption_prob": 2.6425643682159716e-06}, {"id": 312, "seek": 128694, "start": 1286.94, "end": 1291.26, "text": " about looking for the smaller pieces that you're going to pull out and write lower level", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 313, "seek": 128694, "start": 1291.26, "end": 1293.5, "text": " tests for those pieces.", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 314, "seek": 128694, "start": 1293.5, "end": 1302.76, "text": " Because when you use a regular Elm test, you tested an API and then by using that API,", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 315, "seek": 128694, "start": 1302.76, "end": 1304.74, "text": " you can kind of feel the pains with it.", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 316, "seek": 128694, "start": 1304.74, "end": 1310.78, "text": " But with Elm program tests, you don't feel those pains because those APIs are technical", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 317, "seek": 128694, "start": 1310.78, "end": 1313.14, "text": " detail and you can forget it.", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 318, "seek": 128694, "start": 1313.14, "end": 1314.56, "text": " Is that what you meant?", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 319, "seek": 128694, "start": 1314.56, "end": 1316.6200000000001, "text": " That they are a technical detail.", "tokens": [50364, 466, 1237, 337, 264, 4356, 3755, 300, 291, 434, 516, 281, 2235, 484, 293, 2464, 3126, 1496, 50580, 50580, 6921, 337, 729, 3755, 13, 50692, 50692, 1436, 562, 291, 764, 257, 3890, 2699, 76, 1500, 11, 291, 8246, 364, 9362, 293, 550, 538, 1228, 300, 9362, 11, 51155, 51155, 291, 393, 733, 295, 841, 264, 29774, 365, 309, 13, 51254, 51254, 583, 365, 2699, 76, 1461, 6921, 11, 291, 500, 380, 841, 729, 29774, 570, 729, 21445, 366, 6191, 51556, 51556, 2607, 293, 291, 393, 2870, 309, 13, 51674, 51674, 1119, 300, 437, 291, 4140, 30, 51745, 51745, 663, 436, 366, 257, 6191, 2607, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.17608724821598157, "compression_ratio": 1.751054852320675, "no_caption_prob": 3.2887246561585926e-06}, {"id": 320, "seek": 131662, "start": 1316.62, "end": 1317.62, "text": " Yeah, sort of.", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 321, "seek": 131662, "start": 1317.62, "end": 1323.5, "text": " I think that tell me if this is related to what you're saying, like in Elm in I think", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 322, "seek": 131662, "start": 1323.5, "end": 1329.3799999999999, "text": " the preferred way and the way people are settling on is that if you have smaller pieces of your", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 323, "seek": 131662, "start": 1329.3799999999999, "end": 1334.5, "text": " own program, especially if they're related to view stuff or update logic, there's a lot", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 324, "seek": 131662, "start": 1334.5, "end": 1336.06, "text": " of different patterns you can use.", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 325, "seek": 131662, "start": 1336.06, "end": 1340.8999999999999, "text": " Like you may have a module that just has a function that returns HTML, or you might have", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 326, "seek": 131662, "start": 1340.8999999999999, "end": 1345.34, "text": " one that has a full update function that can produce commands or somewhere in between where", "tokens": [50364, 865, 11, 1333, 295, 13, 50414, 50414, 286, 519, 300, 980, 385, 498, 341, 307, 4077, 281, 437, 291, 434, 1566, 11, 411, 294, 2699, 76, 294, 286, 519, 50708, 50708, 264, 16494, 636, 293, 264, 636, 561, 366, 33841, 322, 307, 300, 498, 291, 362, 4356, 3755, 295, 428, 51002, 51002, 1065, 1461, 11, 2318, 498, 436, 434, 4077, 281, 1910, 1507, 420, 5623, 9952, 11, 456, 311, 257, 688, 51258, 51258, 295, 819, 8294, 291, 393, 764, 13, 51336, 51336, 1743, 291, 815, 362, 257, 10088, 300, 445, 575, 257, 2445, 300, 11247, 17995, 11, 420, 291, 1062, 362, 51578, 51578, 472, 300, 575, 257, 1577, 5623, 2445, 300, 393, 5258, 16901, 420, 4079, 294, 1296, 689, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1082264659850578, "compression_ratio": 1.7123287671232876, "no_caption_prob": 2.9771537811029702e-05}, {"id": 327, "seek": 134534, "start": 1345.34, "end": 1351.78, "text": " maybe it returns like some specific set of things that can result from its actions or", "tokens": [50364, 1310, 309, 11247, 411, 512, 2685, 992, 295, 721, 300, 393, 1874, 490, 1080, 5909, 420, 50686, 50686, 2121, 6828, 281, 1399, 264, 7897, 309, 393, 5258, 13, 50865, 50865, 286, 519, 411, 300, 311, 257, 1389, 689, 2699, 76, 1461, 6921, 393, 312, 1143, 281, 2464, 4985, 6921, 337, 51175, 51175, 16679, 411, 300, 300, 366, 406, 2584, 4268, 294, 264, 1577, 9482, 2020, 295, 51474, 51474, 264, 1349, 11, 457, 366, 611, 544, 6179, 813, 445, 512, 6828, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12050077774945428, "compression_ratio": 1.6933333333333334, "no_caption_prob": 1.4284813914855476e-05}, {"id": 328, "seek": 134534, "start": 1351.78, "end": 1355.36, "text": " special functions to process the messages it can produce.", "tokens": [50364, 1310, 309, 11247, 411, 512, 2685, 992, 295, 721, 300, 393, 1874, 490, 1080, 5909, 420, 50686, 50686, 2121, 6828, 281, 1399, 264, 7897, 309, 393, 5258, 13, 50865, 50865, 286, 519, 411, 300, 311, 257, 1389, 689, 2699, 76, 1461, 6921, 393, 312, 1143, 281, 2464, 4985, 6921, 337, 51175, 51175, 16679, 411, 300, 300, 366, 406, 2584, 4268, 294, 264, 1577, 9482, 2020, 295, 51474, 51474, 264, 1349, 11, 457, 366, 611, 544, 6179, 813, 445, 512, 6828, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12050077774945428, "compression_ratio": 1.6933333333333334, "no_caption_prob": 1.4284813914855476e-05}, {"id": 329, "seek": 134534, "start": 1355.36, "end": 1361.56, "text": " I think like that's a case where Elm program tests can be used to write unit tests for", "tokens": [50364, 1310, 309, 11247, 411, 512, 2685, 992, 295, 721, 300, 393, 1874, 490, 1080, 5909, 420, 50686, 50686, 2121, 6828, 281, 1399, 264, 7897, 309, 393, 5258, 13, 50865, 50865, 286, 519, 411, 300, 311, 257, 1389, 689, 2699, 76, 1461, 6921, 393, 312, 1143, 281, 2464, 4985, 6921, 337, 51175, 51175, 16679, 411, 300, 300, 366, 406, 2584, 4268, 294, 264, 1577, 9482, 2020, 295, 51474, 51474, 264, 1349, 11, 457, 366, 611, 544, 6179, 813, 445, 512, 6828, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12050077774945428, "compression_ratio": 1.6933333333333334, "no_caption_prob": 1.4284813914855476e-05}, {"id": 330, "seek": 134534, "start": 1361.56, "end": 1367.54, "text": " modules like that that are not completely programs in the full architecture sense of", "tokens": [50364, 1310, 309, 11247, 411, 512, 2685, 992, 295, 721, 300, 393, 1874, 490, 1080, 5909, 420, 50686, 50686, 2121, 6828, 281, 1399, 264, 7897, 309, 393, 5258, 13, 50865, 50865, 286, 519, 411, 300, 311, 257, 1389, 689, 2699, 76, 1461, 6921, 393, 312, 1143, 281, 2464, 4985, 6921, 337, 51175, 51175, 16679, 411, 300, 300, 366, 406, 2584, 4268, 294, 264, 1577, 9482, 2020, 295, 51474, 51474, 264, 1349, 11, 457, 366, 611, 544, 6179, 813, 445, 512, 6828, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12050077774945428, "compression_ratio": 1.6933333333333334, "no_caption_prob": 1.4284813914855476e-05}, {"id": 331, "seek": 134534, "start": 1367.54, "end": 1372.02, "text": " the word, but are also more complicated than just some functions.", "tokens": [50364, 1310, 309, 11247, 411, 512, 2685, 992, 295, 721, 300, 393, 1874, 490, 1080, 5909, 420, 50686, 50686, 2121, 6828, 281, 1399, 264, 7897, 309, 393, 5258, 13, 50865, 50865, 286, 519, 411, 300, 311, 257, 1389, 689, 2699, 76, 1461, 6921, 393, 312, 1143, 281, 2464, 4985, 6921, 337, 51175, 51175, 16679, 411, 300, 300, 366, 406, 2584, 4268, 294, 264, 1577, 9482, 2020, 295, 51474, 51474, 264, 1349, 11, 457, 366, 611, 544, 6179, 813, 445, 512, 6828, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.12050077774945428, "compression_ratio": 1.6933333333333334, "no_caption_prob": 1.4284813914855476e-05}, {"id": 332, "seek": 137202, "start": 1372.02, "end": 1378.3, "text": " However, Elm program test doesn't let you interact directly with its API.", "tokens": [50364, 2908, 11, 2699, 76, 1461, 1500, 1177, 380, 718, 291, 4648, 3838, 365, 1080, 9362, 13, 50678, 50678, 407, 294, 411, 11, 293, 382, 291, 732, 2825, 466, 294, 428, 3894, 3500, 11, 3579, 6921, 294, 294, 50956, 50956, 1500, 9555, 3250, 11, 420, 1500, 9555, 1715, 11, 286, 1920, 848, 11, 309, 311, 411, 257, 1715, 2290, 13, 51268, 51268, 400, 286, 519, 2699, 76, 1461, 1500, 1177, 380, 534, 976, 291, 729, 1715, 2290, 5311, 11, 570, 51556, 51556, 1338, 11, 286, 519, 291, 434, 406, 1364, 3838, 365, 264, 9362, 11, 457, 309, 775, 854, 291, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16232877511244553, "compression_ratio": 1.7322175732217573, "no_caption_prob": 8.80083280208055e-06}, {"id": 333, "seek": 137202, "start": 1378.3, "end": 1383.86, "text": " So in like, and as you two talked about in your previous episode, writing tests in in", "tokens": [50364, 2908, 11, 2699, 76, 1461, 1500, 1177, 380, 718, 291, 4648, 3838, 365, 1080, 9362, 13, 50678, 50678, 407, 294, 411, 11, 293, 382, 291, 732, 2825, 466, 294, 428, 3894, 3500, 11, 3579, 6921, 294, 294, 50956, 50956, 1500, 9555, 3250, 11, 420, 1500, 9555, 1715, 11, 286, 1920, 848, 11, 309, 311, 411, 257, 1715, 2290, 13, 51268, 51268, 400, 286, 519, 2699, 76, 1461, 1500, 1177, 380, 534, 976, 291, 729, 1715, 2290, 5311, 11, 570, 51556, 51556, 1338, 11, 286, 519, 291, 434, 406, 1364, 3838, 365, 264, 9362, 11, 457, 309, 775, 854, 291, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16232877511244553, "compression_ratio": 1.7322175732217573, "no_caption_prob": 8.80083280208055e-06}, {"id": 334, "seek": 137202, "start": 1383.86, "end": 1390.1, "text": " test driven development, or test driven design, I almost said, it's like a design tool.", "tokens": [50364, 2908, 11, 2699, 76, 1461, 1500, 1177, 380, 718, 291, 4648, 3838, 365, 1080, 9362, 13, 50678, 50678, 407, 294, 411, 11, 293, 382, 291, 732, 2825, 466, 294, 428, 3894, 3500, 11, 3579, 6921, 294, 294, 50956, 50956, 1500, 9555, 3250, 11, 420, 1500, 9555, 1715, 11, 286, 1920, 848, 11, 309, 311, 411, 257, 1715, 2290, 13, 51268, 51268, 400, 286, 519, 2699, 76, 1461, 1500, 1177, 380, 534, 976, 291, 729, 1715, 2290, 5311, 11, 570, 51556, 51556, 1338, 11, 286, 519, 291, 434, 406, 1364, 3838, 365, 264, 9362, 11, 457, 309, 775, 854, 291, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16232877511244553, "compression_ratio": 1.7322175732217573, "no_caption_prob": 8.80083280208055e-06}, {"id": 335, "seek": 137202, "start": 1390.1, "end": 1395.86, "text": " And I think Elm program test doesn't really give you those design tool benefits, because", "tokens": [50364, 2908, 11, 2699, 76, 1461, 1500, 1177, 380, 718, 291, 4648, 3838, 365, 1080, 9362, 13, 50678, 50678, 407, 294, 411, 11, 293, 382, 291, 732, 2825, 466, 294, 428, 3894, 3500, 11, 3579, 6921, 294, 294, 50956, 50956, 1500, 9555, 3250, 11, 420, 1500, 9555, 1715, 11, 286, 1920, 848, 11, 309, 311, 411, 257, 1715, 2290, 13, 51268, 51268, 400, 286, 519, 2699, 76, 1461, 1500, 1177, 380, 534, 976, 291, 729, 1715, 2290, 5311, 11, 570, 51556, 51556, 1338, 11, 286, 519, 291, 434, 406, 1364, 3838, 365, 264, 9362, 11, 457, 309, 775, 854, 291, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16232877511244553, "compression_ratio": 1.7322175732217573, "no_caption_prob": 8.80083280208055e-06}, {"id": 336, "seek": 137202, "start": 1395.86, "end": 1401.06, "text": " yeah, I think you're not working directly with the API, but it does help you.", "tokens": [50364, 2908, 11, 2699, 76, 1461, 1500, 1177, 380, 718, 291, 4648, 3838, 365, 1080, 9362, 13, 50678, 50678, 407, 294, 411, 11, 293, 382, 291, 732, 2825, 466, 294, 428, 3894, 3500, 11, 3579, 6921, 294, 294, 50956, 50956, 1500, 9555, 3250, 11, 420, 1500, 9555, 1715, 11, 286, 1920, 848, 11, 309, 311, 411, 257, 1715, 2290, 13, 51268, 51268, 400, 286, 519, 2699, 76, 1461, 1500, 1177, 380, 534, 976, 291, 729, 1715, 2290, 5311, 11, 570, 51556, 51556, 1338, 11, 286, 519, 291, 434, 406, 1364, 3838, 365, 264, 9362, 11, 457, 309, 775, 854, 291, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.16232877511244553, "compression_ratio": 1.7322175732217573, "no_caption_prob": 8.80083280208055e-06}, {"id": 337, "seek": 140106, "start": 1401.06, "end": 1405.86, "text": " It gives you other benefits, the test coverage we talked about that lets you do bigger refactoring", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 338, "seek": 140106, "start": 1405.86, "end": 1406.86, "text": " safely.", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 339, "seek": 140106, "start": 1406.86, "end": 1412.1, "text": " And it also helps you think about the user perspective more if you're really doing user", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 340, "seek": 140106, "start": 1412.1, "end": 1413.94, "text": " centered design.", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 341, "seek": 140106, "start": 1413.94, "end": 1418.5, "text": " And a process like that, it can really help get developers aligned with the kind of product", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 342, "seek": 140106, "start": 1418.5, "end": 1420.1399999999999, "text": " level thinking as well.", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 343, "seek": 140106, "start": 1420.1399999999999, "end": 1426.82, "text": " But for designing an API, Elm program test really doesn't provide those benefits of testing.", "tokens": [50364, 467, 2709, 291, 661, 5311, 11, 264, 1500, 9645, 321, 2825, 466, 300, 6653, 291, 360, 3801, 1895, 578, 3662, 50604, 50604, 11750, 13, 50654, 50654, 400, 309, 611, 3665, 291, 519, 466, 264, 4195, 4585, 544, 498, 291, 434, 534, 884, 4195, 50916, 50916, 18988, 1715, 13, 51008, 51008, 400, 257, 1399, 411, 300, 11, 309, 393, 534, 854, 483, 8849, 17962, 365, 264, 733, 295, 1674, 51236, 51236, 1496, 1953, 382, 731, 13, 51318, 51318, 583, 337, 14685, 364, 9362, 11, 2699, 76, 1461, 1500, 534, 1177, 380, 2893, 729, 5311, 295, 4997, 13, 51652, 51652], "temperature": 0.0, "avg_logprob": -0.1317831516265869, "compression_ratio": 1.6733067729083666, "no_caption_prob": 1.045111184794223e-05}, {"id": 344, "seek": 142682, "start": 1426.82, "end": 1434.1799999999998, "text": " Right, it's almost like the, you know, user interface based testing in Elm program test", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 345, "seek": 142682, "start": 1434.1799999999998, "end": 1438.46, "text": " keeps you honest about making sure that you're designing something that's going to have a", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 346, "seek": 142682, "start": 1438.46, "end": 1441.78, "text": " nice experience for from the user's perspective.", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 347, "seek": 142682, "start": 1441.78, "end": 1448.26, "text": " And doing unit level tests with Elm test helps keep you honest that the API you've designed", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 348, "seek": 142682, "start": 1448.26, "end": 1453.02, "text": " is going to be nice to work with because that's the direct thing that you're exercising and", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 349, "seek": 142682, "start": 1453.02, "end": 1454.06, "text": " getting feedback on.", "tokens": [50364, 1779, 11, 309, 311, 1920, 411, 264, 11, 291, 458, 11, 4195, 9226, 2361, 4997, 294, 2699, 76, 1461, 1500, 50732, 50732, 5965, 291, 3245, 466, 1455, 988, 300, 291, 434, 14685, 746, 300, 311, 516, 281, 362, 257, 50946, 50946, 1481, 1752, 337, 490, 264, 4195, 311, 4585, 13, 51112, 51112, 400, 884, 4985, 1496, 6921, 365, 2699, 76, 1500, 3665, 1066, 291, 3245, 300, 264, 9362, 291, 600, 4761, 51436, 51436, 307, 516, 281, 312, 1481, 281, 589, 365, 570, 300, 311, 264, 2047, 551, 300, 291, 434, 27272, 293, 51674, 51674, 1242, 5824, 322, 13, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.07570481300354004, "compression_ratio": 1.724, "no_caption_prob": 5.4755651945015416e-05}, {"id": 350, "seek": 145406, "start": 1454.06, "end": 1459.82, "text": " So you sort of want a mix of those high level and low level tests to make sure those things", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 351, "seek": 145406, "start": 1459.82, "end": 1462.54, "text": " are both being designed nicely.", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 352, "seek": 145406, "start": 1462.54, "end": 1467.74, "text": " It's really nice that you can write both using Elm tests that you don't have to write unit", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 353, "seek": 145406, "start": 1467.74, "end": 1474.46, "text": " tests in Elm and integration tests using JavaScript, using Cypress, for instance.", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 354, "seek": 145406, "start": 1474.46, "end": 1477.1399999999999, "text": " Even though that's an amazing tool, but that's a different thing.", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 355, "seek": 145406, "start": 1477.1399999999999, "end": 1483.12, "text": " Yeah, which is really one of the it's really leveraging the strength of Elm in that everything", "tokens": [50364, 407, 291, 1333, 295, 528, 257, 2890, 295, 729, 1090, 1496, 293, 2295, 1496, 6921, 281, 652, 988, 729, 721, 50652, 50652, 366, 1293, 885, 4761, 9594, 13, 50788, 50788, 467, 311, 534, 1481, 300, 291, 393, 2464, 1293, 1228, 2699, 76, 6921, 300, 291, 500, 380, 362, 281, 2464, 4985, 51048, 51048, 6921, 294, 2699, 76, 293, 10980, 6921, 1228, 15778, 11, 1228, 10295, 11637, 11, 337, 5197, 13, 51384, 51384, 2754, 1673, 300, 311, 364, 2243, 2290, 11, 457, 300, 311, 257, 819, 551, 13, 51518, 51518, 865, 11, 597, 307, 534, 472, 295, 264, 309, 311, 534, 32666, 264, 3800, 295, 2699, 76, 294, 300, 1203, 51817, 51817], "temperature": 0.0, "avg_logprob": -0.13824721142254046, "compression_ratio": 1.7509578544061302, "no_caption_prob": 3.844896582450019e-06}, {"id": 356, "seek": 148312, "start": 1483.12, "end": 1485.1799999999998, "text": " in Elm is pure functions.", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 357, "seek": 148312, "start": 1485.1799999999998, "end": 1488.34, "text": " There's a virtual DOM, which is essentially a data structure.", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 358, "seek": 148312, "start": 1488.34, "end": 1494.1999999999998, "text": " The commands and subscriptions are essentially just data that represents what the runtime", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 359, "seek": 148312, "start": 1494.1999999999998, "end": 1495.34, "text": " is going to do.", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 360, "seek": 148312, "start": 1495.34, "end": 1503.02, "text": " So program test essentially is simulating or like reimplementing in Elm in kind of a", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 361, "seek": 148312, "start": 1503.02, "end": 1509.58, "text": " test specific way, the runtime of Elm where it's creating a model, it's, it's maintaining", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 362, "seek": 148312, "start": 1509.58, "end": 1512.9399999999998, "text": " it, if there's external effects, it's like keeping track of those.", "tokens": [50364, 294, 2699, 76, 307, 6075, 6828, 13, 50467, 50467, 821, 311, 257, 6374, 35727, 11, 597, 307, 4476, 257, 1412, 3877, 13, 50625, 50625, 440, 16901, 293, 44951, 366, 4476, 445, 1412, 300, 8855, 437, 264, 34474, 50918, 50918, 307, 516, 281, 360, 13, 50975, 50975, 407, 1461, 1500, 4476, 307, 1034, 12162, 420, 411, 33433, 43704, 278, 294, 2699, 76, 294, 733, 295, 257, 51359, 51359, 1500, 2685, 636, 11, 264, 34474, 295, 2699, 76, 689, 309, 311, 4084, 257, 2316, 11, 309, 311, 11, 309, 311, 14916, 51687, 51687, 309, 11, 498, 456, 311, 8320, 5065, 11, 309, 311, 411, 5145, 2837, 295, 729, 13, 51855, 51855], "temperature": 0.0, "avg_logprob": -0.13277591670955624, "compression_ratio": 1.6926070038910506, "no_caption_prob": 7.527848083555e-06}, {"id": 363, "seek": 151294, "start": 1512.94, "end": 1518.5800000000002, "text": " Remembering what things are in progress, what are waiting for responses, and can render", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 364, "seek": 151294, "start": 1518.5800000000002, "end": 1521.7, "text": " the view from the current state at any time.", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 365, "seek": 151294, "start": 1521.7, "end": 1526.9, "text": " So yeah, it's all of that is possible and like was relatively easy to implement.", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 366, "seek": 151294, "start": 1526.9, "end": 1532.42, "text": " I mean, it's a lot of work, but it, it was easy to implement compared to other language.", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 367, "seek": 151294, "start": 1532.42, "end": 1536.54, "text": " Like actually, I've worked on similar test frameworks for Android, the Robo electric", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 368, "seek": 151294, "start": 1536.54, "end": 1542.04, "text": " framework at Pivotal Labs, we started writing a similar framework for iOS, which I think", "tokens": [50364, 5459, 278, 437, 721, 366, 294, 4205, 11, 437, 366, 3806, 337, 13019, 11, 293, 393, 15529, 50646, 50646, 264, 1910, 490, 264, 2190, 1785, 412, 604, 565, 13, 50802, 50802, 407, 1338, 11, 309, 311, 439, 295, 300, 307, 1944, 293, 411, 390, 7226, 1858, 281, 4445, 13, 51062, 51062, 286, 914, 11, 309, 311, 257, 688, 295, 589, 11, 457, 309, 11, 309, 390, 1858, 281, 4445, 5347, 281, 661, 2856, 13, 51338, 51338, 1743, 767, 11, 286, 600, 2732, 322, 2531, 1500, 29834, 337, 8853, 11, 264, 5424, 78, 5210, 51544, 51544, 8388, 412, 430, 13142, 304, 40047, 11, 321, 1409, 3579, 257, 2531, 8388, 337, 17430, 11, 597, 286, 519, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.15383702617580608, "compression_ratio": 1.6819787985865724, "no_caption_prob": 7.253678631968796e-05}, {"id": 369, "seek": 154204, "start": 1542.04, "end": 1543.04, "text": " never got finished.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 370, "seek": 154204, "start": 1543.04, "end": 1548.34, "text": " I've like done similar things in the past and it's like, this is by far the easiest", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 371, "seek": 154204, "start": 1548.34, "end": 1552.92, "text": " to write in the most sophisticated of any similar attempts I've worked on.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 372, "seek": 154204, "start": 1552.92, "end": 1553.92, "text": " That's cool.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 373, "seek": 154204, "start": 1553.92, "end": 1559.74, "text": " It's like a, it's like a pure Elm implementation of simulating the Elm architecture and the", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 374, "seek": 154204, "start": 1559.74, "end": 1560.74, "text": " Elm runtime.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 375, "seek": 154204, "start": 1560.74, "end": 1562.22, "text": " Yep, exactly.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 376, "seek": 154204, "start": 1562.22, "end": 1565.46, "text": " So let's, let's get into a couple of things.", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 377, "seek": 154204, "start": 1565.46, "end": 1571.1399999999999, "text": " So first of all, I think we, we should, we should make it clear we've sort of implied", "tokens": [50364, 1128, 658, 4335, 13, 50414, 50414, 286, 600, 411, 1096, 2531, 721, 294, 264, 1791, 293, 309, 311, 411, 11, 341, 307, 538, 1400, 264, 12889, 50679, 50679, 281, 2464, 294, 264, 881, 16950, 295, 604, 2531, 15257, 286, 600, 2732, 322, 13, 50908, 50908, 663, 311, 1627, 13, 50958, 50958, 467, 311, 411, 257, 11, 309, 311, 411, 257, 6075, 2699, 76, 11420, 295, 1034, 12162, 264, 2699, 76, 9482, 293, 264, 51249, 51249, 2699, 76, 34474, 13, 51299, 51299, 7010, 11, 2293, 13, 51373, 51373, 407, 718, 311, 11, 718, 311, 483, 666, 257, 1916, 295, 721, 13, 51535, 51535, 407, 700, 295, 439, 11, 286, 519, 321, 11, 321, 820, 11, 321, 820, 652, 309, 1850, 321, 600, 1333, 295, 32614, 51819, 51819], "temperature": 0.0, "avg_logprob": -0.12830547988414764, "compression_ratio": 1.7027027027027026, "no_caption_prob": 4.495087068789871e-06}, {"id": 378, "seek": 157114, "start": 1571.14, "end": 1573.18, "text": " this but not said it explicitly.", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 379, "seek": 157114, "start": 1573.18, "end": 1576.96, "text": " You can simulate HTTP requests with Elm program tests.", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 380, "seek": 157114, "start": 1576.96, "end": 1581.94, "text": " And that's one of the really killer features because you know, you would be hard pressed", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 381, "seek": 157114, "start": 1581.94, "end": 1585.8600000000001, "text": " to find, find a way to do that if you were sort of rolling your own thing.", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 382, "seek": 157114, "start": 1585.8600000000001, "end": 1590.42, "text": " It's really something you're, you're going to have to do a lot of work to get that same", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 383, "seek": 157114, "start": 1590.42, "end": 1593.0600000000002, "text": " result otherwise with that Elm program test.", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 384, "seek": 157114, "start": 1593.0600000000002, "end": 1599.88, "text": " So there's an API where you can sort of expect a certain HTTP requests to be performed.", "tokens": [50364, 341, 457, 406, 848, 309, 20803, 13, 50466, 50466, 509, 393, 27817, 33283, 12475, 365, 2699, 76, 1461, 6921, 13, 50655, 50655, 400, 300, 311, 472, 295, 264, 534, 13364, 4122, 570, 291, 458, 11, 291, 576, 312, 1152, 17355, 50904, 50904, 281, 915, 11, 915, 257, 636, 281, 360, 300, 498, 291, 645, 1333, 295, 9439, 428, 1065, 551, 13, 51100, 51100, 467, 311, 534, 746, 291, 434, 11, 291, 434, 516, 281, 362, 281, 360, 257, 688, 295, 589, 281, 483, 300, 912, 51328, 51328, 1874, 5911, 365, 300, 2699, 76, 1461, 1500, 13, 51460, 51460, 407, 456, 311, 364, 9362, 689, 291, 393, 1333, 295, 2066, 257, 1629, 33283, 12475, 281, 312, 10332, 13, 51801, 51801], "temperature": 0.0, "avg_logprob": -0.11871605077065712, "compression_ratio": 1.6917562724014337, "no_caption_prob": 1.0615984137984924e-05}, {"id": 385, "seek": 159988, "start": 1599.88, "end": 1605.96, "text": " You can say simulate responding with this HTTP response with this status code, and then", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 386, "seek": 159988, "start": 1605.96, "end": 1611.74, "text": " continue to make assertions in your, in your view after that.", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 387, "seek": 159988, "start": 1611.74, "end": 1612.74, "text": " Yeah.", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 388, "seek": 159988, "start": 1612.74, "end": 1617.64, "text": " So just to compare what that would look like without Elm program test, you could do things", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 389, "seek": 159988, "start": 1617.64, "end": 1618.64, "text": " like that.", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 390, "seek": 159988, "start": 1618.64, "end": 1624.66, "text": " But you would in the first place be like saying call update with this exact message with all", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 391, "seek": 159988, "start": 1624.66, "end": 1625.66, "text": " this data.", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 392, "seek": 159988, "start": 1625.66, "end": 1626.66, "text": " Right.", "tokens": [50364, 509, 393, 584, 27817, 16670, 365, 341, 33283, 4134, 365, 341, 6558, 3089, 11, 293, 550, 50668, 50668, 2354, 281, 652, 19810, 626, 294, 428, 11, 294, 428, 1910, 934, 300, 13, 50957, 50957, 865, 13, 51007, 51007, 407, 445, 281, 6794, 437, 300, 576, 574, 411, 1553, 2699, 76, 1461, 1500, 11, 291, 727, 360, 721, 51252, 51252, 411, 300, 13, 51302, 51302, 583, 291, 576, 294, 264, 700, 1081, 312, 411, 1566, 818, 5623, 365, 341, 1900, 3636, 365, 439, 51603, 51603, 341, 1412, 13, 51653, 51653, 1779, 13, 51703, 51703], "temperature": 0.0, "avg_logprob": -0.1545047358462685, "compression_ratio": 1.6211453744493391, "no_caption_prob": 7.76686010794947e-06}, {"id": 393, "seek": 162666, "start": 1626.66, "end": 1630.02, "text": " And then you would just add it to the specific message type for your application.", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 394, "seek": 162666, "start": 1630.02, "end": 1631.66, "text": " Yes, exactly.", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 395, "seek": 162666, "start": 1631.66, "end": 1637.38, "text": " And you also wouldn't buy like, it starts to get extremely tedious going that manual", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 396, "seek": 162666, "start": 1637.38, "end": 1643.02, "text": " route, which is what I started with before I extracted on program test is that, okay,", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 397, "seek": 162666, "start": 1643.02, "end": 1649.0600000000002, "text": " well, maybe you also want coverage to make sure that the message that produced the HTTP", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 398, "seek": 162666, "start": 1649.0600000000002, "end": 1654.14, "text": " requests happened, because like, maybe you whatever disconnect the code that makes the", "tokens": [50364, 400, 550, 291, 576, 445, 909, 309, 281, 264, 2685, 3636, 2010, 337, 428, 3861, 13, 50532, 50532, 1079, 11, 2293, 13, 50614, 50614, 400, 291, 611, 2759, 380, 2256, 411, 11, 309, 3719, 281, 483, 4664, 38284, 516, 300, 9688, 50900, 50900, 7955, 11, 597, 307, 437, 286, 1409, 365, 949, 286, 34086, 322, 1461, 1500, 307, 300, 11, 1392, 11, 51182, 51182, 731, 11, 1310, 291, 611, 528, 9645, 281, 652, 988, 300, 264, 3636, 300, 7126, 264, 33283, 51484, 51484, 12475, 2011, 11, 570, 411, 11, 1310, 291, 2035, 14299, 264, 3089, 300, 1669, 264, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.274653341255936, "compression_ratio": 1.6333333333333333, "no_caption_prob": 5.955062533757882e-06}, {"id": 399, "seek": 165414, "start": 1654.14, "end": 1659.6200000000001, "text": " button appear that lets people initiate the request, or maybe the validation failed, and", "tokens": [50364, 2960, 4204, 300, 6653, 561, 31574, 264, 5308, 11, 420, 1310, 264, 24071, 7612, 11, 293, 50638, 50638, 264, 5308, 2067, 380, 754, 2279, 11, 721, 411, 300, 11, 2699, 76, 1461, 1500, 18722, 337, 291, 13, 50917, 50917, 400, 550, 611, 11, 498, 428, 1500, 18199, 11, 1419, 257, 1481, 6713, 3636, 466, 437, 307, 2737, 51221, 51221, 307, 1071, 644, 300, 307, 257, 688, 295, 38284, 589, 281, 360, 322, 428, 1065, 11, 597, 2699, 76, 1461, 1500, 51524, 51524, 6417, 337, 291, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.09951210021972656, "compression_ratio": 1.672811059907834, "no_caption_prob": 1.0615865903673694e-05}, {"id": 400, "seek": 165414, "start": 1659.6200000000001, "end": 1665.2, "text": " the request wasn't even sent, things like that, Elm program test handles for you.", "tokens": [50364, 2960, 4204, 300, 6653, 561, 31574, 264, 5308, 11, 420, 1310, 264, 24071, 7612, 11, 293, 50638, 50638, 264, 5308, 2067, 380, 754, 2279, 11, 721, 411, 300, 11, 2699, 76, 1461, 1500, 18722, 337, 291, 13, 50917, 50917, 400, 550, 611, 11, 498, 428, 1500, 18199, 11, 1419, 257, 1481, 6713, 3636, 466, 437, 307, 2737, 51221, 51221, 307, 1071, 644, 300, 307, 257, 688, 295, 38284, 589, 281, 360, 322, 428, 1065, 11, 597, 2699, 76, 1461, 1500, 51524, 51524, 6417, 337, 291, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.09951210021972656, "compression_ratio": 1.672811059907834, "no_caption_prob": 1.0615865903673694e-05}, {"id": 401, "seek": 165414, "start": 1665.2, "end": 1671.2800000000002, "text": " And then also, if your test fails, having a nice error message about what is happening", "tokens": [50364, 2960, 4204, 300, 6653, 561, 31574, 264, 5308, 11, 420, 1310, 264, 24071, 7612, 11, 293, 50638, 50638, 264, 5308, 2067, 380, 754, 2279, 11, 721, 411, 300, 11, 2699, 76, 1461, 1500, 18722, 337, 291, 13, 50917, 50917, 400, 550, 611, 11, 498, 428, 1500, 18199, 11, 1419, 257, 1481, 6713, 3636, 466, 437, 307, 2737, 51221, 51221, 307, 1071, 644, 300, 307, 257, 688, 295, 38284, 589, 281, 360, 322, 428, 1065, 11, 597, 2699, 76, 1461, 1500, 51524, 51524, 6417, 337, 291, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.09951210021972656, "compression_ratio": 1.672811059907834, "no_caption_prob": 1.0615865903673694e-05}, {"id": 402, "seek": 165414, "start": 1671.2800000000002, "end": 1677.3400000000001, "text": " is another part that is a lot of tedious work to do on your own, which Elm program test", "tokens": [50364, 2960, 4204, 300, 6653, 561, 31574, 264, 5308, 11, 420, 1310, 264, 24071, 7612, 11, 293, 50638, 50638, 264, 5308, 2067, 380, 754, 2279, 11, 721, 411, 300, 11, 2699, 76, 1461, 1500, 18722, 337, 291, 13, 50917, 50917, 400, 550, 611, 11, 498, 428, 1500, 18199, 11, 1419, 257, 1481, 6713, 3636, 466, 437, 307, 2737, 51221, 51221, 307, 1071, 644, 300, 307, 257, 688, 295, 38284, 589, 281, 360, 322, 428, 1065, 11, 597, 2699, 76, 1461, 1500, 51524, 51524, 6417, 337, 291, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.09951210021972656, "compression_ratio": 1.672811059907834, "no_caption_prob": 1.0615865903673694e-05}, {"id": 403, "seek": 165414, "start": 1677.3400000000001, "end": 1678.42, "text": " provides for you.", "tokens": [50364, 2960, 4204, 300, 6653, 561, 31574, 264, 5308, 11, 420, 1310, 264, 24071, 7612, 11, 293, 50638, 50638, 264, 5308, 2067, 380, 754, 2279, 11, 721, 411, 300, 11, 2699, 76, 1461, 1500, 18722, 337, 291, 13, 50917, 50917, 400, 550, 611, 11, 498, 428, 1500, 18199, 11, 1419, 257, 1481, 6713, 3636, 466, 437, 307, 2737, 51221, 51221, 307, 1071, 644, 300, 307, 257, 688, 295, 38284, 589, 281, 360, 322, 428, 1065, 11, 597, 2699, 76, 1461, 1500, 51524, 51524, 6417, 337, 291, 13, 51578, 51578], "temperature": 0.0, "avg_logprob": -0.09951210021972656, "compression_ratio": 1.672811059907834, "no_caption_prob": 1.0615865903673694e-05}, {"id": 404, "seek": 167842, "start": 1678.42, "end": 1684.16, "text": " So if you say, Oh, simulate the response to this endpoint, and it was a timeout error,", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 405, "seek": 167842, "start": 1684.16, "end": 1689.0800000000002, "text": " if that request wasn't made on program test will say, Oh, that request was never made.", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 406, "seek": 167842, "start": 1689.0800000000002, "end": 1691.16, "text": " Here's the list of requests that were made.", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 407, "seek": 167842, "start": 1691.16, "end": 1695.7, "text": " In contrast, if you were just doing it manually sending the message, there's no guarantee", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 408, "seek": 167842, "start": 1695.7, "end": 1700.94, "text": " that like, maybe the message was sent, maybe it wasn't, you haven't validated it, validated", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 409, "seek": 167842, "start": 1700.94, "end": 1705.78, "text": " it all you know is like, maybe there was a typo in the URL, and it didn't match for that", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 410, "seek": 167842, "start": 1705.78, "end": 1706.78, "text": " reason.", "tokens": [50364, 407, 498, 291, 584, 11, 876, 11, 27817, 264, 4134, 281, 341, 35795, 11, 293, 309, 390, 257, 565, 346, 6713, 11, 50651, 50651, 498, 300, 5308, 2067, 380, 1027, 322, 1461, 1500, 486, 584, 11, 876, 11, 300, 5308, 390, 1128, 1027, 13, 50897, 50897, 1692, 311, 264, 1329, 295, 12475, 300, 645, 1027, 13, 51001, 51001, 682, 8712, 11, 498, 291, 645, 445, 884, 309, 16945, 7750, 264, 3636, 11, 456, 311, 572, 10815, 51228, 51228, 300, 411, 11, 1310, 264, 3636, 390, 2279, 11, 1310, 309, 2067, 380, 11, 291, 2378, 380, 40693, 309, 11, 40693, 51490, 51490, 309, 439, 291, 458, 307, 411, 11, 1310, 456, 390, 257, 2125, 78, 294, 264, 12905, 11, 293, 309, 994, 380, 2995, 337, 300, 51732, 51732, 1778, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.13611251429507606, "compression_ratio": 1.8716981132075472, "no_caption_prob": 2.3186665202956647e-05}, {"id": 411, "seek": 170678, "start": 1706.78, "end": 1710.26, "text": " So that's, I guess, something I take pride in, in Elm program test.", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 412, "seek": 170678, "start": 1710.26, "end": 1714.26, "text": " It's like, yeah, it's, it's a centralized place where and hopefully other people can", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 413, "seek": 170678, "start": 1714.26, "end": 1719.8, "text": " contribute to this to to have a nice error messages for these cases that like, ideally,", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 414, "seek": 170678, "start": 1719.8, "end": 1724.94, "text": " you want to have this, but you'd never have time to do that work to do that on your own,", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 415, "seek": 170678, "start": 1724.94, "end": 1727.34, "text": " if you didn't have this reusable package,", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 416, "seek": 170678, "start": 1727.34, "end": 1728.34, "text": " right?", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 417, "seek": 170678, "start": 1728.34, "end": 1732.7, "text": " Instead of everybody individually building their own thing and taking their time to do", "tokens": [50364, 407, 300, 311, 11, 286, 2041, 11, 746, 286, 747, 10936, 294, 11, 294, 2699, 76, 1461, 1500, 13, 50538, 50538, 467, 311, 411, 11, 1338, 11, 309, 311, 11, 309, 311, 257, 32395, 1081, 689, 293, 4696, 661, 561, 393, 50738, 50738, 10586, 281, 341, 281, 281, 362, 257, 1481, 6713, 7897, 337, 613, 3331, 300, 411, 11, 22915, 11, 51015, 51015, 291, 528, 281, 362, 341, 11, 457, 291, 1116, 1128, 362, 565, 281, 360, 300, 589, 281, 360, 300, 322, 428, 1065, 11, 51272, 51272, 498, 291, 994, 380, 362, 341, 41807, 7372, 11, 51392, 51392, 558, 30, 51442, 51442, 7156, 295, 2201, 16652, 2390, 641, 1065, 551, 293, 1940, 641, 565, 281, 360, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.16691999198976626, "compression_ratio": 1.7032967032967032, "no_caption_prob": 8.013283149921335e-06}, {"id": 418, "seek": 173270, "start": 1732.7, "end": 1737.6200000000001, "text": " that, hopefully, you know, you've, you've done the bulk of the work, but hopefully others", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 419, "seek": 173270, "start": 1737.6200000000001, "end": 1741.94, "text": " can then invest some of that time they would have spent rolling their own thing to improving", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 420, "seek": 173270, "start": 1741.94, "end": 1743.22, "text": " this community resource.", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 421, "seek": 173270, "start": 1743.22, "end": 1745.5800000000002, "text": " Yeah, so there's a whole bunch of stuff.", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 422, "seek": 173270, "start": 1745.5800000000002, "end": 1752.5, "text": " So on program test, like you mentioned, can do simulations of HTTP responses, it can partially", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 423, "seek": 173270, "start": 1752.5, "end": 1759.26, "text": " do the simulation of time passing, like if you have tasks that have delays, it can simulate", "tokens": [50364, 300, 11, 4696, 11, 291, 458, 11, 291, 600, 11, 291, 600, 1096, 264, 16139, 295, 264, 589, 11, 457, 4696, 2357, 50610, 50610, 393, 550, 1963, 512, 295, 300, 565, 436, 576, 362, 4418, 9439, 641, 1065, 551, 281, 11470, 50826, 50826, 341, 1768, 7684, 13, 50890, 50890, 865, 11, 370, 456, 311, 257, 1379, 3840, 295, 1507, 13, 51008, 51008, 407, 322, 1461, 1500, 11, 411, 291, 2835, 11, 393, 360, 35138, 295, 33283, 13019, 11, 309, 393, 18886, 51354, 51354, 360, 264, 16575, 295, 565, 8437, 11, 411, 498, 291, 362, 9608, 300, 362, 28610, 11, 309, 393, 27817, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.08757909738792563, "compression_ratio": 1.7193675889328064, "no_caption_prob": 6.708779983455315e-05}, {"id": 424, "seek": 175926, "start": 1759.26, "end": 1764.7, "text": " that and you say like, Oh, advanced time by this much, and it'll trigger all the all the", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 425, "seek": 175926, "start": 1764.7, "end": 1770.8799999999999, "text": " delayed tasks, you can simulate ports, both incoming and outgoing ports, and you can simulate", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 426, "seek": 175926, "start": 1770.8799999999999, "end": 1777.2, "text": " some of the browser and Dom API, that's an area I still need to improve quite a bit.", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 427, "seek": 175926, "start": 1777.2, "end": 1781.26, "text": " So what is it that you can't simulate with Elm program test at the moment?", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 428, "seek": 175926, "start": 1781.26, "end": 1782.26, "text": " Let's see.", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 429, "seek": 175926, "start": 1782.26, "end": 1789.1, "text": " So specific things like browser focus, like focusing on particular IDs in the DOM viewport", "tokens": [50364, 300, 293, 291, 584, 411, 11, 876, 11, 7339, 565, 538, 341, 709, 11, 293, 309, 603, 7875, 439, 264, 439, 264, 50636, 50636, 20268, 9608, 11, 291, 393, 27817, 18160, 11, 1293, 22341, 293, 41565, 18160, 11, 293, 291, 393, 27817, 50945, 50945, 512, 295, 264, 11185, 293, 16674, 9362, 11, 300, 311, 364, 1859, 286, 920, 643, 281, 3470, 1596, 257, 857, 13, 51261, 51261, 407, 437, 307, 309, 300, 291, 393, 380, 27817, 365, 2699, 76, 1461, 1500, 412, 264, 1623, 30, 51464, 51464, 961, 311, 536, 13, 51514, 51514, 407, 2685, 721, 411, 11185, 1879, 11, 411, 8416, 322, 1729, 48212, 294, 264, 35727, 1910, 2707, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.14233871928432532, "compression_ratio": 1.6505576208178439, "no_caption_prob": 3.5355194995645434e-05}, {"id": 430, "seek": 178910, "start": 1789.1, "end": 1792.74, "text": " scrolling is something that I haven't touched on.", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 431, "seek": 178910, "start": 1792.74, "end": 1796.86, "text": " There's some things related to time, I think, like the subscriptions for time, like time", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 432, "seek": 178910, "start": 1796.86, "end": 1801.54, "text": " dot every aren't implemented, but I would like to implement.", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 433, "seek": 178910, "start": 1801.54, "end": 1803.74, "text": " I think that's, that's the basics of it.", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 434, "seek": 178910, "start": 1803.74, "end": 1807.9399999999998, "text": " I don't know if there's any other kind of niche packages, I guess, like the file and", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 435, "seek": 178910, "start": 1807.9399999999998, "end": 1811.86, "text": " bytes API is something that I haven't looked at yet.", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 436, "seek": 178910, "start": 1811.86, "end": 1816.74, "text": " But those are things that like, kind of the internals are set up where a lot of that stuff", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 437, "seek": 178910, "start": 1816.74, "end": 1817.74, "text": " could be implemented.", "tokens": [50364, 29053, 307, 746, 300, 286, 2378, 380, 9828, 322, 13, 50546, 50546, 821, 311, 512, 721, 4077, 281, 565, 11, 286, 519, 11, 411, 264, 44951, 337, 565, 11, 411, 565, 50752, 50752, 5893, 633, 3212, 380, 12270, 11, 457, 286, 576, 411, 281, 4445, 13, 50986, 50986, 286, 519, 300, 311, 11, 300, 311, 264, 14688, 295, 309, 13, 51096, 51096, 286, 500, 380, 458, 498, 456, 311, 604, 661, 733, 295, 19956, 17401, 11, 286, 2041, 11, 411, 264, 3991, 293, 51306, 51306, 36088, 9362, 307, 746, 300, 286, 2378, 380, 2956, 412, 1939, 13, 51502, 51502, 583, 729, 366, 721, 300, 411, 11, 733, 295, 264, 2154, 1124, 366, 992, 493, 689, 257, 688, 295, 300, 1507, 51746, 51746, 727, 312, 12270, 13, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.10141021288358248, "compression_ratio": 1.8458646616541354, "no_caption_prob": 3.32121089741122e-05}, {"id": 438, "seek": 181774, "start": 1817.74, "end": 1822.06, "text": " You just have to think about, okay, what's the API of different error conditions that", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 439, "seek": 181774, "start": 1822.06, "end": 1824.42, "text": " people may want to simulate in tests?", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 440, "seek": 181774, "start": 1824.42, "end": 1826.76, "text": " What's the internal model that would represent this?", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 441, "seek": 181774, "start": 1826.76, "end": 1829.38, "text": " What do we want the error messages to look like?", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 442, "seek": 181774, "start": 1829.38, "end": 1834.1, "text": " So those are definitely things I'd love to have contributions for if someone needs those", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 443, "seek": 181774, "start": 1834.1, "end": 1838.04, "text": " features for testing whatever their application is.", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 444, "seek": 181774, "start": 1838.04, "end": 1842.38, "text": " So there's nothing really blocking those things from existing.", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 445, "seek": 181774, "start": 1842.38, "end": 1846.3, "text": " It's just more time and money, or more time.", "tokens": [50364, 509, 445, 362, 281, 519, 466, 11, 1392, 11, 437, 311, 264, 9362, 295, 819, 6713, 4487, 300, 50580, 50580, 561, 815, 528, 281, 27817, 294, 6921, 30, 50698, 50698, 708, 311, 264, 6920, 2316, 300, 576, 2906, 341, 30, 50815, 50815, 708, 360, 321, 528, 264, 6713, 7897, 281, 574, 411, 30, 50946, 50946, 407, 729, 366, 2138, 721, 286, 1116, 959, 281, 362, 15725, 337, 498, 1580, 2203, 729, 51182, 51182, 4122, 337, 4997, 2035, 641, 3861, 307, 13, 51379, 51379, 407, 456, 311, 1825, 534, 17776, 729, 721, 490, 6741, 13, 51596, 51596, 467, 311, 445, 544, 565, 293, 1460, 11, 420, 544, 565, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.15978130272456578, "compression_ratio": 1.674911660777385, "no_caption_prob": 1.892476575449109e-05}, {"id": 446, "seek": 184630, "start": 1846.3, "end": 1849.6599999999999, "text": " Yeah, it's free.", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 447, "seek": 184630, "start": 1849.6599999999999, "end": 1856.46, "text": " I'd say there's one, like some of the things like, okay, keyboard focus is something that", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 448, "seek": 184630, "start": 1856.46, "end": 1862.3799999999999, "text": " ideally you'd want to be able to simulate, but the logic that browsers use to maintain", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 449, "seek": 184630, "start": 1862.3799999999999, "end": 1863.3799999999999, "text": " that is so complicated.", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 450, "seek": 184630, "start": 1863.3799999999999, "end": 1867.06, "text": " Yeah, I don't know if that could ever be safely done.", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 451, "seek": 184630, "start": 1867.06, "end": 1871.02, "text": " Maybe I like that's something I'd love to be able to simulate here.", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 452, "seek": 184630, "start": 1871.02, "end": 1873.9199999999998, "text": " But it's also of like, limited use.", "tokens": [50364, 865, 11, 309, 311, 1737, 13, 50532, 50532, 286, 1116, 584, 456, 311, 472, 11, 411, 512, 295, 264, 721, 411, 11, 1392, 11, 10186, 1879, 307, 746, 300, 50872, 50872, 22915, 291, 1116, 528, 281, 312, 1075, 281, 27817, 11, 457, 264, 9952, 300, 36069, 764, 281, 6909, 51168, 51168, 300, 307, 370, 6179, 13, 51218, 51218, 865, 11, 286, 500, 380, 458, 498, 300, 727, 1562, 312, 11750, 1096, 13, 51402, 51402, 2704, 286, 411, 300, 311, 746, 286, 1116, 959, 281, 312, 1075, 281, 27817, 510, 13, 51600, 51600, 583, 309, 311, 611, 295, 411, 11, 5567, 764, 13, 51745, 51745], "temperature": 0.0, "avg_logprob": -0.18716700571887898, "compression_ratio": 1.6666666666666667, "no_caption_prob": 3.219113568775356e-05}, {"id": 453, "seek": 187392, "start": 1873.92, "end": 1878.18, "text": " Like that's the point where maybe you just have to track things manually and say, okay,", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 454, "seek": 187392, "start": 1878.18, "end": 1880.02, "text": " well, here's the state of the DOM.", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 455, "seek": 187392, "start": 1880.02, "end": 1881.4, "text": " Here's what's going to happen.", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 456, "seek": 187392, "start": 1881.4, "end": 1884.5800000000002, "text": " Let's like hack together a test that gets things into that state.", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 457, "seek": 187392, "start": 1884.5800000000002, "end": 1885.5800000000002, "text": " Yeah.", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 458, "seek": 187392, "start": 1885.5800000000002, "end": 1890.94, "text": " Or there at some points, you should probably just use a better tool, like Cypress, a tool", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 459, "seek": 187392, "start": 1890.94, "end": 1892.8200000000002, "text": " more suited to the task.", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 460, "seek": 187392, "start": 1892.8200000000002, "end": 1897.18, "text": " Yeah, I mean, Elm program test is not, it seems like Elm program test is not intending", "tokens": [50364, 1743, 300, 311, 264, 935, 689, 1310, 291, 445, 362, 281, 2837, 721, 16945, 293, 584, 11, 1392, 11, 50577, 50577, 731, 11, 510, 311, 264, 1785, 295, 264, 35727, 13, 50669, 50669, 1692, 311, 437, 311, 516, 281, 1051, 13, 50738, 50738, 961, 311, 411, 10339, 1214, 257, 1500, 300, 2170, 721, 666, 300, 1785, 13, 50897, 50897, 865, 13, 50947, 50947, 1610, 456, 412, 512, 2793, 11, 291, 820, 1391, 445, 764, 257, 1101, 2290, 11, 411, 10295, 11637, 11, 257, 2290, 51215, 51215, 544, 24736, 281, 264, 5633, 13, 51309, 51309, 865, 11, 286, 914, 11, 2699, 76, 1461, 1500, 307, 406, 11, 309, 2544, 411, 2699, 76, 1461, 1500, 307, 406, 560, 2029, 51527, 51527], "temperature": 0.0, "avg_logprob": -0.16295978451563306, "compression_ratio": 1.708, "no_caption_prob": 1.670123492658604e-05}, {"id": 461, "seek": 189718, "start": 1897.18, "end": 1904.54, "text": " to be something that is actually performing HTTP requests, actually sending ports and", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 462, "seek": 189718, "start": 1904.54, "end": 1905.8, "text": " executing JavaScript.", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 463, "seek": 189718, "start": 1905.8, "end": 1911.74, "text": " And that's like, you know, by design, which, so sometimes I, you know, it's, it gets a", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 464, "seek": 189718, "start": 1911.74, "end": 1914.0600000000002, "text": " little confusing, but people use different terms for this.", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 465, "seek": 189718, "start": 1914.0600000000002, "end": 1919.5800000000002, "text": " I think of it as like end to end testing versus integration testing, where, you know, I would,", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 466, "seek": 189718, "start": 1919.5800000000002, "end": 1923.2, "text": " I would consider Elm program test to be an integration testing framework.", "tokens": [50364, 281, 312, 746, 300, 307, 767, 10205, 33283, 12475, 11, 767, 7750, 18160, 293, 50732, 50732, 32368, 15778, 13, 50795, 50795, 400, 300, 311, 411, 11, 291, 458, 11, 538, 1715, 11, 597, 11, 370, 2171, 286, 11, 291, 458, 11, 309, 311, 11, 309, 2170, 257, 51092, 51092, 707, 13181, 11, 457, 561, 764, 819, 2115, 337, 341, 13, 51208, 51208, 286, 519, 295, 309, 382, 411, 917, 281, 917, 4997, 5717, 10980, 4997, 11, 689, 11, 291, 458, 11, 286, 576, 11, 51484, 51484, 286, 576, 1949, 2699, 76, 1461, 1500, 281, 312, 364, 10980, 4997, 8388, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.10971111517686111, "compression_ratio": 1.6746031746031746, "no_caption_prob": 4.469232226256281e-05}, {"id": 467, "seek": 192320, "start": 1923.2, "end": 1931.16, "text": " It's not ever going to make an HTTP request, which is a feature or a bug depending on what", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 468, "seek": 192320, "start": 1931.16, "end": 1932.3600000000001, "text": " you're trying to do, right?", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 469, "seek": 192320, "start": 1932.3600000000001, "end": 1939.6200000000001, "text": " It is, you have to pick the appropriate testing level and you have to keep that in mind, but", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 470, "seek": 192320, "start": 1939.6200000000001, "end": 1941.66, "text": " obviously it's going to be faster.", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 471, "seek": 192320, "start": 1941.66, "end": 1946.06, "text": " It's going to be more deterministic if you're not actually making HTTP requests, right?", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 472, "seek": 192320, "start": 1946.06, "end": 1953.18, "text": " So you need to have an awareness of what the tool is suited for and use it for those effects.", "tokens": [50364, 467, 311, 406, 1562, 516, 281, 652, 364, 33283, 5308, 11, 597, 307, 257, 4111, 420, 257, 7426, 5413, 322, 437, 50762, 50762, 291, 434, 1382, 281, 360, 11, 558, 30, 50822, 50822, 467, 307, 11, 291, 362, 281, 1888, 264, 6854, 4997, 1496, 293, 291, 362, 281, 1066, 300, 294, 1575, 11, 457, 51185, 51185, 2745, 309, 311, 516, 281, 312, 4663, 13, 51287, 51287, 467, 311, 516, 281, 312, 544, 15957, 3142, 498, 291, 434, 406, 767, 1455, 33283, 12475, 11, 558, 30, 51507, 51507, 407, 291, 643, 281, 362, 364, 8888, 295, 437, 264, 2290, 307, 24736, 337, 293, 764, 309, 337, 729, 5065, 13, 51863, 51863], "temperature": 0.0, "avg_logprob": -0.11812923635755267, "compression_ratio": 1.6984126984126984, "no_caption_prob": 2.468220736773219e-05}, {"id": 473, "seek": 195318, "start": 1953.18, "end": 1960.8200000000002, "text": " So, so like I want, I wanted to make the API a little more concrete for people maybe.", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 474, "seek": 195318, "start": 1960.8200000000002, "end": 1966.76, "text": " So like when it comes to like simulating HTTP effects, so essentially you have this sort", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 475, "seek": 195318, "start": 1966.76, "end": 1969.44, "text": " of program test data type.", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 476, "seek": 195318, "start": 1969.44, "end": 1973.8600000000001, "text": " If you think about, if you think about the Elm language, it is not a dynamic language.", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 477, "seek": 195318, "start": 1973.8600000000001, "end": 1975.02, "text": " It is a static language.", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 478, "seek": 195318, "start": 1975.02, "end": 1980.5800000000002, "text": " It's not a language where you can go in and tweak the internals of something, reach in", "tokens": [50364, 407, 11, 370, 411, 286, 528, 11, 286, 1415, 281, 652, 264, 9362, 257, 707, 544, 9859, 337, 561, 1310, 13, 50746, 50746, 407, 411, 562, 309, 1487, 281, 411, 1034, 12162, 33283, 5065, 11, 370, 4476, 291, 362, 341, 1333, 51043, 51043, 295, 1461, 1500, 1412, 2010, 13, 51177, 51177, 759, 291, 519, 466, 11, 498, 291, 519, 466, 264, 2699, 76, 2856, 11, 309, 307, 406, 257, 8546, 2856, 13, 51398, 51398, 467, 307, 257, 13437, 2856, 13, 51456, 51456, 467, 311, 406, 257, 2856, 689, 291, 393, 352, 294, 293, 29879, 264, 2154, 1124, 295, 746, 11, 2524, 294, 51734, 51734], "temperature": 0.0, "avg_logprob": -0.08720286387317586, "compression_ratio": 1.6736401673640167, "no_caption_prob": 1.5689078281866387e-05}, {"id": 479, "seek": 198058, "start": 1980.58, "end": 1985.02, "text": " and change global variables or, or that sort of thing.", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 480, "seek": 198058, "start": 1985.02, "end": 1990.98, "text": " So everything needs to be sort of injected rather than reached in and modified.", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 481, "seek": 198058, "start": 1990.98, "end": 1995.8999999999999, "text": " If it was a language like Ruby or JavaScript, a lot of these frameworks work by, you know,", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 482, "seek": 198058, "start": 1995.8999999999999, "end": 2001.06, "text": " monkey patching, you know, in Ruby you can like override existing classes and actually", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 483, "seek": 198058, "start": 2001.06, "end": 2003.02, "text": " reach in and modify them.", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 484, "seek": 198058, "start": 2003.02, "end": 2004.1599999999999, "text": " Elm doesn't work that way.", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 485, "seek": 198058, "start": 2004.1599999999999, "end": 2006.8999999999999, "text": " Monkey patching is not a thing in Elm language.", "tokens": [50364, 293, 1319, 4338, 9102, 420, 11, 420, 300, 1333, 295, 551, 13, 50586, 50586, 407, 1203, 2203, 281, 312, 1333, 295, 36967, 2831, 813, 6488, 294, 293, 15873, 13, 50884, 50884, 759, 309, 390, 257, 2856, 411, 19907, 420, 15778, 11, 257, 688, 295, 613, 29834, 589, 538, 11, 291, 458, 11, 51130, 51130, 17847, 9972, 278, 11, 291, 458, 11, 294, 19907, 291, 393, 411, 42321, 6741, 5359, 293, 767, 51388, 51388, 2524, 294, 293, 16927, 552, 13, 51486, 51486, 2699, 76, 1177, 380, 589, 300, 636, 13, 51543, 51543, 34862, 9972, 278, 307, 406, 257, 551, 294, 2699, 76, 2856, 13, 51680, 51680], "temperature": 0.0, "avg_logprob": -0.10787964758471907, "compression_ratio": 1.6788617886178863, "no_caption_prob": 8.664569577376824e-06}, {"id": 486, "seek": 200690, "start": 2006.9, "end": 2010.66, "text": " And so, but everything is pure functions.", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 487, "seek": 200690, "start": 2010.66, "end": 2016.8000000000002, "text": " And so the way that that works in, in Elm is you, you pass, you pass things in explicitly", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 488, "seek": 200690, "start": 2016.8000000000002, "end": 2020.46, "text": " and effects are actually just a type of data.", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 489, "seek": 200690, "start": 2020.46, "end": 2027.6200000000001, "text": " And so when you're simulating HTTP effects, what you do is you have this program test.", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 490, "seek": 200690, "start": 2027.6200000000001, "end": 2035.38, "text": " So an Elm, an Elm test case is just, it's just a single expectation ultimately under", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 491, "seek": 200690, "start": 2035.38, "end": 2036.38, "text": " the hood.", "tokens": [50364, 400, 370, 11, 457, 1203, 307, 6075, 6828, 13, 50552, 50552, 400, 370, 264, 636, 300, 300, 1985, 294, 11, 294, 2699, 76, 307, 291, 11, 291, 1320, 11, 291, 1320, 721, 294, 20803, 50859, 50859, 293, 5065, 366, 767, 445, 257, 2010, 295, 1412, 13, 51042, 51042, 400, 370, 562, 291, 434, 1034, 12162, 33283, 5065, 11, 437, 291, 360, 307, 291, 362, 341, 1461, 1500, 13, 51400, 51400, 407, 364, 2699, 76, 11, 364, 2699, 76, 1500, 1389, 307, 445, 11, 309, 311, 445, 257, 2167, 14334, 6284, 833, 51788, 51788, 264, 13376, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.100531587600708, "compression_ratio": 1.5955555555555556, "no_caption_prob": 1.64418979693437e-05}, {"id": 492, "seek": 203638, "start": 2036.38, "end": 2041.3400000000001, "text": " And you know, it's just this one expectation type and a program test sort of builds up", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 493, "seek": 203638, "start": 2041.3400000000001, "end": 2046.5, "text": " this program test and you sort of chain on a sequence of things.", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 494, "seek": 203638, "start": 2046.5, "end": 2051.26, "text": " So it's inherently a sort of imperative flow that you're describing.", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 495, "seek": 203638, "start": 2051.26, "end": 2055.58, "text": " The user goes in and does this and does this and does this, but you're actually building", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 496, "seek": 203638, "start": 2055.58, "end": 2060.02, "text": " up a single expectation that describes that sequence of events.", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 497, "seek": 203638, "start": 2060.02, "end": 2063.6600000000003, "text": " So it's a single pipeline and you can chain on.", "tokens": [50364, 400, 291, 458, 11, 309, 311, 445, 341, 472, 14334, 2010, 293, 257, 1461, 1500, 1333, 295, 15182, 493, 50612, 50612, 341, 1461, 1500, 293, 291, 1333, 295, 5021, 322, 257, 8310, 295, 721, 13, 50870, 50870, 407, 309, 311, 27993, 257, 1333, 295, 32490, 3095, 300, 291, 434, 16141, 13, 51108, 51108, 440, 4195, 1709, 294, 293, 775, 341, 293, 775, 341, 293, 775, 341, 11, 457, 291, 434, 767, 2390, 51324, 51324, 493, 257, 2167, 14334, 300, 15626, 300, 8310, 295, 3931, 13, 51546, 51546, 407, 309, 311, 257, 2167, 15517, 293, 291, 393, 5021, 322, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.06239810499172766, "compression_ratio": 1.9049773755656108, "no_caption_prob": 4.3998905312037095e-05}, {"id": 498, "seek": 206366, "start": 2063.66, "end": 2068.94, "text": " So you sort of initialize your program test and give it your update function, your view", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 499, "seek": 206366, "start": 2068.94, "end": 2074.8199999999997, "text": " function, your init function, all that it needs to sort of create its mini simulation", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 500, "seek": 206366, "start": 2074.8199999999997, "end": 2076.8599999999997, "text": " of the Elm runtime.", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 501, "seek": 206366, "start": 2076.8599999999997, "end": 2084.1, "text": " And then you can simulate HTTP requests and say you expect to get a particular HTTP request", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 502, "seek": 206366, "start": 2084.1, "end": 2086.66, "text": " and it's going to essentially mock that out.", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 503, "seek": 206366, "start": 2086.66, "end": 2087.66, "text": " Yeah.", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 504, "seek": 206366, "start": 2087.66, "end": 2091.7, "text": " Let me just like, as Elm programmers, we like to think about the data types.", "tokens": [50364, 407, 291, 1333, 295, 5883, 1125, 428, 1461, 1500, 293, 976, 309, 428, 5623, 2445, 11, 428, 1910, 50628, 50628, 2445, 11, 428, 3157, 2445, 11, 439, 300, 309, 2203, 281, 1333, 295, 1884, 1080, 8382, 16575, 50922, 50922, 295, 264, 2699, 76, 34474, 13, 51024, 51024, 400, 550, 291, 393, 27817, 33283, 12475, 293, 584, 291, 2066, 281, 483, 257, 1729, 33283, 5308, 51386, 51386, 293, 309, 311, 516, 281, 4476, 17362, 300, 484, 13, 51514, 51514, 865, 13, 51564, 51564, 961, 385, 445, 411, 11, 382, 2699, 76, 41504, 11, 321, 411, 281, 519, 466, 264, 1412, 3467, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.09089587075369698, "compression_ratio": 1.6926229508196722, "no_caption_prob": 5.6823510021786205e-06}, {"id": 505, "seek": 209170, "start": 2091.7, "end": 2096.4199999999996, "text": " So actually this program test type is pretty straightforward.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 506, "seek": 209170, "start": 2096.4199999999996, "end": 2098.9399999999996, "text": " You can think of it as a result.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 507, "seek": 209170, "start": 2098.9399999999996, "end": 2102.4199999999996, "text": " It's like either in an error state or in a success state.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 508, "seek": 209170, "start": 2102.4199999999996, "end": 2106.9399999999996, "text": " In the error state, there's kind of a whole different set of different kinds of errors.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 509, "seek": 209170, "start": 2106.9399999999996, "end": 2111.46, "text": " Like it's maybe we failed because we expected an HTTP request.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 510, "seek": 209170, "start": 2111.46, "end": 2114.1, "text": " Here's the function that you were trying to call.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 511, "seek": 209170, "start": 2114.1, "end": 2119.22, "text": " Here's this, here's the data of other requests that were in flight at the time.", "tokens": [50364, 407, 767, 341, 1461, 1500, 2010, 307, 1238, 15325, 13, 50600, 50600, 509, 393, 519, 295, 309, 382, 257, 1874, 13, 50726, 50726, 467, 311, 411, 2139, 294, 364, 6713, 1785, 420, 294, 257, 2245, 1785, 13, 50900, 50900, 682, 264, 6713, 1785, 11, 456, 311, 733, 295, 257, 1379, 819, 992, 295, 819, 3685, 295, 13603, 13, 51126, 51126, 1743, 309, 311, 1310, 321, 7612, 570, 321, 5176, 364, 33283, 5308, 13, 51352, 51352, 1692, 311, 264, 2445, 300, 291, 645, 1382, 281, 818, 13, 51484, 51484, 1692, 311, 341, 11, 510, 311, 264, 1412, 295, 661, 12475, 300, 645, 294, 7018, 412, 264, 565, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.090967118203103, "compression_ratio": 1.7114624505928853, "no_caption_prob": 1.0188027772528585e-06}, {"id": 512, "seek": 211922, "start": 2119.22, "end": 2121.7799999999997, "text": " Basically whatever's needed to produce a nice error message.", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 513, "seek": 211922, "start": 2121.7799999999997, "end": 2126.9599999999996, "text": " And in the success case, we've got the current model of your program.", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 514, "seek": 211922, "start": 2126.9599999999996, "end": 2132.7799999999997, "text": " And then we have some other state about the world of like what HTTP requests are in flight,", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 515, "seek": 211922, "start": 2132.7799999999997, "end": 2138.22, "text": " what delayed effects are you like scheduled in time?", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 516, "seek": 211922, "start": 2138.22, "end": 2139.66, "text": " What ports exist?", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 517, "seek": 211922, "start": 2139.66, "end": 2143.54, "text": " What outstanding like browser requests have been triggered?", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 518, "seek": 211922, "start": 2143.54, "end": 2146.74, "text": " So it's, it's really just a data structure like that.", "tokens": [50364, 8537, 2035, 311, 2978, 281, 5258, 257, 1481, 6713, 3636, 13, 50492, 50492, 400, 294, 264, 2245, 1389, 11, 321, 600, 658, 264, 2190, 2316, 295, 428, 1461, 13, 50751, 50751, 400, 550, 321, 362, 512, 661, 1785, 466, 264, 1002, 295, 411, 437, 33283, 12475, 366, 294, 7018, 11, 51042, 51042, 437, 20268, 5065, 366, 291, 411, 15678, 294, 565, 30, 51314, 51314, 708, 18160, 2514, 30, 51386, 51386, 708, 14485, 411, 11185, 12475, 362, 668, 21710, 30, 51580, 51580, 407, 309, 311, 11, 309, 311, 534, 445, 257, 1412, 3877, 411, 300, 13, 51740, 51740], "temperature": 0.0, "avg_logprob": -0.1330385882445056, "compression_ratio": 1.583657587548638, "no_caption_prob": 6.144105554994894e-06}, {"id": 519, "seek": 214674, "start": 2146.74, "end": 2150.9799999999996, "text": " And then the functions that you call like click button, all it does is it's going to", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 520, "seek": 214674, "start": 2150.9799999999996, "end": 2153.9799999999996, "text": " render the view based on the current state of the model.", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 521, "seek": 214674, "start": 2153.9799999999996, "end": 2158.14, "text": " Look for the button that you wanted to click, grab the message from that, call the update", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 522, "seek": 214674, "start": 2158.14, "end": 2159.14, "text": " function.", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 523, "seek": 214674, "start": 2159.14, "end": 2163.54, "text": " So I guess the update and view functions are also stored in program test.", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 524, "seek": 214674, "start": 2163.54, "end": 2167.3199999999997, "text": " But yeah, if you like a lot of it, you can kind of understand if you think about that", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 525, "seek": 214674, "start": 2167.3199999999997, "end": 2169.54, "text": " as the data structure of what's in there.", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 526, "seek": 214674, "start": 2169.54, "end": 2174.5, "text": " It's just a result with your program state, the functions for your program and information", "tokens": [50364, 400, 550, 264, 6828, 300, 291, 818, 411, 2052, 2960, 11, 439, 309, 775, 307, 309, 311, 516, 281, 50576, 50576, 15529, 264, 1910, 2361, 322, 264, 2190, 1785, 295, 264, 2316, 13, 50726, 50726, 2053, 337, 264, 2960, 300, 291, 1415, 281, 2052, 11, 4444, 264, 3636, 490, 300, 11, 818, 264, 5623, 50934, 50934, 2445, 13, 50984, 50984, 407, 286, 2041, 264, 5623, 293, 1910, 6828, 366, 611, 12187, 294, 1461, 1500, 13, 51204, 51204, 583, 1338, 11, 498, 291, 411, 257, 688, 295, 309, 11, 291, 393, 733, 295, 1223, 498, 291, 519, 466, 300, 51393, 51393, 382, 264, 1412, 3877, 295, 437, 311, 294, 456, 13, 51504, 51504, 467, 311, 445, 257, 1874, 365, 428, 1461, 1785, 11, 264, 6828, 337, 428, 1461, 293, 1589, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.10227947665336437, "compression_ratio": 1.8413793103448275, "no_caption_prob": 4.710826488008024e-06}, {"id": 527, "seek": 217450, "start": 2174.5, "end": 2177.66, "text": " about external effects that are in flight.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 528, "seek": 217450, "start": 2177.66, "end": 2178.66, "text": " Right.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 529, "seek": 217450, "start": 2178.66, "end": 2183.58, "text": " And there's a, there's one convention that maybe is like a little tidbit that might be", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 530, "seek": 217450, "start": 2183.58, "end": 2185.6, "text": " helpful to talk about for people.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 531, "seek": 217450, "start": 2185.6, "end": 2191.52, "text": " There's a convention of like these insure function calls and expect function calls.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 532, "seek": 217450, "start": 2191.52, "end": 2195.52, "text": " So you can insure that an HTTP request was made.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 533, "seek": 217450, "start": 2195.52, "end": 2201.62, "text": " So there's program test dot insure HTTP request, and then there's program test dot expect HTTP", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 534, "seek": 217450, "start": 2201.62, "end": 2202.66, "text": " request.", "tokens": [50364, 466, 8320, 5065, 300, 366, 294, 7018, 13, 50522, 50522, 1779, 13, 50572, 50572, 400, 456, 311, 257, 11, 456, 311, 472, 10286, 300, 1310, 307, 411, 257, 707, 9422, 5260, 300, 1062, 312, 50818, 50818, 4961, 281, 751, 466, 337, 561, 13, 50919, 50919, 821, 311, 257, 10286, 295, 411, 613, 1028, 540, 2445, 5498, 293, 2066, 2445, 5498, 13, 51215, 51215, 407, 291, 393, 1028, 540, 300, 364, 33283, 5308, 390, 1027, 13, 51415, 51415, 407, 456, 311, 1461, 1500, 5893, 1028, 540, 33283, 5308, 11, 293, 550, 456, 311, 1461, 1500, 5893, 2066, 33283, 51720, 51720, 5308, 13, 51772, 51772], "temperature": 0.0, "avg_logprob": -0.13376707349504743, "compression_ratio": 1.8842592592592593, "no_caption_prob": 2.3687907741987146e-06}, {"id": 535, "seek": 220266, "start": 2202.66, "end": 2204.5, "text": " You want to talk about that distinction?", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 536, "seek": 220266, "start": 2204.5, "end": 2210.3799999999997, "text": " This is one of the rough edges with the API here, because there's a school of testing", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 537, "seek": 220266, "start": 2210.3799999999997, "end": 2215.54, "text": " thought where you should have one expectation per test, and that should be the end of your", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 538, "seek": 220266, "start": 2215.54, "end": 2216.54, "text": " test.", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 539, "seek": 220266, "start": 2216.54, "end": 2221.8199999999997, "text": " So those are the primary functions here, the functions that take your program test value", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 540, "seek": 220266, "start": 2221.8199999999997, "end": 2225.2599999999998, "text": " and return an expectation that basically ends your test.", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 541, "seek": 220266, "start": 2225.2599999999998, "end": 2229.66, "text": " However, when you're writing these high level things, a lot of times you want these intermediate", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 542, "seek": 220266, "start": 2229.66, "end": 2230.66, "text": " assertions.", "tokens": [50364, 509, 528, 281, 751, 466, 300, 16844, 30, 50456, 50456, 639, 307, 472, 295, 264, 5903, 8819, 365, 264, 9362, 510, 11, 570, 456, 311, 257, 1395, 295, 4997, 50750, 50750, 1194, 689, 291, 820, 362, 472, 14334, 680, 1500, 11, 293, 300, 820, 312, 264, 917, 295, 428, 51008, 51008, 1500, 13, 51058, 51058, 407, 729, 366, 264, 6194, 6828, 510, 11, 264, 6828, 300, 747, 428, 1461, 1500, 2158, 51322, 51322, 293, 2736, 364, 14334, 300, 1936, 5314, 428, 1500, 13, 51494, 51494, 2908, 11, 562, 291, 434, 3579, 613, 1090, 1496, 721, 11, 257, 688, 295, 1413, 291, 528, 613, 19376, 51714, 51714, 19810, 626, 13, 51764, 51764], "temperature": 0.0, "avg_logprob": -0.09779414455447577, "compression_ratio": 1.750915750915751, "no_caption_prob": 1.0783036486827768e-05}, {"id": 543, "seek": 223066, "start": 2230.66, "end": 2234.18, "text": " Like, oh, your first step in your test is to have the user log in.", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 544, "seek": 223066, "start": 2234.18, "end": 2238.74, "text": " Well, maybe you're not on a page that has the login form, so you need to fail there", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 545, "seek": 223066, "start": 2238.74, "end": 2240.7799999999997, "text": " with an error message.", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 546, "seek": 223066, "start": 2240.7799999999997, "end": 2246.5, "text": " So there's basically a copy of all the expect functions have an insure function that basically", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 547, "seek": 223066, "start": 2246.5, "end": 2252.7, "text": " does the same thing, but it returns a program test so that you can do an intermediate assertion,", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 548, "seek": 223066, "start": 2252.7, "end": 2256.1, "text": " continue your test and get to the end.", "tokens": [50364, 1743, 11, 1954, 11, 428, 700, 1823, 294, 428, 1500, 307, 281, 362, 264, 4195, 3565, 294, 13, 50540, 50540, 1042, 11, 1310, 291, 434, 406, 322, 257, 3028, 300, 575, 264, 24276, 1254, 11, 370, 291, 643, 281, 3061, 456, 50768, 50768, 365, 364, 6713, 3636, 13, 50870, 50870, 407, 456, 311, 1936, 257, 5055, 295, 439, 264, 2066, 6828, 362, 364, 1028, 540, 2445, 300, 1936, 51156, 51156, 775, 264, 912, 551, 11, 457, 309, 11247, 257, 1461, 1500, 370, 300, 291, 393, 360, 364, 19376, 19810, 313, 11, 51466, 51466, 2354, 428, 1500, 293, 483, 281, 264, 917, 13, 51636, 51636], "temperature": 0.0, "avg_logprob": -0.11740635925868773, "compression_ratio": 1.6903765690376569, "no_caption_prob": 8.013304977794178e-06}, {"id": 549, "seek": 225610, "start": 2256.1, "end": 2261.14, "text": " I wish there was a way to unify those into a single check, but I haven't come up with", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 550, "seek": 225610, "start": 2261.14, "end": 2264.3399999999997, "text": " a good API design approach to do that.", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 551, "seek": 225610, "start": 2264.3399999999997, "end": 2270.3399999999997, "text": " It almost seems like it could be like a builder pattern where you just only have either, you", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 552, "seek": 225610, "start": 2270.3399999999997, "end": 2276.02, "text": " know, pick a keyword, insure or expect, but only have the current behavior of insure,", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 553, "seek": 225610, "start": 2276.02, "end": 2278.9, "text": " which means that you can keep chaining things on.", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 554, "seek": 225610, "start": 2278.9, "end": 2285.1, "text": " And then at the end, you say to expectation, and that takes the whole test scenario and", "tokens": [50364, 286, 3172, 456, 390, 257, 636, 281, 517, 2505, 729, 666, 257, 2167, 1520, 11, 457, 286, 2378, 380, 808, 493, 365, 50616, 50616, 257, 665, 9362, 1715, 3109, 281, 360, 300, 13, 50776, 50776, 467, 1920, 2544, 411, 309, 727, 312, 411, 257, 27377, 5102, 689, 291, 445, 787, 362, 2139, 11, 291, 51076, 51076, 458, 11, 1888, 257, 20428, 11, 1028, 540, 420, 2066, 11, 457, 787, 362, 264, 2190, 5223, 295, 1028, 540, 11, 51360, 51360, 597, 1355, 300, 291, 393, 1066, 417, 3686, 721, 322, 13, 51504, 51504, 400, 550, 412, 264, 917, 11, 291, 584, 281, 14334, 11, 293, 300, 2516, 264, 1379, 1500, 9005, 293, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.08883508599322776, "compression_ratio": 1.651685393258427, "no_caption_prob": 3.1875135846348712e-06}, {"id": 555, "seek": 228510, "start": 2285.1, "end": 2290.66, "text": " turns it into a single expectation, which is the same as currently what expect HTTP", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 556, "seek": 228510, "start": 2290.66, "end": 2292.18, "text": " request does versus insure.", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 557, "seek": 228510, "start": 2292.18, "end": 2293.18, "text": " Yeah.", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 558, "seek": 228510, "start": 2293.18, "end": 2295.58, "text": " So you can write your tests in that way.", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 559, "seek": 228510, "start": 2295.58, "end": 2300.7, "text": " There's a program test.done, which is the final step.", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 560, "seek": 228510, "start": 2300.7, "end": 2306.54, "text": " But I didn't want that to be the recommended approach because I think the thought of like", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 561, "seek": 228510, "start": 2306.54, "end": 2312.98, "text": " having a single expectation is, in my opinion, the preferred way to think about your tests.", "tokens": [50364, 4523, 309, 666, 257, 2167, 14334, 11, 597, 307, 264, 912, 382, 4362, 437, 2066, 33283, 50642, 50642, 5308, 775, 5717, 1028, 540, 13, 50718, 50718, 865, 13, 50768, 50768, 407, 291, 393, 2464, 428, 6921, 294, 300, 636, 13, 50888, 50888, 821, 311, 257, 1461, 1500, 13, 45939, 11, 597, 307, 264, 2572, 1823, 13, 51144, 51144, 583, 286, 994, 380, 528, 300, 281, 312, 264, 9628, 3109, 570, 286, 519, 264, 1194, 295, 411, 51436, 51436, 1419, 257, 2167, 14334, 307, 11, 294, 452, 4800, 11, 264, 16494, 636, 281, 519, 466, 428, 6921, 13, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.1562403405066764, "compression_ratio": 1.6213991769547325, "no_caption_prob": 7.183205070759868e-06}, {"id": 562, "seek": 231298, "start": 2312.98, "end": 2318.72, "text": " So I didn't want to like make that recommended way be the second class citizen in terms of", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 563, "seek": 231298, "start": 2318.72, "end": 2320.3, "text": " how the API was designed.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 564, "seek": 231298, "start": 2320.3, "end": 2321.3, "text": " Gotcha.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 565, "seek": 231298, "start": 2321.3, "end": 2324.2400000000002, "text": " But then, so like if you wanted to, oh, okay.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 566, "seek": 231298, "start": 2324.2400000000002, "end": 2326.98, "text": " So there are also like simulate forms.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 567, "seek": 231298, "start": 2326.98, "end": 2327.98, "text": " Okay.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 568, "seek": 231298, "start": 2327.98, "end": 2334.34, "text": " So, so there's like insure HTTP request and that's sort of making an expectation and continuing", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 569, "seek": 231298, "start": 2334.34, "end": 2336.66, "text": " on kind of what you're recommending against.", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 570, "seek": 231298, "start": 2336.66, "end": 2342.06, "text": " You're saying maybe this is a smell and if you have too many insurers, maybe think about", "tokens": [50364, 407, 286, 994, 380, 528, 281, 411, 652, 300, 9628, 636, 312, 264, 1150, 1508, 13326, 294, 2115, 295, 50651, 50651, 577, 264, 9362, 390, 4761, 13, 50730, 50730, 42109, 13, 50780, 50780, 583, 550, 11, 370, 411, 498, 291, 1415, 281, 11, 1954, 11, 1392, 13, 50927, 50927, 407, 456, 366, 611, 411, 27817, 6422, 13, 51064, 51064, 1033, 13, 51114, 51114, 407, 11, 370, 456, 311, 411, 1028, 540, 33283, 5308, 293, 300, 311, 1333, 295, 1455, 364, 14334, 293, 9289, 51432, 51432, 322, 733, 295, 437, 291, 434, 30559, 1970, 13, 51548, 51548, 509, 434, 1566, 1310, 341, 307, 257, 4316, 293, 498, 291, 362, 886, 867, 1028, 14198, 11, 1310, 519, 466, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15343324343363443, "compression_ratio": 1.6604477611940298, "no_caption_prob": 1.1726366437869729e-06}, {"id": 571, "seek": 234206, "start": 2342.06, "end": 2344.2999999999997, "text": " the way you're splitting up your test cases.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 572, "seek": 234206, "start": 2344.2999999999997, "end": 2346.18, "text": " If you're inserting too much.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 573, "seek": 234206, "start": 2346.18, "end": 2351.38, "text": " Yeah, I'm kind of on the fence about that because I think like we were saying earlier,", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 574, "seek": 234206, "start": 2351.38, "end": 2355.2999999999997, "text": " you don't want a ton of these high level tests to check every edge case.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 575, "seek": 234206, "start": 2355.2999999999997, "end": 2359.18, "text": " You kind of want to go through your happy path, which is going to do a lot of things.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 576, "seek": 234206, "start": 2359.18, "end": 2364.14, "text": " So you tend to want to assert things along the way.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 577, "seek": 234206, "start": 2364.14, "end": 2368.46, "text": " Having intermediate assertions also helps you with debugging when something goes wrong.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 578, "seek": 234206, "start": 2368.46, "end": 2370.82, "text": " You can kind of tell what step failed.", "tokens": [50364, 264, 636, 291, 434, 30348, 493, 428, 1500, 3331, 13, 50476, 50476, 759, 291, 434, 46567, 886, 709, 13, 50570, 50570, 865, 11, 286, 478, 733, 295, 322, 264, 15422, 466, 300, 570, 286, 519, 411, 321, 645, 1566, 3071, 11, 50830, 50830, 291, 500, 380, 528, 257, 2952, 295, 613, 1090, 1496, 6921, 281, 1520, 633, 4691, 1389, 13, 51026, 51026, 509, 733, 295, 528, 281, 352, 807, 428, 2055, 3100, 11, 597, 307, 516, 281, 360, 257, 688, 295, 721, 13, 51220, 51220, 407, 291, 3928, 281, 528, 281, 19810, 721, 2051, 264, 636, 13, 51468, 51468, 10222, 19376, 19810, 626, 611, 3665, 291, 365, 45592, 562, 746, 1709, 2085, 13, 51684, 51684, 509, 393, 733, 295, 980, 437, 1823, 7612, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.1037469431757927, "compression_ratio": 1.7206896551724138, "no_caption_prob": 2.7264550226391293e-06}, {"id": 579, "seek": 237082, "start": 2370.82, "end": 2376.5800000000004, "text": " So yeah, that's something I wish I had a better answer for that.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 580, "seek": 237082, "start": 2376.5800000000004, "end": 2381.06, "text": " But unfortunately you kind of learn that thing that's specific to on program tests.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 581, "seek": 237082, "start": 2381.06, "end": 2385.9, "text": " If you have expect and insure, they're basically the same thing that you use throughout your", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 582, "seek": 237082, "start": 2385.9, "end": 2386.9, "text": " tests.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 583, "seek": 237082, "start": 2386.9, "end": 2387.9, "text": " Yeah.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 584, "seek": 237082, "start": 2387.9, "end": 2392.02, "text": " I mean, in a way there are implicit expectations in certain things.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 585, "seek": 237082, "start": 2392.02, "end": 2397.5800000000004, "text": " If you say click button with text, then you're asserting that there's a button with that", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 586, "seek": 237082, "start": 2397.5800000000004, "end": 2399.1000000000004, "text": " text and it will fail, right?", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 587, "seek": 237082, "start": 2399.1000000000004, "end": 2400.1000000000004, "text": " Yes, exactly.", "tokens": [50364, 407, 1338, 11, 300, 311, 746, 286, 3172, 286, 632, 257, 1101, 1867, 337, 300, 13, 50652, 50652, 583, 7015, 291, 733, 295, 1466, 300, 551, 300, 311, 2685, 281, 322, 1461, 6921, 13, 50876, 50876, 759, 291, 362, 2066, 293, 1028, 540, 11, 436, 434, 1936, 264, 912, 551, 300, 291, 764, 3710, 428, 51118, 51118, 6921, 13, 51168, 51168, 865, 13, 51218, 51218, 286, 914, 11, 294, 257, 636, 456, 366, 26947, 9843, 294, 1629, 721, 13, 51424, 51424, 759, 291, 584, 2052, 2960, 365, 2487, 11, 550, 291, 434, 1256, 27187, 300, 456, 311, 257, 2960, 365, 300, 51702, 51702, 2487, 293, 309, 486, 3061, 11, 558, 30, 51778, 51778, 1079, 11, 2293, 13, 51828, 51828], "temperature": 0.0, "avg_logprob": -0.16711104211728434, "compression_ratio": 1.7169811320754718, "no_caption_prob": 2.058040536212502e-06}, {"id": 588, "seek": 240010, "start": 2400.1, "end": 2402.94, "text": " You don't have to say expect.", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 589, "seek": 240010, "start": 2402.94, "end": 2407.7799999999997, "text": " So that in your book wouldn't count as like too many assertions in the test.", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 590, "seek": 240010, "start": 2407.7799999999997, "end": 2408.7799999999997, "text": " It's just...", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 591, "seek": 240010, "start": 2408.7799999999997, "end": 2414.22, "text": " In fact, yeah, those are things where on program tests is helping you get a nicer error message", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 592, "seek": 240010, "start": 2414.22, "end": 2415.7, "text": " when something goes wrong.", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 593, "seek": 240010, "start": 2415.7, "end": 2421.2999999999997, "text": " So actually like I think you could probably realistically use a rule saying that your", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 594, "seek": 240010, "start": 2421.2999999999997, "end": 2424.7799999999997, "text": " normal tests should never use the insure functions.", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 595, "seek": 240010, "start": 2424.7799999999997, "end": 2429.48, "text": " But if you're writing application specific helper functions for your tests, like you're", "tokens": [50364, 509, 500, 380, 362, 281, 584, 2066, 13, 50506, 50506, 407, 300, 294, 428, 1446, 2759, 380, 1207, 382, 411, 886, 867, 19810, 626, 294, 264, 1500, 13, 50748, 50748, 467, 311, 445, 485, 50798, 50798, 682, 1186, 11, 1338, 11, 729, 366, 721, 689, 322, 1461, 6921, 307, 4315, 291, 483, 257, 22842, 6713, 3636, 51070, 51070, 562, 746, 1709, 2085, 13, 51144, 51144, 407, 767, 411, 286, 519, 291, 727, 1391, 40734, 764, 257, 4978, 1566, 300, 428, 51424, 51424, 2710, 6921, 820, 1128, 764, 264, 1028, 540, 6828, 13, 51598, 51598, 583, 498, 291, 434, 3579, 3861, 2685, 36133, 6828, 337, 428, 6921, 11, 411, 291, 434, 51833, 51833], "temperature": 0.0, "avg_logprob": -0.14710535082900733, "compression_ratio": 1.6774193548387097, "no_caption_prob": 1.723134300846141e-05}, {"id": 596, "seek": 242948, "start": 2429.48, "end": 2434.82, "text": " writing a helper function that's like to the login form, you can use insure functions in", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 597, "seek": 242948, "start": 2434.82, "end": 2439.5, "text": " that helper function, but then your actual test will just call that login thing.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 598, "seek": 242948, "start": 2439.5, "end": 2443.98, "text": " It's essentially a higher level version of the click button type helper.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 599, "seek": 242948, "start": 2443.98, "end": 2448.18, "text": " And then your actual test only has expect at the end.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 600, "seek": 242948, "start": 2448.18, "end": 2449.18, "text": " That's very cool.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 601, "seek": 242948, "start": 2449.18, "end": 2451.62, "text": " Tell me if you want to work on that rule with me.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 602, "seek": 242948, "start": 2451.62, "end": 2452.62, "text": " Yeah.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 603, "seek": 242948, "start": 2452.62, "end": 2454.48, "text": " Because I could be on review rule.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 604, "seek": 242948, "start": 2454.48, "end": 2455.48, "text": " That sounds great.", "tokens": [50364, 3579, 257, 36133, 2445, 300, 311, 411, 281, 264, 24276, 1254, 11, 291, 393, 764, 1028, 540, 6828, 294, 50631, 50631, 300, 36133, 2445, 11, 457, 550, 428, 3539, 1500, 486, 445, 818, 300, 24276, 551, 13, 50865, 50865, 467, 311, 4476, 257, 2946, 1496, 3037, 295, 264, 2052, 2960, 2010, 36133, 13, 51089, 51089, 400, 550, 428, 3539, 1500, 787, 575, 2066, 412, 264, 917, 13, 51299, 51299, 663, 311, 588, 1627, 13, 51349, 51349, 5115, 385, 498, 291, 528, 281, 589, 322, 300, 4978, 365, 385, 13, 51471, 51471, 865, 13, 51521, 51521, 1436, 286, 727, 312, 322, 3131, 4978, 13, 51614, 51614, 663, 3263, 869, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.18860916542795908, "compression_ratio": 1.7028112449799198, "no_caption_prob": 2.392317219346296e-05}, {"id": 605, "seek": 245548, "start": 2455.48, "end": 2461.9, "text": " Yeah, so just to reiterate what you're saying here, like when you say click text and we're", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 606, "seek": 245548, "start": 2461.9, "end": 2467.04, "text": " saying there's an inherent expectation and clicking the text because you're asserting", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 607, "seek": 245548, "start": 2467.04, "end": 2472.02, "text": " that that text exists on the page, that you're saying that you could use, if that didn't", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 608, "seek": 245548, "start": 2472.02, "end": 2476.96, "text": " exist as a building block, you could create that your own building block like that where", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 609, "seek": 245548, "start": 2476.96, "end": 2478.84, "text": " you say log user in.", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 610, "seek": 245548, "start": 2478.84, "end": 2483.98, "text": " And if there's no login button, you could create the validation that that exists in", "tokens": [50364, 865, 11, 370, 445, 281, 33528, 437, 291, 434, 1566, 510, 11, 411, 562, 291, 584, 2052, 2487, 293, 321, 434, 50685, 50685, 1566, 456, 311, 364, 26387, 14334, 293, 9697, 264, 2487, 570, 291, 434, 1256, 27187, 50942, 50942, 300, 300, 2487, 8198, 322, 264, 3028, 11, 300, 291, 434, 1566, 300, 291, 727, 764, 11, 498, 300, 994, 380, 51191, 51191, 2514, 382, 257, 2390, 3461, 11, 291, 727, 1884, 300, 428, 1065, 2390, 3461, 411, 300, 689, 51438, 51438, 291, 584, 3565, 4195, 294, 13, 51532, 51532, 400, 498, 456, 311, 572, 24276, 2960, 11, 291, 727, 1884, 264, 24071, 300, 300, 8198, 294, 51789, 51789], "temperature": 0.0, "avg_logprob": -0.11618734480024458, "compression_ratio": 2.0220264317180616, "no_caption_prob": 8.34925303934142e-05}, {"id": 611, "seek": 248398, "start": 2483.98, "end": 2486.82, "text": " your own helpers and use insure in that context.", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 612, "seek": 248398, "start": 2486.82, "end": 2488.22, "text": " Yep, exactly.", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 613, "seek": 248398, "start": 2488.22, "end": 2495.7400000000002, "text": " And for instance, the the API of own program test actually enforces certain best practices", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 614, "seek": 248398, "start": 2495.7400000000002, "end": 2501.34, "text": " like it has a click button function that you can call, but it can only click things that", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 615, "seek": 248398, "start": 2501.34, "end": 2506.88, "text": " are actually buttons or that are divs that have accessibility attributes that indicate", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 616, "seek": 248398, "start": 2506.88, "end": 2508.14, "text": " their buttons.", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 617, "seek": 248398, "start": 2508.14, "end": 2513.68, "text": " So if for whatever reason, your program is just a bunch of divs with on click handlers,", "tokens": [50364, 428, 1065, 854, 433, 293, 764, 1028, 540, 294, 300, 4319, 13, 50506, 50506, 7010, 11, 2293, 13, 50576, 50576, 400, 337, 5197, 11, 264, 264, 9362, 295, 1065, 1461, 1500, 767, 25495, 887, 1629, 1151, 7525, 50952, 50952, 411, 309, 575, 257, 2052, 2960, 2445, 300, 291, 393, 818, 11, 457, 309, 393, 787, 2052, 721, 300, 51232, 51232, 366, 767, 9905, 420, 300, 366, 3414, 82, 300, 362, 15002, 17212, 300, 13330, 51509, 51509, 641, 9905, 13, 51572, 51572, 407, 498, 337, 2035, 1778, 11, 428, 1461, 307, 445, 257, 3840, 295, 3414, 82, 365, 322, 2052, 1011, 11977, 11, 51849, 51849], "temperature": 0.0, "avg_logprob": -0.13425621896419884, "compression_ratio": 1.6941176470588235, "no_caption_prob": 4.936947789246915e-06}, {"id": 618, "seek": 251368, "start": 2513.68, "end": 2518.8599999999997, "text": " the built in click button function in on program test is not going to work.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 619, "seek": 251368, "start": 2518.8599999999997, "end": 2521.96, "text": " I could make it work, but I've chosen not to.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 620, "seek": 251368, "start": 2521.96, "end": 2527.68, "text": " But you can always write your own helper function that uses the like, find DOM element and do", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 621, "seek": 251368, "start": 2527.68, "end": 2533.18, "text": " this with it to kind of build your own helper functions that are needed to do whatever you", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 622, "seek": 251368, "start": 2533.18, "end": 2534.8599999999997, "text": " want that your app needs.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 623, "seek": 251368, "start": 2534.8599999999997, "end": 2536.98, "text": " Yeah, that's an amazing feature.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 624, "seek": 251368, "start": 2536.98, "end": 2540.54, "text": " So I guess we should maybe talk about some more of the rough edges.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 625, "seek": 251368, "start": 2540.54, "end": 2541.54, "text": " Sure.", "tokens": [50364, 264, 3094, 294, 2052, 2960, 2445, 294, 322, 1461, 1500, 307, 406, 516, 281, 589, 13, 50623, 50623, 286, 727, 652, 309, 589, 11, 457, 286, 600, 8614, 406, 281, 13, 50778, 50778, 583, 291, 393, 1009, 2464, 428, 1065, 36133, 2445, 300, 4960, 264, 411, 11, 915, 35727, 4478, 293, 360, 51064, 51064, 341, 365, 309, 281, 733, 295, 1322, 428, 1065, 36133, 6828, 300, 366, 2978, 281, 360, 2035, 291, 51339, 51339, 528, 300, 428, 724, 2203, 13, 51423, 51423, 865, 11, 300, 311, 364, 2243, 4111, 13, 51529, 51529, 407, 286, 2041, 321, 820, 1310, 751, 466, 512, 544, 295, 264, 5903, 8819, 13, 51707, 51707, 4894, 13, 51757, 51757], "temperature": 0.0, "avg_logprob": -0.17123824409816576, "compression_ratio": 1.6441947565543071, "no_caption_prob": 2.5612700937927e-06}, {"id": 626, "seek": 254154, "start": 2541.54, "end": 2546.42, "text": " So program test, I think the big one, which is kind of the most unfortunately, the most", "tokens": [50364, 407, 1461, 1500, 11, 286, 519, 264, 955, 472, 11, 597, 307, 733, 295, 264, 881, 7015, 11, 264, 881, 50608, 50608, 6179, 551, 307, 498, 291, 434, 498, 291, 434, 4997, 257, 1461, 689, 291, 528, 281, 1500, 613, 8320, 50924, 50924, 5065, 293, 27817, 33283, 13019, 11, 420, 27817, 18017, 365, 428, 15778, 18160, 11, 721, 51322, 51322, 411, 300, 11, 456, 311, 257, 27432, 294, 294, 2699, 76, 412, 264, 1623, 689, 456, 311, 613, 1412, 3467, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.14173974309648787, "compression_ratio": 1.6383928571428572, "no_caption_prob": 2.078452416753862e-05}, {"id": 627, "seek": 254154, "start": 2546.42, "end": 2552.74, "text": " complicated thing is if you're if you're testing a program where you want to test these external", "tokens": [50364, 407, 1461, 1500, 11, 286, 519, 264, 955, 472, 11, 597, 307, 733, 295, 264, 881, 7015, 11, 264, 881, 50608, 50608, 6179, 551, 307, 498, 291, 434, 498, 291, 434, 4997, 257, 1461, 689, 291, 528, 281, 1500, 613, 8320, 50924, 50924, 5065, 293, 27817, 33283, 13019, 11, 420, 27817, 18017, 365, 428, 15778, 18160, 11, 721, 51322, 51322, 411, 300, 11, 456, 311, 257, 27432, 294, 294, 2699, 76, 412, 264, 1623, 689, 456, 311, 613, 1412, 3467, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.14173974309648787, "compression_ratio": 1.6383928571428572, "no_caption_prob": 2.078452416753862e-05}, {"id": 628, "seek": 254154, "start": 2552.74, "end": 2560.7, "text": " effects and simulate HTTP responses, or simulate interacting with your JavaScript ports, things", "tokens": [50364, 407, 1461, 1500, 11, 286, 519, 264, 955, 472, 11, 597, 307, 733, 295, 264, 881, 7015, 11, 264, 881, 50608, 50608, 6179, 551, 307, 498, 291, 434, 498, 291, 434, 4997, 257, 1461, 689, 291, 528, 281, 1500, 613, 8320, 50924, 50924, 5065, 293, 27817, 33283, 13019, 11, 420, 27817, 18017, 365, 428, 15778, 18160, 11, 721, 51322, 51322, 411, 300, 11, 456, 311, 257, 27432, 294, 294, 2699, 76, 412, 264, 1623, 689, 456, 311, 613, 1412, 3467, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.14173974309648787, "compression_ratio": 1.6383928571428572, "no_caption_prob": 2.078452416753862e-05}, {"id": 629, "seek": 254154, "start": 2560.7, "end": 2565.94, "text": " like that, there's a limitation in in Elm at the moment where there's these data types", "tokens": [50364, 407, 1461, 1500, 11, 286, 519, 264, 955, 472, 11, 597, 307, 733, 295, 264, 881, 7015, 11, 264, 881, 50608, 50608, 6179, 551, 307, 498, 291, 434, 498, 291, 434, 4997, 257, 1461, 689, 291, 528, 281, 1500, 613, 8320, 50924, 50924, 5065, 293, 27817, 33283, 13019, 11, 420, 27817, 18017, 365, 428, 15778, 18160, 11, 721, 51322, 51322, 411, 300, 11, 456, 311, 257, 27432, 294, 294, 2699, 76, 412, 264, 1623, 689, 456, 311, 613, 1412, 3467, 51584, 51584], "temperature": 0.0, "avg_logprob": -0.14173974309648787, "compression_ratio": 1.6383928571428572, "no_caption_prob": 2.078452416753862e-05}, {"id": 630, "seek": 256594, "start": 2565.94, "end": 2572.34, "text": " command and subscription, or sub that in theory, like, theoretically, those things just are", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 631, "seek": 256594, "start": 2572.34, "end": 2576.86, "text": " a piece of data that represents some effect that the on runtime is going to perform on", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 632, "seek": 256594, "start": 2576.86, "end": 2577.96, "text": " your behalf.", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 633, "seek": 256594, "start": 2577.96, "end": 2583.98, "text": " So in on program test, I need to take a command that your program produces and know was there", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 634, "seek": 256594, "start": 2583.98, "end": 2589.14, "text": " an HTTP request made in that command and all the various different commands.", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 635, "seek": 256594, "start": 2589.14, "end": 2592.9, "text": " So unfortunately, that's not possible in Elm at the moment.", "tokens": [50364, 5622, 293, 17231, 11, 420, 1422, 300, 294, 5261, 11, 411, 11, 29400, 11, 729, 721, 445, 366, 50684, 50684, 257, 2522, 295, 1412, 300, 8855, 512, 1802, 300, 264, 322, 34474, 307, 516, 281, 2042, 322, 50910, 50910, 428, 9490, 13, 50965, 50965, 407, 294, 322, 1461, 1500, 11, 286, 643, 281, 747, 257, 5622, 300, 428, 1461, 14725, 293, 458, 390, 456, 51266, 51266, 364, 33283, 5308, 1027, 294, 300, 5622, 293, 439, 264, 3683, 819, 16901, 13, 51524, 51524, 407, 7015, 11, 300, 311, 406, 1944, 294, 2699, 76, 412, 264, 1623, 13, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.11595621109008789, "compression_ratio": 1.6549019607843136, "no_caption_prob": 6.204679812071845e-05}, {"id": 636, "seek": 259290, "start": 2592.9, "end": 2597.7000000000003, "text": " So well, okay, so I know that Evan has had a concern.", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 637, "seek": 259290, "start": 2597.7000000000003, "end": 2605.1, "text": " And this is a similar reason to why the HTML type is not directly inspectable or destructurable", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 638, "seek": 259290, "start": 2605.1, "end": 2610.98, "text": " is that Evan's been conservative about allowing for those kinds of destructurings in an attempt", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 639, "seek": 259290, "start": 2610.98, "end": 2618.1800000000003, "text": " to prevent packages getting published that do extremely complicated or like not explicit", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 640, "seek": 259290, "start": 2618.1800000000003, "end": 2619.1800000000003, "text": " things.", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 641, "seek": 259290, "start": 2619.1800000000003, "end": 2621.48, "text": " So I think it's about the explicit as of Elm.", "tokens": [50364, 407, 731, 11, 1392, 11, 370, 286, 458, 300, 22613, 575, 632, 257, 3136, 13, 50604, 50604, 400, 341, 307, 257, 2531, 1778, 281, 983, 264, 17995, 2010, 307, 406, 3838, 15018, 712, 420, 2677, 1757, 25863, 50974, 50974, 307, 300, 22613, 311, 668, 13780, 466, 8293, 337, 729, 3685, 295, 2677, 1757, 374, 1109, 294, 364, 5217, 51268, 51268, 281, 4871, 17401, 1242, 6572, 300, 360, 4664, 6179, 420, 411, 406, 13691, 51628, 51628, 721, 13, 51678, 51678, 407, 286, 519, 309, 311, 466, 264, 13691, 382, 295, 2699, 76, 13, 51793, 51793], "temperature": 0.0, "avg_logprob": -0.11273673176765442, "compression_ratio": 1.5582329317269077, "no_caption_prob": 7.253418152686208e-05}, {"id": 642, "seek": 262148, "start": 2621.48, "end": 2626.1, "text": " So there's no internal technical reason they couldn't be inspectable.", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 643, "seek": 262148, "start": 2626.1, "end": 2630.14, "text": " And I think it's something that like, it's not even a decision that they should never", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 644, "seek": 262148, "start": 2630.14, "end": 2631.22, "text": " be inspectable.", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 645, "seek": 262148, "start": 2631.22, "end": 2636.94, "text": " But it's that in production code, I think specifically, Evan has wanted to avoid allowing", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 646, "seek": 262148, "start": 2636.94, "end": 2642.02, "text": " the use of packages that can like take a command and transform it into some other command,", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 647, "seek": 262148, "start": 2642.02, "end": 2646.72, "text": " which could allow for things like oh, sending all of your HTTP requests, if you're using", "tokens": [50364, 407, 456, 311, 572, 6920, 6191, 1778, 436, 2809, 380, 312, 15018, 712, 13, 50595, 50595, 400, 286, 519, 309, 311, 746, 300, 411, 11, 309, 311, 406, 754, 257, 3537, 300, 436, 820, 1128, 50797, 50797, 312, 15018, 712, 13, 50851, 50851, 583, 309, 311, 300, 294, 4265, 3089, 11, 286, 519, 4682, 11, 22613, 575, 1415, 281, 5042, 8293, 51137, 51137, 264, 764, 295, 17401, 300, 393, 411, 747, 257, 5622, 293, 4088, 309, 666, 512, 661, 5622, 11, 51391, 51391, 597, 727, 2089, 337, 721, 411, 1954, 11, 7750, 439, 295, 428, 33283, 12475, 11, 498, 291, 434, 1228, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.09727843302600789, "compression_ratio": 1.6768060836501901, "no_caption_prob": 8.013244041649159e-06}, {"id": 648, "seek": 264672, "start": 2646.72, "end": 2652.2999999999997, "text": " this caching package, it transforms all your HTTP requests to go to some other server and", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 649, "seek": 264672, "start": 2652.2999999999997, "end": 2656.8599999999997, "text": " redirect all your private information to a man in the middle attack or something like", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 650, "seek": 264672, "start": 2656.8599999999997, "end": 2657.8599999999997, "text": " that.", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 651, "seek": 264672, "start": 2657.8599999999997, "end": 2658.8599999999997, "text": " Right.", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 652, "seek": 264672, "start": 2658.8599999999997, "end": 2659.8599999999997, "text": " Yeah.", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 653, "seek": 264672, "start": 2659.8599999999997, "end": 2664.02, "text": " So I think like, my understanding is it's something that Evan would be open to and does", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 654, "seek": 264672, "start": 2664.02, "end": 2669.52, "text": " make sense, but only in the context of testing, and he would not want an API that's usable", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 655, "seek": 264672, "start": 2669.52, "end": 2673.8199999999997, "text": " in production code to be able to inspect at that level.", "tokens": [50364, 341, 269, 2834, 7372, 11, 309, 35592, 439, 428, 33283, 12475, 281, 352, 281, 512, 661, 7154, 293, 50643, 50643, 29066, 439, 428, 4551, 1589, 281, 257, 587, 294, 264, 2808, 2690, 420, 746, 411, 50871, 50871, 300, 13, 50921, 50921, 1779, 13, 50971, 50971, 865, 13, 51021, 51021, 407, 286, 519, 411, 11, 452, 3701, 307, 309, 311, 746, 300, 22613, 576, 312, 1269, 281, 293, 775, 51229, 51229, 652, 2020, 11, 457, 787, 294, 264, 4319, 295, 4997, 11, 293, 415, 576, 406, 528, 364, 9362, 300, 311, 29975, 51504, 51504, 294, 4265, 3089, 281, 312, 1075, 281, 15018, 412, 300, 1496, 13, 51719, 51719], "temperature": 0.0, "avg_logprob": -0.09060580577325383, "compression_ratio": 1.6007462686567164, "no_caption_prob": 3.071709579671733e-05}, {"id": 656, "seek": 267382, "start": 2673.82, "end": 2682.5800000000004, "text": " And you couldn't do a test that says this HTTP request, so HTTP.get with a URL, and", "tokens": [50364, 400, 291, 2809, 380, 360, 257, 1500, 300, 1619, 341, 33283, 5308, 11, 370, 33283, 13, 847, 365, 257, 12905, 11, 293, 50802, 50802, 550, 584, 2066, 6915, 281, 746, 1646, 30, 50986, 50986, 682, 2674, 11, 572, 11, 570, 370, 33283, 4682, 11, 456, 366, 6828, 294, 300, 33283, 5308, 2010, 13, 51417, 51417, 400, 881, 16901, 294, 1186, 11, 360, 362, 1019, 11, 411, 754, 428, 2436, 16901, 11, 597, 366, 264, 22811, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.22535181649123567, "compression_ratio": 1.480952380952381, "no_caption_prob": 1.0129860129381996e-05}, {"id": 657, "seek": 267382, "start": 2682.5800000000004, "end": 2686.26, "text": " then say expect equals to something else?", "tokens": [50364, 400, 291, 2809, 380, 360, 257, 1500, 300, 1619, 341, 33283, 5308, 11, 370, 33283, 13, 847, 365, 257, 12905, 11, 293, 50802, 50802, 550, 584, 2066, 6915, 281, 746, 1646, 30, 50986, 50986, 682, 2674, 11, 572, 11, 570, 370, 33283, 4682, 11, 456, 366, 6828, 294, 300, 33283, 5308, 2010, 13, 51417, 51417, 400, 881, 16901, 294, 1186, 11, 360, 362, 1019, 11, 411, 754, 428, 2436, 16901, 11, 597, 366, 264, 22811, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.22535181649123567, "compression_ratio": 1.480952380952381, "no_caption_prob": 1.0129860129381996e-05}, {"id": 658, "seek": 267382, "start": 2686.26, "end": 2694.88, "text": " In general, no, because so HTTP specifically, there are functions in that HTTP request type.", "tokens": [50364, 400, 291, 2809, 380, 360, 257, 1500, 300, 1619, 341, 33283, 5308, 11, 370, 33283, 13, 847, 365, 257, 12905, 11, 293, 50802, 50802, 550, 584, 2066, 6915, 281, 746, 1646, 30, 50986, 50986, 682, 2674, 11, 572, 11, 570, 370, 33283, 4682, 11, 456, 366, 6828, 294, 300, 33283, 5308, 2010, 13, 51417, 51417, 400, 881, 16901, 294, 1186, 11, 360, 362, 1019, 11, 411, 754, 428, 2436, 16901, 11, 597, 366, 264, 22811, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.22535181649123567, "compression_ratio": 1.480952380952381, "no_caption_prob": 1.0129860129381996e-05}, {"id": 659, "seek": 267382, "start": 2694.88, "end": 2699.6600000000003, "text": " And most commands in fact, do have fun, like even your port commands, which are the simplest", "tokens": [50364, 400, 291, 2809, 380, 360, 257, 1500, 300, 1619, 341, 33283, 5308, 11, 370, 33283, 13, 847, 365, 257, 12905, 11, 293, 50802, 50802, 550, 584, 2066, 6915, 281, 746, 1646, 30, 50986, 50986, 682, 2674, 11, 572, 11, 570, 370, 33283, 4682, 11, 456, 366, 6828, 294, 300, 33283, 5308, 2010, 13, 51417, 51417, 400, 881, 16901, 294, 1186, 11, 360, 362, 1019, 11, 411, 754, 428, 2436, 16901, 11, 597, 366, 264, 22811, 51656, 51656], "temperature": 0.0, "avg_logprob": -0.22535181649123567, "compression_ratio": 1.480952380952381, "no_caption_prob": 1.0129860129381996e-05}, {"id": 660, "seek": 269966, "start": 2699.66, "end": 2703.94, "text": " ones, there's a function that takes the port value and turns it into a message.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 661, "seek": 269966, "start": 2703.94, "end": 2705.7799999999997, "text": " Yeah, functions pretty much everywhere.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 662, "seek": 269966, "start": 2705.7799999999997, "end": 2712.58, "text": " I guess functions can be equivalent by reference, but it gets to the area where it's like not", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 663, "seek": 269966, "start": 2712.58, "end": 2714.18, "text": " entirely reliable.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 664, "seek": 269966, "start": 2714.18, "end": 2721.8599999999997, "text": " I believe Elm will, if you say function one double equals function two, if it's the exact", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 665, "seek": 269966, "start": 2721.8599999999997, "end": 2724.3399999999997, "text": " same reference, then it will equal true.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 666, "seek": 269966, "start": 2724.3399999999997, "end": 2726.3799999999997, "text": " And otherwise, it will crash the program.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 667, "seek": 269966, "start": 2726.3799999999997, "end": 2728.3399999999997, "text": " It'll give a runtime exception.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 668, "seek": 269966, "start": 2728.3399999999997, "end": 2729.3399999999997, "text": " Yeah.", "tokens": [50364, 2306, 11, 456, 311, 257, 2445, 300, 2516, 264, 2436, 2158, 293, 4523, 309, 666, 257, 3636, 13, 50578, 50578, 865, 11, 6828, 1238, 709, 5315, 13, 50670, 50670, 286, 2041, 6828, 393, 312, 10344, 538, 6408, 11, 457, 309, 2170, 281, 264, 1859, 689, 309, 311, 411, 406, 51010, 51010, 7696, 12924, 13, 51090, 51090, 286, 1697, 2699, 76, 486, 11, 498, 291, 584, 2445, 472, 3834, 6915, 2445, 732, 11, 498, 309, 311, 264, 1900, 51474, 51474, 912, 6408, 11, 550, 309, 486, 2681, 2074, 13, 51598, 51598, 400, 5911, 11, 309, 486, 8252, 264, 1461, 13, 51700, 51700, 467, 603, 976, 257, 34474, 11183, 13, 51798, 51798, 865, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.18181914296643487, "compression_ratio": 1.7170542635658914, "no_caption_prob": 4.98581284773536e-05}, {"id": 669, "seek": 272934, "start": 2729.34, "end": 2735.98, "text": " I think that's one of the things that they want to change in Elm 0.20.", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 670, "seek": 272934, "start": 2735.98, "end": 2739.82, "text": " Not getting those crashes when you compare functions or JSON regexes.", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 671, "seek": 272934, "start": 2739.82, "end": 2740.82, "text": " Yeah, maybe.", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 672, "seek": 272934, "start": 2740.82, "end": 2747.1800000000003, "text": " Well, the regex one has been fixed, but I think the idea maybe would be to somehow disallow", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 673, "seek": 272934, "start": 2747.1800000000003, "end": 2750.02, "text": " comparison of functions or something.", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 674, "seek": 272934, "start": 2750.02, "end": 2755.06, "text": " So we should talk a little bit about the effect pattern and how it relates to Elm program", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 675, "seek": 272934, "start": 2755.06, "end": 2756.06, "text": " test.", "tokens": [50364, 286, 519, 300, 311, 472, 295, 264, 721, 300, 436, 528, 281, 1319, 294, 2699, 76, 1958, 13, 2009, 13, 50696, 50696, 1726, 1242, 729, 28642, 562, 291, 6794, 6828, 420, 31828, 319, 432, 47047, 13, 50888, 50888, 865, 11, 1310, 13, 50938, 50938, 1042, 11, 264, 319, 432, 87, 472, 575, 668, 6806, 11, 457, 286, 519, 264, 1558, 1310, 576, 312, 281, 6063, 717, 13253, 51256, 51256, 9660, 295, 6828, 420, 746, 13, 51398, 51398, 407, 321, 820, 751, 257, 707, 857, 466, 264, 1802, 5102, 293, 577, 309, 16155, 281, 2699, 76, 1461, 51650, 51650, 1500, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.17987739122830904, "compression_ratio": 1.5406504065040652, "no_caption_prob": 2.710837361519225e-05}, {"id": 676, "seek": 275606, "start": 2756.06, "end": 2761.74, "text": " Yeah, that's where we're going with that is to work around that is that I've had to, you", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 677, "seek": 275606, "start": 2761.74, "end": 2766.62, "text": " basically have to refactor your program first to define your own data type that represents", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 678, "seek": 275606, "start": 2766.62, "end": 2768.34, "text": " the effects you're going to produce.", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 679, "seek": 275606, "start": 2768.34, "end": 2773.5, "text": " Then you have in production, a function that turns those effects into commands.", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 680, "seek": 275606, "start": 2773.5, "end": 2778.22, "text": " And in the test side, you have basically a parallel function that does the exact same", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 681, "seek": 275606, "start": 2778.22, "end": 2782.94, "text": " thing but it just returns a different type, which is this simulated effect type that's", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 682, "seek": 275606, "start": 2782.94, "end": 2785.02, "text": " specific to Elm program test.", "tokens": [50364, 865, 11, 300, 311, 689, 321, 434, 516, 365, 300, 307, 281, 589, 926, 300, 307, 300, 286, 600, 632, 281, 11, 291, 50648, 50648, 1936, 362, 281, 1895, 15104, 428, 1461, 700, 281, 6964, 428, 1065, 1412, 2010, 300, 8855, 50892, 50892, 264, 5065, 291, 434, 516, 281, 5258, 13, 50978, 50978, 1396, 291, 362, 294, 4265, 11, 257, 2445, 300, 4523, 729, 5065, 666, 16901, 13, 51236, 51236, 400, 294, 264, 1500, 1252, 11, 291, 362, 1936, 257, 8952, 2445, 300, 775, 264, 1900, 912, 51472, 51472, 551, 457, 309, 445, 11247, 257, 819, 2010, 11, 597, 307, 341, 41713, 1802, 2010, 300, 311, 51708, 51708, 2685, 281, 2699, 76, 1461, 1500, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.134831500654461, "compression_ratio": 1.8145454545454545, "no_caption_prob": 4.399930185172707e-05}, {"id": 683, "seek": 278502, "start": 2785.02, "end": 2789.46, "text": " So like, HTTP dot get is not inspectable.", "tokens": [50364, 407, 411, 11, 33283, 5893, 483, 307, 406, 15018, 712, 13, 50586, 50586, 583, 498, 291, 632, 428, 1065, 11, 291, 458, 11, 3037, 295, 1034, 12162, 364, 1802, 11, 370, 291, 362, 11, 411, 11, 50943, 50943, 291, 2052, 257, 2960, 293, 309, 1619, 11, 291, 458, 11, 300, 2960, 15136, 3781, 264, 6792, 281, 360, 4754, 13, 51210, 51210, 407, 291, 362, 411, 364, 1802, 23673, 281, 4491, 13, 51365, 51365, 407, 2602, 295, 300, 445, 885, 257, 5622, 11, 33283, 5893, 483, 17330, 281, 4491, 5893, 31828, 420, 746, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.14287244659109213, "compression_ratio": 1.6911764705882353, "no_caption_prob": 4.26458464062307e-05}, {"id": 684, "seek": 278502, "start": 2789.46, "end": 2796.6, "text": " But if you had your own, you know, version of simulating an effect, so you have, like,", "tokens": [50364, 407, 411, 11, 33283, 5893, 483, 307, 406, 15018, 712, 13, 50586, 50586, 583, 498, 291, 632, 428, 1065, 11, 291, 458, 11, 3037, 295, 1034, 12162, 364, 1802, 11, 370, 291, 362, 11, 411, 11, 50943, 50943, 291, 2052, 257, 2960, 293, 309, 1619, 11, 291, 458, 11, 300, 2960, 15136, 3781, 264, 6792, 281, 360, 4754, 13, 51210, 51210, 407, 291, 362, 411, 364, 1802, 23673, 281, 4491, 13, 51365, 51365, 407, 2602, 295, 300, 445, 885, 257, 5622, 11, 33283, 5893, 483, 17330, 281, 4491, 5893, 31828, 420, 746, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.14287244659109213, "compression_ratio": 1.6911764705882353, "no_caption_prob": 4.26458464062307e-05}, {"id": 685, "seek": 278502, "start": 2796.6, "end": 2801.94, "text": " you click a button and it says, you know, that button fetches the latest to do items.", "tokens": [50364, 407, 411, 11, 33283, 5893, 483, 307, 406, 15018, 712, 13, 50586, 50586, 583, 498, 291, 632, 428, 1065, 11, 291, 458, 11, 3037, 295, 1034, 12162, 364, 1802, 11, 370, 291, 362, 11, 411, 11, 50943, 50943, 291, 2052, 257, 2960, 293, 309, 1619, 11, 291, 458, 11, 300, 2960, 15136, 3781, 264, 6792, 281, 360, 4754, 13, 51210, 51210, 407, 291, 362, 411, 364, 1802, 23673, 281, 4491, 13, 51365, 51365, 407, 2602, 295, 300, 445, 885, 257, 5622, 11, 33283, 5893, 483, 17330, 281, 4491, 5893, 31828, 420, 746, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.14287244659109213, "compression_ratio": 1.6911764705882353, "no_caption_prob": 4.26458464062307e-05}, {"id": 686, "seek": 278502, "start": 2801.94, "end": 2805.04, "text": " So you have like an effect fetch to dos.", "tokens": [50364, 407, 411, 11, 33283, 5893, 483, 307, 406, 15018, 712, 13, 50586, 50586, 583, 498, 291, 632, 428, 1065, 11, 291, 458, 11, 3037, 295, 1034, 12162, 364, 1802, 11, 370, 291, 362, 11, 411, 11, 50943, 50943, 291, 2052, 257, 2960, 293, 309, 1619, 11, 291, 458, 11, 300, 2960, 15136, 3781, 264, 6792, 281, 360, 4754, 13, 51210, 51210, 407, 291, 362, 411, 364, 1802, 23673, 281, 4491, 13, 51365, 51365, 407, 2602, 295, 300, 445, 885, 257, 5622, 11, 33283, 5893, 483, 17330, 281, 4491, 5893, 31828, 420, 746, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.14287244659109213, "compression_ratio": 1.6911764705882353, "no_caption_prob": 4.26458464062307e-05}, {"id": 687, "seek": 278502, "start": 2805.04, "end": 2811.9, "text": " So instead of that just being a command, HTTP dot get slash to dos dot JSON or something,", "tokens": [50364, 407, 411, 11, 33283, 5893, 483, 307, 406, 15018, 712, 13, 50586, 50586, 583, 498, 291, 632, 428, 1065, 11, 291, 458, 11, 3037, 295, 1034, 12162, 364, 1802, 11, 370, 291, 362, 11, 411, 11, 50943, 50943, 291, 2052, 257, 2960, 293, 309, 1619, 11, 291, 458, 11, 300, 2960, 15136, 3781, 264, 6792, 281, 360, 4754, 13, 51210, 51210, 407, 291, 362, 411, 364, 1802, 23673, 281, 4491, 13, 51365, 51365, 407, 2602, 295, 300, 445, 885, 257, 5622, 11, 33283, 5893, 483, 17330, 281, 4491, 5893, 31828, 420, 746, 11, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.14287244659109213, "compression_ratio": 1.6911764705882353, "no_caption_prob": 4.26458464062307e-05}, {"id": 688, "seek": 281190, "start": 2811.9, "end": 2815.2200000000003, "text": " it's going to be an effect called fetch to dos.", "tokens": [50364, 309, 311, 516, 281, 312, 364, 1802, 1219, 23673, 281, 4491, 13, 50530, 50530, 2260, 5623, 2445, 307, 516, 281, 312, 14226, 294, 257, 707, 36133, 300, 307, 767, 428, 264, 50892, 50892, 2047, 5623, 2445, 291, 291, 2464, 307, 516, 281, 312, 12678, 257, 2316, 22117, 1802, 13, 51244, 51244, 400, 550, 291, 434, 516, 281, 362, 281, 13799, 300, 1802, 294, 428, 2135, 4265, 3089, 666, 51548, 51548, 33283, 5893, 483, 17330, 281, 4491, 337, 264, 23673, 281, 4491, 5065, 2010, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1285070072520863, "compression_ratio": 1.7788461538461537, "no_caption_prob": 2.0145218513789587e-05}, {"id": 689, "seek": 281190, "start": 2815.2200000000003, "end": 2822.46, "text": " Your update function is going to be wrapped in a little helper that is actually your the", "tokens": [50364, 309, 311, 516, 281, 312, 364, 1802, 1219, 23673, 281, 4491, 13, 50530, 50530, 2260, 5623, 2445, 307, 516, 281, 312, 14226, 294, 257, 707, 36133, 300, 307, 767, 428, 264, 50892, 50892, 2047, 5623, 2445, 291, 291, 2464, 307, 516, 281, 312, 12678, 257, 2316, 22117, 1802, 13, 51244, 51244, 400, 550, 291, 434, 516, 281, 362, 281, 13799, 300, 1802, 294, 428, 2135, 4265, 3089, 666, 51548, 51548, 33283, 5893, 483, 17330, 281, 4491, 337, 264, 23673, 281, 4491, 5065, 2010, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1285070072520863, "compression_ratio": 1.7788461538461537, "no_caption_prob": 2.0145218513789587e-05}, {"id": 690, "seek": 281190, "start": 2822.46, "end": 2829.5, "text": " direct update function you you write is going to be returning a model comma effect.", "tokens": [50364, 309, 311, 516, 281, 312, 364, 1802, 1219, 23673, 281, 4491, 13, 50530, 50530, 2260, 5623, 2445, 307, 516, 281, 312, 14226, 294, 257, 707, 36133, 300, 307, 767, 428, 264, 50892, 50892, 2047, 5623, 2445, 291, 291, 2464, 307, 516, 281, 312, 12678, 257, 2316, 22117, 1802, 13, 51244, 51244, 400, 550, 291, 434, 516, 281, 362, 281, 13799, 300, 1802, 294, 428, 2135, 4265, 3089, 666, 51548, 51548, 33283, 5893, 483, 17330, 281, 4491, 337, 264, 23673, 281, 4491, 5065, 2010, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1285070072520863, "compression_ratio": 1.7788461538461537, "no_caption_prob": 2.0145218513789587e-05}, {"id": 691, "seek": 281190, "start": 2829.5, "end": 2835.58, "text": " And then you're going to have to translate that effect in your main production code into", "tokens": [50364, 309, 311, 516, 281, 312, 364, 1802, 1219, 23673, 281, 4491, 13, 50530, 50530, 2260, 5623, 2445, 307, 516, 281, 312, 14226, 294, 257, 707, 36133, 300, 307, 767, 428, 264, 50892, 50892, 2047, 5623, 2445, 291, 291, 2464, 307, 516, 281, 312, 12678, 257, 2316, 22117, 1802, 13, 51244, 51244, 400, 550, 291, 434, 516, 281, 362, 281, 13799, 300, 1802, 294, 428, 2135, 4265, 3089, 666, 51548, 51548, 33283, 5893, 483, 17330, 281, 4491, 337, 264, 23673, 281, 4491, 5065, 2010, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1285070072520863, "compression_ratio": 1.7788461538461537, "no_caption_prob": 2.0145218513789587e-05}, {"id": 692, "seek": 281190, "start": 2835.58, "end": 2840.62, "text": " HTTP dot get slash to dos for the fetch to dos effects type.", "tokens": [50364, 309, 311, 516, 281, 312, 364, 1802, 1219, 23673, 281, 4491, 13, 50530, 50530, 2260, 5623, 2445, 307, 516, 281, 312, 14226, 294, 257, 707, 36133, 300, 307, 767, 428, 264, 50892, 50892, 2047, 5623, 2445, 291, 291, 2464, 307, 516, 281, 312, 12678, 257, 2316, 22117, 1802, 13, 51244, 51244, 400, 550, 291, 434, 516, 281, 362, 281, 13799, 300, 1802, 294, 428, 2135, 4265, 3089, 666, 51548, 51548, 33283, 5893, 483, 17330, 281, 4491, 337, 264, 23673, 281, 4491, 5065, 2010, 13, 51800, 51800], "temperature": 0.0, "avg_logprob": -0.1285070072520863, "compression_ratio": 1.7788461538461537, "no_caption_prob": 2.0145218513789587e-05}, {"id": 693, "seek": 284062, "start": 2840.62, "end": 2845.62, "text": " So it's just a custom type type effects equals fetch to dos and then all the other possible", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 694, "seek": 284062, "start": 2845.62, "end": 2846.62, "text": " effects.", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 695, "seek": 284062, "start": 2846.62, "end": 2851.94, "text": " But then in the test one, you write a translator that turns that effects not into HTTP dot", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 696, "seek": 284062, "start": 2851.94, "end": 2857.08, "text": " get but into simulated effects dot HTTP dot get.", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 697, "seek": 284062, "start": 2857.08, "end": 2863.56, "text": " So it's a drop in replacement except instead of importing HTTP, you're importing simulated", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 698, "seek": 284062, "start": 2863.56, "end": 2866.64, "text": " effect dot HTTP as HTTP.", "tokens": [50364, 407, 309, 311, 445, 257, 2375, 2010, 2010, 5065, 6915, 23673, 281, 4491, 293, 550, 439, 264, 661, 1944, 50614, 50614, 5065, 13, 50664, 50664, 583, 550, 294, 264, 1500, 472, 11, 291, 2464, 257, 35223, 300, 4523, 300, 5065, 406, 666, 33283, 5893, 50930, 50930, 483, 457, 666, 41713, 5065, 5893, 33283, 5893, 483, 13, 51187, 51187, 407, 309, 311, 257, 3270, 294, 14419, 3993, 2602, 295, 43866, 33283, 11, 291, 434, 43866, 41713, 51511, 51511, 1802, 5893, 33283, 382, 33283, 13, 51665, 51665], "temperature": 0.0, "avg_logprob": -0.13407815735915612, "compression_ratio": 1.7450980392156863, "no_caption_prob": 2.9479774639185052e-06}, {"id": 699, "seek": 286664, "start": 2866.64, "end": 2871.2999999999997, "text": " Otherwise it's the same API, but it gives you something that you can inspect in on program", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 700, "seek": 286664, "start": 2871.2999999999997, "end": 2872.2999999999997, "text": " test.", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 701, "seek": 286664, "start": 2872.2999999999997, "end": 2873.2999999999997, "text": " Yep.", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 702, "seek": 286664, "start": 2873.2999999999997, "end": 2880.9, "text": " And unfortunately, the HTTP package has a similar restriction where you can't inspect", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 703, "seek": 286664, "start": 2880.9, "end": 2887.72, "text": " the HTTP body type or the HTTP expect type that's used for parsing.", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 704, "seek": 286664, "start": 2887.72, "end": 2889.06, "text": " Maybe you can inspect body.", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 705, "seek": 286664, "start": 2889.06, "end": 2894.74, "text": " But anyway, there's kind of this chain of things where you can't if you have an HTTP", "tokens": [50364, 10328, 309, 311, 264, 912, 9362, 11, 457, 309, 2709, 291, 746, 300, 291, 393, 15018, 294, 322, 1461, 50597, 50597, 1500, 13, 50647, 50647, 7010, 13, 50697, 50697, 400, 7015, 11, 264, 33283, 7372, 575, 257, 2531, 29529, 689, 291, 393, 380, 15018, 51077, 51077, 264, 33283, 1772, 2010, 420, 264, 33283, 2066, 2010, 300, 311, 1143, 337, 21156, 278, 13, 51418, 51418, 2704, 291, 393, 15018, 1772, 13, 51485, 51485, 583, 4033, 11, 456, 311, 733, 295, 341, 5021, 295, 721, 689, 291, 393, 380, 498, 291, 362, 364, 33283, 51769, 51769], "temperature": 0.0, "avg_logprob": -0.11407323678334554, "compression_ratio": 1.665158371040724, "no_caption_prob": 1.0615944120218046e-05}, {"id": 706, "seek": 289474, "start": 2894.74, "end": 2899.3399999999997, "text": " expect type that like represents the decoder and all of that, you can't actually use that", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 707, "seek": 289474, "start": 2899.3399999999997, "end": 2900.8199999999997, "text": " for anything directly.", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 708, "seek": 289474, "start": 2900.8199999999997, "end": 2905.9399999999996, "text": " So that's another thing that I have to have a parallel version that's used in the test.", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 709, "seek": 289474, "start": 2905.9399999999996, "end": 2913.8199999999997, "text": " So just to run through how I think about doing that in the least annoying way possible is", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 710, "seek": 289474, "start": 2913.8199999999997, "end": 2918.9799999999996, "text": " you want to you have to look at the function that you're calling in the real world that", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 711, "seek": 289474, "start": 2918.9799999999996, "end": 2920.54, "text": " is producing the command.", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 712, "seek": 289474, "start": 2920.54, "end": 2924.4799999999996, "text": " So in your example, HTTP dot get returns a command.", "tokens": [50364, 2066, 2010, 300, 411, 8855, 264, 979, 19866, 293, 439, 295, 300, 11, 291, 393, 380, 767, 764, 300, 50594, 50594, 337, 1340, 3838, 13, 50668, 50668, 407, 300, 311, 1071, 551, 300, 286, 362, 281, 362, 257, 8952, 3037, 300, 311, 1143, 294, 264, 1500, 13, 50924, 50924, 407, 445, 281, 1190, 807, 577, 286, 519, 466, 884, 300, 294, 264, 1935, 11304, 636, 1944, 307, 51318, 51318, 291, 528, 281, 291, 362, 281, 574, 412, 264, 2445, 300, 291, 434, 5141, 294, 264, 957, 1002, 300, 51576, 51576, 307, 10501, 264, 5622, 13, 51654, 51654, 407, 294, 428, 1365, 11, 33283, 5893, 483, 11247, 257, 5622, 13, 51851, 51851], "temperature": 0.0, "avg_logprob": -0.09076682234232404, "compression_ratio": 1.7471264367816093, "no_caption_prob": 4.39995237684343e-05}, {"id": 713, "seek": 292448, "start": 2924.48, "end": 2929.9, "text": " So your effect type should really just take the parameters to that.", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 714, "seek": 292448, "start": 2929.9, "end": 2933.38, "text": " So a little different than what you were saying you were saying you could have a fetch to", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 715, "seek": 292448, "start": 2933.38, "end": 2935.02, "text": " do is effect.", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 716, "seek": 292448, "start": 2935.02, "end": 2940.52, "text": " I think it's actually better to keep your effect type more generic where it's just representing", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 717, "seek": 292448, "start": 2940.52, "end": 2942.3, "text": " the functions that are going to get called.", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 718, "seek": 292448, "start": 2942.3, "end": 2947.78, "text": " So you'd have I'd recommend like it doesn't reflect the message type.", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 719, "seek": 292448, "start": 2947.78, "end": 2952.54, "text": " It's more akin to the command type, but it's an indirect a level of indirection.", "tokens": [50364, 407, 428, 1802, 2010, 820, 534, 445, 747, 264, 9834, 281, 300, 13, 50635, 50635, 407, 257, 707, 819, 813, 437, 291, 645, 1566, 291, 645, 1566, 291, 727, 362, 257, 23673, 281, 50809, 50809, 360, 307, 1802, 13, 50891, 50891, 286, 519, 309, 311, 767, 1101, 281, 1066, 428, 1802, 2010, 544, 19577, 689, 309, 311, 445, 13460, 51166, 51166, 264, 6828, 300, 366, 516, 281, 483, 1219, 13, 51255, 51255, 407, 291, 1116, 362, 286, 1116, 2748, 411, 309, 1177, 380, 5031, 264, 3636, 2010, 13, 51529, 51529, 467, 311, 544, 47540, 281, 264, 5622, 2010, 11, 457, 309, 311, 364, 19523, 257, 1496, 295, 1016, 621, 882, 13, 51767, 51767], "temperature": 0.0, "avg_logprob": -0.1220677666042162, "compression_ratio": 1.7976653696498055, "no_caption_prob": 8.26774885354098e-06}, {"id": 720, "seek": 295254, "start": 2952.54, "end": 2955.7799999999997, "text": " So you can translate it into a simulated or a real command.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 721, "seek": 295254, "start": 2955.7799999999997, "end": 2956.7799999999997, "text": " Yeah.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 722, "seek": 295254, "start": 2956.7799999999997, "end": 2959.06, "text": " So like get takes the URL as a string.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 723, "seek": 295254, "start": 2959.06, "end": 2964.18, "text": " It takes the HTTP expect, which again, we we have to fake.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 724, "seek": 295254, "start": 2964.18, "end": 2971.54, "text": " So then to create your expect, there's like the JSON body or expect JSON or whatever.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 725, "seek": 295254, "start": 2971.54, "end": 2976.48, "text": " So the parameters to the to that is what you'd stick in your effect type.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 726, "seek": 295254, "start": 2976.48, "end": 2982.12, "text": " So then on the real side, you just call HTTP get with the parameters and build it up.", "tokens": [50364, 407, 291, 393, 13799, 309, 666, 257, 41713, 420, 257, 957, 5622, 13, 50526, 50526, 865, 13, 50576, 50576, 407, 411, 483, 2516, 264, 12905, 382, 257, 6798, 13, 50690, 50690, 467, 2516, 264, 33283, 2066, 11, 597, 797, 11, 321, 321, 362, 281, 7592, 13, 50946, 50946, 407, 550, 281, 1884, 428, 2066, 11, 456, 311, 411, 264, 31828, 1772, 420, 2066, 31828, 420, 2035, 13, 51314, 51314, 407, 264, 9834, 281, 264, 281, 300, 307, 437, 291, 1116, 2897, 294, 428, 1802, 2010, 13, 51561, 51561, 407, 550, 322, 264, 957, 1252, 11, 291, 445, 818, 33283, 483, 365, 264, 9834, 293, 1322, 309, 493, 13, 51843, 51843], "temperature": 0.0, "avg_logprob": -0.09209379979542323, "compression_ratio": 1.6693877551020408, "no_caption_prob": 4.425445240485715e-06}, {"id": 727, "seek": 298212, "start": 2982.12, "end": 2986.42, "text": " And then the simulated version should look exactly the same because there's a whole bunch", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 728, "seek": 298212, "start": 2986.42, "end": 2990.74, "text": " of like there's simulated effect that HTTP which is a module.", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 729, "seek": 298212, "start": 2990.74, "end": 2995.4, "text": " It has exactly the same API as the API as the HTTP module.", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 730, "seek": 298212, "start": 2995.4, "end": 2999.16, "text": " It just returns simulated effects instead of commands.", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 731, "seek": 298212, "start": 2999.16, "end": 3002.52, "text": " So it's basically a bunch of boilerplate.", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 732, "seek": 298212, "start": 3002.52, "end": 3009.1, "text": " That's pretty annoying and takes up a whole lot of documentation of Elm program.", "tokens": [50364, 400, 550, 264, 41713, 3037, 820, 574, 2293, 264, 912, 570, 456, 311, 257, 1379, 3840, 50579, 50579, 295, 411, 456, 311, 41713, 1802, 300, 33283, 597, 307, 257, 10088, 13, 50795, 50795, 467, 575, 2293, 264, 912, 9362, 382, 264, 9362, 382, 264, 33283, 10088, 13, 51028, 51028, 467, 445, 11247, 41713, 5065, 2602, 295, 16901, 13, 51216, 51216, 407, 309, 311, 1936, 257, 3840, 295, 39228, 37008, 13, 51384, 51384, 663, 311, 1238, 11304, 293, 2516, 493, 257, 1379, 688, 295, 14333, 295, 2699, 76, 1461, 13, 51713, 51713], "temperature": 0.0, "avg_logprob": -0.13997633739184306, "compression_ratio": 1.7321428571428572, "no_caption_prob": 4.2892656892945524e-06}, {"id": 733, "seek": 300910, "start": 3009.1, "end": 3012.7599999999998, "text": " But theoretically, it's possible to remove that limitation.", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 734, "seek": 300910, "start": 3012.7599999999998, "end": 3015.3399999999997, "text": " It's kind of like a detailed project.", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 735, "seek": 300910, "start": 3015.3399999999997, "end": 3020.74, "text": " If anyone out there is looking to help with this, ideally, on program tests shouldn't", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 736, "seek": 300910, "start": 3020.74, "end": 3025.74, "text": " need any of this, it should just be able to inspect your commands and read the data without", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 737, "seek": 300910, "start": 3025.74, "end": 3029.2599999999998, "text": " you having to do anything to your program to be able to start using it.", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 738, "seek": 300910, "start": 3029.2599999999998, "end": 3031.2599999999998, "text": " That would be a game changer.", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 739, "seek": 300910, "start": 3031.2599999999998, "end": 3034.42, "text": " Yeah, I've actually in Elm 18.", "tokens": [50364, 583, 29400, 11, 309, 311, 1944, 281, 4159, 300, 27432, 13, 50547, 50547, 467, 311, 733, 295, 411, 257, 9942, 1716, 13, 50676, 50676, 759, 2878, 484, 456, 307, 1237, 281, 854, 365, 341, 11, 22915, 11, 322, 1461, 6921, 4659, 380, 50946, 50946, 643, 604, 295, 341, 11, 309, 820, 445, 312, 1075, 281, 15018, 428, 16901, 293, 1401, 264, 1412, 1553, 51196, 51196, 291, 1419, 281, 360, 1340, 281, 428, 1461, 281, 312, 1075, 281, 722, 1228, 309, 13, 51372, 51372, 663, 576, 312, 257, 1216, 22822, 13, 51472, 51472, 865, 11, 286, 600, 767, 294, 2699, 76, 2443, 13, 51630, 51630], "temperature": 0.0, "avg_logprob": -0.1932265803499042, "compression_ratio": 1.632, "no_caption_prob": 1.2606685231730808e-05}, {"id": 740, "seek": 303442, "start": 3034.42, "end": 3039.54, "text": " I prototyped a package that could do that and it needs kind of some integration with", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 741, "seek": 303442, "start": 3039.54, "end": 3045.14, "text": " the test runner itself to swap test only JavaScript to make that possible.", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 742, "seek": 303442, "start": 3045.14, "end": 3046.9, "text": " But ideally, it should happen.", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 743, "seek": 303442, "start": 3046.9, "end": 3049.7000000000003, "text": " It just hasn't had a chance to get implemented yet.", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 744, "seek": 303442, "start": 3049.7000000000003, "end": 3055.2400000000002, "text": " I'm wondering whether the effect pattern still has some merits if you're able to do that,", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 745, "seek": 303442, "start": 3055.2400000000002, "end": 3058.98, "text": " or if it's just uses boilerplates when we get to that point.", "tokens": [50364, 286, 46219, 3452, 257, 7372, 300, 727, 360, 300, 293, 309, 2203, 733, 295, 512, 10980, 365, 50620, 50620, 264, 1500, 24376, 2564, 281, 18135, 1500, 787, 15778, 281, 652, 300, 1944, 13, 50900, 50900, 583, 22915, 11, 309, 820, 1051, 13, 50988, 50988, 467, 445, 6132, 380, 632, 257, 2931, 281, 483, 12270, 1939, 13, 51128, 51128, 286, 478, 6359, 1968, 264, 1802, 5102, 920, 575, 512, 40923, 498, 291, 434, 1075, 281, 360, 300, 11, 51405, 51405, 420, 498, 309, 311, 445, 4960, 39228, 564, 1024, 562, 321, 483, 281, 300, 935, 13, 51592, 51592], "temperature": 0.0, "avg_logprob": -0.16740966565681226, "compression_ratio": 1.5846774193548387, "no_caption_prob": 3.071684841415845e-05}, {"id": 746, "seek": 305898, "start": 3058.98, "end": 3065.1, "text": " Yeah, I think like this is, it's a question that I've seen asked more on the Haskell side", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 747, "seek": 305898, "start": 3065.1, "end": 3066.86, "text": " of things.", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 748, "seek": 305898, "start": 3066.86, "end": 3073.58, "text": " Where in Haskell, there's a type called IO, which basically is similar to Elm's command,", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 749, "seek": 305898, "start": 3073.58, "end": 3077.42, "text": " where it's saying that this can have external effects of any type.", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 750, "seek": 305898, "start": 3077.42, "end": 3082.08, "text": " But then if you're really into the strong typing and limiting the scope, letting your", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 751, "seek": 305898, "start": 3082.08, "end": 3086.7, "text": " types limit the scope of what functions can do, then you look at saying I want a function", "tokens": [50364, 865, 11, 286, 519, 411, 341, 307, 11, 309, 311, 257, 1168, 300, 286, 600, 1612, 2351, 544, 322, 264, 8646, 43723, 1252, 50670, 50670, 295, 721, 13, 50758, 50758, 2305, 294, 8646, 43723, 11, 456, 311, 257, 2010, 1219, 39839, 11, 597, 1936, 307, 2531, 281, 2699, 76, 311, 5622, 11, 51094, 51094, 689, 309, 311, 1566, 300, 341, 393, 362, 8320, 5065, 295, 604, 2010, 13, 51286, 51286, 583, 550, 498, 291, 434, 534, 666, 264, 2068, 18444, 293, 22083, 264, 11923, 11, 8295, 428, 51519, 51519, 3467, 4948, 264, 11923, 295, 437, 6828, 393, 360, 11, 550, 291, 574, 412, 1566, 286, 528, 257, 2445, 51750, 51750], "temperature": 0.0, "avg_logprob": -0.10226343359266009, "compression_ratio": 1.6809338521400778, "no_caption_prob": 9.168974793283269e-05}, {"id": 752, "seek": 308670, "start": 3086.7, "end": 3091.3799999999997, "text": " that like can't do everything, but it can it's allowed to talk to the database, let's", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 753, "seek": 308670, "start": 3091.3799999999997, "end": 3096.02, "text": " say and it can maybe it's allowed to send log information, but it can't do anything", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 754, "seek": 308670, "start": 3096.02, "end": 3099.58, "text": " else like it can't read and write from the terminal console.", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 755, "seek": 308670, "start": 3099.58, "end": 3105.3599999999997, "text": " It can't I don't know what other effects are I can't like sleep the computer or call the", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 756, "seek": 308670, "start": 3105.3599999999997, "end": 3107.04, "text": " halt command, whatever.", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 757, "seek": 308670, "start": 3107.04, "end": 3111.54, "text": " So in that environment, there's a lot of conversation about the best way to model that.", "tokens": [50364, 300, 411, 393, 380, 360, 1203, 11, 457, 309, 393, 309, 311, 4350, 281, 751, 281, 264, 8149, 11, 718, 311, 50598, 50598, 584, 293, 309, 393, 1310, 309, 311, 4350, 281, 2845, 3565, 1589, 11, 457, 309, 393, 380, 360, 1340, 50830, 50830, 1646, 411, 309, 393, 380, 1401, 293, 2464, 490, 264, 14709, 11076, 13, 51008, 51008, 467, 393, 380, 286, 500, 380, 458, 437, 661, 5065, 366, 286, 393, 380, 411, 2817, 264, 3820, 420, 818, 264, 51297, 51297, 12479, 5622, 11, 2035, 13, 51381, 51381, 407, 294, 300, 2823, 11, 456, 311, 257, 688, 295, 3761, 466, 264, 1151, 636, 281, 2316, 300, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.12129650797162737, "compression_ratio": 1.78099173553719, "no_caption_prob": 2.8856073186034337e-05}, {"id": 758, "seek": 311154, "start": 3111.54, "end": 3117.54, "text": " And this effect approach is one style of that where you can have a data type that represents", "tokens": [50364, 400, 341, 1802, 3109, 307, 472, 3758, 295, 300, 689, 291, 393, 362, 257, 1412, 2010, 300, 8855, 50664, 50664, 445, 264, 5567, 992, 295, 721, 300, 366, 4350, 11, 291, 393, 917, 493, 365, 257, 1379, 3840, 295, 819, 50867, 50867, 3467, 300, 2906, 819, 30628, 300, 366, 4350, 13, 51028, 51028, 407, 291, 727, 360, 257, 2531, 551, 294, 294, 597, 5665, 11, 286, 519, 575, 364, 31644, 764, 51350, 51350, 689, 291, 1310, 362, 512, 6179, 15682, 6542, 300, 2738, 281, 411, 1029, 337, 1629, 721, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.059161965565014914, "compression_ratio": 1.756198347107438, "no_caption_prob": 2.3922111722640693e-05}, {"id": 759, "seek": 311154, "start": 3117.54, "end": 3121.6, "text": " just the limited set of things that are allowed, you can end up with a whole bunch of different", "tokens": [50364, 400, 341, 1802, 3109, 307, 472, 3758, 295, 300, 689, 291, 393, 362, 257, 1412, 2010, 300, 8855, 50664, 50664, 445, 264, 5567, 992, 295, 721, 300, 366, 4350, 11, 291, 393, 917, 493, 365, 257, 1379, 3840, 295, 819, 50867, 50867, 3467, 300, 2906, 819, 30628, 300, 366, 4350, 13, 51028, 51028, 407, 291, 727, 360, 257, 2531, 551, 294, 294, 597, 5665, 11, 286, 519, 575, 364, 31644, 764, 51350, 51350, 689, 291, 1310, 362, 512, 6179, 15682, 6542, 300, 2738, 281, 411, 1029, 337, 1629, 721, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.059161965565014914, "compression_ratio": 1.756198347107438, "no_caption_prob": 2.3922111722640693e-05}, {"id": 760, "seek": 311154, "start": 3121.6, "end": 3124.82, "text": " types that represent different contexts that are allowed.", "tokens": [50364, 400, 341, 1802, 3109, 307, 472, 3758, 295, 300, 689, 291, 393, 362, 257, 1412, 2010, 300, 8855, 50664, 50664, 445, 264, 5567, 992, 295, 721, 300, 366, 4350, 11, 291, 393, 917, 493, 365, 257, 1379, 3840, 295, 819, 50867, 50867, 3467, 300, 2906, 819, 30628, 300, 366, 4350, 13, 51028, 51028, 407, 291, 727, 360, 257, 2531, 551, 294, 294, 597, 5665, 11, 286, 519, 575, 364, 31644, 764, 51350, 51350, 689, 291, 1310, 362, 512, 6179, 15682, 6542, 300, 2738, 281, 411, 1029, 337, 1629, 721, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.059161965565014914, "compression_ratio": 1.756198347107438, "no_caption_prob": 2.3922111722640693e-05}, {"id": 761, "seek": 311154, "start": 3124.82, "end": 3131.2599999999998, "text": " So you could do a similar thing in in which personally, I think has an occasional use", "tokens": [50364, 400, 341, 1802, 3109, 307, 472, 3758, 295, 300, 689, 291, 393, 362, 257, 1412, 2010, 300, 8855, 50664, 50664, 445, 264, 5567, 992, 295, 721, 300, 366, 4350, 11, 291, 393, 917, 493, 365, 257, 1379, 3840, 295, 819, 50867, 50867, 3467, 300, 2906, 819, 30628, 300, 366, 4350, 13, 51028, 51028, 407, 291, 727, 360, 257, 2531, 551, 294, 294, 597, 5665, 11, 286, 519, 575, 364, 31644, 764, 51350, 51350, 689, 291, 1310, 362, 512, 6179, 15682, 6542, 300, 2738, 281, 411, 1029, 337, 1629, 721, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.059161965565014914, "compression_ratio": 1.756198347107438, "no_caption_prob": 2.3922111722640693e-05}, {"id": 762, "seek": 311154, "start": 3131.2599999999998, "end": 3138.22, "text": " where you maybe have some complicated UI component that wants to like ask for certain things", "tokens": [50364, 400, 341, 1802, 3109, 307, 472, 3758, 295, 300, 689, 291, 393, 362, 257, 1412, 2010, 300, 8855, 50664, 50664, 445, 264, 5567, 992, 295, 721, 300, 366, 4350, 11, 291, 393, 917, 493, 365, 257, 1379, 3840, 295, 819, 50867, 50867, 3467, 300, 2906, 819, 30628, 300, 366, 4350, 13, 51028, 51028, 407, 291, 727, 360, 257, 2531, 551, 294, 294, 597, 5665, 11, 286, 519, 575, 364, 31644, 764, 51350, 51350, 689, 291, 1310, 362, 512, 6179, 15682, 6542, 300, 2738, 281, 411, 1029, 337, 1629, 721, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.059161965565014914, "compression_ratio": 1.756198347107438, "no_caption_prob": 2.3922111722640693e-05}, {"id": 763, "seek": 313822, "start": 3138.22, "end": 3144.58, "text": " like maybe it needs to trigger a focus event somewhere else in the DOM.", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 764, "seek": 313822, "start": 3144.58, "end": 3148.12, "text": " So it but you don't want to allow it to make HTTP requests.", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 765, "seek": 313822, "start": 3148.12, "end": 3152.48, "text": " So you could do something like that where that module defines a type of things that", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 766, "seek": 313822, "start": 3152.48, "end": 3155.0, "text": " the parent component should do on its behalf.", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 767, "seek": 313822, "start": 3155.0, "end": 3156.3199999999997, "text": " And that makes sense.", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 768, "seek": 313822, "start": 3156.3199999999997, "end": 3161.22, "text": " But I think as a general, like, I think it makes sense in specific cases where you have", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 769, "seek": 313822, "start": 3161.22, "end": 3165.1, "text": " a component that like very clearly needs that responsibility.", "tokens": [50364, 411, 1310, 309, 2203, 281, 7875, 257, 1879, 2280, 4079, 1646, 294, 264, 35727, 13, 50682, 50682, 407, 309, 457, 291, 500, 380, 528, 281, 2089, 309, 281, 652, 33283, 12475, 13, 50859, 50859, 407, 291, 727, 360, 746, 411, 300, 689, 300, 10088, 23122, 257, 2010, 295, 721, 300, 51077, 51077, 264, 2596, 6542, 820, 360, 322, 1080, 9490, 13, 51203, 51203, 400, 300, 1669, 2020, 13, 51269, 51269, 583, 286, 519, 382, 257, 2674, 11, 411, 11, 286, 519, 309, 1669, 2020, 294, 2685, 3331, 689, 291, 362, 51514, 51514, 257, 6542, 300, 411, 588, 4448, 2203, 300, 6357, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.11240341978253059, "compression_ratio": 1.6590038314176245, "no_caption_prob": 2.0145198504906148e-05}, {"id": 770, "seek": 316510, "start": 3165.1, "end": 3169.7999999999997, "text": " But as a general pattern, I think it just gets overly complicated.", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 771, "seek": 316510, "start": 3169.7999999999997, "end": 3175.58, "text": " And in Elm program test, I would avoid even using that pattern at all if it were possible", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 772, "seek": 316510, "start": 3175.58, "end": 3176.58, "text": " to do.", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 773, "seek": 316510, "start": 3176.58, "end": 3177.58, "text": " Yeah, that makes sense.", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 774, "seek": 316510, "start": 3177.58, "end": 3183.74, "text": " I mean, it could potentially have the same benefit of, you know, how type signatures", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 775, "seek": 316510, "start": 3183.74, "end": 3187.3399999999997, "text": " in Elm allow you to reason about what's going on.", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 776, "seek": 316510, "start": 3187.3399999999997, "end": 3190.22, "text": " Is this changing the whole model?", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 777, "seek": 316510, "start": 3190.22, "end": 3191.3199999999997, "text": " Is that even possible?", "tokens": [50364, 583, 382, 257, 2674, 5102, 11, 286, 519, 309, 445, 2170, 24324, 6179, 13, 50599, 50599, 400, 294, 2699, 76, 1461, 1500, 11, 286, 576, 5042, 754, 1228, 300, 5102, 412, 439, 498, 309, 645, 1944, 50888, 50888, 281, 360, 13, 50938, 50938, 865, 11, 300, 1669, 2020, 13, 50988, 50988, 286, 914, 11, 309, 727, 7263, 362, 264, 912, 5121, 295, 11, 291, 458, 11, 577, 2010, 32322, 51296, 51296, 294, 2699, 76, 2089, 291, 281, 1778, 466, 437, 311, 516, 322, 13, 51476, 51476, 1119, 341, 4473, 264, 1379, 2316, 30, 51620, 51620, 1119, 300, 754, 1944, 30, 51675, 51675], "temperature": 0.0, "avg_logprob": -0.10837079928471492, "compression_ratio": 1.5532786885245902, "no_caption_prob": 1.7778193068807013e-05}, {"id": 778, "seek": 319132, "start": 3191.32, "end": 3195.7000000000003, "text": " Or is it narrowed down into, oh, this can only change this one data type.", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 779, "seek": 319132, "start": 3195.7000000000003, "end": 3200.46, "text": " So if I'm looking at this one piece of the model changing, I can narrow my focus and", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 780, "seek": 319132, "start": 3200.46, "end": 3202.32, "text": " ignore these areas of code.", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 781, "seek": 319132, "start": 3202.32, "end": 3205.5, "text": " You know, you can use the effect pattern to do similar things.", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 782, "seek": 319132, "start": 3205.5, "end": 3211.1800000000003, "text": " But it's so, as you're saying, it's sort of so heavyweight to do that, that it might not", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 783, "seek": 319132, "start": 3211.1800000000003, "end": 3218.5, "text": " be worth the benefit because managed effects in Elm are already so cleanly isolated that", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 784, "seek": 319132, "start": 3218.5, "end": 3220.82, "text": " it's in a pretty good state as it is.", "tokens": [50364, 1610, 307, 309, 9432, 292, 760, 666, 11, 1954, 11, 341, 393, 787, 1319, 341, 472, 1412, 2010, 13, 50583, 50583, 407, 498, 286, 478, 1237, 412, 341, 472, 2522, 295, 264, 2316, 4473, 11, 286, 393, 9432, 452, 1879, 293, 50821, 50821, 11200, 613, 3179, 295, 3089, 13, 50914, 50914, 509, 458, 11, 291, 393, 764, 264, 1802, 5102, 281, 360, 2531, 721, 13, 51073, 51073, 583, 309, 311, 370, 11, 382, 291, 434, 1566, 11, 309, 311, 1333, 295, 370, 4676, 12329, 281, 360, 300, 11, 300, 309, 1062, 406, 51357, 51357, 312, 3163, 264, 5121, 570, 6453, 5065, 294, 2699, 76, 366, 1217, 370, 2541, 356, 14621, 300, 51723, 51723, 309, 311, 294, 257, 1238, 665, 1785, 382, 309, 307, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.10304360836744308, "compression_ratio": 1.6607142857142858, "no_caption_prob": 1.451015668862965e-05}, {"id": 785, "seek": 322082, "start": 3220.82, "end": 3226.6600000000003, "text": " I've thought about using a pattern like this for a sort of plugin architecture for authors", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 786, "seek": 322082, "start": 3226.6600000000003, "end": 3233.38, "text": " creating packages for Elm pages, because if you're performing a static HTTP request or,", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 787, "seek": 322082, "start": 3233.38, "end": 3238.26, "text": " you know, things like that, if you set up a package that generates an RSS feed, it would", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 788, "seek": 322082, "start": 3238.26, "end": 3243.7000000000003, "text": " be nice to know, is it allowed to make HTTP requests or not and be able to explicitly", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 789, "seek": 322082, "start": 3243.7000000000003, "end": 3245.5, "text": " give it permission for what it can do.", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 790, "seek": 322082, "start": 3245.5, "end": 3247.1000000000004, "text": " There are other ways to achieve that effect, though.", "tokens": [50364, 286, 600, 1194, 466, 1228, 257, 5102, 411, 341, 337, 257, 1333, 295, 23407, 9482, 337, 16552, 50656, 50656, 4084, 17401, 337, 2699, 76, 7183, 11, 570, 498, 291, 434, 10205, 257, 13437, 33283, 5308, 420, 11, 50992, 50992, 291, 458, 11, 721, 411, 300, 11, 498, 291, 992, 493, 257, 7372, 300, 23815, 364, 497, 21929, 3154, 11, 309, 576, 51236, 51236, 312, 1481, 281, 458, 11, 307, 309, 4350, 281, 652, 33283, 12475, 420, 406, 293, 312, 1075, 281, 20803, 51508, 51508, 976, 309, 11226, 337, 437, 309, 393, 360, 13, 51598, 51598, 821, 366, 661, 2098, 281, 4584, 300, 1802, 11, 1673, 13, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.10986726934259589, "compression_ratio": 1.63003663003663, "no_caption_prob": 4.069347778568044e-05}, {"id": 791, "seek": 324710, "start": 3247.1, "end": 3253.18, "text": " Like you could just not perform any requests that it performs except a particular wrapped", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 792, "seek": 324710, "start": 3253.18, "end": 3256.66, "text": " type and you have to pass in the request it can perform.", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 793, "seek": 324710, "start": 3256.66, "end": 3260.18, "text": " So you could pass in a reference to HTTP.", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 794, "seek": 324710, "start": 3260.18, "end": 3262.3399999999997, "text": " And anyway, there are other ways to achieve that effect.", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 795, "seek": 324710, "start": 3262.3399999999997, "end": 3263.3399999999997, "text": " Yeah.", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 796, "seek": 324710, "start": 3263.3399999999997, "end": 3269.02, "text": " And one other use of that pattern is if you need to process those effects in different", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 797, "seek": 324710, "start": 3269.02, "end": 3270.94, "text": " ways in different contexts.", "tokens": [50364, 1743, 291, 727, 445, 406, 2042, 604, 12475, 300, 309, 26213, 3993, 257, 1729, 14226, 50668, 50668, 2010, 293, 291, 362, 281, 1320, 294, 264, 5308, 309, 393, 2042, 13, 50842, 50842, 407, 291, 727, 1320, 294, 257, 6408, 281, 33283, 13, 51018, 51018, 400, 4033, 11, 456, 366, 661, 2098, 281, 4584, 300, 1802, 13, 51126, 51126, 865, 13, 51176, 51176, 400, 472, 661, 764, 295, 300, 5102, 307, 498, 291, 643, 281, 1399, 729, 5065, 294, 819, 51460, 51460, 2098, 294, 819, 30628, 13, 51556, 51556], "temperature": 0.0, "avg_logprob": -0.13775802188449435, "compression_ratio": 1.6944444444444444, "no_caption_prob": 4.637827260012273e-06}, {"id": 798, "seek": 327094, "start": 3270.94, "end": 3277.54, "text": " So an example would maybe you have some kind of like, admin tool that lets you like, configure", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 799, "seek": 327094, "start": 3277.54, "end": 3278.7200000000003, "text": " the forms.", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 800, "seek": 327094, "start": 3278.7200000000003, "end": 3284.14, "text": " And actually, we did this at No Red Ink, we had an assignment that students could do.", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 801, "seek": 327094, "start": 3284.14, "end": 3288.58, "text": " And normally it would like, you know, send data to the back end, here's the work they've", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 802, "seek": 327094, "start": 3288.58, "end": 3291.14, "text": " done, get data from other students.", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 803, "seek": 327094, "start": 3291.14, "end": 3295.58, "text": " But we also wanted a preview mode where teachers could play around with the assignment, and", "tokens": [50364, 407, 364, 1365, 576, 1310, 291, 362, 512, 733, 295, 411, 11, 24236, 2290, 300, 6653, 291, 411, 11, 22162, 50694, 50694, 264, 6422, 13, 50753, 50753, 400, 767, 11, 321, 630, 341, 412, 883, 4477, 31147, 11, 321, 632, 364, 15187, 300, 1731, 727, 360, 13, 51024, 51024, 400, 5646, 309, 576, 411, 11, 291, 458, 11, 2845, 1412, 281, 264, 646, 917, 11, 510, 311, 264, 589, 436, 600, 51246, 51246, 1096, 11, 483, 1412, 490, 661, 1731, 13, 51374, 51374, 583, 321, 611, 1415, 257, 14281, 4391, 689, 6023, 727, 862, 926, 365, 264, 15187, 11, 293, 51596, 51596], "temperature": 0.0, "avg_logprob": -0.15845933327308068, "compression_ratio": 1.632, "no_caption_prob": 2.6686657292884775e-05}, {"id": 804, "seek": 329558, "start": 3295.58, "end": 3301.06, "text": " also like simulate other students doing work that would like get sent to you and things", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 805, "seek": 329558, "start": 3301.06, "end": 3302.06, "text": " like that.", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 806, "seek": 329558, "start": 3302.06, "end": 3307.58, "text": " So that was a case where having an effect type as data was useful, because we can interpret", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 807, "seek": 329558, "start": 3307.58, "end": 3312.06, "text": " those effects in different ways in the real mode for the students doing the work, we would", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 808, "seek": 329558, "start": 3312.06, "end": 3317.2599999999998, "text": " send the HTTP requests in the preview mode, we have a different interpreter that basically", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 809, "seek": 329558, "start": 3317.2599999999998, "end": 3320.02, "text": " like uses a fake preview data structure.", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 810, "seek": 329558, "start": 3320.02, "end": 3324.7, "text": " And we can trigger different effects from like an extra panel of buttons for the teacher", "tokens": [50364, 611, 411, 27817, 661, 1731, 884, 589, 300, 576, 411, 483, 2279, 281, 291, 293, 721, 50638, 50638, 411, 300, 13, 50688, 50688, 407, 300, 390, 257, 1389, 689, 1419, 364, 1802, 2010, 382, 1412, 390, 4420, 11, 570, 321, 393, 7302, 50964, 50964, 729, 5065, 294, 819, 2098, 294, 264, 957, 4391, 337, 264, 1731, 884, 264, 589, 11, 321, 576, 51188, 51188, 2845, 264, 33283, 12475, 294, 264, 14281, 4391, 11, 321, 362, 257, 819, 34132, 300, 1936, 51448, 51448, 411, 4960, 257, 7592, 14281, 1412, 3877, 13, 51586, 51586, 400, 321, 393, 7875, 819, 5065, 490, 411, 364, 2857, 4831, 295, 9905, 337, 264, 5027, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.08228038890021187, "compression_ratio": 1.8388278388278387, "no_caption_prob": 3.6477038520388305e-05}, {"id": 811, "seek": 332470, "start": 3324.7, "end": 3325.7, "text": " to explore.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 812, "seek": 332470, "start": 3325.7, "end": 3331.06, "text": " So that's that's a case where you need this pattern, but also a relatively rare one, like", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 813, "seek": 332470, "start": 3331.06, "end": 3335.7799999999997, "text": " occasionally, you'll be doing where you need that capability, but not often.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 814, "seek": 332470, "start": 3335.7799999999997, "end": 3336.7799999999997, "text": " That's cool.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 815, "seek": 332470, "start": 3336.7799999999997, "end": 3342.22, "text": " I can imagine like wanting to have like security audit log or something of all of the particular", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 816, "seek": 332470, "start": 3342.22, "end": 3343.54, "text": " effects that have been performed.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 817, "seek": 332470, "start": 3343.54, "end": 3348.1, "text": " And so you could have a loggable chain of those things and be able to trace them.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 818, "seek": 332470, "start": 3348.1, "end": 3350.48, "text": " That's that's a really interesting thing to think about.", "tokens": [50364, 281, 6839, 13, 50414, 50414, 407, 300, 311, 300, 311, 257, 1389, 689, 291, 643, 341, 5102, 11, 457, 611, 257, 7226, 5892, 472, 11, 411, 50682, 50682, 16895, 11, 291, 603, 312, 884, 689, 291, 643, 300, 13759, 11, 457, 406, 2049, 13, 50918, 50918, 663, 311, 1627, 13, 50968, 50968, 286, 393, 3811, 411, 7935, 281, 362, 411, 3825, 17748, 3565, 420, 746, 295, 439, 295, 264, 1729, 51240, 51240, 5065, 300, 362, 668, 10332, 13, 51306, 51306, 400, 370, 291, 727, 362, 257, 450, 1615, 712, 5021, 295, 729, 721, 293, 312, 1075, 281, 13508, 552, 13, 51534, 51534, 663, 311, 300, 311, 257, 534, 1880, 551, 281, 519, 466, 13, 51653, 51653], "temperature": 0.0, "avg_logprob": -0.13782381607314287, "compression_ratio": 1.7265917602996255, "no_caption_prob": 1.777817669790238e-05}, {"id": 819, "seek": 335048, "start": 3350.48, "end": 3355.78, "text": " So okay, so I want to I want to loop back and talk a little bit more about this thing", "tokens": [50364, 407, 1392, 11, 370, 286, 528, 281, 286, 528, 281, 6367, 646, 293, 751, 257, 707, 857, 544, 466, 341, 551, 50629, 50629, 291, 3038, 493, 365, 264, 1802, 5102, 365, 2699, 76, 1461, 1500, 689, 291, 434, 16141, 1228, 50913, 50913, 264, 5065, 2010, 300, 291, 6964, 382, 257, 1333, 295, 10344, 295, 257, 5622, 13, 51277, 51277, 407, 291, 600, 658, 411, 2010, 5065, 6915, 293, 550, 291, 393, 362, 572, 1802, 11, 597, 576, 312, 51487, 51487, 264, 10344, 295, 5622, 5893, 6022, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.11139378180870643, "compression_ratio": 1.6742081447963801, "no_caption_prob": 1.8342143448535353e-05}, {"id": 820, "seek": 335048, "start": 3355.78, "end": 3361.46, "text": " you brought up with the effect pattern with Elm program test where you're describing using", "tokens": [50364, 407, 1392, 11, 370, 286, 528, 281, 286, 528, 281, 6367, 646, 293, 751, 257, 707, 857, 544, 466, 341, 551, 50629, 50629, 291, 3038, 493, 365, 264, 1802, 5102, 365, 2699, 76, 1461, 1500, 689, 291, 434, 16141, 1228, 50913, 50913, 264, 5065, 2010, 300, 291, 6964, 382, 257, 1333, 295, 10344, 295, 257, 5622, 13, 51277, 51277, 407, 291, 600, 658, 411, 2010, 5065, 6915, 293, 550, 291, 393, 362, 572, 1802, 11, 597, 576, 312, 51487, 51487, 264, 10344, 295, 5622, 5893, 6022, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.11139378180870643, "compression_ratio": 1.6742081447963801, "no_caption_prob": 1.8342143448535353e-05}, {"id": 821, "seek": 335048, "start": 3361.46, "end": 3368.7400000000002, "text": " the effects type that you define as a sort of equivalent of a command.", "tokens": [50364, 407, 1392, 11, 370, 286, 528, 281, 286, 528, 281, 6367, 646, 293, 751, 257, 707, 857, 544, 466, 341, 551, 50629, 50629, 291, 3038, 493, 365, 264, 1802, 5102, 365, 2699, 76, 1461, 1500, 689, 291, 434, 16141, 1228, 50913, 50913, 264, 5065, 2010, 300, 291, 6964, 382, 257, 1333, 295, 10344, 295, 257, 5622, 13, 51277, 51277, 407, 291, 600, 658, 411, 2010, 5065, 6915, 293, 550, 291, 393, 362, 572, 1802, 11, 597, 576, 312, 51487, 51487, 264, 10344, 295, 5622, 5893, 6022, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.11139378180870643, "compression_ratio": 1.6742081447963801, "no_caption_prob": 1.8342143448535353e-05}, {"id": 822, "seek": 335048, "start": 3368.7400000000002, "end": 3372.94, "text": " So you've got like type effects equals and then you can have no effect, which would be", "tokens": [50364, 407, 1392, 11, 370, 286, 528, 281, 286, 528, 281, 6367, 646, 293, 751, 257, 707, 857, 544, 466, 341, 551, 50629, 50629, 291, 3038, 493, 365, 264, 1802, 5102, 365, 2699, 76, 1461, 1500, 689, 291, 434, 16141, 1228, 50913, 50913, 264, 5065, 2010, 300, 291, 6964, 382, 257, 1333, 295, 10344, 295, 257, 5622, 13, 51277, 51277, 407, 291, 600, 658, 411, 2010, 5065, 6915, 293, 550, 291, 393, 362, 572, 1802, 11, 597, 576, 312, 51487, 51487, 264, 10344, 295, 5622, 5893, 6022, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.11139378180870643, "compression_ratio": 1.6742081447963801, "no_caption_prob": 1.8342143448535353e-05}, {"id": 823, "seek": 335048, "start": 3372.94, "end": 3375.1, "text": " the equivalent of command dot none.", "tokens": [50364, 407, 1392, 11, 370, 286, 528, 281, 286, 528, 281, 6367, 646, 293, 751, 257, 707, 857, 544, 466, 341, 551, 50629, 50629, 291, 3038, 493, 365, 264, 1802, 5102, 365, 2699, 76, 1461, 1500, 689, 291, 434, 16141, 1228, 50913, 50913, 264, 5065, 2010, 300, 291, 6964, 382, 257, 1333, 295, 10344, 295, 257, 5622, 13, 51277, 51277, 407, 291, 600, 658, 411, 2010, 5065, 6915, 293, 550, 291, 393, 362, 572, 1802, 11, 597, 576, 312, 51487, 51487, 264, 10344, 295, 5622, 5893, 6022, 13, 51595, 51595], "temperature": 0.0, "avg_logprob": -0.11139378180870643, "compression_ratio": 1.6742081447963801, "no_caption_prob": 1.8342143448535353e-05}, {"id": 824, "seek": 337510, "start": 3375.1, "end": 3381.42, "text": " And then you can have sort of instead of get to do's that specific message to make that", "tokens": [50364, 400, 550, 291, 393, 362, 1333, 295, 2602, 295, 483, 281, 360, 311, 300, 2685, 3636, 281, 652, 300, 50680, 50680, 33283, 5308, 337, 1242, 281, 360, 311, 11, 291, 434, 1566, 291, 727, 362, 257, 544, 2674, 472, 13, 50938, 50938, 400, 370, 291, 393, 362, 411, 257, 483, 1412, 1802, 300, 575, 300, 2516, 257, 12905, 382, 644, 295, 1080, 30918, 51362, 51362, 295, 300, 47479, 293, 309, 2516, 257, 979, 19866, 13, 51526, 51526, 407, 456, 311, 364, 1365, 300, 321, 603, 2113, 281, 294, 264, 855, 5570, 490, 264, 2699, 76, 1461, 1500, 5110, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.09630149018530752, "compression_ratio": 1.646090534979424, "no_caption_prob": 6.24081758360262e-06}, {"id": 825, "seek": 337510, "start": 3381.42, "end": 3386.58, "text": " HTTP request for getting to do's, you're saying you could have a more general one.", "tokens": [50364, 400, 550, 291, 393, 362, 1333, 295, 2602, 295, 483, 281, 360, 311, 300, 2685, 3636, 281, 652, 300, 50680, 50680, 33283, 5308, 337, 1242, 281, 360, 311, 11, 291, 434, 1566, 291, 727, 362, 257, 544, 2674, 472, 13, 50938, 50938, 400, 370, 291, 393, 362, 411, 257, 483, 1412, 1802, 300, 575, 300, 2516, 257, 12905, 382, 644, 295, 1080, 30918, 51362, 51362, 295, 300, 47479, 293, 309, 2516, 257, 979, 19866, 13, 51526, 51526, 407, 456, 311, 364, 1365, 300, 321, 603, 2113, 281, 294, 264, 855, 5570, 490, 264, 2699, 76, 1461, 1500, 5110, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.09630149018530752, "compression_ratio": 1.646090534979424, "no_caption_prob": 6.24081758360262e-06}, {"id": 826, "seek": 337510, "start": 3386.58, "end": 3395.06, "text": " And so you can have like a get data effect that has that takes a URL as part of its payload", "tokens": [50364, 400, 550, 291, 393, 362, 1333, 295, 2602, 295, 483, 281, 360, 311, 300, 2685, 3636, 281, 652, 300, 50680, 50680, 33283, 5308, 337, 1242, 281, 360, 311, 11, 291, 434, 1566, 291, 727, 362, 257, 544, 2674, 472, 13, 50938, 50938, 400, 370, 291, 393, 362, 411, 257, 483, 1412, 1802, 300, 575, 300, 2516, 257, 12905, 382, 644, 295, 1080, 30918, 51362, 51362, 295, 300, 47479, 293, 309, 2516, 257, 979, 19866, 13, 51526, 51526, 407, 456, 311, 364, 1365, 300, 321, 603, 2113, 281, 294, 264, 855, 5570, 490, 264, 2699, 76, 1461, 1500, 5110, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.09630149018530752, "compression_ratio": 1.646090534979424, "no_caption_prob": 6.24081758360262e-06}, {"id": 827, "seek": 337510, "start": 3395.06, "end": 3398.3399999999997, "text": " of that constructor and it takes a decoder.", "tokens": [50364, 400, 550, 291, 393, 362, 1333, 295, 2602, 295, 483, 281, 360, 311, 300, 2685, 3636, 281, 652, 300, 50680, 50680, 33283, 5308, 337, 1242, 281, 360, 311, 11, 291, 434, 1566, 291, 727, 362, 257, 544, 2674, 472, 13, 50938, 50938, 400, 370, 291, 393, 362, 411, 257, 483, 1412, 1802, 300, 575, 300, 2516, 257, 12905, 382, 644, 295, 1080, 30918, 51362, 51362, 295, 300, 47479, 293, 309, 2516, 257, 979, 19866, 13, 51526, 51526, 407, 456, 311, 364, 1365, 300, 321, 603, 2113, 281, 294, 264, 855, 5570, 490, 264, 2699, 76, 1461, 1500, 5110, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.09630149018530752, "compression_ratio": 1.646090534979424, "no_caption_prob": 6.24081758360262e-06}, {"id": 828, "seek": 337510, "start": 3398.3399999999997, "end": 3403.54, "text": " So there's an example that we'll link to in the show notes from the Elm program test examples", "tokens": [50364, 400, 550, 291, 393, 362, 1333, 295, 2602, 295, 483, 281, 360, 311, 300, 2685, 3636, 281, 652, 300, 50680, 50680, 33283, 5308, 337, 1242, 281, 360, 311, 11, 291, 434, 1566, 291, 727, 362, 257, 544, 2674, 472, 13, 50938, 50938, 400, 370, 291, 393, 362, 411, 257, 483, 1412, 1802, 300, 575, 300, 2516, 257, 12905, 382, 644, 295, 1080, 30918, 51362, 51362, 295, 300, 47479, 293, 309, 2516, 257, 979, 19866, 13, 51526, 51526, 407, 456, 311, 364, 1365, 300, 321, 603, 2113, 281, 294, 264, 855, 5570, 490, 264, 2699, 76, 1461, 1500, 5110, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.09630149018530752, "compression_ratio": 1.646090534979424, "no_caption_prob": 6.24081758360262e-06}, {"id": 829, "seek": 340354, "start": 3403.54, "end": 3408.42, "text": " folder that sort of shows effects using HTTP simulations.", "tokens": [50364, 10820, 300, 1333, 295, 3110, 5065, 1228, 33283, 35138, 13, 50608, 50608, 583, 577, 360, 291, 5042, 1419, 2010, 9102, 294, 428, 1802, 2010, 420, 420, 360, 291, 445, 362, 50916, 50916, 281, 7988, 264, 11632, 293, 362, 257, 483, 1412, 337, 633, 2685, 1412, 2010, 300, 2170, 8752, 30, 51252, 51252, 865, 11, 570, 558, 11, 291, 643, 819, 411, 294, 472, 1389, 11, 1310, 291, 362, 472, 5308, 689, 51489, 51489, 291, 362, 257, 979, 19866, 300, 979, 4789, 5022, 293, 294, 1071, 5308, 11, 291, 362, 257, 979, 19866, 300, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14155514707270356, "compression_ratio": 1.7215189873417722, "no_caption_prob": 4.157332114118617e-06}, {"id": 830, "seek": 340354, "start": 3408.42, "end": 3414.58, "text": " But how do you avoid having type variables in your effect type or or do you just have", "tokens": [50364, 10820, 300, 1333, 295, 3110, 5065, 1228, 33283, 35138, 13, 50608, 50608, 583, 577, 360, 291, 5042, 1419, 2010, 9102, 294, 428, 1802, 2010, 420, 420, 360, 291, 445, 362, 50916, 50916, 281, 7988, 264, 11632, 293, 362, 257, 483, 1412, 337, 633, 2685, 1412, 2010, 300, 2170, 8752, 30, 51252, 51252, 865, 11, 570, 558, 11, 291, 643, 819, 411, 294, 472, 1389, 11, 1310, 291, 362, 472, 5308, 689, 51489, 51489, 291, 362, 257, 979, 19866, 300, 979, 4789, 5022, 293, 294, 1071, 5308, 11, 291, 362, 257, 979, 19866, 300, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14155514707270356, "compression_ratio": 1.7215189873417722, "no_caption_prob": 4.157332114118617e-06}, {"id": 831, "seek": 340354, "start": 3414.58, "end": 3421.3, "text": " to bite the bullet and have a get data for every specific data type that gets returned?", "tokens": [50364, 10820, 300, 1333, 295, 3110, 5065, 1228, 33283, 35138, 13, 50608, 50608, 583, 577, 360, 291, 5042, 1419, 2010, 9102, 294, 428, 1802, 2010, 420, 420, 360, 291, 445, 362, 50916, 50916, 281, 7988, 264, 11632, 293, 362, 257, 483, 1412, 337, 633, 2685, 1412, 2010, 300, 2170, 8752, 30, 51252, 51252, 865, 11, 570, 558, 11, 291, 643, 819, 411, 294, 472, 1389, 11, 1310, 291, 362, 472, 5308, 689, 51489, 51489, 291, 362, 257, 979, 19866, 300, 979, 4789, 5022, 293, 294, 1071, 5308, 11, 291, 362, 257, 979, 19866, 300, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14155514707270356, "compression_ratio": 1.7215189873417722, "no_caption_prob": 4.157332114118617e-06}, {"id": 832, "seek": 340354, "start": 3421.3, "end": 3426.04, "text": " Yeah, because right, you need different like in one case, maybe you have one request where", "tokens": [50364, 10820, 300, 1333, 295, 3110, 5065, 1228, 33283, 35138, 13, 50608, 50608, 583, 577, 360, 291, 5042, 1419, 2010, 9102, 294, 428, 1802, 2010, 420, 420, 360, 291, 445, 362, 50916, 50916, 281, 7988, 264, 11632, 293, 362, 257, 483, 1412, 337, 633, 2685, 1412, 2010, 300, 2170, 8752, 30, 51252, 51252, 865, 11, 570, 558, 11, 291, 643, 819, 411, 294, 472, 1389, 11, 1310, 291, 362, 472, 5308, 689, 51489, 51489, 291, 362, 257, 979, 19866, 300, 979, 4789, 5022, 293, 294, 1071, 5308, 11, 291, 362, 257, 979, 19866, 300, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14155514707270356, "compression_ratio": 1.7215189873417722, "no_caption_prob": 4.157332114118617e-06}, {"id": 833, "seek": 340354, "start": 3426.04, "end": 3432.06, "text": " you have a decoder that decodes users and in another request, you have a decoder that", "tokens": [50364, 10820, 300, 1333, 295, 3110, 5065, 1228, 33283, 35138, 13, 50608, 50608, 583, 577, 360, 291, 5042, 1419, 2010, 9102, 294, 428, 1802, 2010, 420, 420, 360, 291, 445, 362, 50916, 50916, 281, 7988, 264, 11632, 293, 362, 257, 483, 1412, 337, 633, 2685, 1412, 2010, 300, 2170, 8752, 30, 51252, 51252, 865, 11, 570, 558, 11, 291, 643, 819, 411, 294, 472, 1389, 11, 1310, 291, 362, 472, 5308, 689, 51489, 51489, 291, 362, 257, 979, 19866, 300, 979, 4789, 5022, 293, 294, 1071, 5308, 11, 291, 362, 257, 979, 19866, 300, 51790, 51790], "temperature": 0.0, "avg_logprob": -0.14155514707270356, "compression_ratio": 1.7215189873417722, "no_caption_prob": 4.157332114118617e-06}, {"id": 834, "seek": 343206, "start": 3432.06, "end": 3436.74, "text": " decodes account information or yeah, to do to do it.", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 835, "seek": 343206, "start": 3436.74, "end": 3437.74, "text": " Exactly.", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 836, "seek": 343206, "start": 3437.74, "end": 3440.74, "text": " Yeah, so I need to I need to make a good example.", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 837, "seek": 343206, "start": 3440.74, "end": 3448.38, "text": " The example we're like to is kind of written as the simple way to do things and straightforward.", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 838, "seek": 343206, "start": 3448.38, "end": 3455.58, "text": " So there's not a ton of discussion, because the HTTP API in Elm is unfortunately a bit", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 839, "seek": 343206, "start": 3455.58, "end": 3457.42, "text": " tedious to work with.", "tokens": [50364, 979, 4789, 2696, 1589, 420, 1338, 11, 281, 360, 281, 360, 309, 13, 50598, 50598, 7587, 13, 50648, 50648, 865, 11, 370, 286, 643, 281, 286, 643, 281, 652, 257, 665, 1365, 13, 50798, 50798, 440, 1365, 321, 434, 411, 281, 307, 733, 295, 3720, 382, 264, 2199, 636, 281, 360, 721, 293, 15325, 13, 51180, 51180, 407, 456, 311, 406, 257, 2952, 295, 5017, 11, 570, 264, 33283, 9362, 294, 2699, 76, 307, 7015, 257, 857, 51540, 51540, 38284, 281, 589, 365, 13, 51632, 51632], "temperature": 0.0, "avg_logprob": -0.21766571565107865, "compression_ratio": 1.488262910798122, "no_caption_prob": 7.2962820922839455e-06}, {"id": 840, "seek": 345742, "start": 3457.42, "end": 3462.94, "text": " There's a whole bunch of different types and like if you're doing if you're making tasks", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 841, "seek": 345742, "start": 3462.94, "end": 3467.3, "text": " versus commands, there's different there's like the expect type, but then there's also", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 842, "seek": 345742, "start": 3467.3, "end": 3471.62, "text": " some other type that I'm forgetting the name of.", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 843, "seek": 345742, "start": 3471.62, "end": 3473.82, "text": " So anyway, there is a way to deal with that.", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 844, "seek": 345742, "start": 3473.82, "end": 3480.5, "text": " The way you end up doing it is the effect type would have for instance, like an HTTP", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 845, "seek": 345742, "start": 3480.5, "end": 3485.78, "text": " request constructor, right, it would have the payload that it need the headers have", "tokens": [50364, 821, 311, 257, 1379, 3840, 295, 819, 3467, 293, 411, 498, 291, 434, 884, 498, 291, 434, 1455, 9608, 50640, 50640, 5717, 16901, 11, 456, 311, 819, 456, 311, 411, 264, 2066, 2010, 11, 457, 550, 456, 311, 611, 50858, 50858, 512, 661, 2010, 300, 286, 478, 25428, 264, 1315, 295, 13, 51074, 51074, 407, 4033, 11, 456, 307, 257, 636, 281, 2028, 365, 300, 13, 51184, 51184, 440, 636, 291, 917, 493, 884, 309, 307, 264, 1802, 2010, 576, 362, 337, 5197, 11, 411, 364, 33283, 51518, 51518, 5308, 47479, 11, 558, 11, 309, 576, 362, 264, 30918, 300, 309, 643, 264, 45101, 362, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.12105649545652057, "compression_ratio": 1.7590361445783131, "no_caption_prob": 2.5464802092756145e-05}, {"id": 846, "seek": 348578, "start": 3485.78, "end": 3491.5, "text": " the method and the way you end up doing it is you have a decoder that decodes messages.", "tokens": [50364, 264, 3170, 293, 264, 636, 291, 917, 493, 884, 309, 307, 291, 362, 257, 979, 19866, 300, 979, 4789, 7897, 13, 50650, 50650, 400, 550, 291, 611, 362, 257, 4994, 2445, 300, 2516, 364, 33283, 6713, 293, 11247, 257, 3636, 13, 50990, 50990, 400, 550, 291, 611, 362, 264, 1772, 300, 2516, 257, 31828, 2158, 13, 51260, 51260, 407, 291, 1936, 411, 7633, 439, 295, 428, 5308, 2685, 3467, 2261, 31828, 293, 2261, 3636, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.05501384372952618, "compression_ratio": 1.7150259067357514, "no_caption_prob": 1.3211561054049525e-05}, {"id": 847, "seek": 348578, "start": 3491.5, "end": 3498.3, "text": " And then you also have a separate function that takes an HTTP error and returns a message.", "tokens": [50364, 264, 3170, 293, 264, 636, 291, 917, 493, 884, 309, 307, 291, 362, 257, 979, 19866, 300, 979, 4789, 7897, 13, 50650, 50650, 400, 550, 291, 611, 362, 257, 4994, 2445, 300, 2516, 364, 33283, 6713, 293, 11247, 257, 3636, 13, 50990, 50990, 400, 550, 291, 611, 362, 264, 1772, 300, 2516, 257, 31828, 2158, 13, 51260, 51260, 407, 291, 1936, 411, 7633, 439, 295, 428, 5308, 2685, 3467, 2261, 31828, 293, 2261, 3636, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.05501384372952618, "compression_ratio": 1.7150259067357514, "no_caption_prob": 1.3211561054049525e-05}, {"id": 848, "seek": 348578, "start": 3498.3, "end": 3503.7000000000003, "text": " And then you also have the body that takes a JSON value.", "tokens": [50364, 264, 3170, 293, 264, 636, 291, 917, 493, 884, 309, 307, 291, 362, 257, 979, 19866, 300, 979, 4789, 7897, 13, 50650, 50650, 400, 550, 291, 611, 362, 257, 4994, 2445, 300, 2516, 364, 33283, 6713, 293, 11247, 257, 3636, 13, 50990, 50990, 400, 550, 291, 611, 362, 264, 1772, 300, 2516, 257, 31828, 2158, 13, 51260, 51260, 407, 291, 1936, 411, 7633, 439, 295, 428, 5308, 2685, 3467, 2261, 31828, 293, 2261, 3636, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.05501384372952618, "compression_ratio": 1.7150259067357514, "no_caption_prob": 1.3211561054049525e-05}, {"id": 849, "seek": 348578, "start": 3503.7000000000003, "end": 3511.88, "text": " So you basically like hidden all of your request specific types behind JSON and behind message.", "tokens": [50364, 264, 3170, 293, 264, 636, 291, 917, 493, 884, 309, 307, 291, 362, 257, 979, 19866, 300, 979, 4789, 7897, 13, 50650, 50650, 400, 550, 291, 611, 362, 257, 4994, 2445, 300, 2516, 364, 33283, 6713, 293, 11247, 257, 3636, 13, 50990, 50990, 400, 550, 291, 611, 362, 264, 1772, 300, 2516, 257, 31828, 2158, 13, 51260, 51260, 407, 291, 1936, 411, 7633, 439, 295, 428, 5308, 2685, 3467, 2261, 31828, 293, 2261, 3636, 13, 51669, 51669], "temperature": 0.0, "avg_logprob": -0.05501384372952618, "compression_ratio": 1.7150259067357514, "no_caption_prob": 1.3211561054049525e-05}, {"id": 850, "seek": 351188, "start": 3511.88, "end": 3517.0, "text": " So that tedious to call directly, but then you make a helper function that can that basically", "tokens": [50364, 407, 300, 38284, 281, 818, 3838, 11, 457, 550, 291, 652, 257, 36133, 2445, 300, 393, 300, 1936, 50620, 50620, 775, 747, 264, 979, 19866, 295, 2010, 257, 11, 264, 2445, 295, 2010, 257, 281, 3636, 420, 8535, 356, 264, 50939, 50939, 2445, 295, 1874, 33283, 6713, 257, 281, 3636, 11, 293, 550, 309, 15182, 264, 3539, 9834, 281, 51311, 51311, 264, 1802, 2361, 322, 729, 293, 309, 576, 312, 411, 715, 6110, 264, 979, 19866, 365, 264, 2445, 51570, 51570, 300, 2516, 264, 257, 2158, 293, 4523, 309, 666, 257, 3636, 293, 5314, 493, 445, 26085, 264, 979, 19866, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.11070320239433876, "compression_ratio": 1.8734177215189873, "no_caption_prob": 6.144027793197893e-06}, {"id": 851, "seek": 351188, "start": 3517.0, "end": 3523.38, "text": " does take the decoder of type a, the function of type a to message or alternatively the", "tokens": [50364, 407, 300, 38284, 281, 818, 3838, 11, 457, 550, 291, 652, 257, 36133, 2445, 300, 393, 300, 1936, 50620, 50620, 775, 747, 264, 979, 19866, 295, 2010, 257, 11, 264, 2445, 295, 2010, 257, 281, 3636, 420, 8535, 356, 264, 50939, 50939, 2445, 295, 1874, 33283, 6713, 257, 281, 3636, 11, 293, 550, 309, 15182, 264, 3539, 9834, 281, 51311, 51311, 264, 1802, 2361, 322, 729, 293, 309, 576, 312, 411, 715, 6110, 264, 979, 19866, 365, 264, 2445, 51570, 51570, 300, 2516, 264, 257, 2158, 293, 4523, 309, 666, 257, 3636, 293, 5314, 493, 445, 26085, 264, 979, 19866, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.11070320239433876, "compression_ratio": 1.8734177215189873, "no_caption_prob": 6.144027793197893e-06}, {"id": 852, "seek": 351188, "start": 3523.38, "end": 3530.82, "text": " function of result HTTP error a to message, and then it builds the actual parameters to", "tokens": [50364, 407, 300, 38284, 281, 818, 3838, 11, 457, 550, 291, 652, 257, 36133, 2445, 300, 393, 300, 1936, 50620, 50620, 775, 747, 264, 979, 19866, 295, 2010, 257, 11, 264, 2445, 295, 2010, 257, 281, 3636, 420, 8535, 356, 264, 50939, 50939, 2445, 295, 1874, 33283, 6713, 257, 281, 3636, 11, 293, 550, 309, 15182, 264, 3539, 9834, 281, 51311, 51311, 264, 1802, 2361, 322, 729, 293, 309, 576, 312, 411, 715, 6110, 264, 979, 19866, 365, 264, 2445, 51570, 51570, 300, 2516, 264, 257, 2158, 293, 4523, 309, 666, 257, 3636, 293, 5314, 493, 445, 26085, 264, 979, 19866, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.11070320239433876, "compression_ratio": 1.8734177215189873, "no_caption_prob": 6.144027793197893e-06}, {"id": 853, "seek": 351188, "start": 3530.82, "end": 3536.0, "text": " the effect based on those and it would be like composing the decoder with the function", "tokens": [50364, 407, 300, 38284, 281, 818, 3838, 11, 457, 550, 291, 652, 257, 36133, 2445, 300, 393, 300, 1936, 50620, 50620, 775, 747, 264, 979, 19866, 295, 2010, 257, 11, 264, 2445, 295, 2010, 257, 281, 3636, 420, 8535, 356, 264, 50939, 50939, 2445, 295, 1874, 33283, 6713, 257, 281, 3636, 11, 293, 550, 309, 15182, 264, 3539, 9834, 281, 51311, 51311, 264, 1802, 2361, 322, 729, 293, 309, 576, 312, 411, 715, 6110, 264, 979, 19866, 365, 264, 2445, 51570, 51570, 300, 2516, 264, 257, 2158, 293, 4523, 309, 666, 257, 3636, 293, 5314, 493, 445, 26085, 264, 979, 19866, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.11070320239433876, "compression_ratio": 1.8734177215189873, "no_caption_prob": 6.144027793197893e-06}, {"id": 854, "seek": 351188, "start": 3536.0, "end": 3540.6400000000003, "text": " that takes the a value and turns it into a message and ends up just storing the decoder", "tokens": [50364, 407, 300, 38284, 281, 818, 3838, 11, 457, 550, 291, 652, 257, 36133, 2445, 300, 393, 300, 1936, 50620, 50620, 775, 747, 264, 979, 19866, 295, 2010, 257, 11, 264, 2445, 295, 2010, 257, 281, 3636, 420, 8535, 356, 264, 50939, 50939, 2445, 295, 1874, 33283, 6713, 257, 281, 3636, 11, 293, 550, 309, 15182, 264, 3539, 9834, 281, 51311, 51311, 264, 1802, 2361, 322, 729, 293, 309, 576, 312, 411, 715, 6110, 264, 979, 19866, 365, 264, 2445, 51570, 51570, 300, 2516, 264, 257, 2158, 293, 4523, 309, 666, 257, 3636, 293, 5314, 493, 445, 26085, 264, 979, 19866, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.11070320239433876, "compression_ratio": 1.8734177215189873, "no_caption_prob": 6.144027793197893e-06}, {"id": 855, "seek": 354064, "start": 3540.64, "end": 3543.06, "text": " of message in the effect type.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 856, "seek": 354064, "start": 3543.06, "end": 3547.66, "text": " So that's that's the trick you can use to essentially hide things that like in Haskell,", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 857, "seek": 354064, "start": 3547.66, "end": 3550.72, "text": " you could deal with that with rank two types and things like that.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 858, "seek": 354064, "start": 3550.72, "end": 3555.6, "text": " But in now, you have to have a helper function that has those extra parameters, but then", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 859, "seek": 354064, "start": 3555.6, "end": 3559.74, "text": " collapses them and return something that doesn't care about those parameters anymore.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 860, "seek": 354064, "start": 3559.74, "end": 3560.74, "text": " Mm hmm.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 861, "seek": 354064, "start": 3560.74, "end": 3561.74, "text": " Cool.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 862, "seek": 354064, "start": 3561.74, "end": 3563.42, "text": " Yeah, I have I have an example that I can link to.", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 863, "seek": 354064, "start": 3563.42, "end": 3566.98, "text": " I don't I don't think there's an example of this in the own program test examples at the", "tokens": [50364, 295, 3636, 294, 264, 1802, 2010, 13, 50485, 50485, 407, 300, 311, 300, 311, 264, 4282, 291, 393, 764, 281, 4476, 6479, 721, 300, 411, 294, 8646, 43723, 11, 50715, 50715, 291, 727, 2028, 365, 300, 365, 6181, 732, 3467, 293, 721, 411, 300, 13, 50868, 50868, 583, 294, 586, 11, 291, 362, 281, 362, 257, 36133, 2445, 300, 575, 729, 2857, 9834, 11, 457, 550, 51112, 51112, 48765, 552, 293, 2736, 746, 300, 1177, 380, 1127, 466, 729, 9834, 3602, 13, 51319, 51319, 8266, 16478, 13, 51369, 51369, 8561, 13, 51419, 51419, 865, 11, 286, 362, 286, 362, 364, 1365, 300, 286, 393, 2113, 281, 13, 51503, 51503, 286, 500, 380, 286, 500, 380, 519, 456, 311, 364, 1365, 295, 341, 294, 264, 1065, 1461, 1500, 5110, 412, 264, 51681, 51681], "temperature": 0.0, "avg_logprob": -0.15259236008373658, "compression_ratio": 1.7847222222222223, "no_caption_prob": 3.321350595797412e-05}, {"id": 864, "seek": 356698, "start": 3566.98, "end": 3571.98, "text": " moment, but I've got an example that I can link to that uses that pattern that you just", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 865, "seek": 356698, "start": 3571.98, "end": 3572.98, "text": " described.", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 866, "seek": 356698, "start": 3572.98, "end": 3577.2, "text": " So yeah, that's sort of the conclusion I came to as well that you essentially the the trick", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 867, "seek": 356698, "start": 3577.2, "end": 3582.26, "text": " is that you're using instead of the specific types you're decoding to, you're decoding", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 868, "seek": 356698, "start": 3582.26, "end": 3588.7, "text": " everything to a JSON decode value, and then you're having a function that takes that JSON,", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 869, "seek": 356698, "start": 3588.7, "end": 3591.5, "text": " JSON decode value and turns it into a message.", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 870, "seek": 356698, "start": 3591.5, "end": 3593.26, "text": " Hard to wrap your brain around, but yeah.", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 871, "seek": 356698, "start": 3593.26, "end": 3594.26, "text": " Yeah.", "tokens": [50364, 1623, 11, 457, 286, 600, 658, 364, 1365, 300, 286, 393, 2113, 281, 300, 4960, 300, 5102, 300, 291, 445, 50614, 50614, 7619, 13, 50664, 50664, 407, 1338, 11, 300, 311, 1333, 295, 264, 10063, 286, 1361, 281, 382, 731, 300, 291, 4476, 264, 264, 4282, 50875, 50875, 307, 300, 291, 434, 1228, 2602, 295, 264, 2685, 3467, 291, 434, 979, 8616, 281, 11, 291, 434, 979, 8616, 51128, 51128, 1203, 281, 257, 31828, 979, 1429, 2158, 11, 293, 550, 291, 434, 1419, 257, 2445, 300, 2516, 300, 31828, 11, 51450, 51450, 31828, 979, 1429, 2158, 293, 4523, 309, 666, 257, 3636, 13, 51590, 51590, 11817, 281, 7019, 428, 3567, 926, 11, 457, 1338, 13, 51678, 51678, 865, 13, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.15059009024767372, "compression_ratio": 1.7807692307692307, "no_caption_prob": 3.8828806282253936e-05}, {"id": 872, "seek": 359426, "start": 3594.26, "end": 3600.94, "text": " And finally, it's like way more tedious than I would like because the HTTP API just has", "tokens": [50364, 400, 2721, 11, 309, 311, 411, 636, 544, 38284, 813, 286, 576, 411, 570, 264, 33283, 9362, 445, 575, 50698, 50698, 257, 733, 295, 3754, 2308, 292, 636, 295, 6260, 365, 13603, 11, 5413, 322, 428, 1900, 818, 13, 50971, 50971, 407, 457, 797, 11, 341, 307, 746, 300, 576, 445, 2584, 352, 1314, 1564, 264, 589, 281, 411, 51272, 51272, 3838, 589, 365, 16901, 833, 1500, 307, 1096, 13, 51442, 51442, 407, 1338, 11, 797, 11, 498, 2878, 2738, 281, 854, 483, 291, 11, 309, 576, 312, 4651, 11, 3571, 281, 2413, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1558216232614419, "compression_ratio": 1.5595238095238095, "no_caption_prob": 2.2473383069154806e-05}, {"id": 873, "seek": 359426, "start": 3600.94, "end": 3606.4, "text": " a kind of convoluted way of dealing with errors, depending on your exact call.", "tokens": [50364, 400, 2721, 11, 309, 311, 411, 636, 544, 38284, 813, 286, 576, 411, 570, 264, 33283, 9362, 445, 575, 50698, 50698, 257, 733, 295, 3754, 2308, 292, 636, 295, 6260, 365, 13603, 11, 5413, 322, 428, 1900, 818, 13, 50971, 50971, 407, 457, 797, 11, 341, 307, 746, 300, 576, 445, 2584, 352, 1314, 1564, 264, 589, 281, 411, 51272, 51272, 3838, 589, 365, 16901, 833, 1500, 307, 1096, 13, 51442, 51442, 407, 1338, 11, 797, 11, 498, 2878, 2738, 281, 854, 483, 291, 11, 309, 576, 312, 4651, 11, 3571, 281, 2413, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1558216232614419, "compression_ratio": 1.5595238095238095, "no_caption_prob": 2.2473383069154806e-05}, {"id": 874, "seek": 359426, "start": 3606.4, "end": 3612.42, "text": " So but again, this is something that would just completely go away once the work to like", "tokens": [50364, 400, 2721, 11, 309, 311, 411, 636, 544, 38284, 813, 286, 576, 411, 570, 264, 33283, 9362, 445, 575, 50698, 50698, 257, 733, 295, 3754, 2308, 292, 636, 295, 6260, 365, 13603, 11, 5413, 322, 428, 1900, 818, 13, 50971, 50971, 407, 457, 797, 11, 341, 307, 746, 300, 576, 445, 2584, 352, 1314, 1564, 264, 589, 281, 411, 51272, 51272, 3838, 589, 365, 16901, 833, 1500, 307, 1096, 13, 51442, 51442, 407, 1338, 11, 797, 11, 498, 2878, 2738, 281, 854, 483, 291, 11, 309, 576, 312, 4651, 11, 3571, 281, 2413, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1558216232614419, "compression_ratio": 1.5595238095238095, "no_caption_prob": 2.2473383069154806e-05}, {"id": 875, "seek": 359426, "start": 3612.42, "end": 3615.82, "text": " directly work with commands under test is done.", "tokens": [50364, 400, 2721, 11, 309, 311, 411, 636, 544, 38284, 813, 286, 576, 411, 570, 264, 33283, 9362, 445, 575, 50698, 50698, 257, 733, 295, 3754, 2308, 292, 636, 295, 6260, 365, 13603, 11, 5413, 322, 428, 1900, 818, 13, 50971, 50971, 407, 457, 797, 11, 341, 307, 746, 300, 576, 445, 2584, 352, 1314, 1564, 264, 589, 281, 411, 51272, 51272, 3838, 589, 365, 16901, 833, 1500, 307, 1096, 13, 51442, 51442, 407, 1338, 11, 797, 11, 498, 2878, 2738, 281, 854, 483, 291, 11, 309, 576, 312, 4651, 11, 3571, 281, 2413, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1558216232614419, "compression_ratio": 1.5595238095238095, "no_caption_prob": 2.2473383069154806e-05}, {"id": 876, "seek": 359426, "start": 3615.82, "end": 3620.84, "text": " So yeah, again, if anyone wants to help get you, it would be incredible, easier to finish", "tokens": [50364, 400, 2721, 11, 309, 311, 411, 636, 544, 38284, 813, 286, 576, 411, 570, 264, 33283, 9362, 445, 575, 50698, 50698, 257, 733, 295, 3754, 2308, 292, 636, 295, 6260, 365, 13603, 11, 5413, 322, 428, 1900, 818, 13, 50971, 50971, 407, 457, 797, 11, 341, 307, 746, 300, 576, 445, 2584, 352, 1314, 1564, 264, 589, 281, 411, 51272, 51272, 3838, 589, 365, 16901, 833, 1500, 307, 1096, 13, 51442, 51442, 407, 1338, 11, 797, 11, 498, 2878, 2738, 281, 854, 483, 291, 11, 309, 576, 312, 4651, 11, 3571, 281, 2413, 51693, 51693], "temperature": 0.0, "avg_logprob": -0.1558216232614419, "compression_ratio": 1.5595238095238095, "no_caption_prob": 2.2473383069154806e-05}, {"id": 877, "seek": 362084, "start": 3620.84, "end": 3625.98, "text": " that work than to figure out all the stuff we were just talking about, about how to deal", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 878, "seek": 362084, "start": 3625.98, "end": 3628.1800000000003, "text": " with the current API in your tests.", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 879, "seek": 362084, "start": 3628.1800000000003, "end": 3633.2000000000003, "text": " So we've gone pretty in depth on the effect pattern, why that's needed.", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 880, "seek": 362084, "start": 3633.2000000000003, "end": 3638.1000000000004, "text": " We've talked about simulating effects and the APIs for that.", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 881, "seek": 362084, "start": 3638.1000000000004, "end": 3643.32, "text": " We've talked about the testing pyramid, when to use unit tests versus high level tests.", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 882, "seek": 362084, "start": 3643.32, "end": 3650.02, "text": " Let's sort of do a quick round of best practices and tips and tricks to, you know, using Elm", "tokens": [50364, 300, 589, 813, 281, 2573, 484, 439, 264, 1507, 321, 645, 445, 1417, 466, 11, 466, 577, 281, 2028, 50621, 50621, 365, 264, 2190, 9362, 294, 428, 6921, 13, 50731, 50731, 407, 321, 600, 2780, 1238, 294, 7161, 322, 264, 1802, 5102, 11, 983, 300, 311, 2978, 13, 50982, 50982, 492, 600, 2825, 466, 1034, 12162, 5065, 293, 264, 21445, 337, 300, 13, 51227, 51227, 492, 600, 2825, 466, 264, 4997, 25950, 11, 562, 281, 764, 4985, 6921, 5717, 1090, 1496, 6921, 13, 51488, 51488, 961, 311, 1333, 295, 360, 257, 1702, 3098, 295, 1151, 7525, 293, 6082, 293, 11733, 281, 11, 291, 458, 11, 1228, 2699, 76, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.09589666979653495, "compression_ratio": 1.6528301886792454, "no_caption_prob": 1.568917832628358e-05}, {"id": 883, "seek": 365002, "start": 3650.02, "end": 3651.34, "text": " program test effectively.", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 884, "seek": 365002, "start": 3651.34, "end": 3652.34, "text": " Sure.", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 885, "seek": 365002, "start": 3652.34, "end": 3658.38, "text": " So one thing we didn't, we didn't touch on a lot, but kind of a huge amount of work is", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 886, "seek": 365002, "start": 3658.38, "end": 3664.54, "text": " behind the scenes in Elm program test is the types of error messages that can report about", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 887, "seek": 365002, "start": 3664.54, "end": 3666.2599999999998, "text": " your view.", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 888, "seek": 365002, "start": 3666.2599999999998, "end": 3672.46, "text": " So for instance, if you say click a button with this label, it will look for buttons", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 889, "seek": 365002, "start": 3672.46, "end": 3674.18, "text": " in a whole bunch of different ways.", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 890, "seek": 365002, "start": 3674.18, "end": 3678.5, "text": " Like it'll check for accessibility tags, it'll check for things that are actual buttons,", "tokens": [50364, 1461, 1500, 8659, 13, 50430, 50430, 4894, 13, 50480, 50480, 407, 472, 551, 321, 994, 380, 11, 321, 994, 380, 2557, 322, 257, 688, 11, 457, 733, 295, 257, 2603, 2372, 295, 589, 307, 50782, 50782, 2261, 264, 8026, 294, 2699, 76, 1461, 1500, 307, 264, 3467, 295, 6713, 7897, 300, 393, 2275, 466, 51090, 51090, 428, 1910, 13, 51176, 51176, 407, 337, 5197, 11, 498, 291, 584, 2052, 257, 2960, 365, 341, 7645, 11, 309, 486, 574, 337, 9905, 51486, 51486, 294, 257, 1379, 3840, 295, 819, 2098, 13, 51572, 51572, 1743, 309, 603, 1520, 337, 15002, 18632, 11, 309, 603, 1520, 337, 721, 300, 366, 3539, 9905, 11, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.13373640127349318, "compression_ratio": 1.6602316602316602, "no_caption_prob": 1.520632577012293e-05}, {"id": 891, "seek": 367850, "start": 3678.5, "end": 3684.86, "text": " it'll check for a button that has an image with all text in it of that text.", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 892, "seek": 367850, "start": 3684.86, "end": 3689.36, "text": " So I don't know if this is a best practice so much as just the best practice is to use", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 893, "seek": 367850, "start": 3689.36, "end": 3691.18, "text": " Elm program test.", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 894, "seek": 367850, "start": 3691.18, "end": 3696.42, "text": " It can help encourage you to write code in an accessible way.", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 895, "seek": 367850, "start": 3696.42, "end": 3701.8, "text": " Like another thing it will do is verify that you have a label for your checkbox.", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 896, "seek": 367850, "start": 3701.8, "end": 3705.92, "text": " If you want to click a checkbox and make sure that the label is hooked up in a way that", "tokens": [50364, 309, 603, 1520, 337, 257, 2960, 300, 575, 364, 3256, 365, 439, 2487, 294, 309, 295, 300, 2487, 13, 50682, 50682, 407, 286, 500, 380, 458, 498, 341, 307, 257, 1151, 3124, 370, 709, 382, 445, 264, 1151, 3124, 307, 281, 764, 50907, 50907, 2699, 76, 1461, 1500, 13, 50998, 50998, 467, 393, 854, 5373, 291, 281, 2464, 3089, 294, 364, 9515, 636, 13, 51260, 51260, 1743, 1071, 551, 309, 486, 360, 307, 16888, 300, 291, 362, 257, 7645, 337, 428, 1520, 4995, 13, 51529, 51529, 759, 291, 528, 281, 2052, 257, 1520, 4995, 293, 652, 988, 300, 264, 7645, 307, 20410, 493, 294, 257, 636, 300, 51735, 51735], "temperature": 0.0, "avg_logprob": -0.10853885100768493, "compression_ratio": 1.6546184738955823, "no_caption_prob": 1.9524792151059955e-05}, {"id": 897, "seek": 370592, "start": 3705.92, "end": 3710.94, "text": " actually works, which there's like three different ways to do it, but you can also make mistakes", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 898, "seek": 370592, "start": 3710.94, "end": 3713.46, "text": " and have it not actually work in the browser.", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 899, "seek": 370592, "start": 3713.46, "end": 3715.7400000000002, "text": " Yeah, no, those are great tips.", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 900, "seek": 370592, "start": 3715.7400000000002, "end": 3721.06, "text": " I mean, I think those are good debugging tips for just how to understand if things aren't", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 901, "seek": 370592, "start": 3721.06, "end": 3725.46, "text": " wired up, what should you be learning more about or double checking that you've done", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 902, "seek": 370592, "start": 3725.46, "end": 3726.46, "text": " correctly?", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 903, "seek": 370592, "start": 3726.46, "end": 3731.14, "text": " Do you have any opinion on how to select tags or elements?", "tokens": [50364, 767, 1985, 11, 597, 456, 311, 411, 1045, 819, 2098, 281, 360, 309, 11, 457, 291, 393, 611, 652, 8038, 50615, 50615, 293, 362, 309, 406, 767, 589, 294, 264, 11185, 13, 50741, 50741, 865, 11, 572, 11, 729, 366, 869, 6082, 13, 50855, 50855, 286, 914, 11, 286, 519, 729, 366, 665, 45592, 6082, 337, 445, 577, 281, 1223, 498, 721, 3212, 380, 51121, 51121, 27415, 493, 11, 437, 820, 291, 312, 2539, 544, 466, 420, 3834, 8568, 300, 291, 600, 1096, 51341, 51341, 8944, 30, 51391, 51391, 1144, 291, 362, 604, 4800, 322, 577, 281, 3048, 18632, 420, 4959, 30, 51625, 51625], "temperature": 0.0, "avg_logprob": -0.1419786867105736, "compression_ratio": 1.6053639846743295, "no_caption_prob": 2.1782147086923942e-05}, {"id": 904, "seek": 373114, "start": 3731.14, "end": 3737.24, "text": " So you say, select them by label, select them by text, but I know that a lot of people like", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 905, "seek": 373114, "start": 3737.24, "end": 3740.06, "text": " to use end to end tests ID.", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 906, "seek": 373114, "start": 3740.06, "end": 3747.9, "text": " So a specific attribute, for instance, at Humio, we call it end to end dash ID, and", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 907, "seek": 373114, "start": 3747.9, "end": 3750.74, "text": " we only use those for tests.", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 908, "seek": 373114, "start": 3750.74, "end": 3751.74, "text": " Yeah.", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 909, "seek": 373114, "start": 3751.74, "end": 3757.58, "text": " So I think like the goal of Elm program test is to avoid needing those things in a lot", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 910, "seek": 373114, "start": 3757.58, "end": 3760.7, "text": " of cases, specifically like with buttons.", "tokens": [50364, 407, 291, 584, 11, 3048, 552, 538, 7645, 11, 3048, 552, 538, 2487, 11, 457, 286, 458, 300, 257, 688, 295, 561, 411, 50669, 50669, 281, 764, 917, 281, 917, 6921, 7348, 13, 50810, 50810, 407, 257, 2685, 19667, 11, 337, 5197, 11, 412, 12877, 1004, 11, 321, 818, 309, 917, 281, 917, 8240, 7348, 11, 293, 51202, 51202, 321, 787, 764, 729, 337, 6921, 13, 51344, 51344, 865, 13, 51394, 51394, 407, 286, 519, 411, 264, 3387, 295, 2699, 76, 1461, 1500, 307, 281, 5042, 18006, 729, 721, 294, 257, 688, 51686, 51686, 295, 3331, 11, 4682, 411, 365, 9905, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.19685869396857494, "compression_ratio": 1.660633484162896, "no_caption_prob": 1.7231048332178034e-05}, {"id": 911, "seek": 376070, "start": 3760.7, "end": 3764.2999999999997, "text": " Elm program test is smart enough to be able to search for the labels.", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 912, "seek": 376070, "start": 3764.2999999999997, "end": 3767.8999999999996, "text": " And there's like five different ways a button could get label text.", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 913, "seek": 376070, "start": 3767.8999999999996, "end": 3771.2599999999998, "text": " And Elm program test does that in a reusable way.", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 914, "seek": 376070, "start": 3771.2599999999998, "end": 3776.2999999999997, "text": " So I think often a lot of the reason that people add those IDs is because the testing", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 915, "seek": 376070, "start": 3776.2999999999997, "end": 3782.68, "text": " framework they're using isn't smart enough to find the thing by the label, all the different", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 916, "seek": 376070, "start": 3782.68, "end": 3784.3999999999996, "text": " ways that labels can be attached.", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 917, "seek": 376070, "start": 3784.3999999999996, "end": 3787.7799999999997, "text": " So it's just easier to start attaching IDs everywhere.", "tokens": [50364, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 312, 1075, 281, 3164, 337, 264, 16949, 13, 50544, 50544, 400, 456, 311, 411, 1732, 819, 2098, 257, 2960, 727, 483, 7645, 2487, 13, 50724, 50724, 400, 2699, 76, 1461, 1500, 775, 300, 294, 257, 41807, 636, 13, 50892, 50892, 407, 286, 519, 2049, 257, 688, 295, 264, 1778, 300, 561, 909, 729, 48212, 307, 570, 264, 4997, 51144, 51144, 8388, 436, 434, 1228, 1943, 380, 4069, 1547, 281, 915, 264, 551, 538, 264, 7645, 11, 439, 264, 819, 51463, 51463, 2098, 300, 16949, 393, 312, 8570, 13, 51549, 51549, 407, 309, 311, 445, 3571, 281, 722, 39074, 48212, 5315, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.07763394212300799, "compression_ratio": 1.7567567567567568, "no_caption_prob": 2.0784058506251313e-05}, {"id": 918, "seek": 378778, "start": 3787.78, "end": 3792.82, "text": " So if you're using Elm program test, I think a lot of those cases, you won't need those", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 919, "seek": 378778, "start": 3792.82, "end": 3800.2000000000003, "text": " IDs because Elm program test is smart enough to find what you mean by some user viewable", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 920, "seek": 378778, "start": 3800.2000000000003, "end": 3801.86, "text": " information that's on the page.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 921, "seek": 378778, "start": 3801.86, "end": 3804.78, "text": " However, there are some limitations to that.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 922, "seek": 378778, "start": 3804.78, "end": 3805.78, "text": " Yeah.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 923, "seek": 378778, "start": 3805.78, "end": 3811.1400000000003, "text": " I think one reason that I heard also is that people don't want to have their test fail", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 924, "seek": 378778, "start": 3811.1400000000003, "end": 3813.46, "text": " when the text of the button changes.", "tokens": [50364, 407, 498, 291, 434, 1228, 2699, 76, 1461, 1500, 11, 286, 519, 257, 688, 295, 729, 3331, 11, 291, 1582, 380, 643, 729, 50616, 50616, 48212, 570, 2699, 76, 1461, 1500, 307, 4069, 1547, 281, 915, 437, 291, 914, 538, 512, 4195, 1910, 712, 50985, 50985, 1589, 300, 311, 322, 264, 3028, 13, 51068, 51068, 2908, 11, 456, 366, 512, 15705, 281, 300, 13, 51214, 51214, 865, 13, 51264, 51264, 286, 519, 472, 1778, 300, 286, 2198, 611, 307, 300, 561, 500, 380, 528, 281, 362, 641, 1500, 3061, 51532, 51532, 562, 264, 2487, 295, 264, 2960, 2962, 13, 51648, 51648], "temperature": 0.0, "avg_logprob": -0.11489320032804914, "compression_ratio": 1.6297872340425532, "no_caption_prob": 7.889161679486278e-06}, {"id": 925, "seek": 381346, "start": 3813.46, "end": 3818.66, "text": " You consider that as part of the spec from what I'm hearing?", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 926, "seek": 381346, "start": 3818.66, "end": 3819.66, "text": " Yeah.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 927, "seek": 381346, "start": 3819.66, "end": 3824.94, "text": " I mean, I would say the approach I'd recommend in Elm program test if you wanted that type", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 928, "seek": 381346, "start": 3824.94, "end": 3829.94, "text": " of safety is to define some constants somewhere that have the text.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 929, "seek": 381346, "start": 3829.94, "end": 3834.2200000000003, "text": " And then you can refer to that both in your test and in the real code.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 930, "seek": 381346, "start": 3834.2200000000003, "end": 3835.2200000000003, "text": " Right.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 931, "seek": 381346, "start": 3835.2200000000003, "end": 3837.34, "text": " Because you are sharing code between your...", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 932, "seek": 381346, "start": 3837.34, "end": 3839.94, "text": " It's just Elm code between the tests and the code.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 933, "seek": 381346, "start": 3839.94, "end": 3840.94, "text": " Yeah.", "tokens": [50364, 509, 1949, 300, 382, 644, 295, 264, 1608, 490, 437, 286, 478, 4763, 30, 50624, 50624, 865, 13, 50674, 50674, 286, 914, 11, 286, 576, 584, 264, 3109, 286, 1116, 2748, 294, 2699, 76, 1461, 1500, 498, 291, 1415, 300, 2010, 50938, 50938, 295, 4514, 307, 281, 6964, 512, 35870, 4079, 300, 362, 264, 2487, 13, 51188, 51188, 400, 550, 291, 393, 2864, 281, 300, 1293, 294, 428, 1500, 293, 294, 264, 957, 3089, 13, 51402, 51402, 1779, 13, 51452, 51452, 1436, 291, 366, 5414, 3089, 1296, 428, 485, 51558, 51558, 467, 311, 445, 2699, 76, 3089, 1296, 264, 6921, 293, 264, 3089, 13, 51688, 51688, 865, 13, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.17090516430991037, "compression_ratio": 1.653061224489796, "no_caption_prob": 1.7231355741387233e-05}, {"id": 934, "seek": 384094, "start": 3840.94, "end": 3847.78, "text": " I'd say like that, the reason for that is because of my goal of wanting the tests to", "tokens": [50364, 286, 1116, 584, 411, 300, 11, 264, 1778, 337, 300, 307, 570, 295, 452, 3387, 295, 7935, 264, 6921, 281, 50706, 50706, 1401, 411, 746, 300, 257, 4195, 727, 1223, 11, 420, 1310, 1580, 15146, 437, 33283, 12475, 51024, 51024, 366, 11, 457, 436, 393, 1401, 309, 293, 536, 411, 11, 1954, 1338, 11, 321, 434, 9697, 264, 352, 646, 2960, 420, 51286, 51286, 2035, 13, 51360, 51360, 407, 300, 498, 291, 574, 412, 309, 11, 1936, 264, 9005, 300, 294, 264, 20993, 300, 291, 434, 4997, 307, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.11626486156297766, "compression_ratio": 1.6533333333333333, "no_caption_prob": 1.1300486221443862e-05}, {"id": 935, "seek": 384094, "start": 3847.78, "end": 3854.14, "text": " read like something that a user could understand, or maybe someone understands what HTTP requests", "tokens": [50364, 286, 1116, 584, 411, 300, 11, 264, 1778, 337, 300, 307, 570, 295, 452, 3387, 295, 7935, 264, 6921, 281, 50706, 50706, 1401, 411, 746, 300, 257, 4195, 727, 1223, 11, 420, 1310, 1580, 15146, 437, 33283, 12475, 51024, 51024, 366, 11, 457, 436, 393, 1401, 309, 293, 536, 411, 11, 1954, 1338, 11, 321, 434, 9697, 264, 352, 646, 2960, 420, 51286, 51286, 2035, 13, 51360, 51360, 407, 300, 498, 291, 574, 412, 309, 11, 1936, 264, 9005, 300, 294, 264, 20993, 300, 291, 434, 4997, 307, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.11626486156297766, "compression_ratio": 1.6533333333333333, "no_caption_prob": 1.1300486221443862e-05}, {"id": 936, "seek": 384094, "start": 3854.14, "end": 3859.38, "text": " are, but they can read it and see like, oh yeah, we're clicking the go back button or", "tokens": [50364, 286, 1116, 584, 411, 300, 11, 264, 1778, 337, 300, 307, 570, 295, 452, 3387, 295, 7935, 264, 6921, 281, 50706, 50706, 1401, 411, 746, 300, 257, 4195, 727, 1223, 11, 420, 1310, 1580, 15146, 437, 33283, 12475, 51024, 51024, 366, 11, 457, 436, 393, 1401, 309, 293, 536, 411, 11, 1954, 1338, 11, 321, 434, 9697, 264, 352, 646, 2960, 420, 51286, 51286, 2035, 13, 51360, 51360, 407, 300, 498, 291, 574, 412, 309, 11, 1936, 264, 9005, 300, 294, 264, 20993, 300, 291, 434, 4997, 307, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.11626486156297766, "compression_ratio": 1.6533333333333333, "no_caption_prob": 1.1300486221443862e-05}, {"id": 937, "seek": 384094, "start": 3859.38, "end": 3860.86, "text": " whatever.", "tokens": [50364, 286, 1116, 584, 411, 300, 11, 264, 1778, 337, 300, 307, 570, 295, 452, 3387, 295, 7935, 264, 6921, 281, 50706, 50706, 1401, 411, 746, 300, 257, 4195, 727, 1223, 11, 420, 1310, 1580, 15146, 437, 33283, 12475, 51024, 51024, 366, 11, 457, 436, 393, 1401, 309, 293, 536, 411, 11, 1954, 1338, 11, 321, 434, 9697, 264, 352, 646, 2960, 420, 51286, 51286, 2035, 13, 51360, 51360, 407, 300, 498, 291, 574, 412, 309, 11, 1936, 264, 9005, 300, 294, 264, 20993, 300, 291, 434, 4997, 307, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.11626486156297766, "compression_ratio": 1.6533333333333333, "no_caption_prob": 1.1300486221443862e-05}, {"id": 938, "seek": 384094, "start": 3860.86, "end": 3866.68, "text": " So that if you look at it, basically the scenario that in the workflow that you're testing is", "tokens": [50364, 286, 1116, 584, 411, 300, 11, 264, 1778, 337, 300, 307, 570, 295, 452, 3387, 295, 7935, 264, 6921, 281, 50706, 50706, 1401, 411, 746, 300, 257, 4195, 727, 1223, 11, 420, 1310, 1580, 15146, 437, 33283, 12475, 51024, 51024, 366, 11, 457, 436, 393, 1401, 309, 293, 536, 411, 11, 1954, 1338, 11, 321, 434, 9697, 264, 352, 646, 2960, 420, 51286, 51286, 2035, 13, 51360, 51360, 407, 300, 498, 291, 574, 412, 309, 11, 1936, 264, 9005, 300, 294, 264, 20993, 300, 291, 434, 4997, 307, 51651, 51651], "temperature": 0.0, "avg_logprob": -0.11626486156297766, "compression_ratio": 1.6533333333333333, "no_caption_prob": 1.1300486221443862e-05}, {"id": 939, "seek": 386668, "start": 3866.68, "end": 3872.94, "text": " clearly visible and readable as opposed to being hidden behind button IDs.", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 940, "seek": 386668, "start": 3872.94, "end": 3877.98, "text": " However, like if someone really wanted to have an ID focus thing, they could make a", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 941, "seek": 386668, "start": 3877.98, "end": 3880.8599999999997, "text": " test module of helper functions that do that.", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 942, "seek": 386668, "start": 3880.8599999999997, "end": 3884.8799999999997, "text": " Like there's some lower level things in Elm program test where you could implement the", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 943, "seek": 386668, "start": 3884.8799999999997, "end": 3890.14, "text": " set of helper functions that you want for your application if the ones that Elm program", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 944, "seek": 386668, "start": 3890.14, "end": 3894.12, "text": " test provides do some preferences that you don't really want.", "tokens": [50364, 4448, 8974, 293, 49857, 382, 8851, 281, 885, 7633, 2261, 2960, 48212, 13, 50677, 50677, 2908, 11, 411, 498, 1580, 534, 1415, 281, 362, 364, 7348, 1879, 551, 11, 436, 727, 652, 257, 50929, 50929, 1500, 10088, 295, 36133, 6828, 300, 360, 300, 13, 51073, 51073, 1743, 456, 311, 512, 3126, 1496, 721, 294, 2699, 76, 1461, 1500, 689, 291, 727, 4445, 264, 51274, 51274, 992, 295, 36133, 6828, 300, 291, 528, 337, 428, 3861, 498, 264, 2306, 300, 2699, 76, 1461, 51537, 51537, 1500, 6417, 360, 512, 21910, 300, 291, 500, 380, 534, 528, 13, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.11314733505249024, "compression_ratio": 1.7710843373493976, "no_caption_prob": 1.834229078667704e-05}, {"id": 945, "seek": 389412, "start": 3894.12, "end": 3898.68, "text": " But I think in general, like I'd like to see more focus on thinking from the user perspective", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 946, "seek": 389412, "start": 3898.68, "end": 3904.7, "text": " and haven't in practice seen a lot of issues with text labels changing where it was hard", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 947, "seek": 389412, "start": 3904.7, "end": 3905.7, "text": " to replace.", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 948, "seek": 389412, "start": 3905.7, "end": 3909.7799999999997, "text": " You just go and change it or extract a variable in a constant if that's something that you", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 949, "seek": 389412, "start": 3909.7799999999997, "end": 3911.08, "text": " have happening a lot.", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 950, "seek": 389412, "start": 3911.08, "end": 3916.4, "text": " So for the, we talked about these sort of effect handlers that are taking your custom", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 951, "seek": 389412, "start": 3916.4, "end": 3922.72, "text": " type representing the effects in your application and turning it into a real command and a simulated", "tokens": [50364, 583, 286, 519, 294, 2674, 11, 411, 286, 1116, 411, 281, 536, 544, 1879, 322, 1953, 490, 264, 4195, 4585, 50592, 50592, 293, 2378, 380, 294, 3124, 1612, 257, 688, 295, 2663, 365, 2487, 16949, 4473, 689, 309, 390, 1152, 50893, 50893, 281, 7406, 13, 50943, 50943, 509, 445, 352, 293, 1319, 309, 420, 8947, 257, 7006, 294, 257, 5754, 498, 300, 311, 746, 300, 291, 51147, 51147, 362, 2737, 257, 688, 13, 51212, 51212, 407, 337, 264, 11, 321, 2825, 466, 613, 1333, 295, 1802, 1011, 11977, 300, 366, 1940, 428, 2375, 51478, 51478, 2010, 13460, 264, 5065, 294, 428, 3861, 293, 6246, 309, 666, 257, 957, 5622, 293, 257, 41713, 51794, 51794], "temperature": 0.0, "avg_logprob": -0.10783045867393756, "compression_ratio": 1.6689189189189189, "no_caption_prob": 8.800965588307008e-06}, {"id": 952, "seek": 392272, "start": 3922.72, "end": 3925.06, "text": " command or a simulated effect.", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 953, "seek": 392272, "start": 3925.06, "end": 3928.22, "text": " How do we keep those in sync?", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 954, "seek": 392272, "start": 3928.22, "end": 3933.14, "text": " Because so like one thing that I think can be helpful is, you know, kind of like I hinted", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 955, "seek": 392272, "start": 3933.14, "end": 3938.7, "text": " at earlier, import simulated effect.http as HTTP.", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 956, "seek": 392272, "start": 3938.7, "end": 3945.74, "text": " If you import it with that import alias, then the handler function in your test code and", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 957, "seek": 392272, "start": 3945.74, "end": 3948.54, "text": " your production code will look exactly the same.", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 958, "seek": 392272, "start": 3948.54, "end": 3949.54, "text": " Yes.", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 959, "seek": 392272, "start": 3949.54, "end": 3950.54, "text": " Yeah, that's exactly right.", "tokens": [50364, 5622, 420, 257, 41713, 1802, 13, 50481, 50481, 1012, 360, 321, 1066, 729, 294, 20271, 30, 50639, 50639, 1436, 370, 411, 472, 551, 300, 286, 519, 393, 312, 4961, 307, 11, 291, 458, 11, 733, 295, 411, 286, 12075, 292, 50885, 50885, 412, 3071, 11, 974, 41713, 1802, 13, 357, 83, 79, 382, 33283, 13, 51163, 51163, 759, 291, 974, 309, 365, 300, 974, 419, 4609, 11, 550, 264, 41967, 2445, 294, 428, 1500, 3089, 293, 51515, 51515, 428, 4265, 3089, 486, 574, 2293, 264, 912, 13, 51655, 51655, 1079, 13, 51705, 51705, 865, 11, 300, 311, 2293, 558, 13, 51755, 51755], "temperature": 0.0, "avg_logprob": -0.1117546925177941, "compression_ratio": 1.6130434782608696, "no_caption_prob": 4.785041255672695e-06}, {"id": 960, "seek": 395054, "start": 3950.54, "end": 3955.36, "text": " And all the simulated effect dot whatever modules in program test, if you look in the", "tokens": [50364, 400, 439, 264, 41713, 1802, 5893, 2035, 16679, 294, 1461, 1500, 11, 498, 291, 574, 294, 264, 50605, 50605, 45623, 11, 309, 1619, 11, 341, 307, 4140, 281, 312, 364, 1900, 8952, 295, 341, 957, 10088, 13, 50916, 50916, 407, 300, 311, 534, 264, 2141, 382, 321, 2825, 466, 10515, 3071, 11, 264, 7690, 830, 294, 428, 51223, 51223, 2375, 1802, 2010, 820, 1936, 11, 411, 11, 22915, 445, 312, 264, 9834, 300, 291, 434, 51464, 51464, 3838, 516, 281, 1320, 281, 264, 2445, 300, 300, 14725, 264, 5622, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.12592916285738032, "compression_ratio": 1.6408163265306122, "no_caption_prob": 7.296285730262753e-06}, {"id": 961, "seek": 395054, "start": 3955.36, "end": 3961.58, "text": " docs, it says, this is meant to be an exact parallel of this real module.", "tokens": [50364, 400, 439, 264, 41713, 1802, 5893, 2035, 16679, 294, 1461, 1500, 11, 498, 291, 574, 294, 264, 50605, 50605, 45623, 11, 309, 1619, 11, 341, 307, 4140, 281, 312, 364, 1900, 8952, 295, 341, 957, 10088, 13, 50916, 50916, 407, 300, 311, 534, 264, 2141, 382, 321, 2825, 466, 10515, 3071, 11, 264, 7690, 830, 294, 428, 51223, 51223, 2375, 1802, 2010, 820, 1936, 11, 411, 11, 22915, 445, 312, 264, 9834, 300, 291, 434, 51464, 51464, 3838, 516, 281, 1320, 281, 264, 2445, 300, 300, 14725, 264, 5622, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.12592916285738032, "compression_ratio": 1.6408163265306122, "no_caption_prob": 7.296285730262753e-06}, {"id": 962, "seek": 395054, "start": 3961.58, "end": 3967.72, "text": " So that's really the key as we talked about briefly earlier, the constructors in your", "tokens": [50364, 400, 439, 264, 41713, 1802, 5893, 2035, 16679, 294, 1461, 1500, 11, 498, 291, 574, 294, 264, 50605, 50605, 45623, 11, 309, 1619, 11, 341, 307, 4140, 281, 312, 364, 1900, 8952, 295, 341, 957, 10088, 13, 50916, 50916, 407, 300, 311, 534, 264, 2141, 382, 321, 2825, 466, 10515, 3071, 11, 264, 7690, 830, 294, 428, 51223, 51223, 2375, 1802, 2010, 820, 1936, 11, 411, 11, 22915, 445, 312, 264, 9834, 300, 291, 434, 51464, 51464, 3838, 516, 281, 1320, 281, 264, 2445, 300, 300, 14725, 264, 5622, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.12592916285738032, "compression_ratio": 1.6408163265306122, "no_caption_prob": 7.296285730262753e-06}, {"id": 963, "seek": 395054, "start": 3967.72, "end": 3972.54, "text": " custom effect type should basically, like, ideally just be the parameters that you're", "tokens": [50364, 400, 439, 264, 41713, 1802, 5893, 2035, 16679, 294, 1461, 1500, 11, 498, 291, 574, 294, 264, 50605, 50605, 45623, 11, 309, 1619, 11, 341, 307, 4140, 281, 312, 364, 1900, 8952, 295, 341, 957, 10088, 13, 50916, 50916, 407, 300, 311, 534, 264, 2141, 382, 321, 2825, 466, 10515, 3071, 11, 264, 7690, 830, 294, 428, 51223, 51223, 2375, 1802, 2010, 820, 1936, 11, 411, 11, 22915, 445, 312, 264, 9834, 300, 291, 434, 51464, 51464, 3838, 516, 281, 1320, 281, 264, 2445, 300, 300, 14725, 264, 5622, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.12592916285738032, "compression_ratio": 1.6408163265306122, "no_caption_prob": 7.296285730262753e-06}, {"id": 964, "seek": 395054, "start": 3972.54, "end": 3977.62, "text": " directly going to pass to the function that that produces the command.", "tokens": [50364, 400, 439, 264, 41713, 1802, 5893, 2035, 16679, 294, 1461, 1500, 11, 498, 291, 574, 294, 264, 50605, 50605, 45623, 11, 309, 1619, 11, 341, 307, 4140, 281, 312, 364, 1900, 8952, 295, 341, 957, 10088, 13, 50916, 50916, 407, 300, 311, 534, 264, 2141, 382, 321, 2825, 466, 10515, 3071, 11, 264, 7690, 830, 294, 428, 51223, 51223, 2375, 1802, 2010, 820, 1936, 11, 411, 11, 22915, 445, 312, 264, 9834, 300, 291, 434, 51464, 51464, 3838, 516, 281, 1320, 281, 264, 2445, 300, 300, 14725, 264, 5622, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.12592916285738032, "compression_ratio": 1.6408163265306122, "no_caption_prob": 7.296285730262753e-06}, {"id": 965, "seek": 397762, "start": 3977.62, "end": 3984.7, "text": " It almost seems like that could be an opportunity in people's like build or test setup scripts", "tokens": [50364, 467, 1920, 2544, 411, 300, 727, 312, 364, 2650, 294, 561, 311, 411, 1322, 420, 1500, 8657, 23294, 50718, 50718, 281, 445, 11, 286, 500, 380, 458, 11, 362, 1629, 16679, 689, 291, 6964, 428, 957, 1802, 1011, 11977, 13, 51002, 51002, 400, 550, 291, 727, 445, 28446, 309, 490, 257, 1238, 2199, 411, 5055, 9163, 295, 300, 10088, 293, 51344, 51344, 550, 11704, 264, 41596, 295, 33283, 281, 974, 41713, 1802, 5893, 33283, 382, 33283, 13, 51744, 51744, 407, 300, 727, 312, 364, 1880, 551, 281, 6839, 886, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1252441000431142, "compression_ratio": 1.6611570247933884, "no_caption_prob": 6.438940999942133e-06}, {"id": 966, "seek": 397762, "start": 3984.7, "end": 3990.38, "text": " to just, I don't know, have certain modules where you define your real effect handlers.", "tokens": [50364, 467, 1920, 2544, 411, 300, 727, 312, 364, 2650, 294, 561, 311, 411, 1322, 420, 1500, 8657, 23294, 50718, 50718, 281, 445, 11, 286, 500, 380, 458, 11, 362, 1629, 16679, 689, 291, 6964, 428, 957, 1802, 1011, 11977, 13, 51002, 51002, 400, 550, 291, 727, 445, 28446, 309, 490, 257, 1238, 2199, 411, 5055, 9163, 295, 300, 10088, 293, 51344, 51344, 550, 11704, 264, 41596, 295, 33283, 281, 974, 41713, 1802, 5893, 33283, 382, 33283, 13, 51744, 51744, 407, 300, 727, 312, 364, 1880, 551, 281, 6839, 886, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1252441000431142, "compression_ratio": 1.6611570247933884, "no_caption_prob": 6.438940999942133e-06}, {"id": 967, "seek": 397762, "start": 3990.38, "end": 3997.22, "text": " And then you could just derive it from a pretty simple like copy paste of that module and", "tokens": [50364, 467, 1920, 2544, 411, 300, 727, 312, 364, 2650, 294, 561, 311, 411, 1322, 420, 1500, 8657, 23294, 50718, 50718, 281, 445, 11, 286, 500, 380, 458, 11, 362, 1629, 16679, 689, 291, 6964, 428, 957, 1802, 1011, 11977, 13, 51002, 51002, 400, 550, 291, 727, 445, 28446, 309, 490, 257, 1238, 2199, 411, 5055, 9163, 295, 300, 10088, 293, 51344, 51344, 550, 11704, 264, 41596, 295, 33283, 281, 974, 41713, 1802, 5893, 33283, 382, 33283, 13, 51744, 51744, 407, 300, 727, 312, 364, 1880, 551, 281, 6839, 886, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1252441000431142, "compression_ratio": 1.6611570247933884, "no_caption_prob": 6.438940999942133e-06}, {"id": 968, "seek": 397762, "start": 3997.22, "end": 4005.22, "text": " then amend the imports of HTTP to import simulated effect dot HTTP as HTTP.", "tokens": [50364, 467, 1920, 2544, 411, 300, 727, 312, 364, 2650, 294, 561, 311, 411, 1322, 420, 1500, 8657, 23294, 50718, 50718, 281, 445, 11, 286, 500, 380, 458, 11, 362, 1629, 16679, 689, 291, 6964, 428, 957, 1802, 1011, 11977, 13, 51002, 51002, 400, 550, 291, 727, 445, 28446, 309, 490, 257, 1238, 2199, 411, 5055, 9163, 295, 300, 10088, 293, 51344, 51344, 550, 11704, 264, 41596, 295, 33283, 281, 974, 41713, 1802, 5893, 33283, 382, 33283, 13, 51744, 51744, 407, 300, 727, 312, 364, 1880, 551, 281, 6839, 886, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1252441000431142, "compression_ratio": 1.6611570247933884, "no_caption_prob": 6.438940999942133e-06}, {"id": 969, "seek": 397762, "start": 4005.22, "end": 4007.46, "text": " So that could be an interesting thing to explore too.", "tokens": [50364, 467, 1920, 2544, 411, 300, 727, 312, 364, 2650, 294, 561, 311, 411, 1322, 420, 1500, 8657, 23294, 50718, 50718, 281, 445, 11, 286, 500, 380, 458, 11, 362, 1629, 16679, 689, 291, 6964, 428, 957, 1802, 1011, 11977, 13, 51002, 51002, 400, 550, 291, 727, 445, 28446, 309, 490, 257, 1238, 2199, 411, 5055, 9163, 295, 300, 10088, 293, 51344, 51344, 550, 11704, 264, 41596, 295, 33283, 281, 974, 41713, 1802, 5893, 33283, 382, 33283, 13, 51744, 51744, 407, 300, 727, 312, 364, 1880, 551, 281, 6839, 886, 13, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.1252441000431142, "compression_ratio": 1.6611570247933884, "no_caption_prob": 6.438940999942133e-06}, {"id": 970, "seek": 400746, "start": 4007.46, "end": 4012.7, "text": " Yes, but we're starting to get to the level of effort where personally, like, you're going", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 971, "seek": 400746, "start": 4012.7, "end": 4015.2200000000003, "text": " to invest doing that work for your application.", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 972, "seek": 400746, "start": 4015.2200000000003, "end": 4016.2200000000003, "text": " Yeah.", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 973, "seek": 400746, "start": 4016.2200000000003, "end": 4021.1, "text": " You're getting in touch with me and working out a plan where we can actually get rid of", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 974, "seek": 400746, "start": 4021.1, "end": 4022.86, "text": " the need for this effect type completely.", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 975, "seek": 400746, "start": 4022.86, "end": 4023.86, "text": " That'd be so great.", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 976, "seek": 400746, "start": 4023.86, "end": 4029.06, "text": " I get the feeling that you want some contributions.", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 977, "seek": 400746, "start": 4029.06, "end": 4037.42, "text": " Yeah, well, yeah, there's just a whole handful of things that I can see the potential for", "tokens": [50364, 1079, 11, 457, 321, 434, 2891, 281, 483, 281, 264, 1496, 295, 4630, 689, 5665, 11, 411, 11, 291, 434, 516, 50626, 50626, 281, 1963, 884, 300, 589, 337, 428, 3861, 13, 50752, 50752, 865, 13, 50802, 50802, 509, 434, 1242, 294, 2557, 365, 385, 293, 1364, 484, 257, 1393, 689, 321, 393, 767, 483, 3973, 295, 51046, 51046, 264, 643, 337, 341, 1802, 2010, 2584, 13, 51134, 51134, 663, 1116, 312, 370, 869, 13, 51184, 51184, 286, 483, 264, 2633, 300, 291, 528, 512, 15725, 13, 51444, 51444, 865, 11, 731, 11, 1338, 11, 456, 311, 445, 257, 1379, 16458, 295, 721, 300, 286, 393, 536, 264, 3995, 337, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21671062603331448, "compression_ratio": 1.676923076923077, "no_caption_prob": 3.705138442455791e-05}, {"id": 978, "seek": 403742, "start": 4037.42, "end": 4044.26, "text": " the API from program tests to be even nicer than it is and much easier to understand.", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 979, "seek": 403742, "start": 4044.26, "end": 4048.9, "text": " So yeah, there's a couple big projects that if folks are interested in, get in touch with", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 980, "seek": 403742, "start": 4048.9, "end": 4054.58, "text": " me although it would require a bit of commitment to kind of work through some design issues", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 981, "seek": 403742, "start": 4054.58, "end": 4056.42, "text": " and get this implemented.", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 982, "seek": 403742, "start": 4056.42, "end": 4060.26, "text": " So getting rid of the need for that effect wrapper is the big one.", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 983, "seek": 403742, "start": 4060.26, "end": 4065.66, "text": " Adding support for more commands that aren't currently represented as simulated effects,", "tokens": [50364, 264, 9362, 490, 1461, 6921, 281, 312, 754, 22842, 813, 309, 307, 293, 709, 3571, 281, 1223, 13, 50706, 50706, 407, 1338, 11, 456, 311, 257, 1916, 955, 4455, 300, 498, 4024, 366, 3102, 294, 11, 483, 294, 2557, 365, 50938, 50938, 385, 4878, 309, 576, 3651, 257, 857, 295, 8371, 281, 733, 295, 589, 807, 512, 1715, 2663, 51222, 51222, 293, 483, 341, 12270, 13, 51314, 51314, 407, 1242, 3973, 295, 264, 643, 337, 300, 1802, 46906, 307, 264, 955, 472, 13, 51506, 51506, 31204, 1406, 337, 544, 16901, 300, 3212, 380, 4362, 10379, 382, 41713, 5065, 11, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.08381355618967594, "compression_ratio": 1.6209386281588447, "no_caption_prob": 5.594254616880789e-06}, {"id": 984, "seek": 406566, "start": 4065.66, "end": 4068.94, "text": " like keyboard focus, the viewport scrolling, things like that.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 985, "seek": 406566, "start": 4068.94, "end": 4073.54, "text": " If folks are interested in helping with that, I'd love to hear from them.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 986, "seek": 406566, "start": 4073.54, "end": 4077.3799999999997, "text": " And it seems like you track these as issues in the GitHub.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 987, "seek": 406566, "start": 4077.3799999999997, "end": 4079.58, "text": " Is that the place to look for them?", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 988, "seek": 406566, "start": 4079.58, "end": 4081.22, "text": " Yeah, partly.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 989, "seek": 406566, "start": 4081.22, "end": 4084.92, "text": " Certainly if there's something that's missing, either if you are going to work on contributing", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 990, "seek": 406566, "start": 4084.92, "end": 4088.98, "text": " to it or not open a GitHub issue if there isn't one already.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 991, "seek": 406566, "start": 4088.98, "end": 4090.72, "text": " But also not everything is in there.", "tokens": [50364, 411, 10186, 1879, 11, 264, 1910, 2707, 29053, 11, 721, 411, 300, 13, 50528, 50528, 759, 4024, 366, 3102, 294, 4315, 365, 300, 11, 286, 1116, 959, 281, 1568, 490, 552, 13, 50758, 50758, 400, 309, 2544, 411, 291, 2837, 613, 382, 2663, 294, 264, 23331, 13, 50950, 50950, 1119, 300, 264, 1081, 281, 574, 337, 552, 30, 51060, 51060, 865, 11, 17031, 13, 51142, 51142, 16628, 498, 456, 311, 746, 300, 311, 5361, 11, 2139, 498, 291, 366, 516, 281, 589, 322, 19270, 51327, 51327, 281, 309, 420, 406, 1269, 257, 23331, 2734, 498, 456, 1943, 380, 472, 1217, 13, 51530, 51530, 583, 611, 406, 1203, 307, 294, 456, 13, 51617, 51617], "temperature": 0.0, "avg_logprob": -0.13236220815907354, "compression_ratio": 1.6846153846153846, "no_caption_prob": 3.120053224847652e-05}, {"id": 992, "seek": 409072, "start": 4090.72, "end": 4095.8199999999997, "text": " Some of the bigger projects I haven't tracked there yet, not because I don't want them there", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 993, "seek": 409072, "start": 4095.8199999999997, "end": 4099.98, "text": " just because I don't have enough clear information that I want to put down yet.", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 994, "seek": 409072, "start": 4099.98, "end": 4104.9, "text": " But yeah, that another big one is that the test dot html module that's part of the Elm", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 995, "seek": 409072, "start": 4104.9, "end": 4111.16, "text": " test package has some missing features and is really composable in a nice way.", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 996, "seek": 409072, "start": 4111.16, "end": 4115.98, "text": " So there's some improvements there that could allow the simplification of some of the Elm", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 997, "seek": 409072, "start": 4115.98, "end": 4117.179999999999, "text": " program test stuff.", "tokens": [50364, 2188, 295, 264, 3801, 4455, 286, 2378, 380, 31703, 456, 1939, 11, 406, 570, 286, 500, 380, 528, 552, 456, 50619, 50619, 445, 570, 286, 500, 380, 362, 1547, 1850, 1589, 300, 286, 528, 281, 829, 760, 1939, 13, 50827, 50827, 583, 1338, 11, 300, 1071, 955, 472, 307, 300, 264, 1500, 5893, 276, 83, 15480, 10088, 300, 311, 644, 295, 264, 2699, 76, 51073, 51073, 1500, 7372, 575, 512, 5361, 4122, 293, 307, 534, 10199, 712, 294, 257, 1481, 636, 13, 51386, 51386, 407, 456, 311, 512, 13797, 456, 300, 727, 2089, 264, 6883, 3774, 295, 512, 295, 264, 2699, 76, 51627, 51627, 1461, 1500, 1507, 13, 51687, 51687], "temperature": 0.0, "avg_logprob": -0.12282534156526838, "compression_ratio": 1.7164750957854407, "no_caption_prob": 5.561601574299857e-05}, {"id": 998, "seek": 411718, "start": 4117.18, "end": 4121.58, "text": " Like currently, if you click a link, you have to both provide the text of the link and the", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 999, "seek": 411718, "start": 4121.58, "end": 4123.54, "text": " URL that it's supposed to be.", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1000, "seek": 411718, "start": 4123.54, "end": 4128.22, "text": " But theoretically, you should be able Elm program tests should be able to get the URL", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1001, "seek": 411718, "start": 4128.22, "end": 4130.780000000001, "text": " from the virtual top.", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1002, "seek": 411718, "start": 4130.780000000001, "end": 4135.200000000001, "text": " But it's just not possible the way that test dot html is implemented right now.", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1003, "seek": 411718, "start": 4135.200000000001, "end": 4137.14, "text": " So that's another kind of big project.", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1004, "seek": 411718, "start": 4137.14, "end": 4140.22, "text": " But if anyone's excited about it, I'd love to chat about it.", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1005, "seek": 411718, "start": 4140.22, "end": 4145.58, "text": " And small stuff is like you're interested this morning, if you have any improvements", "tokens": [50364, 1743, 4362, 11, 498, 291, 2052, 257, 2113, 11, 291, 362, 281, 1293, 2893, 264, 2487, 295, 264, 2113, 293, 264, 50584, 50584, 12905, 300, 309, 311, 3442, 281, 312, 13, 50682, 50682, 583, 29400, 11, 291, 820, 312, 1075, 2699, 76, 1461, 6921, 820, 312, 1075, 281, 483, 264, 12905, 50916, 50916, 490, 264, 6374, 1192, 13, 51044, 51044, 583, 309, 311, 445, 406, 1944, 264, 636, 300, 1500, 5893, 276, 83, 15480, 307, 12270, 558, 586, 13, 51265, 51265, 407, 300, 311, 1071, 733, 295, 955, 1716, 13, 51362, 51362, 583, 498, 2878, 311, 2919, 466, 309, 11, 286, 1116, 959, 281, 5081, 466, 309, 13, 51516, 51516, 400, 1359, 1507, 307, 411, 291, 434, 3102, 341, 2446, 11, 498, 291, 362, 604, 13797, 51784, 51784], "temperature": 0.0, "avg_logprob": -0.1080779662499061, "compression_ratio": 1.6768707482993197, "no_caption_prob": 1.95249685930321e-05}, {"id": 1006, "seek": 414558, "start": 4145.58, "end": 4150.42, "text": " to the documentation, or even just issues about some part of the documentation that", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1007, "seek": 414558, "start": 4150.42, "end": 4154.88, "text": " is unclear, file an issue about it or make a PR with improvements.", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1008, "seek": 414558, "start": 4154.88, "end": 4159.3, "text": " If anyone's been using Elm program test, or is going through the process of learning it", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1009, "seek": 414558, "start": 4159.3, "end": 4164.0199999999995, "text": " and is inspired to write a blog post, that would be really useful because I've put a", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1010, "seek": 414558, "start": 4164.0199999999995, "end": 4169.38, "text": " lot of work into the documentation, but also I wrote it so I don't really have that perspective", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1011, "seek": 414558, "start": 4169.38, "end": 4171.74, "text": " of someone coming to try to use it.", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1012, "seek": 414558, "start": 4171.74, "end": 4174.46, "text": " Some more examples of that would be would be great to have.", "tokens": [50364, 281, 264, 14333, 11, 420, 754, 445, 2663, 466, 512, 644, 295, 264, 14333, 300, 50606, 50606, 307, 25636, 11, 3991, 364, 2734, 466, 309, 420, 652, 257, 11568, 365, 13797, 13, 50829, 50829, 759, 2878, 311, 668, 1228, 2699, 76, 1461, 1500, 11, 420, 307, 516, 807, 264, 1399, 295, 2539, 309, 51050, 51050, 293, 307, 7547, 281, 2464, 257, 6968, 2183, 11, 300, 576, 312, 534, 4420, 570, 286, 600, 829, 257, 51286, 51286, 688, 295, 589, 666, 264, 14333, 11, 457, 611, 286, 4114, 309, 370, 286, 500, 380, 534, 362, 300, 4585, 51554, 51554, 295, 1580, 1348, 281, 853, 281, 764, 309, 13, 51672, 51672, 2188, 544, 5110, 295, 300, 576, 312, 576, 312, 869, 281, 362, 13, 51808, 51808], "temperature": 0.0, "avg_logprob": -0.12268039915296766, "compression_ratio": 1.757679180887372, "no_caption_prob": 1.544589758850634e-05}, {"id": 1013, "seek": 417446, "start": 4174.46, "end": 4175.7, "text": " Awesome.", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1014, "seek": 417446, "start": 4175.7, "end": 4180.18, "text": " So let's give people some resources to get started here.", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1015, "seek": 417446, "start": 4180.18, "end": 4186.9, "text": " So you mentioned the docs that you wrote, which are very thorough and well worth a read.", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1016, "seek": 417446, "start": 4186.9, "end": 4191.4800000000005, "text": " Even if another blog post would be helpful, they've got a lot of really good information.", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1017, "seek": 417446, "start": 4191.4800000000005, "end": 4196.9, "text": " So check out the guidebook, which is in the show notes, and just the Elm documentation", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1018, "seek": 417446, "start": 4196.9, "end": 4198.58, "text": " for the package itself.", "tokens": [50364, 10391, 13, 50426, 50426, 407, 718, 311, 976, 561, 512, 3593, 281, 483, 1409, 510, 13, 50650, 50650, 407, 291, 2835, 264, 45623, 300, 291, 4114, 11, 597, 366, 588, 12934, 293, 731, 3163, 257, 1401, 13, 50986, 50986, 2754, 498, 1071, 6968, 2183, 576, 312, 4961, 11, 436, 600, 658, 257, 688, 295, 534, 665, 1589, 13, 51215, 51215, 407, 1520, 484, 264, 5934, 2939, 11, 597, 307, 294, 264, 855, 5570, 11, 293, 445, 264, 2699, 76, 14333, 51486, 51486, 337, 264, 7372, 2564, 13, 51570, 51570], "temperature": 0.0, "avg_logprob": -0.10507118308937156, "compression_ratio": 1.5570175438596492, "no_caption_prob": 8.887002331903204e-05}, {"id": 1019, "seek": 419858, "start": 4198.58, "end": 4207.66, "text": " Also be sure to, you know, there's a lot going on in the HTML test assertion helpers in the", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1020, "seek": 419858, "start": 4207.66, "end": 4210.78, "text": " Elm test package.", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1021, "seek": 419858, "start": 4210.78, "end": 4213.3, "text": " So we've got a link to that in the show notes as well.", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1022, "seek": 419858, "start": 4213.3, "end": 4216.9, "text": " Definitely check out that and familiarize yourself with the API.", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1023, "seek": 419858, "start": 4216.9, "end": 4219.22, "text": " And any other resources?", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1024, "seek": 419858, "start": 4219.22, "end": 4224.14, "text": " Is the Elm test Slack channel a good place to ask questions or discuss that?", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1025, "seek": 419858, "start": 4224.14, "end": 4227.0199999999995, "text": " Yeah, I think that actually is a good place.", "tokens": [50364, 2743, 312, 988, 281, 11, 291, 458, 11, 456, 311, 257, 688, 516, 322, 294, 264, 17995, 1500, 19810, 313, 854, 433, 294, 264, 50818, 50818, 2699, 76, 1500, 7372, 13, 50974, 50974, 407, 321, 600, 658, 257, 2113, 281, 300, 294, 264, 855, 5570, 382, 731, 13, 51100, 51100, 12151, 1520, 484, 300, 293, 4963, 1125, 1803, 365, 264, 9362, 13, 51280, 51280, 400, 604, 661, 3593, 30, 51396, 51396, 1119, 264, 2699, 76, 1500, 37211, 2269, 257, 665, 1081, 281, 1029, 1651, 420, 2248, 300, 30, 51642, 51642, 865, 11, 286, 519, 300, 767, 307, 257, 665, 1081, 13, 51786, 51786], "temperature": 0.0, "avg_logprob": -0.1201114745367141, "compression_ratio": 1.5537190082644627, "no_caption_prob": 7.367679791059345e-05}, {"id": 1026, "seek": 422702, "start": 4227.02, "end": 4228.820000000001, "text": " Is it the testing channel?", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1027, "seek": 422702, "start": 4228.820000000001, "end": 4230.620000000001, "text": " Oh, yeah, just called test.", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1028, "seek": 422702, "start": 4230.620000000001, "end": 4234.26, "text": " It's called hashtag testing in the Elm Slack.", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1029, "seek": 422702, "start": 4234.26, "end": 4239.620000000001, "text": " On the docs, I did want to mention two big thanks to some of my former, you know, Red", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1030, "seek": 422702, "start": 4239.620000000001, "end": 4245.320000000001, "text": " Ink colleagues, specifically Katie Hughes and Michael Hadley and Brooke Angel, who helped", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1031, "seek": 422702, "start": 4245.320000000001, "end": 4250.900000000001, "text": " review the documentation, give suggestions, helped me improve that when I did the big", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1032, "seek": 422702, "start": 4250.900000000001, "end": 4252.740000000001, "text": " 3.0 release.", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1033, "seek": 422702, "start": 4252.740000000001, "end": 4253.740000000001, "text": " Great stuff.", "tokens": [50364, 1119, 309, 264, 4997, 2269, 30, 50454, 50454, 876, 11, 1338, 11, 445, 1219, 1500, 13, 50544, 50544, 467, 311, 1219, 20379, 4997, 294, 264, 2699, 76, 37211, 13, 50726, 50726, 1282, 264, 45623, 11, 286, 630, 528, 281, 2152, 732, 955, 3231, 281, 512, 295, 452, 5819, 11, 291, 458, 11, 4477, 50994, 50994, 31147, 7734, 11, 4682, 19602, 41102, 293, 5116, 12298, 3420, 293, 43092, 14902, 11, 567, 4254, 51279, 51279, 3131, 264, 14333, 11, 976, 13396, 11, 4254, 385, 3470, 300, 562, 286, 630, 264, 955, 51558, 51558, 805, 13, 15, 4374, 13, 51650, 51650, 3769, 1507, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.25992053803943455, "compression_ratio": 1.509727626459144, "no_caption_prob": 1.3419487004284747e-05}, {"id": 1034, "seek": 425374, "start": 4253.74, "end": 4257.98, "text": " And Vanessa also gave a really great talk about writing testable Elm.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1035, "seek": 425374, "start": 4257.98, "end": 4261.9, "text": " She talked quite a bit about using Elm program tests and some of the accessibility features", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1036, "seek": 425374, "start": 4261.9, "end": 4263.28, "text": " that you were discussing, too.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1037, "seek": 425374, "start": 4263.28, "end": 4265.0599999999995, "text": " So that's worth a watch as well.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1038, "seek": 425374, "start": 4265.0599999999995, "end": 4266.0599999999995, "text": " So cool.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1039, "seek": 425374, "start": 4266.0599999999995, "end": 4271.139999999999, "text": " Well, I mean, there's so much more we could get into, so many great details to talk about", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1040, "seek": 425374, "start": 4271.139999999999, "end": 4272.139999999999, "text": " here.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1041, "seek": 425374, "start": 4272.139999999999, "end": 4273.139999999999, "text": " But this was a lot of fun.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1042, "seek": 425374, "start": 4273.139999999999, "end": 4274.7, "text": " Thank you so much for chatting with us, Aaron.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1043, "seek": 425374, "start": 4274.7, "end": 4276.9, "text": " Yeah, thanks for having me.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1044, "seek": 425374, "start": 4276.9, "end": 4279.099999999999, "text": " And until next time, talk to you later.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1045, "seek": 425374, "start": 4279.099999999999, "end": 4280.099999999999, "text": " You're in.", "tokens": [50364, 400, 27928, 611, 2729, 257, 534, 869, 751, 466, 3579, 1500, 712, 2699, 76, 13, 50576, 50576, 1240, 2825, 1596, 257, 857, 466, 1228, 2699, 76, 1461, 6921, 293, 512, 295, 264, 15002, 4122, 50772, 50772, 300, 291, 645, 10850, 11, 886, 13, 50841, 50841, 407, 300, 311, 3163, 257, 1159, 382, 731, 13, 50930, 50930, 407, 1627, 13, 50980, 50980, 1042, 11, 286, 914, 11, 456, 311, 370, 709, 544, 321, 727, 483, 666, 11, 370, 867, 869, 4365, 281, 751, 466, 51234, 51234, 510, 13, 51284, 51284, 583, 341, 390, 257, 688, 295, 1019, 13, 51334, 51334, 1044, 291, 370, 709, 337, 24654, 365, 505, 11, 14018, 13, 51412, 51412, 865, 11, 3231, 337, 1419, 385, 13, 51522, 51522, 400, 1826, 958, 565, 11, 751, 281, 291, 1780, 13, 51632, 51632, 509, 434, 294, 13, 51682, 51682, 9088, 958, 565, 13, 51682], "temperature": 0.0, "avg_logprob": -0.1693539946046594, "compression_ratio": 1.6666666666666667, "no_caption_prob": 0.00013549950381275266}, {"id": 1046, "seek": 428010, "start": 4280.1, "end": 4285.9400000000005, "text": " See you.", "tokens": [50364, 3008, 291, 13, 50656, 50656, 865, 13, 50852], "temperature": 1.0, "avg_logprob": -1.8461969375610352, "compression_ratio": 0.6363636363636364, "no_caption_prob": 1.8614075088407844e-05}, {"id": 1047, "seek": 428594, "start": 4285.94, "end": 4287.94, "text": " You", "tokens": [50364, 509, 50464], "temperature": 0.0, "avg_logprob": -0.9743949174880981, "compression_ratio": 0.2727272727272727, "no_caption_prob": 0.7058174014091492}], "language": "en"}