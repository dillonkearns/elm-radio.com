{"text": " Hello, Jeroen. Hello, Dillon. So, what are we talking about today? Today we're talking about TypeScript again, and we'll be comparing it with Elm. But since comparing the two is a very big topic, we were considering just looking at the type systems. Yeah. I think that's enough for an episode. Knowing us. Yeah. So let's sort of clarify something. What do we want listeners to take away from this? Because I want to state that our goal is not to pick a winner, right? It's a... No, no, no. For one thing, we're far too biased to be trusted with such a thing. That is true. We're just laying out some facts. But also, I'm a big fan of this idea of not being an absolutist about which things are better. So it's far more useful to look at what are the goals, what are these tools best suited for, and let's understand the design choices that make them well suited for these types of things. And I think that is very much the way that I think about the TypeScript versus the Elm type systems is TypeScript... I've said this before on the podcast. To me, TypeScript is extremely elegantly designed to solve the exact problem it solves, which is Elm is extremely elegantly designed to solve the problem it solves. And they solve two very different problems. So Jeroen, I promised you a quote, which we both agreed was better to save for on air rather than reading it on the pre call. I'm so excited to finally listen to it. Yes, now that we've gotten your expectations high, here you go. So this is from a GitHub issue in the TypeScript repo. And someone is asking the question, what I'm interested in knowing is whether the TypeScript community slash team consider type checking unsoundness as something that should be fixed. And a TypeScript core team member is saying, just speaking specifically to this point, 100% soundness is not a design goal. Soundness, usability and complexity form a trade off triangle. There's no such thing as a sound, simple, useful type system. Now, I'm not sure I agree with that last point, unless it's specifically within the context of what TypeScript is doing, which is adding types within the semantics of JavaScript, and within the ecosystem of existing JavaScript code. In that case, yes, I think that's true. But in the broader sense, I think that Elm gives a pretty good case that you can have a sound, simple and useful type system, right? Can you elaborate what you mean with soundness? Or what they mean with soundness? Sure. Yeah, well, I think soundness means, so like they give an example in this issue, which I'll link to, you know, where they're adding something to an array. And you know, you can kind of fool the type system. So there are a number of ways that you can fool the type system in TypeScript. But basically, like, I think Elm and TypeScript are working from two opposite ends. Elm starts from everything must be proven, and is considered to be incorrect types until I can guarantee it otherwise. Like, unless I can convince myself that the types are correct, I'm going to reject it. And TypeScript goes from the opposite side. It says, I'm going to assume that this is a working application, unless I can find some evidence that contradicts that. So it's starting from, it's almost like, you know, innocent until proven guilty, or guilty until proven innocent. I think that Elm, in Elm, types are guilty until proven innocent. And in TypeScript, they're innocent until proven guilty. And that is because they're working on very different styles of code bases. Like, Elm starts from scratch. So if you only use the types that Elm has in its core libraries, and the compiler knows about them and knows that it can give you those guarantees, then it's a good idea to start with something that can be proven to be right. Right. That is sound. Whereas with TypeScript, you start basically with the JavaScript code base. Or at least that is how it is designed for. I don't know if it still makes a lot of sense for projects that start with TypeScript. But at least that's the original goal. So you start with TypeScript, and you have no guarantees at all. And then you try to prove things correct where you can, and show the errors where you cannot. Where you can show the errors. Yeah. Right. So if you're starting the idea of FFI, like foreign function interface, being able to call directly into JavaScript, that is the big differentiator, right? Because if you're starting with a fresh brand new code base, in Elm, you can't pollute the sound typed environment where every type you have you know is correct. You can't pollute that with unsoundness because you can't directly invoke unsound type systems. But with TypeScript, the design decision, which I think makes perfect sense for TypeScript, is sure, go ahead, call JavaScript all you want. And oh, I've got some NPM library that doesn't have TypeScript typings? That's okay. We'll just help you out as much as we can around that, and we'll just consider the types to be untyped there. And we probably won't be able to help you much for that untyped code. But we can for the rest of the application. We can for the rest of the application. So it's seen as sort of like a bonus, the types, rather than everything must be proven and the entire ecosystem is designed around this, right? Because you can just publish a new... You can publish an NPM package that uses eval. What type does it do? TypeScript can't help you there. It could eval a string from user input, and it could parse some JSON. So these are the core design decisions that guide Elm versus TypeScript. And I think this is what I hope people will come away from listening to this episode with, is this understanding of the different design goals. And take that for whatever purposes serve you. If you're not an Elm developer, that helps you kind of think about where to be extra careful when you're writing TypeScript code and how to think about these trade offs. That's great. If you're not a TypeScript developer, if you only do Elm, and you need to use a little bit of JavaScript, hopefully this helps you understand the design decisions and goals behind Elm a little bit better. So the TypeScript type system is, in my opinion, and I'm guessing yours as well, a lot more complex than Elm's. And partially the reason for that is because it needs to type check JavaScript. And JavaScript can do a lot of things. So if you want to have a type system that doesn't limit on what JavaScript can do, or at least when it works, then you do need to have a very powerful type system. So that's something to keep in mind. Oh, it's very complex. It can do a lot of things and that is potentially very hard to annotate in your types. But it's there for a reason. It's because JavaScript has a lot of features. Yes, it does. And also to further back up this idea that we're not trying to prove which type system is better, but we're just looking at their design goals. I think that TypeScript is a very cool type system and it has some features that I think are really neat, which the Elm type system does not have. Does that mean the Elm type system should have them? Not necessarily. They're just features that are very well suited to the specific problems that TypeScript is solving and they're really cool and they're good to be aware of. So for example, in Elm, if you change the value of a string, like if you change concrete values within the same type, it will never change whether the types compile or give a compiler error. That will never happen. Whereas in TypeScript, that can happen. So TypeScript is able to actually look at concrete values, which the Elm type system does not have the ability to do. That gives you some really interesting capabilities. If you're a TypeScript library author or application author. So by the way, was the quote worth it your own? It was worth it. I think sometimes it's easy to sort of, TypeScript can be an easy target to be like, oh, TypeScript isn't a sound type system. But I think it's good to have primary sources to say, no, this is the stated design goal of TypeScript. This is not designed to be unsound. And that's not a bad thing. It's just a different goal and understand that. And this is not my words. This is the words of the TypeScript team. I mean, it could try to, but then it would be a very different language and you would have a lot more errors, I'm guessing. Yeah, a lot more. So yeah. And one of the things they talk about is, you know, just the idea of mutation and how like, how do you square mutation with sound types? You know, is it possible? Yes, but it's an added complication. And it's not one that, that's, so we'll get into this later in the episode, but that's one of the avenues of introducing unsoundness into TypeScript types. Yeah, I guess one thing you could do is to, instead of being a superset of JavaScript, is take a subset of JavaScript and add type annotations. So remove mutations from JavaScript and then add types. And then the language would be a lot simpler, but you can do a lot less things with it. And it's not compatible with JavaScript libraries that are out there on NPM and stuff like that. Exactly. Yeah, yeah, absolutely. All right. Well, should we get to the basics a little bit? That sounds good. Where should we start? How basic do we want to get here? Well, I guess let's start with the primitives. Yeah. So TypeScript has three primitives. It has strings, numbers, and Booleans, which Elm also has except for number because it has int and floats. Although secretly, it's actually just JavaScript numbers. Everything is JavaScript under the hood. So at least until it stops compiling to JavaScript only. Right. Yeah. It's got those primitives. If you haven't seen a TypeScript annotation before, you can take let name equals Yeroon and you can turn that into something with a type annotation with let name colon string equals Yeroon. But the TypeScript type system can also do type inference. So you don't strictly need to put type annotations everywhere similar to Elm. But it's probably a good idea. It's probably done idiomatically. It's done pretty much everywhere in idiomatic Elm code. In my opinion, some people might have different opinions on that. But in TypeScript it's not. Yeah. I wrote rules to add type annotations everywhere possible. So yeah. Yeah. I use that rule often. And actually, I used to not put type annotations on my let bindings in Elm. But that rule sort of changed my thinking on that. And now I just put them everywhere. Because the more hints you can give to the compiler where you're like, no, no, this is definitely the type. I know this is the type I want here. The more specific the compiler can be to pointing you to the problem if something goes wrong. So that's how I think of it. Yes. Exactly. So, if you put a big blob of text about an error in Elm, if you don't put type annotations where it's needed, because it will say something like, oh, this big record has this field that is not the right type. But if you put the annotation on a value that you put before and that it notices that it's wrong over there, then it will point the error to a smaller section. So the error messages are much better if you put type annotations. And this I don't know about TypeScripts. And I was wondering whether you know, are the error messages better when you put them everywhere? Do you have the same kind of problem you do in Elm? I think so. I mean, I think that's just an inherent property of, you know, that you're saying, like, you're giving more information for the type system to say, this is supposed to be this type. And it needs to square everything with all that information. So it's going to point the problem to somewhere else, as long as all those type annotations are correct. So, yeah, I think that's the same as with Elm. But idiomatically, I think in the TypeScript ecosystem, I think it's a lot more common to just say, like, oh, wow, this type system is great. I don't have to put annotations everywhere, which as an Elm developer, I tend to think of it more as like, wow, this type system is great. It's smart enough to figure things out. And the tooling can help me put type annotations places to lock them in as I do my work so that I can give it all the clues possible to help it give me better error messages. But what I want is I want it to catch mistakes and point me to the problem so that when something has a compiler error, it's the shortest path possible to fix things. And I think that's just a different mindset between Elm and TypeScript. I don't know if it's only for TypeScript. So the last time I used Java was a very long time ago, like more than 10 years ago. And when I was using it, you had to specify the type of everything, of every variable that you set. And then later, they added the feature where you could say, val x equals blah, blah, blah, where the compiler would infer the type. So I'm guessing the compiler is still pretty strict. So if it could not figure something out, it would tell you. But since everything has annotations everywhere, I'm guessing it's pretty good at that. But still, yeah, when I put type annotations on let variables, it's partially for documentation. So that I don't have to, if I say something like x equals function call, then I don't want to have to look to the function definition to know what the type of my result is, especially if it contains something like generics, where then I would also have to check for the arguments. And that can be a rabbit hole. Right. But if I put a type annotation in there, and the type of the function call changes, I kind of want to know. Because that will change how I respond where I assign the variable. That's a great point. Yes. Right. Yeah. You don't want to be like trying to fix things and then without realizing it, change the type of a variable in your let bindings. Yeah. I mean, it will probably give an error somewhere else. Right. But if you're in the middle of a challenging type puzzle that you're solving, and you didn't realize then, yeah, you want to have put those as fixed points. So you can change one small thing at a time when you're trying to solve a problem. Yeah. Then I'm guessing in TypeScript, it can be dangerous because if the function call somehow starts returning any compared to something else before, now you have polluted your function call location. Yes. So I know we were supposed to talk about basics, but let's talk about any. Yes. Okay. So there are several points that just came up there. I want to touch on one thing quickly, which is you mentioned like Java and the explicitness and verbosity of Java types. I think to some extent like that, that's what a lot of people push back on when they're against typed languages. I think a lot of that came from a lot of these design decisions of Java. So there were many places where you would write duplicate information and you would define a type and then you would invoke a constructor and you'd have to put the type again and it seemed like repetitive information and this sort of thing. Like one of the things that a lot of people had trouble with Java is that almost everything is like a nominal type in Java rather than a structural type. So a nominal type being nominal as in name, nom, nom, if you prefer. Thank you. That is basically saying that if it doesn't refer to the specific identifier of like a constructor, then it's not the same thing, which in Elm that would be like a custom type. If you'd find a custom type in a particular module, if that custom type has a value of a particular record type inside of the constructor of the custom type variant, then it doesn't matter if you create something that has the same record with the same fields. It didn't use that identifier as the constructor to construct that variant and therefore it's not that type. And so you can do that in Elm. In Java, it's almost like everything is that. You can create these like map like structures and array lists and things like that. But even those are like a data structure that is nominally typed and can have key value pairs if you want or whatever. But you can't sort of just put a key value data structure and then, oh, okay, now I see it has these fields with these types. And so TypeScript has that and Elm has that. It turns out that's very nice because sometimes you're like, I don't care how it was constructed. I just need these values or maybe even a subset of these values like extensible records in Elm. I need a record and I don't care what other data it has, but I need a first name and a last name to be strings. And that's all I care about. So the annoying part in Java is that you can't have anonymous records basically. Yeah, exactly. You would have to have a first last name interface or class or thing like that. And something would, you'd have to say implements first last name or, you know, and that people get really tired of that with Java. And I feel like that's what a lot of the pushback against typed languages came from. And then people get into a language like Elm and they're like, wow, actually not only is the type system more lightweight and easier to do things like structural typing and that sort of thing. It feels like I'm fighting against things less to get the right types, but also it helps me more when my types are actually incorrect. Not just like I didn't put the correct identifier name, but actually like I have a problem with my types. It helps me more and I can actually trust it when it says the types are right because I don't have array index out of bounds issues and I don't have unexpected exceptions and things like that. So anyway, I think that's like some important history that like a lot of these decisions are learning from some of the lessons of like earlier versions of Java, which as you said, like Java itself is learning from some of these things too. Okay. So that's my rant about that. But so you wanted to talk about any types. Sure. So in JavaScript, nothing is typed. Right. So the thing that comes closest to that is the any type where the types basically has no information about what the type can be. And it uses that for things where it does not have any type definitions. So something like packages from NPM, sometimes it doesn't have any information. So it says everything's any arguments or any return types or any, everything's any. And that is something that is contagious. Right? Exactly. Yes. So if you have something that is that is any somewhere and then you do stuff on it, well, that also becomes any. I'm not entirely sure about how contagious it is and how that contagion works, but that's how it feels at least. Well, I mean, it's, I think it's pretty much exactly the same as if you used debug.to do in Elm. You know, the obvious difference being one debug.to do will never actually run. It'll just halt the program. And two, you can't compile it with the optimize flag in Elm. Right. So yeah. In production mode. Right. But otherwise, I think it's the same. There may be some slight differences, but effectively like the any type. I mean, in Elm, it's the same thing where it just says this could literally be anything. I don't know. Like, oh, you mean anything like it could be a function that you could call. It could be a function that takes this thing and turns it into this. It could be a string. Yeah, it could be anything. So you could like call it as a function. You could pipe it to something. You could, it could be an opaque type. It could be, it could be never, it could be anything, even if that's not even possible, but the Elm type system will just say, okay, well, I guess this could be any value. So it fits anywhere. Yeah. And then it will only complain if it tries to infer something based on it and finds out, oh, okay, well this now needs to be a string because you use it where it's, where you need a string. Exactly. And then it finds that some other place where the value also needs to be an integer or something. Exactly. And those are two contradictory values. So you use an any type in two places that are contradictory and the Elm type system will say, wait a minute, like, okay, I know, I know this could be anything, but it can't be any two things at once. And therefore something's wrong here. So that is for Elm where, yeah, we do have any, but only for development mode, just to help us work on something before it gets sent to production. But what about TypeScript? So how does it handle those conflicts of inference? Let me do a quick example here in the playground and see what happens. I'm curious too now. From what I can see in my playground, it doesn't seem to be doing that kind of inference. I'm seeing the same thing. So I did an example where I said, let a be any type. And then I defined a function that takes a Boolean and a number. And I called that function with a and a. And it says, yeah, that's fine. So I think any does behave differently. Well, I'll try to find some like posts on exactly how that type resolution for any works and try to link to it. But yeah, it appears that any is more permissive than an unbound type variable in Elm that you can get with debug.to do that just says this could be anything. So they're not exactly equivalent, it looks like. That's very interesting. Or rather the compiler does not do the same kind of checks. Maybe at the moment, because every time I hear about a new TypeScript version, it seems to do more and more checks, more powerful checks. So maybe at some point. Yeah, very interesting. Okay, so a couple things to mention on the topic of any. One is there's a type called unknown in TypeScript. And unknown is very different from any. In some ways, it's similar. In some ways, it's different. Unknown is saying you're going to have to prove what this type is before you can use it. So for example, so I think one of the most important things to know as a TypeScript developer, like someone who's writing TypeScript code, is that any is not just, you know, wherever you explicitly use any. Any happens all over the place, most prominently and most commonly in JSON.parse. When you do JSON.parse, it returns a type any. In fact, that's not even that's not even accurate, because JSON.parse will never return a function. But a function exists in that set of types any. So that's not good. So it's not even being specific about it could be any JSON type string, bool, number, array of those things, object of those things. It's just yeah, it could be anything it could be a could be a function. So when you do JSON.parse, be aware that that introduces a type and unsound type, as you said, that is contagious throughout your application. So so you know, there are tools like IO dash TS, and other similar tools that help do a pattern similar to the JSON decoding pattern in Elm. But so unknown is a really useful type to be aware of. But But it's very important to realize that many of the published like typings for for core JavaScript functions like JSON.parse return in any type. It's very common for NPM typings that are published. So a lot of NPM libraries will either come with TypeScript types when you install them with NPM install, or they will have a separate set of typings that you can install separately with this definitely typed package, I'll link to this thing where you can search for packages that have this definitely typed thing. But it's very common for those to use any as well. And as far as I know, there's not really a way to warn you if you're pulling in an any. Yeah, I mean, there's no implicit any, but it doesn't help with that, right? Exactly. Yeah. So no implicit any is like an option you can set in your TS config.json. And you should definitely use the strictest possible settings for that, including strict mode, but but you should be more strict than that I write about that a little bit in a blog post that I'll share called TypeScript spline spots. But yeah, so no, no implicit any will prevent you from saying like function greet takes a name and then doing something with it. And it'll say, Hey, since you didn't put a type annotation on the parameter name, I'm implicitly assuming that that's an any type. So the TypeScript is saying if you would like to use an any type there, which I just inferred that to be because you didn't explicitly give a type to the parameter because sure, you treat it like a string, but you can treat a lot of things like a string you can in in JavaScript, you can concatenate an object and a string and that's fine. As far as JavaScript semantics go, you can use a you can use a number or an object in a conditional check if object if number and those semantics are proper JavaScript semantics, they're they're confusing and they're often foot guns. And that's one of the like, so this is an important thing to note is that the soundness of Elm, it's more than just soundness, it's also like explicit semantics where Elm will say, Hey, if you want, if you want a Boolean check, I know you might be passing like some maybe value and saying if maybe value, but that's not how you do that in Elm. If you'd like to say if it if it is not nothing, then you need to do that explicitly, you probably actually want to do a case statement. But if you really want to do that, explicitly turn it into a bool for me, because that's probably a foot gun that so Elm will prevent you from unintentionally passing different values places. And that's something that makes it safer. Strictly speaking, in terms of soundness, it doesn't really affect the soundness of the type system. But practically, it does. Wait, let's get back to the grid function that you mentioned. If you do not put any type annotations on the arguments, they are all considered any exactly, exactly. Because, well, maybe not regardless of the implementation, but but if you're concatenating two things, then it can't infer the type based on that. So sure, you're concatenating two things, but I can concatenate a number with with a string in JavaScript, JavaScript lets you do that. So sure, you're saying hello plus name, but I can't infer that that must be a string based on that. Whereas Elm can, Elm can infer that and it's not going to say, Oh, I don't know what type this is, it's going to say, Oh, that must be a string because you're doing string plus plus something that thing must be a string. TypeScript can't do that. So if you say no implicit any in your type script configuration, then it will try to say it's unknown or it will let you know, hey, please add a type annotation. Is that it? Yeah, it will give you an error or a warning if you I think an error if you have no implicit any and it will say, hey, I'm inferring this, this type, the name parameter to be of type any, if you would indeed like it to be type any, then you must explicitly write that and you can write that you can say, name, colon, any, and it'll say, Okay, fine, that's an explicit any, I was giving you errors for implicit any. And now you've made that explicit, and that's fine. And so, of course, you could also explicitly put a different type like string in is the type annotation for the parameter. So that's that's no implicit any, but that doesn't prevent you from doing JSON dot parse on something. And suddenly, what value to get? Do you get back any and now you, you know, as far as I'm aware, there's, there's no TypeScript rule, not even like an ES lint type rule for preventing that if I'm mistaken, if there is something then please, please let me know, because I'd love to learn about that. But as far as I know, you can't, you can't prevent that or have some something that makes you like, market explicitly, I think that would be really nice to, you know, to get a warning if you do JSON dot parse, to at least have to explicitly write any if you did, to acknowledge, I know I'm getting an any back here. I'm guessing it would be useful, but I'm also guessing that it would be kind of annoying. But I'm sure it depends on how likely are you to fight with your compiler to get things right. So, so if you are doing something pretty complex, and you don't know how to type it, because JavaScript is very complex and you can do very complex things with it, then potentially like the only thing that you can do is to say it's any. Exactly. Or to go through the whole documentation to find exactly how to type it. And that can be very complex. I think you're spot on. And I think another, another thing is like, what if you do JSON dot parse and pass that down to something else and that passes something else and returns type and then through that chain of function invocations, you end up with something that's not any. Well, is it going to tell you anytime you use something that returns an any and force you to assign it to a variable somewhere or how would that even work? Yeah. I mean, that wouldn't be practical. Right. Right. So, so I think that the, you know, TypeScript language is just like, Hey, that's, that's just part of it. Like you get any somewhere. And really I think, I think the philosophy is it's really more like a, a, a linter where it it's a bonus that it catches some things and it does its best effort. And again, I don't, I don't mean this as a value judgment. I just, I just, I think that when you're writing TypeScript, which I, I use TypeScript and I think it's, I think it's great, but I think you need to be aware of these things when you use them, not just think like, Oh, it's typed. No, it's, it's typed in a very different way. And it's pragmatic for the goals it's solving for. But so that's, that's why I wrote that post TypeScript Spine Plots. And it's, it's one of my, one of my favorite posts that I've written. It's a short little one, but my, my goal with that post was for myself as much as for anybody to document these these cases to be aware of that could end up shooting you in the foot. I guess what you're saying is it really depends on how you view it. Like sure you can, if you're just trying to write JavaScript and then add type annotations to catch some errors, then yeah, it's a lender in a way. A very powerful one at that, but it has its limitations. But if you're thinking that you're not developing JavaScript, but you're writing TypeScript, then I think you're going to write your code differently. You're going to write it probably in simpler ways in ways that you can, that you know how to type them and you will do less dynamic things. You will do less dynamic constructs and you will be more explicit in everything that you do, which I think is the way to go. But that's from a biased opinion as well. Yeah, no, I mean, that's why I wrote this blog post for myself when I'm writing TypeScript code because I wanted to, to just like have a quick reference of what are the things that introduce unsoundness, not because I'm never going to use them, but because I, in my mind, I want, I want a bright red ring in my brain around it whenever I see JSON.parse. And you know, so for me writing this blog post succeeded in doing that in my brain where I, you know, anytime I see JSON.parse, I'm like, uh oh, there's a, there's an any that's trickling through my types now. Same as when you call HTTP requests, right? Yeah, yeah, cause you, I mean, cause it's JSON.parse under the hood. JSON.parse is just used so many places and same when you install in a typings of an NPM package and you know, so yeah, you have to, you have to be very skeptical of typings that come from the outside. You have to be a little bit paranoid. So we mentioned that unknown is a better alternative to any when possible at least, which I think it's most cases, but when you use unknown, what you need to do is to narrow the type. You need to tell TypeScript how do you, how can I tell you that this will be a string or that this will be something else? And what you do for that is to say things like if a value contains, has a property to uppercase or, or you call things like array.isArray or use type of stuff like that. Right. Usually you'd want to do type of rather than checking for a property on string. Yeah. But yeah, yeah, yeah. You can just say type of, and it, and this is one of the really interesting things about TypeScript is it, it uses control flow analysis in order to narrow types as you, as you're saying. Yeah. And I noticed that in Elm, you don't have any of those. The only thing that you have is better matching. Yes, exactly. You can have validation functions, but then how do you use those values? You use better matching or things like maybe that with default or result that with default, but then you lose some information. Right. And under the hood it's pattern matching anyway. Right. Because they're coming edit. And again, you know, I mean, I guess I, I guess I sound like a broken record here, but I always, I always like to think, you know, what are, what are the design constraints and the problems that the author is trying to solve for, right? And in the case of the TypeScript compiler, like what, what problem are they trying to solve? And if you get in the shoes of the compiler authors, the problem they're trying to solve is well, we have an untyped language, JavaScript, and what we have, what does code do now? Cause we want to fit into that. Well, what people say, if value is no, else if type of string else if type of whatever, and you know, you can do that to, to check the types. Well, okay, well we can do some, some control flow analysis to, to narrow the types in those cases based on runtime checks. Whereas Elm is a language built from the ground up to be a type safe and type checked. And so Elm says, actually I have these constructs specifically for narrowing types. And actually in, in Elm, a very important distinction between Elm and TypeScript is that Elm does not have untagged union types. It only has tagged union types, which means, whereas in TypeScript you could say if type of value equals, equals, equals string, then do something else. If type of value equals, equals, equals object in Elm, there's no such thing because if it's a string, it's a string. If it's a maybe string, then okay. Case of these two variants, but it's actually not a maybe string. It's a, it's a maybe with one of two variants, but it's not like a string or an object or a it's only one type of thing. You can't say it's a string or a number. There's no such thing. Yeah. Which I think is actually a very cool feature of TypeScript that you can have a true union in the sort of like mathematical set theory sense of the term where you could have a function argument that accepts, you know, it accepts strings. And then you say, actually, if you, if you pass null to it, it has a specific meaning. And then you can keep all of the previous code compiling, but also accept a new type that didn't compile before because it's a proper union. Whereas in Elm, if you, if you were to change that suddenly all the code that was passing in strings, now it has to be just string. So everything has to put a tag in front of it now. So I think that's like a pretty cool feature, but, but that's that's definitely one thing to, to, you know, really try to understand is, is how much TypeScript is fitting into runtime checks that you could do in JavaScript. And actually it does do in JavaScript. And then it's using control flow analysis to narrow the types within that, which is very pragmatic and really, really neat. Yeah. I don't know if I like the string or null in practice. Yeah. But I do think I do like the string or number or string or username, which I think is, I think it's pretty neat. As long as it compiles as a proper checks afterwards, which I imagine it does. Yeah. Well, be sure that you have strict null checks on that's another tsconfig.json option, which I highly recommend just using strict mode. And yeah. Do you want to talk about nulls and then undefined in TypeScript? Oh man. Null and undefined. Is it that bad? Well, it always just throws me off how there are these two different ways to represent this thing, but yeah, I don't know. I don't know. I don't know if I have that much to say about it other than why, why do we have two different ways to represent absence of values? My, what I always find interesting with JavaScript, not TypeScript, JavaScript is that zero divided by zero is not a number. It's an N. But if you look at what the mathematicians say, they say it's undefined. Even in JavaScript, like the only language that has undefined, but even there it isn't undefined. It's just N. If you're a mathematician and you go to write some JavaScript code, let's just say you're probably going to be pretty confused. You'll be like using an equals operator to like change the values of things. And you're like, hmm, I don't think that's what equals means. And then it's like, oh, are you, are you thinking of triple equals? It's like, what is triple equals? Wait, triple? Are there no double equals? Oh, we don't use that. Yeah, no, that's rubbish. Until how many equal signs does it go? Five, six? Yeah. We use linting checks to disable double equals. It's a bug if you use double equals. Do you say something like equal with an exponent? Like equals to the power of three to say triple equals? Or three equal? What I'm wondering about, and maybe this is just a simple lookup documentation type of question, but if you say something like string or null, does a null mean it's the null value? Yes. Or it is null or undefined? It's null. Okay. That I find pretty weird because a lot of things, and I see null everywhere in TypeScript, but I also know that undefined is used everywhere because you're missing arguments or stuff like that. Right. Missing arguments, you look something up in an object and it doesn't contain the key. But then you get undefined, you don't get null. Correct. So does TypeScript tell you about those? Like, oh, this is probably null. That's a good question. I mean, for all intents and purposes, they're going to be similar because a lot of the time you're going to say, I mean, if you do, a lot of the time you're going to say if value then, and so it doesn't matter because it's checking truthiness, not strict equality. Poor number zero. Oh my gosh. Poor empty string. It makes me so happy writing Elm and not having to think about which ones evaluate to false and which ones evaluate to true. I will never trust myself with those things. I'll never trust myself with those things and I will never trust myself with precedents of or and end and things like that. Like in Elm, I always write it with parentheses and then let Elm format say, you don't need those there. The precedence rules will take care of that. I'm like, okay, but at least I saw you do that and I knew what the precedence was before I hit save. I do the same thing. So TypeScript also has the void type. We don't because that is absolutely useless. So void means, hey, I'm going to do a side effects. Exactly. There are no side effects in Elm. I think void is short for avoid. I'm fine with it. I needed one pun in the show. Come on. What I find interesting, but also entirely normal because of the soundness argument that we talked about before, is that there are no types for exceptions and there are no types for experimentations. So there's a lot of things that you do in TypeScript that do not reflect reality. I feel like exceptions could have been documented, could have been annotated, at least somehow to say, hey, I can guarantee you that this will give you an exception and this will be the type. I think that would be really cool too. I think it's probably just a pragmatic choice that there are so many places where exceptions throw the same type of error or exceptions throw a string or the place that throws an exception is coming from a library that doesn't have typings. But Java has this notion of handled or checked exceptions and then there's also runtime exceptions. So it's kind of weird because you get this specific set of types of exceptions that can be thrown and exceptions that are handled. That's cool, but then you throw something that's a subtype of runtime exception and it doesn't have to tell you about that. Because the idea I guess is like, well, these are things that are unexpected and unrecoverable or something like that. So it wanted to have an escape patch to be able to say, hey, if I'm trying to read a file and the hard drive isn't working, I don't want to make every user handle that state. But I don't know. I mean, yeah, I think it's really nice that Elm lets you be so explicit that they're just types. And if you don't want to handle something, then you at least have to be explicit in doing a catchall or whatever you want to do to pass that through. But yeah, I mean, TypeScript made the choice to not have a notion of sort of checked exceptions. And I agree, I think it would be cool. It would be a nice feature, but I'm not sure if there are any plans for something like that. But so that is another blind spot of the TypeScript type system. Is it in your blog post? It is. Okay, good. You did a good job, Dillon. It's it. It's my catalog of places you can introduce unsoundness. If you find something that's not in there, please let me know because I'll try to keep it up to date with any other things people think of. So okay, so before we finish, I think it would be nice to maybe we can go through this catalog. But one more thing I wanted to touch on is like this difference in the Elm and TypeScript type systems of custom types with variants in Elm. Yeah, we should talk about those. And discriminated unions in TypeScript. So discriminated unions are very cool. And I think it's important to realize that as far as just the feature of a discriminated union goes, it's a pretty sound feature. Can you explain what those are? Yeah, absolutely. So now again, if you want to understand the TypeScript type system, think about the the motivation and design constraints of the author. So similar to type of string checks, it uses narrowing using kind of code flow analysis. Same with discriminated union. Dillon, you sound like a broken object. That's a good one you're in. And that might have to go on a t shirt. Sounds good to me. But yeah, so it's using the same technique of this sort of runtime analysis check that it hooks into to narrow the types to give you type information in that context of the control flow. And so if you have a field in an object, which can be, you know, a shape has a, you know, you have an object, which can can either be shape is square, and then it has a width field in it. Or, so this would be like a union type using the pipe operator. So you could say like type, shape equals, and then an object, shape, colon, square, the string square. So it's that's actually a string that type is a string. And then and then you can have width is a number. And then you could have or pipe, it's a an object shape, colon, string rectangle, and it has the property with number, height number. So now, what TypeScript is going to do is if you have a value of that type, you can do like a switch statement, or an if statement or whatever, right? Because it's just you're just doing a runtime check like you would if you actually had those values. So you would say, you know, if shape dot, well, shape dot shape equals square, then you know that it must have based on the type definition, you know that it has a width and it doesn't have a height. And if it's a rectangle, you know, it has a width and a height. And if it's a circle, you know, it has a radius or whatever it may be, right? So this is how unions work. TypeScript has this notion of like literal values, which is a really cool feature. So like a literal value, you could have a type string, but you could have a, you know, subsets. You could have a sub. Exactly. So you could have like a mode argument to something, you could have a parameter that's mode. And mode is a string and well, what do you pass it? You say mode is either verbose or silent or something like that, right? And well, if you know the specific subset of strings that it could be, then you would just say mode is either verbose or silent and you could add different things to it. But that's the literal string. It's not a, you know, magical variant type like in Elmore, it's the specific thing. It's just a string, but you're saying this can only be these strings. And again, using this sort of control flow analysis, TypeScript can say, Hey, you're passing a literal string and you're passing the string, you know, loud instead of verbose. And it'll say, Hey, you can only pass verbose or silent here. So this string is incorrect. So it it's actually analyzing the values of your code. Whereas in Elm, you would have to define a custom type, which you could not reuse. It would be only for those places. Right. It's like a nominal type. It's a nominal tape and that works well, but it's also sometimes quite annoying. Right. And so I do like that part about TypeScript. It's very pragmatic. It's a very, very nice feature. And you know, and if you, well, I'm not sure it's pragmatic. I think it's just a good feature. I mean, they didn't have to be. Absolutely. Yeah. I mean, in a way I think they did because TypeScript, you know, in a way TypeScript is almost like descriptive rather than prescriptive. It's like TypeScript is a type system to, to attempt to describe how people use JavaScript, not how people should write code. And that's what people, people do. They pass literal strings and then they check if the string is, you know, verbose or if the string is silent, then I'm going to change the behavior. Sure. And people can still pass in anything else in JavaScript. So I find that the fact that they can specify a subset is just an additional feature that they met, that they made. And that is awesome. They don't do the same thing for numbers as far as I'm aware. You can't say, oh, this number is one or two. Right. Right. Or I guess maybe you can with EGEM. Actually, I think you can. Is that what you've done so far? Partially? I think you can do that. All right. And well, that's awesome. I wonder how they do that with like concatenations and additions, subtractions, how they can tell whether something is indeed within the limited ranges or limited sets of values. Well it's weird with Java. So I just tried doing a literal type to say like, you know, type version equals one or two and you can do that. You can absolutely do that. And then if you say, you know, let version of type version equal one or equal two, it's fine. And if you say it equals three, it says that's not of type version. All right. Nice. The strange thing is you can do that with like floats, which float equality should not be trusted. So anyway, that's a little bit odd and probably something you should be skeptical of. But doing it with integers, which yes, they're all just numbers, but if you only use integers, then that's safe. But yeah, and I think enums under the hood are just using integers. Yeah. And I think you can assign them other values than just the order. Right. Right. So yeah, you actually can, I think. Yeah. That's pretty cool. Yeah, it's a very cool feature. So discriminated unions are just taking advantage of that notion of literals, but they're saying, well, this object has a key, this discriminant, this key that can tell me what the shape is, because if this key shape is square, then I know what fields and of what types it has. If it's circle, then I know what fields and what types it has. So it's just using that same technique of sort of type narrowing using conditional flow analysis. And it's just leveraging that along with like this notion of literal types where you can say shape square, the string square. And you just and all you have to do is if you if you check if, you know, shape dot shape, triple equals square string square. Now you've narrowed down that type because it has enough information to infer some things about the type based on that. So that's how discriminated types work. And it's a very cool feature. So the one thing that's very, very different in this regard between element and TypeScript is like, if you're just using a plain old discriminated type, it works quite well, you know, it's, it works pretty much like you would expect as an Elm developer. But then when you when you want to create an opaque type, that's when things get very different. I don't want to I don't want to say anything that's that's no longer accurate, because I know that there are some changes, like with regard to like private methods, and that sort of thing lately. So and I'm not familiar with the latest in that. So things may change in this regard. I also know there's like a feature called branded types. And to be honest, I've tried to try to use just use them and I don't understand them. I haven't been able to figure it out. So if you figure it out, try it and like, let me know how it works. Yeah, it works. From what I understand, like a branded type allows you to, to do something similar to an opaque type in Elm. But all I can all I can say really is that in my personal experience, branded, I've never seen a branded type in actual use. I'm sure there are some libraries that that use it. But it like, practically, I don't think people people use branded types on a day to day basis. Whereas in Elm, people use opaque types. So that's, that's all I feel I can safely say I think a feature may exist to get the same type of functionality as an opaque type. In practice, I don't think it's very common. That's something that I think is huge. I can't overstate the importance of opaque types as far as like, because soundness is one thing, but protecting invariants is actually a separate thing. It's actually not related to soundness. And like protecting invariants is more about controlling the internals of an API. So you know, the only thing that can refer to this is in this one file, I can't touch it outside of there. And this is huge in Elm. And if you're not, you know, if you're not doing this on a regular basis, check out our episode on opaque types. We talk about all the details of that. I think it's a really important technique in Elm. I think it's underused or overly difficult in TypeScript. On a different topic, I should say one last thing about discriminated unions. By default, switch statements in TypeScript are not exhaustive and they will not give you a warrant, an error of any kind. If you have a non exhaustive case statement, switch statement, there are, there's an ESLint rule that I'll link to in the show notes for how to prevent inexhaustive switch statements. So you should definitely do that to make TypeScript more safe. I think that's really crucial. There is like a trick you can use. There's a never type in TypeScript, which is pretty much the same as with Elm. And you can assert that something is unreachable by returning a never type. So you can do default and then return something that returns never type. And it'll say, wait a minute, you can't return a never type. But if you can never reach there, then it won't complain. Exactly. If you do an exhaustive case and then you say default, return this unreachable never type, then it'll say, well, okay, the default is never going to happen because you handled every case. But that only works as well as you remember to do that. And I wouldn't trust that myself. I would want it to have a blanket error anytime I do an inexhaustive switch statement. So there are a few things that I find interesting. I haven't played with those in TypeScript. But you can kind of do dynamic typing in a sense like these types will depend on other types. Exactly. Perhaps dependent typing, if you will. No, no. Don't confuse people. Don't confuse people. It's not dependent types. I thought people could depend on you. It depends. Ever since you started being an independent worker. So yeah, you have something in TypeScript type system that are like you have key ofs and type of where you can say, oh, this type here, that's just going to be any key of this record. And then TypeScript figures out things on its own. I haven't played with those and I don't know if it's if they're interesting or if they're foot guns, just like how because they become dependent on what other code is doing. And I feel like we're coming back to the argument about let variables and no type annotations over there where if something changes, I kind of want to know. So is it kind of like laziness or is it really interesting? I mean, I think it I can't speak to the foot guns of it too much because I haven't encountered any. There may be, but it certainly is a complexity in the type system. And we've talked about this before, how like, I mean, I'll give my rant again briefly. The reason we can trust types as like a proof about our programs is because of their simplicity. Like the program itself is a proof to you could follow the flow and prove what it can and can't do it. But types give us a very simple proof that we can follow easily. So the utility of a type is that we can, you know, our brains are able to track what the types are because it's simple and the type system can help us enforce those simple constraints. And we can reason about our code better that way. So the simplicity of type systems can be one of the core features of it. And this certainly adds complexity to the type system, which could make it harder to follow the correctness of your program potentially. But I know that like you can do some really interesting like metaprogramming type things as library author using these types of features. So there's like, there are some utility types and there are some really powerful like features in the type system. And I know that like the, you know, the Prisma team, for example, that have this like ORM sort of like, you know, database invocation tool that uses TypeScript to make type safe database queries. They make heavy use of these advanced TypeScript features. You know, if you like Google, Prisma, advanced TypeScript, you'll probably find some of their like meetup talks and stuff. I've watched some of them and they're very hard to follow. My TypeScript foo is not advanced enough to follow the techniques they're using, but there are some really advanced things you could do to build tools like Prisma where you can describe the set of database queries you can make with a particular schema, which is very cool. Another interesting thing in TypeScript is like there's no tuple type in TypeScript. There's just arrays. There is? Well, right. They're technically, what I mean to say is the tuple type is not distinct from an array. It's more of like a literal type. It's like a literal of an array with two entries. Yeah. There's a tuple type, but there's no tuple value. Right. It's not a distinct special type. It's more like a literal, just like a discriminated union. It's not really a type. It's like a literal and it uses these sort of type narrowing techniques with the conditional control flow to check that. So, yeah, you can say this is an array, but specifically it's a subset of arrays. It's not just any array. It's the subset of arrays that contain two values of this type, which I think is very cool. Whereas in Elm, a tuple is more like a nominal type. It's kind of an in between sort of thing because it actually is like a special thing, but I think that's a cool feature of TypeScript. Yeah. And there's no upper size limits for tuples in TypeScript. Right. For better and for worse. Can you give me a short summary on the differences between interface and type and declare, I think? It is short too much to ask. Type aliases versus interfaces. There's like a lot of debate around which is better, which is like faster for compiler performance, which has whatever. I think I've heard people have this discussion and I don't think there's like a clear answer. At least there's not a concise way to describe it. I tend to just use type aliases because it feels more natural as an Elm developer to use a type alias to like an object type definition. So that would be the type keyword, right? Yep. Exactly right. Yep. And then interface. Because, yeah, because it's like... Is interface about objects? Yeah, interface is like saying that it's an object with a subset of particular keys. And then there's like strange stuff where many different types of things are actually objects under the hood. So you can extend the array type in TypeScript and there's all sorts of... So personally, I just like not to think about those details and I just use type, the type keyword. But that's just me. Yeah. And that's because you don't want to use JavaScript, you want to use a typed language. Yeah. You don't see TypeScript as a linter, you see TypeScript as a language with types that you can use and understand. Yes. And I also prefer to pretend that inheritance doesn't exist because it's very confusing in general and particularly confusing with prototypal inheritance in JavaScript. Yeah. Well, I think we've covered things fairly thoroughly. In a very systematic and organized fashion. Yes. So, now... Oh, let's see. Now definitely check out this TypeScript blind spots blog post. I have like a few other cases to be aware of. And again, please, truly, if there's anything else that you are aware of that introduces unsoundness into the TypeScript type system, let me know and I will catalog it there because I think that's just a good thing to know, where you can trust it and where you can't. But check that out. I've also mentioned my TypeScript without transpilation post before that kind of talks about using js.comments to get type information. I think that's a useful technique. So we'll link to that blog post. Any other good resources? And what if I want to use Elm with TypeScript? Oh, well, I'm glad you asked. Elm TS Interop. I'm actually just releasing a new version of the community edition and a new doc site today. So by the time you hear this, it'll already be out. As well as a new pipeline API and codec API for the Elm TS JSON API. So yeah, check that out. Check out our Elm TS Interop episode. What other resources are there? The TypeScript documentation site has a lot of good examples. Do you know of any TypeScript to Elm comparison files or something? That's a good question. There are a bunch of search results, but a lot of them are these generic stack ups type sites that I don't find that useful because they're sort of mechanical. But if we find a good one, we'll link to it. Yeah. All right. Well, until next time. Until next time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 1.0, "text": " Hello, Jeroen.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 1, "seek": 0, "start": 1.0, "end": 2.0, "text": " Hello, Dillon.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 2, "seek": 0, "start": 2.0, "end": 6.84, "text": " So, what are we talking about today?", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 3, "seek": 0, "start": 6.84, "end": 11.72, "text": " Today we're talking about TypeScript again, and we'll be comparing it with Elm.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 4, "seek": 0, "start": 11.72, "end": 16.88, "text": " But since comparing the two is a very big topic, we were considering just looking at", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 5, "seek": 0, "start": 16.88, "end": 18.16, "text": " the type systems.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 6, "seek": 0, "start": 18.16, "end": 19.16, "text": " Yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 7, "seek": 0, "start": 19.16, "end": 20.8, "text": " I think that's enough for an episode.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 8, "seek": 0, "start": 20.8, "end": 21.8, "text": " Knowing us.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 9, "seek": 0, "start": 21.8, "end": 22.8, "text": " Yeah.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 10, "seek": 0, "start": 22.8, "end": 27.8, "text": " So let's sort of clarify something.", "tokens": [50364, 2425, 11, 508, 2032, 268, 13, 50414, 50414, 2425, 11, 28160, 13, 50464, 50464, 407, 11, 437, 366, 321, 1417, 466, 965, 30, 50706, 50706, 2692, 321, 434, 1417, 466, 15576, 14237, 797, 11, 293, 321, 603, 312, 15763, 309, 365, 2699, 76, 13, 50950, 50950, 583, 1670, 15763, 264, 732, 307, 257, 588, 955, 4829, 11, 321, 645, 8079, 445, 1237, 412, 51208, 51208, 264, 2010, 3652, 13, 51272, 51272, 865, 13, 51322, 51322, 286, 519, 300, 311, 1547, 337, 364, 3500, 13, 51404, 51404, 25499, 505, 13, 51454, 51454, 865, 13, 51504, 51504, 407, 718, 311, 1333, 295, 17594, 746, 13, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.22890709493761865, "compression_ratio": 1.5377777777777777, "no_caption_prob": 0.06362519413232803}, {"id": 11, "seek": 2780, "start": 27.8, "end": 30.52, "text": " What do we want listeners to take away from this?", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 12, "seek": 2780, "start": 30.52, "end": 36.2, "text": " Because I want to state that our goal is not to pick a winner, right?", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 13, "seek": 2780, "start": 36.2, "end": 37.2, "text": " It's a...", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 14, "seek": 2780, "start": 37.2, "end": 41.68, "text": " No, no, no.", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 15, "seek": 2780, "start": 41.68, "end": 45.64, "text": " For one thing, we're far too biased to be trusted with such a thing.", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 16, "seek": 2780, "start": 45.64, "end": 47.68, "text": " That is true.", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 17, "seek": 2780, "start": 47.68, "end": 48.96, "text": " We're just laying out some facts.", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 18, "seek": 2780, "start": 48.96, "end": 56.36, "text": " But also, I'm a big fan of this idea of not being an absolutist about which things are", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 19, "seek": 2780, "start": 56.36, "end": 57.36, "text": " better.", "tokens": [50364, 708, 360, 321, 528, 23274, 281, 747, 1314, 490, 341, 30, 50500, 50500, 1436, 286, 528, 281, 1785, 300, 527, 3387, 307, 406, 281, 1888, 257, 8507, 11, 558, 30, 50784, 50784, 467, 311, 257, 485, 50834, 50834, 883, 11, 572, 11, 572, 13, 51058, 51058, 1171, 472, 551, 11, 321, 434, 1400, 886, 28035, 281, 312, 16034, 365, 1270, 257, 551, 13, 51256, 51256, 663, 307, 2074, 13, 51358, 51358, 492, 434, 445, 14903, 484, 512, 9130, 13, 51422, 51422, 583, 611, 11, 286, 478, 257, 955, 3429, 295, 341, 1558, 295, 406, 885, 364, 18757, 468, 466, 597, 721, 366, 51792, 51792, 1101, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.18011443398215554, "compression_ratio": 1.5150214592274678, "no_caption_prob": 9.026427142089233e-05}, {"id": 20, "seek": 5736, "start": 57.36, "end": 62.2, "text": " So it's far more useful to look at what are the goals, what are these tools best suited", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 21, "seek": 5736, "start": 62.2, "end": 67.92, "text": " for, and let's understand the design choices that make them well suited for these types", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 22, "seek": 5736, "start": 67.92, "end": 68.92, "text": " of things.", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 23, "seek": 5736, "start": 68.92, "end": 73.08, "text": " And I think that is very much the way that I think about the TypeScript versus the Elm", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 24, "seek": 5736, "start": 73.08, "end": 77.0, "text": " type systems is TypeScript...", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 25, "seek": 5736, "start": 77.0, "end": 79.03999999999999, "text": " I've said this before on the podcast.", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 26, "seek": 5736, "start": 79.03999999999999, "end": 85.16, "text": " To me, TypeScript is extremely elegantly designed to solve the exact problem it solves, which", "tokens": [50364, 407, 309, 311, 1400, 544, 4420, 281, 574, 412, 437, 366, 264, 5493, 11, 437, 366, 613, 3873, 1151, 24736, 50606, 50606, 337, 11, 293, 718, 311, 1223, 264, 1715, 7994, 300, 652, 552, 731, 24736, 337, 613, 3467, 50892, 50892, 295, 721, 13, 50942, 50942, 400, 286, 519, 300, 307, 588, 709, 264, 636, 300, 286, 519, 466, 264, 15576, 14237, 5717, 264, 2699, 76, 51150, 51150, 2010, 3652, 307, 15576, 14237, 485, 51346, 51346, 286, 600, 848, 341, 949, 322, 264, 7367, 13, 51448, 51448, 1407, 385, 11, 15576, 14237, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1900, 1154, 309, 39890, 11, 597, 51754, 51754], "temperature": 0.0, "avg_logprob": -0.1505217812278054, "compression_ratio": 1.7193675889328064, "no_caption_prob": 2.5070088668144308e-05}, {"id": 27, "seek": 8516, "start": 85.16, "end": 88.36, "text": " is Elm is extremely elegantly designed to solve the problem it solves.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 28, "seek": 8516, "start": 88.36, "end": 91.28, "text": " And they solve two very different problems.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 29, "seek": 8516, "start": 91.28, "end": 98.84, "text": " So Jeroen, I promised you a quote, which we both agreed was better to save for on air", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 30, "seek": 8516, "start": 98.84, "end": 101.4, "text": " rather than reading it on the pre call.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 31, "seek": 8516, "start": 101.4, "end": 104.16, "text": " I'm so excited to finally listen to it.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 32, "seek": 8516, "start": 104.16, "end": 108.02, "text": " Yes, now that we've gotten your expectations high, here you go.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 33, "seek": 8516, "start": 108.02, "end": 111.56, "text": " So this is from a GitHub issue in the TypeScript repo.", "tokens": [50364, 307, 2699, 76, 307, 4664, 14459, 3627, 4761, 281, 5039, 264, 1154, 309, 39890, 13, 50524, 50524, 400, 436, 5039, 732, 588, 819, 2740, 13, 50670, 50670, 407, 508, 2032, 268, 11, 286, 10768, 291, 257, 6513, 11, 597, 321, 1293, 9166, 390, 1101, 281, 3155, 337, 322, 1988, 51048, 51048, 2831, 813, 3760, 309, 322, 264, 659, 818, 13, 51176, 51176, 286, 478, 370, 2919, 281, 2721, 2140, 281, 309, 13, 51314, 51314, 1079, 11, 586, 300, 321, 600, 5768, 428, 9843, 1090, 11, 510, 291, 352, 13, 51507, 51507, 407, 341, 307, 490, 257, 23331, 2734, 294, 264, 15576, 14237, 49040, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1555662508364077, "compression_ratio": 1.5525291828793775, "no_caption_prob": 5.9549611250986345e-06}, {"id": 34, "seek": 11156, "start": 111.56, "end": 117.16, "text": " And someone is asking the question, what I'm interested in knowing is whether the TypeScript", "tokens": [50364, 400, 1580, 307, 3365, 264, 1168, 11, 437, 286, 478, 3102, 294, 5276, 307, 1968, 264, 15576, 14237, 50644, 50644, 1768, 17330, 1469, 1949, 2010, 8568, 2693, 554, 1287, 382, 746, 300, 820, 312, 6806, 13, 50994, 50994, 400, 257, 15576, 14237, 4965, 1469, 4006, 307, 1566, 11, 445, 4124, 4682, 281, 341, 935, 11, 51264, 51264, 2319, 4, 1626, 1287, 307, 406, 257, 1715, 3387, 13, 51478, 51478, 14673, 1287, 11, 46878, 293, 14024, 1254, 257, 4923, 766, 13369, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15612243203555837, "compression_ratio": 1.5546218487394958, "no_caption_prob": 4.610547694028355e-05}, {"id": 35, "seek": 11156, "start": 117.16, "end": 124.16, "text": " community slash team consider type checking unsoundness as something that should be fixed.", "tokens": [50364, 400, 1580, 307, 3365, 264, 1168, 11, 437, 286, 478, 3102, 294, 5276, 307, 1968, 264, 15576, 14237, 50644, 50644, 1768, 17330, 1469, 1949, 2010, 8568, 2693, 554, 1287, 382, 746, 300, 820, 312, 6806, 13, 50994, 50994, 400, 257, 15576, 14237, 4965, 1469, 4006, 307, 1566, 11, 445, 4124, 4682, 281, 341, 935, 11, 51264, 51264, 2319, 4, 1626, 1287, 307, 406, 257, 1715, 3387, 13, 51478, 51478, 14673, 1287, 11, 46878, 293, 14024, 1254, 257, 4923, 766, 13369, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15612243203555837, "compression_ratio": 1.5546218487394958, "no_caption_prob": 4.610547694028355e-05}, {"id": 36, "seek": 11156, "start": 124.16, "end": 129.56, "text": " And a TypeScript core team member is saying, just speaking specifically to this point,", "tokens": [50364, 400, 1580, 307, 3365, 264, 1168, 11, 437, 286, 478, 3102, 294, 5276, 307, 1968, 264, 15576, 14237, 50644, 50644, 1768, 17330, 1469, 1949, 2010, 8568, 2693, 554, 1287, 382, 746, 300, 820, 312, 6806, 13, 50994, 50994, 400, 257, 15576, 14237, 4965, 1469, 4006, 307, 1566, 11, 445, 4124, 4682, 281, 341, 935, 11, 51264, 51264, 2319, 4, 1626, 1287, 307, 406, 257, 1715, 3387, 13, 51478, 51478, 14673, 1287, 11, 46878, 293, 14024, 1254, 257, 4923, 766, 13369, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15612243203555837, "compression_ratio": 1.5546218487394958, "no_caption_prob": 4.610547694028355e-05}, {"id": 37, "seek": 11156, "start": 129.56, "end": 133.84, "text": " 100% soundness is not a design goal.", "tokens": [50364, 400, 1580, 307, 3365, 264, 1168, 11, 437, 286, 478, 3102, 294, 5276, 307, 1968, 264, 15576, 14237, 50644, 50644, 1768, 17330, 1469, 1949, 2010, 8568, 2693, 554, 1287, 382, 746, 300, 820, 312, 6806, 13, 50994, 50994, 400, 257, 15576, 14237, 4965, 1469, 4006, 307, 1566, 11, 445, 4124, 4682, 281, 341, 935, 11, 51264, 51264, 2319, 4, 1626, 1287, 307, 406, 257, 1715, 3387, 13, 51478, 51478, 14673, 1287, 11, 46878, 293, 14024, 1254, 257, 4923, 766, 13369, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15612243203555837, "compression_ratio": 1.5546218487394958, "no_caption_prob": 4.610547694028355e-05}, {"id": 38, "seek": 11156, "start": 133.84, "end": 138.12, "text": " Soundness, usability and complexity form a trade off triangle.", "tokens": [50364, 400, 1580, 307, 3365, 264, 1168, 11, 437, 286, 478, 3102, 294, 5276, 307, 1968, 264, 15576, 14237, 50644, 50644, 1768, 17330, 1469, 1949, 2010, 8568, 2693, 554, 1287, 382, 746, 300, 820, 312, 6806, 13, 50994, 50994, 400, 257, 15576, 14237, 4965, 1469, 4006, 307, 1566, 11, 445, 4124, 4682, 281, 341, 935, 11, 51264, 51264, 2319, 4, 1626, 1287, 307, 406, 257, 1715, 3387, 13, 51478, 51478, 14673, 1287, 11, 46878, 293, 14024, 1254, 257, 4923, 766, 13369, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.15612243203555837, "compression_ratio": 1.5546218487394958, "no_caption_prob": 4.610547694028355e-05}, {"id": 39, "seek": 13812, "start": 138.12, "end": 141.88, "text": " There's no such thing as a sound, simple, useful type system.", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 40, "seek": 13812, "start": 141.88, "end": 148.32, "text": " Now, I'm not sure I agree with that last point, unless it's specifically within the context", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 41, "seek": 13812, "start": 148.32, "end": 154.44, "text": " of what TypeScript is doing, which is adding types within the semantics of JavaScript,", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 42, "seek": 13812, "start": 154.44, "end": 157.62, "text": " and within the ecosystem of existing JavaScript code.", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 43, "seek": 13812, "start": 157.62, "end": 160.48000000000002, "text": " In that case, yes, I think that's true.", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 44, "seek": 13812, "start": 160.48000000000002, "end": 165.36, "text": " But in the broader sense, I think that Elm gives a pretty good case that you can have", "tokens": [50364, 821, 311, 572, 1270, 551, 382, 257, 1626, 11, 2199, 11, 4420, 2010, 1185, 13, 50552, 50552, 823, 11, 286, 478, 406, 988, 286, 3986, 365, 300, 1036, 935, 11, 5969, 309, 311, 4682, 1951, 264, 4319, 50874, 50874, 295, 437, 15576, 14237, 307, 884, 11, 597, 307, 5127, 3467, 1951, 264, 4361, 45298, 295, 15778, 11, 51180, 51180, 293, 1951, 264, 11311, 295, 6741, 15778, 3089, 13, 51339, 51339, 682, 300, 1389, 11, 2086, 11, 286, 519, 300, 311, 2074, 13, 51482, 51482, 583, 294, 264, 13227, 2020, 11, 286, 519, 300, 2699, 76, 2709, 257, 1238, 665, 1389, 300, 291, 393, 362, 51726, 51726], "temperature": 0.0, "avg_logprob": -0.06961590272408945, "compression_ratio": 1.6666666666666667, "no_caption_prob": 8.529997103323694e-06}, {"id": 45, "seek": 16536, "start": 165.36, "end": 168.52, "text": " a sound, simple and useful type system, right?", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 46, "seek": 16536, "start": 168.52, "end": 170.72000000000003, "text": " Can you elaborate what you mean with soundness?", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 47, "seek": 16536, "start": 170.72000000000003, "end": 172.12, "text": " Or what they mean with soundness?", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 48, "seek": 16536, "start": 172.12, "end": 173.12, "text": " Sure.", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 49, "seek": 16536, "start": 173.12, "end": 178.4, "text": " Yeah, well, I think soundness means, so like they give an example in this issue, which", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 50, "seek": 16536, "start": 178.4, "end": 184.4, "text": " I'll link to, you know, where they're adding something to an array.", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 51, "seek": 16536, "start": 184.4, "end": 188.72000000000003, "text": " And you know, you can kind of fool the type system.", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 52, "seek": 16536, "start": 188.72000000000003, "end": 194.86, "text": " So there are a number of ways that you can fool the type system in TypeScript.", "tokens": [50364, 257, 1626, 11, 2199, 293, 4420, 2010, 1185, 11, 558, 30, 50522, 50522, 1664, 291, 20945, 437, 291, 914, 365, 1626, 1287, 30, 50632, 50632, 1610, 437, 436, 914, 365, 1626, 1287, 30, 50702, 50702, 4894, 13, 50752, 50752, 865, 11, 731, 11, 286, 519, 1626, 1287, 1355, 11, 370, 411, 436, 976, 364, 1365, 294, 341, 2734, 11, 597, 51016, 51016, 286, 603, 2113, 281, 11, 291, 458, 11, 689, 436, 434, 5127, 746, 281, 364, 10225, 13, 51316, 51316, 400, 291, 458, 11, 291, 393, 733, 295, 7979, 264, 2010, 1185, 13, 51532, 51532, 407, 456, 366, 257, 1230, 295, 2098, 300, 291, 393, 7979, 264, 2010, 1185, 294, 15576, 14237, 13, 51839, 51839], "temperature": 0.0, "avg_logprob": -0.16723403284105204, "compression_ratio": 1.7427385892116183, "no_caption_prob": 1.8631246348377317e-05}, {"id": 53, "seek": 19486, "start": 194.86, "end": 201.0, "text": " But basically, like, I think Elm and TypeScript are working from two opposite ends.", "tokens": [50364, 583, 1936, 11, 411, 11, 286, 519, 2699, 76, 293, 15576, 14237, 366, 1364, 490, 732, 6182, 5314, 13, 50671, 50671, 2699, 76, 3719, 490, 1203, 1633, 312, 12785, 11, 293, 307, 4888, 281, 312, 18424, 3467, 1826, 51079, 51079, 286, 393, 10815, 309, 5911, 13, 51179, 51179, 1743, 11, 5969, 286, 393, 13447, 2059, 300, 264, 3467, 366, 3006, 11, 286, 478, 516, 281, 8248, 309, 13, 51583, 51583, 400, 15576, 14237, 1709, 490, 264, 6182, 1252, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1664344373955784, "compression_ratio": 1.570754716981132, "no_caption_prob": 3.6477151297731325e-05}, {"id": 54, "seek": 19486, "start": 201.0, "end": 209.16000000000003, "text": " Elm starts from everything must be proven, and is considered to be incorrect types until", "tokens": [50364, 583, 1936, 11, 411, 11, 286, 519, 2699, 76, 293, 15576, 14237, 366, 1364, 490, 732, 6182, 5314, 13, 50671, 50671, 2699, 76, 3719, 490, 1203, 1633, 312, 12785, 11, 293, 307, 4888, 281, 312, 18424, 3467, 1826, 51079, 51079, 286, 393, 10815, 309, 5911, 13, 51179, 51179, 1743, 11, 5969, 286, 393, 13447, 2059, 300, 264, 3467, 366, 3006, 11, 286, 478, 516, 281, 8248, 309, 13, 51583, 51583, 400, 15576, 14237, 1709, 490, 264, 6182, 1252, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1664344373955784, "compression_ratio": 1.570754716981132, "no_caption_prob": 3.6477151297731325e-05}, {"id": 55, "seek": 19486, "start": 209.16000000000003, "end": 211.16000000000003, "text": " I can guarantee it otherwise.", "tokens": [50364, 583, 1936, 11, 411, 11, 286, 519, 2699, 76, 293, 15576, 14237, 366, 1364, 490, 732, 6182, 5314, 13, 50671, 50671, 2699, 76, 3719, 490, 1203, 1633, 312, 12785, 11, 293, 307, 4888, 281, 312, 18424, 3467, 1826, 51079, 51079, 286, 393, 10815, 309, 5911, 13, 51179, 51179, 1743, 11, 5969, 286, 393, 13447, 2059, 300, 264, 3467, 366, 3006, 11, 286, 478, 516, 281, 8248, 309, 13, 51583, 51583, 400, 15576, 14237, 1709, 490, 264, 6182, 1252, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1664344373955784, "compression_ratio": 1.570754716981132, "no_caption_prob": 3.6477151297731325e-05}, {"id": 56, "seek": 19486, "start": 211.16000000000003, "end": 219.24, "text": " Like, unless I can convince myself that the types are correct, I'm going to reject it.", "tokens": [50364, 583, 1936, 11, 411, 11, 286, 519, 2699, 76, 293, 15576, 14237, 366, 1364, 490, 732, 6182, 5314, 13, 50671, 50671, 2699, 76, 3719, 490, 1203, 1633, 312, 12785, 11, 293, 307, 4888, 281, 312, 18424, 3467, 1826, 51079, 51079, 286, 393, 10815, 309, 5911, 13, 51179, 51179, 1743, 11, 5969, 286, 393, 13447, 2059, 300, 264, 3467, 366, 3006, 11, 286, 478, 516, 281, 8248, 309, 13, 51583, 51583, 400, 15576, 14237, 1709, 490, 264, 6182, 1252, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1664344373955784, "compression_ratio": 1.570754716981132, "no_caption_prob": 3.6477151297731325e-05}, {"id": 57, "seek": 19486, "start": 219.24, "end": 220.92000000000002, "text": " And TypeScript goes from the opposite side.", "tokens": [50364, 583, 1936, 11, 411, 11, 286, 519, 2699, 76, 293, 15576, 14237, 366, 1364, 490, 732, 6182, 5314, 13, 50671, 50671, 2699, 76, 3719, 490, 1203, 1633, 312, 12785, 11, 293, 307, 4888, 281, 312, 18424, 3467, 1826, 51079, 51079, 286, 393, 10815, 309, 5911, 13, 51179, 51179, 1743, 11, 5969, 286, 393, 13447, 2059, 300, 264, 3467, 366, 3006, 11, 286, 478, 516, 281, 8248, 309, 13, 51583, 51583, 400, 15576, 14237, 1709, 490, 264, 6182, 1252, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1664344373955784, "compression_ratio": 1.570754716981132, "no_caption_prob": 3.6477151297731325e-05}, {"id": 58, "seek": 22092, "start": 220.92, "end": 227.72, "text": " It says, I'm going to assume that this is a working application, unless I can find some", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 59, "seek": 22092, "start": 227.72, "end": 229.64, "text": " evidence that contradicts that.", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 60, "seek": 22092, "start": 229.64, "end": 237.0, "text": " So it's starting from, it's almost like, you know, innocent until proven guilty, or guilty", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 61, "seek": 22092, "start": 237.0, "end": 238.39999999999998, "text": " until proven innocent.", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 62, "seek": 22092, "start": 238.39999999999998, "end": 244.72, "text": " I think that Elm, in Elm, types are guilty until proven innocent.", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 63, "seek": 22092, "start": 244.72, "end": 247.79999999999998, "text": " And in TypeScript, they're innocent until proven guilty.", "tokens": [50364, 467, 1619, 11, 286, 478, 516, 281, 6552, 300, 341, 307, 257, 1364, 3861, 11, 5969, 286, 393, 915, 512, 50704, 50704, 4467, 300, 28900, 82, 300, 13, 50800, 50800, 407, 309, 311, 2891, 490, 11, 309, 311, 1920, 411, 11, 291, 458, 11, 13171, 1826, 12785, 12341, 11, 420, 12341, 51168, 51168, 1826, 12785, 13171, 13, 51238, 51238, 286, 519, 300, 2699, 76, 11, 294, 2699, 76, 11, 3467, 366, 12341, 1826, 12785, 13171, 13, 51554, 51554, 400, 294, 15576, 14237, 11, 436, 434, 13171, 1826, 12785, 12341, 13, 51708, 51708], "temperature": 0.0, "avg_logprob": -0.1040792465209961, "compression_ratio": 1.7623762376237624, "no_caption_prob": 2.2125010218587704e-05}, {"id": 64, "seek": 24780, "start": 247.8, "end": 252.0, "text": " And that is because they're working on very different styles of code bases.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 65, "seek": 24780, "start": 252.0, "end": 254.16000000000003, "text": " Like, Elm starts from scratch.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 66, "seek": 24780, "start": 254.16000000000003, "end": 261.44, "text": " So if you only use the types that Elm has in its core libraries, and the compiler knows", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 67, "seek": 24780, "start": 261.44, "end": 267.72, "text": " about them and knows that it can give you those guarantees, then it's a good idea to", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 68, "seek": 24780, "start": 267.72, "end": 271.16, "text": " start with something that can be proven to be right.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 69, "seek": 24780, "start": 271.16, "end": 272.16, "text": " Right.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 70, "seek": 24780, "start": 272.16, "end": 273.16, "text": " That is sound.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 71, "seek": 24780, "start": 273.16, "end": 276.8, "text": " Whereas with TypeScript, you start basically with the JavaScript code base.", "tokens": [50364, 400, 300, 307, 570, 436, 434, 1364, 322, 588, 819, 13273, 295, 3089, 17949, 13, 50574, 50574, 1743, 11, 2699, 76, 3719, 490, 8459, 13, 50682, 50682, 407, 498, 291, 787, 764, 264, 3467, 300, 2699, 76, 575, 294, 1080, 4965, 15148, 11, 293, 264, 31958, 3255, 51046, 51046, 466, 552, 293, 3255, 300, 309, 393, 976, 291, 729, 32567, 11, 550, 309, 311, 257, 665, 1558, 281, 51360, 51360, 722, 365, 746, 300, 393, 312, 12785, 281, 312, 558, 13, 51532, 51532, 1779, 13, 51582, 51582, 663, 307, 1626, 13, 51632, 51632, 13813, 365, 15576, 14237, 11, 291, 722, 1936, 365, 264, 15778, 3089, 3096, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.17602489230869053, "compression_ratio": 1.628787878787879, "no_caption_prob": 1.8924367395811714e-05}, {"id": 72, "seek": 27680, "start": 276.8, "end": 280.24, "text": " Or at least that is how it is designed for.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 73, "seek": 27680, "start": 280.24, "end": 287.36, "text": " I don't know if it still makes a lot of sense for projects that start with TypeScript.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 74, "seek": 27680, "start": 287.36, "end": 289.76, "text": " But at least that's the original goal.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 75, "seek": 27680, "start": 289.76, "end": 293.96000000000004, "text": " So you start with TypeScript, and you have no guarantees at all.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 76, "seek": 27680, "start": 293.96000000000004, "end": 301.12, "text": " And then you try to prove things correct where you can, and show the errors where you cannot.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 77, "seek": 27680, "start": 301.12, "end": 302.92, "text": " Where you can show the errors.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 78, "seek": 27680, "start": 302.92, "end": 303.92, "text": " Yeah.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 79, "seek": 27680, "start": 303.92, "end": 304.92, "text": " Right.", "tokens": [50364, 1610, 412, 1935, 300, 307, 577, 309, 307, 4761, 337, 13, 50536, 50536, 286, 500, 380, 458, 498, 309, 920, 1669, 257, 688, 295, 2020, 337, 4455, 300, 722, 365, 15576, 14237, 13, 50892, 50892, 583, 412, 1935, 300, 311, 264, 3380, 3387, 13, 51012, 51012, 407, 291, 722, 365, 15576, 14237, 11, 293, 291, 362, 572, 32567, 412, 439, 13, 51222, 51222, 400, 550, 291, 853, 281, 7081, 721, 3006, 689, 291, 393, 11, 293, 855, 264, 13603, 689, 291, 2644, 13, 51580, 51580, 2305, 291, 393, 855, 264, 13603, 13, 51670, 51670, 865, 13, 51720, 51720, 1779, 13, 51770, 51770], "temperature": 0.0, "avg_logprob": -0.18112371518061712, "compression_ratio": 1.7464788732394365, "no_caption_prob": 7.721601286903024e-05}, {"id": 80, "seek": 30492, "start": 304.92, "end": 309.6, "text": " So if you're starting the idea of FFI, like foreign function interface, being able to", "tokens": [50364, 407, 498, 291, 434, 2891, 264, 1558, 295, 479, 38568, 11, 411, 5329, 2445, 9226, 11, 885, 1075, 281, 50598, 50598, 818, 3838, 666, 15778, 11, 300, 307, 264, 955, 27372, 1639, 11, 558, 30, 50824, 50824, 1436, 498, 291, 434, 2891, 365, 257, 4451, 3360, 777, 3089, 3096, 11, 294, 2699, 76, 11, 291, 393, 380, 6418, 1169, 264, 51151, 51151, 1626, 33941, 2823, 689, 633, 2010, 291, 362, 291, 458, 307, 3006, 13, 51437, 51437, 509, 393, 380, 6418, 1169, 300, 365, 2693, 554, 1287, 570, 291, 393, 380, 3838, 41117, 2693, 554, 2010, 3652, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14369700001735314, "compression_ratio": 1.6720647773279351, "no_caption_prob": 2.7107274945592508e-05}, {"id": 81, "seek": 30492, "start": 309.6, "end": 314.12, "text": " call directly into JavaScript, that is the big differentiator, right?", "tokens": [50364, 407, 498, 291, 434, 2891, 264, 1558, 295, 479, 38568, 11, 411, 5329, 2445, 9226, 11, 885, 1075, 281, 50598, 50598, 818, 3838, 666, 15778, 11, 300, 307, 264, 955, 27372, 1639, 11, 558, 30, 50824, 50824, 1436, 498, 291, 434, 2891, 365, 257, 4451, 3360, 777, 3089, 3096, 11, 294, 2699, 76, 11, 291, 393, 380, 6418, 1169, 264, 51151, 51151, 1626, 33941, 2823, 689, 633, 2010, 291, 362, 291, 458, 307, 3006, 13, 51437, 51437, 509, 393, 380, 6418, 1169, 300, 365, 2693, 554, 1287, 570, 291, 393, 380, 3838, 41117, 2693, 554, 2010, 3652, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14369700001735314, "compression_ratio": 1.6720647773279351, "no_caption_prob": 2.7107274945592508e-05}, {"id": 82, "seek": 30492, "start": 314.12, "end": 320.66, "text": " Because if you're starting with a fresh brand new code base, in Elm, you can't pollute the", "tokens": [50364, 407, 498, 291, 434, 2891, 264, 1558, 295, 479, 38568, 11, 411, 5329, 2445, 9226, 11, 885, 1075, 281, 50598, 50598, 818, 3838, 666, 15778, 11, 300, 307, 264, 955, 27372, 1639, 11, 558, 30, 50824, 50824, 1436, 498, 291, 434, 2891, 365, 257, 4451, 3360, 777, 3089, 3096, 11, 294, 2699, 76, 11, 291, 393, 380, 6418, 1169, 264, 51151, 51151, 1626, 33941, 2823, 689, 633, 2010, 291, 362, 291, 458, 307, 3006, 13, 51437, 51437, 509, 393, 380, 6418, 1169, 300, 365, 2693, 554, 1287, 570, 291, 393, 380, 3838, 41117, 2693, 554, 2010, 3652, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14369700001735314, "compression_ratio": 1.6720647773279351, "no_caption_prob": 2.7107274945592508e-05}, {"id": 83, "seek": 30492, "start": 320.66, "end": 326.38, "text": " sound typed environment where every type you have you know is correct.", "tokens": [50364, 407, 498, 291, 434, 2891, 264, 1558, 295, 479, 38568, 11, 411, 5329, 2445, 9226, 11, 885, 1075, 281, 50598, 50598, 818, 3838, 666, 15778, 11, 300, 307, 264, 955, 27372, 1639, 11, 558, 30, 50824, 50824, 1436, 498, 291, 434, 2891, 365, 257, 4451, 3360, 777, 3089, 3096, 11, 294, 2699, 76, 11, 291, 393, 380, 6418, 1169, 264, 51151, 51151, 1626, 33941, 2823, 689, 633, 2010, 291, 362, 291, 458, 307, 3006, 13, 51437, 51437, 509, 393, 380, 6418, 1169, 300, 365, 2693, 554, 1287, 570, 291, 393, 380, 3838, 41117, 2693, 554, 2010, 3652, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14369700001735314, "compression_ratio": 1.6720647773279351, "no_caption_prob": 2.7107274945592508e-05}, {"id": 84, "seek": 30492, "start": 326.38, "end": 334.32, "text": " You can't pollute that with unsoundness because you can't directly invoke unsound type systems.", "tokens": [50364, 407, 498, 291, 434, 2891, 264, 1558, 295, 479, 38568, 11, 411, 5329, 2445, 9226, 11, 885, 1075, 281, 50598, 50598, 818, 3838, 666, 15778, 11, 300, 307, 264, 955, 27372, 1639, 11, 558, 30, 50824, 50824, 1436, 498, 291, 434, 2891, 365, 257, 4451, 3360, 777, 3089, 3096, 11, 294, 2699, 76, 11, 291, 393, 380, 6418, 1169, 264, 51151, 51151, 1626, 33941, 2823, 689, 633, 2010, 291, 362, 291, 458, 307, 3006, 13, 51437, 51437, 509, 393, 380, 6418, 1169, 300, 365, 2693, 554, 1287, 570, 291, 393, 380, 3838, 41117, 2693, 554, 2010, 3652, 13, 51834, 51834], "temperature": 0.0, "avg_logprob": -0.14369700001735314, "compression_ratio": 1.6720647773279351, "no_caption_prob": 2.7107274945592508e-05}, {"id": 85, "seek": 33432, "start": 334.32, "end": 339.59999999999997, "text": " But with TypeScript, the design decision, which I think makes perfect sense for TypeScript,", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 86, "seek": 33432, "start": 339.59999999999997, "end": 342.96, "text": " is sure, go ahead, call JavaScript all you want.", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 87, "seek": 33432, "start": 342.96, "end": 347.88, "text": " And oh, I've got some NPM library that doesn't have TypeScript typings?", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 88, "seek": 33432, "start": 347.88, "end": 349.48, "text": " That's okay.", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 89, "seek": 33432, "start": 349.48, "end": 355.12, "text": " We'll just help you out as much as we can around that, and we'll just consider the types", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 90, "seek": 33432, "start": 355.12, "end": 357.28, "text": " to be untyped there.", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 91, "seek": 33432, "start": 357.28, "end": 361.2, "text": " And we probably won't be able to help you much for that untyped code.", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 92, "seek": 33432, "start": 361.2, "end": 363.5, "text": " But we can for the rest of the application.", "tokens": [50364, 583, 365, 15576, 14237, 11, 264, 1715, 3537, 11, 597, 286, 519, 1669, 2176, 2020, 337, 15576, 14237, 11, 50628, 50628, 307, 988, 11, 352, 2286, 11, 818, 15778, 439, 291, 528, 13, 50796, 50796, 400, 1954, 11, 286, 600, 658, 512, 426, 18819, 6405, 300, 1177, 380, 362, 15576, 14237, 2125, 1109, 30, 51042, 51042, 663, 311, 1392, 13, 51122, 51122, 492, 603, 445, 854, 291, 484, 382, 709, 382, 321, 393, 926, 300, 11, 293, 321, 603, 445, 1949, 264, 3467, 51404, 51404, 281, 312, 517, 874, 3452, 456, 13, 51512, 51512, 400, 321, 1391, 1582, 380, 312, 1075, 281, 854, 291, 709, 337, 300, 517, 874, 3452, 3089, 13, 51708, 51708, 583, 321, 393, 337, 264, 1472, 295, 264, 3861, 13, 51823, 51823], "temperature": 0.0, "avg_logprob": -0.13618169724941254, "compression_ratio": 1.6386861313868613, "no_caption_prob": 2.3186910766526125e-05}, {"id": 93, "seek": 36350, "start": 363.5, "end": 364.76, "text": " We can for the rest of the application.", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 94, "seek": 36350, "start": 364.76, "end": 373.66, "text": " So it's seen as sort of like a bonus, the types, rather than everything must be proven", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 95, "seek": 36350, "start": 373.66, "end": 376.32, "text": " and the entire ecosystem is designed around this, right?", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 96, "seek": 36350, "start": 376.32, "end": 379.28, "text": " Because you can just publish a new...", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 97, "seek": 36350, "start": 379.28, "end": 383.2, "text": " You can publish an NPM package that uses eval.", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 98, "seek": 36350, "start": 383.2, "end": 385.28, "text": " What type does it do?", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 99, "seek": 36350, "start": 385.28, "end": 386.96, "text": " TypeScript can't help you there.", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 100, "seek": 36350, "start": 386.96, "end": 393.44, "text": " It could eval a string from user input, and it could parse some JSON.", "tokens": [50364, 492, 393, 337, 264, 1472, 295, 264, 3861, 13, 50427, 50427, 407, 309, 311, 1612, 382, 1333, 295, 411, 257, 10882, 11, 264, 3467, 11, 2831, 813, 1203, 1633, 312, 12785, 50872, 50872, 293, 264, 2302, 11311, 307, 4761, 926, 341, 11, 558, 30, 51005, 51005, 1436, 291, 393, 445, 11374, 257, 777, 485, 51153, 51153, 509, 393, 11374, 364, 426, 18819, 7372, 300, 4960, 1073, 304, 13, 51349, 51349, 708, 2010, 775, 309, 360, 30, 51453, 51453, 15576, 14237, 393, 380, 854, 291, 456, 13, 51537, 51537, 467, 727, 1073, 304, 257, 6798, 490, 4195, 4846, 11, 293, 309, 727, 48377, 512, 31828, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.11715540754685708, "compression_ratio": 1.5595238095238095, "no_caption_prob": 1.287886334466748e-06}, {"id": 101, "seek": 39344, "start": 393.44, "end": 399.92, "text": " So these are the core design decisions that guide Elm versus TypeScript.", "tokens": [50364, 407, 613, 366, 264, 4965, 1715, 5327, 300, 5934, 2699, 76, 5717, 15576, 14237, 13, 50688, 50688, 400, 286, 519, 341, 307, 437, 286, 1454, 561, 486, 808, 1314, 490, 4764, 281, 341, 3500, 365, 11, 51020, 51020, 307, 341, 3701, 295, 264, 819, 1715, 5493, 13, 51174, 51174, 400, 747, 300, 337, 2035, 9932, 4596, 291, 13, 51388, 51388, 759, 291, 434, 406, 364, 2699, 76, 10754, 11, 300, 3665, 291, 733, 295, 519, 466, 689, 281, 312, 2857, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.10366991588047572, "compression_ratio": 1.5466666666666666, "no_caption_prob": 6.048844170436496e-06}, {"id": 102, "seek": 39344, "start": 399.92, "end": 406.56, "text": " And I think this is what I hope people will come away from listening to this episode with,", "tokens": [50364, 407, 613, 366, 264, 4965, 1715, 5327, 300, 5934, 2699, 76, 5717, 15576, 14237, 13, 50688, 50688, 400, 286, 519, 341, 307, 437, 286, 1454, 561, 486, 808, 1314, 490, 4764, 281, 341, 3500, 365, 11, 51020, 51020, 307, 341, 3701, 295, 264, 819, 1715, 5493, 13, 51174, 51174, 400, 747, 300, 337, 2035, 9932, 4596, 291, 13, 51388, 51388, 759, 291, 434, 406, 364, 2699, 76, 10754, 11, 300, 3665, 291, 733, 295, 519, 466, 689, 281, 312, 2857, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.10366991588047572, "compression_ratio": 1.5466666666666666, "no_caption_prob": 6.048844170436496e-06}, {"id": 103, "seek": 39344, "start": 406.56, "end": 409.64, "text": " is this understanding of the different design goals.", "tokens": [50364, 407, 613, 366, 264, 4965, 1715, 5327, 300, 5934, 2699, 76, 5717, 15576, 14237, 13, 50688, 50688, 400, 286, 519, 341, 307, 437, 286, 1454, 561, 486, 808, 1314, 490, 4764, 281, 341, 3500, 365, 11, 51020, 51020, 307, 341, 3701, 295, 264, 819, 1715, 5493, 13, 51174, 51174, 400, 747, 300, 337, 2035, 9932, 4596, 291, 13, 51388, 51388, 759, 291, 434, 406, 364, 2699, 76, 10754, 11, 300, 3665, 291, 733, 295, 519, 466, 689, 281, 312, 2857, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.10366991588047572, "compression_ratio": 1.5466666666666666, "no_caption_prob": 6.048844170436496e-06}, {"id": 104, "seek": 39344, "start": 409.64, "end": 413.92, "text": " And take that for whatever purposes serve you.", "tokens": [50364, 407, 613, 366, 264, 4965, 1715, 5327, 300, 5934, 2699, 76, 5717, 15576, 14237, 13, 50688, 50688, 400, 286, 519, 341, 307, 437, 286, 1454, 561, 486, 808, 1314, 490, 4764, 281, 341, 3500, 365, 11, 51020, 51020, 307, 341, 3701, 295, 264, 819, 1715, 5493, 13, 51174, 51174, 400, 747, 300, 337, 2035, 9932, 4596, 291, 13, 51388, 51388, 759, 291, 434, 406, 364, 2699, 76, 10754, 11, 300, 3665, 291, 733, 295, 519, 466, 689, 281, 312, 2857, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.10366991588047572, "compression_ratio": 1.5466666666666666, "no_caption_prob": 6.048844170436496e-06}, {"id": 105, "seek": 39344, "start": 413.92, "end": 419.94, "text": " If you're not an Elm developer, that helps you kind of think about where to be extra", "tokens": [50364, 407, 613, 366, 264, 4965, 1715, 5327, 300, 5934, 2699, 76, 5717, 15576, 14237, 13, 50688, 50688, 400, 286, 519, 341, 307, 437, 286, 1454, 561, 486, 808, 1314, 490, 4764, 281, 341, 3500, 365, 11, 51020, 51020, 307, 341, 3701, 295, 264, 819, 1715, 5493, 13, 51174, 51174, 400, 747, 300, 337, 2035, 9932, 4596, 291, 13, 51388, 51388, 759, 291, 434, 406, 364, 2699, 76, 10754, 11, 300, 3665, 291, 733, 295, 519, 466, 689, 281, 312, 2857, 51689, 51689], "temperature": 0.0, "avg_logprob": -0.10366991588047572, "compression_ratio": 1.5466666666666666, "no_caption_prob": 6.048844170436496e-06}, {"id": 106, "seek": 41994, "start": 419.94, "end": 424.04, "text": " careful when you're writing TypeScript code and how to think about these trade offs.", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 107, "seek": 41994, "start": 424.04, "end": 425.04, "text": " That's great.", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 108, "seek": 41994, "start": 425.04, "end": 429.64, "text": " If you're not a TypeScript developer, if you only do Elm, and you need to use a little", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 109, "seek": 41994, "start": 429.64, "end": 436.14, "text": " bit of JavaScript, hopefully this helps you understand the design decisions and goals", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 110, "seek": 41994, "start": 436.14, "end": 437.88, "text": " behind Elm a little bit better.", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 111, "seek": 41994, "start": 437.88, "end": 443.48, "text": " So the TypeScript type system is, in my opinion, and I'm guessing yours as well, a lot more", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 112, "seek": 41994, "start": 443.48, "end": 445.24, "text": " complex than Elm's.", "tokens": [50364, 5026, 562, 291, 434, 3579, 15576, 14237, 3089, 293, 577, 281, 519, 466, 613, 4923, 39457, 13, 50569, 50569, 663, 311, 869, 13, 50619, 50619, 759, 291, 434, 406, 257, 15576, 14237, 10754, 11, 498, 291, 787, 360, 2699, 76, 11, 293, 291, 643, 281, 764, 257, 707, 50849, 50849, 857, 295, 15778, 11, 4696, 341, 3665, 291, 1223, 264, 1715, 5327, 293, 5493, 51174, 51174, 2261, 2699, 76, 257, 707, 857, 1101, 13, 51261, 51261, 407, 264, 15576, 14237, 2010, 1185, 307, 11, 294, 452, 4800, 11, 293, 286, 478, 17939, 6342, 382, 731, 11, 257, 688, 544, 51541, 51541, 3997, 813, 2699, 76, 311, 13, 51629, 51629], "temperature": 0.0, "avg_logprob": -0.07785820316623997, "compression_ratio": 1.640316205533597, "no_caption_prob": 9.972468433261383e-06}, {"id": 113, "seek": 44524, "start": 445.24, "end": 450.40000000000003, "text": " And partially the reason for that is because it needs to type check JavaScript.", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 114, "seek": 44524, "start": 450.40000000000003, "end": 453.12, "text": " And JavaScript can do a lot of things.", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 115, "seek": 44524, "start": 453.12, "end": 458.8, "text": " So if you want to have a type system that doesn't limit on what JavaScript can do, or", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 116, "seek": 44524, "start": 458.8, "end": 465.48, "text": " at least when it works, then you do need to have a very powerful type system.", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 117, "seek": 44524, "start": 465.48, "end": 468.12, "text": " So that's something to keep in mind.", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 118, "seek": 44524, "start": 468.12, "end": 470.48, "text": " Oh, it's very complex.", "tokens": [50364, 400, 18886, 264, 1778, 337, 300, 307, 570, 309, 2203, 281, 2010, 1520, 15778, 13, 50622, 50622, 400, 15778, 393, 360, 257, 688, 295, 721, 13, 50758, 50758, 407, 498, 291, 528, 281, 362, 257, 2010, 1185, 300, 1177, 380, 4948, 322, 437, 15778, 393, 360, 11, 420, 51042, 51042, 412, 1935, 562, 309, 1985, 11, 550, 291, 360, 643, 281, 362, 257, 588, 4005, 2010, 1185, 13, 51376, 51376, 407, 300, 311, 746, 281, 1066, 294, 1575, 13, 51508, 51508, 876, 11, 309, 311, 588, 3997, 13, 51626, 51626], "temperature": 0.0, "avg_logprob": -0.1448233231254246, "compression_ratio": 1.6363636363636365, "no_caption_prob": 2.110910281771794e-05}, {"id": 119, "seek": 47048, "start": 470.48, "end": 476.94, "text": " It can do a lot of things and that is potentially very hard to annotate in your types.", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 120, "seek": 47048, "start": 476.94, "end": 478.32, "text": " But it's there for a reason.", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 121, "seek": 47048, "start": 478.32, "end": 481.56, "text": " It's because JavaScript has a lot of features.", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 122, "seek": 47048, "start": 481.56, "end": 483.40000000000003, "text": " Yes, it does.", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 123, "seek": 47048, "start": 483.40000000000003, "end": 492.40000000000003, "text": " And also to further back up this idea that we're not trying to prove which type system", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 124, "seek": 47048, "start": 492.40000000000003, "end": 496.72, "text": " is better, but we're just looking at their design goals.", "tokens": [50364, 467, 393, 360, 257, 688, 295, 721, 293, 300, 307, 7263, 588, 1152, 281, 25339, 473, 294, 428, 3467, 13, 50687, 50687, 583, 309, 311, 456, 337, 257, 1778, 13, 50756, 50756, 467, 311, 570, 15778, 575, 257, 688, 295, 4122, 13, 50918, 50918, 1079, 11, 309, 775, 13, 51010, 51010, 400, 611, 281, 3052, 646, 493, 341, 1558, 300, 321, 434, 406, 1382, 281, 7081, 597, 2010, 1185, 51460, 51460, 307, 1101, 11, 457, 321, 434, 445, 1237, 412, 641, 1715, 5493, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.13402110880071466, "compression_ratio": 1.5165876777251184, "no_caption_prob": 9.368544851895422e-06}, {"id": 125, "seek": 49672, "start": 496.72, "end": 502.72, "text": " I think that TypeScript is a very cool type system and it has some features that I think", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 126, "seek": 49672, "start": 502.72, "end": 505.56, "text": " are really neat, which the Elm type system does not have.", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 127, "seek": 49672, "start": 505.56, "end": 507.8, "text": " Does that mean the Elm type system should have them?", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 128, "seek": 49672, "start": 507.8, "end": 508.8, "text": " Not necessarily.", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 129, "seek": 49672, "start": 508.8, "end": 513.1600000000001, "text": " They're just features that are very well suited to the specific problems that TypeScript is", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 130, "seek": 49672, "start": 513.1600000000001, "end": 515.74, "text": " solving and they're really cool and they're good to be aware of.", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 131, "seek": 49672, "start": 515.74, "end": 523.72, "text": " So for example, in Elm, if you change the value of a string, like if you change concrete", "tokens": [50364, 286, 519, 300, 15576, 14237, 307, 257, 588, 1627, 2010, 1185, 293, 309, 575, 512, 4122, 300, 286, 519, 50664, 50664, 366, 534, 10654, 11, 597, 264, 2699, 76, 2010, 1185, 775, 406, 362, 13, 50806, 50806, 4402, 300, 914, 264, 2699, 76, 2010, 1185, 820, 362, 552, 30, 50918, 50918, 1726, 4725, 13, 50968, 50968, 814, 434, 445, 4122, 300, 366, 588, 731, 24736, 281, 264, 2685, 2740, 300, 15576, 14237, 307, 51186, 51186, 12606, 293, 436, 434, 534, 1627, 293, 436, 434, 665, 281, 312, 3650, 295, 13, 51315, 51315, 407, 337, 1365, 11, 294, 2699, 76, 11, 498, 291, 1319, 264, 2158, 295, 257, 6798, 11, 411, 498, 291, 1319, 9859, 51714, 51714], "temperature": 0.0, "avg_logprob": -0.10958847757113183, "compression_ratio": 1.8188976377952757, "no_caption_prob": 6.3390671130036935e-06}, {"id": 132, "seek": 52372, "start": 523.72, "end": 530.86, "text": " values within the same type, it will never change whether the types compile or give a", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 133, "seek": 52372, "start": 530.86, "end": 531.86, "text": " compiler error.", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 134, "seek": 52372, "start": 531.86, "end": 533.64, "text": " That will never happen.", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 135, "seek": 52372, "start": 533.64, "end": 536.72, "text": " Whereas in TypeScript, that can happen.", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 136, "seek": 52372, "start": 536.72, "end": 544.24, "text": " So TypeScript is able to actually look at concrete values, which the Elm type system", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 137, "seek": 52372, "start": 544.24, "end": 546.1600000000001, "text": " does not have the ability to do.", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 138, "seek": 52372, "start": 546.1600000000001, "end": 550.5600000000001, "text": " That gives you some really interesting capabilities.", "tokens": [50364, 4190, 1951, 264, 912, 2010, 11, 309, 486, 1128, 1319, 1968, 264, 3467, 31413, 420, 976, 257, 50721, 50721, 31958, 6713, 13, 50771, 50771, 663, 486, 1128, 1051, 13, 50860, 50860, 13813, 294, 15576, 14237, 11, 300, 393, 1051, 13, 51014, 51014, 407, 15576, 14237, 307, 1075, 281, 767, 574, 412, 9859, 4190, 11, 597, 264, 2699, 76, 2010, 1185, 51390, 51390, 775, 406, 362, 264, 3485, 281, 360, 13, 51486, 51486, 663, 2709, 291, 512, 534, 1880, 10862, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.11223503521510533, "compression_ratio": 1.6310679611650485, "no_caption_prob": 6.854181719972985e-06}, {"id": 139, "seek": 55056, "start": 550.56, "end": 555.1199999999999, "text": " If you're a TypeScript library author or application author.", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 140, "seek": 55056, "start": 555.1199999999999, "end": 558.0799999999999, "text": " So by the way, was the quote worth it your own?", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 141, "seek": 55056, "start": 558.0799999999999, "end": 560.4, "text": " It was worth it.", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 142, "seek": 55056, "start": 560.4, "end": 570.52, "text": " I think sometimes it's easy to sort of, TypeScript can be an easy target to be like, oh, TypeScript", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 143, "seek": 55056, "start": 570.52, "end": 572.0, "text": " isn't a sound type system.", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 144, "seek": 55056, "start": 572.0, "end": 579.16, "text": " But I think it's good to have primary sources to say, no, this is the stated design goal", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 145, "seek": 55056, "start": 579.16, "end": 580.16, "text": " of TypeScript.", "tokens": [50364, 759, 291, 434, 257, 15576, 14237, 6405, 3793, 420, 3861, 3793, 13, 50592, 50592, 407, 538, 264, 636, 11, 390, 264, 6513, 3163, 309, 428, 1065, 30, 50740, 50740, 467, 390, 3163, 309, 13, 50856, 50856, 286, 519, 2171, 309, 311, 1858, 281, 1333, 295, 11, 15576, 14237, 393, 312, 364, 1858, 3779, 281, 312, 411, 11, 1954, 11, 15576, 14237, 51362, 51362, 1943, 380, 257, 1626, 2010, 1185, 13, 51436, 51436, 583, 286, 519, 309, 311, 665, 281, 362, 6194, 7139, 281, 584, 11, 572, 11, 341, 307, 264, 11323, 1715, 3387, 51794, 51794, 295, 15576, 14237, 13, 51844, 51844], "temperature": 0.0, "avg_logprob": -0.16847238262880196, "compression_ratio": 1.6255707762557077, "no_caption_prob": 7.296321200556122e-06}, {"id": 146, "seek": 58016, "start": 580.16, "end": 582.4399999999999, "text": " This is not designed to be unsound.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 147, "seek": 58016, "start": 582.4399999999999, "end": 584.24, "text": " And that's not a bad thing.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 148, "seek": 58016, "start": 584.24, "end": 586.9599999999999, "text": " It's just a different goal and understand that.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 149, "seek": 58016, "start": 586.9599999999999, "end": 588.9399999999999, "text": " And this is not my words.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 150, "seek": 58016, "start": 588.9399999999999, "end": 590.6, "text": " This is the words of the TypeScript team.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 151, "seek": 58016, "start": 590.6, "end": 595.24, "text": " I mean, it could try to, but then it would be a very different language and you would", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 152, "seek": 58016, "start": 595.24, "end": 597.76, "text": " have a lot more errors, I'm guessing.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 153, "seek": 58016, "start": 597.76, "end": 599.4399999999999, "text": " Yeah, a lot more.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 154, "seek": 58016, "start": 599.4399999999999, "end": 600.4399999999999, "text": " So yeah.", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 155, "seek": 58016, "start": 600.4399999999999, "end": 607.64, "text": " And one of the things they talk about is, you know, just the idea of mutation and how", "tokens": [50364, 639, 307, 406, 4761, 281, 312, 2693, 554, 13, 50478, 50478, 400, 300, 311, 406, 257, 1578, 551, 13, 50568, 50568, 467, 311, 445, 257, 819, 3387, 293, 1223, 300, 13, 50704, 50704, 400, 341, 307, 406, 452, 2283, 13, 50803, 50803, 639, 307, 264, 2283, 295, 264, 15576, 14237, 1469, 13, 50886, 50886, 286, 914, 11, 309, 727, 853, 281, 11, 457, 550, 309, 576, 312, 257, 588, 819, 2856, 293, 291, 576, 51118, 51118, 362, 257, 688, 544, 13603, 11, 286, 478, 17939, 13, 51244, 51244, 865, 11, 257, 688, 544, 13, 51328, 51328, 407, 1338, 13, 51378, 51378, 400, 472, 295, 264, 721, 436, 751, 466, 307, 11, 291, 458, 11, 445, 264, 1558, 295, 27960, 293, 577, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.16378640747070314, "compression_ratio": 1.7261410788381744, "no_caption_prob": 1.6701174899935722e-05}, {"id": 156, "seek": 60764, "start": 607.64, "end": 611.92, "text": " like, how do you square mutation with sound types?", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 157, "seek": 60764, "start": 611.92, "end": 613.4, "text": " You know, is it possible?", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 158, "seek": 60764, "start": 613.4, "end": 616.08, "text": " Yes, but it's an added complication.", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 159, "seek": 60764, "start": 616.08, "end": 622.64, "text": " And it's not one that, that's, so we'll get into this later in the episode, but that's", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 160, "seek": 60764, "start": 622.64, "end": 627.96, "text": " one of the avenues of introducing unsoundness into TypeScript types.", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 161, "seek": 60764, "start": 627.96, "end": 633.6, "text": " Yeah, I guess one thing you could do is to, instead of being a superset of JavaScript,", "tokens": [50364, 411, 11, 577, 360, 291, 3732, 27960, 365, 1626, 3467, 30, 50578, 50578, 509, 458, 11, 307, 309, 1944, 30, 50652, 50652, 1079, 11, 457, 309, 311, 364, 3869, 1209, 8758, 13, 50786, 50786, 400, 309, 311, 406, 472, 300, 11, 300, 311, 11, 370, 321, 603, 483, 666, 341, 1780, 294, 264, 3500, 11, 457, 300, 311, 51114, 51114, 472, 295, 264, 43039, 295, 15424, 2693, 554, 1287, 666, 15576, 14237, 3467, 13, 51380, 51380, 865, 11, 286, 2041, 472, 551, 291, 727, 360, 307, 281, 11, 2602, 295, 885, 257, 37906, 302, 295, 15778, 11, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1819048777665242, "compression_ratio": 1.5682819383259912, "no_caption_prob": 1.8058210116578266e-05}, {"id": 162, "seek": 63360, "start": 633.6, "end": 639.2, "text": " is take a subset of JavaScript and add type annotations.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 163, "seek": 63360, "start": 639.2, "end": 643.12, "text": " So remove mutations from JavaScript and then add types.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 164, "seek": 63360, "start": 643.12, "end": 647.72, "text": " And then the language would be a lot simpler, but you can do a lot less things with it.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 165, "seek": 63360, "start": 647.72, "end": 653.32, "text": " And it's not compatible with JavaScript libraries that are out there on NPM and stuff like that.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 166, "seek": 63360, "start": 653.32, "end": 654.32, "text": " Exactly.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 167, "seek": 63360, "start": 654.32, "end": 655.32, "text": " Yeah, yeah, absolutely.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 168, "seek": 63360, "start": 655.32, "end": 656.32, "text": " All right.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 169, "seek": 63360, "start": 656.32, "end": 659.28, "text": " Well, should we get to the basics a little bit?", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 170, "seek": 63360, "start": 659.28, "end": 660.28, "text": " That sounds good.", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 171, "seek": 63360, "start": 660.28, "end": 661.6, "text": " Where should we start?", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 172, "seek": 63360, "start": 661.6, "end": 663.44, "text": " How basic do we want to get here?", "tokens": [50364, 307, 747, 257, 25993, 295, 15778, 293, 909, 2010, 25339, 763, 13, 50644, 50644, 407, 4159, 29243, 490, 15778, 293, 550, 909, 3467, 13, 50840, 50840, 400, 550, 264, 2856, 576, 312, 257, 688, 18587, 11, 457, 291, 393, 360, 257, 688, 1570, 721, 365, 309, 13, 51070, 51070, 400, 309, 311, 406, 18218, 365, 15778, 15148, 300, 366, 484, 456, 322, 426, 18819, 293, 1507, 411, 300, 13, 51350, 51350, 7587, 13, 51400, 51400, 865, 11, 1338, 11, 3122, 13, 51450, 51450, 1057, 558, 13, 51500, 51500, 1042, 11, 820, 321, 483, 281, 264, 14688, 257, 707, 857, 30, 51648, 51648, 663, 3263, 665, 13, 51698, 51698, 2305, 820, 321, 722, 30, 51764, 51764, 1012, 3875, 360, 321, 528, 281, 483, 510, 30, 51856, 51856], "temperature": 0.0, "avg_logprob": -0.16732658445835114, "compression_ratio": 1.6512455516014235, "no_caption_prob": 2.318703627679497e-05}, {"id": 173, "seek": 66344, "start": 663.44, "end": 665.6400000000001, "text": " Well, I guess let's start with the primitives.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 174, "seek": 66344, "start": 665.6400000000001, "end": 666.6400000000001, "text": " Yeah.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 175, "seek": 66344, "start": 666.6400000000001, "end": 669.72, "text": " So TypeScript has three primitives.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 176, "seek": 66344, "start": 669.72, "end": 676.5200000000001, "text": " It has strings, numbers, and Booleans, which Elm also has except for number because it", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 177, "seek": 66344, "start": 676.5200000000001, "end": 678.4000000000001, "text": " has int and floats.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 178, "seek": 66344, "start": 678.4000000000001, "end": 686.48, "text": " Although secretly, it's actually just JavaScript numbers.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 179, "seek": 66344, "start": 686.48, "end": 688.12, "text": " Everything is JavaScript under the hood.", "tokens": [50364, 1042, 11, 286, 2041, 718, 311, 722, 365, 264, 2886, 38970, 13, 50474, 50474, 865, 13, 50524, 50524, 407, 15576, 14237, 575, 1045, 2886, 38970, 13, 50678, 50678, 467, 575, 13985, 11, 3547, 11, 293, 23351, 24008, 11, 597, 2699, 76, 611, 575, 3993, 337, 1230, 570, 309, 51018, 51018, 575, 560, 293, 37878, 13, 51112, 51112, 5780, 22611, 11, 309, 311, 767, 445, 15778, 3547, 13, 51516, 51516, 5471, 307, 15778, 833, 264, 13376, 13, 51598, 51598], "temperature": 0.0, "avg_logprob": -0.2768634557723999, "compression_ratio": 1.4923857868020305, "no_caption_prob": 4.7573892516084015e-05}, {"id": 180, "seek": 68812, "start": 688.12, "end": 693.76, "text": " So at least until it stops compiling to JavaScript only.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 181, "seek": 68812, "start": 693.76, "end": 695.4, "text": " Right.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 182, "seek": 68812, "start": 695.4, "end": 697.28, "text": " Yeah.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 183, "seek": 68812, "start": 697.28, "end": 700.0600000000001, "text": " It's got those primitives.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 184, "seek": 68812, "start": 700.0600000000001, "end": 705.68, "text": " If you haven't seen a TypeScript annotation before, you can take let name equals Yeroon", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 185, "seek": 68812, "start": 705.68, "end": 713.16, "text": " and you can turn that into something with a type annotation with let name colon string", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 186, "seek": 68812, "start": 713.16, "end": 714.88, "text": " equals Yeroon.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 187, "seek": 68812, "start": 714.88, "end": 717.84, "text": " But the TypeScript type system can also do type inference.", "tokens": [50364, 407, 412, 1935, 1826, 309, 10094, 715, 4883, 281, 15778, 787, 13, 50646, 50646, 1779, 13, 50728, 50728, 865, 13, 50822, 50822, 467, 311, 658, 729, 2886, 38970, 13, 50961, 50961, 759, 291, 2378, 380, 1612, 257, 15576, 14237, 48654, 949, 11, 291, 393, 747, 718, 1315, 6915, 398, 2032, 266, 51242, 51242, 293, 291, 393, 1261, 300, 666, 746, 365, 257, 2010, 48654, 365, 718, 1315, 8255, 6798, 51616, 51616, 6915, 398, 2032, 266, 13, 51702, 51702, 583, 264, 15576, 14237, 2010, 1185, 393, 611, 360, 2010, 38253, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.21894047108102352, "compression_ratio": 1.6350710900473933, "no_caption_prob": 3.882810051436536e-05}, {"id": 188, "seek": 71784, "start": 717.84, "end": 722.44, "text": " So you don't strictly need to put type annotations everywhere similar to Elm.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 189, "seek": 71784, "start": 722.44, "end": 724.72, "text": " But it's probably a good idea.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 190, "seek": 71784, "start": 724.72, "end": 727.1600000000001, "text": " It's probably done idiomatically.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 191, "seek": 71784, "start": 727.1600000000001, "end": 730.8000000000001, "text": " It's done pretty much everywhere in idiomatic Elm code.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 192, "seek": 71784, "start": 730.8000000000001, "end": 734.32, "text": " In my opinion, some people might have different opinions on that.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 193, "seek": 71784, "start": 734.32, "end": 736.0400000000001, "text": " But in TypeScript it's not.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 194, "seek": 71784, "start": 736.0400000000001, "end": 737.0400000000001, "text": " Yeah.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 195, "seek": 71784, "start": 737.0400000000001, "end": 740.4, "text": " I wrote rules to add type annotations everywhere possible.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 196, "seek": 71784, "start": 740.4, "end": 741.4, "text": " So yeah.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 197, "seek": 71784, "start": 741.4, "end": 742.4000000000001, "text": " Yeah.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 198, "seek": 71784, "start": 742.4000000000001, "end": 744.5600000000001, "text": " I use that rule often.", "tokens": [50364, 407, 291, 500, 380, 20792, 643, 281, 829, 2010, 25339, 763, 5315, 2531, 281, 2699, 76, 13, 50594, 50594, 583, 309, 311, 1391, 257, 665, 1558, 13, 50708, 50708, 467, 311, 1391, 1096, 18014, 298, 5030, 13, 50830, 50830, 467, 311, 1096, 1238, 709, 5315, 294, 18014, 13143, 2699, 76, 3089, 13, 51012, 51012, 682, 452, 4800, 11, 512, 561, 1062, 362, 819, 11819, 322, 300, 13, 51188, 51188, 583, 294, 15576, 14237, 309, 311, 406, 13, 51274, 51274, 865, 13, 51324, 51324, 286, 4114, 4474, 281, 909, 2010, 25339, 763, 5315, 1944, 13, 51492, 51492, 407, 1338, 13, 51542, 51542, 865, 13, 51592, 51592, 286, 764, 300, 4978, 2049, 13, 51700, 51700], "temperature": 0.0, "avg_logprob": -0.1582685553509256, "compression_ratio": 1.7400881057268722, "no_caption_prob": 7.646455742360558e-06}, {"id": 199, "seek": 74456, "start": 744.56, "end": 750.64, "text": " And actually, I used to not put type annotations on my let bindings in Elm.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 200, "seek": 74456, "start": 750.64, "end": 754.68, "text": " But that rule sort of changed my thinking on that.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 201, "seek": 74456, "start": 754.68, "end": 755.9799999999999, "text": " And now I just put them everywhere.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 202, "seek": 74456, "start": 755.9799999999999, "end": 761.4, "text": " Because the more hints you can give to the compiler where you're like, no, no, this is", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 203, "seek": 74456, "start": 761.4, "end": 762.4, "text": " definitely the type.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 204, "seek": 74456, "start": 762.4, "end": 764.1999999999999, "text": " I know this is the type I want here.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 205, "seek": 74456, "start": 764.1999999999999, "end": 769.04, "text": " The more specific the compiler can be to pointing you to the problem if something goes wrong.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 206, "seek": 74456, "start": 769.04, "end": 770.5999999999999, "text": " So that's how I think of it.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 207, "seek": 74456, "start": 770.5999999999999, "end": 771.5999999999999, "text": " Yes.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 208, "seek": 74456, "start": 771.5999999999999, "end": 772.5999999999999, "text": " Exactly.", "tokens": [50364, 400, 767, 11, 286, 1143, 281, 406, 829, 2010, 25339, 763, 322, 452, 718, 14786, 1109, 294, 2699, 76, 13, 50668, 50668, 583, 300, 4978, 1333, 295, 3105, 452, 1953, 322, 300, 13, 50870, 50870, 400, 586, 286, 445, 829, 552, 5315, 13, 50935, 50935, 1436, 264, 544, 27271, 291, 393, 976, 281, 264, 31958, 689, 291, 434, 411, 11, 572, 11, 572, 11, 341, 307, 51206, 51206, 2138, 264, 2010, 13, 51256, 51256, 286, 458, 341, 307, 264, 2010, 286, 528, 510, 13, 51346, 51346, 440, 544, 2685, 264, 31958, 393, 312, 281, 12166, 291, 281, 264, 1154, 498, 746, 1709, 2085, 13, 51588, 51588, 407, 300, 311, 577, 286, 519, 295, 309, 13, 51666, 51666, 1079, 13, 51716, 51716, 7587, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.10575022659902497, "compression_ratio": 1.6383763837638377, "no_caption_prob": 2.392306851106696e-05}, {"id": 209, "seek": 77260, "start": 772.6, "end": 778.36, "text": " So, if you put a big blob of text about an error in Elm, if you don't put type annotations", "tokens": [50364, 407, 11, 498, 291, 829, 257, 955, 46115, 295, 2487, 466, 364, 6713, 294, 2699, 76, 11, 498, 291, 500, 380, 829, 2010, 25339, 763, 50652, 50652, 689, 309, 311, 2978, 11, 570, 309, 486, 584, 746, 411, 11, 1954, 11, 341, 955, 2136, 575, 341, 2519, 300, 50996, 50996, 307, 406, 264, 558, 2010, 13, 51080, 51080, 583, 498, 291, 829, 264, 48654, 322, 257, 2158, 300, 291, 829, 949, 293, 300, 309, 32978, 300, 309, 311, 51419, 51419, 2085, 670, 456, 11, 550, 309, 486, 935, 264, 6713, 281, 257, 4356, 3541, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1890897269200797, "compression_ratio": 1.695852534562212, "no_caption_prob": 2.97717924695462e-05}, {"id": 210, "seek": 77260, "start": 778.36, "end": 785.24, "text": " where it's needed, because it will say something like, oh, this big record has this field that", "tokens": [50364, 407, 11, 498, 291, 829, 257, 955, 46115, 295, 2487, 466, 364, 6713, 294, 2699, 76, 11, 498, 291, 500, 380, 829, 2010, 25339, 763, 50652, 50652, 689, 309, 311, 2978, 11, 570, 309, 486, 584, 746, 411, 11, 1954, 11, 341, 955, 2136, 575, 341, 2519, 300, 50996, 50996, 307, 406, 264, 558, 2010, 13, 51080, 51080, 583, 498, 291, 829, 264, 48654, 322, 257, 2158, 300, 291, 829, 949, 293, 300, 309, 32978, 300, 309, 311, 51419, 51419, 2085, 670, 456, 11, 550, 309, 486, 935, 264, 6713, 281, 257, 4356, 3541, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1890897269200797, "compression_ratio": 1.695852534562212, "no_caption_prob": 2.97717924695462e-05}, {"id": 211, "seek": 77260, "start": 785.24, "end": 786.9200000000001, "text": " is not the right type.", "tokens": [50364, 407, 11, 498, 291, 829, 257, 955, 46115, 295, 2487, 466, 364, 6713, 294, 2699, 76, 11, 498, 291, 500, 380, 829, 2010, 25339, 763, 50652, 50652, 689, 309, 311, 2978, 11, 570, 309, 486, 584, 746, 411, 11, 1954, 11, 341, 955, 2136, 575, 341, 2519, 300, 50996, 50996, 307, 406, 264, 558, 2010, 13, 51080, 51080, 583, 498, 291, 829, 264, 48654, 322, 257, 2158, 300, 291, 829, 949, 293, 300, 309, 32978, 300, 309, 311, 51419, 51419, 2085, 670, 456, 11, 550, 309, 486, 935, 264, 6713, 281, 257, 4356, 3541, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1890897269200797, "compression_ratio": 1.695852534562212, "no_caption_prob": 2.97717924695462e-05}, {"id": 212, "seek": 77260, "start": 786.9200000000001, "end": 793.7, "text": " But if you put the annotation on a value that you put before and that it notices that it's", "tokens": [50364, 407, 11, 498, 291, 829, 257, 955, 46115, 295, 2487, 466, 364, 6713, 294, 2699, 76, 11, 498, 291, 500, 380, 829, 2010, 25339, 763, 50652, 50652, 689, 309, 311, 2978, 11, 570, 309, 486, 584, 746, 411, 11, 1954, 11, 341, 955, 2136, 575, 341, 2519, 300, 50996, 50996, 307, 406, 264, 558, 2010, 13, 51080, 51080, 583, 498, 291, 829, 264, 48654, 322, 257, 2158, 300, 291, 829, 949, 293, 300, 309, 32978, 300, 309, 311, 51419, 51419, 2085, 670, 456, 11, 550, 309, 486, 935, 264, 6713, 281, 257, 4356, 3541, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1890897269200797, "compression_ratio": 1.695852534562212, "no_caption_prob": 2.97717924695462e-05}, {"id": 213, "seek": 77260, "start": 793.7, "end": 798.5600000000001, "text": " wrong over there, then it will point the error to a smaller section.", "tokens": [50364, 407, 11, 498, 291, 829, 257, 955, 46115, 295, 2487, 466, 364, 6713, 294, 2699, 76, 11, 498, 291, 500, 380, 829, 2010, 25339, 763, 50652, 50652, 689, 309, 311, 2978, 11, 570, 309, 486, 584, 746, 411, 11, 1954, 11, 341, 955, 2136, 575, 341, 2519, 300, 50996, 50996, 307, 406, 264, 558, 2010, 13, 51080, 51080, 583, 498, 291, 829, 264, 48654, 322, 257, 2158, 300, 291, 829, 949, 293, 300, 309, 32978, 300, 309, 311, 51419, 51419, 2085, 670, 456, 11, 550, 309, 486, 935, 264, 6713, 281, 257, 4356, 3541, 13, 51662, 51662], "temperature": 0.0, "avg_logprob": -0.1890897269200797, "compression_ratio": 1.695852534562212, "no_caption_prob": 2.97717924695462e-05}, {"id": 214, "seek": 79856, "start": 798.56, "end": 803.52, "text": " So the error messages are much better if you put type annotations.", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 215, "seek": 79856, "start": 803.52, "end": 805.56, "text": " And this I don't know about TypeScripts.", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 216, "seek": 79856, "start": 805.56, "end": 811.0, "text": " And I was wondering whether you know, are the error messages better when you put them", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 217, "seek": 79856, "start": 811.0, "end": 812.0, "text": " everywhere?", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 218, "seek": 79856, "start": 812.0, "end": 816.16, "text": " Do you have the same kind of problem you do in Elm?", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 219, "seek": 79856, "start": 816.16, "end": 817.16, "text": " I think so.", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 220, "seek": 79856, "start": 817.16, "end": 825.3, "text": " I mean, I think that's just an inherent property of, you know, that you're saying, like, you're", "tokens": [50364, 407, 264, 6713, 7897, 366, 709, 1101, 498, 291, 829, 2010, 25339, 763, 13, 50612, 50612, 400, 341, 286, 500, 380, 458, 466, 15576, 14237, 82, 13, 50714, 50714, 400, 286, 390, 6359, 1968, 291, 458, 11, 366, 264, 6713, 7897, 1101, 562, 291, 829, 552, 50986, 50986, 5315, 30, 51036, 51036, 1144, 291, 362, 264, 912, 733, 295, 1154, 291, 360, 294, 2699, 76, 30, 51244, 51244, 286, 519, 370, 13, 51294, 51294, 286, 914, 11, 286, 519, 300, 311, 445, 364, 26387, 4707, 295, 11, 291, 458, 11, 300, 291, 434, 1566, 11, 411, 11, 291, 434, 51701, 51701], "temperature": 0.0, "avg_logprob": -0.14586227379956293, "compression_ratio": 1.6441441441441442, "no_caption_prob": 7.527923571615247e-06}, {"id": 221, "seek": 82530, "start": 825.3, "end": 831.3599999999999, "text": " giving more information for the type system to say, this is supposed to be this type.", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 222, "seek": 82530, "start": 831.3599999999999, "end": 834.24, "text": " And it needs to square everything with all that information.", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 223, "seek": 82530, "start": 834.24, "end": 839.24, "text": " So it's going to point the problem to somewhere else, as long as all those type annotations", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 224, "seek": 82530, "start": 839.24, "end": 840.24, "text": " are correct.", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 225, "seek": 82530, "start": 840.24, "end": 842.76, "text": " So, yeah, I think that's the same as with Elm.", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 226, "seek": 82530, "start": 842.76, "end": 848.24, "text": " But idiomatically, I think in the TypeScript ecosystem, I think it's a lot more common", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 227, "seek": 82530, "start": 848.24, "end": 851.3599999999999, "text": " to just say, like, oh, wow, this type system is great.", "tokens": [50364, 2902, 544, 1589, 337, 264, 2010, 1185, 281, 584, 11, 341, 307, 3442, 281, 312, 341, 2010, 13, 50667, 50667, 400, 309, 2203, 281, 3732, 1203, 365, 439, 300, 1589, 13, 50811, 50811, 407, 309, 311, 516, 281, 935, 264, 1154, 281, 4079, 1646, 11, 382, 938, 382, 439, 729, 2010, 25339, 763, 51061, 51061, 366, 3006, 13, 51111, 51111, 407, 11, 1338, 11, 286, 519, 300, 311, 264, 912, 382, 365, 2699, 76, 13, 51237, 51237, 583, 18014, 298, 5030, 11, 286, 519, 294, 264, 15576, 14237, 11311, 11, 286, 519, 309, 311, 257, 688, 544, 2689, 51511, 51511, 281, 445, 584, 11, 411, 11, 1954, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 51667, 51667], "temperature": 0.0, "avg_logprob": -0.1223956028620402, "compression_ratio": 1.7120622568093384, "no_caption_prob": 1.6186910215765238e-05}, {"id": 228, "seek": 85136, "start": 851.36, "end": 856.4, "text": " I don't have to put annotations everywhere, which as an Elm developer, I tend to think", "tokens": [50364, 286, 500, 380, 362, 281, 829, 25339, 763, 5315, 11, 597, 382, 364, 2699, 76, 10754, 11, 286, 3928, 281, 519, 50616, 50616, 295, 309, 544, 382, 411, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 50890, 50890, 467, 311, 4069, 1547, 281, 2573, 721, 484, 13, 51046, 51046, 400, 264, 46593, 393, 854, 385, 829, 2010, 25339, 763, 3190, 281, 4017, 552, 294, 382, 286, 360, 452, 589, 370, 51380, 51380, 300, 286, 393, 976, 309, 439, 264, 20936, 1944, 281, 854, 309, 976, 385, 1101, 6713, 7897, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10962298543829667, "compression_ratio": 1.59009009009009, "no_caption_prob": 2.3922430045786314e-05}, {"id": 229, "seek": 85136, "start": 856.4, "end": 861.88, "text": " of it more as like, wow, this type system is great.", "tokens": [50364, 286, 500, 380, 362, 281, 829, 25339, 763, 5315, 11, 597, 382, 364, 2699, 76, 10754, 11, 286, 3928, 281, 519, 50616, 50616, 295, 309, 544, 382, 411, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 50890, 50890, 467, 311, 4069, 1547, 281, 2573, 721, 484, 13, 51046, 51046, 400, 264, 46593, 393, 854, 385, 829, 2010, 25339, 763, 3190, 281, 4017, 552, 294, 382, 286, 360, 452, 589, 370, 51380, 51380, 300, 286, 393, 976, 309, 439, 264, 20936, 1944, 281, 854, 309, 976, 385, 1101, 6713, 7897, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10962298543829667, "compression_ratio": 1.59009009009009, "no_caption_prob": 2.3922430045786314e-05}, {"id": 230, "seek": 85136, "start": 861.88, "end": 865.0, "text": " It's smart enough to figure things out.", "tokens": [50364, 286, 500, 380, 362, 281, 829, 25339, 763, 5315, 11, 597, 382, 364, 2699, 76, 10754, 11, 286, 3928, 281, 519, 50616, 50616, 295, 309, 544, 382, 411, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 50890, 50890, 467, 311, 4069, 1547, 281, 2573, 721, 484, 13, 51046, 51046, 400, 264, 46593, 393, 854, 385, 829, 2010, 25339, 763, 3190, 281, 4017, 552, 294, 382, 286, 360, 452, 589, 370, 51380, 51380, 300, 286, 393, 976, 309, 439, 264, 20936, 1944, 281, 854, 309, 976, 385, 1101, 6713, 7897, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10962298543829667, "compression_ratio": 1.59009009009009, "no_caption_prob": 2.3922430045786314e-05}, {"id": 231, "seek": 85136, "start": 865.0, "end": 871.6800000000001, "text": " And the tooling can help me put type annotations places to lock them in as I do my work so", "tokens": [50364, 286, 500, 380, 362, 281, 829, 25339, 763, 5315, 11, 597, 382, 364, 2699, 76, 10754, 11, 286, 3928, 281, 519, 50616, 50616, 295, 309, 544, 382, 411, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 50890, 50890, 467, 311, 4069, 1547, 281, 2573, 721, 484, 13, 51046, 51046, 400, 264, 46593, 393, 854, 385, 829, 2010, 25339, 763, 3190, 281, 4017, 552, 294, 382, 286, 360, 452, 589, 370, 51380, 51380, 300, 286, 393, 976, 309, 439, 264, 20936, 1944, 281, 854, 309, 976, 385, 1101, 6713, 7897, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10962298543829667, "compression_ratio": 1.59009009009009, "no_caption_prob": 2.3922430045786314e-05}, {"id": 232, "seek": 85136, "start": 871.6800000000001, "end": 877.6, "text": " that I can give it all the clues possible to help it give me better error messages.", "tokens": [50364, 286, 500, 380, 362, 281, 829, 25339, 763, 5315, 11, 597, 382, 364, 2699, 76, 10754, 11, 286, 3928, 281, 519, 50616, 50616, 295, 309, 544, 382, 411, 11, 6076, 11, 341, 2010, 1185, 307, 869, 13, 50890, 50890, 467, 311, 4069, 1547, 281, 2573, 721, 484, 13, 51046, 51046, 400, 264, 46593, 393, 854, 385, 829, 2010, 25339, 763, 3190, 281, 4017, 552, 294, 382, 286, 360, 452, 589, 370, 51380, 51380, 300, 286, 393, 976, 309, 439, 264, 20936, 1944, 281, 854, 309, 976, 385, 1101, 6713, 7897, 13, 51676, 51676], "temperature": 0.0, "avg_logprob": -0.10962298543829667, "compression_ratio": 1.59009009009009, "no_caption_prob": 2.3922430045786314e-05}, {"id": 233, "seek": 87760, "start": 877.6, "end": 884.84, "text": " But what I want is I want it to catch mistakes and point me to the problem so that when something", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 234, "seek": 87760, "start": 884.84, "end": 889.0, "text": " has a compiler error, it's the shortest path possible to fix things.", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 235, "seek": 87760, "start": 889.0, "end": 892.88, "text": " And I think that's just a different mindset between Elm and TypeScript.", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 236, "seek": 87760, "start": 892.88, "end": 895.6800000000001, "text": " I don't know if it's only for TypeScript.", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 237, "seek": 87760, "start": 895.6800000000001, "end": 900.48, "text": " So the last time I used Java was a very long time ago, like more than 10 years ago.", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 238, "seek": 87760, "start": 900.48, "end": 906.64, "text": " And when I was using it, you had to specify the type of everything, of every variable", "tokens": [50364, 583, 437, 286, 528, 307, 286, 528, 309, 281, 3745, 8038, 293, 935, 385, 281, 264, 1154, 370, 300, 562, 746, 50726, 50726, 575, 257, 31958, 6713, 11, 309, 311, 264, 31875, 3100, 1944, 281, 3191, 721, 13, 50934, 50934, 400, 286, 519, 300, 311, 445, 257, 819, 12543, 1296, 2699, 76, 293, 15576, 14237, 13, 51128, 51128, 286, 500, 380, 458, 498, 309, 311, 787, 337, 15576, 14237, 13, 51268, 51268, 407, 264, 1036, 565, 286, 1143, 10745, 390, 257, 588, 938, 565, 2057, 11, 411, 544, 813, 1266, 924, 2057, 13, 51508, 51508, 400, 562, 286, 390, 1228, 309, 11, 291, 632, 281, 16500, 264, 2010, 295, 1203, 11, 295, 633, 7006, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.092728913840601, "compression_ratio": 1.6423357664233578, "no_caption_prob": 7.766863745928276e-06}, {"id": 239, "seek": 90664, "start": 906.64, "end": 907.64, "text": " that you set.", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 240, "seek": 90664, "start": 907.64, "end": 915.56, "text": " And then later, they added the feature where you could say, val x equals blah, blah, blah,", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 241, "seek": 90664, "start": 915.56, "end": 917.6, "text": " where the compiler would infer the type.", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 242, "seek": 90664, "start": 917.6, "end": 921.0, "text": " So I'm guessing the compiler is still pretty strict.", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 243, "seek": 90664, "start": 921.0, "end": 924.72, "text": " So if it could not figure something out, it would tell you.", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 244, "seek": 90664, "start": 924.72, "end": 930.56, "text": " But since everything has annotations everywhere, I'm guessing it's pretty good at that.", "tokens": [50364, 300, 291, 992, 13, 50414, 50414, 400, 550, 1780, 11, 436, 3869, 264, 4111, 689, 291, 727, 584, 11, 1323, 2031, 6915, 12288, 11, 12288, 11, 12288, 11, 50810, 50810, 689, 264, 31958, 576, 13596, 264, 2010, 13, 50912, 50912, 407, 286, 478, 17939, 264, 31958, 307, 920, 1238, 10910, 13, 51082, 51082, 407, 498, 309, 727, 406, 2573, 746, 484, 11, 309, 576, 980, 291, 13, 51268, 51268, 583, 1670, 1203, 575, 25339, 763, 5315, 11, 286, 478, 17939, 309, 311, 1238, 665, 412, 300, 13, 51560, 51560], "temperature": 0.0, "avg_logprob": -0.14493595374809518, "compression_ratio": 1.6796116504854368, "no_caption_prob": 5.561780562857166e-05}, {"id": 245, "seek": 93056, "start": 930.56, "end": 939.28, "text": " But still, yeah, when I put type annotations on let variables, it's partially for documentation.", "tokens": [50364, 583, 920, 11, 1338, 11, 562, 286, 829, 2010, 25339, 763, 322, 718, 9102, 11, 309, 311, 18886, 337, 14333, 13, 50800, 50800, 407, 300, 286, 500, 380, 362, 281, 11, 498, 286, 584, 746, 411, 2031, 6915, 2445, 818, 11, 550, 286, 500, 380, 51146, 51146, 528, 281, 362, 281, 574, 281, 264, 2445, 7123, 281, 458, 437, 264, 2010, 295, 452, 1874, 307, 11, 2318, 51444, 51444, 498, 309, 8306, 746, 411, 1337, 1167, 11, 689, 550, 286, 576, 611, 362, 281, 1520, 337, 264, 12869, 13, 51724, 51724, 400, 300, 393, 312, 257, 19509, 5458, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.16059892154434352, "compression_ratio": 1.6653061224489796, "no_caption_prob": 7.253342482727021e-05}, {"id": 246, "seek": 93056, "start": 939.28, "end": 946.1999999999999, "text": " So that I don't have to, if I say something like x equals function call, then I don't", "tokens": [50364, 583, 920, 11, 1338, 11, 562, 286, 829, 2010, 25339, 763, 322, 718, 9102, 11, 309, 311, 18886, 337, 14333, 13, 50800, 50800, 407, 300, 286, 500, 380, 362, 281, 11, 498, 286, 584, 746, 411, 2031, 6915, 2445, 818, 11, 550, 286, 500, 380, 51146, 51146, 528, 281, 362, 281, 574, 281, 264, 2445, 7123, 281, 458, 437, 264, 2010, 295, 452, 1874, 307, 11, 2318, 51444, 51444, 498, 309, 8306, 746, 411, 1337, 1167, 11, 689, 550, 286, 576, 611, 362, 281, 1520, 337, 264, 12869, 13, 51724, 51724, 400, 300, 393, 312, 257, 19509, 5458, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.16059892154434352, "compression_ratio": 1.6653061224489796, "no_caption_prob": 7.253342482727021e-05}, {"id": 247, "seek": 93056, "start": 946.1999999999999, "end": 952.16, "text": " want to have to look to the function definition to know what the type of my result is, especially", "tokens": [50364, 583, 920, 11, 1338, 11, 562, 286, 829, 2010, 25339, 763, 322, 718, 9102, 11, 309, 311, 18886, 337, 14333, 13, 50800, 50800, 407, 300, 286, 500, 380, 362, 281, 11, 498, 286, 584, 746, 411, 2031, 6915, 2445, 818, 11, 550, 286, 500, 380, 51146, 51146, 528, 281, 362, 281, 574, 281, 264, 2445, 7123, 281, 458, 437, 264, 2010, 295, 452, 1874, 307, 11, 2318, 51444, 51444, 498, 309, 8306, 746, 411, 1337, 1167, 11, 689, 550, 286, 576, 611, 362, 281, 1520, 337, 264, 12869, 13, 51724, 51724, 400, 300, 393, 312, 257, 19509, 5458, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.16059892154434352, "compression_ratio": 1.6653061224489796, "no_caption_prob": 7.253342482727021e-05}, {"id": 248, "seek": 93056, "start": 952.16, "end": 957.76, "text": " if it contains something like generics, where then I would also have to check for the arguments.", "tokens": [50364, 583, 920, 11, 1338, 11, 562, 286, 829, 2010, 25339, 763, 322, 718, 9102, 11, 309, 311, 18886, 337, 14333, 13, 50800, 50800, 407, 300, 286, 500, 380, 362, 281, 11, 498, 286, 584, 746, 411, 2031, 6915, 2445, 818, 11, 550, 286, 500, 380, 51146, 51146, 528, 281, 362, 281, 574, 281, 264, 2445, 7123, 281, 458, 437, 264, 2010, 295, 452, 1874, 307, 11, 2318, 51444, 51444, 498, 309, 8306, 746, 411, 1337, 1167, 11, 689, 550, 286, 576, 611, 362, 281, 1520, 337, 264, 12869, 13, 51724, 51724, 400, 300, 393, 312, 257, 19509, 5458, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.16059892154434352, "compression_ratio": 1.6653061224489796, "no_caption_prob": 7.253342482727021e-05}, {"id": 249, "seek": 93056, "start": 957.76, "end": 960.0, "text": " And that can be a rabbit hole.", "tokens": [50364, 583, 920, 11, 1338, 11, 562, 286, 829, 2010, 25339, 763, 322, 718, 9102, 11, 309, 311, 18886, 337, 14333, 13, 50800, 50800, 407, 300, 286, 500, 380, 362, 281, 11, 498, 286, 584, 746, 411, 2031, 6915, 2445, 818, 11, 550, 286, 500, 380, 51146, 51146, 528, 281, 362, 281, 574, 281, 264, 2445, 7123, 281, 458, 437, 264, 2010, 295, 452, 1874, 307, 11, 2318, 51444, 51444, 498, 309, 8306, 746, 411, 1337, 1167, 11, 689, 550, 286, 576, 611, 362, 281, 1520, 337, 264, 12869, 13, 51724, 51724, 400, 300, 393, 312, 257, 19509, 5458, 13, 51836, 51836], "temperature": 0.0, "avg_logprob": -0.16059892154434352, "compression_ratio": 1.6653061224489796, "no_caption_prob": 7.253342482727021e-05}, {"id": 250, "seek": 96000, "start": 960.0, "end": 961.0, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 251, "seek": 96000, "start": 961.0, "end": 966.8, "text": " But if I put a type annotation in there, and the type of the function call changes, I kind", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 252, "seek": 96000, "start": 966.8, "end": 967.8, "text": " of want to know.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 253, "seek": 96000, "start": 967.8, "end": 975.32, "text": " Because that will change how I respond where I assign the variable.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 254, "seek": 96000, "start": 975.32, "end": 976.32, "text": " That's a great point.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 255, "seek": 96000, "start": 976.32, "end": 977.32, "text": " Yes.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 256, "seek": 96000, "start": 977.32, "end": 978.32, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 257, "seek": 96000, "start": 978.32, "end": 979.32, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 258, "seek": 96000, "start": 979.32, "end": 983.16, "text": " You don't want to be like trying to fix things and then without realizing it, change the", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 259, "seek": 96000, "start": 983.16, "end": 985.64, "text": " type of a variable in your let bindings.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 260, "seek": 96000, "start": 985.64, "end": 986.64, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 261, "seek": 96000, "start": 986.64, "end": 988.96, "text": " I mean, it will probably give an error somewhere else.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 262, "seek": 96000, "start": 988.96, "end": 989.96, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 583, 498, 286, 829, 257, 2010, 48654, 294, 456, 11, 293, 264, 2010, 295, 264, 2445, 818, 2962, 11, 286, 733, 50704, 50704, 295, 528, 281, 458, 13, 50754, 50754, 1436, 300, 486, 1319, 577, 286, 4196, 689, 286, 6269, 264, 7006, 13, 51130, 51130, 663, 311, 257, 869, 935, 13, 51180, 51180, 1079, 13, 51230, 51230, 1779, 13, 51280, 51280, 865, 13, 51330, 51330, 509, 500, 380, 528, 281, 312, 411, 1382, 281, 3191, 721, 293, 550, 1553, 16734, 309, 11, 1319, 264, 51522, 51522, 2010, 295, 257, 7006, 294, 428, 718, 14786, 1109, 13, 51646, 51646, 865, 13, 51696, 51696, 286, 914, 11, 309, 486, 1391, 976, 364, 6713, 4079, 1646, 13, 51812, 51812, 1779, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.19806910318041604, "compression_ratio": 1.7004048582995952, "no_caption_prob": 9.516144928056747e-06}, {"id": 263, "seek": 98996, "start": 989.96, "end": 994.52, "text": " But if you're in the middle of a challenging type puzzle that you're solving, and you didn't", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 264, "seek": 98996, "start": 994.52, "end": 999.12, "text": " realize then, yeah, you want to have put those as fixed points.", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 265, "seek": 98996, "start": 999.12, "end": 1004.44, "text": " So you can change one small thing at a time when you're trying to solve a problem.", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 266, "seek": 98996, "start": 1004.44, "end": 1005.44, "text": " Yeah.", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 267, "seek": 98996, "start": 1005.44, "end": 1011.32, "text": " Then I'm guessing in TypeScript, it can be dangerous because if the function call somehow", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 268, "seek": 98996, "start": 1011.32, "end": 1018.72, "text": " starts returning any compared to something else before, now you have polluted your function", "tokens": [50364, 583, 498, 291, 434, 294, 264, 2808, 295, 257, 7595, 2010, 12805, 300, 291, 434, 12606, 11, 293, 291, 994, 380, 50592, 50592, 4325, 550, 11, 1338, 11, 291, 528, 281, 362, 829, 729, 382, 6806, 2793, 13, 50822, 50822, 407, 291, 393, 1319, 472, 1359, 551, 412, 257, 565, 562, 291, 434, 1382, 281, 5039, 257, 1154, 13, 51088, 51088, 865, 13, 51138, 51138, 1396, 286, 478, 17939, 294, 15576, 14237, 11, 309, 393, 312, 5795, 570, 498, 264, 2445, 818, 6063, 51432, 51432, 3719, 12678, 604, 5347, 281, 746, 1646, 949, 11, 586, 291, 362, 6418, 4866, 428, 2445, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.17479941958472842, "compression_ratio": 1.6113207547169812, "no_caption_prob": 1.0451371053932235e-05}, {"id": 269, "seek": 101872, "start": 1018.72, "end": 1020.2, "text": " call location.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 270, "seek": 101872, "start": 1020.2, "end": 1021.2, "text": " Yes.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 271, "seek": 101872, "start": 1021.2, "end": 1026.04, "text": " So I know we were supposed to talk about basics, but let's talk about any.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 272, "seek": 101872, "start": 1026.04, "end": 1027.04, "text": " Yes.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 273, "seek": 101872, "start": 1027.04, "end": 1028.04, "text": " Okay.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 274, "seek": 101872, "start": 1028.04, "end": 1031.72, "text": " So there are several points that just came up there.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 275, "seek": 101872, "start": 1031.72, "end": 1039.38, "text": " I want to touch on one thing quickly, which is you mentioned like Java and the explicitness", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 276, "seek": 101872, "start": 1039.38, "end": 1041.16, "text": " and verbosity of Java types.", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 277, "seek": 101872, "start": 1041.16, "end": 1047.64, "text": " I think to some extent like that, that's what a lot of people push back on when they're", "tokens": [50364, 818, 4914, 13, 50438, 50438, 1079, 13, 50488, 50488, 407, 286, 458, 321, 645, 3442, 281, 751, 466, 14688, 11, 457, 718, 311, 751, 466, 604, 13, 50730, 50730, 1079, 13, 50780, 50780, 1033, 13, 50830, 50830, 407, 456, 366, 2940, 2793, 300, 445, 1361, 493, 456, 13, 51014, 51014, 286, 528, 281, 2557, 322, 472, 551, 2661, 11, 597, 307, 291, 2835, 411, 10745, 293, 264, 28021, 6394, 51397, 51397, 293, 9595, 20373, 295, 10745, 3467, 13, 51486, 51486, 286, 519, 281, 512, 8396, 411, 300, 11, 300, 311, 437, 257, 688, 295, 561, 2944, 646, 322, 562, 436, 434, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.17664377121698288, "compression_ratio": 1.5751072961373391, "no_caption_prob": 3.822800863417797e-05}, {"id": 278, "seek": 104764, "start": 1047.64, "end": 1049.3200000000002, "text": " against typed languages.", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 279, "seek": 104764, "start": 1049.3200000000002, "end": 1053.0800000000002, "text": " I think a lot of that came from a lot of these design decisions of Java.", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 280, "seek": 104764, "start": 1053.0800000000002, "end": 1060.4, "text": " So there were many places where you would write duplicate information and you would", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 281, "seek": 104764, "start": 1060.4, "end": 1065.5200000000002, "text": " define a type and then you would invoke a constructor and you'd have to put the type", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 282, "seek": 104764, "start": 1065.5200000000002, "end": 1070.5200000000002, "text": " again and it seemed like repetitive information and this sort of thing.", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 283, "seek": 104764, "start": 1070.5200000000002, "end": 1076.5800000000002, "text": " Like one of the things that a lot of people had trouble with Java is that almost everything", "tokens": [50364, 1970, 33941, 8650, 13, 50448, 50448, 286, 519, 257, 688, 295, 300, 1361, 490, 257, 688, 295, 613, 1715, 5327, 295, 10745, 13, 50636, 50636, 407, 456, 645, 867, 3190, 689, 291, 576, 2464, 23976, 1589, 293, 291, 576, 51002, 51002, 6964, 257, 2010, 293, 550, 291, 576, 41117, 257, 47479, 293, 291, 1116, 362, 281, 829, 264, 2010, 51258, 51258, 797, 293, 309, 6576, 411, 29404, 1589, 293, 341, 1333, 295, 551, 13, 51508, 51508, 1743, 472, 295, 264, 721, 300, 257, 688, 295, 561, 632, 5253, 365, 10745, 307, 300, 1920, 1203, 51811, 51811], "temperature": 0.0, "avg_logprob": -0.11020298393405213, "compression_ratio": 1.7842323651452283, "no_caption_prob": 2.5465822545811534e-05}, {"id": 284, "seek": 107658, "start": 1076.58, "end": 1080.8, "text": " is like a nominal type in Java rather than a structural type.", "tokens": [50364, 307, 411, 257, 41641, 2010, 294, 10745, 2831, 813, 257, 15067, 2010, 13, 50575, 50575, 407, 257, 41641, 2010, 885, 41641, 382, 294, 1315, 11, 5369, 11, 5369, 11, 498, 291, 4382, 13, 50935, 50935, 1044, 291, 13, 51029, 51029, 663, 307, 1936, 1566, 300, 498, 309, 1177, 380, 2864, 281, 264, 2685, 45690, 295, 411, 257, 51341, 51341, 47479, 11, 550, 309, 311, 406, 264, 912, 551, 11, 597, 294, 2699, 76, 300, 576, 312, 411, 257, 2375, 2010, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.14060332354377297, "compression_ratio": 1.65625, "no_caption_prob": 1.1300518963253126e-05}, {"id": 285, "seek": 107658, "start": 1080.8, "end": 1088.0, "text": " So a nominal type being nominal as in name, nom, nom, if you prefer.", "tokens": [50364, 307, 411, 257, 41641, 2010, 294, 10745, 2831, 813, 257, 15067, 2010, 13, 50575, 50575, 407, 257, 41641, 2010, 885, 41641, 382, 294, 1315, 11, 5369, 11, 5369, 11, 498, 291, 4382, 13, 50935, 50935, 1044, 291, 13, 51029, 51029, 663, 307, 1936, 1566, 300, 498, 309, 1177, 380, 2864, 281, 264, 2685, 45690, 295, 411, 257, 51341, 51341, 47479, 11, 550, 309, 311, 406, 264, 912, 551, 11, 597, 294, 2699, 76, 300, 576, 312, 411, 257, 2375, 2010, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.14060332354377297, "compression_ratio": 1.65625, "no_caption_prob": 1.1300518963253126e-05}, {"id": 286, "seek": 107658, "start": 1088.0, "end": 1089.8799999999999, "text": " Thank you.", "tokens": [50364, 307, 411, 257, 41641, 2010, 294, 10745, 2831, 813, 257, 15067, 2010, 13, 50575, 50575, 407, 257, 41641, 2010, 885, 41641, 382, 294, 1315, 11, 5369, 11, 5369, 11, 498, 291, 4382, 13, 50935, 50935, 1044, 291, 13, 51029, 51029, 663, 307, 1936, 1566, 300, 498, 309, 1177, 380, 2864, 281, 264, 2685, 45690, 295, 411, 257, 51341, 51341, 47479, 11, 550, 309, 311, 406, 264, 912, 551, 11, 597, 294, 2699, 76, 300, 576, 312, 411, 257, 2375, 2010, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.14060332354377297, "compression_ratio": 1.65625, "no_caption_prob": 1.1300518963253126e-05}, {"id": 287, "seek": 107658, "start": 1089.8799999999999, "end": 1096.12, "text": " That is basically saying that if it doesn't refer to the specific identifier of like a", "tokens": [50364, 307, 411, 257, 41641, 2010, 294, 10745, 2831, 813, 257, 15067, 2010, 13, 50575, 50575, 407, 257, 41641, 2010, 885, 41641, 382, 294, 1315, 11, 5369, 11, 5369, 11, 498, 291, 4382, 13, 50935, 50935, 1044, 291, 13, 51029, 51029, 663, 307, 1936, 1566, 300, 498, 309, 1177, 380, 2864, 281, 264, 2685, 45690, 295, 411, 257, 51341, 51341, 47479, 11, 550, 309, 311, 406, 264, 912, 551, 11, 597, 294, 2699, 76, 300, 576, 312, 411, 257, 2375, 2010, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.14060332354377297, "compression_ratio": 1.65625, "no_caption_prob": 1.1300518963253126e-05}, {"id": 288, "seek": 107658, "start": 1096.12, "end": 1101.6799999999998, "text": " constructor, then it's not the same thing, which in Elm that would be like a custom type.", "tokens": [50364, 307, 411, 257, 41641, 2010, 294, 10745, 2831, 813, 257, 15067, 2010, 13, 50575, 50575, 407, 257, 41641, 2010, 885, 41641, 382, 294, 1315, 11, 5369, 11, 5369, 11, 498, 291, 4382, 13, 50935, 50935, 1044, 291, 13, 51029, 51029, 663, 307, 1936, 1566, 300, 498, 309, 1177, 380, 2864, 281, 264, 2685, 45690, 295, 411, 257, 51341, 51341, 47479, 11, 550, 309, 311, 406, 264, 912, 551, 11, 597, 294, 2699, 76, 300, 576, 312, 411, 257, 2375, 2010, 13, 51619, 51619], "temperature": 0.0, "avg_logprob": -0.14060332354377297, "compression_ratio": 1.65625, "no_caption_prob": 1.1300518963253126e-05}, {"id": 289, "seek": 110168, "start": 1101.68, "end": 1106.64, "text": " If you'd find a custom type in a particular module, if that custom type has a value of", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 290, "seek": 110168, "start": 1106.64, "end": 1112.76, "text": " a particular record type inside of the constructor of the custom type variant, then it doesn't", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 291, "seek": 110168, "start": 1112.76, "end": 1118.6000000000001, "text": " matter if you create something that has the same record with the same fields.", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 292, "seek": 110168, "start": 1118.6000000000001, "end": 1123.42, "text": " It didn't use that identifier as the constructor to construct that variant and therefore it's", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 293, "seek": 110168, "start": 1123.42, "end": 1124.48, "text": " not that type.", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 294, "seek": 110168, "start": 1124.48, "end": 1126.5600000000002, "text": " And so you can do that in Elm.", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 295, "seek": 110168, "start": 1126.5600000000002, "end": 1131.4, "text": " In Java, it's almost like everything is that.", "tokens": [50364, 759, 291, 1116, 915, 257, 2375, 2010, 294, 257, 1729, 10088, 11, 498, 300, 2375, 2010, 575, 257, 2158, 295, 50612, 50612, 257, 1729, 2136, 2010, 1854, 295, 264, 47479, 295, 264, 2375, 2010, 17501, 11, 550, 309, 1177, 380, 50918, 50918, 1871, 498, 291, 1884, 746, 300, 575, 264, 912, 2136, 365, 264, 912, 7909, 13, 51210, 51210, 467, 994, 380, 764, 300, 45690, 382, 264, 47479, 281, 7690, 300, 17501, 293, 4412, 309, 311, 51451, 51451, 406, 300, 2010, 13, 51504, 51504, 400, 370, 291, 393, 360, 300, 294, 2699, 76, 13, 51608, 51608, 682, 10745, 11, 309, 311, 1920, 411, 1203, 307, 300, 13, 51850, 51850], "temperature": 0.0, "avg_logprob": -0.09467858666772241, "compression_ratio": 1.8776371308016877, "no_caption_prob": 1.2605964002432302e-05}, {"id": 296, "seek": 113140, "start": 1131.4, "end": 1136.88, "text": " You can create these like map like structures and array lists and things like that.", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 297, "seek": 113140, "start": 1136.88, "end": 1142.2800000000002, "text": " But even those are like a data structure that is nominally typed and can have key value", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 298, "seek": 113140, "start": 1142.2800000000002, "end": 1143.8400000000001, "text": " pairs if you want or whatever.", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 299, "seek": 113140, "start": 1143.8400000000001, "end": 1151.16, "text": " But you can't sort of just put a key value data structure and then, oh, okay, now I see", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 300, "seek": 113140, "start": 1151.16, "end": 1153.64, "text": " it has these fields with these types.", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 301, "seek": 113140, "start": 1153.64, "end": 1157.0, "text": " And so TypeScript has that and Elm has that.", "tokens": [50364, 509, 393, 1884, 613, 411, 4471, 411, 9227, 293, 10225, 14511, 293, 721, 411, 300, 13, 50638, 50638, 583, 754, 729, 366, 411, 257, 1412, 3877, 300, 307, 5369, 19801, 33941, 293, 393, 362, 2141, 2158, 50908, 50908, 15494, 498, 291, 528, 420, 2035, 13, 50986, 50986, 583, 291, 393, 380, 1333, 295, 445, 829, 257, 2141, 2158, 1412, 3877, 293, 550, 11, 1954, 11, 1392, 11, 586, 286, 536, 51352, 51352, 309, 575, 613, 7909, 365, 613, 3467, 13, 51476, 51476, 400, 370, 15576, 14237, 575, 300, 293, 2699, 76, 575, 300, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.14038537473094706, "compression_ratio": 1.6954545454545455, "no_caption_prob": 1.3845734429196455e-05}, {"id": 302, "seek": 115700, "start": 1157.0, "end": 1162.72, "text": " It turns out that's very nice because sometimes you're like, I don't care how it was constructed.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 303, "seek": 115700, "start": 1162.72, "end": 1167.04, "text": " I just need these values or maybe even a subset of these values like extensible records in", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 304, "seek": 115700, "start": 1167.04, "end": 1168.04, "text": " Elm.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 305, "seek": 115700, "start": 1168.04, "end": 1171.68, "text": " I need a record and I don't care what other data it has, but I need a first name and a", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 306, "seek": 115700, "start": 1171.68, "end": 1173.36, "text": " last name to be strings.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 307, "seek": 115700, "start": 1173.36, "end": 1174.88, "text": " And that's all I care about.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 308, "seek": 115700, "start": 1174.88, "end": 1179.28, "text": " So the annoying part in Java is that you can't have anonymous records basically.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 309, "seek": 115700, "start": 1179.28, "end": 1180.46, "text": " Yeah, exactly.", "tokens": [50364, 467, 4523, 484, 300, 311, 588, 1481, 570, 2171, 291, 434, 411, 11, 286, 500, 380, 1127, 577, 309, 390, 17083, 13, 50650, 50650, 286, 445, 643, 613, 4190, 420, 1310, 754, 257, 25993, 295, 613, 4190, 411, 1279, 30633, 7724, 294, 50866, 50866, 2699, 76, 13, 50916, 50916, 286, 643, 257, 2136, 293, 286, 500, 380, 1127, 437, 661, 1412, 309, 575, 11, 457, 286, 643, 257, 700, 1315, 293, 257, 51098, 51098, 1036, 1315, 281, 312, 13985, 13, 51182, 51182, 400, 300, 311, 439, 286, 1127, 466, 13, 51258, 51258, 407, 264, 11304, 644, 294, 10745, 307, 300, 291, 393, 380, 362, 24932, 7724, 1936, 13, 51478, 51478, 865, 11, 2293, 13, 51537, 51537], "temperature": 0.0, "avg_logprob": -0.14076156939490367, "compression_ratio": 1.6731517509727627, "no_caption_prob": 9.223372217093129e-06}, {"id": 310, "seek": 118046, "start": 1180.46, "end": 1187.38, "text": " You would have to have a first last name interface or class or thing like that.", "tokens": [50364, 509, 576, 362, 281, 362, 257, 700, 1036, 1315, 9226, 420, 1508, 420, 551, 411, 300, 13, 50710, 50710, 400, 746, 576, 11, 291, 1116, 362, 281, 584, 704, 17988, 700, 1036, 1315, 420, 11, 291, 458, 11, 293, 300, 561, 51015, 51015, 483, 534, 5868, 295, 300, 365, 10745, 13, 51103, 51103, 400, 286, 841, 411, 300, 311, 437, 257, 688, 295, 264, 2944, 3207, 1970, 33941, 8650, 1361, 490, 13, 51328, 51328, 400, 550, 561, 483, 666, 257, 2856, 411, 2699, 76, 293, 436, 434, 411, 11, 6076, 11, 767, 406, 787, 307, 51575, 51575], "temperature": 0.0, "avg_logprob": -0.13272276791659268, "compression_ratio": 1.7264573991031391, "no_caption_prob": 1.8631020793691278e-05}, {"id": 311, "seek": 118046, "start": 1187.38, "end": 1193.48, "text": " And something would, you'd have to say implements first last name or, you know, and that people", "tokens": [50364, 509, 576, 362, 281, 362, 257, 700, 1036, 1315, 9226, 420, 1508, 420, 551, 411, 300, 13, 50710, 50710, 400, 746, 576, 11, 291, 1116, 362, 281, 584, 704, 17988, 700, 1036, 1315, 420, 11, 291, 458, 11, 293, 300, 561, 51015, 51015, 483, 534, 5868, 295, 300, 365, 10745, 13, 51103, 51103, 400, 286, 841, 411, 300, 311, 437, 257, 688, 295, 264, 2944, 3207, 1970, 33941, 8650, 1361, 490, 13, 51328, 51328, 400, 550, 561, 483, 666, 257, 2856, 411, 2699, 76, 293, 436, 434, 411, 11, 6076, 11, 767, 406, 787, 307, 51575, 51575], "temperature": 0.0, "avg_logprob": -0.13272276791659268, "compression_ratio": 1.7264573991031391, "no_caption_prob": 1.8631020793691278e-05}, {"id": 312, "seek": 118046, "start": 1193.48, "end": 1195.24, "text": " get really tired of that with Java.", "tokens": [50364, 509, 576, 362, 281, 362, 257, 700, 1036, 1315, 9226, 420, 1508, 420, 551, 411, 300, 13, 50710, 50710, 400, 746, 576, 11, 291, 1116, 362, 281, 584, 704, 17988, 700, 1036, 1315, 420, 11, 291, 458, 11, 293, 300, 561, 51015, 51015, 483, 534, 5868, 295, 300, 365, 10745, 13, 51103, 51103, 400, 286, 841, 411, 300, 311, 437, 257, 688, 295, 264, 2944, 3207, 1970, 33941, 8650, 1361, 490, 13, 51328, 51328, 400, 550, 561, 483, 666, 257, 2856, 411, 2699, 76, 293, 436, 434, 411, 11, 6076, 11, 767, 406, 787, 307, 51575, 51575], "temperature": 0.0, "avg_logprob": -0.13272276791659268, "compression_ratio": 1.7264573991031391, "no_caption_prob": 1.8631020793691278e-05}, {"id": 313, "seek": 118046, "start": 1195.24, "end": 1199.74, "text": " And I feel like that's what a lot of the pushback against typed languages came from.", "tokens": [50364, 509, 576, 362, 281, 362, 257, 700, 1036, 1315, 9226, 420, 1508, 420, 551, 411, 300, 13, 50710, 50710, 400, 746, 576, 11, 291, 1116, 362, 281, 584, 704, 17988, 700, 1036, 1315, 420, 11, 291, 458, 11, 293, 300, 561, 51015, 51015, 483, 534, 5868, 295, 300, 365, 10745, 13, 51103, 51103, 400, 286, 841, 411, 300, 311, 437, 257, 688, 295, 264, 2944, 3207, 1970, 33941, 8650, 1361, 490, 13, 51328, 51328, 400, 550, 561, 483, 666, 257, 2856, 411, 2699, 76, 293, 436, 434, 411, 11, 6076, 11, 767, 406, 787, 307, 51575, 51575], "temperature": 0.0, "avg_logprob": -0.13272276791659268, "compression_ratio": 1.7264573991031391, "no_caption_prob": 1.8631020793691278e-05}, {"id": 314, "seek": 118046, "start": 1199.74, "end": 1204.68, "text": " And then people get into a language like Elm and they're like, wow, actually not only is", "tokens": [50364, 509, 576, 362, 281, 362, 257, 700, 1036, 1315, 9226, 420, 1508, 420, 551, 411, 300, 13, 50710, 50710, 400, 746, 576, 11, 291, 1116, 362, 281, 584, 704, 17988, 700, 1036, 1315, 420, 11, 291, 458, 11, 293, 300, 561, 51015, 51015, 483, 534, 5868, 295, 300, 365, 10745, 13, 51103, 51103, 400, 286, 841, 411, 300, 311, 437, 257, 688, 295, 264, 2944, 3207, 1970, 33941, 8650, 1361, 490, 13, 51328, 51328, 400, 550, 561, 483, 666, 257, 2856, 411, 2699, 76, 293, 436, 434, 411, 11, 6076, 11, 767, 406, 787, 307, 51575, 51575], "temperature": 0.0, "avg_logprob": -0.13272276791659268, "compression_ratio": 1.7264573991031391, "no_caption_prob": 1.8631020793691278e-05}, {"id": 315, "seek": 120468, "start": 1204.68, "end": 1210.64, "text": " the type system more lightweight and easier to do things like structural typing and that", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 316, "seek": 120468, "start": 1210.64, "end": 1211.64, "text": " sort of thing.", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 317, "seek": 120468, "start": 1211.64, "end": 1217.04, "text": " It feels like I'm fighting against things less to get the right types, but also it helps", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 318, "seek": 120468, "start": 1217.04, "end": 1220.3600000000001, "text": " me more when my types are actually incorrect.", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 319, "seek": 120468, "start": 1220.3600000000001, "end": 1226.28, "text": " Not just like I didn't put the correct identifier name, but actually like I have a problem with", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 320, "seek": 120468, "start": 1226.28, "end": 1227.28, "text": " my types.", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 321, "seek": 120468, "start": 1227.28, "end": 1231.1200000000001, "text": " It helps me more and I can actually trust it when it says the types are right because", "tokens": [50364, 264, 2010, 1185, 544, 22052, 293, 3571, 281, 360, 721, 411, 15067, 18444, 293, 300, 50662, 50662, 1333, 295, 551, 13, 50712, 50712, 467, 3417, 411, 286, 478, 5237, 1970, 721, 1570, 281, 483, 264, 558, 3467, 11, 457, 611, 309, 3665, 50982, 50982, 385, 544, 562, 452, 3467, 366, 767, 18424, 13, 51148, 51148, 1726, 445, 411, 286, 994, 380, 829, 264, 3006, 45690, 1315, 11, 457, 767, 411, 286, 362, 257, 1154, 365, 51444, 51444, 452, 3467, 13, 51494, 51494, 467, 3665, 385, 544, 293, 286, 393, 767, 3361, 309, 562, 309, 1619, 264, 3467, 366, 558, 570, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.08473215653346135, "compression_ratio": 1.8143459915611815, "no_caption_prob": 0.00012337876250967383}, {"id": 322, "seek": 123112, "start": 1231.12, "end": 1236.9199999999998, "text": " I don't have array index out of bounds issues and I don't have unexpected exceptions and", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 323, "seek": 123112, "start": 1236.9199999999998, "end": 1237.9199999999998, "text": " things like that.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 324, "seek": 123112, "start": 1237.9199999999998, "end": 1243.7399999999998, "text": " So anyway, I think that's like some important history that like a lot of these decisions", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 325, "seek": 123112, "start": 1243.7399999999998, "end": 1249.4799999999998, "text": " are learning from some of the lessons of like earlier versions of Java, which as you said,", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 326, "seek": 123112, "start": 1249.4799999999998, "end": 1252.4399999999998, "text": " like Java itself is learning from some of these things too.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 327, "seek": 123112, "start": 1252.4399999999998, "end": 1253.4399999999998, "text": " Okay.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 328, "seek": 123112, "start": 1253.4399999999998, "end": 1255.3999999999999, "text": " So that's my rant about that.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 329, "seek": 123112, "start": 1255.3999999999999, "end": 1258.8799999999999, "text": " But so you wanted to talk about any types.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 330, "seek": 123112, "start": 1258.8799999999999, "end": 1259.8799999999999, "text": " Sure.", "tokens": [50364, 286, 500, 380, 362, 10225, 8186, 484, 295, 29905, 2663, 293, 286, 500, 380, 362, 13106, 22847, 293, 50654, 50654, 721, 411, 300, 13, 50704, 50704, 407, 4033, 11, 286, 519, 300, 311, 411, 512, 1021, 2503, 300, 411, 257, 688, 295, 613, 5327, 50995, 50995, 366, 2539, 490, 512, 295, 264, 8820, 295, 411, 3071, 9606, 295, 10745, 11, 597, 382, 291, 848, 11, 51282, 51282, 411, 10745, 2564, 307, 2539, 490, 512, 295, 613, 721, 886, 13, 51430, 51430, 1033, 13, 51480, 51480, 407, 300, 311, 452, 45332, 466, 300, 13, 51578, 51578, 583, 370, 291, 1415, 281, 751, 466, 604, 3467, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.13036276386902396, "compression_ratio": 1.7736625514403292, "no_caption_prob": 1.3845592548022978e-05}, {"id": 331, "seek": 125988, "start": 1259.88, "end": 1263.64, "text": " So in JavaScript, nothing is typed.", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 332, "seek": 125988, "start": 1263.64, "end": 1264.64, "text": " Right.", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 333, "seek": 125988, "start": 1264.64, "end": 1270.88, "text": " So the thing that comes closest to that is the any type where the types basically has", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 334, "seek": 125988, "start": 1270.88, "end": 1275.0400000000002, "text": " no information about what the type can be.", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 335, "seek": 125988, "start": 1275.0400000000002, "end": 1279.64, "text": " And it uses that for things where it does not have any type definitions.", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 336, "seek": 125988, "start": 1279.64, "end": 1284.72, "text": " So something like packages from NPM, sometimes it doesn't have any information.", "tokens": [50364, 407, 294, 15778, 11, 1825, 307, 33941, 13, 50552, 50552, 1779, 13, 50602, 50602, 407, 264, 551, 300, 1487, 13699, 281, 300, 307, 264, 604, 2010, 689, 264, 3467, 1936, 575, 50914, 50914, 572, 1589, 466, 437, 264, 2010, 393, 312, 13, 51122, 51122, 400, 309, 4960, 300, 337, 721, 689, 309, 775, 406, 362, 604, 2010, 21988, 13, 51352, 51352, 407, 746, 411, 17401, 490, 426, 18819, 11, 2171, 309, 1177, 380, 362, 604, 1589, 13, 51606, 51606], "temperature": 0.0, "avg_logprob": -0.1762900882297092, "compression_ratio": 1.6615384615384616, "no_caption_prob": 2.5866731448331848e-05}, {"id": 337, "seek": 128472, "start": 1284.72, "end": 1290.44, "text": " So it says everything's any arguments or any return types or any, everything's any.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 338, "seek": 128472, "start": 1290.44, "end": 1293.44, "text": " And that is something that is contagious.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 339, "seek": 128472, "start": 1293.44, "end": 1294.44, "text": " Right?", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 340, "seek": 128472, "start": 1294.44, "end": 1295.44, "text": " Exactly.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 341, "seek": 128472, "start": 1295.44, "end": 1296.44, "text": " Yes.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 342, "seek": 128472, "start": 1296.44, "end": 1302.4, "text": " So if you have something that is that is any somewhere and then you do stuff on it, well,", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 343, "seek": 128472, "start": 1302.4, "end": 1303.4, "text": " that also becomes any.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 344, "seek": 128472, "start": 1303.4, "end": 1309.68, "text": " I'm not entirely sure about how contagious it is and how that contagion works, but that's", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 345, "seek": 128472, "start": 1309.68, "end": 1311.16, "text": " how it feels at least.", "tokens": [50364, 407, 309, 1619, 1203, 311, 604, 12869, 420, 604, 2736, 3467, 420, 604, 11, 1203, 311, 604, 13, 50650, 50650, 400, 300, 307, 746, 300, 307, 40666, 13, 50800, 50800, 1779, 30, 50850, 50850, 7587, 13, 50900, 50900, 1079, 13, 50950, 50950, 407, 498, 291, 362, 746, 300, 307, 300, 307, 604, 4079, 293, 550, 291, 360, 1507, 322, 309, 11, 731, 11, 51248, 51248, 300, 611, 3643, 604, 13, 51298, 51298, 286, 478, 406, 7696, 988, 466, 577, 40666, 309, 307, 293, 577, 300, 28525, 313, 1985, 11, 457, 300, 311, 51612, 51612, 577, 309, 3417, 412, 1935, 13, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.224882015815148, "compression_ratio": 1.7222222222222223, "no_caption_prob": 2.1111143723828718e-05}, {"id": 346, "seek": 131116, "start": 1311.16, "end": 1317.96, "text": " Well, I mean, it's, I think it's pretty much exactly the same as if you used debug.to do", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 347, "seek": 131116, "start": 1317.96, "end": 1319.3600000000001, "text": " in Elm.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 348, "seek": 131116, "start": 1319.3600000000001, "end": 1325.0400000000002, "text": " You know, the obvious difference being one debug.to do will never actually run.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 349, "seek": 131116, "start": 1325.0400000000002, "end": 1327.52, "text": " It'll just halt the program.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 350, "seek": 131116, "start": 1327.52, "end": 1332.16, "text": " And two, you can't compile it with the optimize flag in Elm.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 351, "seek": 131116, "start": 1332.16, "end": 1333.16, "text": " Right.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 352, "seek": 131116, "start": 1333.16, "end": 1334.16, "text": " So yeah.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 353, "seek": 131116, "start": 1334.16, "end": 1335.16, "text": " In production mode.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 354, "seek": 131116, "start": 1335.16, "end": 1336.16, "text": " Right.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 355, "seek": 131116, "start": 1336.16, "end": 1337.16, "text": " But otherwise, I think it's the same.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 356, "seek": 131116, "start": 1337.16, "end": 1341.1200000000001, "text": " There may be some slight differences, but effectively like the any type.", "tokens": [50364, 1042, 11, 286, 914, 11, 309, 311, 11, 286, 519, 309, 311, 1238, 709, 2293, 264, 912, 382, 498, 291, 1143, 24083, 13, 1353, 360, 50704, 50704, 294, 2699, 76, 13, 50774, 50774, 509, 458, 11, 264, 6322, 2649, 885, 472, 24083, 13, 1353, 360, 486, 1128, 767, 1190, 13, 51058, 51058, 467, 603, 445, 12479, 264, 1461, 13, 51182, 51182, 400, 732, 11, 291, 393, 380, 31413, 309, 365, 264, 19719, 7166, 294, 2699, 76, 13, 51414, 51414, 1779, 13, 51464, 51464, 407, 1338, 13, 51514, 51514, 682, 4265, 4391, 13, 51564, 51564, 1779, 13, 51614, 51614, 583, 5911, 11, 286, 519, 309, 311, 264, 912, 13, 51664, 51664, 821, 815, 312, 512, 4036, 7300, 11, 457, 8659, 411, 264, 604, 2010, 13, 51862, 51862], "temperature": 0.0, "avg_logprob": -0.21504388749599457, "compression_ratio": 1.6216216216216217, "no_caption_prob": 1.8631171769811772e-05}, {"id": 357, "seek": 134112, "start": 1341.12, "end": 1345.6399999999999, "text": " I mean, in Elm, it's the same thing where it just says this could literally be anything.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 358, "seek": 134112, "start": 1345.6399999999999, "end": 1346.6399999999999, "text": " I don't know.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 359, "seek": 134112, "start": 1346.6399999999999, "end": 1349.36, "text": " Like, oh, you mean anything like it could be a function that you could call.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 360, "seek": 134112, "start": 1349.36, "end": 1353.52, "text": " It could be a function that takes this thing and turns it into this.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 361, "seek": 134112, "start": 1353.52, "end": 1354.52, "text": " It could be a string.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 362, "seek": 134112, "start": 1354.52, "end": 1355.52, "text": " Yeah, it could be anything.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 363, "seek": 134112, "start": 1355.52, "end": 1357.6, "text": " So you could like call it as a function.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 364, "seek": 134112, "start": 1357.6, "end": 1359.8799999999999, "text": " You could pipe it to something.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 365, "seek": 134112, "start": 1359.8799999999999, "end": 1362.32, "text": " You could, it could be an opaque type.", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 366, "seek": 134112, "start": 1362.32, "end": 1368.6, "text": " It could be, it could be never, it could be anything, even if that's not even possible,", "tokens": [50364, 286, 914, 11, 294, 2699, 76, 11, 309, 311, 264, 912, 551, 689, 309, 445, 1619, 341, 727, 3736, 312, 1340, 13, 50590, 50590, 286, 500, 380, 458, 13, 50640, 50640, 1743, 11, 1954, 11, 291, 914, 1340, 411, 309, 727, 312, 257, 2445, 300, 291, 727, 818, 13, 50776, 50776, 467, 727, 312, 257, 2445, 300, 2516, 341, 551, 293, 4523, 309, 666, 341, 13, 50984, 50984, 467, 727, 312, 257, 6798, 13, 51034, 51034, 865, 11, 309, 727, 312, 1340, 13, 51084, 51084, 407, 291, 727, 411, 818, 309, 382, 257, 2445, 13, 51188, 51188, 509, 727, 11240, 309, 281, 746, 13, 51302, 51302, 509, 727, 11, 309, 727, 312, 364, 42687, 2010, 13, 51424, 51424, 467, 727, 312, 11, 309, 727, 312, 1128, 11, 309, 727, 312, 1340, 11, 754, 498, 300, 311, 406, 754, 1944, 11, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.1156787739859687, "compression_ratio": 2.119148936170213, "no_caption_prob": 0.00015355304640252143}, {"id": 367, "seek": 136860, "start": 1368.6, "end": 1372.56, "text": " but the Elm type system will just say, okay, well, I guess this could be any value.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 368, "seek": 136860, "start": 1372.56, "end": 1373.8, "text": " So it fits anywhere.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 369, "seek": 136860, "start": 1373.8, "end": 1374.8, "text": " Yeah.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 370, "seek": 136860, "start": 1374.8, "end": 1380.9199999999998, "text": " And then it will only complain if it tries to infer something based on it and finds out,", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 371, "seek": 136860, "start": 1380.9199999999998, "end": 1386.6399999999999, "text": " oh, okay, well this now needs to be a string because you use it where it's, where you need", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 372, "seek": 136860, "start": 1386.6399999999999, "end": 1387.6399999999999, "text": " a string.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 373, "seek": 136860, "start": 1387.6399999999999, "end": 1388.6399999999999, "text": " Exactly.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 374, "seek": 136860, "start": 1388.6399999999999, "end": 1392.9199999999998, "text": " And then it finds that some other place where the value also needs to be an integer or something.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 375, "seek": 136860, "start": 1392.9199999999998, "end": 1393.9199999999998, "text": " Exactly.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 376, "seek": 136860, "start": 1393.9199999999998, "end": 1395.4399999999998, "text": " And those are two contradictory values.", "tokens": [50364, 457, 264, 2699, 76, 2010, 1185, 486, 445, 584, 11, 1392, 11, 731, 11, 286, 2041, 341, 727, 312, 604, 2158, 13, 50562, 50562, 407, 309, 9001, 4992, 13, 50624, 50624, 865, 13, 50674, 50674, 400, 550, 309, 486, 787, 11024, 498, 309, 9898, 281, 13596, 746, 2361, 322, 309, 293, 10704, 484, 11, 50980, 50980, 1954, 11, 1392, 11, 731, 341, 586, 2203, 281, 312, 257, 6798, 570, 291, 764, 309, 689, 309, 311, 11, 689, 291, 643, 51266, 51266, 257, 6798, 13, 51316, 51316, 7587, 13, 51366, 51366, 400, 550, 309, 10704, 300, 512, 661, 1081, 689, 264, 2158, 611, 2203, 281, 312, 364, 24922, 420, 746, 13, 51580, 51580, 7587, 13, 51630, 51630, 400, 729, 366, 732, 49555, 4190, 13, 51706, 51706], "temperature": 0.0, "avg_logprob": -0.17295843409741019, "compression_ratio": 1.8023715415019763, "no_caption_prob": 1.473879638069775e-05}, {"id": 377, "seek": 139544, "start": 1395.44, "end": 1401.04, "text": " So you use an any type in two places that are contradictory and the Elm type system", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 378, "seek": 139544, "start": 1401.04, "end": 1405.56, "text": " will say, wait a minute, like, okay, I know, I know this could be anything, but it can't", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 379, "seek": 139544, "start": 1405.56, "end": 1407.8400000000001, "text": " be any two things at once.", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 380, "seek": 139544, "start": 1407.8400000000001, "end": 1409.96, "text": " And therefore something's wrong here.", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 381, "seek": 139544, "start": 1409.96, "end": 1416.4, "text": " So that is for Elm where, yeah, we do have any, but only for development mode, just to", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 382, "seek": 139544, "start": 1416.4, "end": 1420.56, "text": " help us work on something before it gets sent to production.", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 383, "seek": 139544, "start": 1420.56, "end": 1421.72, "text": " But what about TypeScript?", "tokens": [50364, 407, 291, 764, 364, 604, 2010, 294, 732, 3190, 300, 366, 49555, 293, 264, 2699, 76, 2010, 1185, 50644, 50644, 486, 584, 11, 1699, 257, 3456, 11, 411, 11, 1392, 11, 286, 458, 11, 286, 458, 341, 727, 312, 1340, 11, 457, 309, 393, 380, 50870, 50870, 312, 604, 732, 721, 412, 1564, 13, 50984, 50984, 400, 4412, 746, 311, 2085, 510, 13, 51090, 51090, 407, 300, 307, 337, 2699, 76, 689, 11, 1338, 11, 321, 360, 362, 604, 11, 457, 787, 337, 3250, 4391, 11, 445, 281, 51412, 51412, 854, 505, 589, 322, 746, 949, 309, 2170, 2279, 281, 4265, 13, 51620, 51620, 583, 437, 466, 15576, 14237, 30, 51678, 51678], "temperature": 0.0, "avg_logprob": -0.11629521219353926, "compression_ratio": 1.615686274509804, "no_caption_prob": 7.527936759288423e-06}, {"id": 384, "seek": 142172, "start": 1421.72, "end": 1427.44, "text": " So how does it handle those conflicts of inference?", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 385, "seek": 142172, "start": 1427.44, "end": 1431.52, "text": " Let me do a quick example here in the playground and see what happens.", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 386, "seek": 142172, "start": 1431.52, "end": 1432.96, "text": " I'm curious too now.", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 387, "seek": 142172, "start": 1432.96, "end": 1439.3600000000001, "text": " From what I can see in my playground, it doesn't seem to be doing that kind of inference.", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 388, "seek": 142172, "start": 1439.3600000000001, "end": 1440.72, "text": " I'm seeing the same thing.", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 389, "seek": 142172, "start": 1440.72, "end": 1446.84, "text": " So I did an example where I said, let a be any type.", "tokens": [50364, 407, 577, 775, 309, 4813, 729, 19807, 295, 38253, 30, 50650, 50650, 961, 385, 360, 257, 1702, 1365, 510, 294, 264, 24646, 293, 536, 437, 2314, 13, 50854, 50854, 286, 478, 6369, 886, 586, 13, 50926, 50926, 3358, 437, 286, 393, 536, 294, 452, 24646, 11, 309, 1177, 380, 1643, 281, 312, 884, 300, 733, 295, 38253, 13, 51246, 51246, 286, 478, 2577, 264, 912, 551, 13, 51314, 51314, 407, 286, 630, 364, 1365, 689, 286, 848, 11, 718, 257, 312, 604, 2010, 13, 51620, 51620], "temperature": 0.0, "avg_logprob": -0.13088290257887406, "compression_ratio": 1.5888324873096447, "no_caption_prob": 1.8448134824211593e-06}, {"id": 390, "seek": 144684, "start": 1446.84, "end": 1452.08, "text": " And then I defined a function that takes a Boolean and a number.", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 391, "seek": 144684, "start": 1452.08, "end": 1456.8, "text": " And I called that function with a and a.", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 392, "seek": 144684, "start": 1456.8, "end": 1459.24, "text": " And it says, yeah, that's fine.", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 393, "seek": 144684, "start": 1459.24, "end": 1462.52, "text": " So I think any does behave differently.", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 394, "seek": 144684, "start": 1462.52, "end": 1468.6799999999998, "text": " Well, I'll try to find some like posts on exactly how that type resolution for any works", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 395, "seek": 144684, "start": 1468.6799999999998, "end": 1470.1599999999999, "text": " and try to link to it.", "tokens": [50364, 400, 550, 286, 7642, 257, 2445, 300, 2516, 257, 23351, 28499, 293, 257, 1230, 13, 50626, 50626, 400, 286, 1219, 300, 2445, 365, 257, 293, 257, 13, 50862, 50862, 400, 309, 1619, 11, 1338, 11, 300, 311, 2489, 13, 50984, 50984, 407, 286, 519, 604, 775, 15158, 7614, 13, 51148, 51148, 1042, 11, 286, 603, 853, 281, 915, 512, 411, 12300, 322, 2293, 577, 300, 2010, 8669, 337, 604, 1985, 51456, 51456, 293, 853, 281, 2113, 281, 309, 13, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.13925370825342384, "compression_ratio": 1.513089005235602, "no_caption_prob": 2.6273419280187227e-05}, {"id": 396, "seek": 147016, "start": 1470.16, "end": 1479.3600000000001, "text": " But yeah, it appears that any is more permissive than an unbound type variable in Elm that", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 397, "seek": 147016, "start": 1479.3600000000001, "end": 1482.72, "text": " you can get with debug.to do that just says this could be anything.", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 398, "seek": 147016, "start": 1482.72, "end": 1484.88, "text": " So they're not exactly equivalent, it looks like.", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 399, "seek": 147016, "start": 1484.88, "end": 1486.8000000000002, "text": " That's very interesting.", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 400, "seek": 147016, "start": 1486.8000000000002, "end": 1492.48, "text": " Or rather the compiler does not do the same kind of checks.", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 401, "seek": 147016, "start": 1492.48, "end": 1496.64, "text": " Maybe at the moment, because every time I hear about a new TypeScript version, it seems", "tokens": [50364, 583, 1338, 11, 309, 7038, 300, 604, 307, 544, 4784, 891, 488, 813, 364, 517, 18767, 2010, 7006, 294, 2699, 76, 300, 50824, 50824, 291, 393, 483, 365, 24083, 13, 1353, 360, 300, 445, 1619, 341, 727, 312, 1340, 13, 50992, 50992, 407, 436, 434, 406, 2293, 10344, 11, 309, 1542, 411, 13, 51100, 51100, 663, 311, 588, 1880, 13, 51196, 51196, 1610, 2831, 264, 31958, 775, 406, 360, 264, 912, 733, 295, 13834, 13, 51480, 51480, 2704, 412, 264, 1623, 11, 570, 633, 565, 286, 1568, 466, 257, 777, 15576, 14237, 3037, 11, 309, 2544, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.1411604118347168, "compression_ratio": 1.5301204819277108, "no_caption_prob": 3.480764644336887e-05}, {"id": 402, "seek": 149664, "start": 1496.64, "end": 1500.1200000000001, "text": " to do more and more checks, more powerful checks.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 403, "seek": 149664, "start": 1500.1200000000001, "end": 1501.92, "text": " So maybe at some point.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 404, "seek": 149664, "start": 1501.92, "end": 1503.68, "text": " Yeah, very interesting.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 405, "seek": 149664, "start": 1503.68, "end": 1507.2800000000002, "text": " Okay, so a couple things to mention on the topic of any.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 406, "seek": 149664, "start": 1507.2800000000002, "end": 1510.16, "text": " One is there's a type called unknown in TypeScript.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 407, "seek": 149664, "start": 1510.16, "end": 1513.9, "text": " And unknown is very different from any.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 408, "seek": 149664, "start": 1513.9, "end": 1514.9, "text": " In some ways, it's similar.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 409, "seek": 149664, "start": 1514.9, "end": 1516.8400000000001, "text": " In some ways, it's different.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 410, "seek": 149664, "start": 1516.8400000000001, "end": 1521.72, "text": " Unknown is saying you're going to have to prove what this type is before you can use", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 411, "seek": 149664, "start": 1521.72, "end": 1522.72, "text": " it.", "tokens": [50364, 281, 360, 544, 293, 544, 13834, 11, 544, 4005, 13834, 13, 50538, 50538, 407, 1310, 412, 512, 935, 13, 50628, 50628, 865, 11, 588, 1880, 13, 50716, 50716, 1033, 11, 370, 257, 1916, 721, 281, 2152, 322, 264, 4829, 295, 604, 13, 50896, 50896, 1485, 307, 456, 311, 257, 2010, 1219, 9841, 294, 15576, 14237, 13, 51040, 51040, 400, 9841, 307, 588, 819, 490, 604, 13, 51227, 51227, 682, 512, 2098, 11, 309, 311, 2531, 13, 51277, 51277, 682, 512, 2098, 11, 309, 311, 819, 13, 51374, 51374, 32766, 307, 1566, 291, 434, 516, 281, 362, 281, 7081, 437, 341, 2010, 307, 949, 291, 393, 764, 51618, 51618, 309, 13, 51668, 51668], "temperature": 0.0, "avg_logprob": -0.1633225825794956, "compression_ratio": 1.6582278481012658, "no_caption_prob": 9.08028960111551e-06}, {"id": 412, "seek": 152272, "start": 1522.72, "end": 1530.04, "text": " So for example, so I think one of the most important things to know as a TypeScript developer,", "tokens": [50364, 407, 337, 1365, 11, 370, 286, 519, 472, 295, 264, 881, 1021, 721, 281, 458, 382, 257, 15576, 14237, 10754, 11, 50730, 50730, 411, 1580, 567, 311, 3579, 15576, 14237, 3089, 11, 307, 300, 604, 307, 406, 445, 11, 291, 458, 11, 8660, 51090, 51090, 291, 20803, 764, 604, 13, 51231, 51231, 2639, 2314, 439, 670, 264, 1081, 11, 881, 39225, 2276, 293, 881, 12719, 294, 31828, 13, 2181, 405, 13, 51535, 51535, 1133, 291, 360, 31828, 13, 2181, 405, 11, 309, 11247, 257, 2010, 604, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1264995847429548, "compression_ratio": 1.5509259259259258, "no_caption_prob": 1.8924369214801118e-05}, {"id": 413, "seek": 152272, "start": 1530.04, "end": 1537.24, "text": " like someone who's writing TypeScript code, is that any is not just, you know, wherever", "tokens": [50364, 407, 337, 1365, 11, 370, 286, 519, 472, 295, 264, 881, 1021, 721, 281, 458, 382, 257, 15576, 14237, 10754, 11, 50730, 50730, 411, 1580, 567, 311, 3579, 15576, 14237, 3089, 11, 307, 300, 604, 307, 406, 445, 11, 291, 458, 11, 8660, 51090, 51090, 291, 20803, 764, 604, 13, 51231, 51231, 2639, 2314, 439, 670, 264, 1081, 11, 881, 39225, 2276, 293, 881, 12719, 294, 31828, 13, 2181, 405, 13, 51535, 51535, 1133, 291, 360, 31828, 13, 2181, 405, 11, 309, 11247, 257, 2010, 604, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1264995847429548, "compression_ratio": 1.5509259259259258, "no_caption_prob": 1.8924369214801118e-05}, {"id": 414, "seek": 152272, "start": 1537.24, "end": 1540.06, "text": " you explicitly use any.", "tokens": [50364, 407, 337, 1365, 11, 370, 286, 519, 472, 295, 264, 881, 1021, 721, 281, 458, 382, 257, 15576, 14237, 10754, 11, 50730, 50730, 411, 1580, 567, 311, 3579, 15576, 14237, 3089, 11, 307, 300, 604, 307, 406, 445, 11, 291, 458, 11, 8660, 51090, 51090, 291, 20803, 764, 604, 13, 51231, 51231, 2639, 2314, 439, 670, 264, 1081, 11, 881, 39225, 2276, 293, 881, 12719, 294, 31828, 13, 2181, 405, 13, 51535, 51535, 1133, 291, 360, 31828, 13, 2181, 405, 11, 309, 11247, 257, 2010, 604, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1264995847429548, "compression_ratio": 1.5509259259259258, "no_caption_prob": 1.8924369214801118e-05}, {"id": 415, "seek": 152272, "start": 1540.06, "end": 1546.14, "text": " Any happens all over the place, most prominently and most commonly in JSON.parse.", "tokens": [50364, 407, 337, 1365, 11, 370, 286, 519, 472, 295, 264, 881, 1021, 721, 281, 458, 382, 257, 15576, 14237, 10754, 11, 50730, 50730, 411, 1580, 567, 311, 3579, 15576, 14237, 3089, 11, 307, 300, 604, 307, 406, 445, 11, 291, 458, 11, 8660, 51090, 51090, 291, 20803, 764, 604, 13, 51231, 51231, 2639, 2314, 439, 670, 264, 1081, 11, 881, 39225, 2276, 293, 881, 12719, 294, 31828, 13, 2181, 405, 13, 51535, 51535, 1133, 291, 360, 31828, 13, 2181, 405, 11, 309, 11247, 257, 2010, 604, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1264995847429548, "compression_ratio": 1.5509259259259258, "no_caption_prob": 1.8924369214801118e-05}, {"id": 416, "seek": 152272, "start": 1546.14, "end": 1549.8, "text": " When you do JSON.parse, it returns a type any.", "tokens": [50364, 407, 337, 1365, 11, 370, 286, 519, 472, 295, 264, 881, 1021, 721, 281, 458, 382, 257, 15576, 14237, 10754, 11, 50730, 50730, 411, 1580, 567, 311, 3579, 15576, 14237, 3089, 11, 307, 300, 604, 307, 406, 445, 11, 291, 458, 11, 8660, 51090, 51090, 291, 20803, 764, 604, 13, 51231, 51231, 2639, 2314, 439, 670, 264, 1081, 11, 881, 39225, 2276, 293, 881, 12719, 294, 31828, 13, 2181, 405, 13, 51535, 51535, 1133, 291, 360, 31828, 13, 2181, 405, 11, 309, 11247, 257, 2010, 604, 13, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1264995847429548, "compression_ratio": 1.5509259259259258, "no_caption_prob": 1.8924369214801118e-05}, {"id": 417, "seek": 154980, "start": 1549.8, "end": 1558.36, "text": " In fact, that's not even that's not even accurate, because JSON.parse will never return a function.", "tokens": [50364, 682, 1186, 11, 300, 311, 406, 754, 300, 311, 406, 754, 8559, 11, 570, 31828, 13, 2181, 405, 486, 1128, 2736, 257, 2445, 13, 50792, 50792, 583, 257, 2445, 8198, 294, 300, 992, 295, 3467, 604, 13, 51040, 51040, 407, 300, 311, 406, 665, 13, 51116, 51116, 407, 309, 311, 406, 754, 885, 2685, 466, 309, 727, 312, 604, 31828, 2010, 6798, 11, 748, 401, 11, 1230, 11, 10225, 51512, 51512, 295, 729, 721, 11, 2657, 295, 729, 721, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1430602300734747, "compression_ratio": 1.6483516483516483, "no_caption_prob": 3.966911208408419e-06}, {"id": 418, "seek": 154980, "start": 1558.36, "end": 1563.32, "text": " But a function exists in that set of types any.", "tokens": [50364, 682, 1186, 11, 300, 311, 406, 754, 300, 311, 406, 754, 8559, 11, 570, 31828, 13, 2181, 405, 486, 1128, 2736, 257, 2445, 13, 50792, 50792, 583, 257, 2445, 8198, 294, 300, 992, 295, 3467, 604, 13, 51040, 51040, 407, 300, 311, 406, 665, 13, 51116, 51116, 407, 309, 311, 406, 754, 885, 2685, 466, 309, 727, 312, 604, 31828, 2010, 6798, 11, 748, 401, 11, 1230, 11, 10225, 51512, 51512, 295, 729, 721, 11, 2657, 295, 729, 721, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1430602300734747, "compression_ratio": 1.6483516483516483, "no_caption_prob": 3.966911208408419e-06}, {"id": 419, "seek": 154980, "start": 1563.32, "end": 1564.84, "text": " So that's not good.", "tokens": [50364, 682, 1186, 11, 300, 311, 406, 754, 300, 311, 406, 754, 8559, 11, 570, 31828, 13, 2181, 405, 486, 1128, 2736, 257, 2445, 13, 50792, 50792, 583, 257, 2445, 8198, 294, 300, 992, 295, 3467, 604, 13, 51040, 51040, 407, 300, 311, 406, 665, 13, 51116, 51116, 407, 309, 311, 406, 754, 885, 2685, 466, 309, 727, 312, 604, 31828, 2010, 6798, 11, 748, 401, 11, 1230, 11, 10225, 51512, 51512, 295, 729, 721, 11, 2657, 295, 729, 721, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1430602300734747, "compression_ratio": 1.6483516483516483, "no_caption_prob": 3.966911208408419e-06}, {"id": 420, "seek": 154980, "start": 1564.84, "end": 1572.76, "text": " So it's not even being specific about it could be any JSON type string, bool, number, array", "tokens": [50364, 682, 1186, 11, 300, 311, 406, 754, 300, 311, 406, 754, 8559, 11, 570, 31828, 13, 2181, 405, 486, 1128, 2736, 257, 2445, 13, 50792, 50792, 583, 257, 2445, 8198, 294, 300, 992, 295, 3467, 604, 13, 51040, 51040, 407, 300, 311, 406, 665, 13, 51116, 51116, 407, 309, 311, 406, 754, 885, 2685, 466, 309, 727, 312, 604, 31828, 2010, 6798, 11, 748, 401, 11, 1230, 11, 10225, 51512, 51512, 295, 729, 721, 11, 2657, 295, 729, 721, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1430602300734747, "compression_ratio": 1.6483516483516483, "no_caption_prob": 3.966911208408419e-06}, {"id": 421, "seek": 154980, "start": 1572.76, "end": 1578.36, "text": " of those things, object of those things.", "tokens": [50364, 682, 1186, 11, 300, 311, 406, 754, 300, 311, 406, 754, 8559, 11, 570, 31828, 13, 2181, 405, 486, 1128, 2736, 257, 2445, 13, 50792, 50792, 583, 257, 2445, 8198, 294, 300, 992, 295, 3467, 604, 13, 51040, 51040, 407, 300, 311, 406, 665, 13, 51116, 51116, 407, 309, 311, 406, 754, 885, 2685, 466, 309, 727, 312, 604, 31828, 2010, 6798, 11, 748, 401, 11, 1230, 11, 10225, 51512, 51512, 295, 729, 721, 11, 2657, 295, 729, 721, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1430602300734747, "compression_ratio": 1.6483516483516483, "no_caption_prob": 3.966911208408419e-06}, {"id": 422, "seek": 157836, "start": 1578.36, "end": 1581.56, "text": " It's just yeah, it could be anything it could be a could be a function.", "tokens": [50364, 467, 311, 445, 1338, 11, 309, 727, 312, 1340, 309, 727, 312, 257, 727, 312, 257, 2445, 13, 50524, 50524, 407, 562, 291, 360, 31828, 13, 2181, 405, 11, 312, 3650, 300, 300, 31472, 257, 2010, 293, 2693, 554, 2010, 11, 382, 291, 50924, 50924, 848, 11, 300, 307, 40666, 3710, 428, 3861, 13, 51094, 51094, 407, 370, 291, 458, 11, 456, 366, 3873, 411, 39839, 8240, 37645, 11, 293, 661, 2531, 3873, 300, 854, 360, 257, 51470, 51470, 5102, 2531, 281, 264, 31828, 979, 8616, 5102, 294, 2699, 76, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16038604535554585, "compression_ratio": 1.6511627906976745, "no_caption_prob": 1.0615949577186257e-05}, {"id": 423, "seek": 157836, "start": 1581.56, "end": 1589.56, "text": " So when you do JSON.parse, be aware that that introduces a type and unsound type, as you", "tokens": [50364, 467, 311, 445, 1338, 11, 309, 727, 312, 1340, 309, 727, 312, 257, 727, 312, 257, 2445, 13, 50524, 50524, 407, 562, 291, 360, 31828, 13, 2181, 405, 11, 312, 3650, 300, 300, 31472, 257, 2010, 293, 2693, 554, 2010, 11, 382, 291, 50924, 50924, 848, 11, 300, 307, 40666, 3710, 428, 3861, 13, 51094, 51094, 407, 370, 291, 458, 11, 456, 366, 3873, 411, 39839, 8240, 37645, 11, 293, 661, 2531, 3873, 300, 854, 360, 257, 51470, 51470, 5102, 2531, 281, 264, 31828, 979, 8616, 5102, 294, 2699, 76, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16038604535554585, "compression_ratio": 1.6511627906976745, "no_caption_prob": 1.0615949577186257e-05}, {"id": 424, "seek": 157836, "start": 1589.56, "end": 1592.9599999999998, "text": " said, that is contagious throughout your application.", "tokens": [50364, 467, 311, 445, 1338, 11, 309, 727, 312, 1340, 309, 727, 312, 257, 727, 312, 257, 2445, 13, 50524, 50524, 407, 562, 291, 360, 31828, 13, 2181, 405, 11, 312, 3650, 300, 300, 31472, 257, 2010, 293, 2693, 554, 2010, 11, 382, 291, 50924, 50924, 848, 11, 300, 307, 40666, 3710, 428, 3861, 13, 51094, 51094, 407, 370, 291, 458, 11, 456, 366, 3873, 411, 39839, 8240, 37645, 11, 293, 661, 2531, 3873, 300, 854, 360, 257, 51470, 51470, 5102, 2531, 281, 264, 31828, 979, 8616, 5102, 294, 2699, 76, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16038604535554585, "compression_ratio": 1.6511627906976745, "no_caption_prob": 1.0615949577186257e-05}, {"id": 425, "seek": 157836, "start": 1592.9599999999998, "end": 1600.4799999999998, "text": " So so you know, there are tools like IO dash TS, and other similar tools that help do a", "tokens": [50364, 467, 311, 445, 1338, 11, 309, 727, 312, 1340, 309, 727, 312, 257, 727, 312, 257, 2445, 13, 50524, 50524, 407, 562, 291, 360, 31828, 13, 2181, 405, 11, 312, 3650, 300, 300, 31472, 257, 2010, 293, 2693, 554, 2010, 11, 382, 291, 50924, 50924, 848, 11, 300, 307, 40666, 3710, 428, 3861, 13, 51094, 51094, 407, 370, 291, 458, 11, 456, 366, 3873, 411, 39839, 8240, 37645, 11, 293, 661, 2531, 3873, 300, 854, 360, 257, 51470, 51470, 5102, 2531, 281, 264, 31828, 979, 8616, 5102, 294, 2699, 76, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16038604535554585, "compression_ratio": 1.6511627906976745, "no_caption_prob": 1.0615949577186257e-05}, {"id": 426, "seek": 157836, "start": 1600.4799999999998, "end": 1606.3999999999999, "text": " pattern similar to the JSON decoding pattern in Elm.", "tokens": [50364, 467, 311, 445, 1338, 11, 309, 727, 312, 1340, 309, 727, 312, 257, 727, 312, 257, 2445, 13, 50524, 50524, 407, 562, 291, 360, 31828, 13, 2181, 405, 11, 312, 3650, 300, 300, 31472, 257, 2010, 293, 2693, 554, 2010, 11, 382, 291, 50924, 50924, 848, 11, 300, 307, 40666, 3710, 428, 3861, 13, 51094, 51094, 407, 370, 291, 458, 11, 456, 366, 3873, 411, 39839, 8240, 37645, 11, 293, 661, 2531, 3873, 300, 854, 360, 257, 51470, 51470, 5102, 2531, 281, 264, 31828, 979, 8616, 5102, 294, 2699, 76, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.16038604535554585, "compression_ratio": 1.6511627906976745, "no_caption_prob": 1.0615949577186257e-05}, {"id": 427, "seek": 160640, "start": 1606.4, "end": 1609.4, "text": " But so unknown is a really useful type to be aware of.", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 428, "seek": 160640, "start": 1609.4, "end": 1615.3400000000001, "text": " But But it's very important to realize that many of the published like typings for for", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 429, "seek": 160640, "start": 1615.3400000000001, "end": 1620.94, "text": " core JavaScript functions like JSON.parse return in any type.", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 430, "seek": 160640, "start": 1620.94, "end": 1625.0, "text": " It's very common for NPM typings that are published.", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 431, "seek": 160640, "start": 1625.0, "end": 1630.14, "text": " So a lot of NPM libraries will either come with TypeScript types when you install them", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 432, "seek": 160640, "start": 1630.14, "end": 1635.76, "text": " with NPM install, or they will have a separate set of typings that you can install separately", "tokens": [50364, 583, 370, 9841, 307, 257, 534, 4420, 2010, 281, 312, 3650, 295, 13, 50514, 50514, 583, 583, 309, 311, 588, 1021, 281, 4325, 300, 867, 295, 264, 6572, 411, 2125, 1109, 337, 337, 50811, 50811, 4965, 15778, 6828, 411, 31828, 13, 2181, 405, 2736, 294, 604, 2010, 13, 51091, 51091, 467, 311, 588, 2689, 337, 426, 18819, 2125, 1109, 300, 366, 6572, 13, 51294, 51294, 407, 257, 688, 295, 426, 18819, 15148, 486, 2139, 808, 365, 15576, 14237, 3467, 562, 291, 3625, 552, 51551, 51551, 365, 426, 18819, 3625, 11, 420, 436, 486, 362, 257, 4994, 992, 295, 2125, 1109, 300, 291, 393, 3625, 14759, 51832, 51832], "temperature": 0.0, "avg_logprob": -0.10856382562479841, "compression_ratio": 1.6872586872586872, "no_caption_prob": 2.0145069356658496e-05}, {"id": 433, "seek": 163576, "start": 1635.76, "end": 1640.44, "text": " with this definitely typed package, I'll link to this thing where you can search for packages", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 434, "seek": 163576, "start": 1640.44, "end": 1642.56, "text": " that have this definitely typed thing.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 435, "seek": 163576, "start": 1642.56, "end": 1646.54, "text": " But it's very common for those to use any as well.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 436, "seek": 163576, "start": 1646.54, "end": 1653.04, "text": " And as far as I know, there's not really a way to warn you if you're pulling in an any.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 437, "seek": 163576, "start": 1653.04, "end": 1658.52, "text": " Yeah, I mean, there's no implicit any, but it doesn't help with that, right?", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 438, "seek": 163576, "start": 1658.52, "end": 1659.52, "text": " Exactly.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 439, "seek": 163576, "start": 1659.52, "end": 1660.52, "text": " Yeah.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 440, "seek": 163576, "start": 1660.52, "end": 1664.46, "text": " So no implicit any is like an option you can set in your TS config.json.", "tokens": [50364, 365, 341, 2138, 33941, 7372, 11, 286, 603, 2113, 281, 341, 551, 689, 291, 393, 3164, 337, 17401, 50598, 50598, 300, 362, 341, 2138, 33941, 551, 13, 50704, 50704, 583, 309, 311, 588, 2689, 337, 729, 281, 764, 604, 382, 731, 13, 50903, 50903, 400, 382, 1400, 382, 286, 458, 11, 456, 311, 406, 534, 257, 636, 281, 12286, 291, 498, 291, 434, 8407, 294, 364, 604, 13, 51228, 51228, 865, 11, 286, 914, 11, 456, 311, 572, 26947, 604, 11, 457, 309, 1177, 380, 854, 365, 300, 11, 558, 30, 51502, 51502, 7587, 13, 51552, 51552, 865, 13, 51602, 51602, 407, 572, 26947, 604, 307, 411, 364, 3614, 291, 393, 992, 294, 428, 37645, 6662, 13, 73, 3015, 13, 51799, 51799], "temperature": 0.0, "avg_logprob": -0.11573848416728358, "compression_ratio": 1.689922480620155, "no_caption_prob": 1.4510185792460106e-05}, {"id": 441, "seek": 166446, "start": 1664.46, "end": 1669.28, "text": " And you should definitely use the strictest possible settings for that, including strict", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 442, "seek": 166446, "start": 1669.28, "end": 1674.08, "text": " mode, but but you should be more strict than that I write about that a little bit in a", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 443, "seek": 166446, "start": 1674.08, "end": 1677.08, "text": " blog post that I'll share called TypeScript spline spots.", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 444, "seek": 166446, "start": 1677.08, "end": 1684.92, "text": " But yeah, so no, no implicit any will prevent you from saying like function greet takes", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 445, "seek": 166446, "start": 1684.92, "end": 1687.3600000000001, "text": " a name and then doing something with it.", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 446, "seek": 166446, "start": 1687.3600000000001, "end": 1694.02, "text": " And it'll say, Hey, since you didn't put a type annotation on the parameter name, I'm", "tokens": [50364, 400, 291, 820, 2138, 764, 264, 10910, 377, 1944, 6257, 337, 300, 11, 3009, 10910, 50605, 50605, 4391, 11, 457, 457, 291, 820, 312, 544, 10910, 813, 300, 286, 2464, 466, 300, 257, 707, 857, 294, 257, 50845, 50845, 6968, 2183, 300, 286, 603, 2073, 1219, 15576, 14237, 4732, 533, 10681, 13, 50995, 50995, 583, 1338, 11, 370, 572, 11, 572, 26947, 604, 486, 4871, 291, 490, 1566, 411, 2445, 12044, 2516, 51387, 51387, 257, 1315, 293, 550, 884, 746, 365, 309, 13, 51509, 51509, 400, 309, 603, 584, 11, 1911, 11, 1670, 291, 994, 380, 829, 257, 2010, 48654, 322, 264, 13075, 1315, 11, 286, 478, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.1446335251266892, "compression_ratio": 1.6173285198555956, "no_caption_prob": 9.080159543373156e-06}, {"id": 447, "seek": 169402, "start": 1694.02, "end": 1696.96, "text": " implicitly assuming that that's an any type.", "tokens": [50364, 26947, 356, 11926, 300, 300, 311, 364, 604, 2010, 13, 50511, 50511, 407, 264, 15576, 14237, 307, 1566, 498, 291, 576, 411, 281, 764, 364, 604, 2010, 456, 11, 597, 286, 445, 13596, 986, 50777, 50777, 300, 281, 312, 570, 291, 994, 380, 20803, 976, 257, 2010, 281, 264, 13075, 570, 988, 11, 291, 51029, 51029, 2387, 309, 411, 257, 6798, 11, 457, 291, 393, 2387, 257, 688, 295, 721, 411, 257, 6798, 291, 393, 294, 294, 51227, 51227, 15778, 11, 291, 393, 1588, 7186, 473, 364, 2657, 293, 257, 6798, 293, 300, 311, 2489, 13, 51469, 51469], "temperature": 0.0, "avg_logprob": -0.09666510581970215, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.3186874386738054e-05}, {"id": 448, "seek": 169402, "start": 1696.96, "end": 1702.28, "text": " So the TypeScript is saying if you would like to use an any type there, which I just inferred", "tokens": [50364, 26947, 356, 11926, 300, 300, 311, 364, 604, 2010, 13, 50511, 50511, 407, 264, 15576, 14237, 307, 1566, 498, 291, 576, 411, 281, 764, 364, 604, 2010, 456, 11, 597, 286, 445, 13596, 986, 50777, 50777, 300, 281, 312, 570, 291, 994, 380, 20803, 976, 257, 2010, 281, 264, 13075, 570, 988, 11, 291, 51029, 51029, 2387, 309, 411, 257, 6798, 11, 457, 291, 393, 2387, 257, 688, 295, 721, 411, 257, 6798, 291, 393, 294, 294, 51227, 51227, 15778, 11, 291, 393, 1588, 7186, 473, 364, 2657, 293, 257, 6798, 293, 300, 311, 2489, 13, 51469, 51469], "temperature": 0.0, "avg_logprob": -0.09666510581970215, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.3186874386738054e-05}, {"id": 449, "seek": 169402, "start": 1702.28, "end": 1707.32, "text": " that to be because you didn't explicitly give a type to the parameter because sure, you", "tokens": [50364, 26947, 356, 11926, 300, 300, 311, 364, 604, 2010, 13, 50511, 50511, 407, 264, 15576, 14237, 307, 1566, 498, 291, 576, 411, 281, 764, 364, 604, 2010, 456, 11, 597, 286, 445, 13596, 986, 50777, 50777, 300, 281, 312, 570, 291, 994, 380, 20803, 976, 257, 2010, 281, 264, 13075, 570, 988, 11, 291, 51029, 51029, 2387, 309, 411, 257, 6798, 11, 457, 291, 393, 2387, 257, 688, 295, 721, 411, 257, 6798, 291, 393, 294, 294, 51227, 51227, 15778, 11, 291, 393, 1588, 7186, 473, 364, 2657, 293, 257, 6798, 293, 300, 311, 2489, 13, 51469, 51469], "temperature": 0.0, "avg_logprob": -0.09666510581970215, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.3186874386738054e-05}, {"id": 450, "seek": 169402, "start": 1707.32, "end": 1711.28, "text": " treat it like a string, but you can treat a lot of things like a string you can in in", "tokens": [50364, 26947, 356, 11926, 300, 300, 311, 364, 604, 2010, 13, 50511, 50511, 407, 264, 15576, 14237, 307, 1566, 498, 291, 576, 411, 281, 764, 364, 604, 2010, 456, 11, 597, 286, 445, 13596, 986, 50777, 50777, 300, 281, 312, 570, 291, 994, 380, 20803, 976, 257, 2010, 281, 264, 13075, 570, 988, 11, 291, 51029, 51029, 2387, 309, 411, 257, 6798, 11, 457, 291, 393, 2387, 257, 688, 295, 721, 411, 257, 6798, 291, 393, 294, 294, 51227, 51227, 15778, 11, 291, 393, 1588, 7186, 473, 364, 2657, 293, 257, 6798, 293, 300, 311, 2489, 13, 51469, 51469], "temperature": 0.0, "avg_logprob": -0.09666510581970215, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.3186874386738054e-05}, {"id": 451, "seek": 169402, "start": 1711.28, "end": 1716.12, "text": " JavaScript, you can concatenate an object and a string and that's fine.", "tokens": [50364, 26947, 356, 11926, 300, 300, 311, 364, 604, 2010, 13, 50511, 50511, 407, 264, 15576, 14237, 307, 1566, 498, 291, 576, 411, 281, 764, 364, 604, 2010, 456, 11, 597, 286, 445, 13596, 986, 50777, 50777, 300, 281, 312, 570, 291, 994, 380, 20803, 976, 257, 2010, 281, 264, 13075, 570, 988, 11, 291, 51029, 51029, 2387, 309, 411, 257, 6798, 11, 457, 291, 393, 2387, 257, 688, 295, 721, 411, 257, 6798, 291, 393, 294, 294, 51227, 51227, 15778, 11, 291, 393, 1588, 7186, 473, 364, 2657, 293, 257, 6798, 293, 300, 311, 2489, 13, 51469, 51469], "temperature": 0.0, "avg_logprob": -0.09666510581970215, "compression_ratio": 1.7777777777777777, "no_caption_prob": 2.3186874386738054e-05}, {"id": 452, "seek": 171612, "start": 1716.12, "end": 1724.08, "text": " As far as JavaScript semantics go, you can use a you can use a number or an object in", "tokens": [50364, 1018, 1400, 382, 15778, 4361, 45298, 352, 11, 291, 393, 764, 257, 291, 393, 764, 257, 1230, 420, 364, 2657, 294, 50762, 50762, 257, 27708, 1520, 498, 2657, 498, 1230, 293, 729, 4361, 45298, 366, 2296, 15778, 4361, 45298, 11, 51150, 51150, 436, 434, 436, 434, 13181, 293, 436, 434, 2049, 2671, 10153, 13, 51312, 51312, 400, 300, 311, 472, 295, 264, 411, 11, 370, 341, 307, 364, 1021, 551, 281, 3637, 307, 300, 264, 1626, 1287, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.14236002792546779, "compression_ratio": 1.6984126984126984, "no_caption_prob": 1.6700734704500064e-05}, {"id": 453, "seek": 171612, "start": 1724.08, "end": 1731.84, "text": " a conditional check if object if number and those semantics are proper JavaScript semantics,", "tokens": [50364, 1018, 1400, 382, 15778, 4361, 45298, 352, 11, 291, 393, 764, 257, 291, 393, 764, 257, 1230, 420, 364, 2657, 294, 50762, 50762, 257, 27708, 1520, 498, 2657, 498, 1230, 293, 729, 4361, 45298, 366, 2296, 15778, 4361, 45298, 11, 51150, 51150, 436, 434, 436, 434, 13181, 293, 436, 434, 2049, 2671, 10153, 13, 51312, 51312, 400, 300, 311, 472, 295, 264, 411, 11, 370, 341, 307, 364, 1021, 551, 281, 3637, 307, 300, 264, 1626, 1287, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.14236002792546779, "compression_ratio": 1.6984126984126984, "no_caption_prob": 1.6700734704500064e-05}, {"id": 454, "seek": 171612, "start": 1731.84, "end": 1735.08, "text": " they're they're confusing and they're often foot guns.", "tokens": [50364, 1018, 1400, 382, 15778, 4361, 45298, 352, 11, 291, 393, 764, 257, 291, 393, 764, 257, 1230, 420, 364, 2657, 294, 50762, 50762, 257, 27708, 1520, 498, 2657, 498, 1230, 293, 729, 4361, 45298, 366, 2296, 15778, 4361, 45298, 11, 51150, 51150, 436, 434, 436, 434, 13181, 293, 436, 434, 2049, 2671, 10153, 13, 51312, 51312, 400, 300, 311, 472, 295, 264, 411, 11, 370, 341, 307, 364, 1021, 551, 281, 3637, 307, 300, 264, 1626, 1287, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.14236002792546779, "compression_ratio": 1.6984126984126984, "no_caption_prob": 1.6700734704500064e-05}, {"id": 455, "seek": 171612, "start": 1735.08, "end": 1740.1999999999998, "text": " And that's one of the like, so this is an important thing to note is that the soundness", "tokens": [50364, 1018, 1400, 382, 15778, 4361, 45298, 352, 11, 291, 393, 764, 257, 291, 393, 764, 257, 1230, 420, 364, 2657, 294, 50762, 50762, 257, 27708, 1520, 498, 2657, 498, 1230, 293, 729, 4361, 45298, 366, 2296, 15778, 4361, 45298, 11, 51150, 51150, 436, 434, 436, 434, 13181, 293, 436, 434, 2049, 2671, 10153, 13, 51312, 51312, 400, 300, 311, 472, 295, 264, 411, 11, 370, 341, 307, 364, 1021, 551, 281, 3637, 307, 300, 264, 1626, 1287, 51568, 51568], "temperature": 0.0, "avg_logprob": -0.14236002792546779, "compression_ratio": 1.6984126984126984, "no_caption_prob": 1.6700734704500064e-05}, {"id": 456, "seek": 174020, "start": 1740.2, "end": 1746.64, "text": " of Elm, it's more than just soundness, it's also like explicit semantics where Elm will", "tokens": [50364, 295, 2699, 76, 11, 309, 311, 544, 813, 445, 1626, 1287, 11, 309, 311, 611, 411, 13691, 4361, 45298, 689, 2699, 76, 486, 50686, 50686, 584, 11, 1911, 11, 498, 291, 528, 11, 498, 291, 528, 257, 23351, 28499, 1520, 11, 286, 458, 291, 1062, 312, 8437, 411, 512, 51052, 51052, 1310, 2158, 293, 1566, 498, 1310, 2158, 11, 457, 300, 311, 406, 577, 291, 360, 300, 294, 2699, 76, 13, 51264, 51264, 759, 291, 1116, 411, 281, 584, 498, 309, 498, 309, 307, 406, 1825, 11, 550, 291, 643, 281, 360, 300, 20803, 11, 291, 1391, 51570, 51570, 767, 528, 281, 360, 257, 1389, 5629, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10788776638271573, "compression_ratio": 1.7043478260869565, "no_caption_prob": 4.8321318899979815e-05}, {"id": 457, "seek": 174020, "start": 1746.64, "end": 1753.96, "text": " say, Hey, if you want, if you want a Boolean check, I know you might be passing like some", "tokens": [50364, 295, 2699, 76, 11, 309, 311, 544, 813, 445, 1626, 1287, 11, 309, 311, 611, 411, 13691, 4361, 45298, 689, 2699, 76, 486, 50686, 50686, 584, 11, 1911, 11, 498, 291, 528, 11, 498, 291, 528, 257, 23351, 28499, 1520, 11, 286, 458, 291, 1062, 312, 8437, 411, 512, 51052, 51052, 1310, 2158, 293, 1566, 498, 1310, 2158, 11, 457, 300, 311, 406, 577, 291, 360, 300, 294, 2699, 76, 13, 51264, 51264, 759, 291, 1116, 411, 281, 584, 498, 309, 498, 309, 307, 406, 1825, 11, 550, 291, 643, 281, 360, 300, 20803, 11, 291, 1391, 51570, 51570, 767, 528, 281, 360, 257, 1389, 5629, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10788776638271573, "compression_ratio": 1.7043478260869565, "no_caption_prob": 4.8321318899979815e-05}, {"id": 458, "seek": 174020, "start": 1753.96, "end": 1758.2, "text": " maybe value and saying if maybe value, but that's not how you do that in Elm.", "tokens": [50364, 295, 2699, 76, 11, 309, 311, 544, 813, 445, 1626, 1287, 11, 309, 311, 611, 411, 13691, 4361, 45298, 689, 2699, 76, 486, 50686, 50686, 584, 11, 1911, 11, 498, 291, 528, 11, 498, 291, 528, 257, 23351, 28499, 1520, 11, 286, 458, 291, 1062, 312, 8437, 411, 512, 51052, 51052, 1310, 2158, 293, 1566, 498, 1310, 2158, 11, 457, 300, 311, 406, 577, 291, 360, 300, 294, 2699, 76, 13, 51264, 51264, 759, 291, 1116, 411, 281, 584, 498, 309, 498, 309, 307, 406, 1825, 11, 550, 291, 643, 281, 360, 300, 20803, 11, 291, 1391, 51570, 51570, 767, 528, 281, 360, 257, 1389, 5629, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10788776638271573, "compression_ratio": 1.7043478260869565, "no_caption_prob": 4.8321318899979815e-05}, {"id": 459, "seek": 174020, "start": 1758.2, "end": 1764.32, "text": " If you'd like to say if it if it is not nothing, then you need to do that explicitly, you probably", "tokens": [50364, 295, 2699, 76, 11, 309, 311, 544, 813, 445, 1626, 1287, 11, 309, 311, 611, 411, 13691, 4361, 45298, 689, 2699, 76, 486, 50686, 50686, 584, 11, 1911, 11, 498, 291, 528, 11, 498, 291, 528, 257, 23351, 28499, 1520, 11, 286, 458, 291, 1062, 312, 8437, 411, 512, 51052, 51052, 1310, 2158, 293, 1566, 498, 1310, 2158, 11, 457, 300, 311, 406, 577, 291, 360, 300, 294, 2699, 76, 13, 51264, 51264, 759, 291, 1116, 411, 281, 584, 498, 309, 498, 309, 307, 406, 1825, 11, 550, 291, 643, 281, 360, 300, 20803, 11, 291, 1391, 51570, 51570, 767, 528, 281, 360, 257, 1389, 5629, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10788776638271573, "compression_ratio": 1.7043478260869565, "no_caption_prob": 4.8321318899979815e-05}, {"id": 460, "seek": 174020, "start": 1764.32, "end": 1765.8400000000001, "text": " actually want to do a case statement.", "tokens": [50364, 295, 2699, 76, 11, 309, 311, 544, 813, 445, 1626, 1287, 11, 309, 311, 611, 411, 13691, 4361, 45298, 689, 2699, 76, 486, 50686, 50686, 584, 11, 1911, 11, 498, 291, 528, 11, 498, 291, 528, 257, 23351, 28499, 1520, 11, 286, 458, 291, 1062, 312, 8437, 411, 512, 51052, 51052, 1310, 2158, 293, 1566, 498, 1310, 2158, 11, 457, 300, 311, 406, 577, 291, 360, 300, 294, 2699, 76, 13, 51264, 51264, 759, 291, 1116, 411, 281, 584, 498, 309, 498, 309, 307, 406, 1825, 11, 550, 291, 643, 281, 360, 300, 20803, 11, 291, 1391, 51570, 51570, 767, 528, 281, 360, 257, 1389, 5629, 13, 51646, 51646], "temperature": 0.0, "avg_logprob": -0.10788776638271573, "compression_ratio": 1.7043478260869565, "no_caption_prob": 4.8321318899979815e-05}, {"id": 461, "seek": 176584, "start": 1765.84, "end": 1770.36, "text": " But if you really want to do that, explicitly turn it into a bool for me, because that's", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 462, "seek": 176584, "start": 1770.36, "end": 1776.22, "text": " probably a foot gun that so Elm will prevent you from unintentionally passing different", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 463, "seek": 176584, "start": 1776.22, "end": 1777.56, "text": " values places.", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 464, "seek": 176584, "start": 1777.56, "end": 1779.4399999999998, "text": " And that's something that makes it safer.", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 465, "seek": 176584, "start": 1779.4399999999998, "end": 1783.52, "text": " Strictly speaking, in terms of soundness, it doesn't really affect the soundness of", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 466, "seek": 176584, "start": 1783.52, "end": 1784.52, "text": " the type system.", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 467, "seek": 176584, "start": 1784.52, "end": 1786.56, "text": " But practically, it does.", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 468, "seek": 176584, "start": 1786.56, "end": 1790.56, "text": " Wait, let's get back to the grid function that you mentioned.", "tokens": [50364, 583, 498, 291, 534, 528, 281, 360, 300, 11, 20803, 1261, 309, 666, 257, 748, 401, 337, 385, 11, 570, 300, 311, 50590, 50590, 1391, 257, 2671, 3874, 300, 370, 2699, 76, 486, 4871, 291, 490, 45514, 379, 8437, 819, 50883, 50883, 4190, 3190, 13, 50950, 50950, 400, 300, 311, 746, 300, 1669, 309, 15856, 13, 51044, 51044, 745, 3740, 356, 4124, 11, 294, 2115, 295, 1626, 1287, 11, 309, 1177, 380, 534, 3345, 264, 1626, 1287, 295, 51248, 51248, 264, 2010, 1185, 13, 51298, 51298, 583, 15667, 11, 309, 775, 13, 51400, 51400, 3802, 11, 718, 311, 483, 646, 281, 264, 10748, 2445, 300, 291, 2835, 13, 51600, 51600], "temperature": 0.0, "avg_logprob": -0.14548713820321219, "compression_ratio": 1.623076923076923, "no_caption_prob": 2.2826048734714277e-05}, {"id": 469, "seek": 179056, "start": 1790.56, "end": 1796.36, "text": " If you do not put any type annotations on the arguments, they are all considered any", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 470, "seek": 179056, "start": 1796.36, "end": 1798.8, "text": " exactly, exactly.", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 471, "seek": 179056, "start": 1798.8, "end": 1804.94, "text": " Because, well, maybe not regardless of the implementation, but but if you're concatenating", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 472, "seek": 179056, "start": 1804.94, "end": 1809.76, "text": " two things, then it can't infer the type based on that.", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 473, "seek": 179056, "start": 1809.76, "end": 1816.0, "text": " So sure, you're concatenating two things, but I can concatenate a number with with a", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 474, "seek": 179056, "start": 1816.0, "end": 1819.24, "text": " string in JavaScript, JavaScript lets you do that.", "tokens": [50364, 759, 291, 360, 406, 829, 604, 2010, 25339, 763, 322, 264, 12869, 11, 436, 366, 439, 4888, 604, 50654, 50654, 2293, 11, 2293, 13, 50776, 50776, 1436, 11, 731, 11, 1310, 406, 10060, 295, 264, 11420, 11, 457, 457, 498, 291, 434, 1588, 7186, 990, 51083, 51083, 732, 721, 11, 550, 309, 393, 380, 13596, 264, 2010, 2361, 322, 300, 13, 51324, 51324, 407, 988, 11, 291, 434, 1588, 7186, 990, 732, 721, 11, 457, 286, 393, 1588, 7186, 473, 257, 1230, 365, 365, 257, 51636, 51636, 6798, 294, 15778, 11, 15778, 6653, 291, 360, 300, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2071624227089457, "compression_ratio": 1.7824074074074074, "no_caption_prob": 4.683669612859376e-05}, {"id": 475, "seek": 181924, "start": 1819.24, "end": 1827.04, "text": " So sure, you're saying hello plus name, but I can't infer that that must be a string based", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 476, "seek": 181924, "start": 1827.04, "end": 1828.04, "text": " on that.", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 477, "seek": 181924, "start": 1828.04, "end": 1832.04, "text": " Whereas Elm can, Elm can infer that and it's not going to say, Oh, I don't know what type", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 478, "seek": 181924, "start": 1832.04, "end": 1836.04, "text": " this is, it's going to say, Oh, that must be a string because you're doing string plus", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 479, "seek": 181924, "start": 1836.04, "end": 1839.84, "text": " plus something that thing must be a string.", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 480, "seek": 181924, "start": 1839.84, "end": 1841.24, "text": " TypeScript can't do that.", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 481, "seek": 181924, "start": 1841.24, "end": 1847.26, "text": " So if you say no implicit any in your type script configuration, then it will try to", "tokens": [50364, 407, 988, 11, 291, 434, 1566, 7751, 1804, 1315, 11, 457, 286, 393, 380, 13596, 300, 300, 1633, 312, 257, 6798, 2361, 50754, 50754, 322, 300, 13, 50804, 50804, 13813, 2699, 76, 393, 11, 2699, 76, 393, 13596, 300, 293, 309, 311, 406, 516, 281, 584, 11, 876, 11, 286, 500, 380, 458, 437, 2010, 51004, 51004, 341, 307, 11, 309, 311, 516, 281, 584, 11, 876, 11, 300, 1633, 312, 257, 6798, 570, 291, 434, 884, 6798, 1804, 51204, 51204, 1804, 746, 300, 551, 1633, 312, 257, 6798, 13, 51394, 51394, 15576, 14237, 393, 380, 360, 300, 13, 51464, 51464, 407, 498, 291, 584, 572, 26947, 604, 294, 428, 2010, 5755, 11694, 11, 550, 309, 486, 853, 281, 51765, 51765], "temperature": 0.0, "avg_logprob": -0.13156183754525533, "compression_ratio": 1.8658008658008658, "no_caption_prob": 2.9479908789653564e-06}, {"id": 482, "seek": 184726, "start": 1847.26, "end": 1851.36, "text": " say it's unknown or it will let you know, hey, please add a type annotation.", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 483, "seek": 184726, "start": 1851.36, "end": 1852.36, "text": " Is that it?", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 484, "seek": 184726, "start": 1852.36, "end": 1856.84, "text": " Yeah, it will give you an error or a warning if you I think an error if you have no implicit", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 485, "seek": 184726, "start": 1856.84, "end": 1863.24, "text": " any and it will say, hey, I'm inferring this, this type, the name parameter to be of type", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 486, "seek": 184726, "start": 1863.24, "end": 1868.56, "text": " any, if you would indeed like it to be type any, then you must explicitly write that and", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 487, "seek": 184726, "start": 1868.56, "end": 1873.48, "text": " you can write that you can say, name, colon, any, and it'll say, Okay, fine, that's an", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 488, "seek": 184726, "start": 1873.48, "end": 1877.12, "text": " explicit any, I was giving you errors for implicit any.", "tokens": [50364, 584, 309, 311, 9841, 420, 309, 486, 718, 291, 458, 11, 4177, 11, 1767, 909, 257, 2010, 48654, 13, 50569, 50569, 1119, 300, 309, 30, 50619, 50619, 865, 11, 309, 486, 976, 291, 364, 6713, 420, 257, 9164, 498, 291, 286, 519, 364, 6713, 498, 291, 362, 572, 26947, 50843, 50843, 604, 293, 309, 486, 584, 11, 4177, 11, 286, 478, 13596, 2937, 341, 11, 341, 2010, 11, 264, 1315, 13075, 281, 312, 295, 2010, 51163, 51163, 604, 11, 498, 291, 576, 6451, 411, 309, 281, 312, 2010, 604, 11, 550, 291, 1633, 20803, 2464, 300, 293, 51429, 51429, 291, 393, 2464, 300, 291, 393, 584, 11, 1315, 11, 8255, 11, 604, 11, 293, 309, 603, 584, 11, 1033, 11, 2489, 11, 300, 311, 364, 51675, 51675, 13691, 604, 11, 286, 390, 2902, 291, 13603, 337, 26947, 604, 13, 51857, 51857], "temperature": 0.0, "avg_logprob": -0.1409162774786249, "compression_ratio": 1.8698884758364311, "no_caption_prob": 2.2125308532849886e-05}, {"id": 489, "seek": 187712, "start": 1877.12, "end": 1880.4799999999998, "text": " And now you've made that explicit, and that's fine.", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 490, "seek": 187712, "start": 1880.4799999999998, "end": 1886.1599999999999, "text": " And so, of course, you could also explicitly put a different type like string in is the", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 491, "seek": 187712, "start": 1886.1599999999999, "end": 1887.9399999999998, "text": " type annotation for the parameter.", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 492, "seek": 187712, "start": 1887.9399999999998, "end": 1894.56, "text": " So that's that's no implicit any, but that doesn't prevent you from doing JSON dot parse", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 493, "seek": 187712, "start": 1894.56, "end": 1895.9599999999998, "text": " on something.", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 494, "seek": 187712, "start": 1895.9599999999998, "end": 1898.08, "text": " And suddenly, what value to get?", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 495, "seek": 187712, "start": 1898.08, "end": 1904.6, "text": " Do you get back any and now you, you know, as far as I'm aware, there's, there's no TypeScript", "tokens": [50364, 400, 586, 291, 600, 1027, 300, 13691, 11, 293, 300, 311, 2489, 13, 50532, 50532, 400, 370, 11, 295, 1164, 11, 291, 727, 611, 20803, 829, 257, 819, 2010, 411, 6798, 294, 307, 264, 50816, 50816, 2010, 48654, 337, 264, 13075, 13, 50905, 50905, 407, 300, 311, 300, 311, 572, 26947, 604, 11, 457, 300, 1177, 380, 4871, 291, 490, 884, 31828, 5893, 48377, 51236, 51236, 322, 746, 13, 51306, 51306, 400, 5800, 11, 437, 2158, 281, 483, 30, 51412, 51412, 1144, 291, 483, 646, 604, 293, 586, 291, 11, 291, 458, 11, 382, 1400, 382, 286, 478, 3650, 11, 456, 311, 11, 456, 311, 572, 15576, 14237, 51738, 51738], "temperature": 0.0, "avg_logprob": -0.14112929786954606, "compression_ratio": 1.6135458167330676, "no_caption_prob": 9.818161743169185e-06}, {"id": 496, "seek": 190460, "start": 1904.6, "end": 1912.1999999999998, "text": " rule, not even like an ES lint type rule for preventing that if I'm mistaken, if there", "tokens": [50364, 4978, 11, 406, 754, 411, 364, 12564, 287, 686, 2010, 4978, 337, 19965, 300, 498, 286, 478, 21333, 11, 498, 456, 50744, 50744, 307, 746, 550, 1767, 11, 1767, 718, 385, 458, 11, 570, 286, 1116, 959, 281, 1466, 466, 300, 13, 50948, 50948, 583, 382, 1400, 382, 286, 458, 11, 291, 393, 380, 11, 291, 393, 380, 4871, 300, 420, 362, 512, 746, 300, 1669, 51258, 51258, 291, 411, 11, 2142, 20803, 11, 286, 519, 300, 576, 312, 534, 1481, 281, 11, 291, 458, 11, 281, 483, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.12982223344885785, "compression_ratio": 1.638095238095238, "no_caption_prob": 3.8227688492042944e-05}, {"id": 497, "seek": 190460, "start": 1912.1999999999998, "end": 1916.28, "text": " is something then please, please let me know, because I'd love to learn about that.", "tokens": [50364, 4978, 11, 406, 754, 411, 364, 12564, 287, 686, 2010, 4978, 337, 19965, 300, 498, 286, 478, 21333, 11, 498, 456, 50744, 50744, 307, 746, 550, 1767, 11, 1767, 718, 385, 458, 11, 570, 286, 1116, 959, 281, 1466, 466, 300, 13, 50948, 50948, 583, 382, 1400, 382, 286, 458, 11, 291, 393, 380, 11, 291, 393, 380, 4871, 300, 420, 362, 512, 746, 300, 1669, 51258, 51258, 291, 411, 11, 2142, 20803, 11, 286, 519, 300, 576, 312, 534, 1481, 281, 11, 291, 458, 11, 281, 483, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.12982223344885785, "compression_ratio": 1.638095238095238, "no_caption_prob": 3.8227688492042944e-05}, {"id": 498, "seek": 190460, "start": 1916.28, "end": 1922.48, "text": " But as far as I know, you can't, you can't prevent that or have some something that makes", "tokens": [50364, 4978, 11, 406, 754, 411, 364, 12564, 287, 686, 2010, 4978, 337, 19965, 300, 498, 286, 478, 21333, 11, 498, 456, 50744, 50744, 307, 746, 550, 1767, 11, 1767, 718, 385, 458, 11, 570, 286, 1116, 959, 281, 1466, 466, 300, 13, 50948, 50948, 583, 382, 1400, 382, 286, 458, 11, 291, 393, 380, 11, 291, 393, 380, 4871, 300, 420, 362, 512, 746, 300, 1669, 51258, 51258, 291, 411, 11, 2142, 20803, 11, 286, 519, 300, 576, 312, 534, 1481, 281, 11, 291, 458, 11, 281, 483, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.12982223344885785, "compression_ratio": 1.638095238095238, "no_caption_prob": 3.8227688492042944e-05}, {"id": 499, "seek": 190460, "start": 1922.48, "end": 1927.9199999999998, "text": " you like, market explicitly, I think that would be really nice to, you know, to get", "tokens": [50364, 4978, 11, 406, 754, 411, 364, 12564, 287, 686, 2010, 4978, 337, 19965, 300, 498, 286, 478, 21333, 11, 498, 456, 50744, 50744, 307, 746, 550, 1767, 11, 1767, 718, 385, 458, 11, 570, 286, 1116, 959, 281, 1466, 466, 300, 13, 50948, 50948, 583, 382, 1400, 382, 286, 458, 11, 291, 393, 380, 11, 291, 393, 380, 4871, 300, 420, 362, 512, 746, 300, 1669, 51258, 51258, 291, 411, 11, 2142, 20803, 11, 286, 519, 300, 576, 312, 534, 1481, 281, 11, 291, 458, 11, 281, 483, 51530, 51530], "temperature": 0.0, "avg_logprob": -0.12982223344885785, "compression_ratio": 1.638095238095238, "no_caption_prob": 3.8227688492042944e-05}, {"id": 500, "seek": 192792, "start": 1927.92, "end": 1934.48, "text": " a warning if you do JSON dot parse, to at least have to explicitly write any if you", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 501, "seek": 192792, "start": 1934.48, "end": 1938.8000000000002, "text": " did, to acknowledge, I know I'm getting an any back here.", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 502, "seek": 192792, "start": 1938.8000000000002, "end": 1944.4, "text": " I'm guessing it would be useful, but I'm also guessing that it would be kind of annoying.", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 503, "seek": 192792, "start": 1944.4, "end": 1949.24, "text": " But I'm sure it depends on how likely are you to fight with your compiler to get things", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 504, "seek": 192792, "start": 1949.24, "end": 1950.24, "text": " right.", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 505, "seek": 192792, "start": 1950.24, "end": 1955.3600000000001, "text": " So, so if you are doing something pretty complex, and you don't know how to type it, because", "tokens": [50364, 257, 9164, 498, 291, 360, 31828, 5893, 48377, 11, 281, 412, 1935, 362, 281, 20803, 2464, 604, 498, 291, 50692, 50692, 630, 11, 281, 10692, 11, 286, 458, 286, 478, 1242, 364, 604, 646, 510, 13, 50908, 50908, 286, 478, 17939, 309, 576, 312, 4420, 11, 457, 286, 478, 611, 17939, 300, 309, 576, 312, 733, 295, 11304, 13, 51188, 51188, 583, 286, 478, 988, 309, 5946, 322, 577, 3700, 366, 291, 281, 2092, 365, 428, 31958, 281, 483, 721, 51430, 51430, 558, 13, 51480, 51480, 407, 11, 370, 498, 291, 366, 884, 746, 1238, 3997, 11, 293, 291, 500, 380, 458, 577, 281, 2010, 309, 11, 570, 51736, 51736], "temperature": 0.0, "avg_logprob": -0.15949392318725586, "compression_ratio": 1.6561264822134387, "no_caption_prob": 2.247354859719053e-05}, {"id": 506, "seek": 195536, "start": 1955.36, "end": 1961.02, "text": " JavaScript is very complex and you can do very complex things with it, then potentially", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 507, "seek": 195536, "start": 1961.02, "end": 1965.3999999999999, "text": " like the only thing that you can do is to say it's any.", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 508, "seek": 195536, "start": 1965.3999999999999, "end": 1966.3999999999999, "text": " Exactly.", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 509, "seek": 195536, "start": 1966.3999999999999, "end": 1970.56, "text": " Or to go through the whole documentation to find exactly how to type it.", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 510, "seek": 195536, "start": 1970.56, "end": 1972.1599999999999, "text": " And that can be very complex.", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 511, "seek": 195536, "start": 1972.1599999999999, "end": 1973.6, "text": " I think you're spot on.", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 512, "seek": 195536, "start": 1973.6, "end": 1980.24, "text": " And I think another, another thing is like, what if you do JSON dot parse and pass that", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 513, "seek": 195536, "start": 1980.24, "end": 1984.4399999999998, "text": " down to something else and that passes something else and returns type and then through that", "tokens": [50364, 15778, 307, 588, 3997, 293, 291, 393, 360, 588, 3997, 721, 365, 309, 11, 550, 7263, 50647, 50647, 411, 264, 787, 551, 300, 291, 393, 360, 307, 281, 584, 309, 311, 604, 13, 50866, 50866, 7587, 13, 50916, 50916, 1610, 281, 352, 807, 264, 1379, 14333, 281, 915, 2293, 577, 281, 2010, 309, 13, 51124, 51124, 400, 300, 393, 312, 588, 3997, 13, 51204, 51204, 286, 519, 291, 434, 4008, 322, 13, 51276, 51276, 400, 286, 519, 1071, 11, 1071, 551, 307, 411, 11, 437, 498, 291, 360, 31828, 5893, 48377, 293, 1320, 300, 51608, 51608, 760, 281, 746, 1646, 293, 300, 11335, 746, 1646, 293, 11247, 2010, 293, 550, 807, 300, 51818, 51818], "temperature": 0.0, "avg_logprob": -0.15362611310235386, "compression_ratio": 1.8253968253968254, "no_caption_prob": 4.469237683224492e-05}, {"id": 514, "seek": 198444, "start": 1984.44, "end": 1988.8, "text": " chain of function invocations, you end up with something that's not any.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 515, "seek": 198444, "start": 1988.8, "end": 1993.8400000000001, "text": " Well, is it going to tell you anytime you use something that returns an any and force", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 516, "seek": 198444, "start": 1993.8400000000001, "end": 1998.3600000000001, "text": " you to assign it to a variable somewhere or how would that even work?", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 517, "seek": 198444, "start": 1998.3600000000001, "end": 1999.3600000000001, "text": " Yeah.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 518, "seek": 198444, "start": 1999.3600000000001, "end": 2000.72, "text": " I mean, that wouldn't be practical.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 519, "seek": 198444, "start": 2000.72, "end": 2001.72, "text": " Right.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 520, "seek": 198444, "start": 2001.72, "end": 2002.72, "text": " Right.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 521, "seek": 198444, "start": 2002.72, "end": 2007.28, "text": " So, so I think that the, you know, TypeScript language is just like, Hey, that's, that's", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 522, "seek": 198444, "start": 2007.28, "end": 2008.28, "text": " just part of it.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 523, "seek": 198444, "start": 2008.28, "end": 2010.04, "text": " Like you get any somewhere.", "tokens": [50364, 5021, 295, 2445, 1048, 905, 763, 11, 291, 917, 493, 365, 746, 300, 311, 406, 604, 13, 50582, 50582, 1042, 11, 307, 309, 516, 281, 980, 291, 13038, 291, 764, 746, 300, 11247, 364, 604, 293, 3464, 50834, 50834, 291, 281, 6269, 309, 281, 257, 7006, 4079, 420, 577, 576, 300, 754, 589, 30, 51060, 51060, 865, 13, 51110, 51110, 286, 914, 11, 300, 2759, 380, 312, 8496, 13, 51178, 51178, 1779, 13, 51228, 51228, 1779, 13, 51278, 51278, 407, 11, 370, 286, 519, 300, 264, 11, 291, 458, 11, 15576, 14237, 2856, 307, 445, 411, 11, 1911, 11, 300, 311, 11, 300, 311, 51506, 51506, 445, 644, 295, 309, 13, 51556, 51556, 1743, 291, 483, 604, 4079, 13, 51644, 51644], "temperature": 0.0, "avg_logprob": -0.15805269256839907, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.225041604717262e-05}, {"id": 524, "seek": 201004, "start": 2010.04, "end": 2015.44, "text": " And really I think, I think the philosophy is it's really more like a, a, a linter where", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 525, "seek": 201004, "start": 2015.44, "end": 2020.96, "text": " it it's a bonus that it catches some things and it does its best effort.", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 526, "seek": 201004, "start": 2020.96, "end": 2025.32, "text": " And again, I don't, I don't mean this as a value judgment.", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 527, "seek": 201004, "start": 2025.32, "end": 2030.08, "text": " I just, I just, I think that when you're writing TypeScript, which I, I use TypeScript and", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 528, "seek": 201004, "start": 2030.08, "end": 2034.36, "text": " I think it's, I think it's great, but I think you need to be aware of these things when", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 529, "seek": 201004, "start": 2034.36, "end": 2037.32, "text": " you use them, not just think like, Oh, it's typed.", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 530, "seek": 201004, "start": 2037.32, "end": 2039.96, "text": " No, it's, it's typed in a very different way.", "tokens": [50364, 400, 534, 286, 519, 11, 286, 519, 264, 10675, 307, 309, 311, 534, 544, 411, 257, 11, 257, 11, 257, 287, 5106, 689, 50634, 50634, 309, 309, 311, 257, 10882, 300, 309, 25496, 512, 721, 293, 309, 775, 1080, 1151, 4630, 13, 50910, 50910, 400, 797, 11, 286, 500, 380, 11, 286, 500, 380, 914, 341, 382, 257, 2158, 12216, 13, 51128, 51128, 286, 445, 11, 286, 445, 11, 286, 519, 300, 562, 291, 434, 3579, 15576, 14237, 11, 597, 286, 11, 286, 764, 15576, 14237, 293, 51366, 51366, 286, 519, 309, 311, 11, 286, 519, 309, 311, 869, 11, 457, 286, 519, 291, 643, 281, 312, 3650, 295, 613, 721, 562, 51580, 51580, 291, 764, 552, 11, 406, 445, 519, 411, 11, 876, 11, 309, 311, 33941, 13, 51728, 51728, 883, 11, 309, 311, 11, 309, 311, 33941, 294, 257, 588, 819, 636, 13, 51860, 51860], "temperature": 0.0, "avg_logprob": -0.11313054385601275, "compression_ratio": 1.8036363636363637, "no_caption_prob": 3.944093259633519e-05}, {"id": 531, "seek": 203996, "start": 2039.96, "end": 2042.6000000000001, "text": " And it's pragmatic for the goals it's solving for.", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 532, "seek": 203996, "start": 2042.6000000000001, "end": 2047.8400000000001, "text": " But so that's, that's why I wrote that post TypeScript Spine Plots.", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 533, "seek": 203996, "start": 2047.8400000000001, "end": 2051.6, "text": " And it's, it's one of my, one of my favorite posts that I've written.", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 534, "seek": 203996, "start": 2051.6, "end": 2057.8, "text": " It's a short little one, but my, my goal with that post was for myself as much as for anybody", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 535, "seek": 203996, "start": 2057.8, "end": 2065.04, "text": " to document these these cases to be aware of that could end up shooting you in the foot.", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 536, "seek": 203996, "start": 2065.04, "end": 2069.44, "text": " I guess what you're saying is it really depends on how you view it.", "tokens": [50364, 400, 309, 311, 46904, 337, 264, 5493, 309, 311, 12606, 337, 13, 50496, 50496, 583, 370, 300, 311, 11, 300, 311, 983, 286, 4114, 300, 2183, 15576, 14237, 1738, 533, 2149, 1971, 13, 50758, 50758, 400, 309, 311, 11, 309, 311, 472, 295, 452, 11, 472, 295, 452, 2954, 12300, 300, 286, 600, 3720, 13, 50946, 50946, 467, 311, 257, 2099, 707, 472, 11, 457, 452, 11, 452, 3387, 365, 300, 2183, 390, 337, 2059, 382, 709, 382, 337, 4472, 51256, 51256, 281, 4166, 613, 613, 3331, 281, 312, 3650, 295, 300, 727, 917, 493, 5942, 291, 294, 264, 2671, 13, 51618, 51618, 286, 2041, 437, 291, 434, 1566, 307, 309, 534, 5946, 322, 577, 291, 1910, 309, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.15195392205463193, "compression_ratio": 1.6692015209125475, "no_caption_prob": 4.495136181503767e-06}, {"id": 537, "seek": 206944, "start": 2069.44, "end": 2075.16, "text": " Like sure you can, if you're just trying to write JavaScript and then add type annotations", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 538, "seek": 206944, "start": 2075.16, "end": 2079.6, "text": " to catch some errors, then yeah, it's a lender in a way.", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 539, "seek": 206944, "start": 2079.6, "end": 2083.86, "text": " A very powerful one at that, but it has its limitations.", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 540, "seek": 206944, "start": 2083.86, "end": 2090.04, "text": " But if you're thinking that you're not developing JavaScript, but you're writing TypeScript,", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 541, "seek": 206944, "start": 2090.04, "end": 2093.06, "text": " then I think you're going to write your code differently.", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 542, "seek": 206944, "start": 2093.06, "end": 2097.92, "text": " You're going to write it probably in simpler ways in ways that you can, that you know how", "tokens": [50364, 1743, 988, 291, 393, 11, 498, 291, 434, 445, 1382, 281, 2464, 15778, 293, 550, 909, 2010, 25339, 763, 50650, 50650, 281, 3745, 512, 13603, 11, 550, 1338, 11, 309, 311, 257, 47500, 294, 257, 636, 13, 50872, 50872, 316, 588, 4005, 472, 412, 300, 11, 457, 309, 575, 1080, 15705, 13, 51085, 51085, 583, 498, 291, 434, 1953, 300, 291, 434, 406, 6416, 15778, 11, 457, 291, 434, 3579, 15576, 14237, 11, 51394, 51394, 550, 286, 519, 291, 434, 516, 281, 2464, 428, 3089, 7614, 13, 51545, 51545, 509, 434, 516, 281, 2464, 309, 1391, 294, 18587, 2098, 294, 2098, 300, 291, 393, 11, 300, 291, 458, 577, 51788, 51788], "temperature": 0.0, "avg_logprob": -0.20591138316466745, "compression_ratio": 1.7658730158730158, "no_caption_prob": 2.3186219550552778e-05}, {"id": 543, "seek": 209792, "start": 2097.92, "end": 2102.48, "text": " to type them and you will do less dynamic things.", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 544, "seek": 209792, "start": 2102.48, "end": 2106.2400000000002, "text": " You will do less dynamic constructs and you will be more explicit in everything that you", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 545, "seek": 209792, "start": 2106.2400000000002, "end": 2108.52, "text": " do, which I think is the way to go.", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 546, "seek": 209792, "start": 2108.52, "end": 2111.44, "text": " But that's from a biased opinion as well.", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 547, "seek": 209792, "start": 2111.44, "end": 2118.44, "text": " Yeah, no, I mean, that's why I wrote this blog post for myself when I'm writing TypeScript", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 548, "seek": 209792, "start": 2118.44, "end": 2124.4, "text": " code because I wanted to, to just like have a quick reference of what are the things that", "tokens": [50364, 281, 2010, 552, 293, 291, 486, 360, 1570, 8546, 721, 13, 50592, 50592, 509, 486, 360, 1570, 8546, 7690, 82, 293, 291, 486, 312, 544, 13691, 294, 1203, 300, 291, 50780, 50780, 360, 11, 597, 286, 519, 307, 264, 636, 281, 352, 13, 50894, 50894, 583, 300, 311, 490, 257, 28035, 4800, 382, 731, 13, 51040, 51040, 865, 11, 572, 11, 286, 914, 11, 300, 311, 983, 286, 4114, 341, 6968, 2183, 337, 2059, 562, 286, 478, 3579, 15576, 14237, 51390, 51390, 3089, 570, 286, 1415, 281, 11, 281, 445, 411, 362, 257, 1702, 6408, 295, 437, 366, 264, 721, 300, 51688, 51688], "temperature": 0.0, "avg_logprob": -0.14087387266613188, "compression_ratio": 1.6337448559670782, "no_caption_prob": 3.9669653233431745e-06}, {"id": 549, "seek": 212440, "start": 2124.4, "end": 2130.6800000000003, "text": " introduce unsoundness, not because I'm never going to use them, but because I, in my mind,", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 550, "seek": 212440, "start": 2130.6800000000003, "end": 2137.7200000000003, "text": " I want, I want a bright red ring in my brain around it whenever I see JSON.parse.", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 551, "seek": 212440, "start": 2137.7200000000003, "end": 2142.64, "text": " And you know, so for me writing this blog post succeeded in doing that in my brain where", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 552, "seek": 212440, "start": 2142.64, "end": 2147.2000000000003, "text": " I, you know, anytime I see JSON.parse, I'm like, uh oh, there's a, there's an any that's", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 553, "seek": 212440, "start": 2147.2000000000003, "end": 2149.1600000000003, "text": " trickling through my types now.", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 554, "seek": 212440, "start": 2149.1600000000003, "end": 2152.1600000000003, "text": " Same as when you call HTTP requests, right?", "tokens": [50364, 5366, 2693, 554, 1287, 11, 406, 570, 286, 478, 1128, 516, 281, 764, 552, 11, 457, 570, 286, 11, 294, 452, 1575, 11, 50678, 50678, 286, 528, 11, 286, 528, 257, 4730, 2182, 4875, 294, 452, 3567, 926, 309, 5699, 286, 536, 31828, 13, 2181, 405, 13, 51030, 51030, 400, 291, 458, 11, 370, 337, 385, 3579, 341, 6968, 2183, 20263, 294, 884, 300, 294, 452, 3567, 689, 51276, 51276, 286, 11, 291, 458, 11, 13038, 286, 536, 31828, 13, 2181, 405, 11, 286, 478, 411, 11, 2232, 1954, 11, 456, 311, 257, 11, 456, 311, 364, 604, 300, 311, 51504, 51504, 4282, 1688, 807, 452, 3467, 586, 13, 51602, 51602, 10635, 382, 562, 291, 818, 33283, 12475, 11, 558, 30, 51752, 51752], "temperature": 0.0, "avg_logprob": -0.16979202270507812, "compression_ratio": 1.6771653543307086, "no_caption_prob": 1.4063572052691597e-05}, {"id": 555, "seek": 215216, "start": 2152.16, "end": 2155.3199999999997, "text": " Yeah, yeah, cause you, I mean, cause it's JSON.parse under the hood.", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 556, "seek": 215216, "start": 2155.3199999999997, "end": 2162.3599999999997, "text": " JSON.parse is just used so many places and same when you install in a typings of an NPM", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 557, "seek": 215216, "start": 2162.3599999999997, "end": 2171.0, "text": " package and you know, so yeah, you have to, you have to be very skeptical of typings that", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 558, "seek": 215216, "start": 2171.0, "end": 2172.0, "text": " come from the outside.", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 559, "seek": 215216, "start": 2172.0, "end": 2175.3999999999996, "text": " You have to be a little bit paranoid.", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 560, "seek": 215216, "start": 2175.3999999999996, "end": 2181.2799999999997, "text": " So we mentioned that unknown is a better alternative to any when possible at least, which I think", "tokens": [50364, 865, 11, 1338, 11, 3082, 291, 11, 286, 914, 11, 3082, 309, 311, 31828, 13, 2181, 405, 833, 264, 13376, 13, 50522, 50522, 31828, 13, 2181, 405, 307, 445, 1143, 370, 867, 3190, 293, 912, 562, 291, 3625, 294, 257, 2125, 1109, 295, 364, 426, 18819, 50874, 50874, 7372, 293, 291, 458, 11, 370, 1338, 11, 291, 362, 281, 11, 291, 362, 281, 312, 588, 28601, 295, 2125, 1109, 300, 51306, 51306, 808, 490, 264, 2380, 13, 51356, 51356, 509, 362, 281, 312, 257, 707, 857, 43948, 13, 51526, 51526, 407, 321, 2835, 300, 9841, 307, 257, 1101, 8535, 281, 604, 562, 1944, 412, 1935, 11, 597, 286, 519, 51820, 51820], "temperature": 0.0, "avg_logprob": -0.19630204259821799, "compression_ratio": 1.653061224489796, "no_caption_prob": 3.9441223634639755e-05}, {"id": 561, "seek": 218128, "start": 2181.28, "end": 2187.0800000000004, "text": " it's most cases, but when you use unknown, what you need to do is to narrow the type.", "tokens": [50364, 309, 311, 881, 3331, 11, 457, 562, 291, 764, 9841, 11, 437, 291, 643, 281, 360, 307, 281, 9432, 264, 2010, 13, 50654, 50654, 509, 643, 281, 980, 15576, 14237, 577, 360, 291, 11, 577, 393, 286, 980, 291, 300, 341, 486, 312, 257, 6798, 50992, 50992, 420, 300, 341, 486, 312, 746, 1646, 30, 51106, 51106, 400, 437, 291, 360, 337, 300, 307, 281, 584, 721, 411, 498, 257, 2158, 8306, 11, 575, 257, 4707, 281, 51476, 51476, 11775, 2869, 651, 420, 11, 420, 291, 818, 721, 411, 10225, 13, 271, 10683, 3458, 420, 764, 2010, 295, 1507, 411, 300, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.19193253427181603, "compression_ratio": 1.7027027027027026, "no_caption_prob": 2.8856620701844804e-05}, {"id": 562, "seek": 218128, "start": 2187.0800000000004, "end": 2193.84, "text": " You need to tell TypeScript how do you, how can I tell you that this will be a string", "tokens": [50364, 309, 311, 881, 3331, 11, 457, 562, 291, 764, 9841, 11, 437, 291, 643, 281, 360, 307, 281, 9432, 264, 2010, 13, 50654, 50654, 509, 643, 281, 980, 15576, 14237, 577, 360, 291, 11, 577, 393, 286, 980, 291, 300, 341, 486, 312, 257, 6798, 50992, 50992, 420, 300, 341, 486, 312, 746, 1646, 30, 51106, 51106, 400, 437, 291, 360, 337, 300, 307, 281, 584, 721, 411, 498, 257, 2158, 8306, 11, 575, 257, 4707, 281, 51476, 51476, 11775, 2869, 651, 420, 11, 420, 291, 818, 721, 411, 10225, 13, 271, 10683, 3458, 420, 764, 2010, 295, 1507, 411, 300, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.19193253427181603, "compression_ratio": 1.7027027027027026, "no_caption_prob": 2.8856620701844804e-05}, {"id": 563, "seek": 218128, "start": 2193.84, "end": 2196.1200000000003, "text": " or that this will be something else?", "tokens": [50364, 309, 311, 881, 3331, 11, 457, 562, 291, 764, 9841, 11, 437, 291, 643, 281, 360, 307, 281, 9432, 264, 2010, 13, 50654, 50654, 509, 643, 281, 980, 15576, 14237, 577, 360, 291, 11, 577, 393, 286, 980, 291, 300, 341, 486, 312, 257, 6798, 50992, 50992, 420, 300, 341, 486, 312, 746, 1646, 30, 51106, 51106, 400, 437, 291, 360, 337, 300, 307, 281, 584, 721, 411, 498, 257, 2158, 8306, 11, 575, 257, 4707, 281, 51476, 51476, 11775, 2869, 651, 420, 11, 420, 291, 818, 721, 411, 10225, 13, 271, 10683, 3458, 420, 764, 2010, 295, 1507, 411, 300, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.19193253427181603, "compression_ratio": 1.7027027027027026, "no_caption_prob": 2.8856620701844804e-05}, {"id": 564, "seek": 218128, "start": 2196.1200000000003, "end": 2203.52, "text": " And what you do for that is to say things like if a value contains, has a property to", "tokens": [50364, 309, 311, 881, 3331, 11, 457, 562, 291, 764, 9841, 11, 437, 291, 643, 281, 360, 307, 281, 9432, 264, 2010, 13, 50654, 50654, 509, 643, 281, 980, 15576, 14237, 577, 360, 291, 11, 577, 393, 286, 980, 291, 300, 341, 486, 312, 257, 6798, 50992, 50992, 420, 300, 341, 486, 312, 746, 1646, 30, 51106, 51106, 400, 437, 291, 360, 337, 300, 307, 281, 584, 721, 411, 498, 257, 2158, 8306, 11, 575, 257, 4707, 281, 51476, 51476, 11775, 2869, 651, 420, 11, 420, 291, 818, 721, 411, 10225, 13, 271, 10683, 3458, 420, 764, 2010, 295, 1507, 411, 300, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.19193253427181603, "compression_ratio": 1.7027027027027026, "no_caption_prob": 2.8856620701844804e-05}, {"id": 565, "seek": 218128, "start": 2203.52, "end": 2210.48, "text": " uppercase or, or you call things like array.isArray or use type of stuff like that.", "tokens": [50364, 309, 311, 881, 3331, 11, 457, 562, 291, 764, 9841, 11, 437, 291, 643, 281, 360, 307, 281, 9432, 264, 2010, 13, 50654, 50654, 509, 643, 281, 980, 15576, 14237, 577, 360, 291, 11, 577, 393, 286, 980, 291, 300, 341, 486, 312, 257, 6798, 50992, 50992, 420, 300, 341, 486, 312, 746, 1646, 30, 51106, 51106, 400, 437, 291, 360, 337, 300, 307, 281, 584, 721, 411, 498, 257, 2158, 8306, 11, 575, 257, 4707, 281, 51476, 51476, 11775, 2869, 651, 420, 11, 420, 291, 818, 721, 411, 10225, 13, 271, 10683, 3458, 420, 764, 2010, 295, 1507, 411, 300, 13, 51824, 51824], "temperature": 0.0, "avg_logprob": -0.19193253427181603, "compression_ratio": 1.7027027027027026, "no_caption_prob": 2.8856620701844804e-05}, {"id": 566, "seek": 221048, "start": 2210.48, "end": 2211.48, "text": " Right.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 567, "seek": 221048, "start": 2211.48, "end": 2215.04, "text": " Usually you'd want to do type of rather than checking for a property on string.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 568, "seek": 221048, "start": 2215.04, "end": 2216.04, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 569, "seek": 221048, "start": 2216.04, "end": 2217.04, "text": " But yeah, yeah, yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 570, "seek": 221048, "start": 2217.04, "end": 2220.08, "text": " You can just say type of, and it, and this is one of the really interesting things about", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 571, "seek": 221048, "start": 2220.08, "end": 2226.36, "text": " TypeScript is it, it uses control flow analysis in order to narrow types as you, as you're", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 572, "seek": 221048, "start": 2226.36, "end": 2227.36, "text": " saying.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 573, "seek": 221048, "start": 2227.36, "end": 2228.36, "text": " Yeah.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 574, "seek": 221048, "start": 2228.36, "end": 2231.04, "text": " And I noticed that in Elm, you don't have any of those.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 575, "seek": 221048, "start": 2231.04, "end": 2234.2400000000002, "text": " The only thing that you have is better matching.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 576, "seek": 221048, "start": 2234.2400000000002, "end": 2235.2400000000002, "text": " Yes, exactly.", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 577, "seek": 221048, "start": 2235.2400000000002, "end": 2239.8, "text": " You can have validation functions, but then how do you use those values?", "tokens": [50364, 1779, 13, 50414, 50414, 11419, 291, 1116, 528, 281, 360, 2010, 295, 2831, 813, 8568, 337, 257, 4707, 322, 6798, 13, 50592, 50592, 865, 13, 50642, 50642, 583, 1338, 11, 1338, 11, 1338, 13, 50692, 50692, 509, 393, 445, 584, 2010, 295, 11, 293, 309, 11, 293, 341, 307, 472, 295, 264, 534, 1880, 721, 466, 50844, 50844, 15576, 14237, 307, 309, 11, 309, 4960, 1969, 3095, 5215, 294, 1668, 281, 9432, 3467, 382, 291, 11, 382, 291, 434, 51158, 51158, 1566, 13, 51208, 51208, 865, 13, 51258, 51258, 400, 286, 5694, 300, 294, 2699, 76, 11, 291, 500, 380, 362, 604, 295, 729, 13, 51392, 51392, 440, 787, 551, 300, 291, 362, 307, 1101, 14324, 13, 51552, 51552, 1079, 11, 2293, 13, 51602, 51602, 509, 393, 362, 24071, 6828, 11, 457, 550, 577, 360, 291, 764, 729, 4190, 30, 51830, 51830], "temperature": 0.0, "avg_logprob": -0.1766573190689087, "compression_ratio": 1.6835016835016836, "no_caption_prob": 7.766901035211049e-06}, {"id": 578, "seek": 223980, "start": 2239.8, "end": 2245.6000000000004, "text": " You use better matching or things like maybe that with default or result that with default,", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 579, "seek": 223980, "start": 2245.6000000000004, "end": 2247.5600000000004, "text": " but then you lose some information.", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 580, "seek": 223980, "start": 2247.5600000000004, "end": 2248.6800000000003, "text": " Right.", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 581, "seek": 223980, "start": 2248.6800000000003, "end": 2250.96, "text": " And under the hood it's pattern matching anyway.", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 582, "seek": 223980, "start": 2250.96, "end": 2251.96, "text": " Right.", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 583, "seek": 223980, "start": 2251.96, "end": 2252.96, "text": " Because they're coming edit.", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 584, "seek": 223980, "start": 2252.96, "end": 2257.6000000000004, "text": " And again, you know, I mean, I guess I, I guess I sound like a broken record here, but", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 585, "seek": 223980, "start": 2257.6000000000004, "end": 2263.1000000000004, "text": " I always, I always like to think, you know, what are, what are the design constraints", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 586, "seek": 223980, "start": 2263.1000000000004, "end": 2266.2400000000002, "text": " and the problems that the author is trying to solve for, right?", "tokens": [50364, 509, 764, 1101, 14324, 420, 721, 411, 1310, 300, 365, 7576, 420, 1874, 300, 365, 7576, 11, 50654, 50654, 457, 550, 291, 3624, 512, 1589, 13, 50752, 50752, 1779, 13, 50808, 50808, 400, 833, 264, 13376, 309, 311, 5102, 14324, 4033, 13, 50922, 50922, 1779, 13, 50972, 50972, 1436, 436, 434, 1348, 8129, 13, 51022, 51022, 400, 797, 11, 291, 458, 11, 286, 914, 11, 286, 2041, 286, 11, 286, 2041, 286, 1626, 411, 257, 5463, 2136, 510, 11, 457, 51254, 51254, 286, 1009, 11, 286, 1009, 411, 281, 519, 11, 291, 458, 11, 437, 366, 11, 437, 366, 264, 1715, 18491, 51529, 51529, 293, 264, 2740, 300, 264, 3793, 307, 1382, 281, 5039, 337, 11, 558, 30, 51686, 51686], "temperature": 0.0, "avg_logprob": -0.20695695720735144, "compression_ratio": 1.7538461538461538, "no_caption_prob": 2.2473870558314957e-05}, {"id": 587, "seek": 226624, "start": 2266.24, "end": 2270.8799999999997, "text": " And in the case of the TypeScript compiler, like what, what problem are they trying to", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 588, "seek": 226624, "start": 2270.8799999999997, "end": 2271.8799999999997, "text": " solve?", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 589, "seek": 226624, "start": 2271.8799999999997, "end": 2275.56, "text": " And if you get in the shoes of the compiler authors, the problem they're trying to solve", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 590, "seek": 226624, "start": 2275.56, "end": 2283.52, "text": " is well, we have an untyped language, JavaScript, and what we have, what does code do now?", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 591, "seek": 226624, "start": 2283.52, "end": 2285.2799999999997, "text": " Cause we want to fit into that.", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 592, "seek": 226624, "start": 2285.2799999999997, "end": 2294.16, "text": " Well, what people say, if value is no, else if type of string else if type of whatever,", "tokens": [50364, 400, 294, 264, 1389, 295, 264, 15576, 14237, 31958, 11, 411, 437, 11, 437, 1154, 366, 436, 1382, 281, 50596, 50596, 5039, 30, 50646, 50646, 400, 498, 291, 483, 294, 264, 6654, 295, 264, 31958, 16552, 11, 264, 1154, 436, 434, 1382, 281, 5039, 50830, 50830, 307, 731, 11, 321, 362, 364, 517, 874, 3452, 2856, 11, 15778, 11, 293, 437, 321, 362, 11, 437, 775, 3089, 360, 586, 30, 51228, 51228, 10865, 321, 528, 281, 3318, 666, 300, 13, 51316, 51316, 1042, 11, 437, 561, 584, 11, 498, 2158, 307, 572, 11, 1646, 498, 2010, 295, 6798, 1646, 498, 2010, 295, 2035, 11, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.17732683817545572, "compression_ratio": 1.7161572052401746, "no_caption_prob": 2.4681763534317724e-05}, {"id": 593, "seek": 229416, "start": 2294.16, "end": 2297.3599999999997, "text": " and you know, you can do that to, to check the types.", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 594, "seek": 229416, "start": 2297.3599999999997, "end": 2303.48, "text": " Well, okay, well we can do some, some control flow analysis to, to narrow the types in those", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 595, "seek": 229416, "start": 2303.48, "end": 2306.68, "text": " cases based on runtime checks.", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 596, "seek": 229416, "start": 2306.68, "end": 2311.7599999999998, "text": " Whereas Elm is a language built from the ground up to be a type safe and type checked.", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 597, "seek": 229416, "start": 2311.7599999999998, "end": 2318.16, "text": " And so Elm says, actually I have these constructs specifically for narrowing types.", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 598, "seek": 229416, "start": 2318.16, "end": 2322.92, "text": " And actually in, in Elm, a very important distinction between Elm and TypeScript is", "tokens": [50364, 293, 291, 458, 11, 291, 393, 360, 300, 281, 11, 281, 1520, 264, 3467, 13, 50524, 50524, 1042, 11, 1392, 11, 731, 321, 393, 360, 512, 11, 512, 1969, 3095, 5215, 281, 11, 281, 9432, 264, 3467, 294, 729, 50830, 50830, 3331, 2361, 322, 34474, 13834, 13, 50990, 50990, 13813, 2699, 76, 307, 257, 2856, 3094, 490, 264, 2727, 493, 281, 312, 257, 2010, 3273, 293, 2010, 10033, 13, 51244, 51244, 400, 370, 2699, 76, 1619, 11, 767, 286, 362, 613, 7690, 82, 4682, 337, 9432, 278, 3467, 13, 51564, 51564, 400, 767, 294, 11, 294, 2699, 76, 11, 257, 588, 1021, 16844, 1296, 2699, 76, 293, 15576, 14237, 307, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12059079555043004, "compression_ratio": 1.6875, "no_caption_prob": 7.527871275669895e-06}, {"id": 599, "seek": 232292, "start": 2322.92, "end": 2326.7000000000003, "text": " that Elm does not have untagged union types.", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 600, "seek": 232292, "start": 2326.7000000000003, "end": 2332.0, "text": " It only has tagged union types, which means, whereas in TypeScript you could say if type", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 601, "seek": 232292, "start": 2332.0, "end": 2337.08, "text": " of value equals, equals, equals string, then do something else.", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 602, "seek": 232292, "start": 2337.08, "end": 2342.04, "text": " If type of value equals, equals, equals object in Elm, there's no such thing because if it's", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 603, "seek": 232292, "start": 2342.04, "end": 2343.6800000000003, "text": " a string, it's a string.", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 604, "seek": 232292, "start": 2343.6800000000003, "end": 2346.6800000000003, "text": " If it's a maybe string, then okay.", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 605, "seek": 232292, "start": 2346.6800000000003, "end": 2350.84, "text": " Case of these two variants, but it's actually not a maybe string.", "tokens": [50364, 300, 2699, 76, 775, 406, 362, 1701, 559, 3004, 11671, 3467, 13, 50553, 50553, 467, 787, 575, 40239, 11671, 3467, 11, 597, 1355, 11, 9735, 294, 15576, 14237, 291, 727, 584, 498, 2010, 50818, 50818, 295, 2158, 6915, 11, 6915, 11, 6915, 6798, 11, 550, 360, 746, 1646, 13, 51072, 51072, 759, 2010, 295, 2158, 6915, 11, 6915, 11, 6915, 2657, 294, 2699, 76, 11, 456, 311, 572, 1270, 551, 570, 498, 309, 311, 51320, 51320, 257, 6798, 11, 309, 311, 257, 6798, 13, 51402, 51402, 759, 309, 311, 257, 1310, 6798, 11, 550, 1392, 13, 51552, 51552, 17791, 295, 613, 732, 21669, 11, 457, 309, 311, 767, 406, 257, 1310, 6798, 13, 51760, 51760], "temperature": 0.0, "avg_logprob": -0.10583322476118039, "compression_ratio": 1.9259259259259258, "no_caption_prob": 8.939615327108186e-06}, {"id": 606, "seek": 235084, "start": 2350.84, "end": 2356.84, "text": " It's a, it's a maybe with one of two variants, but it's not like a string or an object or", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 607, "seek": 235084, "start": 2356.84, "end": 2359.84, "text": " a it's only one type of thing.", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 608, "seek": 235084, "start": 2359.84, "end": 2363.28, "text": " You can't say it's a string or a number.", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 609, "seek": 235084, "start": 2363.28, "end": 2364.28, "text": " There's no such thing.", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 610, "seek": 235084, "start": 2364.28, "end": 2365.28, "text": " Yeah.", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 611, "seek": 235084, "start": 2365.28, "end": 2371.32, "text": " Which I think is actually a very cool feature of TypeScript that you can have a true union", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 612, "seek": 235084, "start": 2371.32, "end": 2377.8, "text": " in the sort of like mathematical set theory sense of the term where you could have a function", "tokens": [50364, 467, 311, 257, 11, 309, 311, 257, 1310, 365, 472, 295, 732, 21669, 11, 457, 309, 311, 406, 411, 257, 6798, 420, 364, 2657, 420, 50664, 50664, 257, 309, 311, 787, 472, 2010, 295, 551, 13, 50814, 50814, 509, 393, 380, 584, 309, 311, 257, 6798, 420, 257, 1230, 13, 50986, 50986, 821, 311, 572, 1270, 551, 13, 51036, 51036, 865, 13, 51086, 51086, 3013, 286, 519, 307, 767, 257, 588, 1627, 4111, 295, 15576, 14237, 300, 291, 393, 362, 257, 2074, 11671, 51388, 51388, 294, 264, 1333, 295, 411, 18894, 992, 5261, 2020, 295, 264, 1433, 689, 291, 727, 362, 257, 2445, 51712, 51712], "temperature": 0.0, "avg_logprob": -0.12571966759512357, "compression_ratio": 1.6666666666666667, "no_caption_prob": 6.048891009413637e-06}, {"id": 613, "seek": 237780, "start": 2377.8, "end": 2382.2400000000002, "text": " argument that accepts, you know, it accepts strings.", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 614, "seek": 237780, "start": 2382.2400000000002, "end": 2387.1200000000003, "text": " And then you say, actually, if you, if you pass null to it, it has a specific meaning.", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 615, "seek": 237780, "start": 2387.1200000000003, "end": 2393.04, "text": " And then you can keep all of the previous code compiling, but also accept a new type", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 616, "seek": 237780, "start": 2393.04, "end": 2396.28, "text": " that didn't compile before because it's a proper union.", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 617, "seek": 237780, "start": 2396.28, "end": 2401.48, "text": " Whereas in Elm, if you, if you were to change that suddenly all the code that was passing", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 618, "seek": 237780, "start": 2401.48, "end": 2404.52, "text": " in strings, now it has to be just string.", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 619, "seek": 237780, "start": 2404.52, "end": 2407.6000000000004, "text": " So everything has to put a tag in front of it now.", "tokens": [50364, 6770, 300, 33538, 11, 291, 458, 11, 309, 33538, 13985, 13, 50586, 50586, 400, 550, 291, 584, 11, 767, 11, 498, 291, 11, 498, 291, 1320, 18184, 281, 309, 11, 309, 575, 257, 2685, 3620, 13, 50830, 50830, 400, 550, 291, 393, 1066, 439, 295, 264, 3894, 3089, 715, 4883, 11, 457, 611, 3241, 257, 777, 2010, 51126, 51126, 300, 994, 380, 31413, 949, 570, 309, 311, 257, 2296, 11671, 13, 51288, 51288, 13813, 294, 2699, 76, 11, 498, 291, 11, 498, 291, 645, 281, 1319, 300, 5800, 439, 264, 3089, 300, 390, 8437, 51548, 51548, 294, 13985, 11, 586, 309, 575, 281, 312, 445, 6798, 13, 51700, 51700, 407, 1203, 575, 281, 829, 257, 6162, 294, 1868, 295, 309, 586, 13, 51854, 51854], "temperature": 0.0, "avg_logprob": -0.0773969226413303, "compression_ratio": 1.7604562737642586, "no_caption_prob": 1.130063901655376e-05}, {"id": 620, "seek": 240760, "start": 2407.6, "end": 2411.92, "text": " So I think that's like a pretty cool feature, but, but that's that's definitely one thing", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 621, "seek": 240760, "start": 2411.92, "end": 2418.44, "text": " to, to, you know, really try to understand is, is how much TypeScript is fitting into", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 622, "seek": 240760, "start": 2418.44, "end": 2420.96, "text": " runtime checks that you could do in JavaScript.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 623, "seek": 240760, "start": 2420.96, "end": 2423.44, "text": " And actually it does do in JavaScript.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 624, "seek": 240760, "start": 2423.44, "end": 2428.72, "text": " And then it's using control flow analysis to narrow the types within that, which is", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 625, "seek": 240760, "start": 2428.72, "end": 2431.0, "text": " very pragmatic and really, really neat.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 626, "seek": 240760, "start": 2431.0, "end": 2432.0, "text": " Yeah.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 627, "seek": 240760, "start": 2432.0, "end": 2436.16, "text": " I don't know if I like the string or null in practice.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 628, "seek": 240760, "start": 2436.16, "end": 2437.16, "text": " Yeah.", "tokens": [50364, 407, 286, 519, 300, 311, 411, 257, 1238, 1627, 4111, 11, 457, 11, 457, 300, 311, 300, 311, 2138, 472, 551, 50580, 50580, 281, 11, 281, 11, 291, 458, 11, 534, 853, 281, 1223, 307, 11, 307, 577, 709, 15576, 14237, 307, 15669, 666, 50906, 50906, 34474, 13834, 300, 291, 727, 360, 294, 15778, 13, 51032, 51032, 400, 767, 309, 775, 360, 294, 15778, 13, 51156, 51156, 400, 550, 309, 311, 1228, 1969, 3095, 5215, 281, 9432, 264, 3467, 1951, 300, 11, 597, 307, 51420, 51420, 588, 46904, 293, 534, 11, 534, 10654, 13, 51534, 51534, 865, 13, 51584, 51584, 286, 500, 380, 458, 498, 286, 411, 264, 6798, 420, 18184, 294, 3124, 13, 51792, 51792, 865, 13, 51842, 51842], "temperature": 0.0, "avg_logprob": -0.12980838681830734, "compression_ratio": 1.7030075187969924, "no_caption_prob": 8.939563485910185e-06}, {"id": 629, "seek": 243716, "start": 2437.16, "end": 2444.7999999999997, "text": " But I do think I do like the string or number or string or username, which I think is, I", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 630, "seek": 243716, "start": 2444.7999999999997, "end": 2446.56, "text": " think it's pretty neat.", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 631, "seek": 243716, "start": 2446.56, "end": 2450.96, "text": " As long as it compiles as a proper checks afterwards, which I imagine it does.", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 632, "seek": 243716, "start": 2450.96, "end": 2451.96, "text": " Yeah.", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 633, "seek": 243716, "start": 2451.96, "end": 2457.16, "text": " Well, be sure that you have strict null checks on that's another tsconfig.json option, which", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 634, "seek": 243716, "start": 2457.16, "end": 2459.56, "text": " I highly recommend just using strict mode.", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 635, "seek": 243716, "start": 2459.56, "end": 2462.7999999999997, "text": " And yeah.", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 636, "seek": 243716, "start": 2462.7999999999997, "end": 2466.08, "text": " Do you want to talk about nulls and then undefined in TypeScript?", "tokens": [50364, 583, 286, 360, 519, 286, 360, 411, 264, 6798, 420, 1230, 420, 6798, 420, 30351, 11, 597, 286, 519, 307, 11, 286, 50746, 50746, 519, 309, 311, 1238, 10654, 13, 50834, 50834, 1018, 938, 382, 309, 715, 4680, 382, 257, 2296, 13834, 10543, 11, 597, 286, 3811, 309, 775, 13, 51054, 51054, 865, 13, 51104, 51104, 1042, 11, 312, 988, 300, 291, 362, 10910, 18184, 13834, 322, 300, 311, 1071, 35492, 1671, 20646, 13, 73, 3015, 3614, 11, 597, 51364, 51364, 286, 5405, 2748, 445, 1228, 10910, 4391, 13, 51484, 51484, 400, 1338, 13, 51646, 51646, 1144, 291, 528, 281, 751, 466, 18184, 82, 293, 550, 674, 5666, 2001, 294, 15576, 14237, 30, 51810, 51810], "temperature": 0.0, "avg_logprob": -0.21434676341521433, "compression_ratio": 1.623015873015873, "no_caption_prob": 8.664499546284787e-06}, {"id": 637, "seek": 246608, "start": 2466.08, "end": 2468.24, "text": " Oh man.", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 638, "seek": 246608, "start": 2468.24, "end": 2469.24, "text": " Null and undefined.", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 639, "seek": 246608, "start": 2469.24, "end": 2472.24, "text": " Is it that bad?", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 640, "seek": 246608, "start": 2472.24, "end": 2478.2799999999997, "text": " Well, it always just throws me off how there are these two different ways to represent", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 641, "seek": 246608, "start": 2478.2799999999997, "end": 2480.4, "text": " this thing, but yeah, I don't know.", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 642, "seek": 246608, "start": 2480.4, "end": 2481.4, "text": " I don't know.", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 643, "seek": 246608, "start": 2481.4, "end": 2488.24, "text": " I don't know if I have that much to say about it other than why, why do we have two different", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 644, "seek": 246608, "start": 2488.24, "end": 2494.16, "text": " ways to represent absence of values?", "tokens": [50364, 876, 587, 13, 50472, 50472, 426, 858, 293, 674, 5666, 2001, 13, 50522, 50522, 1119, 309, 300, 1578, 30, 50672, 50672, 1042, 11, 309, 1009, 445, 19251, 385, 766, 577, 456, 366, 613, 732, 819, 2098, 281, 2906, 50974, 50974, 341, 551, 11, 457, 1338, 11, 286, 500, 380, 458, 13, 51080, 51080, 286, 500, 380, 458, 13, 51130, 51130, 286, 500, 380, 458, 498, 286, 362, 300, 709, 281, 584, 466, 309, 661, 813, 983, 11, 983, 360, 321, 362, 732, 819, 51472, 51472, 2098, 281, 2906, 17145, 295, 4190, 30, 51768, 51768], "temperature": 0.0, "avg_logprob": -0.22174477577209473, "compression_ratio": 1.718232044198895, "no_caption_prob": 1.8924367395811714e-05}, {"id": 645, "seek": 249416, "start": 2494.16, "end": 2500.68, "text": " My, what I always find interesting with JavaScript, not TypeScript, JavaScript is that zero divided", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 646, "seek": 249416, "start": 2500.68, "end": 2503.2, "text": " by zero is not a number.", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 647, "seek": 249416, "start": 2503.2, "end": 2509.3999999999996, "text": " It's an N. But if you look at what the mathematicians say, they say it's undefined.", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 648, "seek": 249416, "start": 2509.3999999999996, "end": 2517.0, "text": " Even in JavaScript, like the only language that has undefined, but even there it isn't", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 649, "seek": 249416, "start": 2517.0, "end": 2518.0, "text": " undefined.", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 650, "seek": 249416, "start": 2518.0, "end": 2520.16, "text": " It's just N.", "tokens": [50364, 1222, 11, 437, 286, 1009, 915, 1880, 365, 15778, 11, 406, 15576, 14237, 11, 15778, 307, 300, 4018, 6666, 50690, 50690, 538, 4018, 307, 406, 257, 1230, 13, 50816, 50816, 467, 311, 364, 426, 13, 583, 498, 291, 574, 412, 437, 264, 32811, 2567, 584, 11, 436, 584, 309, 311, 674, 5666, 2001, 13, 51126, 51126, 2754, 294, 15778, 11, 411, 264, 787, 2856, 300, 575, 674, 5666, 2001, 11, 457, 754, 456, 309, 1943, 380, 51506, 51506, 674, 5666, 2001, 13, 51556, 51556, 467, 311, 445, 426, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.27324793415684856, "compression_ratio": 1.5870646766169154, "no_caption_prob": 3.0717565095983446e-05}, {"id": 651, "seek": 252016, "start": 2520.16, "end": 2525.12, "text": " If you're a mathematician and you go to write some JavaScript code, let's just say you're", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 652, "seek": 252016, "start": 2525.12, "end": 2528.1, "text": " probably going to be pretty confused.", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 653, "seek": 252016, "start": 2528.1, "end": 2534.04, "text": " You'll be like using an equals operator to like change the values of things.", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 654, "seek": 252016, "start": 2534.04, "end": 2538.2, "text": " And you're like, hmm, I don't think that's what equals means.", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 655, "seek": 252016, "start": 2538.2, "end": 2541.8399999999997, "text": " And then it's like, oh, are you, are you thinking of triple equals?", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 656, "seek": 252016, "start": 2541.8399999999997, "end": 2544.04, "text": " It's like, what is triple equals?", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 657, "seek": 252016, "start": 2544.04, "end": 2545.04, "text": " Wait, triple?", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 658, "seek": 252016, "start": 2545.04, "end": 2548.04, "text": " Are there no double equals?", "tokens": [50364, 759, 291, 434, 257, 48281, 293, 291, 352, 281, 2464, 512, 15778, 3089, 11, 718, 311, 445, 584, 291, 434, 50612, 50612, 1391, 516, 281, 312, 1238, 9019, 13, 50761, 50761, 509, 603, 312, 411, 1228, 364, 6915, 12973, 281, 411, 1319, 264, 4190, 295, 721, 13, 51058, 51058, 400, 291, 434, 411, 11, 16478, 11, 286, 500, 380, 519, 300, 311, 437, 6915, 1355, 13, 51266, 51266, 400, 550, 309, 311, 411, 11, 1954, 11, 366, 291, 11, 366, 291, 1953, 295, 15508, 6915, 30, 51448, 51448, 467, 311, 411, 11, 437, 307, 15508, 6915, 30, 51558, 51558, 3802, 11, 15508, 30, 51608, 51608, 2014, 456, 572, 3834, 6915, 30, 51758, 51758], "temperature": 0.0, "avg_logprob": -0.20654902250870413, "compression_ratio": 1.729957805907173, "no_caption_prob": 5.064215656602755e-05}, {"id": 659, "seek": 254804, "start": 2548.04, "end": 2551.04, "text": " Oh, we don't use that.", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 660, "seek": 254804, "start": 2551.04, "end": 2555.24, "text": " Yeah, no, that's rubbish.", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 661, "seek": 254804, "start": 2555.24, "end": 2558.12, "text": " Until how many equal signs does it go?", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 662, "seek": 254804, "start": 2558.12, "end": 2559.12, "text": " Five, six?", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 663, "seek": 254804, "start": 2559.12, "end": 2560.12, "text": " Yeah.", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 664, "seek": 254804, "start": 2560.12, "end": 2563.2799999999997, "text": " We use linting checks to disable double equals.", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 665, "seek": 254804, "start": 2563.2799999999997, "end": 2565.22, "text": " It's a bug if you use double equals.", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 666, "seek": 254804, "start": 2565.22, "end": 2568.38, "text": " Do you say something like equal with an exponent?", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 667, "seek": 254804, "start": 2568.38, "end": 2572.88, "text": " Like equals to the power of three to say triple equals?", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 668, "seek": 254804, "start": 2572.88, "end": 2576.24, "text": " Or three equal?", "tokens": [50364, 876, 11, 321, 500, 380, 764, 300, 13, 50514, 50514, 865, 11, 572, 11, 300, 311, 29978, 13, 50724, 50724, 9088, 577, 867, 2681, 7880, 775, 309, 352, 30, 50868, 50868, 9436, 11, 2309, 30, 50918, 50918, 865, 13, 50968, 50968, 492, 764, 287, 686, 278, 13834, 281, 28362, 3834, 6915, 13, 51126, 51126, 467, 311, 257, 7426, 498, 291, 764, 3834, 6915, 13, 51223, 51223, 1144, 291, 584, 746, 411, 2681, 365, 364, 37871, 30, 51381, 51381, 1743, 6915, 281, 264, 1347, 295, 1045, 281, 584, 15508, 6915, 30, 51606, 51606, 1610, 1045, 2681, 30, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.31136896133422853, "compression_ratio": 1.5628140703517588, "no_caption_prob": 2.0145249436609447e-05}, {"id": 669, "seek": 257624, "start": 2576.24, "end": 2583.68, "text": " What I'm wondering about, and maybe this is just a simple lookup documentation type of", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 670, "seek": 257624, "start": 2583.68, "end": 2590.16, "text": " question, but if you say something like string or null, does a null mean it's the null value?", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 671, "seek": 257624, "start": 2590.16, "end": 2591.16, "text": " Yes.", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 672, "seek": 257624, "start": 2591.16, "end": 2593.8399999999997, "text": " Or it is null or undefined?", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 673, "seek": 257624, "start": 2593.8399999999997, "end": 2594.8399999999997, "text": " It's null.", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 674, "seek": 257624, "start": 2594.8399999999997, "end": 2595.8399999999997, "text": " Okay.", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 675, "seek": 257624, "start": 2595.8399999999997, "end": 2603.52, "text": " That I find pretty weird because a lot of things, and I see null everywhere in TypeScript,", "tokens": [50364, 708, 286, 478, 6359, 466, 11, 293, 1310, 341, 307, 445, 257, 2199, 574, 1010, 14333, 2010, 295, 50736, 50736, 1168, 11, 457, 498, 291, 584, 746, 411, 6798, 420, 18184, 11, 775, 257, 18184, 914, 309, 311, 264, 18184, 2158, 30, 51060, 51060, 1079, 13, 51110, 51110, 1610, 309, 307, 18184, 420, 674, 5666, 2001, 30, 51244, 51244, 467, 311, 18184, 13, 51294, 51294, 1033, 13, 51344, 51344, 663, 286, 915, 1238, 3657, 570, 257, 688, 295, 721, 11, 293, 286, 536, 18184, 5315, 294, 15576, 14237, 11, 51728, 51728], "temperature": 0.0, "avg_logprob": -0.21212643449024488, "compression_ratio": 1.4724770642201834, "no_caption_prob": 6.10821953159757e-05}, {"id": 676, "seek": 260352, "start": 2603.52, "end": 2609.28, "text": " but I also know that undefined is used everywhere because you're missing arguments or stuff", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 677, "seek": 260352, "start": 2609.28, "end": 2610.28, "text": " like that.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 678, "seek": 260352, "start": 2610.28, "end": 2611.28, "text": " Right.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 679, "seek": 260352, "start": 2611.28, "end": 2615.88, "text": " Missing arguments, you look something up in an object and it doesn't contain the key.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 680, "seek": 260352, "start": 2615.88, "end": 2618.2, "text": " But then you get undefined, you don't get null.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 681, "seek": 260352, "start": 2618.2, "end": 2619.2, "text": " Correct.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 682, "seek": 260352, "start": 2619.2, "end": 2620.96, "text": " So does TypeScript tell you about those?", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 683, "seek": 260352, "start": 2620.96, "end": 2622.88, "text": " Like, oh, this is probably null.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 684, "seek": 260352, "start": 2622.88, "end": 2623.88, "text": " That's a good question.", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 685, "seek": 260352, "start": 2623.88, "end": 2628.92, "text": " I mean, for all intents and purposes, they're going to be similar because a lot of the time", "tokens": [50364, 457, 286, 611, 458, 300, 674, 5666, 2001, 307, 1143, 5315, 570, 291, 434, 5361, 12869, 420, 1507, 50652, 50652, 411, 300, 13, 50702, 50702, 1779, 13, 50752, 50752, 5275, 278, 12869, 11, 291, 574, 746, 493, 294, 364, 2657, 293, 309, 1177, 380, 5304, 264, 2141, 13, 50982, 50982, 583, 550, 291, 483, 674, 5666, 2001, 11, 291, 500, 380, 483, 18184, 13, 51098, 51098, 12753, 13, 51148, 51148, 407, 775, 15576, 14237, 980, 291, 466, 729, 30, 51236, 51236, 1743, 11, 1954, 11, 341, 307, 1391, 18184, 13, 51332, 51332, 663, 311, 257, 665, 1168, 13, 51382, 51382, 286, 914, 11, 337, 439, 560, 791, 293, 9932, 11, 436, 434, 516, 281, 312, 2531, 570, 257, 688, 295, 264, 565, 51634, 51634], "temperature": 0.0, "avg_logprob": -0.1662895263187469, "compression_ratio": 1.6072727272727272, "no_caption_prob": 2.6688016077969223e-05}, {"id": 686, "seek": 262892, "start": 2628.92, "end": 2634.96, "text": " you're going to say, I mean, if you do, a lot of the time you're going to say if value", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 687, "seek": 262892, "start": 2634.96, "end": 2643.2400000000002, "text": " then, and so it doesn't matter because it's checking truthiness, not strict equality.", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 688, "seek": 262892, "start": 2643.2400000000002, "end": 2644.2400000000002, "text": " Poor number zero.", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 689, "seek": 262892, "start": 2644.2400000000002, "end": 2645.2400000000002, "text": " Oh my gosh.", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 690, "seek": 262892, "start": 2645.2400000000002, "end": 2646.2400000000002, "text": " Poor empty string.", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 691, "seek": 262892, "start": 2646.2400000000002, "end": 2655.28, "text": " It makes me so happy writing Elm and not having to think about which ones evaluate to false", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 692, "seek": 262892, "start": 2655.28, "end": 2657.48, "text": " and which ones evaluate to true.", "tokens": [50364, 291, 434, 516, 281, 584, 11, 286, 914, 11, 498, 291, 360, 11, 257, 688, 295, 264, 565, 291, 434, 516, 281, 584, 498, 2158, 50666, 50666, 550, 11, 293, 370, 309, 1177, 380, 1871, 570, 309, 311, 8568, 3494, 1324, 11, 406, 10910, 14949, 13, 51080, 51080, 23591, 1230, 4018, 13, 51130, 51130, 876, 452, 6502, 13, 51180, 51180, 23591, 6707, 6798, 13, 51230, 51230, 467, 1669, 385, 370, 2055, 3579, 2699, 76, 293, 406, 1419, 281, 519, 466, 597, 2306, 13059, 281, 7908, 51682, 51682, 293, 597, 2306, 13059, 281, 2074, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.1913984454407984, "compression_ratio": 1.6476190476190475, "no_caption_prob": 4.908358823740855e-05}, {"id": 693, "seek": 265748, "start": 2657.48, "end": 2659.96, "text": " I will never trust myself with those things.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 694, "seek": 265748, "start": 2659.96, "end": 2665.16, "text": " I'll never trust myself with those things and I will never trust myself with precedents", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 695, "seek": 265748, "start": 2665.16, "end": 2667.84, "text": " of or and end and things like that.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 696, "seek": 265748, "start": 2667.84, "end": 2674.32, "text": " Like in Elm, I always write it with parentheses and then let Elm format say, you don't need", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 697, "seek": 265748, "start": 2674.32, "end": 2675.32, "text": " those there.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 698, "seek": 265748, "start": 2675.32, "end": 2677.0, "text": " The precedence rules will take care of that.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 699, "seek": 265748, "start": 2677.0, "end": 2682.44, "text": " I'm like, okay, but at least I saw you do that and I knew what the precedence was before", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 700, "seek": 265748, "start": 2682.44, "end": 2683.44, "text": " I hit save.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 701, "seek": 265748, "start": 2683.44, "end": 2686.44, "text": " I do the same thing.", "tokens": [50364, 286, 486, 1128, 3361, 2059, 365, 729, 721, 13, 50488, 50488, 286, 603, 1128, 3361, 2059, 365, 729, 721, 293, 286, 486, 1128, 3361, 2059, 365, 16969, 791, 50748, 50748, 295, 420, 293, 917, 293, 721, 411, 300, 13, 50882, 50882, 1743, 294, 2699, 76, 11, 286, 1009, 2464, 309, 365, 34153, 293, 550, 718, 2699, 76, 7877, 584, 11, 291, 500, 380, 643, 51206, 51206, 729, 456, 13, 51256, 51256, 440, 16969, 655, 4474, 486, 747, 1127, 295, 300, 13, 51340, 51340, 286, 478, 411, 11, 1392, 11, 457, 412, 1935, 286, 1866, 291, 360, 300, 293, 286, 2586, 437, 264, 16969, 655, 390, 949, 51612, 51612, 286, 2045, 3155, 13, 51662, 51662, 286, 360, 264, 912, 551, 13, 51812, 51812], "temperature": 0.0, "avg_logprob": -0.16638957300493795, "compression_ratio": 1.9469026548672566, "no_caption_prob": 3.321306940051727e-05}, {"id": 702, "seek": 268644, "start": 2686.44, "end": 2692.6, "text": " So TypeScript also has the void type.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 703, "seek": 268644, "start": 2692.6, "end": 2698.16, "text": " We don't because that is absolutely useless.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 704, "seek": 268644, "start": 2698.16, "end": 2701.08, "text": " So void means, hey, I'm going to do a side effects.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 705, "seek": 268644, "start": 2701.08, "end": 2702.08, "text": " Exactly.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 706, "seek": 268644, "start": 2702.08, "end": 2703.68, "text": " There are no side effects in Elm.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 707, "seek": 268644, "start": 2703.68, "end": 2705.88, "text": " I think void is short for avoid.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 708, "seek": 268644, "start": 2705.88, "end": 2710.84, "text": " I'm fine with it.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 709, "seek": 268644, "start": 2710.84, "end": 2713.04, "text": " I needed one pun in the show.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 710, "seek": 268644, "start": 2713.04, "end": 2714.04, "text": " Come on.", "tokens": [50364, 407, 15576, 14237, 611, 575, 264, 22009, 2010, 13, 50672, 50672, 492, 500, 380, 570, 300, 307, 3122, 14115, 13, 50950, 50950, 407, 22009, 1355, 11, 4177, 11, 286, 478, 516, 281, 360, 257, 1252, 5065, 13, 51096, 51096, 7587, 13, 51146, 51146, 821, 366, 572, 1252, 5065, 294, 2699, 76, 13, 51226, 51226, 286, 519, 22009, 307, 2099, 337, 5042, 13, 51336, 51336, 286, 478, 2489, 365, 309, 13, 51584, 51584, 286, 2978, 472, 4468, 294, 264, 855, 13, 51694, 51694, 2492, 322, 13, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.3443010523078147, "compression_ratio": 1.451086956521739, "no_caption_prob": 4.198525857646018e-05}, {"id": 711, "seek": 271404, "start": 2714.04, "end": 2725.92, "text": " What I find interesting, but also entirely normal because of the soundness argument that", "tokens": [50364, 708, 286, 915, 1880, 11, 457, 611, 7696, 2710, 570, 295, 264, 1626, 1287, 6770, 300, 50958, 50958, 321, 2825, 466, 949, 11, 307, 300, 456, 366, 572, 3467, 337, 22847, 293, 456, 366, 572, 3467, 51264, 51264, 337, 5120, 763, 13, 51408, 51408, 407, 456, 311, 257, 688, 295, 721, 300, 291, 360, 294, 15576, 14237, 300, 360, 406, 5031, 4103, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2061778253583766, "compression_ratio": 1.5875706214689265, "no_caption_prob": 6.204647797858343e-05}, {"id": 712, "seek": 271404, "start": 2725.92, "end": 2732.04, "text": " we talked about before, is that there are no types for exceptions and there are no types", "tokens": [50364, 708, 286, 915, 1880, 11, 457, 611, 7696, 2710, 570, 295, 264, 1626, 1287, 6770, 300, 50958, 50958, 321, 2825, 466, 949, 11, 307, 300, 456, 366, 572, 3467, 337, 22847, 293, 456, 366, 572, 3467, 51264, 51264, 337, 5120, 763, 13, 51408, 51408, 407, 456, 311, 257, 688, 295, 721, 300, 291, 360, 294, 15576, 14237, 300, 360, 406, 5031, 4103, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2061778253583766, "compression_ratio": 1.5875706214689265, "no_caption_prob": 6.204647797858343e-05}, {"id": 713, "seek": 271404, "start": 2732.04, "end": 2734.92, "text": " for experimentations.", "tokens": [50364, 708, 286, 915, 1880, 11, 457, 611, 7696, 2710, 570, 295, 264, 1626, 1287, 6770, 300, 50958, 50958, 321, 2825, 466, 949, 11, 307, 300, 456, 366, 572, 3467, 337, 22847, 293, 456, 366, 572, 3467, 51264, 51264, 337, 5120, 763, 13, 51408, 51408, 407, 456, 311, 257, 688, 295, 721, 300, 291, 360, 294, 15576, 14237, 300, 360, 406, 5031, 4103, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2061778253583766, "compression_ratio": 1.5875706214689265, "no_caption_prob": 6.204647797858343e-05}, {"id": 714, "seek": 271404, "start": 2734.92, "end": 2740.96, "text": " So there's a lot of things that you do in TypeScript that do not reflect reality.", "tokens": [50364, 708, 286, 915, 1880, 11, 457, 611, 7696, 2710, 570, 295, 264, 1626, 1287, 6770, 300, 50958, 50958, 321, 2825, 466, 949, 11, 307, 300, 456, 366, 572, 3467, 337, 22847, 293, 456, 366, 572, 3467, 51264, 51264, 337, 5120, 763, 13, 51408, 51408, 407, 456, 311, 257, 688, 295, 721, 300, 291, 360, 294, 15576, 14237, 300, 360, 406, 5031, 4103, 13, 51710, 51710], "temperature": 0.0, "avg_logprob": -0.2061778253583766, "compression_ratio": 1.5875706214689265, "no_caption_prob": 6.204647797858343e-05}, {"id": 715, "seek": 274096, "start": 2740.96, "end": 2748.0, "text": " I feel like exceptions could have been documented, could have been annotated, at least somehow", "tokens": [50364, 286, 841, 411, 22847, 727, 362, 668, 23007, 11, 727, 362, 668, 25339, 770, 11, 412, 1935, 6063, 50716, 50716, 281, 584, 11, 4177, 11, 286, 393, 10815, 291, 300, 341, 486, 976, 291, 364, 11183, 293, 341, 486, 312, 51024, 51024, 264, 2010, 13, 51214, 51214, 286, 519, 300, 576, 312, 534, 1627, 886, 13, 51298, 51298, 286, 519, 309, 311, 1391, 445, 257, 46904, 3922, 300, 456, 366, 370, 867, 3190, 689, 22847, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1433342076555083, "compression_ratio": 1.6910994764397906, "no_caption_prob": 6.605048838537186e-05}, {"id": 716, "seek": 274096, "start": 2748.0, "end": 2754.16, "text": " to say, hey, I can guarantee you that this will give you an exception and this will be", "tokens": [50364, 286, 841, 411, 22847, 727, 362, 668, 23007, 11, 727, 362, 668, 25339, 770, 11, 412, 1935, 6063, 50716, 50716, 281, 584, 11, 4177, 11, 286, 393, 10815, 291, 300, 341, 486, 976, 291, 364, 11183, 293, 341, 486, 312, 51024, 51024, 264, 2010, 13, 51214, 51214, 286, 519, 300, 576, 312, 534, 1627, 886, 13, 51298, 51298, 286, 519, 309, 311, 1391, 445, 257, 46904, 3922, 300, 456, 366, 370, 867, 3190, 689, 22847, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1433342076555083, "compression_ratio": 1.6910994764397906, "no_caption_prob": 6.605048838537186e-05}, {"id": 717, "seek": 274096, "start": 2754.16, "end": 2757.96, "text": " the type.", "tokens": [50364, 286, 841, 411, 22847, 727, 362, 668, 23007, 11, 727, 362, 668, 25339, 770, 11, 412, 1935, 6063, 50716, 50716, 281, 584, 11, 4177, 11, 286, 393, 10815, 291, 300, 341, 486, 976, 291, 364, 11183, 293, 341, 486, 312, 51024, 51024, 264, 2010, 13, 51214, 51214, 286, 519, 300, 576, 312, 534, 1627, 886, 13, 51298, 51298, 286, 519, 309, 311, 1391, 445, 257, 46904, 3922, 300, 456, 366, 370, 867, 3190, 689, 22847, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1433342076555083, "compression_ratio": 1.6910994764397906, "no_caption_prob": 6.605048838537186e-05}, {"id": 718, "seek": 274096, "start": 2757.96, "end": 2759.64, "text": " I think that would be really cool too.", "tokens": [50364, 286, 841, 411, 22847, 727, 362, 668, 23007, 11, 727, 362, 668, 25339, 770, 11, 412, 1935, 6063, 50716, 50716, 281, 584, 11, 4177, 11, 286, 393, 10815, 291, 300, 341, 486, 976, 291, 364, 11183, 293, 341, 486, 312, 51024, 51024, 264, 2010, 13, 51214, 51214, 286, 519, 300, 576, 312, 534, 1627, 886, 13, 51298, 51298, 286, 519, 309, 311, 1391, 445, 257, 46904, 3922, 300, 456, 366, 370, 867, 3190, 689, 22847, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1433342076555083, "compression_ratio": 1.6910994764397906, "no_caption_prob": 6.605048838537186e-05}, {"id": 719, "seek": 274096, "start": 2759.64, "end": 2768.04, "text": " I think it's probably just a pragmatic choice that there are so many places where exceptions", "tokens": [50364, 286, 841, 411, 22847, 727, 362, 668, 23007, 11, 727, 362, 668, 25339, 770, 11, 412, 1935, 6063, 50716, 50716, 281, 584, 11, 4177, 11, 286, 393, 10815, 291, 300, 341, 486, 976, 291, 364, 11183, 293, 341, 486, 312, 51024, 51024, 264, 2010, 13, 51214, 51214, 286, 519, 300, 576, 312, 534, 1627, 886, 13, 51298, 51298, 286, 519, 309, 311, 1391, 445, 257, 46904, 3922, 300, 456, 366, 370, 867, 3190, 689, 22847, 51718, 51718], "temperature": 0.0, "avg_logprob": -0.1433342076555083, "compression_ratio": 1.6910994764397906, "no_caption_prob": 6.605048838537186e-05}, {"id": 720, "seek": 276804, "start": 2768.04, "end": 2775.04, "text": " throw the same type of error or exceptions throw a string or the place that throws an", "tokens": [50364, 3507, 264, 912, 2010, 295, 6713, 420, 22847, 3507, 257, 6798, 420, 264, 1081, 300, 19251, 364, 50714, 50714, 11183, 307, 1348, 490, 257, 6405, 300, 1177, 380, 362, 2125, 1109, 13, 51062, 51062, 583, 10745, 575, 341, 10710, 295, 18033, 420, 10033, 22847, 293, 550, 456, 311, 611, 34474, 22847, 13, 51431, 51431], "temperature": 0.0, "avg_logprob": -0.144694379397801, "compression_ratio": 1.5833333333333333, "no_caption_prob": 3.373615618329495e-05}, {"id": 721, "seek": 276804, "start": 2775.04, "end": 2782.0, "text": " exception is coming from a library that doesn't have typings.", "tokens": [50364, 3507, 264, 912, 2010, 295, 6713, 420, 22847, 3507, 257, 6798, 420, 264, 1081, 300, 19251, 364, 50714, 50714, 11183, 307, 1348, 490, 257, 6405, 300, 1177, 380, 362, 2125, 1109, 13, 51062, 51062, 583, 10745, 575, 341, 10710, 295, 18033, 420, 10033, 22847, 293, 550, 456, 311, 611, 34474, 22847, 13, 51431, 51431], "temperature": 0.0, "avg_logprob": -0.144694379397801, "compression_ratio": 1.5833333333333333, "no_caption_prob": 3.373615618329495e-05}, {"id": 722, "seek": 276804, "start": 2782.0, "end": 2789.38, "text": " But Java has this notion of handled or checked exceptions and then there's also runtime exceptions.", "tokens": [50364, 3507, 264, 912, 2010, 295, 6713, 420, 22847, 3507, 257, 6798, 420, 264, 1081, 300, 19251, 364, 50714, 50714, 11183, 307, 1348, 490, 257, 6405, 300, 1177, 380, 362, 2125, 1109, 13, 51062, 51062, 583, 10745, 575, 341, 10710, 295, 18033, 420, 10033, 22847, 293, 550, 456, 311, 611, 34474, 22847, 13, 51431, 51431], "temperature": 0.0, "avg_logprob": -0.144694379397801, "compression_ratio": 1.5833333333333333, "no_caption_prob": 3.373615618329495e-05}, {"id": 723, "seek": 278938, "start": 2789.38, "end": 2798.2400000000002, "text": " So it's kind of weird because you get this specific set of types of exceptions that can", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 724, "seek": 278938, "start": 2798.2400000000002, "end": 2803.56, "text": " be thrown and exceptions that are handled.", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 725, "seek": 278938, "start": 2803.56, "end": 2809.12, "text": " That's cool, but then you throw something that's a subtype of runtime exception and", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 726, "seek": 278938, "start": 2809.12, "end": 2811.12, "text": " it doesn't have to tell you about that.", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 727, "seek": 278938, "start": 2811.12, "end": 2817.8, "text": " Because the idea I guess is like, well, these are things that are unexpected and unrecoverable", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 728, "seek": 278938, "start": 2817.8, "end": 2818.84, "text": " or something like that.", "tokens": [50364, 407, 309, 311, 733, 295, 3657, 570, 291, 483, 341, 2685, 992, 295, 3467, 295, 22847, 300, 393, 50807, 50807, 312, 11732, 293, 22847, 300, 366, 18033, 13, 51073, 51073, 663, 311, 1627, 11, 457, 550, 291, 3507, 746, 300, 311, 257, 1422, 20467, 295, 34474, 11183, 293, 51351, 51351, 309, 1177, 380, 362, 281, 980, 291, 466, 300, 13, 51451, 51451, 1436, 264, 1558, 286, 2041, 307, 411, 11, 731, 11, 613, 366, 721, 300, 366, 13106, 293, 20584, 12516, 712, 51785, 51785, 420, 746, 411, 300, 13, 51837, 51837], "temperature": 0.0, "avg_logprob": -0.14793131428380166, "compression_ratio": 1.6954545454545455, "no_caption_prob": 7.888887012086343e-06}, {"id": 729, "seek": 281884, "start": 2818.84, "end": 2823.96, "text": " So it wanted to have an escape patch to be able to say, hey, if I'm trying to read a", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 730, "seek": 281884, "start": 2823.96, "end": 2832.56, "text": " file and the hard drive isn't working, I don't want to make every user handle that state.", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 731, "seek": 281884, "start": 2832.56, "end": 2833.56, "text": " But I don't know.", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 732, "seek": 281884, "start": 2833.56, "end": 2839.44, "text": " I mean, yeah, I think it's really nice that Elm lets you be so explicit that they're just", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 733, "seek": 281884, "start": 2839.44, "end": 2840.44, "text": " types.", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 734, "seek": 281884, "start": 2840.44, "end": 2845.88, "text": " And if you don't want to handle something, then you at least have to be explicit in doing", "tokens": [50364, 407, 309, 1415, 281, 362, 364, 7615, 9972, 281, 312, 1075, 281, 584, 11, 4177, 11, 498, 286, 478, 1382, 281, 1401, 257, 50620, 50620, 3991, 293, 264, 1152, 3332, 1943, 380, 1364, 11, 286, 500, 380, 528, 281, 652, 633, 4195, 4813, 300, 1785, 13, 51050, 51050, 583, 286, 500, 380, 458, 13, 51100, 51100, 286, 914, 11, 1338, 11, 286, 519, 309, 311, 534, 1481, 300, 2699, 76, 6653, 291, 312, 370, 13691, 300, 436, 434, 445, 51394, 51394, 3467, 13, 51444, 51444, 400, 498, 291, 500, 380, 528, 281, 4813, 746, 11, 550, 291, 412, 1935, 362, 281, 312, 13691, 294, 884, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.09198624497159906, "compression_ratio": 1.6127659574468085, "no_caption_prob": 3.4465394946892047e-06}, {"id": 735, "seek": 284588, "start": 2845.88, "end": 2848.84, "text": " a catchall or whatever you want to do to pass that through.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 736, "seek": 284588, "start": 2848.84, "end": 2854.7200000000003, "text": " But yeah, I mean, TypeScript made the choice to not have a notion of sort of checked exceptions.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 737, "seek": 284588, "start": 2854.7200000000003, "end": 2857.2400000000002, "text": " And I agree, I think it would be cool.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 738, "seek": 284588, "start": 2857.2400000000002, "end": 2861.92, "text": " It would be a nice feature, but I'm not sure if there are any plans for something like", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 739, "seek": 284588, "start": 2861.92, "end": 2862.92, "text": " that.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 740, "seek": 284588, "start": 2862.92, "end": 2868.48, "text": " But so that is another blind spot of the TypeScript type system.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 741, "seek": 284588, "start": 2868.48, "end": 2870.2400000000002, "text": " Is it in your blog post?", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 742, "seek": 284588, "start": 2870.2400000000002, "end": 2871.2400000000002, "text": " It is.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 743, "seek": 284588, "start": 2871.2400000000002, "end": 2872.2400000000002, "text": " Okay, good.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 744, "seek": 284588, "start": 2872.2400000000002, "end": 2873.2400000000002, "text": " You did a good job, Dillon.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 745, "seek": 284588, "start": 2873.2400000000002, "end": 2874.2400000000002, "text": " It's it.", "tokens": [50364, 257, 3745, 336, 420, 2035, 291, 528, 281, 360, 281, 1320, 300, 807, 13, 50512, 50512, 583, 1338, 11, 286, 914, 11, 15576, 14237, 1027, 264, 3922, 281, 406, 362, 257, 10710, 295, 1333, 295, 10033, 22847, 13, 50806, 50806, 400, 286, 3986, 11, 286, 519, 309, 576, 312, 1627, 13, 50932, 50932, 467, 576, 312, 257, 1481, 4111, 11, 457, 286, 478, 406, 988, 498, 456, 366, 604, 5482, 337, 746, 411, 51166, 51166, 300, 13, 51216, 51216, 583, 370, 300, 307, 1071, 6865, 4008, 295, 264, 15576, 14237, 2010, 1185, 13, 51494, 51494, 1119, 309, 294, 428, 6968, 2183, 30, 51582, 51582, 467, 307, 13, 51632, 51632, 1033, 11, 665, 13, 51682, 51682, 509, 630, 257, 665, 1691, 11, 28160, 13, 51732, 51732, 467, 311, 309, 13, 51782, 51782], "temperature": 0.0, "avg_logprob": -0.16861310399564586, "compression_ratio": 1.5919117647058822, "no_caption_prob": 2.796875560306944e-05}, {"id": 746, "seek": 287424, "start": 2874.24, "end": 2879.9199999999996, "text": " It's my catalog of places you can introduce unsoundness.", "tokens": [50364, 467, 311, 452, 19746, 295, 3190, 291, 393, 5366, 2693, 554, 1287, 13, 50648, 50648, 759, 291, 915, 746, 300, 311, 406, 294, 456, 11, 1767, 718, 385, 458, 570, 286, 603, 853, 281, 1066, 50852, 50852, 309, 493, 281, 4002, 365, 604, 661, 721, 561, 519, 295, 13, 51048, 51048, 407, 1392, 11, 370, 949, 321, 2413, 11, 286, 519, 309, 576, 312, 1481, 281, 1310, 321, 393, 352, 807, 341, 19746, 13, 51408, 51408, 583, 472, 544, 551, 286, 1415, 281, 2557, 322, 307, 411, 341, 2649, 294, 264, 2699, 76, 293, 15576, 14237, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13384222030639648, "compression_ratio": 1.5720164609053497, "no_caption_prob": 3.763432687264867e-05}, {"id": 747, "seek": 287424, "start": 2879.9199999999996, "end": 2884.0, "text": " If you find something that's not in there, please let me know because I'll try to keep", "tokens": [50364, 467, 311, 452, 19746, 295, 3190, 291, 393, 5366, 2693, 554, 1287, 13, 50648, 50648, 759, 291, 915, 746, 300, 311, 406, 294, 456, 11, 1767, 718, 385, 458, 570, 286, 603, 853, 281, 1066, 50852, 50852, 309, 493, 281, 4002, 365, 604, 661, 721, 561, 519, 295, 13, 51048, 51048, 407, 1392, 11, 370, 949, 321, 2413, 11, 286, 519, 309, 576, 312, 1481, 281, 1310, 321, 393, 352, 807, 341, 19746, 13, 51408, 51408, 583, 472, 544, 551, 286, 1415, 281, 2557, 322, 307, 411, 341, 2649, 294, 264, 2699, 76, 293, 15576, 14237, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13384222030639648, "compression_ratio": 1.5720164609053497, "no_caption_prob": 3.763432687264867e-05}, {"id": 748, "seek": 287424, "start": 2884.0, "end": 2887.9199999999996, "text": " it up to date with any other things people think of.", "tokens": [50364, 467, 311, 452, 19746, 295, 3190, 291, 393, 5366, 2693, 554, 1287, 13, 50648, 50648, 759, 291, 915, 746, 300, 311, 406, 294, 456, 11, 1767, 718, 385, 458, 570, 286, 603, 853, 281, 1066, 50852, 50852, 309, 493, 281, 4002, 365, 604, 661, 721, 561, 519, 295, 13, 51048, 51048, 407, 1392, 11, 370, 949, 321, 2413, 11, 286, 519, 309, 576, 312, 1481, 281, 1310, 321, 393, 352, 807, 341, 19746, 13, 51408, 51408, 583, 472, 544, 551, 286, 1415, 281, 2557, 322, 307, 411, 341, 2649, 294, 264, 2699, 76, 293, 15576, 14237, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13384222030639648, "compression_ratio": 1.5720164609053497, "no_caption_prob": 3.763432687264867e-05}, {"id": 749, "seek": 287424, "start": 2887.9199999999996, "end": 2895.12, "text": " So okay, so before we finish, I think it would be nice to maybe we can go through this catalog.", "tokens": [50364, 467, 311, 452, 19746, 295, 3190, 291, 393, 5366, 2693, 554, 1287, 13, 50648, 50648, 759, 291, 915, 746, 300, 311, 406, 294, 456, 11, 1767, 718, 385, 458, 570, 286, 603, 853, 281, 1066, 50852, 50852, 309, 493, 281, 4002, 365, 604, 661, 721, 561, 519, 295, 13, 51048, 51048, 407, 1392, 11, 370, 949, 321, 2413, 11, 286, 519, 309, 576, 312, 1481, 281, 1310, 321, 393, 352, 807, 341, 19746, 13, 51408, 51408, 583, 472, 544, 551, 286, 1415, 281, 2557, 322, 307, 411, 341, 2649, 294, 264, 2699, 76, 293, 15576, 14237, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13384222030639648, "compression_ratio": 1.5720164609053497, "no_caption_prob": 3.763432687264867e-05}, {"id": 750, "seek": 287424, "start": 2895.12, "end": 2900.9199999999996, "text": " But one more thing I wanted to touch on is like this difference in the Elm and TypeScript", "tokens": [50364, 467, 311, 452, 19746, 295, 3190, 291, 393, 5366, 2693, 554, 1287, 13, 50648, 50648, 759, 291, 915, 746, 300, 311, 406, 294, 456, 11, 1767, 718, 385, 458, 570, 286, 603, 853, 281, 1066, 50852, 50852, 309, 493, 281, 4002, 365, 604, 661, 721, 561, 519, 295, 13, 51048, 51048, 407, 1392, 11, 370, 949, 321, 2413, 11, 286, 519, 309, 576, 312, 1481, 281, 1310, 321, 393, 352, 807, 341, 19746, 13, 51408, 51408, 583, 472, 544, 551, 286, 1415, 281, 2557, 322, 307, 411, 341, 2649, 294, 264, 2699, 76, 293, 15576, 14237, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13384222030639648, "compression_ratio": 1.5720164609053497, "no_caption_prob": 3.763432687264867e-05}, {"id": 751, "seek": 290092, "start": 2900.92, "end": 2905.2000000000003, "text": " type systems of custom types with variants in Elm.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 752, "seek": 290092, "start": 2905.2000000000003, "end": 2908.6800000000003, "text": " Yeah, we should talk about those.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 753, "seek": 290092, "start": 2908.6800000000003, "end": 2910.36, "text": " And discriminated unions in TypeScript.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 754, "seek": 290092, "start": 2910.36, "end": 2912.92, "text": " So discriminated unions are very cool.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 755, "seek": 290092, "start": 2912.92, "end": 2919.6800000000003, "text": " And I think it's important to realize that as far as just the feature of a discriminated", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 756, "seek": 290092, "start": 2919.6800000000003, "end": 2923.2000000000003, "text": " union goes, it's a pretty sound feature.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 757, "seek": 290092, "start": 2923.2000000000003, "end": 2924.6800000000003, "text": " Can you explain what those are?", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 758, "seek": 290092, "start": 2924.6800000000003, "end": 2925.6800000000003, "text": " Yeah, absolutely.", "tokens": [50364, 2010, 3652, 295, 2375, 3467, 365, 21669, 294, 2699, 76, 13, 50578, 50578, 865, 11, 321, 820, 751, 466, 729, 13, 50752, 50752, 400, 20828, 770, 24914, 294, 15576, 14237, 13, 50836, 50836, 407, 20828, 770, 24914, 366, 588, 1627, 13, 50964, 50964, 400, 286, 519, 309, 311, 1021, 281, 4325, 300, 382, 1400, 382, 445, 264, 4111, 295, 257, 20828, 770, 51302, 51302, 11671, 1709, 11, 309, 311, 257, 1238, 1626, 4111, 13, 51478, 51478, 1664, 291, 2903, 437, 729, 366, 30, 51552, 51552, 865, 11, 3122, 13, 51602, 51602], "temperature": 0.0, "avg_logprob": -0.15717119811683572, "compression_ratio": 1.602803738317757, "no_caption_prob": 9.080108611669857e-06}, {"id": 759, "seek": 292568, "start": 2925.68, "end": 2933.04, "text": " So now again, if you want to understand the TypeScript type system, think about the the", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 760, "seek": 292568, "start": 2933.04, "end": 2935.96, "text": " motivation and design constraints of the author.", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 761, "seek": 292568, "start": 2935.96, "end": 2944.2, "text": " So similar to type of string checks, it uses narrowing using kind of code flow analysis.", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 762, "seek": 292568, "start": 2944.2, "end": 2945.6, "text": " Same with discriminated union.", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 763, "seek": 292568, "start": 2945.6, "end": 2947.8799999999997, "text": " Dillon, you sound like a broken object.", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 764, "seek": 292568, "start": 2947.8799999999997, "end": 2952.24, "text": " That's a good one you're in.", "tokens": [50364, 407, 586, 797, 11, 498, 291, 528, 281, 1223, 264, 15576, 14237, 2010, 1185, 11, 519, 466, 264, 264, 50732, 50732, 12335, 293, 1715, 18491, 295, 264, 3793, 13, 50878, 50878, 407, 2531, 281, 2010, 295, 6798, 13834, 11, 309, 4960, 9432, 278, 1228, 733, 295, 3089, 3095, 5215, 13, 51290, 51290, 10635, 365, 20828, 770, 11671, 13, 51360, 51360, 28160, 11, 291, 1626, 411, 257, 5463, 2657, 13, 51474, 51474, 663, 311, 257, 665, 472, 291, 434, 294, 13, 51692, 51692], "temperature": 0.0, "avg_logprob": -0.19549991970970518, "compression_ratio": 1.5, "no_caption_prob": 3.321175609016791e-05}, {"id": 765, "seek": 295224, "start": 2952.24, "end": 2956.0, "text": " And that might have to go on a t shirt.", "tokens": [50364, 400, 300, 1062, 362, 281, 352, 322, 257, 256, 8336, 13, 50552, 50552, 14576, 665, 281, 385, 13, 50728, 50728, 583, 1338, 11, 370, 309, 311, 1228, 264, 912, 6532, 295, 341, 1333, 295, 34474, 5215, 1520, 300, 51086, 51086, 309, 26485, 666, 281, 9432, 264, 3467, 281, 976, 291, 2010, 1589, 294, 300, 4319, 295, 264, 51388, 51388, 1969, 3095, 13, 51443, 51443], "temperature": 0.0, "avg_logprob": -0.2145585869297837, "compression_ratio": 1.4759036144578312, "no_caption_prob": 1.384564529871568e-05}, {"id": 766, "seek": 295224, "start": 2956.0, "end": 2959.52, "text": " Sounds good to me.", "tokens": [50364, 400, 300, 1062, 362, 281, 352, 322, 257, 256, 8336, 13, 50552, 50552, 14576, 665, 281, 385, 13, 50728, 50728, 583, 1338, 11, 370, 309, 311, 1228, 264, 912, 6532, 295, 341, 1333, 295, 34474, 5215, 1520, 300, 51086, 51086, 309, 26485, 666, 281, 9432, 264, 3467, 281, 976, 291, 2010, 1589, 294, 300, 4319, 295, 264, 51388, 51388, 1969, 3095, 13, 51443, 51443], "temperature": 0.0, "avg_logprob": -0.2145585869297837, "compression_ratio": 1.4759036144578312, "no_caption_prob": 1.384564529871568e-05}, {"id": 767, "seek": 295224, "start": 2959.52, "end": 2966.68, "text": " But yeah, so it's using the same technique of this sort of runtime analysis check that", "tokens": [50364, 400, 300, 1062, 362, 281, 352, 322, 257, 256, 8336, 13, 50552, 50552, 14576, 665, 281, 385, 13, 50728, 50728, 583, 1338, 11, 370, 309, 311, 1228, 264, 912, 6532, 295, 341, 1333, 295, 34474, 5215, 1520, 300, 51086, 51086, 309, 26485, 666, 281, 9432, 264, 3467, 281, 976, 291, 2010, 1589, 294, 300, 4319, 295, 264, 51388, 51388, 1969, 3095, 13, 51443, 51443], "temperature": 0.0, "avg_logprob": -0.2145585869297837, "compression_ratio": 1.4759036144578312, "no_caption_prob": 1.384564529871568e-05}, {"id": 768, "seek": 295224, "start": 2966.68, "end": 2972.72, "text": " it hooks into to narrow the types to give you type information in that context of the", "tokens": [50364, 400, 300, 1062, 362, 281, 352, 322, 257, 256, 8336, 13, 50552, 50552, 14576, 665, 281, 385, 13, 50728, 50728, 583, 1338, 11, 370, 309, 311, 1228, 264, 912, 6532, 295, 341, 1333, 295, 34474, 5215, 1520, 300, 51086, 51086, 309, 26485, 666, 281, 9432, 264, 3467, 281, 976, 291, 2010, 1589, 294, 300, 4319, 295, 264, 51388, 51388, 1969, 3095, 13, 51443, 51443], "temperature": 0.0, "avg_logprob": -0.2145585869297837, "compression_ratio": 1.4759036144578312, "no_caption_prob": 1.384564529871568e-05}, {"id": 769, "seek": 295224, "start": 2972.72, "end": 2973.8199999999997, "text": " control flow.", "tokens": [50364, 400, 300, 1062, 362, 281, 352, 322, 257, 256, 8336, 13, 50552, 50552, 14576, 665, 281, 385, 13, 50728, 50728, 583, 1338, 11, 370, 309, 311, 1228, 264, 912, 6532, 295, 341, 1333, 295, 34474, 5215, 1520, 300, 51086, 51086, 309, 26485, 666, 281, 9432, 264, 3467, 281, 976, 291, 2010, 1589, 294, 300, 4319, 295, 264, 51388, 51388, 1969, 3095, 13, 51443, 51443], "temperature": 0.0, "avg_logprob": -0.2145585869297837, "compression_ratio": 1.4759036144578312, "no_caption_prob": 1.384564529871568e-05}, {"id": 770, "seek": 297382, "start": 2973.82, "end": 2983.48, "text": " And so if you have a field in an object, which can be, you know, a shape has a, you know,", "tokens": [50364, 400, 370, 498, 291, 362, 257, 2519, 294, 364, 2657, 11, 597, 393, 312, 11, 291, 458, 11, 257, 3909, 575, 257, 11, 291, 458, 11, 50847, 50847, 291, 362, 364, 2657, 11, 597, 393, 393, 2139, 312, 3909, 307, 3732, 11, 293, 550, 309, 575, 257, 11402, 2519, 51311, 51311, 294, 309, 13, 51361, 51361, 1610, 11, 370, 341, 576, 312, 411, 257, 11671, 2010, 1228, 264, 11240, 12973, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.12349619547526042, "compression_ratio": 1.6193548387096774, "no_caption_prob": 4.3315940274624154e-05}, {"id": 771, "seek": 297382, "start": 2983.48, "end": 2992.76, "text": " you have an object, which can can either be shape is square, and then it has a width field", "tokens": [50364, 400, 370, 498, 291, 362, 257, 2519, 294, 364, 2657, 11, 597, 393, 312, 11, 291, 458, 11, 257, 3909, 575, 257, 11, 291, 458, 11, 50847, 50847, 291, 362, 364, 2657, 11, 597, 393, 393, 2139, 312, 3909, 307, 3732, 11, 293, 550, 309, 575, 257, 11402, 2519, 51311, 51311, 294, 309, 13, 51361, 51361, 1610, 11, 370, 341, 576, 312, 411, 257, 11671, 2010, 1228, 264, 11240, 12973, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.12349619547526042, "compression_ratio": 1.6193548387096774, "no_caption_prob": 4.3315940274624154e-05}, {"id": 772, "seek": 297382, "start": 2992.76, "end": 2993.76, "text": " in it.", "tokens": [50364, 400, 370, 498, 291, 362, 257, 2519, 294, 364, 2657, 11, 597, 393, 312, 11, 291, 458, 11, 257, 3909, 575, 257, 11, 291, 458, 11, 50847, 50847, 291, 362, 364, 2657, 11, 597, 393, 393, 2139, 312, 3909, 307, 3732, 11, 293, 550, 309, 575, 257, 11402, 2519, 51311, 51311, 294, 309, 13, 51361, 51361, 1610, 11, 370, 341, 576, 312, 411, 257, 11671, 2010, 1228, 264, 11240, 12973, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.12349619547526042, "compression_ratio": 1.6193548387096774, "no_caption_prob": 4.3315940274624154e-05}, {"id": 773, "seek": 297382, "start": 2993.76, "end": 2997.2400000000002, "text": " Or, so this would be like a union type using the pipe operator.", "tokens": [50364, 400, 370, 498, 291, 362, 257, 2519, 294, 364, 2657, 11, 597, 393, 312, 11, 291, 458, 11, 257, 3909, 575, 257, 11, 291, 458, 11, 50847, 50847, 291, 362, 364, 2657, 11, 597, 393, 393, 2139, 312, 3909, 307, 3732, 11, 293, 550, 309, 575, 257, 11402, 2519, 51311, 51311, 294, 309, 13, 51361, 51361, 1610, 11, 370, 341, 576, 312, 411, 257, 11671, 2010, 1228, 264, 11240, 12973, 13, 51535, 51535], "temperature": 0.0, "avg_logprob": -0.12349619547526042, "compression_ratio": 1.6193548387096774, "no_caption_prob": 4.3315940274624154e-05}, {"id": 774, "seek": 299724, "start": 2997.24, "end": 3005.08, "text": " So you could say like type, shape equals, and then an object, shape, colon, square,", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 775, "seek": 299724, "start": 3005.08, "end": 3006.08, "text": " the string square.", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 776, "seek": 299724, "start": 3006.08, "end": 3009.22, "text": " So it's that's actually a string that type is a string.", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 777, "seek": 299724, "start": 3009.22, "end": 3013.8799999999997, "text": " And then and then you can have width is a number.", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 778, "seek": 299724, "start": 3013.8799999999997, "end": 3020.8799999999997, "text": " And then you could have or pipe, it's a an object shape, colon, string rectangle, and", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 779, "seek": 299724, "start": 3020.8799999999997, "end": 3025.22, "text": " it has the property with number, height number.", "tokens": [50364, 407, 291, 727, 584, 411, 2010, 11, 3909, 6915, 11, 293, 550, 364, 2657, 11, 3909, 11, 8255, 11, 3732, 11, 50756, 50756, 264, 6798, 3732, 13, 50806, 50806, 407, 309, 311, 300, 311, 767, 257, 6798, 300, 2010, 307, 257, 6798, 13, 50963, 50963, 400, 550, 293, 550, 291, 393, 362, 11402, 307, 257, 1230, 13, 51196, 51196, 400, 550, 291, 727, 362, 420, 11240, 11, 309, 311, 257, 364, 2657, 3909, 11, 8255, 11, 6798, 21930, 11, 293, 51546, 51546, 309, 575, 264, 4707, 365, 1230, 11, 6681, 1230, 13, 51763, 51763], "temperature": 0.0, "avg_logprob": -0.1567333241303762, "compression_ratio": 1.858695652173913, "no_caption_prob": 3.237723831261974e-06}, {"id": 780, "seek": 302522, "start": 3025.22, "end": 3030.62, "text": " So now, what TypeScript is going to do is if you have a value of that type, you can", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 781, "seek": 302522, "start": 3030.62, "end": 3034.52, "text": " do like a switch statement, or an if statement or whatever, right?", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 782, "seek": 302522, "start": 3034.52, "end": 3038.6, "text": " Because it's just you're just doing a runtime check like you would if you actually had those", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 783, "seek": 302522, "start": 3038.6, "end": 3039.6, "text": " values.", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 784, "seek": 302522, "start": 3039.6, "end": 3047.7599999999998, "text": " So you would say, you know, if shape dot, well, shape dot shape equals square, then", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 785, "seek": 302522, "start": 3047.7599999999998, "end": 3052.8199999999997, "text": " you know that it must have based on the type definition, you know that it has a width and", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 786, "seek": 302522, "start": 3052.8199999999997, "end": 3054.7599999999998, "text": " it doesn't have a height.", "tokens": [50364, 407, 586, 11, 437, 15576, 14237, 307, 516, 281, 360, 307, 498, 291, 362, 257, 2158, 295, 300, 2010, 11, 291, 393, 50634, 50634, 360, 411, 257, 3679, 5629, 11, 420, 364, 498, 5629, 420, 2035, 11, 558, 30, 50829, 50829, 1436, 309, 311, 445, 291, 434, 445, 884, 257, 34474, 1520, 411, 291, 576, 498, 291, 767, 632, 729, 51033, 51033, 4190, 13, 51083, 51083, 407, 291, 576, 584, 11, 291, 458, 11, 498, 3909, 5893, 11, 731, 11, 3909, 5893, 3909, 6915, 3732, 11, 550, 51491, 51491, 291, 458, 300, 309, 1633, 362, 2361, 322, 264, 2010, 7123, 11, 291, 458, 300, 309, 575, 257, 11402, 293, 51744, 51744, 309, 1177, 380, 362, 257, 6681, 13, 51841, 51841], "temperature": 0.0, "avg_logprob": -0.127613685170158, "compression_ratio": 1.7413127413127414, "no_caption_prob": 1.147852344729472e-05}, {"id": 787, "seek": 305476, "start": 3054.76, "end": 3057.6000000000004, "text": " And if it's a rectangle, you know, it has a width and a height.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 788, "seek": 305476, "start": 3057.6000000000004, "end": 3061.0600000000004, "text": " And if it's a circle, you know, it has a radius or whatever it may be, right?", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 789, "seek": 305476, "start": 3061.0600000000004, "end": 3063.96, "text": " So this is how unions work.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 790, "seek": 305476, "start": 3063.96, "end": 3068.0200000000004, "text": " TypeScript has this notion of like literal values, which is a really cool feature.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 791, "seek": 305476, "start": 3068.0200000000004, "end": 3074.2000000000003, "text": " So like a literal value, you could have a type string, but you could have a, you know,", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 792, "seek": 305476, "start": 3074.2000000000003, "end": 3075.2000000000003, "text": " subsets.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 793, "seek": 305476, "start": 3075.2000000000003, "end": 3076.2000000000003, "text": " You could have a sub.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 794, "seek": 305476, "start": 3076.2000000000003, "end": 3077.2000000000003, "text": " Exactly.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 795, "seek": 305476, "start": 3077.2000000000003, "end": 3081.96, "text": " So you could have like a mode argument to something, you could have a parameter that's", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 796, "seek": 305476, "start": 3081.96, "end": 3083.32, "text": " mode.", "tokens": [50364, 400, 498, 309, 311, 257, 21930, 11, 291, 458, 11, 309, 575, 257, 11402, 293, 257, 6681, 13, 50506, 50506, 400, 498, 309, 311, 257, 6329, 11, 291, 458, 11, 309, 575, 257, 15845, 420, 2035, 309, 815, 312, 11, 558, 30, 50679, 50679, 407, 341, 307, 577, 24914, 589, 13, 50824, 50824, 15576, 14237, 575, 341, 10710, 295, 411, 20411, 4190, 11, 597, 307, 257, 534, 1627, 4111, 13, 51027, 51027, 407, 411, 257, 20411, 2158, 11, 291, 727, 362, 257, 2010, 6798, 11, 457, 291, 727, 362, 257, 11, 291, 458, 11, 51336, 51336, 2090, 1385, 13, 51386, 51386, 509, 727, 362, 257, 1422, 13, 51436, 51436, 7587, 13, 51486, 51486, 407, 291, 727, 362, 411, 257, 4391, 6770, 281, 746, 11, 291, 727, 362, 257, 13075, 300, 311, 51724, 51724, 4391, 13, 51792, 51792], "temperature": 0.0, "avg_logprob": -0.18168625042592879, "compression_ratio": 1.873015873015873, "no_caption_prob": 3.269833541708067e-05}, {"id": 797, "seek": 308332, "start": 3083.32, "end": 3085.8, "text": " And mode is a string and well, what do you pass it?", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 798, "seek": 308332, "start": 3085.8, "end": 3091.88, "text": " You say mode is either verbose or silent or something like that, right?", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 799, "seek": 308332, "start": 3091.88, "end": 3097.0800000000004, "text": " And well, if you know the specific subset of strings that it could be, then you would", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 800, "seek": 308332, "start": 3097.0800000000004, "end": 3102.6800000000003, "text": " just say mode is either verbose or silent and you could add different things to it.", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 801, "seek": 308332, "start": 3102.6800000000003, "end": 3104.32, "text": " But that's the literal string.", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 802, "seek": 308332, "start": 3104.32, "end": 3109.6800000000003, "text": " It's not a, you know, magical variant type like in Elmore, it's the specific thing.", "tokens": [50364, 400, 4391, 307, 257, 6798, 293, 731, 11, 437, 360, 291, 1320, 309, 30, 50488, 50488, 509, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 420, 746, 411, 300, 11, 558, 30, 50792, 50792, 400, 731, 11, 498, 291, 458, 264, 2685, 25993, 295, 13985, 300, 309, 727, 312, 11, 550, 291, 576, 51052, 51052, 445, 584, 4391, 307, 2139, 9595, 541, 420, 12784, 293, 291, 727, 909, 819, 721, 281, 309, 13, 51332, 51332, 583, 300, 311, 264, 20411, 6798, 13, 51414, 51414, 467, 311, 406, 257, 11, 291, 458, 11, 12066, 17501, 2010, 411, 294, 2699, 3138, 11, 309, 311, 264, 2685, 551, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.11619120511141691, "compression_ratio": 1.8053097345132743, "no_caption_prob": 3.966944859712385e-06}, {"id": 803, "seek": 310968, "start": 3109.68, "end": 3113.74, "text": " It's just a string, but you're saying this can only be these strings.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 804, "seek": 310968, "start": 3113.74, "end": 3118.74, "text": " And again, using this sort of control flow analysis, TypeScript can say, Hey, you're", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 805, "seek": 310968, "start": 3118.74, "end": 3124.64, "text": " passing a literal string and you're passing the string, you know, loud instead of verbose.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 806, "seek": 310968, "start": 3124.64, "end": 3127.56, "text": " And it'll say, Hey, you can only pass verbose or silent here.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 807, "seek": 310968, "start": 3127.56, "end": 3129.08, "text": " So this string is incorrect.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 808, "seek": 310968, "start": 3129.08, "end": 3132.8799999999997, "text": " So it it's actually analyzing the values of your code.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 809, "seek": 310968, "start": 3132.8799999999997, "end": 3138.2999999999997, "text": " Whereas in Elm, you would have to define a custom type, which you could not reuse.", "tokens": [50364, 467, 311, 445, 257, 6798, 11, 457, 291, 434, 1566, 341, 393, 787, 312, 613, 13985, 13, 50567, 50567, 400, 797, 11, 1228, 341, 1333, 295, 1969, 3095, 5215, 11, 15576, 14237, 393, 584, 11, 1911, 11, 291, 434, 50817, 50817, 8437, 257, 20411, 6798, 293, 291, 434, 8437, 264, 6798, 11, 291, 458, 11, 6588, 2602, 295, 9595, 541, 13, 51112, 51112, 400, 309, 603, 584, 11, 1911, 11, 291, 393, 787, 1320, 9595, 541, 420, 12784, 510, 13, 51258, 51258, 407, 341, 6798, 307, 18424, 13, 51334, 51334, 407, 309, 309, 311, 767, 23663, 264, 4190, 295, 428, 3089, 13, 51524, 51524, 13813, 294, 2699, 76, 11, 291, 576, 362, 281, 6964, 257, 2375, 2010, 11, 597, 291, 727, 406, 26225, 13, 51795, 51795], "temperature": 0.0, "avg_logprob": -0.10119226574897766, "compression_ratio": 1.7490774907749078, "no_caption_prob": 1.9333540421939688e-06}, {"id": 810, "seek": 313830, "start": 3138.3, "end": 3140.84, "text": " It would be only for those places.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 811, "seek": 313830, "start": 3140.84, "end": 3141.84, "text": " Right.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 812, "seek": 313830, "start": 3141.84, "end": 3143.76, "text": " It's like a nominal type.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 813, "seek": 313830, "start": 3143.76, "end": 3149.04, "text": " It's a nominal tape and that works well, but it's also sometimes quite annoying.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 814, "seek": 313830, "start": 3149.04, "end": 3150.04, "text": " Right.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 815, "seek": 313830, "start": 3150.04, "end": 3153.7200000000003, "text": " And so I do like that part about TypeScript.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 816, "seek": 313830, "start": 3153.7200000000003, "end": 3154.98, "text": " It's very pragmatic.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 817, "seek": 313830, "start": 3154.98, "end": 3157.0800000000004, "text": " It's a very, very nice feature.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 818, "seek": 313830, "start": 3157.0800000000004, "end": 3161.2400000000002, "text": " And you know, and if you, well, I'm not sure it's pragmatic.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 819, "seek": 313830, "start": 3161.2400000000002, "end": 3162.5600000000004, "text": " I think it's just a good feature.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 820, "seek": 313830, "start": 3162.5600000000004, "end": 3164.76, "text": " I mean, they didn't have to be.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 821, "seek": 313830, "start": 3164.76, "end": 3165.76, "text": " Absolutely.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 822, "seek": 313830, "start": 3165.76, "end": 3166.76, "text": " Yeah.", "tokens": [50364, 467, 576, 312, 787, 337, 729, 3190, 13, 50491, 50491, 1779, 13, 50541, 50541, 467, 311, 411, 257, 41641, 2010, 13, 50637, 50637, 467, 311, 257, 41641, 7314, 293, 300, 1985, 731, 11, 457, 309, 311, 611, 2171, 1596, 11304, 13, 50901, 50901, 1779, 13, 50951, 50951, 400, 370, 286, 360, 411, 300, 644, 466, 15576, 14237, 13, 51135, 51135, 467, 311, 588, 46904, 13, 51198, 51198, 467, 311, 257, 588, 11, 588, 1481, 4111, 13, 51303, 51303, 400, 291, 458, 11, 293, 498, 291, 11, 731, 11, 286, 478, 406, 988, 309, 311, 46904, 13, 51511, 51511, 286, 519, 309, 311, 445, 257, 665, 4111, 13, 51577, 51577, 286, 914, 11, 436, 994, 380, 362, 281, 312, 13, 51687, 51687, 7021, 13, 51737, 51737, 865, 13, 51787, 51787], "temperature": 0.0, "avg_logprob": -0.2267032070014313, "compression_ratio": 1.6793248945147679, "no_caption_prob": 1.1125537639600225e-05}, {"id": 823, "seek": 316676, "start": 3166.76, "end": 3171.6800000000003, "text": " I mean, in a way I think they did because TypeScript, you know, in a way TypeScript", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 824, "seek": 316676, "start": 3171.6800000000003, "end": 3174.6600000000003, "text": " is almost like descriptive rather than prescriptive.", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 825, "seek": 316676, "start": 3174.6600000000003, "end": 3181.5, "text": " It's like TypeScript is a type system to, to attempt to describe how people use JavaScript,", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 826, "seek": 316676, "start": 3181.5, "end": 3183.5200000000004, "text": " not how people should write code.", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 827, "seek": 316676, "start": 3183.5200000000004, "end": 3185.2000000000003, "text": " And that's what people, people do.", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 828, "seek": 316676, "start": 3185.2000000000003, "end": 3191.5200000000004, "text": " They pass literal strings and then they check if the string is, you know, verbose or if", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 829, "seek": 316676, "start": 3191.5200000000004, "end": 3194.5200000000004, "text": " the string is silent, then I'm going to change the behavior.", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 830, "seek": 316676, "start": 3194.5200000000004, "end": 3195.5200000000004, "text": " Sure.", "tokens": [50364, 286, 914, 11, 294, 257, 636, 286, 519, 436, 630, 570, 15576, 14237, 11, 291, 458, 11, 294, 257, 636, 15576, 14237, 50610, 50610, 307, 1920, 411, 42585, 2831, 813, 1183, 5944, 488, 13, 50759, 50759, 467, 311, 411, 15576, 14237, 307, 257, 2010, 1185, 281, 11, 281, 5217, 281, 6786, 577, 561, 764, 15778, 11, 51101, 51101, 406, 577, 561, 820, 2464, 3089, 13, 51202, 51202, 400, 300, 311, 437, 561, 11, 561, 360, 13, 51286, 51286, 814, 1320, 20411, 13985, 293, 550, 436, 1520, 498, 264, 6798, 307, 11, 291, 458, 11, 9595, 541, 420, 498, 51602, 51602, 264, 6798, 307, 12784, 11, 550, 286, 478, 516, 281, 1319, 264, 5223, 13, 51752, 51752, 4894, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.12225607574963179, "compression_ratio": 1.8225806451612903, "no_caption_prob": 2.2473413991974667e-05}, {"id": 831, "seek": 319552, "start": 3195.52, "end": 3199.12, "text": " And people can still pass in anything else in JavaScript.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 832, "seek": 319552, "start": 3199.12, "end": 3206.0, "text": " So I find that the fact that they can specify a subset is just an additional feature that", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 833, "seek": 319552, "start": 3206.0, "end": 3207.2, "text": " they met, that they made.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 834, "seek": 319552, "start": 3207.2, "end": 3208.2, "text": " And that is awesome.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 835, "seek": 319552, "start": 3208.2, "end": 3211.96, "text": " They don't do the same thing for numbers as far as I'm aware.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 836, "seek": 319552, "start": 3211.96, "end": 3215.0, "text": " You can't say, oh, this number is one or two.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 837, "seek": 319552, "start": 3215.0, "end": 3216.0, "text": " Right.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 838, "seek": 319552, "start": 3216.0, "end": 3217.0, "text": " Right.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 839, "seek": 319552, "start": 3217.0, "end": 3218.0, "text": " Or I guess maybe you can with EGEM.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 840, "seek": 319552, "start": 3218.0, "end": 3219.0, "text": " Actually, I think you can.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 841, "seek": 319552, "start": 3219.0, "end": 3220.0, "text": " Is that what you've done so far?", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 842, "seek": 319552, "start": 3220.0, "end": 3221.0, "text": " Partially?", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 843, "seek": 319552, "start": 3221.0, "end": 3224.0, "text": " I think you can do that.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 844, "seek": 319552, "start": 3224.0, "end": 3225.0, "text": " All right.", "tokens": [50364, 400, 561, 393, 920, 1320, 294, 1340, 1646, 294, 15778, 13, 50544, 50544, 407, 286, 915, 300, 264, 1186, 300, 436, 393, 16500, 257, 25993, 307, 445, 364, 4497, 4111, 300, 50888, 50888, 436, 1131, 11, 300, 436, 1027, 13, 50948, 50948, 400, 300, 307, 3476, 13, 50998, 50998, 814, 500, 380, 360, 264, 912, 551, 337, 3547, 382, 1400, 382, 286, 478, 3650, 13, 51186, 51186, 509, 393, 380, 584, 11, 1954, 11, 341, 1230, 307, 472, 420, 732, 13, 51338, 51338, 1779, 13, 51388, 51388, 1779, 13, 51438, 51438, 1610, 286, 2041, 1310, 291, 393, 365, 462, 38, 6683, 13, 51488, 51488, 5135, 11, 286, 519, 291, 393, 13, 51538, 51538, 1119, 300, 437, 291, 600, 1096, 370, 1400, 30, 51588, 51588, 4100, 2270, 30, 51638, 51638, 286, 519, 291, 393, 360, 300, 13, 51788, 51788, 1057, 558, 13, 51838, 51838], "temperature": 0.0, "avg_logprob": -0.31196004933324356, "compression_ratio": 1.6751824817518248, "no_caption_prob": 6.204881356097758e-05}, {"id": 845, "seek": 322500, "start": 3225.0, "end": 3226.0, "text": " And well, that's awesome.", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 846, "seek": 322500, "start": 3226.0, "end": 3233.76, "text": " I wonder how they do that with like concatenations and additions, subtractions, how they can", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 847, "seek": 322500, "start": 3233.76, "end": 3241.48, "text": " tell whether something is indeed within the limited ranges or limited sets of values.", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 848, "seek": 322500, "start": 3241.48, "end": 3243.58, "text": " Well it's weird with Java.", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 849, "seek": 322500, "start": 3243.58, "end": 3251.04, "text": " So I just tried doing a literal type to say like, you know, type version equals one or", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 850, "seek": 322500, "start": 3251.04, "end": 3253.0, "text": " two and you can do that.", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 851, "seek": 322500, "start": 3253.0, "end": 3254.88, "text": " You can absolutely do that.", "tokens": [50364, 400, 731, 11, 300, 311, 3476, 13, 50414, 50414, 286, 2441, 577, 436, 360, 300, 365, 411, 1588, 7186, 763, 293, 35113, 11, 16390, 626, 11, 577, 436, 393, 50802, 50802, 980, 1968, 746, 307, 6451, 1951, 264, 5567, 22526, 420, 5567, 6352, 295, 4190, 13, 51188, 51188, 1042, 309, 311, 3657, 365, 10745, 13, 51293, 51293, 407, 286, 445, 3031, 884, 257, 20411, 2010, 281, 584, 411, 11, 291, 458, 11, 2010, 3037, 6915, 472, 420, 51666, 51666, 732, 293, 291, 393, 360, 300, 13, 51764, 51764, 509, 393, 3122, 360, 300, 13, 51858, 51858], "temperature": 0.0, "avg_logprob": -0.1625482890070701, "compression_ratio": 1.6415929203539823, "no_caption_prob": 2.318708175153006e-05}, {"id": 852, "seek": 325488, "start": 3254.88, "end": 3262.08, "text": " And then if you say, you know, let version of type version equal one or equal two, it's", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 853, "seek": 325488, "start": 3262.08, "end": 3263.08, "text": " fine.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 854, "seek": 325488, "start": 3263.08, "end": 3266.0, "text": " And if you say it equals three, it says that's not of type version.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 855, "seek": 325488, "start": 3266.0, "end": 3267.0, "text": " All right.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 856, "seek": 325488, "start": 3267.0, "end": 3268.0, "text": " Nice.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 857, "seek": 325488, "start": 3268.0, "end": 3274.12, "text": " The strange thing is you can do that with like floats, which float equality should not", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 858, "seek": 325488, "start": 3274.12, "end": 3275.2000000000003, "text": " be trusted.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 859, "seek": 325488, "start": 3275.2000000000003, "end": 3281.28, "text": " So anyway, that's a little bit odd and probably something you should be skeptical of.", "tokens": [50364, 400, 550, 498, 291, 584, 11, 291, 458, 11, 718, 3037, 295, 2010, 3037, 2681, 472, 420, 2681, 732, 11, 309, 311, 50724, 50724, 2489, 13, 50774, 50774, 400, 498, 291, 584, 309, 6915, 1045, 11, 309, 1619, 300, 311, 406, 295, 2010, 3037, 13, 50920, 50920, 1057, 558, 13, 50970, 50970, 5490, 13, 51020, 51020, 440, 5861, 551, 307, 291, 393, 360, 300, 365, 411, 37878, 11, 597, 15706, 14949, 820, 406, 51326, 51326, 312, 16034, 13, 51380, 51380, 407, 4033, 11, 300, 311, 257, 707, 857, 7401, 293, 1391, 746, 291, 820, 312, 28601, 295, 13, 51684, 51684], "temperature": 0.0, "avg_logprob": -0.1174313975315468, "compression_ratio": 1.665137614678899, "no_caption_prob": 2.813000946844113e-06}, {"id": 860, "seek": 328128, "start": 3281.28, "end": 3286.6000000000004, "text": " But doing it with integers, which yes, they're all just numbers, but if you only use integers,", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 861, "seek": 328128, "start": 3286.6000000000004, "end": 3287.6000000000004, "text": " then that's safe.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 862, "seek": 328128, "start": 3287.6000000000004, "end": 3292.36, "text": " But yeah, and I think enums under the hood are just using integers.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 863, "seek": 328128, "start": 3292.36, "end": 3293.36, "text": " Yeah.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 864, "seek": 328128, "start": 3293.36, "end": 3296.92, "text": " And I think you can assign them other values than just the order.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 865, "seek": 328128, "start": 3296.92, "end": 3297.92, "text": " Right.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 866, "seek": 328128, "start": 3297.92, "end": 3298.92, "text": " Right.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 867, "seek": 328128, "start": 3298.92, "end": 3300.92, "text": " So yeah, you actually can, I think.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 868, "seek": 328128, "start": 3300.92, "end": 3301.92, "text": " Yeah.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 869, "seek": 328128, "start": 3301.92, "end": 3302.92, "text": " That's pretty cool.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 870, "seek": 328128, "start": 3302.92, "end": 3303.92, "text": " Yeah, it's a very cool feature.", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 871, "seek": 328128, "start": 3303.92, "end": 3310.28, "text": " So discriminated unions are just taking advantage of that notion of literals, but they're saying,", "tokens": [50364, 583, 884, 309, 365, 41674, 11, 597, 2086, 11, 436, 434, 439, 445, 3547, 11, 457, 498, 291, 787, 764, 41674, 11, 50630, 50630, 550, 300, 311, 3273, 13, 50680, 50680, 583, 1338, 11, 293, 286, 519, 465, 8099, 833, 264, 13376, 366, 445, 1228, 41674, 13, 50918, 50918, 865, 13, 50968, 50968, 400, 286, 519, 291, 393, 6269, 552, 661, 4190, 813, 445, 264, 1668, 13, 51146, 51146, 1779, 13, 51196, 51196, 1779, 13, 51246, 51246, 407, 1338, 11, 291, 767, 393, 11, 286, 519, 13, 51346, 51346, 865, 13, 51396, 51396, 663, 311, 1238, 1627, 13, 51446, 51446, 865, 11, 309, 311, 257, 588, 1627, 4111, 13, 51496, 51496, 407, 20828, 770, 24914, 366, 445, 1940, 5002, 295, 300, 10710, 295, 2733, 1124, 11, 457, 436, 434, 1566, 11, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1635618845621745, "compression_ratio": 1.7348484848484849, "no_caption_prob": 1.4738819118065294e-05}, {"id": 872, "seek": 331028, "start": 3310.28, "end": 3317.28, "text": " well, this object has a key, this discriminant, this key that can tell me what the shape is,", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 873, "seek": 331028, "start": 3317.28, "end": 3323.92, "text": " because if this key shape is square, then I know what fields and of what types it has.", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 874, "seek": 331028, "start": 3323.92, "end": 3327.32, "text": " If it's circle, then I know what fields and what types it has.", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 875, "seek": 331028, "start": 3327.32, "end": 3333.2200000000003, "text": " So it's just using that same technique of sort of type narrowing using conditional flow", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 876, "seek": 331028, "start": 3333.2200000000003, "end": 3334.2200000000003, "text": " analysis.", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 877, "seek": 331028, "start": 3334.2200000000003, "end": 3337.88, "text": " And it's just leveraging that along with like this notion of literal types where you can", "tokens": [50364, 731, 11, 341, 2657, 575, 257, 2141, 11, 341, 20828, 394, 11, 341, 2141, 300, 393, 980, 385, 437, 264, 3909, 307, 11, 50714, 50714, 570, 498, 341, 2141, 3909, 307, 3732, 11, 550, 286, 458, 437, 7909, 293, 295, 437, 3467, 309, 575, 13, 51046, 51046, 759, 309, 311, 6329, 11, 550, 286, 458, 437, 7909, 293, 437, 3467, 309, 575, 13, 51216, 51216, 407, 309, 311, 445, 1228, 300, 912, 6532, 295, 1333, 295, 2010, 9432, 278, 1228, 27708, 3095, 51511, 51511, 5215, 13, 51561, 51561, 400, 309, 311, 445, 32666, 300, 2051, 365, 411, 341, 10710, 295, 20411, 3467, 689, 291, 393, 51744, 51744], "temperature": 0.0, "avg_logprob": -0.09678837137484769, "compression_ratio": 1.8652173913043477, "no_caption_prob": 4.785071268997854e-06}, {"id": 878, "seek": 333788, "start": 3337.88, "end": 3342.8, "text": " say shape square, the string square.", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 879, "seek": 333788, "start": 3342.8, "end": 3349.8, "text": " And you just and all you have to do is if you if you check if, you know, shape dot shape,", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 880, "seek": 333788, "start": 3349.8, "end": 3352.56, "text": " triple equals square string square.", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 881, "seek": 333788, "start": 3352.56, "end": 3357.34, "text": " Now you've narrowed down that type because it has enough information to infer some things", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 882, "seek": 333788, "start": 3357.34, "end": 3358.4, "text": " about the type based on that.", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 883, "seek": 333788, "start": 3358.4, "end": 3359.92, "text": " So that's how discriminated types work.", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 884, "seek": 333788, "start": 3359.92, "end": 3361.52, "text": " And it's a very cool feature.", "tokens": [50364, 584, 3909, 3732, 11, 264, 6798, 3732, 13, 50610, 50610, 400, 291, 445, 293, 439, 291, 362, 281, 360, 307, 498, 291, 498, 291, 1520, 498, 11, 291, 458, 11, 3909, 5893, 3909, 11, 50960, 50960, 15508, 6915, 3732, 6798, 3732, 13, 51098, 51098, 823, 291, 600, 9432, 292, 760, 300, 2010, 570, 309, 575, 1547, 1589, 281, 13596, 512, 721, 51337, 51337, 466, 264, 2010, 2361, 322, 300, 13, 51390, 51390, 407, 300, 311, 577, 20828, 770, 3467, 589, 13, 51466, 51466, 400, 309, 311, 257, 588, 1627, 4111, 13, 51546, 51546], "temperature": 0.0, "avg_logprob": -0.1536225168328536, "compression_ratio": 1.6525821596244132, "no_caption_prob": 8.939604413171764e-06}, {"id": 885, "seek": 336152, "start": 3361.52, "end": 3369.8, "text": " So the one thing that's very, very different in this regard between element and TypeScript", "tokens": [50364, 407, 264, 472, 551, 300, 311, 588, 11, 588, 819, 294, 341, 3843, 1296, 4478, 293, 15576, 14237, 50778, 50778, 307, 411, 11, 498, 291, 434, 445, 1228, 257, 11121, 1331, 20828, 770, 2010, 11, 309, 1985, 1596, 731, 11, 291, 51054, 51054, 458, 11, 309, 311, 11, 309, 1985, 1238, 709, 411, 291, 576, 2066, 382, 364, 2699, 76, 10754, 13, 51326, 51326, 583, 550, 562, 291, 562, 291, 528, 281, 1884, 364, 42687, 2010, 11, 300, 311, 562, 721, 483, 588, 51566, 51566, 819, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13684562012389467, "compression_ratio": 1.627906976744186, "no_caption_prob": 2.3551470803795382e-05}, {"id": 886, "seek": 336152, "start": 3369.8, "end": 3375.32, "text": " is like, if you're just using a plain old discriminated type, it works quite well, you", "tokens": [50364, 407, 264, 472, 551, 300, 311, 588, 11, 588, 819, 294, 341, 3843, 1296, 4478, 293, 15576, 14237, 50778, 50778, 307, 411, 11, 498, 291, 434, 445, 1228, 257, 11121, 1331, 20828, 770, 2010, 11, 309, 1985, 1596, 731, 11, 291, 51054, 51054, 458, 11, 309, 311, 11, 309, 1985, 1238, 709, 411, 291, 576, 2066, 382, 364, 2699, 76, 10754, 13, 51326, 51326, 583, 550, 562, 291, 562, 291, 528, 281, 1884, 364, 42687, 2010, 11, 300, 311, 562, 721, 483, 588, 51566, 51566, 819, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13684562012389467, "compression_ratio": 1.627906976744186, "no_caption_prob": 2.3551470803795382e-05}, {"id": 887, "seek": 336152, "start": 3375.32, "end": 3380.7599999999998, "text": " know, it's, it works pretty much like you would expect as an Elm developer.", "tokens": [50364, 407, 264, 472, 551, 300, 311, 588, 11, 588, 819, 294, 341, 3843, 1296, 4478, 293, 15576, 14237, 50778, 50778, 307, 411, 11, 498, 291, 434, 445, 1228, 257, 11121, 1331, 20828, 770, 2010, 11, 309, 1985, 1596, 731, 11, 291, 51054, 51054, 458, 11, 309, 311, 11, 309, 1985, 1238, 709, 411, 291, 576, 2066, 382, 364, 2699, 76, 10754, 13, 51326, 51326, 583, 550, 562, 291, 562, 291, 528, 281, 1884, 364, 42687, 2010, 11, 300, 311, 562, 721, 483, 588, 51566, 51566, 819, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13684562012389467, "compression_ratio": 1.627906976744186, "no_caption_prob": 2.3551470803795382e-05}, {"id": 888, "seek": 336152, "start": 3380.7599999999998, "end": 3385.56, "text": " But then when you when you want to create an opaque type, that's when things get very", "tokens": [50364, 407, 264, 472, 551, 300, 311, 588, 11, 588, 819, 294, 341, 3843, 1296, 4478, 293, 15576, 14237, 50778, 50778, 307, 411, 11, 498, 291, 434, 445, 1228, 257, 11121, 1331, 20828, 770, 2010, 11, 309, 1985, 1596, 731, 11, 291, 51054, 51054, 458, 11, 309, 311, 11, 309, 1985, 1238, 709, 411, 291, 576, 2066, 382, 364, 2699, 76, 10754, 13, 51326, 51326, 583, 550, 562, 291, 562, 291, 528, 281, 1884, 364, 42687, 2010, 11, 300, 311, 562, 721, 483, 588, 51566, 51566, 819, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13684562012389467, "compression_ratio": 1.627906976744186, "no_caption_prob": 2.3551470803795382e-05}, {"id": 889, "seek": 336152, "start": 3385.56, "end": 3386.56, "text": " different.", "tokens": [50364, 407, 264, 472, 551, 300, 311, 588, 11, 588, 819, 294, 341, 3843, 1296, 4478, 293, 15576, 14237, 50778, 50778, 307, 411, 11, 498, 291, 434, 445, 1228, 257, 11121, 1331, 20828, 770, 2010, 11, 309, 1985, 1596, 731, 11, 291, 51054, 51054, 458, 11, 309, 311, 11, 309, 1985, 1238, 709, 411, 291, 576, 2066, 382, 364, 2699, 76, 10754, 13, 51326, 51326, 583, 550, 562, 291, 562, 291, 528, 281, 1884, 364, 42687, 2010, 11, 300, 311, 562, 721, 483, 588, 51566, 51566, 819, 13, 51616, 51616], "temperature": 0.0, "avg_logprob": -0.13684562012389467, "compression_ratio": 1.627906976744186, "no_caption_prob": 2.3551470803795382e-05}, {"id": 890, "seek": 338656, "start": 3386.56, "end": 3393.2799999999997, "text": " I don't want to I don't want to say anything that's that's no longer accurate, because", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 891, "seek": 338656, "start": 3393.2799999999997, "end": 3399.92, "text": " I know that there are some changes, like with regard to like private methods, and that sort", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 892, "seek": 338656, "start": 3399.92, "end": 3400.92, "text": " of thing lately.", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 893, "seek": 338656, "start": 3400.92, "end": 3402.68, "text": " So and I'm not familiar with the latest in that.", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 894, "seek": 338656, "start": 3402.68, "end": 3405.08, "text": " So things may change in this regard.", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 895, "seek": 338656, "start": 3405.08, "end": 3408.6, "text": " I also know there's like a feature called branded types.", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 896, "seek": 338656, "start": 3408.6, "end": 3415.24, "text": " And to be honest, I've tried to try to use just use them and I don't understand them.", "tokens": [50364, 286, 500, 380, 528, 281, 286, 500, 380, 528, 281, 584, 1340, 300, 311, 300, 311, 572, 2854, 8559, 11, 570, 50700, 50700, 286, 458, 300, 456, 366, 512, 2962, 11, 411, 365, 3843, 281, 411, 4551, 7150, 11, 293, 300, 1333, 51032, 51032, 295, 551, 12881, 13, 51082, 51082, 407, 293, 286, 478, 406, 4963, 365, 264, 6792, 294, 300, 13, 51170, 51170, 407, 721, 815, 1319, 294, 341, 3843, 13, 51290, 51290, 286, 611, 458, 456, 311, 411, 257, 4111, 1219, 38510, 3467, 13, 51466, 51466, 400, 281, 312, 3245, 11, 286, 600, 3031, 281, 853, 281, 764, 445, 764, 552, 293, 286, 500, 380, 1223, 552, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.14949209648266173, "compression_ratio": 1.7306122448979593, "no_caption_prob": 5.561722718994133e-05}, {"id": 897, "seek": 341524, "start": 3415.24, "end": 3417.3599999999997, "text": " I haven't been able to figure it out.", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 898, "seek": 341524, "start": 3417.3599999999997, "end": 3422.52, "text": " So if you figure it out, try it and like, let me know how it works.", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 899, "seek": 341524, "start": 3422.52, "end": 3424.52, "text": " Yeah, it works.", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 900, "seek": 341524, "start": 3424.52, "end": 3431.9199999999996, "text": " From what I understand, like a branded type allows you to, to do something similar to", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 901, "seek": 341524, "start": 3431.9199999999996, "end": 3434.3599999999997, "text": " an opaque type in Elm.", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 902, "seek": 341524, "start": 3434.3599999999997, "end": 3440.9199999999996, "text": " But all I can all I can say really is that in my personal experience, branded, I've never", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 903, "seek": 341524, "start": 3440.9199999999996, "end": 3443.4799999999996, "text": " seen a branded type in actual use.", "tokens": [50364, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 50470, 50470, 407, 498, 291, 2573, 309, 484, 11, 853, 309, 293, 411, 11, 718, 385, 458, 577, 309, 1985, 13, 50728, 50728, 865, 11, 309, 1985, 13, 50828, 50828, 3358, 437, 286, 1223, 11, 411, 257, 38510, 2010, 4045, 291, 281, 11, 281, 360, 746, 2531, 281, 51198, 51198, 364, 42687, 2010, 294, 2699, 76, 13, 51320, 51320, 583, 439, 286, 393, 439, 286, 393, 584, 534, 307, 300, 294, 452, 2973, 1752, 11, 38510, 11, 286, 600, 1128, 51648, 51648, 1612, 257, 38510, 2010, 294, 3539, 764, 13, 51776, 51776], "temperature": 0.0, "avg_logprob": -0.12715411186218262, "compression_ratio": 1.6063348416289593, "no_caption_prob": 2.6272839022567496e-05}, {"id": 904, "seek": 344348, "start": 3443.48, "end": 3446.2400000000002, "text": " I'm sure there are some libraries that that use it.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 905, "seek": 344348, "start": 3446.2400000000002, "end": 3452.08, "text": " But it like, practically, I don't think people people use branded types on a day to day basis.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 906, "seek": 344348, "start": 3452.08, "end": 3454.32, "text": " Whereas in Elm, people use opaque types.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 907, "seek": 344348, "start": 3454.32, "end": 3459.88, "text": " So that's, that's all I feel I can safely say I think a feature may exist to get the", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 908, "seek": 344348, "start": 3459.88, "end": 3462.64, "text": " same type of functionality as an opaque type.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 909, "seek": 344348, "start": 3462.64, "end": 3464.68, "text": " In practice, I don't think it's very common.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 910, "seek": 344348, "start": 3464.68, "end": 3466.48, "text": " That's something that I think is huge.", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 911, "seek": 344348, "start": 3466.48, "end": 3471.68, "text": " I can't overstate the importance of opaque types as far as like, because soundness is", "tokens": [50364, 286, 478, 988, 456, 366, 512, 15148, 300, 300, 764, 309, 13, 50502, 50502, 583, 309, 411, 11, 15667, 11, 286, 500, 380, 519, 561, 561, 764, 38510, 3467, 322, 257, 786, 281, 786, 5143, 13, 50794, 50794, 13813, 294, 2699, 76, 11, 561, 764, 42687, 3467, 13, 50906, 50906, 407, 300, 311, 11, 300, 311, 439, 286, 841, 286, 393, 11750, 584, 286, 519, 257, 4111, 815, 2514, 281, 483, 264, 51184, 51184, 912, 2010, 295, 14980, 382, 364, 42687, 2010, 13, 51322, 51322, 682, 3124, 11, 286, 500, 380, 519, 309, 311, 588, 2689, 13, 51424, 51424, 663, 311, 746, 300, 286, 519, 307, 2603, 13, 51514, 51514, 286, 393, 380, 670, 15406, 264, 7379, 295, 42687, 3467, 382, 1400, 382, 411, 11, 570, 1626, 1287, 307, 51774, 51774], "temperature": 0.0, "avg_logprob": -0.12402386772901491, "compression_ratio": 1.7941176470588236, "no_caption_prob": 2.1443969671963714e-05}, {"id": 912, "seek": 347168, "start": 3471.68, "end": 3477.08, "text": " one thing, but protecting invariants is actually a separate thing.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 913, "seek": 347168, "start": 3477.08, "end": 3479.44, "text": " It's actually not related to soundness.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 914, "seek": 347168, "start": 3479.44, "end": 3484.94, "text": " And like protecting invariants is more about controlling the internals of an API.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 915, "seek": 347168, "start": 3484.94, "end": 3489.96, "text": " So you know, the only thing that can refer to this is in this one file, I can't touch", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 916, "seek": 347168, "start": 3489.96, "end": 3491.2799999999997, "text": " it outside of there.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 917, "seek": 347168, "start": 3491.2799999999997, "end": 3493.7599999999998, "text": " And this is huge in Elm.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 918, "seek": 347168, "start": 3493.7599999999998, "end": 3499.7599999999998, "text": " And if you're not, you know, if you're not doing this on a regular basis, check out our", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 919, "seek": 347168, "start": 3499.7599999999998, "end": 3501.62, "text": " episode on opaque types.", "tokens": [50364, 472, 551, 11, 457, 12316, 33270, 1719, 307, 767, 257, 4994, 551, 13, 50634, 50634, 467, 311, 767, 406, 4077, 281, 1626, 1287, 13, 50752, 50752, 400, 411, 12316, 33270, 1719, 307, 544, 466, 14905, 264, 2154, 1124, 295, 364, 9362, 13, 51027, 51027, 407, 291, 458, 11, 264, 787, 551, 300, 393, 2864, 281, 341, 307, 294, 341, 472, 3991, 11, 286, 393, 380, 2557, 51278, 51278, 309, 2380, 295, 456, 13, 51344, 51344, 400, 341, 307, 2603, 294, 2699, 76, 13, 51468, 51468, 400, 498, 291, 434, 406, 11, 291, 458, 11, 498, 291, 434, 406, 884, 341, 322, 257, 3890, 5143, 11, 1520, 484, 527, 51768, 51768, 3500, 322, 42687, 3467, 13, 51861, 51861], "temperature": 0.0, "avg_logprob": -0.08179124463506106, "compression_ratio": 1.732, "no_caption_prob": 1.9222390619688667e-05}, {"id": 920, "seek": 350162, "start": 3501.62, "end": 3503.96, "text": " We talk about all the details of that.", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 921, "seek": 350162, "start": 3503.96, "end": 3506.3599999999997, "text": " I think it's a really important technique in Elm.", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 922, "seek": 350162, "start": 3506.3599999999997, "end": 3511.0, "text": " I think it's underused or overly difficult in TypeScript.", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 923, "seek": 350162, "start": 3511.0, "end": 3515.24, "text": " On a different topic, I should say one last thing about discriminated unions.", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 924, "seek": 350162, "start": 3515.24, "end": 3520.7999999999997, "text": " By default, switch statements in TypeScript are not exhaustive and they will not give", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 925, "seek": 350162, "start": 3520.7999999999997, "end": 3523.96, "text": " you a warrant, an error of any kind.", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 926, "seek": 350162, "start": 3523.96, "end": 3529.56, "text": " If you have a non exhaustive case statement, switch statement, there are, there's an ESLint", "tokens": [50364, 492, 751, 466, 439, 264, 4365, 295, 300, 13, 50481, 50481, 286, 519, 309, 311, 257, 534, 1021, 6532, 294, 2699, 76, 13, 50601, 50601, 286, 519, 309, 311, 833, 4717, 420, 24324, 2252, 294, 15576, 14237, 13, 50833, 50833, 1282, 257, 819, 4829, 11, 286, 820, 584, 472, 1036, 551, 466, 20828, 770, 24914, 13, 51045, 51045, 3146, 7576, 11, 3679, 12363, 294, 15576, 14237, 366, 406, 14687, 488, 293, 436, 486, 406, 976, 51323, 51323, 291, 257, 16354, 11, 364, 6713, 295, 604, 733, 13, 51481, 51481, 759, 291, 362, 257, 2107, 14687, 488, 1389, 5629, 11, 3679, 5629, 11, 456, 366, 11, 456, 311, 364, 12564, 43, 686, 51761, 51761], "temperature": 0.0, "avg_logprob": -0.12700146384861158, "compression_ratio": 1.694980694980695, "no_caption_prob": 1.7502627088106237e-05}, {"id": 927, "seek": 352956, "start": 3529.56, "end": 3536.92, "text": " rule that I'll link to in the show notes for how to prevent inexhaustive switch statements.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 928, "seek": 352956, "start": 3536.92, "end": 3539.36, "text": " So you should definitely do that to make TypeScript more safe.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 929, "seek": 352956, "start": 3539.36, "end": 3540.84, "text": " I think that's really crucial.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 930, "seek": 352956, "start": 3540.84, "end": 3542.16, "text": " There is like a trick you can use.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 931, "seek": 352956, "start": 3542.16, "end": 3546.24, "text": " There's a never type in TypeScript, which is pretty much the same as with Elm.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 932, "seek": 352956, "start": 3546.24, "end": 3553.16, "text": " And you can assert that something is unreachable by returning a never type.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 933, "seek": 352956, "start": 3553.16, "end": 3558.32, "text": " So you can do default and then return something that returns never type.", "tokens": [50364, 4978, 300, 286, 603, 2113, 281, 294, 264, 855, 5570, 337, 577, 281, 4871, 29961, 1641, 381, 488, 3679, 12363, 13, 50732, 50732, 407, 291, 820, 2138, 360, 300, 281, 652, 15576, 14237, 544, 3273, 13, 50854, 50854, 286, 519, 300, 311, 534, 11462, 13, 50928, 50928, 821, 307, 411, 257, 4282, 291, 393, 764, 13, 50994, 50994, 821, 311, 257, 1128, 2010, 294, 15576, 14237, 11, 597, 307, 1238, 709, 264, 912, 382, 365, 2699, 76, 13, 51198, 51198, 400, 291, 393, 19810, 300, 746, 307, 517, 16226, 712, 538, 12678, 257, 1128, 2010, 13, 51544, 51544, 407, 291, 393, 360, 7576, 293, 550, 2736, 746, 300, 11247, 1128, 2010, 13, 51802, 51802], "temperature": 0.0, "avg_logprob": -0.08481254248783507, "compression_ratio": 1.7364341085271318, "no_caption_prob": 1.5446048564626835e-05}, {"id": 934, "seek": 355832, "start": 3558.32, "end": 3561.1200000000003, "text": " And it'll say, wait a minute, you can't return a never type.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 935, "seek": 355832, "start": 3561.1200000000003, "end": 3566.28, "text": " But if you can never reach there, then it won't complain.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 936, "seek": 355832, "start": 3566.28, "end": 3567.28, "text": " Exactly.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 937, "seek": 355832, "start": 3567.28, "end": 3572.04, "text": " If you do an exhaustive case and then you say default, return this unreachable never", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 938, "seek": 355832, "start": 3572.04, "end": 3577.2400000000002, "text": " type, then it'll say, well, okay, the default is never going to happen because you handled", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 939, "seek": 355832, "start": 3577.2400000000002, "end": 3578.2400000000002, "text": " every case.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 940, "seek": 355832, "start": 3578.2400000000002, "end": 3582.4, "text": " But that only works as well as you remember to do that.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 941, "seek": 355832, "start": 3582.4, "end": 3584.2400000000002, "text": " And I wouldn't trust that myself.", "tokens": [50364, 400, 309, 603, 584, 11, 1699, 257, 3456, 11, 291, 393, 380, 2736, 257, 1128, 2010, 13, 50504, 50504, 583, 498, 291, 393, 1128, 2524, 456, 11, 550, 309, 1582, 380, 11024, 13, 50762, 50762, 7587, 13, 50812, 50812, 759, 291, 360, 364, 14687, 488, 1389, 293, 550, 291, 584, 7576, 11, 2736, 341, 517, 16226, 712, 1128, 51050, 51050, 2010, 11, 550, 309, 603, 584, 11, 731, 11, 1392, 11, 264, 7576, 307, 1128, 516, 281, 1051, 570, 291, 18033, 51310, 51310, 633, 1389, 13, 51360, 51360, 583, 300, 787, 1985, 382, 731, 382, 291, 1604, 281, 360, 300, 13, 51568, 51568, 400, 286, 2759, 380, 3361, 300, 2059, 13, 51660, 51660], "temperature": 0.0, "avg_logprob": -0.13611542245616085, "compression_ratio": 1.7016806722689075, "no_caption_prob": 1.3419849892670754e-05}, {"id": 942, "seek": 358424, "start": 3584.24, "end": 3590.4799999999996, "text": " I would want it to have a blanket error anytime I do an inexhaustive switch statement.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 943, "seek": 358424, "start": 3590.4799999999996, "end": 3594.3599999999997, "text": " So there are a few things that I find interesting.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 944, "seek": 358424, "start": 3594.3599999999997, "end": 3597.9199999999996, "text": " I haven't played with those in TypeScript.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 945, "seek": 358424, "start": 3597.9199999999996, "end": 3605.64, "text": " But you can kind of do dynamic typing in a sense like these types will depend on other", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 946, "seek": 358424, "start": 3605.64, "end": 3606.64, "text": " types.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 947, "seek": 358424, "start": 3606.64, "end": 3607.64, "text": " Exactly.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 948, "seek": 358424, "start": 3607.64, "end": 3609.7599999999998, "text": " Perhaps dependent typing, if you will.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 949, "seek": 358424, "start": 3609.7599999999998, "end": 3611.24, "text": " No, no.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 950, "seek": 358424, "start": 3611.24, "end": 3612.24, "text": " Don't confuse people.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 951, "seek": 358424, "start": 3612.24, "end": 3613.24, "text": " Don't confuse people.", "tokens": [50364, 286, 576, 528, 309, 281, 362, 257, 17907, 6713, 13038, 286, 360, 364, 29961, 1641, 381, 488, 3679, 5629, 13, 50676, 50676, 407, 456, 366, 257, 1326, 721, 300, 286, 915, 1880, 13, 50870, 50870, 286, 2378, 380, 3737, 365, 729, 294, 15576, 14237, 13, 51048, 51048, 583, 291, 393, 733, 295, 360, 8546, 18444, 294, 257, 2020, 411, 613, 3467, 486, 5672, 322, 661, 51434, 51434, 3467, 13, 51484, 51484, 7587, 13, 51534, 51534, 10517, 12334, 18444, 11, 498, 291, 486, 13, 51640, 51640, 883, 11, 572, 13, 51714, 51714, 1468, 380, 28584, 561, 13, 51764, 51764, 1468, 380, 28584, 561, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.1768108260965793, "compression_ratio": 1.5847457627118644, "no_caption_prob": 1.321178388025146e-05}, {"id": 952, "seek": 361324, "start": 3613.24, "end": 3614.24, "text": " It's not dependent types.", "tokens": [50364, 467, 311, 406, 12334, 3467, 13, 50414, 50414, 286, 1194, 561, 727, 5672, 322, 291, 13, 50702, 50702, 467, 5946, 13, 51052, 51052, 12123, 1670, 291, 1409, 885, 364, 6695, 11346, 13, 51220, 51220, 407, 1338, 11, 291, 362, 746, 294, 15576, 14237, 2010, 1185, 300, 366, 411, 291, 362, 2141, 295, 82, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.342696373922783, "compression_ratio": 1.4620689655172414, "no_caption_prob": 0.00019397960568312556}, {"id": 953, "seek": 361324, "start": 3614.24, "end": 3620.0, "text": " I thought people could depend on you.", "tokens": [50364, 467, 311, 406, 12334, 3467, 13, 50414, 50414, 286, 1194, 561, 727, 5672, 322, 291, 13, 50702, 50702, 467, 5946, 13, 51052, 51052, 12123, 1670, 291, 1409, 885, 364, 6695, 11346, 13, 51220, 51220, 407, 1338, 11, 291, 362, 746, 294, 15576, 14237, 2010, 1185, 300, 366, 411, 291, 362, 2141, 295, 82, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.342696373922783, "compression_ratio": 1.4620689655172414, "no_caption_prob": 0.00019397960568312556}, {"id": 954, "seek": 361324, "start": 3620.0, "end": 3627.0, "text": " It depends.", "tokens": [50364, 467, 311, 406, 12334, 3467, 13, 50414, 50414, 286, 1194, 561, 727, 5672, 322, 291, 13, 50702, 50702, 467, 5946, 13, 51052, 51052, 12123, 1670, 291, 1409, 885, 364, 6695, 11346, 13, 51220, 51220, 407, 1338, 11, 291, 362, 746, 294, 15576, 14237, 2010, 1185, 300, 366, 411, 291, 362, 2141, 295, 82, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.342696373922783, "compression_ratio": 1.4620689655172414, "no_caption_prob": 0.00019397960568312556}, {"id": 955, "seek": 361324, "start": 3627.0, "end": 3630.3599999999997, "text": " Ever since you started being an independent worker.", "tokens": [50364, 467, 311, 406, 12334, 3467, 13, 50414, 50414, 286, 1194, 561, 727, 5672, 322, 291, 13, 50702, 50702, 467, 5946, 13, 51052, 51052, 12123, 1670, 291, 1409, 885, 364, 6695, 11346, 13, 51220, 51220, 407, 1338, 11, 291, 362, 746, 294, 15576, 14237, 2010, 1185, 300, 366, 411, 291, 362, 2141, 295, 82, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.342696373922783, "compression_ratio": 1.4620689655172414, "no_caption_prob": 0.00019397960568312556}, {"id": 956, "seek": 361324, "start": 3630.3599999999997, "end": 3639.6, "text": " So yeah, you have something in TypeScript type system that are like you have key ofs", "tokens": [50364, 467, 311, 406, 12334, 3467, 13, 50414, 50414, 286, 1194, 561, 727, 5672, 322, 291, 13, 50702, 50702, 467, 5946, 13, 51052, 51052, 12123, 1670, 291, 1409, 885, 364, 6695, 11346, 13, 51220, 51220, 407, 1338, 11, 291, 362, 746, 294, 15576, 14237, 2010, 1185, 300, 366, 411, 291, 362, 2141, 295, 82, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.342696373922783, "compression_ratio": 1.4620689655172414, "no_caption_prob": 0.00019397960568312556}, {"id": 957, "seek": 363960, "start": 3639.6, "end": 3648.7599999999998, "text": " and type of where you can say, oh, this type here, that's just going to be any key of this", "tokens": [50364, 293, 2010, 295, 689, 291, 393, 584, 11, 1954, 11, 341, 2010, 510, 11, 300, 311, 445, 516, 281, 312, 604, 2141, 295, 341, 50822, 50822, 2136, 13, 50872, 50872, 400, 550, 15576, 14237, 9624, 484, 721, 322, 1080, 1065, 13, 51134, 51134, 286, 2378, 380, 3737, 365, 729, 293, 286, 500, 380, 458, 498, 309, 311, 498, 436, 434, 1880, 420, 498, 436, 434, 51430, 51430, 2671, 10153, 11, 445, 411, 577, 570, 436, 1813, 12334, 322, 437, 661, 3089, 307, 884, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19550134918906473, "compression_ratio": 1.5603864734299517, "no_caption_prob": 1.892477484943811e-05}, {"id": 958, "seek": 363960, "start": 3648.7599999999998, "end": 3649.7599999999998, "text": " record.", "tokens": [50364, 293, 2010, 295, 689, 291, 393, 584, 11, 1954, 11, 341, 2010, 510, 11, 300, 311, 445, 516, 281, 312, 604, 2141, 295, 341, 50822, 50822, 2136, 13, 50872, 50872, 400, 550, 15576, 14237, 9624, 484, 721, 322, 1080, 1065, 13, 51134, 51134, 286, 2378, 380, 3737, 365, 729, 293, 286, 500, 380, 458, 498, 309, 311, 498, 436, 434, 1880, 420, 498, 436, 434, 51430, 51430, 2671, 10153, 11, 445, 411, 577, 570, 436, 1813, 12334, 322, 437, 661, 3089, 307, 884, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19550134918906473, "compression_ratio": 1.5603864734299517, "no_caption_prob": 1.892477484943811e-05}, {"id": 959, "seek": 363960, "start": 3649.7599999999998, "end": 3655.0, "text": " And then TypeScript figures out things on its own.", "tokens": [50364, 293, 2010, 295, 689, 291, 393, 584, 11, 1954, 11, 341, 2010, 510, 11, 300, 311, 445, 516, 281, 312, 604, 2141, 295, 341, 50822, 50822, 2136, 13, 50872, 50872, 400, 550, 15576, 14237, 9624, 484, 721, 322, 1080, 1065, 13, 51134, 51134, 286, 2378, 380, 3737, 365, 729, 293, 286, 500, 380, 458, 498, 309, 311, 498, 436, 434, 1880, 420, 498, 436, 434, 51430, 51430, 2671, 10153, 11, 445, 411, 577, 570, 436, 1813, 12334, 322, 437, 661, 3089, 307, 884, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19550134918906473, "compression_ratio": 1.5603864734299517, "no_caption_prob": 1.892477484943811e-05}, {"id": 960, "seek": 363960, "start": 3655.0, "end": 3660.92, "text": " I haven't played with those and I don't know if it's if they're interesting or if they're", "tokens": [50364, 293, 2010, 295, 689, 291, 393, 584, 11, 1954, 11, 341, 2010, 510, 11, 300, 311, 445, 516, 281, 312, 604, 2141, 295, 341, 50822, 50822, 2136, 13, 50872, 50872, 400, 550, 15576, 14237, 9624, 484, 721, 322, 1080, 1065, 13, 51134, 51134, 286, 2378, 380, 3737, 365, 729, 293, 286, 500, 380, 458, 498, 309, 311, 498, 436, 434, 1880, 420, 498, 436, 434, 51430, 51430, 2671, 10153, 11, 445, 411, 577, 570, 436, 1813, 12334, 322, 437, 661, 3089, 307, 884, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19550134918906473, "compression_ratio": 1.5603864734299517, "no_caption_prob": 1.892477484943811e-05}, {"id": 961, "seek": 363960, "start": 3660.92, "end": 3669.24, "text": " foot guns, just like how because they become dependent on what other code is doing.", "tokens": [50364, 293, 2010, 295, 689, 291, 393, 584, 11, 1954, 11, 341, 2010, 510, 11, 300, 311, 445, 516, 281, 312, 604, 2141, 295, 341, 50822, 50822, 2136, 13, 50872, 50872, 400, 550, 15576, 14237, 9624, 484, 721, 322, 1080, 1065, 13, 51134, 51134, 286, 2378, 380, 3737, 365, 729, 293, 286, 500, 380, 458, 498, 309, 311, 498, 436, 434, 1880, 420, 498, 436, 434, 51430, 51430, 2671, 10153, 11, 445, 411, 577, 570, 436, 1813, 12334, 322, 437, 661, 3089, 307, 884, 13, 51846, 51846], "temperature": 0.0, "avg_logprob": -0.19550134918906473, "compression_ratio": 1.5603864734299517, "no_caption_prob": 1.892477484943811e-05}, {"id": 962, "seek": 366924, "start": 3669.24, "end": 3674.2, "text": " And I feel like we're coming back to the argument about let variables and no type annotations", "tokens": [50364, 400, 286, 841, 411, 321, 434, 1348, 646, 281, 264, 6770, 466, 718, 9102, 293, 572, 2010, 25339, 763, 50612, 50612, 670, 456, 689, 498, 746, 2962, 11, 286, 733, 295, 528, 281, 458, 13, 50890, 50890, 407, 307, 309, 733, 295, 411, 19320, 1324, 420, 307, 309, 534, 1880, 30, 51198, 51198, 286, 914, 11, 286, 519, 309, 286, 393, 380, 1710, 281, 264, 2671, 10153, 295, 309, 886, 709, 570, 286, 2378, 380, 20381, 51600, 51600, 604, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.2088391667320615, "compression_ratio": 1.5265700483091786, "no_caption_prob": 1.0783180186990649e-05}, {"id": 963, "seek": 366924, "start": 3674.2, "end": 3679.7599999999998, "text": " over there where if something changes, I kind of want to know.", "tokens": [50364, 400, 286, 841, 411, 321, 434, 1348, 646, 281, 264, 6770, 466, 718, 9102, 293, 572, 2010, 25339, 763, 50612, 50612, 670, 456, 689, 498, 746, 2962, 11, 286, 733, 295, 528, 281, 458, 13, 50890, 50890, 407, 307, 309, 733, 295, 411, 19320, 1324, 420, 307, 309, 534, 1880, 30, 51198, 51198, 286, 914, 11, 286, 519, 309, 286, 393, 380, 1710, 281, 264, 2671, 10153, 295, 309, 886, 709, 570, 286, 2378, 380, 20381, 51600, 51600, 604, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.2088391667320615, "compression_ratio": 1.5265700483091786, "no_caption_prob": 1.0783180186990649e-05}, {"id": 964, "seek": 366924, "start": 3679.7599999999998, "end": 3685.9199999999996, "text": " So is it kind of like laziness or is it really interesting?", "tokens": [50364, 400, 286, 841, 411, 321, 434, 1348, 646, 281, 264, 6770, 466, 718, 9102, 293, 572, 2010, 25339, 763, 50612, 50612, 670, 456, 689, 498, 746, 2962, 11, 286, 733, 295, 528, 281, 458, 13, 50890, 50890, 407, 307, 309, 733, 295, 411, 19320, 1324, 420, 307, 309, 534, 1880, 30, 51198, 51198, 286, 914, 11, 286, 519, 309, 286, 393, 380, 1710, 281, 264, 2671, 10153, 295, 309, 886, 709, 570, 286, 2378, 380, 20381, 51600, 51600, 604, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.2088391667320615, "compression_ratio": 1.5265700483091786, "no_caption_prob": 1.0783180186990649e-05}, {"id": 965, "seek": 366924, "start": 3685.9199999999996, "end": 3693.9599999999996, "text": " I mean, I think it I can't speak to the foot guns of it too much because I haven't encountered", "tokens": [50364, 400, 286, 841, 411, 321, 434, 1348, 646, 281, 264, 6770, 466, 718, 9102, 293, 572, 2010, 25339, 763, 50612, 50612, 670, 456, 689, 498, 746, 2962, 11, 286, 733, 295, 528, 281, 458, 13, 50890, 50890, 407, 307, 309, 733, 295, 411, 19320, 1324, 420, 307, 309, 534, 1880, 30, 51198, 51198, 286, 914, 11, 286, 519, 309, 286, 393, 380, 1710, 281, 264, 2671, 10153, 295, 309, 886, 709, 570, 286, 2378, 380, 20381, 51600, 51600, 604, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.2088391667320615, "compression_ratio": 1.5265700483091786, "no_caption_prob": 1.0783180186990649e-05}, {"id": 966, "seek": 366924, "start": 3693.9599999999996, "end": 3694.9599999999996, "text": " any.", "tokens": [50364, 400, 286, 841, 411, 321, 434, 1348, 646, 281, 264, 6770, 466, 718, 9102, 293, 572, 2010, 25339, 763, 50612, 50612, 670, 456, 689, 498, 746, 2962, 11, 286, 733, 295, 528, 281, 458, 13, 50890, 50890, 407, 307, 309, 733, 295, 411, 19320, 1324, 420, 307, 309, 534, 1880, 30, 51198, 51198, 286, 914, 11, 286, 519, 309, 286, 393, 380, 1710, 281, 264, 2671, 10153, 295, 309, 886, 709, 570, 286, 2378, 380, 20381, 51600, 51600, 604, 13, 51650, 51650], "temperature": 0.0, "avg_logprob": -0.2088391667320615, "compression_ratio": 1.5265700483091786, "no_caption_prob": 1.0783180186990649e-05}, {"id": 967, "seek": 369496, "start": 3694.96, "end": 3699.7200000000003, "text": " There may be, but it certainly is a complexity in the type system.", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 968, "seek": 369496, "start": 3699.7200000000003, "end": 3704.84, "text": " And we've talked about this before, how like, I mean, I'll give my rant again briefly.", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 969, "seek": 369496, "start": 3704.84, "end": 3711.12, "text": " The reason we can trust types as like a proof about our programs is because of their simplicity.", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 970, "seek": 369496, "start": 3711.12, "end": 3716.7200000000003, "text": " Like the program itself is a proof to you could follow the flow and prove what it can", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 971, "seek": 369496, "start": 3716.7200000000003, "end": 3718.4, "text": " and can't do it.", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 972, "seek": 369496, "start": 3718.4, "end": 3723.0, "text": " But types give us a very simple proof that we can follow easily.", "tokens": [50364, 821, 815, 312, 11, 457, 309, 3297, 307, 257, 14024, 294, 264, 2010, 1185, 13, 50602, 50602, 400, 321, 600, 2825, 466, 341, 949, 11, 577, 411, 11, 286, 914, 11, 286, 603, 976, 452, 45332, 797, 10515, 13, 50858, 50858, 440, 1778, 321, 393, 3361, 3467, 382, 411, 257, 8177, 466, 527, 4268, 307, 570, 295, 641, 25632, 13, 51172, 51172, 1743, 264, 1461, 2564, 307, 257, 8177, 281, 291, 727, 1524, 264, 3095, 293, 7081, 437, 309, 393, 51452, 51452, 293, 393, 380, 360, 309, 13, 51536, 51536, 583, 3467, 976, 505, 257, 588, 2199, 8177, 300, 321, 393, 1524, 3612, 13, 51766, 51766], "temperature": 0.0, "avg_logprob": -0.1263990225615325, "compression_ratio": 1.6587301587301588, "no_caption_prob": 5.920476542087272e-05}, {"id": 973, "seek": 372300, "start": 3723.0, "end": 3730.76, "text": " So the utility of a type is that we can, you know, our brains are able to track what the", "tokens": [50364, 407, 264, 14877, 295, 257, 2010, 307, 300, 321, 393, 11, 291, 458, 11, 527, 15442, 366, 1075, 281, 2837, 437, 264, 50752, 50752, 3467, 366, 570, 309, 311, 2199, 293, 264, 2010, 1185, 393, 854, 505, 24825, 729, 2199, 18491, 13, 51124, 51124, 400, 321, 393, 1778, 466, 527, 3089, 1101, 300, 636, 13, 51260, 51260, 407, 264, 25632, 295, 2010, 3652, 393, 312, 472, 295, 264, 4965, 4122, 295, 309, 13, 51470, 51470, 400, 341, 3297, 10860, 14024, 281, 264, 2010, 1185, 11, 597, 727, 652, 309, 6081, 281, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.09807174080296567, "compression_ratio": 1.7268722466960353, "no_caption_prob": 2.6841621547646355e-06}, {"id": 974, "seek": 372300, "start": 3730.76, "end": 3738.2, "text": " types are because it's simple and the type system can help us enforce those simple constraints.", "tokens": [50364, 407, 264, 14877, 295, 257, 2010, 307, 300, 321, 393, 11, 291, 458, 11, 527, 15442, 366, 1075, 281, 2837, 437, 264, 50752, 50752, 3467, 366, 570, 309, 311, 2199, 293, 264, 2010, 1185, 393, 854, 505, 24825, 729, 2199, 18491, 13, 51124, 51124, 400, 321, 393, 1778, 466, 527, 3089, 1101, 300, 636, 13, 51260, 51260, 407, 264, 25632, 295, 2010, 3652, 393, 312, 472, 295, 264, 4965, 4122, 295, 309, 13, 51470, 51470, 400, 341, 3297, 10860, 14024, 281, 264, 2010, 1185, 11, 597, 727, 652, 309, 6081, 281, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.09807174080296567, "compression_ratio": 1.7268722466960353, "no_caption_prob": 2.6841621547646355e-06}, {"id": 975, "seek": 372300, "start": 3738.2, "end": 3740.92, "text": " And we can reason about our code better that way.", "tokens": [50364, 407, 264, 14877, 295, 257, 2010, 307, 300, 321, 393, 11, 291, 458, 11, 527, 15442, 366, 1075, 281, 2837, 437, 264, 50752, 50752, 3467, 366, 570, 309, 311, 2199, 293, 264, 2010, 1185, 393, 854, 505, 24825, 729, 2199, 18491, 13, 51124, 51124, 400, 321, 393, 1778, 466, 527, 3089, 1101, 300, 636, 13, 51260, 51260, 407, 264, 25632, 295, 2010, 3652, 393, 312, 472, 295, 264, 4965, 4122, 295, 309, 13, 51470, 51470, 400, 341, 3297, 10860, 14024, 281, 264, 2010, 1185, 11, 597, 727, 652, 309, 6081, 281, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.09807174080296567, "compression_ratio": 1.7268722466960353, "no_caption_prob": 2.6841621547646355e-06}, {"id": 976, "seek": 372300, "start": 3740.92, "end": 3745.12, "text": " So the simplicity of type systems can be one of the core features of it.", "tokens": [50364, 407, 264, 14877, 295, 257, 2010, 307, 300, 321, 393, 11, 291, 458, 11, 527, 15442, 366, 1075, 281, 2837, 437, 264, 50752, 50752, 3467, 366, 570, 309, 311, 2199, 293, 264, 2010, 1185, 393, 854, 505, 24825, 729, 2199, 18491, 13, 51124, 51124, 400, 321, 393, 1778, 466, 527, 3089, 1101, 300, 636, 13, 51260, 51260, 407, 264, 25632, 295, 2010, 3652, 393, 312, 472, 295, 264, 4965, 4122, 295, 309, 13, 51470, 51470, 400, 341, 3297, 10860, 14024, 281, 264, 2010, 1185, 11, 597, 727, 652, 309, 6081, 281, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.09807174080296567, "compression_ratio": 1.7268722466960353, "no_caption_prob": 2.6841621547646355e-06}, {"id": 977, "seek": 372300, "start": 3745.12, "end": 3749.64, "text": " And this certainly adds complexity to the type system, which could make it harder to", "tokens": [50364, 407, 264, 14877, 295, 257, 2010, 307, 300, 321, 393, 11, 291, 458, 11, 527, 15442, 366, 1075, 281, 2837, 437, 264, 50752, 50752, 3467, 366, 570, 309, 311, 2199, 293, 264, 2010, 1185, 393, 854, 505, 24825, 729, 2199, 18491, 13, 51124, 51124, 400, 321, 393, 1778, 466, 527, 3089, 1101, 300, 636, 13, 51260, 51260, 407, 264, 25632, 295, 2010, 3652, 393, 312, 472, 295, 264, 4965, 4122, 295, 309, 13, 51470, 51470, 400, 341, 3297, 10860, 14024, 281, 264, 2010, 1185, 11, 597, 727, 652, 309, 6081, 281, 51696, 51696], "temperature": 0.0, "avg_logprob": -0.09807174080296567, "compression_ratio": 1.7268722466960353, "no_caption_prob": 2.6841621547646355e-06}, {"id": 978, "seek": 374964, "start": 3749.64, "end": 3754.4, "text": " follow the correctness of your program potentially.", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 979, "seek": 374964, "start": 3754.4, "end": 3760.6, "text": " But I know that like you can do some really interesting like metaprogramming type things", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 980, "seek": 374964, "start": 3760.6, "end": 3764.3399999999997, "text": " as library author using these types of features.", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 981, "seek": 374964, "start": 3764.3399999999997, "end": 3769.2, "text": " So there's like, there are some utility types and there are some really powerful like features", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 982, "seek": 374964, "start": 3769.2, "end": 3770.2, "text": " in the type system.", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 983, "seek": 374964, "start": 3770.2, "end": 3776.68, "text": " And I know that like the, you know, the Prisma team, for example, that have this like ORM", "tokens": [50364, 1524, 264, 3006, 1287, 295, 428, 1461, 7263, 13, 50602, 50602, 583, 286, 458, 300, 411, 291, 393, 360, 512, 534, 1880, 411, 1131, 569, 340, 1342, 2810, 2010, 721, 50912, 50912, 382, 6405, 3793, 1228, 613, 3467, 295, 4122, 13, 51099, 51099, 407, 456, 311, 411, 11, 456, 366, 512, 14877, 3467, 293, 456, 366, 512, 534, 4005, 411, 4122, 51342, 51342, 294, 264, 2010, 1185, 13, 51392, 51392, 400, 286, 458, 300, 411, 264, 11, 291, 458, 11, 264, 2114, 14795, 1469, 11, 337, 1365, 11, 300, 362, 341, 411, 19654, 44, 51716, 51716], "temperature": 0.0, "avg_logprob": -0.13113943411379445, "compression_ratio": 1.7433628318584071, "no_caption_prob": 6.962111456232378e-06}, {"id": 984, "seek": 377668, "start": 3776.68, "end": 3783.44, "text": " sort of like, you know, database invocation tool that uses TypeScript to make type safe", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 985, "seek": 377668, "start": 3783.44, "end": 3784.72, "text": " database queries.", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 986, "seek": 377668, "start": 3784.72, "end": 3788.12, "text": " They make heavy use of these advanced TypeScript features.", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 987, "seek": 377668, "start": 3788.12, "end": 3793.0, "text": " You know, if you like Google, Prisma, advanced TypeScript, you'll probably find some of their", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 988, "seek": 377668, "start": 3793.0, "end": 3794.72, "text": " like meetup talks and stuff.", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 989, "seek": 377668, "start": 3794.72, "end": 3798.6, "text": " I've watched some of them and they're very hard to follow.", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 990, "seek": 377668, "start": 3798.6, "end": 3804.18, "text": " My TypeScript foo is not advanced enough to follow the techniques they're using, but there", "tokens": [50364, 1333, 295, 411, 11, 291, 458, 11, 8149, 1048, 27943, 2290, 300, 4960, 15576, 14237, 281, 652, 2010, 3273, 50702, 50702, 8149, 24109, 13, 50766, 50766, 814, 652, 4676, 764, 295, 613, 7339, 15576, 14237, 4122, 13, 50936, 50936, 509, 458, 11, 498, 291, 411, 3329, 11, 2114, 14795, 11, 7339, 15576, 14237, 11, 291, 603, 1391, 915, 512, 295, 641, 51180, 51180, 411, 1677, 1010, 6686, 293, 1507, 13, 51266, 51266, 286, 600, 6337, 512, 295, 552, 293, 436, 434, 588, 1152, 281, 1524, 13, 51460, 51460, 1222, 15576, 14237, 726, 78, 307, 406, 7339, 1547, 281, 1524, 264, 7512, 436, 434, 1228, 11, 457, 456, 51739, 51739], "temperature": 0.0, "avg_logprob": -0.11133399310412707, "compression_ratio": 1.7620967741935485, "no_caption_prob": 5.771814812760567e-06}, {"id": 991, "seek": 380418, "start": 3804.18, "end": 3809.18, "text": " are some really advanced things you could do to build tools like Prisma where you can", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 992, "seek": 380418, "start": 3809.18, "end": 3814.04, "text": " describe the set of database queries you can make with a particular schema, which is very", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 993, "seek": 380418, "start": 3814.04, "end": 3815.04, "text": " cool.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 994, "seek": 380418, "start": 3815.04, "end": 3820.8399999999997, "text": " Another interesting thing in TypeScript is like there's no tuple type in TypeScript.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 995, "seek": 380418, "start": 3820.8399999999997, "end": 3821.8399999999997, "text": " There's just arrays.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 996, "seek": 380418, "start": 3821.8399999999997, "end": 3822.8399999999997, "text": " There is?", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 997, "seek": 380418, "start": 3822.8399999999997, "end": 3823.8399999999997, "text": " Well, right.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 998, "seek": 380418, "start": 3823.8399999999997, "end": 3827.94, "text": " They're technically, what I mean to say is the tuple type is not distinct from an array.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 999, "seek": 380418, "start": 3827.94, "end": 3830.54, "text": " It's more of like a literal type.", "tokens": [50364, 366, 512, 534, 7339, 721, 291, 727, 360, 281, 1322, 3873, 411, 2114, 14795, 689, 291, 393, 50614, 50614, 6786, 264, 992, 295, 8149, 24109, 291, 393, 652, 365, 257, 1729, 34078, 11, 597, 307, 588, 50857, 50857, 1627, 13, 50907, 50907, 3996, 1880, 551, 294, 15576, 14237, 307, 411, 456, 311, 572, 2604, 781, 2010, 294, 15576, 14237, 13, 51197, 51197, 821, 311, 445, 41011, 13, 51247, 51247, 821, 307, 30, 51297, 51297, 1042, 11, 558, 13, 51347, 51347, 814, 434, 12120, 11, 437, 286, 914, 281, 584, 307, 264, 2604, 781, 2010, 307, 406, 10644, 490, 364, 10225, 13, 51552, 51552, 467, 311, 544, 295, 411, 257, 20411, 2010, 13, 51682, 51682], "temperature": 0.0, "avg_logprob": -0.12539122844564504, "compression_ratio": 1.6401515151515151, "no_caption_prob": 2.4439762000838527e-06}, {"id": 1000, "seek": 383054, "start": 3830.54, "end": 3836.04, "text": " It's like a literal of an array with two entries.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1001, "seek": 383054, "start": 3836.04, "end": 3837.2799999999997, "text": " Yeah.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1002, "seek": 383054, "start": 3837.2799999999997, "end": 3840.0, "text": " There's a tuple type, but there's no tuple value.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1003, "seek": 383054, "start": 3840.0, "end": 3841.0, "text": " Right.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1004, "seek": 383054, "start": 3841.0, "end": 3843.06, "text": " It's not a distinct special type.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1005, "seek": 383054, "start": 3843.06, "end": 3847.06, "text": " It's more like a literal, just like a discriminated union.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1006, "seek": 383054, "start": 3847.06, "end": 3848.38, "text": " It's not really a type.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1007, "seek": 383054, "start": 3848.38, "end": 3854.92, "text": " It's like a literal and it uses these sort of type narrowing techniques with the conditional", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1008, "seek": 383054, "start": 3854.92, "end": 3856.84, "text": " control flow to check that.", "tokens": [50364, 467, 311, 411, 257, 20411, 295, 364, 10225, 365, 732, 23041, 13, 50639, 50639, 865, 13, 50701, 50701, 821, 311, 257, 2604, 781, 2010, 11, 457, 456, 311, 572, 2604, 781, 2158, 13, 50837, 50837, 1779, 13, 50887, 50887, 467, 311, 406, 257, 10644, 2121, 2010, 13, 50990, 50990, 467, 311, 544, 411, 257, 20411, 11, 445, 411, 257, 20828, 770, 11671, 13, 51190, 51190, 467, 311, 406, 534, 257, 2010, 13, 51256, 51256, 467, 311, 411, 257, 20411, 293, 309, 4960, 613, 1333, 295, 2010, 9432, 278, 7512, 365, 264, 27708, 51583, 51583, 1969, 3095, 281, 1520, 300, 13, 51679, 51679], "temperature": 0.0, "avg_logprob": -0.14513384378873384, "compression_ratio": 1.6908212560386473, "no_caption_prob": 1.7880614677778794e-06}, {"id": 1009, "seek": 385684, "start": 3856.84, "end": 3861.8, "text": " So, yeah, you can say this is an array, but specifically it's a subset of arrays.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1010, "seek": 385684, "start": 3861.8, "end": 3862.88, "text": " It's not just any array.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1011, "seek": 385684, "start": 3862.88, "end": 3867.06, "text": " It's the subset of arrays that contain two values of this type, which I think is very", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1012, "seek": 385684, "start": 3867.06, "end": 3868.06, "text": " cool.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1013, "seek": 385684, "start": 3868.06, "end": 3872.92, "text": " Whereas in Elm, a tuple is more like a nominal type.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1014, "seek": 385684, "start": 3872.92, "end": 3877.9, "text": " It's kind of an in between sort of thing because it actually is like a special thing, but I", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1015, "seek": 385684, "start": 3877.9, "end": 3879.6800000000003, "text": " think that's a cool feature of TypeScript.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1016, "seek": 385684, "start": 3879.6800000000003, "end": 3880.6800000000003, "text": " Yeah.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1017, "seek": 385684, "start": 3880.6800000000003, "end": 3883.52, "text": " And there's no upper size limits for tuples in TypeScript.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1018, "seek": 385684, "start": 3883.52, "end": 3884.52, "text": " Right.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1019, "seek": 385684, "start": 3884.52, "end": 3885.88, "text": " For better and for worse.", "tokens": [50364, 407, 11, 1338, 11, 291, 393, 584, 341, 307, 364, 10225, 11, 457, 4682, 309, 311, 257, 25993, 295, 41011, 13, 50612, 50612, 467, 311, 406, 445, 604, 10225, 13, 50666, 50666, 467, 311, 264, 25993, 295, 41011, 300, 5304, 732, 4190, 295, 341, 2010, 11, 597, 286, 519, 307, 588, 50875, 50875, 1627, 13, 50925, 50925, 13813, 294, 2699, 76, 11, 257, 2604, 781, 307, 544, 411, 257, 41641, 2010, 13, 51168, 51168, 467, 311, 733, 295, 364, 294, 1296, 1333, 295, 551, 570, 309, 767, 307, 411, 257, 2121, 551, 11, 457, 286, 51417, 51417, 519, 300, 311, 257, 1627, 4111, 295, 15576, 14237, 13, 51506, 51506, 865, 13, 51556, 51556, 400, 456, 311, 572, 6597, 2744, 10406, 337, 2604, 2622, 294, 15576, 14237, 13, 51698, 51698, 1779, 13, 51748, 51748, 1171, 1101, 293, 337, 5324, 13, 51816, 51816], "temperature": 0.0, "avg_logprob": -0.1466440320848585, "compression_ratio": 1.704225352112676, "no_caption_prob": 8.800916475593112e-06}, {"id": 1020, "seek": 388588, "start": 3885.88, "end": 3895.6, "text": " Can you give me a short summary on the differences between interface and type and declare, I", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1021, "seek": 388588, "start": 3895.6, "end": 3896.6, "text": " think?", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1022, "seek": 388588, "start": 3896.6, "end": 3900.48, "text": " It is short too much to ask.", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1023, "seek": 388588, "start": 3900.48, "end": 3903.2000000000003, "text": " Type aliases versus interfaces.", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1024, "seek": 388588, "start": 3903.2000000000003, "end": 3909.76, "text": " There's like a lot of debate around which is better, which is like faster for compiler", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1025, "seek": 388588, "start": 3909.76, "end": 3914.56, "text": " performance, which has whatever.", "tokens": [50364, 1664, 291, 976, 385, 257, 2099, 12691, 322, 264, 7300, 1296, 9226, 293, 2010, 293, 19710, 11, 286, 50850, 50850, 519, 30, 50900, 50900, 467, 307, 2099, 886, 709, 281, 1029, 13, 51094, 51094, 15576, 10198, 1957, 5717, 28416, 13, 51230, 51230, 821, 311, 411, 257, 688, 295, 7958, 926, 597, 307, 1101, 11, 597, 307, 411, 4663, 337, 31958, 51558, 51558, 3389, 11, 597, 575, 2035, 13, 51798, 51798], "temperature": 0.0, "avg_logprob": -0.2778109179602729, "compression_ratio": 1.5217391304347827, "no_caption_prob": 3.763479980989359e-05}, {"id": 1026, "seek": 391456, "start": 3914.56, "end": 3921.04, "text": " I think I've heard people have this discussion and I don't think there's like a clear answer.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1027, "seek": 391456, "start": 3921.04, "end": 3923.4, "text": " At least there's not a concise way to describe it.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1028, "seek": 391456, "start": 3923.4, "end": 3929.04, "text": " I tend to just use type aliases because it feels more natural as an Elm developer to", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1029, "seek": 391456, "start": 3929.04, "end": 3933.48, "text": " use a type alias to like an object type definition.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1030, "seek": 391456, "start": 3933.48, "end": 3935.64, "text": " So that would be the type keyword, right?", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1031, "seek": 391456, "start": 3935.64, "end": 3936.64, "text": " Yep.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1032, "seek": 391456, "start": 3936.64, "end": 3937.64, "text": " Exactly right.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1033, "seek": 391456, "start": 3937.64, "end": 3938.64, "text": " Yep.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1034, "seek": 391456, "start": 3938.64, "end": 3939.64, "text": " And then interface.", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1035, "seek": 391456, "start": 3939.64, "end": 3943.2, "text": " Because, yeah, because it's like...", "tokens": [50364, 286, 519, 286, 600, 2198, 561, 362, 341, 5017, 293, 286, 500, 380, 519, 456, 311, 411, 257, 1850, 1867, 13, 50688, 50688, 1711, 1935, 456, 311, 406, 257, 44882, 636, 281, 6786, 309, 13, 50806, 50806, 286, 3928, 281, 445, 764, 2010, 10198, 1957, 570, 309, 3417, 544, 3303, 382, 364, 2699, 76, 10754, 281, 51088, 51088, 764, 257, 2010, 419, 4609, 281, 411, 364, 2657, 2010, 7123, 13, 51310, 51310, 407, 300, 576, 312, 264, 2010, 20428, 11, 558, 30, 51418, 51418, 7010, 13, 51468, 51468, 7587, 558, 13, 51518, 51518, 7010, 13, 51568, 51568, 400, 550, 9226, 13, 51618, 51618, 1436, 11, 1338, 11, 570, 309, 311, 411, 485, 51796, 51796], "temperature": 0.0, "avg_logprob": -0.1970238521181304, "compression_ratio": 1.6290322580645162, "no_caption_prob": 1.6187314031412825e-05}, {"id": 1036, "seek": 394320, "start": 3943.2, "end": 3944.7599999999998, "text": " Is interface about objects?", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1037, "seek": 394320, "start": 3944.7599999999998, "end": 3949.2, "text": " Yeah, interface is like saying that it's an object with a subset of particular keys.", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1038, "seek": 394320, "start": 3949.2, "end": 3952.68, "text": " And then there's like strange stuff where many different types of things are actually", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1039, "seek": 394320, "start": 3952.68, "end": 3954.08, "text": " objects under the hood.", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1040, "seek": 394320, "start": 3954.08, "end": 3959.52, "text": " So you can extend the array type in TypeScript and there's all sorts of...", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1041, "seek": 394320, "start": 3959.52, "end": 3966.8799999999997, "text": " So personally, I just like not to think about those details and I just use type, the type", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1042, "seek": 394320, "start": 3966.8799999999997, "end": 3967.8799999999997, "text": " keyword.", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1043, "seek": 394320, "start": 3967.8799999999997, "end": 3968.8799999999997, "text": " But that's just me.", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1044, "seek": 394320, "start": 3968.8799999999997, "end": 3969.8799999999997, "text": " Yeah.", "tokens": [50364, 1119, 9226, 466, 6565, 30, 50442, 50442, 865, 11, 9226, 307, 411, 1566, 300, 309, 311, 364, 2657, 365, 257, 25993, 295, 1729, 9317, 13, 50664, 50664, 400, 550, 456, 311, 411, 5861, 1507, 689, 867, 819, 3467, 295, 721, 366, 767, 50838, 50838, 6565, 833, 264, 13376, 13, 50908, 50908, 407, 291, 393, 10101, 264, 10225, 2010, 294, 15576, 14237, 293, 456, 311, 439, 7527, 295, 485, 51180, 51180, 407, 5665, 11, 286, 445, 411, 406, 281, 519, 466, 729, 4365, 293, 286, 445, 764, 2010, 11, 264, 2010, 51548, 51548, 20428, 13, 51598, 51598, 583, 300, 311, 445, 385, 13, 51648, 51648, 865, 13, 51698, 51698], "temperature": 0.0, "avg_logprob": -0.13773908615112304, "compression_ratio": 1.6549019607843136, "no_caption_prob": 1.101580664908397e-06}, {"id": 1045, "seek": 396988, "start": 3969.88, "end": 3973.56, "text": " And that's because you don't want to use JavaScript, you want to use a typed language.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1046, "seek": 396988, "start": 3973.56, "end": 3974.56, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1047, "seek": 396988, "start": 3974.56, "end": 3981.28, "text": " You don't see TypeScript as a linter, you see TypeScript as a language with types that you", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1048, "seek": 396988, "start": 3981.28, "end": 3982.92, "text": " can use and understand.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1049, "seek": 396988, "start": 3982.92, "end": 3983.92, "text": " Yes.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1050, "seek": 396988, "start": 3983.92, "end": 3990.92, "text": " And I also prefer to pretend that inheritance doesn't exist because it's very confusing", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1051, "seek": 396988, "start": 3990.92, "end": 3996.0, "text": " in general and particularly confusing with prototypal inheritance in JavaScript.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1052, "seek": 396988, "start": 3996.0, "end": 3997.0, "text": " Yeah.", "tokens": [50364, 400, 300, 311, 570, 291, 500, 380, 528, 281, 764, 15778, 11, 291, 528, 281, 764, 257, 33941, 2856, 13, 50548, 50548, 865, 13, 50598, 50598, 509, 500, 380, 536, 15576, 14237, 382, 257, 287, 5106, 11, 291, 536, 15576, 14237, 382, 257, 2856, 365, 3467, 300, 291, 50934, 50934, 393, 764, 293, 1223, 13, 51016, 51016, 1079, 13, 51066, 51066, 400, 286, 611, 4382, 281, 11865, 300, 32122, 1177, 380, 2514, 570, 309, 311, 588, 13181, 51416, 51416, 294, 2674, 293, 4098, 13181, 365, 46219, 31862, 32122, 294, 15778, 13, 51670, 51670, 865, 13, 51720, 51720], "temperature": 0.0, "avg_logprob": -0.19664643027565695, "compression_ratio": 1.8341232227488151, "no_caption_prob": 1.3845319699612446e-05}, {"id": 1053, "seek": 399700, "start": 3997.0, "end": 4004.04, "text": " Well, I think we've covered things fairly thoroughly.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1054, "seek": 399700, "start": 4004.04, "end": 4008.64, "text": " In a very systematic and organized fashion.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1055, "seek": 399700, "start": 4008.64, "end": 4010.04, "text": " Yes.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1056, "seek": 399700, "start": 4010.04, "end": 4012.44, "text": " So, now...", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1057, "seek": 399700, "start": 4012.44, "end": 4014.8, "text": " Oh, let's see.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1058, "seek": 399700, "start": 4014.8, "end": 4019.76, "text": " Now definitely check out this TypeScript blind spots blog post.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1059, "seek": 399700, "start": 4019.76, "end": 4023.0, "text": " I have like a few other cases to be aware of.", "tokens": [50364, 1042, 11, 286, 519, 321, 600, 5343, 721, 6457, 17987, 13, 50716, 50716, 682, 257, 588, 27249, 293, 9983, 6700, 13, 50946, 50946, 1079, 13, 51016, 51016, 407, 11, 586, 485, 51136, 51136, 876, 11, 718, 311, 536, 13, 51254, 51254, 823, 2138, 1520, 484, 341, 15576, 14237, 6865, 10681, 6968, 2183, 13, 51502, 51502, 286, 362, 411, 257, 1326, 661, 3331, 281, 312, 3650, 295, 13, 51664, 51664], "temperature": 0.0, "avg_logprob": -0.278854746214101, "compression_ratio": 1.3370786516853932, "no_caption_prob": 3.591181666706689e-05}, {"id": 1060, "seek": 402300, "start": 4023.0, "end": 4029.16, "text": " And again, please, truly, if there's anything else that you are aware of that introduces", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1061, "seek": 402300, "start": 4029.16, "end": 4035.4, "text": " unsoundness into the TypeScript type system, let me know and I will catalog it there because", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1062, "seek": 402300, "start": 4035.4, "end": 4039.72, "text": " I think that's just a good thing to know, where you can trust it and where you can't.", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1063, "seek": 402300, "start": 4039.72, "end": 4041.16, "text": " But check that out.", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1064, "seek": 402300, "start": 4041.16, "end": 4046.16, "text": " I've also mentioned my TypeScript without transpilation post before that kind of talks", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1065, "seek": 402300, "start": 4046.16, "end": 4050.24, "text": " about using js.comments to get type information.", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1066, "seek": 402300, "start": 4050.24, "end": 4052.0, "text": " I think that's a useful technique.", "tokens": [50364, 400, 797, 11, 1767, 11, 4908, 11, 498, 456, 311, 1340, 1646, 300, 291, 366, 3650, 295, 300, 31472, 50672, 50672, 2693, 554, 1287, 666, 264, 15576, 14237, 2010, 1185, 11, 718, 385, 458, 293, 286, 486, 19746, 309, 456, 570, 50984, 50984, 286, 519, 300, 311, 445, 257, 665, 551, 281, 458, 11, 689, 291, 393, 3361, 309, 293, 689, 291, 393, 380, 13, 51200, 51200, 583, 1520, 300, 484, 13, 51272, 51272, 286, 600, 611, 2835, 452, 15576, 14237, 1553, 7132, 16067, 2183, 949, 300, 733, 295, 6686, 51522, 51522, 466, 1228, 42713, 13, 1112, 1117, 281, 483, 2010, 1589, 13, 51726, 51726, 286, 519, 300, 311, 257, 4420, 6532, 13, 51814, 51814], "temperature": 0.0, "avg_logprob": -0.13373431996402577, "compression_ratio": 1.6838235294117647, "no_caption_prob": 4.9083104386227205e-05}, {"id": 1067, "seek": 405200, "start": 4052.0, "end": 4053.8, "text": " So we'll link to that blog post.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1068, "seek": 405200, "start": 4053.8, "end": 4055.08, "text": " Any other good resources?", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1069, "seek": 405200, "start": 4055.08, "end": 4057.92, "text": " And what if I want to use Elm with TypeScript?", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1070, "seek": 405200, "start": 4057.92, "end": 4061.08, "text": " Oh, well, I'm glad you asked.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1071, "seek": 405200, "start": 4061.08, "end": 4062.08, "text": " Elm TS Interop.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1072, "seek": 405200, "start": 4062.08, "end": 4067.72, "text": " I'm actually just releasing a new version of the community edition and a new doc site", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1073, "seek": 405200, "start": 4067.72, "end": 4068.72, "text": " today.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1074, "seek": 405200, "start": 4068.72, "end": 4071.6, "text": " So by the time you hear this, it'll already be out.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1075, "seek": 405200, "start": 4071.6, "end": 4078.28, "text": " As well as a new pipeline API and codec API for the Elm TS JSON API.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1076, "seek": 405200, "start": 4078.28, "end": 4079.64, "text": " So yeah, check that out.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1077, "seek": 405200, "start": 4079.64, "end": 4081.76, "text": " Check out our Elm TS Interop episode.", "tokens": [50364, 407, 321, 603, 2113, 281, 300, 6968, 2183, 13, 50454, 50454, 2639, 661, 665, 3593, 30, 50518, 50518, 400, 437, 498, 286, 528, 281, 764, 2699, 76, 365, 15576, 14237, 30, 50660, 50660, 876, 11, 731, 11, 286, 478, 5404, 291, 2351, 13, 50818, 50818, 2699, 76, 37645, 5751, 404, 13, 50868, 50868, 286, 478, 767, 445, 16327, 257, 777, 3037, 295, 264, 1768, 11377, 293, 257, 777, 3211, 3621, 51150, 51150, 965, 13, 51200, 51200, 407, 538, 264, 565, 291, 1568, 341, 11, 309, 603, 1217, 312, 484, 13, 51344, 51344, 1018, 731, 382, 257, 777, 15517, 9362, 293, 3089, 66, 9362, 337, 264, 2699, 76, 37645, 31828, 9362, 13, 51678, 51678, 407, 1338, 11, 1520, 300, 484, 13, 51746, 51746, 6881, 484, 527, 2699, 76, 37645, 5751, 404, 3500, 13, 51852, 51852], "temperature": 0.0, "avg_logprob": -0.14100982161129222, "compression_ratio": 1.5677655677655677, "no_caption_prob": 3.1692205084254965e-05}, {"id": 1078, "seek": 408176, "start": 4081.76, "end": 4083.1600000000003, "text": " What other resources are there?", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1079, "seek": 408176, "start": 4083.1600000000003, "end": 4087.6000000000004, "text": " The TypeScript documentation site has a lot of good examples.", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1080, "seek": 408176, "start": 4087.6000000000004, "end": 4093.5600000000004, "text": " Do you know of any TypeScript to Elm comparison files or something?", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1081, "seek": 408176, "start": 4093.5600000000004, "end": 4096.08, "text": " That's a good question.", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1082, "seek": 408176, "start": 4096.08, "end": 4104.08, "text": " There are a bunch of search results, but a lot of them are these generic stack ups type", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1083, "seek": 408176, "start": 4104.08, "end": 4108.72, "text": " sites that I don't find that useful because they're sort of mechanical.", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1084, "seek": 408176, "start": 4108.72, "end": 4111.4400000000005, "text": " But if we find a good one, we'll link to it.", "tokens": [50364, 708, 661, 3593, 366, 456, 30, 50434, 50434, 440, 15576, 14237, 14333, 3621, 575, 257, 688, 295, 665, 5110, 13, 50656, 50656, 1144, 291, 458, 295, 604, 15576, 14237, 281, 2699, 76, 9660, 7098, 420, 746, 30, 50954, 50954, 663, 311, 257, 665, 1168, 13, 51080, 51080, 821, 366, 257, 3840, 295, 3164, 3542, 11, 457, 257, 688, 295, 552, 366, 613, 19577, 8630, 15497, 2010, 51480, 51480, 7533, 300, 286, 500, 380, 915, 300, 4420, 570, 436, 434, 1333, 295, 12070, 13, 51712, 51712, 583, 498, 321, 915, 257, 665, 472, 11, 321, 603, 2113, 281, 309, 13, 51848, 51848], "temperature": 0.0, "avg_logprob": -0.22176425896801996, "compression_ratio": 1.5789473684210527, "no_caption_prob": 3.0717201298102736e-05}, {"id": 1085, "seek": 411144, "start": 4111.44, "end": 4112.44, "text": " Yeah.", "tokens": [50364, 865, 13, 50414, 50414, 1057, 558, 13, 50464, 50464, 1042, 11, 1826, 958, 565, 13, 50520, 50520, 9088, 958, 565, 13, 50545], "temperature": 0.0, "avg_logprob": -0.21747974554697672, "compression_ratio": 1.0980392156862746, "no_caption_prob": 7.964589167386293e-05}, {"id": 1086, "seek": 411144, "start": 4112.44, "end": 4113.44, "text": " All right.", "tokens": [50364, 865, 13, 50414, 50414, 1057, 558, 13, 50464, 50464, 1042, 11, 1826, 958, 565, 13, 50520, 50520, 9088, 958, 565, 13, 50545], "temperature": 0.0, "avg_logprob": -0.21747974554697672, "compression_ratio": 1.0980392156862746, "no_caption_prob": 7.964589167386293e-05}, {"id": 1087, "seek": 411144, "start": 4113.44, "end": 4114.5599999999995, "text": " Well, until next time.", "tokens": [50364, 865, 13, 50414, 50414, 1057, 558, 13, 50464, 50464, 1042, 11, 1826, 958, 565, 13, 50520, 50520, 9088, 958, 565, 13, 50545], "temperature": 0.0, "avg_logprob": -0.21747974554697672, "compression_ratio": 1.0980392156862746, "no_caption_prob": 7.964589167386293e-05}, {"id": 1088, "seek": 411456, "start": 4114.56, "end": 4141.64, "text": " Until next time.", "tokens": [50364, 9088, 958, 565, 13, 51718], "temperature": 0.0, "avg_logprob": -0.5480251652853829, "compression_ratio": 0.6666666666666666, "no_caption_prob": 6.388042675098404e-05}], "language": "en"}